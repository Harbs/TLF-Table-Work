<?xml version="1.0" encoding="utf-8"?>
<!--

  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.

-->
<UnitTester testDir="mobile/MobileApplication/keys/"  
	xmlns:fx="http://ns.adobe.com/mxml/2009" 
	xmlns:s="library://ns.adobe.com/flex/spark" 
	xmlns:mx="library://ns.adobe.com/flex/mx"
	xmlns="*" 
	testSWF="MobileApplicationWithViews.mxml">
    
	<!-- This set of lines form a template that must be in each unit test. -->
    <fx:Script>
        <![CDATA[
        public static function init(o:DisplayObject):void
        {
        }           
        ]]>
    </fx:Script>
    
    <fx:Metadata>
        <![CDATA[
            [Mixin]
        ]]>
    </fx:Metadata>  
    <!-- end of set of lines that must be in each unit test -->

    <fx:Script>
        <![CDATA[
			import components.*;
			import mx.core.FlexGlobals;
			import spark.components.View;
			import spark.components.ViewNavigator;
			
			public function activeView() : View {
				return navigator().activeView;
			}

			public function navigator() : ViewNavigator {
				return FlexGlobals.topLevelApplication.navigator;
			}
			
        ]]>
    </fx:Script>

    <testCases>
        <!-- pressing back key will pop view -->
		<TestCase testID="mobileApp_backKey_popView" description="Press device back key to go back to the previous view" keywords="[MobileApplication, View]">
			<setup>
				<RunCode code="FlexGlobals.topLevelApplication.resetApp()" waitTarget="navigator" waitEvent="resetComplete"/>
				<RunCode code="navigator().pushView(components.View1)" waitTarget="navigator" waitEvent="viewChangeComplete"/>
				<RunCode code="navigator().pushView(components.View2)" waitTarget="navigator" waitEvent="viewChangeComplete"/>
				<RunCode code="navigator().pushView(components.View3)" waitTarget="navigator" waitEvent="viewChangeComplete"/>
			</setup>
            <body>
				<AssertMethodValue method="value = (FlexGlobals.topLevelApplication.navigator.activeView is View3)" value="true"/>
				<DispatchKeyEvent keys="[BACK]" waitTarget="navigator" waitEvent="viewChangeComplete" />
				<AssertMethodValue method="value = (FlexGlobals.topLevelApplication.navigator.activeView is View2)" value="true"/>
				<DispatchKeyEvent keys="[BACK]" waitTarget="navigator" waitEvent="viewChangeComplete" />
				<AssertMethodValue method="value = (FlexGlobals.topLevelApplication.navigator.activeView is View1)" value="true"/>
            </body>
        </TestCase>

		<!-- pressing back key when menu is open should close it -->
		<TestCase testID="mobileApp_backKey_closeMenu" description="Press device back key to close view menu" keywords="[MobileApplication, View, ViewMenu]">
			<setup>
				<RunCode code="FlexGlobals.topLevelApplication.resetApp()" waitTarget="navigator" waitEvent="resetComplete"/>
				<RunCode code="navigator().pushView(components.View4)" waitTarget="navigator" waitEvent="viewChangeComplete"/>
			</setup>
            <body>
				<AssertMethodValue method="value = (FlexGlobals.topLevelApplication.navigator.activeView is View4)" value="true"/>
				<DispatchKeyEvent keys="[MENU]" waitTarget="navigator.activeView" waitEvent="viewMenuOpen" />
				<AssertMethodValue method="value = (FlexGlobals.topLevelApplication.viewMenuOpen == true)" value="true"/>
				<DispatchKeyEvent keys="[BACK]"  waitTarget="navigator.activeView" waitEvent="viewMenuClose" />
				<AssertMethodValue method="value = (FlexGlobals.topLevelApplication.viewMenuOpen == false)" value="true"/>
				<AssertMethodValue method="value = (FlexGlobals.topLevelApplication.navigator.activeView is View4)" value="true"/>
			</body>
        </TestCase>
		

    </testCases>

</UnitTester>
