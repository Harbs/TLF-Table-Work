<?xml version="1.0" encoding="utf-8"?>
<!--

  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.

-->
<UnitTester testDir="mobile/components/DateSpinner/events/"  
			xmlns="*"
			xmlns:fx="http://ns.adobe.com/mxml/2009"
			xmlns:mx="library://ns.adobe.com/flex/mx"
			xmlns:s="library://ns.adobe.com/flex/spark"
			testSWF="DateSpinnerMain.mxml"> 
	
	<fx:Script>
		<![CDATA[
			import views.EventView; 
			import spark.components.calendarClasses.DateSelectorDisplayMode;
			
			public static function init(o:DisplayObject):void
			{
			}
		]]>
	</fx:Script>
	
	<fx:Metadata>
		<![CDATA[
		    [Mixin]
		]]>
	</fx:Metadata>
	<!--Date mode: Scroll 2 years (176,135) to (176,205)-->
	<!--Date mode: Scroll 2 day (132,135) to (132,205)-->
	<!--Date mode: Scroll 2 months (50,135) to (50,205)-->
	<!--Time mode: Scroll 2 hours (25,135) to (25,205)-->
	<!--Time mode: Scroll 2 mins (60,135) to (60,205)-->
	<!--DateAndTime mode: Scroll 2 dates (60,135) to (60,205)-->
	<!--DateAndTime mode: Scroll 2 hours (135,135) to (135,205)-->
	<!--DateAndTime mode: Scroll 2 mins (170,135) to (170,205)-->
    
	<!-- TODO: Should these AssertEvents be improved to check property values and types? -->
    
	<!--This test file is to test event of spark DateSpinner-->
	<testCases>
		<!--Test cases for manually change the columns to verify both valueCommit and change event are all dispatched-->
		
        <TestCase testID="DS_event_dateMode_year_change_valueCommit" description="date mode, change year manually to dispatch both change and valueCommit event" keywords="[DateSpinner, event]">
			<setup>
				<ResetComponent target="navigator" className="comps.QANavigator" waitEvent="viewChangeComplete" />
				<RunCode code="application.navigator.pushView(views.EventView)" waitTarget="navigator" waitEvent="viewChangeComplete" timeout="18000" />
			</setup>
			<body>
				<SimulateMouseGesture target="{application.navigator.activeView.ds.getYearSpinner()}" dragYFrom="130" dragYTo="205" dragXFrom="5" dragXTo="5" waitEvent="touchInteractionEnd" recordedDPI="160"/>
				<AssertEvent target="navigator.activeView.ds" eventName="change" eventClass="flash.events::Event" />
				<AssertEvent target="navigator.activeView.ds" eventName="valueCommit" eventClass="mx.events::FlexEvent" />
			</body>
		</TestCase>
        
		<TestCase testID="DS_event_dateMode_month_change_valueCommit" description="date mode, change month manually to dispatch both change and valueCommit event" keywords="[DateSpinner, event]">
			<setup>
				<ResetComponent target="navigator" className="comps.QANavigator" waitEvent="viewChangeComplete" />
				<RunCode code="application.navigator.pushView(views.EventView)" waitTarget="navigator" waitEvent="viewChangeComplete" timeout="18000" />
			</setup>
			<body>
				<SimulateMouseGesture target="{application.navigator.activeView.ds.getMonthSpinner()}" dragYFrom="135" dragYTo="205" dragXFrom="5" dragXTo="5" waitEvent="touchInteractionEnd" recordedDPI="160"/>
				<AssertEvent target="navigator.activeView.ds" eventName="change" eventClass="flash.events::Event" />
				<AssertEvent target="navigator.activeView.ds" eventName="valueCommit" eventClass="mx.events::FlexEvent" />
			</body>
		</TestCase>
        
		<TestCase testID="DS_event_dateMode_day_change_valueCommit" description="date mode, change day manually to dispatch both change and valueCommit event" keywords="[DateSpinner, event]">
			<setup>
				<ResetComponent target="navigator" className="comps.QANavigator" waitEvent="viewChangeComplete" />
				<RunCode code="application.navigator.pushView(views.EventView)" waitTarget="navigator" waitEvent="viewChangeComplete" timeout="18000" />
			</setup>
			<body>
				<SimulateMouseGesture target="{application.navigator.activeView.ds.getDateSpinner()}" dragYFrom="135" dragYTo="205" dragXFrom="5" dragXTo="5" waitEvent="touchInteractionEnd" recordedDPI="160"/>
				<AssertEvent target="navigator.activeView.ds" eventName="change" eventClass="flash.events::Event" />
				<AssertEvent target="navigator.activeView.ds" eventName="valueCommit" eventClass="mx.events::FlexEvent" />
			</body>
		</TestCase>
        
		<TestCase testID="DS_event_timeMode_hours_change_valueCommit" description="time mode, change hours manually to dispatch both change and valueCommit event" keywords="[DateSpinner, event]">
			<setup>
				<ResetComponent target="navigator" className="comps.QANavigator" waitEvent="viewChangeComplete" />
				<RunCode code="application.navigator.pushView(views.EventView)" waitTarget="navigator" waitEvent="viewChangeComplete" timeout="18000" />
				<SetProperty propertyName="displayMode" target="navigator.activeView.ds" valueExpression="value=DateSelectorDisplayMode.TIME" waitEvent="updateComplete"/>
			</setup>
			<body>
				<SimulateMouseGesture target="{application.navigator.activeView.ds.getHourSpinner()}" dragYFrom="135" dragYTo="205" dragXFrom="5" dragXTo="5" waitEvent="touchInteractionEnd" recordedDPI="160"/>
				<AssertEvent target="navigator.activeView.ds" eventName="change" eventClass="flash.events::Event" />
				<AssertEvent target="navigator.activeView.ds" eventName="valueCommit" eventClass="mx.events::FlexEvent" />
			</body>
		</TestCase>
        
		<TestCase testID="DS_event_timeMode_minutes_change_valueCommit" description="time mode, change minutes manually to dispatch both change and valueCommit event" keywords="[DateSpinner, event]">
			<setup>
				<ResetComponent target="navigator" className="comps.QANavigator" waitEvent="viewChangeComplete" />
				<RunCode code="application.navigator.pushView(views.EventView)" waitTarget="navigator" waitEvent="viewChangeComplete" timeout="18000" />
				<SetProperty propertyName="displayMode" target="navigator.activeView.ds" valueExpression="value=DateSelectorDisplayMode.TIME" waitEvent="updateComplete"/>
			</setup>
			<body>
				<SimulateMouseGesture target="{application.navigator.activeView.ds.getMinuteSpinner()}" dragYFrom="135" dragYTo="205" dragXFrom="5" dragXTo="5" waitEvent="touchInteractionEnd" recordedDPI="160"/>
				<AssertEvent target="navigator.activeView.ds" eventName="change" eventClass="flash.events::Event" />
				<AssertEvent target="navigator.activeView.ds" eventName="valueCommit" eventClass="mx.events::FlexEvent" />
			</body>
		</TestCase>
        
		<TestCase testID="DS_event_dateAndTimeMode_date_change_valueCommit" description="dateAndTime mode, change date manually to dispatch both change and valueCommit event" keywords="[DateSpinner, event]">
			<setup>
				<ResetComponent target="navigator" className="comps.QANavigator" waitEvent="viewChangeComplete" />
				<RunCode code="application.navigator.pushView(views.EventView)" waitTarget="navigator" waitEvent="viewChangeComplete" timeout="18000" />
				<SetProperty propertyName="displayMode" target="navigator.activeView.ds" valueExpression="value=DateSelectorDisplayMode.DATE_AND_TIME" waitEvent="updateComplete"/>
			</setup>
			<body>
				<SimulateMouseGesture target="{application.navigator.activeView.ds.getDateSpinner()}" dragYFrom="135" dragYTo="205" dragXFrom="5" dragXTo="5" waitEvent="touchInteractionEnd" recordedDPI="160"/>
				<AssertEvent target="navigator.activeView.ds" eventName="change" eventClass="flash.events::Event" />
				<AssertEvent target="navigator.activeView.ds" eventName="valueCommit" eventClass="mx.events::FlexEvent" />
			</body>
		</TestCase>
        
		<TestCase testID="DS_event_dateAndTimeMode_hours_change_valueCommit" description="dateAndTime mode, change hours manually to dispatch both change and valueCommit event" keywords="[DateSpinner, event]">
			<setup>
				<ResetComponent target="navigator" className="comps.QANavigator" waitEvent="viewChangeComplete" />
				<RunCode code="application.navigator.pushView(views.EventView)" waitTarget="navigator" waitEvent="viewChangeComplete" timeout="18000" />
				<SetProperty propertyName="displayMode" target="navigator.activeView.ds" valueExpression="value=DateSelectorDisplayMode.DATE_AND_TIME" waitEvent="updateComplete"/>
			</setup>
			<body>
				<SimulateMouseGesture target="{application.navigator.activeView.ds.getHourSpinner()}" dragYFrom="135" dragYTo="205" dragXFrom="5" dragXTo="5" waitEvent="touchInteractionEnd" recordedDPI="160"/>
				<AssertEvent target="navigator.activeView.ds" eventName="change" eventClass="flash.events::Event" />
				<AssertEvent target="navigator.activeView.ds" eventName="valueCommit" eventClass="mx.events::FlexEvent" />
			</body>
		</TestCase>
        
		<TestCase testID="DS_event_dateAndTimeMode_minutes_change_valueCommit" description="dateAndTime mode, change minutes manually to dispatch both change and valueCommit event" keywords="[DateSpinner, event]">
			<setup>
				<ResetComponent target="navigator" className="comps.QANavigator" waitEvent="viewChangeComplete" />
				<RunCode code="application.navigator.pushView(views.EventView)" waitTarget="navigator" waitEvent="viewChangeComplete" timeout="18000" />
				<SetProperty propertyName="displayMode" target="navigator.activeView.ds" valueExpression="value=DateSelectorDisplayMode.DATE_AND_TIME" waitEvent="updateComplete"/>
			</setup>
			<body>
				<SimulateMouseGesture target="{application.navigator.activeView.ds.getMinuteSpinner()}" dragYFrom="135" dragYTo="205" dragXFrom="5" dragXTo="5" waitEvent="touchInteractionEnd" recordedDPI="160"/>
				<AssertEvent target="navigator.activeView.ds" eventName="change" eventClass="flash.events::Event" />
				<AssertEvent target="navigator.activeView.ds" eventName="valueCommit" eventClass="mx.events::FlexEvent" />
			</body>
		</TestCase>
        
		<!--Test cases for programatically change the columns to verify only valueCommit event is dispatched and no change event-->
		<TestCase testID="DS_event_dateMode_year_valueCommit" description="date mode, change year manually to dispatch only valueCommit event" keywords="[DateSpinner, event]">
			<setup>
				<ResetComponent target="navigator" className="comps.QANavigator" waitEvent="viewChangeComplete" />
				<RunCode code="application.navigator.pushView(views.EventView)" waitTarget="navigator" waitEvent="viewChangeComplete" timeout="18000" />
			</setup>
			<body>
				<!--Programatically to scroll the year column-->
				<SetProperty propertyName="selectedDate" target="navigator.activeView.ds_binding" valueExpression="value=new Date(2012,5,10,13,30)"/>
				<AssertEvent target="navigator.activeView.ds_binding" eventName="valueCommit" eventClass="mx.events::FlexEvent" />
				<AssertNoEvent target="navigator.activeView.ds_binding" eventName="change" eventClass="flash.events::Event" />
			</body>
		</TestCase>
        
		<TestCase testID="DS_event_dateMode_month_valueCommit" description="date mode, change month manually to dispatch only valueCommit event" keywords="[DateSpinner, event]">
			<setup>
				<ResetComponent target="navigator" className="comps.QANavigator" waitEvent="viewChangeComplete" />
				<RunCode code="application.navigator.pushView(views.EventView)" waitTarget="navigator" waitEvent="viewChangeComplete" timeout="18000" />
				<SetProperty propertyName="displayMode" target="navigator.activeView.ds_binding" valueExpression="value=DateSelectorDisplayMode.DATE"/>
			</setup>
			<body>
				<!--Programatically to scroll the month column-->
				<SetProperty propertyName="selectedDate" target="navigator.activeView.ds_binding" valueExpression="value=new Date(2011,1,10,13,30)"/>
				<AssertNoEvent target="navigator.activeView.ds_binding" eventName="change" eventClass="flash.events::Event" />
				<AssertEvent target="navigator.activeView.ds_binding" eventName="valueCommit" eventClass="mx.events::FlexEvent" />
			</body>
		</TestCase>
        
		<TestCase testID="DS_event_dateMode_day_valueCommit" description="date mode, change day manually to dispatch only valueCommit event" keywords="[DateSpinner, event]">
			<setup>
				<ResetComponent target="navigator" className="comps.QANavigator" waitEvent="viewChangeComplete" />
				<RunCode code="application.navigator.pushView(views.EventView)" waitTarget="navigator" waitEvent="viewChangeComplete" timeout="18000" />
			</setup>
			<body>
				<!--Programatically to scroll the day column-->
				<SetProperty propertyName="selectedDate" target="navigator.activeView.ds_binding" valueExpression="value=new Date(2011,5,1,13,30)"/>
				<AssertNoEvent target="navigator.activeView.ds_binding" eventName="change" eventClass="flash.events::Event" />
				<AssertEvent target="navigator.activeView.ds_binding" eventName="valueCommit" eventClass="mx.events::FlexEvent" />
			</body>
		</TestCase>
        
		<TestCase testID="DS_event_dateMode_year_day_valueCommit" description="date mode, change year and day manually to dispatch only valueCommit event" keywords="[DateSpinner, event]">
			<setup>
				<ResetComponent target="navigator" className="comps.QANavigator" waitEvent="viewChangeComplete" />
				<RunCode code="application.navigator.pushView(views.EventView)" waitTarget="navigator" waitEvent="viewChangeComplete" timeout="18000" />
			</setup>
			<body>
				<!--Programatically to scroll the year column-->
				<SetProperty propertyName="selectedDate" target="navigator.activeView.ds_binding" valueExpression="value=new Date(2012,5,10,13,30)"/>
				<!--Programatically to scroll the day column-->
				<SetProperty propertyName="selectedDate" target="navigator.activeView.ds_binding" valueExpression="value=new Date(2011,5,1,13,30)"/>
				<AssertNoEvent target="navigator.activeView.ds_binding" eventName="change" eventClass="flash.events::Event" />
				<AssertEvent target="navigator.activeView.ds_binding" eventName="valueCommit" eventClass="mx.events::FlexEvent" />
			</body>
		</TestCase>
        
		<TestCase testID="DS_event_dateMode_year_month_valueCommit" description="date mode, change year and month manually to dispatch only valueCommit event" keywords="[DateSpinner, event]">
			<setup>
				<ResetComponent target="navigator" className="comps.QANavigator" waitEvent="viewChangeComplete" />
				<RunCode code="application.navigator.pushView(views.EventView)" waitTarget="navigator" waitEvent="viewChangeComplete" timeout="18000" />
			</setup>
			<body>
				<!--Programatically to scroll the year column-->
				<SetProperty propertyName="selectedDate" target="navigator.activeView.ds_binding" valueExpression="value=new Date(2012,5,10,13,30)"/>
				<!--Programatically to scroll the month column-->
				<SetProperty propertyName="selectedDate" target="navigator.activeView.ds_binding" valueExpression="value=new Date(2011,1,10,13,30)"/>
				<AssertNoEvent target="navigator.activeView.ds_binding" eventName="change" eventClass="flash.events::Event" />
				<AssertEvent target="navigator.activeView.ds_binding" eventName="valueCommit" eventClass="mx.events::FlexEvent" />
			</body>
		</TestCase>
        
		<TestCase testID="DS_event_dateMode_month_day_valueCommit" description="date mode, change month and day manually to dispatch only valueCommit event" keywords="[DateSpinner, event]">
			<setup>
				<ResetComponent target="navigator" className="comps.QANavigator" waitEvent="viewChangeComplete" />
				<RunCode code="application.navigator.pushView(views.EventView)" waitTarget="navigator" waitEvent="viewChangeComplete" timeout="18000" />
			</setup>
			<body>
				<!--Programatically to scroll the month column-->
				<SetProperty propertyName="selectedDate" target="navigator.activeView.ds_binding" valueExpression="value=new Date(2011,1,10,13,30)"/>
				<!--Programatically to scroll the day column-->
				<SetProperty propertyName="selectedDate" target="navigator.activeView.ds_binding" valueExpression="value=new Date(2011,5,1,13,30)"/>
				<AssertNoEvent target="navigator.activeView.ds_binding" eventName="change" eventClass="flash.events::Event" />
				<AssertEvent target="navigator.activeView.ds_binding" eventName="valueCommit" eventClass="mx.events::FlexEvent" />
			</body>
		</TestCase>
        
		<TestCase testID="DS_event_dateMode_year_month_day_valueCommit" description="date mode, change year, month and day manually to dispatch only valueCommit event" keywords="[DateSpinner, event]">
			<setup>
				<ResetComponent target="navigator" className="comps.QANavigator" waitEvent="viewChangeComplete" />
				<RunCode code="application.navigator.pushView(views.EventView)" waitTarget="navigator" waitEvent="viewChangeComplete" timeout="18000" />
			</setup>
			<body>
				<!--Programatically to scroll the year column-->
				<SetProperty propertyName="selectedDate" target="navigator.activeView.ds_binding" valueExpression="value=new Date(2012,5,10,13,30)"/>
				<!--Programatically to scroll the month column-->
				<SetProperty propertyName="selectedDate" target="navigator.activeView.ds_binding" valueExpression="value=new Date(2011,1,10,13,30)"/>
				<!--Programatically to scroll the day column-->
				<SetProperty propertyName="selectedDate" target="navigator.activeView.ds_binding" valueExpression="value=new Date(2011,5,1,13,30)"/>
				<AssertNoEvent target="navigator.activeView.ds_binding" eventName="change" eventClass="flash.events::Event" />
				<AssertEvent target="navigator.activeView.ds_binding" eventName="valueCommit" eventClass="mx.events::FlexEvent" />
			</body>
		</TestCase>
        
		<TestCase testID="DS_event_timeMode_hours_valueCommit" description="time mode, change hours manually to dispatch only valueCommit event" keywords="[DateSpinner, event]">
			<setup>
				<ResetComponent target="navigator" className="comps.QANavigator" waitEvent="viewChangeComplete" />
				<RunCode code="application.navigator.pushView(views.EventView)" waitTarget="navigator" waitEvent="viewChangeComplete" timeout="18000" />
				<SetProperty propertyName="displayMode" target="navigator.activeView.ds_binding" valueExpression="value=DateSelectorDisplayMode.TIME" waitEvent="updateComplete"/>
			</setup>
			<body>
				<!--Programatically to scroll the hours column-->
				<SetProperty propertyName="selectedDate" target="navigator.activeView.ds_binding" valueExpression="value=new Date(2011,5,10,11,30)"/>
				<AssertNoEvent target="navigator.activeView.ds_binding" eventName="change" eventClass="flash.events::Event" />
				<AssertEvent target="navigator.activeView.ds_binding" eventName="valueCommit" eventClass="mx.events::FlexEvent" />
			</body>
		</TestCase>
        
		<TestCase testID="DS_event_timeMode_minutes_valueCommit" description="time mode, change minutes manually to dispatch only valueCommit event" keywords="[DateSpinner, event]">
			<setup>
				<ResetComponent target="navigator" className="comps.QANavigator" waitEvent="viewChangeComplete" />
				<RunCode code="application.navigator.pushView(views.EventView)" waitTarget="navigator" waitEvent="viewChangeComplete" timeout="18000" />
				<SetProperty propertyName="displayMode" target="navigator.activeView.ds_binding" valueExpression="value=DateSelectorDisplayMode.TIME" waitEvent="updateComplete"/>
			</setup>
			<body>
				<!--Programatically to scroll the minutes column-->
				<SetProperty propertyName="selectedDate" target="navigator.activeView.ds_binding" valueExpression="value=new Date(2011,5,10,13,50)"/>
				<AssertNoEvent target="navigator.activeView.ds_binding" eventName="change" eventClass="flash.events::Event" />
				<AssertEvent target="navigator.activeView.ds_binding" eventName="valueCommit" eventClass="mx.events::FlexEvent" />
			</body>
		</TestCase>
        
		<TestCase testID="DS_event_timeMode_hours_minutes_valueCommit" description="time mode, change hours and minutes manually to dispatch only valueCommit event" keywords="[DateSpinner, event]">
			<setup>
				<ResetComponent target="navigator" className="comps.QANavigator" waitEvent="viewChangeComplete" />
				<RunCode code="application.navigator.pushView(views.EventView)" waitTarget="navigator" waitEvent="viewChangeComplete" timeout="18000" />
				<SetProperty propertyName="displayMode" target="navigator.activeView.ds_binding" valueExpression="value=DateSelectorDisplayMode.TIME" waitEvent="updateComplete"/>
			</setup>
			<body>
				<!--Programatically to scroll the hours column-->
				<SetProperty propertyName="selectedDate" target="navigator.activeView.ds_binding" valueExpression="value=new Date(2011,5,10,11,30)"/>
				<!--Programatically to scroll the minutes column-->
				<SetProperty propertyName="selectedDate" target="navigator.activeView.ds_binding" valueExpression="value=new Date(2011,5,10,13,50)"/>
				<AssertNoEvent target="navigator.activeView.ds_binding" eventName="change" eventClass="flash.events::Event" />
				<AssertEvent target="navigator.activeView.ds_binding" eventName="valueCommit" eventClass="mx.events::FlexEvent" />
			</body>
		</TestCase>
        
		<TestCase testID="DS_event_dateAndTimeMode_date_valueCommit" description="dateAndTime mode, change date manually to dispatch only valueCommit event" keywords="[DateSpinner, event]">
			<setup>
				<ResetComponent target="navigator" className="comps.QANavigator" waitEvent="viewChangeComplete" />
				<RunCode code="application.navigator.pushView(views.EventView)" waitTarget="navigator" waitEvent="viewChangeComplete" timeout="18000" />
				<SetProperty propertyName="displayMode" target="navigator.activeView.ds_binding" valueExpression="value=DateSelectorDisplayMode.DATE_AND_TIME" waitEvent="updateComplete"/>
			</setup>
			<body>
				<!--Programatically to scroll the date column-->
				<SetProperty propertyName="selectedDate" target="navigator.activeView.ds_binding" valueExpression="value=new Date(2012,3,10,13,30)"/>
				<AssertNoEvent target="navigator.activeView.ds_binding" eventName="change" eventClass="flash.events::Event" />
				<AssertEvent target="navigator.activeView.ds_binding" eventName="valueCommit" eventClass="mx.events::FlexEvent" />
			</body>
		</TestCase>
        
		<TestCase testID="DS_event_dateAndTimeMode_hours_valueCommit" description="dateAndTime mode, change hours manually to dispatch only valueCommit event" keywords="[DateSpinner, event]">
			<setup>
				<ResetComponent target="navigator" className="comps.QANavigator" waitEvent="viewChangeComplete" />
				<RunCode code="application.navigator.pushView(views.EventView)" waitTarget="navigator" waitEvent="viewChangeComplete" timeout="18000" />
				<SetProperty propertyName="displayMode" target="navigator.activeView.ds_binding" valueExpression="value=DateSelectorDisplayMode.DATE_AND_TIME" waitEvent="updateComplete"/>
			</setup>
			<body>
				<!--Programatically to scroll the hour column-->
				<SetProperty propertyName="selectedDate" target="navigator.activeView.ds_binding" valueExpression="value=new Date(2011,5,10,11,30)"/>
				<AssertNoEvent target="navigator.activeView.ds_binding" eventName="change" eventClass="flash.events::Event" />
				<AssertEvent target="navigator.activeView.ds_binding" eventName="valueCommit" eventClass="mx.events::FlexEvent" />
			</body>
		</TestCase>
        
		<TestCase testID="DS_event_dateAndTimeMode_minutes_valueCommit" description="dateAndTime mode, change minutes manually to dispatch only valueCommit event" keywords="[DateSpinner, event]">
			<setup>
				<ResetComponent target="navigator" className="comps.QANavigator" waitEvent="viewChangeComplete" />
				<RunCode code="application.navigator.pushView(views.EventView)" waitTarget="navigator" waitEvent="viewChangeComplete" timeout="18000" />
				<SetProperty propertyName="displayMode" target="navigator.activeView.ds_binding" valueExpression="value=DateSelectorDisplayMode.DATE_AND_TIME" waitEvent="updateComplete"/>
			</setup>
			<body>
				<!--Programatically to scroll the minutes column-->
				<SetProperty propertyName="selectedDate" target="navigator.activeView.ds_binding" valueExpression="value=new Date(2011,5,10,13,50)"/>
				<AssertNoEvent target="navigator.activeView.ds_binding" eventName="change" eventClass="flash.events::Event" />
				<AssertEvent target="navigator.activeView.ds_binding" eventName="valueCommit" eventClass="mx.events::FlexEvent" />
			</body>
		</TestCase>
        
		<TestCase testID="DS_event_dateAndTimeMode_date_hours_valueCommit" description="dateAndTime mode, change date and hours manually to dispatch only valueCommit event" keywords="[DateSpinner, event]">
			<setup>
				<ResetComponent target="navigator" className="comps.QANavigator" waitEvent="viewChangeComplete" />
				<RunCode code="application.navigator.pushView(views.EventView)" waitTarget="navigator" waitEvent="viewChangeComplete" timeout="18000" />
				<SetProperty propertyName="displayMode" target="navigator.activeView.ds_binding" valueExpression="value=DateSelectorDisplayMode.DATE_AND_TIME" waitEvent="updateComplete"/>
			</setup>
			<body>
				<!--Programatically to scroll the date column-->
				<SetProperty propertyName="selectedDate" target="navigator.activeView.ds_binding" valueExpression="value=new Date(2012,3,10,13,30)"/>
				<!--Programatically to scroll the hours column-->
				<SetProperty propertyName="selectedDate" target="navigator.activeView.ds_binding" valueExpression="value=new Date(2011,5,10,11,30)"/>
				<AssertNoEvent target="navigator.activeView.ds_binding" eventName="change" eventClass="flash.events::Event" />
				<AssertEvent target="navigator.activeView.ds_binding" eventName="valueCommit" eventClass="mx.events::FlexEvent" />
			</body>
		</TestCase>
        
		<TestCase testID="DS_event_dateAndTimeMode_date_minutes_valueCommit" description="dateAndTime mode, change date and minutes manually to dispatch only valueCommit event" keywords="[DateSpinner, event]">
			<setup>
				<ResetComponent target="navigator" className="comps.QANavigator" waitEvent="viewChangeComplete" />
				<RunCode code="application.navigator.pushView(views.EventView)" waitTarget="navigator" waitEvent="viewChangeComplete" timeout="18000" />
				<SetProperty propertyName="displayMode" target="navigator.activeView.ds_binding" valueExpression="value=DateSelectorDisplayMode.DATE_AND_TIME" waitEvent="updateComplete"/>
			</setup>
			<body>
				<!--Programatically to scroll the date column-->
				<SetProperty propertyName="selectedDate" target="navigator.activeView.ds_binding" valueExpression="value=new Date(2012,3,10,13,30)"/>
				<!--Programatically to scroll the minutes column-->
				<SetProperty propertyName="selectedDate" target="navigator.activeView.ds_binding" valueExpression="value=new Date(2011,5,10,13,50)"/>
				<AssertNoEvent target="navigator.activeView.ds_binding" eventName="change" eventClass="flash.events::Event" />
				<AssertEvent target="navigator.activeView.ds_binding" eventName="valueCommit" eventClass="mx.events::FlexEvent" />
			</body>
		</TestCase>
        
		<TestCase testID="DS_event_dateAndTimeMode_hours_minutes_valueCommit" description="dateAndTime mode, change hours and minutes manually to dispatch only valueCommit event" keywords="[DateSpinner, event]">
			<setup>
				<ResetComponent target="navigator" className="comps.QANavigator" waitEvent="viewChangeComplete" />
				<RunCode code="application.navigator.pushView(views.EventView)" waitTarget="navigator" waitEvent="viewChangeComplete" timeout="18000" />
				<SetProperty propertyName="displayMode" target="navigator.activeView.ds_binding" valueExpression="value=DateSelectorDisplayMode.DATE_AND_TIME" waitEvent="updateComplete"/>
			</setup>
			<body>
				<!--Programatically to scroll the hours column-->
				<SetProperty propertyName="selectedDate" target="navigator.activeView.ds_binding" valueExpression="value=new Date(2011,5,10,11,30)"/>
				<!--Programatically to scroll the minutes column-->
				<SetProperty propertyName="selectedDate" target="navigator.activeView.ds_binding" valueExpression="value=new Date(2011,5,10,13,50)"/>
				<AssertNoEvent target="navigator.activeView.ds_binding" eventName="change" eventClass="flash.events::Event" />
				<AssertEvent target="navigator.activeView.ds_binding" eventName="valueCommit" eventClass="mx.events::FlexEvent" />
			</body>
		</TestCase>
        
		<TestCase testID="DS_event_dateAndTimeMode_date_hours_minutes_valueCommit" description="dateAndTime mode, change date, hours and minutes manually to dispatch only valueCommit event" keywords="[DateSpinner, event]">
			<setup>
				<ResetComponent target="navigator" className="comps.QANavigator" waitEvent="viewChangeComplete" />
				<RunCode code="application.navigator.pushView(views.EventView)" waitTarget="navigator" waitEvent="viewChangeComplete" timeout="18000" />
				<SetProperty propertyName="displayMode" target="navigator.activeView.ds_binding" valueExpression="value=DateSelectorDisplayMode.DATE_AND_TIME" waitEvent="updateComplete"/>
			</setup>
			<body>
				<!--Programatically to scroll the date column-->
				<SetProperty propertyName="selectedDate" target="navigator.activeView.ds_binding" valueExpression="value=new Date(2012,3,10,13,30)"/>
				<!--Programatically to scroll the hours column-->
				<SetProperty propertyName="selectedDate" target="navigator.activeView.ds_binding" valueExpression="value=new Date(2011,5,10,11,30)"/>
				<!--Programatically to scroll the minutes column-->
				<SetProperty propertyName="selectedDate" target="navigator.activeView.ds_binding" valueExpression="value=new Date(2011,5,10,13,50)"/>
				<AssertNoEvent target="navigator.activeView.ds_binding" eventName="change" eventClass="flash.events::Event" />
				<AssertEvent target="navigator.activeView.ds_binding" eventName="valueCommit" eventClass="mx.events::FlexEvent" />
			</body>
		</TestCase>
		
	</testCases>
	
</UnitTester>
