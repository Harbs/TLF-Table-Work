<?xml version="1.0" encoding="utf-8"?>
<!--

  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.

-->
<UnitTester
    xmlns:fx="http://ns.adobe.com/mxml/2009"
    xmlns:s="library://ns.adobe.com/flex/spark"
    xmlns="*"
    testDir="mobile/components/ViewMenu/properties/"
    testSWF="ViewMenu.mxml">

    <fx:Script><![CDATA[ public static function init(o:DisplayObject):void { } ]]></fx:Script>
    <fx:Metadata><![CDATA[ [Mixin] ]]></fx:Metadata>

    <fx:Script>
        <![CDATA[
            import views.*;
			import mx.core.FlexGlobals;
        ]]>
    </fx:Script>
    <testCases>

		<TestCase testID="OneViewMenuButtonPortrait1" description="One item menu portrait, click outside to close" keywords="[ViewMenu, property]">
			<setup>
				<RunCode code="FlexGlobals.topLevelApplication.viewMenuOpen=false" />
				<Pause timeout="100"/>
				<ResetComponent target="navigator" className="spark.components.ViewNavigator" waitEvent="viewChangeComplete" />
				<SetProperty target="navigator" propertyName="transitionsEnabled" value="false"/>
				<RunCode code="FlexGlobals.topLevelApplication.navigator.pushView(views.ViewMenuItemView1)"
										 waitTarget="navigator" waitEvent="viewChangeComplete" timeout="6000"/>
				<RunCode code="FlexGlobals.topLevelApplication.stage.setAspectRatio('portrait') "  />
			</setup>
			<body>
				<DispatchKeyEvent keys="[MENU]" waitEvent="viewMenuOpen"  waitTarget="navigator.activeView"/>
				<Pause timeout="100"/>
				<AssertPropertyValue target="navigator.activeView.viewMenuItems" propertyName="length" value="1"/>
				<AssertPropertyValue target="navigator.activeView.i1" propertyName="label" value="add"/>
				<CompareBitmap numColorVariances="5" maxColorVariance="15" url="../properties/baselines" target="navigator.activeView.i1.owner">
					<ConditionalValue deviceDensity="160" os="win" />
					<ConditionalValue deviceDensity="240" os="android"/>
					<ConditionalValue deviceDensity="320" os="win" />
							<ConditionalValue deviceDensity="320" os="ios" />
							<ConditionalValue deviceDensity="160" os="qnx" />
				</CompareBitmap>
				<DispatchMouseClickEvent target="navigator.activeView.btn" localX="5" localY="5" waitEvent="viewMenuClose" waitTarget="navigator.activeView" />

			</body>
		</TestCase>
		<TestCase testID="OneViewMenuButtonPortrait2" description="One item menu portrait, click Menu to close" keywords="[ViewMenu, property]">
			<setup>
				<RunCode code="FlexGlobals.topLevelApplication.viewMenuOpen=false" />
				<Pause timeout="100"/>
				<ResetComponent target="navigator" className="spark.components.ViewNavigator" waitEvent="viewChangeComplete" />
				<SetProperty target="navigator" propertyName="transitionsEnabled" value="false"/>
				<RunCode code="FlexGlobals.topLevelApplication.navigator.pushView(views.ViewMenuItemView1)"
										 waitTarget="navigator" waitEvent="viewChangeComplete" timeout="6000"/>
				<RunCode code="FlexGlobals.topLevelApplication.stage.setAspectRatio('portrait') "  />
			</setup>
			<body>
				<DispatchKeyEvent keys="[MENU]" waitEvent="viewMenuOpen"  waitTarget="navigator.activeView"/>
				<Pause timeout="100"/>
				<AssertPropertyValue target="navigator.activeView.viewMenuItems" propertyName="length" value="1"/>
				<AssertPropertyValue target="navigator.activeView.i1" propertyName="label" value="add"/>
				<CompareBitmap numColorVariances="5" maxColorVariance="15" url="../properties/baselines" target="navigator.activeView.i1.owner">
					<ConditionalValue deviceDensity="160" os="win" />
					<ConditionalValue deviceDensity="240" os="android"/>
					<ConditionalValue deviceDensity="320" os="win" />
							<ConditionalValue deviceDensity="320" os="ios" />
							<ConditionalValue deviceDensity="160" os="qnx" />
				</CompareBitmap>
				<DispatchKeyEvent keys="[MENU]" waitEvent="viewMenuClose"  waitTarget="navigator.activeView"/>
			</body>
		</TestCase>
		<TestCase testID="OneViewMenuButtonPortrait3" description="One item menu portrait, click BACK to close" keywords="[ViewMenu, property]">
			<setup>
				<RunCode code="FlexGlobals.topLevelApplication.viewMenuOpen=false" />
				<Pause timeout="100"/>
				<ResetComponent target="navigator" className="spark.components.ViewNavigator" waitEvent="viewChangeComplete" />
				<SetProperty target="navigator" propertyName="transitionsEnabled" value="false"/>
				<RunCode code="FlexGlobals.topLevelApplication.navigator.pushView(views.ViewMenuItemView1)"
										 waitTarget="navigator" waitEvent="viewChangeComplete" timeout="6000"/>
				<RunCode code="FlexGlobals.topLevelApplication.stage.setAspectRatio('portrait') "  />
			</setup>
			<body>
				<DispatchKeyEvent keys="[MENU]" waitEvent="viewMenuOpen"  waitTarget="navigator.activeView"/>
				<Pause timeout="100"/>
				<AssertPropertyValue target="navigator.activeView.viewMenuItems" propertyName="length" value="1"/>
				<AssertPropertyValue target="navigator.activeView.i1" propertyName="label" value="add"/>
				<CompareBitmap numColorVariances="5" maxColorVariance="15" url="../properties/baselines" target="navigator.activeView.i1.owner">
					<ConditionalValue deviceDensity="160" os="win" />
					<ConditionalValue deviceDensity="240" os="android"/>
					<ConditionalValue deviceDensity="320" os="win" />
							<ConditionalValue deviceDensity="320" os="ios" />
							<ConditionalValue deviceDensity="160" os="qnx" />
				</CompareBitmap>
				<DispatchKeyEvent keys="[BACK]" waitEvent="viewMenuClose" waitTarget="navigator.activeView"/>
			</body>
		</TestCase>
		<TestCase testID="OneViewMenuButtonPortrait4" description="One item menu portrait, mouseClick on ViewMenu" keywords="[ViewMenu, property]">
			<setup>
				<RunCode code="FlexGlobals.topLevelApplication.viewMenuOpen=false" />
				<Pause timeout="100"/>
				<ResetComponent target="navigator" className="spark.components.ViewNavigator" waitEvent="viewChangeComplete" />
				<SetProperty target="navigator" propertyName="transitionsEnabled" value="false"/>
				<RunCode code="FlexGlobals.topLevelApplication.navigator.pushView(views.ViewMenuItemView1)"
										 waitTarget="navigator" waitEvent="viewChangeComplete" timeout="6000"/>
			</setup>
			<body>
				<DispatchKeyEvent keys="[MENU]" waitEvent="viewMenuOpen"  waitTarget="navigator.activeView"/>
				<Pause timeout="100"/>
				<DispatchMouseEvent type="rollOver" target="navigator.activeView.i1" localX="10" localY="10"  waitEvent="rollOver"/>
				<DispatchMouseEvent type="mouseOver" target="navigator.activeView.i1" localX="10" localY="10"  waitEvent="mouseOver"/>
				<DispatchMouseClickEvent target="navigator.activeView.i1" localX="10" localY="10" waitEvent="viewMenuClose" waitTarget="navigator.activeView" />
				<AssertPropertyValue target="navigator.activeView.btn" propertyName="label" value="click1"/>

			</body>
		</TestCase>
		<TestCase testID="OneViewMenuButtonPortrait5" description="One item menu portrait, mouseEvents" keywords="[ViewMenu, property]">
			<setup>
				<RunCode code="FlexGlobals.topLevelApplication.viewMenuOpen=false" />
				<Pause timeout="100"/>
				<ResetComponent target="navigator" className="spark.components.ViewNavigator" waitEvent="viewChangeComplete" />
				<SetProperty target="navigator" propertyName="transitionsEnabled" value="false"/>
				<RunCode code="FlexGlobals.topLevelApplication.navigator.pushView(views.ViewMenuItemView1)"
										 waitTarget="navigator" waitEvent="viewChangeComplete" timeout="6000"/>
			</setup>
			<body>
				<DispatchKeyEvent keys="[MENU]" waitEvent="viewMenuOpen"  waitTarget="navigator.activeView"/>
				<Pause timeout="100"/>
				<AssertPropertyValue target="navigator.activeView.viewMenuItems" propertyName="length" value="1"/>
				<AssertPropertyValue target="navigator.activeView.i1" propertyName="label" value="add"/>
				<DispatchMouseEvent type="mouseMove" target="navigator.activeView.i1" localX="10" localY="10"  />
				<DispatchMouseEvent type="rollOver" target="navigator.activeView.i1" localX="10" localY="10"  waitEvent="rollOver"/>
				<DispatchMouseEvent type="mouseOver" target="navigator.activeView.i1" localX="10" localY="10"  waitEvent="mouseOver"/>
				<DispatchMouseEvent type="mouseDown" target="navigator.activeView.i1" localX="10" localY="10"  waitEvent="mouseDown"/>
				<DispatchMouseEvent type="mouseMove" target="navigator.activeView.i1" localX="11" localY="11"  />
				<CompareBitmap numColorVariances="5" maxColorVariance="15" url="../properties/baselines" target="navigator.activeView.i1.owner">
					<ConditionalValue deviceDensity="160" os="win" />
					<ConditionalValue deviceDensity="240" os="android"/>
					<ConditionalValue deviceDensity="320" os="win" />
							<ConditionalValue deviceDensity="320" os="ios" />
							<ConditionalValue deviceDensity="160" os="qnx" />
				</CompareBitmap>
				<DispatchMouseEvent type="mouseUp" target="navigator.activeView.i1" localX="11" localY="11" waitEvent="mouseUp" />
				<DispatchMouseEvent type="rollOut" target="navigator.activeView.i1" localX="10" localY="10" waitEvent="rollOut" />
				<DispatchMouseEvent type="mouseMove" target="navigator.activeView.btn"  localX="10" localY="10" />
				<DispatchMouseEvent type="mouseMove" target="navigator.activeView.btn"  localX="15" localY="15" />
				<DispatchMouseClickEvent target="navigator.activeView.btn" localX="5" localY="5" waitEvent="viewMenuClose" waitTarget="navigator.activeView" />

			</body>
		</TestCase>
		<TestCase testID="OneViewMenuButtonPortrait6" description="One item menu portrait 5-way" keywords="[ViewMenu, property]">
			<setup>
				<RunCode code="FlexGlobals.topLevelApplication.viewMenuOpen=false" />
				<Pause timeout="100"/>
				<ResetComponent target="navigator" className="spark.components.ViewNavigator" waitEvent="viewChangeComplete" />
				<SetProperty target="navigator" propertyName="transitionsEnabled" value="false"/>
				<RunCode code="FlexGlobals.topLevelApplication.navigator.pushView(views.ViewMenuItemView1)"
										 waitTarget="navigator" waitEvent="viewChangeComplete" timeout="6000"/>
			</setup>
			<body>
				<DispatchKeyEvent keys="[MENU]" waitEvent="viewMenuOpen"  waitTarget="navigator.activeView"/>
				<Pause timeout="100"/>
				<DispatchKeyEvent keyLocation="4" keyCode="40" waitTarget="navigator.activeView.i1"  />
				<Pause timeout="1000"/>
				<CompareBitmap numColorVariances="5" maxColorVariance="15" url="../properties/baselines" target="navigator.activeView.i1.owner">
					<ConditionalValue deviceDensity="160" os="win" />
					<ConditionalValue deviceDensity="240" os="android"/>
					<ConditionalValue deviceDensity="320" os="win" />
							<ConditionalValue deviceDensity="320" os="ios" />
							<ConditionalValue deviceDensity="160" os="qnx" />
				</CompareBitmap>
				<DispatchKeyEvent keyLocation="4" keyCode="38" waitTarget="navigator.activeView.i1" waitEvent="updateComplete" />
				<DispatchMouseClickEvent target="navigator.activeView.btn" localX="5" localY="5" waitEvent="viewMenuClose" waitTarget="navigator.activeView" />
			</body>
		</TestCase>

		</testCases>
</UnitTester>
