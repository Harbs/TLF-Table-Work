<?xml version="1.0" encoding="utf-8"?>
<!--

  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.

-->
<UnitTester testDir="mobile/components/Image/styles/"
		xmlns:fx="http://ns.adobe.com/mxml/2009"
		xmlns:mx="library://ns.adobe.com/flex/mx"
		xmlns:s="library://ns.adobe.com/flex/spark"
		xmlns:m="http://ns.adobe.com/mxml/2009"
		xmlns="*" testSWF="ImageApp1.mxml"
    >
	<!-- this set of lines form a template that must be in each unit test -->
	<fx:Script>
		<![CDATA[
		public static function init(o:DisplayObject):void
		{
		}
		]]>
	</fx:Script>

	<fx:Metadata>
		<![CDATA[
			[Mixin]
		]]>
	</fx:Metadata>

	<!-- end of set of lines that must be in each unit test -->

	<fx:Script>
		<![CDATA[
			import assets.*;
			import mx.core.FlexGlobals;
		]]>
	</fx:Script>

	<testCases>
		<!-- Notes:
			We have to pause after setting enableLoadingState.
		-->
	
		<!-- backgroundColor -->
		<TestCase testID="Image_backgroundColor_test1" keywords="[Image, backgroundColor]" description="Be sure the backgroundColor is behind the loading indicator">
			<setup>
                <ResetComponent target="navigator.activeView.imgComp1" className="assets.ImageComp1" waitEvent="updateComplete" />
				<SetProperty target="navigator.activeView.imgComp1.img1" propertyName="height" value="100" waitEvent="updateComplete" />
				<SetProperty target="navigator.activeView.imgComp1.img1" propertyName="width" value="100" waitEvent="updateComplete" />
				<SetStyle target="navigator.activeView.imgComp1.img1" styleName="backgroundColor" value="0x000088" waitEvent="updateComplete" />
				<SetStyle target="navigator.activeView.imgComp1.img1" styleName="skinClass" valueExpression="value = assets.ImageSkinStaticLoadingIndicator" waitEvent="skinChanged" />
				<Pause timeout="1" />
			</setup>
			<body>
				<SetProperty target="navigator.activeView.imgComp1.img1.skin" propertyName="currentState" value="loading" />
				<RunCode code="FlexGlobals.topLevelApplication.waitForLoadingIndicator()" waitEvent="foundLoadingIndicator" />
				<CompareBitmap url="../styles/baselines/" target="navigator.activeView.imgComp1.img1">
					<ConditionalValue os="win" deviceDensity="160" />
					<ConditionalValue os="win" deviceDensity="240" />
					<ConditionalValue os="win" deviceDensity="320" />
					<ConditionalValue os="android" deviceDensity="160" />
					<ConditionalValue os="android" deviceDensity="240" />
					<ConditionalValue os="android" deviceDensity="320" />
					<ConditionalValue os="ios" deviceDensity="160" />
					<ConditionalValue os="ios" deviceDensity="240" />
					<ConditionalValue os="ios" deviceDensity="320" />
							<ConditionalValue deviceDensity="160" os="qnx" />
				</CompareBitmap>
			</body>				
		</TestCase>

		<TestCase testID="Image_backgroundColor_test2" keywords="[Image, backgroundColor]" description="Be sure the backgroundColor is behind the failed indicator">
			<setup>
                <ResetComponent target="navigator.activeView.imgComp1" className="assets.ImageComp1" waitEvent="updateComplete" />
				<SetProperty target="navigator.activeView.imgComp1.img1" propertyName="height" value="100" waitEvent="updateComplete" />
				<SetProperty target="navigator.activeView.imgComp1.img1" propertyName="width" value="100" waitEvent="updateComplete" />
				<SetStyle target="navigator.activeView.imgComp1.img1" styleName="backgroundColor" value="0x000088" waitEvent="updateComplete" />
			</setup>
			<body>
				<SetProperty target="navigator.activeView.imgComp1.img1" propertyName="source" value="assets/doesNotExist.jpg" waitEvent="ioError" />
				<CompareBitmap url="../styles/baselines/" target="navigator.activeView.imgComp1.img1">
					<ConditionalValue os="win" deviceDensity="160" />
					<ConditionalValue os="win" deviceDensity="240" />
					<ConditionalValue os="win" deviceDensity="320" />
					<ConditionalValue os="android" deviceDensity="160" />
					<ConditionalValue os="android" deviceDensity="240" />
					<ConditionalValue os="android" deviceDensity="320" />
					<ConditionalValue os="ios" deviceDensity="160" />
					<ConditionalValue os="ios" deviceDensity="240" />
					<ConditionalValue os="ios" deviceDensity="320" />
							<ConditionalValue deviceDensity="160" os="qnx" />
				</CompareBitmap>
			</body>				
		</TestCase>

		<!-- enableLoadingState -->
		<TestCase testID="Image_enableLoadingState_test1" keywords="[Image, enableLoadingState]" description="Be sure it defaults to false.">
			<setup>
                <ResetComponent target="navigator.activeView.imgComp1" className="assets.ImageComp1" waitEvent="updateComplete" waitTarget="navigator.activeView.imgComp1"/>
			</setup>
			<body>
				<AssertStyleValue target="navigator.activeView.imgComp1.img1" styleName="enableLoadingState" value="false" />
			</body>				
		</TestCase>

		<TestCase testID="Image_enableLoadingState_test2" keywords="[Image, enableLoadingState]" description="When false, doesn't block the failed image indicator.">
			<setup>
                <ResetComponent target="navigator.activeView.imgComp1" className="assets.ImageComp1" waitEvent="updateComplete" />
				<SetProperty target="navigator.activeView.imgComp1.img1" propertyName="height" value="100" waitEvent="updateComplete" />
				<SetProperty target="navigator.activeView.imgComp1.img1" propertyName="width" value="100" waitEvent="updateComplete" />
			</setup>
			<body>
				<SetStyle target="navigator.activeView.imgComp1.img1" styleName="enableLoadingState" value="false" />
				<Pause timeout="1" />
				<SetProperty target="navigator.activeView.imgComp1.img1" propertyName="source" value="assets/doesNotExist.jpg" waitEvent="ioError" />
				<CompareBitmap url="../styles/baselines/" target="navigator.activeView.imgComp1.img1">
					<ConditionalValue os="win" deviceDensity="160" />
					<ConditionalValue os="win" deviceDensity="240" />
					<ConditionalValue os="win" deviceDensity="320" />
					<ConditionalValue os="android" deviceDensity="160" />
					<ConditionalValue os="android" deviceDensity="240" />
					<ConditionalValue os="android" deviceDensity="320" />
					<ConditionalValue os="ios" deviceDensity="160" />
					<ConditionalValue os="ios" deviceDensity="240" />
					<ConditionalValue os="ios" deviceDensity="320" />
							<ConditionalValue deviceDensity="160" os="qnx" />
				</CompareBitmap>
			</body>				
		</TestCase>
	</testCases>
</UnitTester>
