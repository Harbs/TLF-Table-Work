<?xml version="1.0" encoding="utf-8"?>
<!--

  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.

-->
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009" 
		xmlns:s="library://ns.adobe.com/flex/spark" title="Callout" viewDeactivate="view1_viewDeactivateHandler(event)">
	<fx:Script>
		<![CDATA[
			import spark.events.ViewNavigatorEvent;
			[Bindable]
			private	var text:String ="This is a sample text Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor. Aenean massa. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Donec quam felis, ultricies nec, pellentesque eu, pretium quis, sem. Nulla consequat massa quis enim. Donec pede justo, fringilla vel, aliquet nec, vulputate eget, arcu. In enim justo, rhoncus ut, imperdiet a, venenatis vitae, justo. Nullam dictum felis eu pede mollis pretium. Integer tincidunt. Cras dapibus. Vivamus elementum semper nisi. Aenean vulputate eleifend tellus. Aenean leo ligula, porttitor eu, consequat vitae, eleifend ac, enim. Aliquam lorem ante, dapibus in, viverra quis, feugiat a, tellus. Phasellus viverra nulla ut metus varius laoreet. Quisque rutrum. Aenean imperdiet. Etiam ultricies nisi vel augue. Curabitur ullamcorper ultricies nisi. Nam eget dui. Etiam rhoncus. Maecenas tempus, tellus eget condimentum rhoncus, sem quam semper libero, sit amet adipiscing sem neque sed ipsum. Nam quam nunc, blandit vel, luctus pulvinar, hendrerit id, lorem. Maecenas nec odio et ante tincidunt tempus. Donec vitae sapien ut libero venenatis faucibus. Nullam quis ante. Etiam sit amet orci eget eros faucibus tincidunt. Duis leo. Sed fringilla mauris sit amet nibh. Donec sodales sagittis magna. Sed consequat, leo eget bibendum sodales, augue velit cursus nunc,";
			[Bindable]
			private	var taText:String ="Text Area text \n Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor. Aenean massa. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Donec quam felis, ultricies nec, pellentesque eu, pretium quis, sem. Nulla consequat massa quis enim. Donec pede justo, fringilla vel, aliquet nec, vulputate eget, arcu. In enim justo, rhoncus ut, imperdiet a, venenatis vitae, justo. Nullam dictum felis eu pede mollis pretium. Integer tincidunt. Cras dapibus. Vivamus elementum semper nisi. Aenean vulputate eleifend tellus. Aenean leo ligula, porttitor eu, consequat vitae, eleifend ac, enim. Aliquam lorem ante, dapibus in, viverra quis, feugiat a, tellus. Phasellus viverra nulla ut metus varius laoreet. Quisque rutrum. Aenean imperdiet. Etiam ultricies nisi vel augue. Curabitur ullamcorper ultricies nisi. Nam eget dui. Etiam rhoncus. Maecenas tempus, tellus eget condimentum rhoncus, sem quam semper libero, sit amet adipiscing sem neque sed ipsum. Nam quam nunc, blandit vel, luctus pulvinar, hendrerit id, lorem. Maecenas nec odio et ante tincidunt tempus. Donec vitae sapien ut libero venenatis faucibus. Nullam quis ante. Etiam sit amet orci eget eros faucibus tincidunt. Duis leo. Sed fringilla mauris sit amet nibh. Donec sodales sagittis magna. Sed consequat, leo eget bibendum sodales, augue velit cursus nunc,";
			
			protected function button_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				callout.open(button);
			}
			
			protected function view1_viewDeactivateHandler(event:ViewNavigatorEvent):void
			{
				if(callout.isOpen)
					callout.close();
				if(calloutButton.isDropDownOpen)
					calloutButton.closeDropDown();
			}
			
		]]>
	</fx:Script>	
	<s:navigationContent>
		<s:Button label="Back" click="navigator.popView()" />
	</s:navigationContent>
	
	<s:actionContent>
		<s:Button label="Home" click="navigator.pushView(HomeView)"/>
	</s:actionContent>
	
	
	<s:TextArea top="100" left="10" text="{taText}" bottom="100" right="10"/>
	<s:HGroup>
		<s:CalloutButton id="calloutButton" label="CalloutButton" top="5" >
			<s:calloutLayout>
				<s:VerticalLayout />
			</s:calloutLayout>
			<s:TextInput text="TextInput Top" />
			<s:TextArea  text="{text}" width="100%" />
			<s:TextInput text="TextInput bottom" bottom="0"/>				
			
		</s:CalloutButton>
		<s:Button id="button" label="Callout" click="button_clickHandler(event)"/>
	</s:HGroup>
	<fx:Declarations>
		<s:Callout id="callout" contentBackgroundAppearance="none" verticalPosition="after" >
			<s:VGroup>
				<s:TextInput text="TextInput Top" /> 
				<s:TextArea  text="{text}" width="100%" />
				<s:TextInput text="TextInput bottom" bottom="0" />	
				<s:TextInput text="TextInput bottom" bottom="0" />	
				<s:Button label="Close" click="callout.close()" width="100%"/>
			</s:VGroup>
		</s:Callout>
		
	</fx:Declarations>
	<s:TextInput bottom="10" horizontalCenter="0" text="Bottom"/>
	
</s:View>
