<?xml version="1.0" encoding="utf-8"?>
<!--

  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.

-->
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009"
		xmlns:s="library://ns.adobe.com/flex/spark"
		 xmlns:components="components.*" viewDeactivate="view1_viewDeactivateHandler(event)">
	
	<fx:Script>
		<![CDATA[
			import flashx.textLayout.edit.SelectionState;
			
			import mx.core.FlexGlobals;
			import mx.core.mx_internal;
			import mx.events.EffectEvent;
			import mx.events.FlexEvent;
			import mx.events.FlexMouseEvent;
			
			import spark.effects.animation.Animation;
			import spark.effects.supportClasses.AnimateInstance;
			import spark.events.ViewNavigatorEvent;
			import spark.skins.mobile.CalloutSkin;
			protected function openCallout(event:Event):void
			{
				callout.open(textInput);
				textInput.text=callout.isOpen.toString();
				//calloutText.text=callout.moveForSoftKeyboard.toString();
				//textInput.text= callout.getStyle("softKeyboardEffectDuration");
			}
			
			protected function view1_viewDeactivateHandler(event:ViewNavigatorEvent):void
			{
				if(callout.isOpen)
					callout.close();
			}
			
			protected function dummy_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				textInput.text = "Dummy Clicked";
			}
			
			protected function Close_clickHandler(event:MouseEvent):void
			{
				callout.close();
				textInput.text="Updating...";
				textInput.text=callout.isOpen.toString()+ " sk height- " + stage.softKeyboardRect.top;
			}
			
		]]>
	</fx:Script>
	<s:navigationContent>
		<s:Button label="Back" click="navigator.popView()" />
	</s:navigationContent>
	
	<s:actionContent>
		<s:Button label="Home" click="navigator.pushView(HomeView)"/>
	</s:actionContent>
	<fx:Declarations>
	<s:Callout id="callout" contentBackgroundAppearance="none" verticalPosition="after">
			<s:VGroup width="100%" height="100%" gap="8">
				<s:Label text="This is a custom alert box" height="100%"/>
				<s:TextInput id="calloutText" width="100%" height="100%"/>
				<s:Button id="Close" label="Close" width="100%" click="Close_clickHandler(event)" height="100%"/>
				<s:Label width="100%" paddingTop="10" text="Enter Text Below:" height="100%"/>
				<s:TextInput width="100%" height="100%"/>
				<s:Button id="dummy" width="100%" label="Dummy" height="100%" click="dummy_clickHandler(event)"/>
			</s:VGroup>
		<!--<s:VGroup width="100%" height="100%" gap="8">
			<s:ViewNavigator id="viewNav" width="100%" height="100%" firstView="views.HomeView">
				<s:navigationContent>
					<s:Button label="Back" click="viewNav.popView()"/>
				</s:navigationContent>
				<s:actionContent>
					<s:Button label="Done" chromeColor="0x0099FF" click="callout.close()"/>
				</s:actionContent>
			</s:ViewNavigator>
			<s:TextInput width="100%"/>
			<s:Button label="Close" click="callout.close()" width="100%"/>
		</s:VGroup>-->
	</s:Callout>
		
	</fx:Declarations>
		<s:VGroup top="10" left="10">
		<s:TextInput id="textInput" prompt="Open Callout" 
					 focusIn="openCallout(event)" text="{callout.isOpen}"/>
	</s:VGroup>
</s:View>