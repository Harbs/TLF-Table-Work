<?xml version="1.0" encoding="utf-8"?>
<!--

  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.

-->
<UnitTester testDir="components/DataGrid/DataGrid_HaloSkin/Styles/"  xmlns:mx="http://www.adobe.com/2006/mxml" xmlns="*" testSWF="DataGridMain_halo.mxml">

    <!-- this set of lines form a template that must be in each unit test -->
    <mx:Script>
    <![CDATA[
    public static function init(o:DisplayObject):void
    {
    }
    ]]>
    </mx:Script>
    <mx:Metadata>
    <![CDATA[
        [Mixin]
    ]]>
    </mx:Metadata>
    <!-- end of set of lines that must be in each unit test -->

    <mx:Script>
    <![CDATA[
    import mx.controls.DateChooser;
    import mx.controls.DataGrid;
    import mx.containers.Canvas;
    import mx.styles.StyleManager;
    import mx.managers.SystemManager;
    public var mydatagrid:DataGrid
    public var mybox:Canvas;
    public function genericCleanUp():void
    {
     mydatagrid= stringToObject ("mydatagrid") as DataGrid;
     mybox = stringToObject ("box") as Canvas;
     mybox = new Canvas();
        mydatagrid = new DataGrid();

        application.startIt();

    }
    public function addItems():void
    {
       for(var i:int=0;i<15;i++)
       {
          var obj:Object={col1:'one'+i,col2:i,col3:'three'+i}
          application.mydatagrid.dataProvider.addItem(obj);
       }
        }
        public function setAIcolors():void
        {
            application.mydatagrid.setStyle("alternatingItemColors",[0xFFCC00,0x00FF00]);
        }
         public function setHeadercolors():void
    {
                application.mydatagrid.setStyle("headerColors",[0xFFCC00,0xFFCC00]);
        }
        public function setBg():void
        {       
            application.mydatagrid.setStyle("backgroundColor",0xFF0000);
        }
        public function startApp():void
        {
          application.startIt();
        }
    ]]>
    </mx:Script>

    <testCases>

        <TestCase testID="style_headerBackgroundSkin_halo" keywords="[DataGrid, headerBackgroundSkin]">
            <setup>
                <ResetComponent target="mydatagrid" className="mx.controls.DataGrid" waitTarget="mydatagrid" waitEvent="updateComplete"/>
                <RunCode code="startApp()"/>
            </setup>
            <body>
                <SetStyle target="mydatagrid" styleName="headerBackgroundSkin" valueExpression="value=application.dg_header_skin" waitEvent="updateComplete" />
                <CompareBitmap target="mydatagrid" url="../Styles/Baselines/style_headerBackgroundSkin.png"  />
            </body>
        </TestCase>

        <TestCase testID="style_separatorSkins_1_halo" keywords="[DataGrid, separatorSkins]">
            <setup>
                <ResetComponent target="mydatagrid" className="mx.controls.DataGrid" waitTarget="mydatagrid" waitEvent="updateComplete"/>
                <RunCode code="startApp()"/>
                <SetProperty target="mydatagrid" propertyName="height" value="150" />
                <SetStyle target="mydatagrid" styleName="horizontalGridLines" value="true" />
                <SetStyle target="mydatagrid" styleName="verticalSeparatorSkin" valueExpression="value=application.dg_v_s_skin" />
                <SetStyle target="mydatagrid" styleName="horizontalSeparatorSkin" valueExpression="value=application.dg_h_s_skin" waitEvent="updateComplete" />
            </setup>
            <body>
                <CompareBitmap target="mydatagrid" url="../Styles/Baselines/style_separatorSkins_1.png"  />
            </body>
        </TestCase>

        <TestCase testID="style_separatorSkins_2_halo" keywords="[DataGrid, separatorSkins]">
            <setup>
                <ResetComponent target="mydatagrid" className="mx.controls.DataGrid" waitTarget="mydatagrid" waitEvent="updateComplete"/>
                <RunCode code="startApp()"/>
                <SetProperty target="mydatagrid" propertyName="height" value="250" />
                <SetStyle target="mydatagrid" styleName="horizontalGridLines" value="true" />
                <SetStyle target="mydatagrid" styleName="verticalSeparatorSkin" valueExpression="value=application.dg_v_s_skin" />
                <SetStyle target="mydatagrid" styleName="horizontalSeparatorSkin" valueExpression="value=application.dg_h_s_skin" waitEvent="updateComplete" />
            </setup>
            <body>
                <CompareBitmap target="mydatagrid" url="../Styles/Baselines/style_separatorSkins_2.png"  />
            </body>
        </TestCase>

        <TestCase testID="style_headerColors_halo"  keywords="[DataGrid, headerColors]">
            <setup>
                <ResetComponent target="mydatagrid" className="mx.controls.DataGrid" waitTarget="mydatagrid" waitEvent="updateComplete"/>
                <RunCode code="startApp()"/>
            </setup>
            <body>
                <RunCode code="setHeadercolors()" waitTarget="mydatagrid" waitEvent="updateComplete"/>
                <CompareBitmap target="mydatagrid" url="../Styles/Baselines/datagrid_headercolors.png"  />
            </body>
        </TestCase>

                <TestCase testID="style_verticalGridLines_halo" keywords="[DataGrid, verticalGridLines]">
                     <setup>

                        <ResetComponent target="mydatagrid" className="mx.controls.DataGrid" waitTarget="mydatagrid" waitEvent="updateComplete"/>
                                            <RunCode code="startApp()"/>

                       <!-- no specific test is written for dataprovider since all the tests fail if the Runcode addItems() fail-->


                     </setup>
                     <body>
                      <SetStyle target="mydatagrid" styleName="verticalGridLines" value="true"/>
                      <SetStyle target="mydatagrid" styleName="verticalGridLines" value="false" waitTarget="mydatagrid" waitEvent="updateComplete"/>
                      <CompareBitmap target="mydatagrid" url="../Styles/Baselines/datagrid_verticalgridlinestrue.png"  />
                     </body>
                    </TestCase>
                    <TestCase testID="style_verticalGridLinesColor_string_halo" keywords="[DataGrid, verticalGridLineColor]">
                     <setup>

                     <ResetComponent target="mydatagrid" className="mx.controls.DataGrid" waitTarget="mydatagrid" waitEvent="updateComplete"/>
                                            <RunCode code="startApp()"/>

                       <!-- no specific test is written for dataprovider since all the tests fail if the Runcode addItems() fail-->

                     </setup>
                     <body>
                      <SetStyle target="mydatagrid" styleName="verticalGridLines" value="true" waitTarget="mydatagrid" waitEvent="updateComplete"/>
                      <SetStyle target="mydatagrid" styleName="verticalGridLineColor" value="red" waitTarget="mydatagrid" waitEvent="updateComplete"/>
                     <!-- <CompareBitmap target="mydatagrid" url="../Styles/Baselines/datagrid_verticalgridlinecolor.png" />-->
                      <AssertPixelValue target="mydatagrid" x="201" y="147" value="0xFF0000" />
                     </body>
                    </TestCase>
                    <TestCase testID="style_verticalGridLinesColor_0x_halo" keywords="[DataGrid, verticalGridLineColor, verticalGridLines]">
                     <setup>

                      <ResetComponent target="mydatagrid" className="mx.controls.DataGrid" waitTarget="mydatagrid" waitEvent="updateComplete"/>
                                            <RunCode code="startApp()"/>

                       <!-- no specific test is written for dataprovider since all the tests fail if the Runcode addItems() fail-->


                     </setup>
                     <body>
                      <SetStyle target="mydatagrid" styleName="verticalGridLines" value="true" waitTarget="mydatagrid" waitEvent="updateComplete"/>
                      <SetStyle target="mydatagrid" styleName="verticalGridLineColor" value="0xFFCCDD" waitTarget="mydatagrid" waitEvent="updateComplete"/>
                     <!-- <CompareBitmap target="mydatagrid" url="../Styles/Baselines/datagrid_verticalgridlinecolor.png" />-->
                        <AssertPixelValue target="mydatagrid" x="201" y="147" value="0xFFCCDD" />
                     </body>
                    </TestCase>
                     <TestCase testID="style_verticalGridLinesColor_pound_halo" keywords="[DataGrid, verticalGridLineColor, verticalGridLines]">
                     <setup>

                        <ResetComponent target="mydatagrid" className="mx.controls.DataGrid" waitTarget="mydatagrid" waitEvent="updateComplete"/>
                                            <RunCode code="startApp()"/>

                       <!-- no specific test is written for dataprovider since all the tests fail if the Runcode addItems() fail-->


                     </setup>
                     <body>
                      <SetStyle target="mydatagrid" styleName="verticalGridLines" value="true" waitTarget="mydatagrid" waitEvent="updateComplete"/>
                      <SetStyle target="mydatagrid" styleName="verticalGridLineColor" value="#FF0000" waitTarget="mydatagrid" waitEvent="updateComplete"/>
                     <!-- <CompareBitmap target="mydatagrid" url="../Styles/Baselines/datagrid_verticalgridlinecolor.png" />-->
                      <AssertPixelValue target="mydatagrid" x="201" y="147" value="0xFF0000" />
                     </body>
                    </TestCase>
                           <TestCase testID="style_rollOverColor_halo" keywords="[DataGrid, mouseOver, rollOverColor]">
                     <setup>

                     <ResetComponent target="mydatagrid" className="mx.controls.DataGrid" waitTarget="mydatagrid" waitEvent="updateComplete"/>
                                            <RunCode code="startApp()"/>

                       <!-- no specific test is written for dataprovider since all the tests fail if the Runcode addItems() fail-->


                     </setup>
                     <body>
                          <!-- not working for me, help needed-->
                      <SetStyle target="mydatagrid" styleName="rollOverColor" value="0xFF0000" waitTarget="mydatagrid" waitEvent="updateComplete"/>
                      <DispatchMouseEvent target="mydatagrid" type="mouseOver" localX="72" localY="14"/>
                      <DispatchMouseEvent target="mydatagrid" type="mouseMove" localX="72" localY="14"/>

                     </body>
                    </TestCase>
        
    </testCases>

</UnitTester>
