<?xml version="1.0" encoding="utf-8"?>
<!--

  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.

-->
<UnitTester 
	testDir="mx/collections/AsyncListView/integration/"
	xmlns:mx="http://www.adobe.com/2006/mxml" 
	xmlns="*" 
	xmlns:assets="assets.*"
	testSWF="AsyncListView_App1.mxml">

	<!-- this set of lines form a template that must be in each unit test -->
	<mx:Script>
	<![CDATA[
	public static function init(o:DisplayObject):void
	{
	}
	]]>
	</mx:Script>
	<mx:Metadata>
	<![CDATA[
		[Mixin]
	]]>
	</mx:Metadata>
	<!-- end of set of lines that must be in each unit test -->

	<mx:Script>
	<![CDATA[

		import assets.*;
		import mx.collections.*;
		import mx.core.FlexGlobals;

	]]>
	</mx:Script>

	<testCases>

<TestCase testID="integration_DropDownList_test1" keywords="[AsyncListView,DropDownList]" description="Verify items in dropdown when all pending." >
	<setup>
		<ResetComponent target="obj9" className="assets.PagedDataComp9" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj9.setup(0,12)" />
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj9.theList.openDropDown()" waitTarget="obj9.theList" waitEvent="open" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj9.theList.dataGroup.getElementAt(0).label" value="item 0 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj9.theList.dataGroup.getElementAt(1).label" value="item 1 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj9.theList.dataGroup.getElementAt(2).label" value="item 2 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj9.theList.dataGroup.getElementAt(3).label" value="item 3 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj9.theList.dataGroup.getElementAt(4).label" value="item 4 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj9.theList.dataGroup.getElementAt(5).label" value="item 5 pending" />
		
		<RunCode code="FlexGlobals.topLevelApplication.obj9.theList.ensureIndexIsVisible(11)" waitTarget="obj9.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj9.theList.dataGroup.getElementAt(6).label" value="item 6 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj9.theList.dataGroup.getElementAt(7).label" value="item 7 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj9.theList.dataGroup.getElementAt(8).label" value="item 8 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj9.theList.dataGroup.getElementAt(9).label" value="item 9 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj9.theList.dataGroup.getElementAt(10).label" value="item 10 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj9.theList.dataGroup.getElementAt(11).label" value="item 11 pending" />
	</body>
</TestCase>

<TestCase testID="integration_DropDownList_test2a" keywords="[AsyncListView,DropDownList]" description="Verify items in dropdown when some pending/some failed." >
	<setup>
		<ResetComponent target="obj9" className="assets.PagedDataComp9" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj9.setup(0,12,0,3)" />
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj9.theList.openDropDown()" waitTarget="obj9.theList" waitEvent="open" />
		<RunCode code="FlexGlobals.topLevelApplication.obj9.theSimulator.failPage()" waitTarget="obj9.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj9.theList.dataGroup.getElementAt(0).label" value="item 0 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj9.theList.dataGroup.getElementAt(1).label" value="item 1 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj9.theList.dataGroup.getElementAt(2).label" value="item 2 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj9.theList.dataGroup.getElementAt(3).label" value="item 3 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj9.theList.dataGroup.getElementAt(4).label" value="item 4 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj9.theList.dataGroup.getElementAt(5).label" value="item 5 pending" />
	</body>
</TestCase>

<TestCase testID="integration_DropDownList_test2b" keywords="[AsyncListView,DropDownList]" description="Verify items in dropdown when some pending/some failed." >
	<setup>
		<ResetComponent target="obj9" className="assets.PagedDataComp9" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj9.setup(0,12,0,3)" />
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj9.theList.openDropDown()" waitTarget="obj9.theList" waitEvent="open" />
		<RunCode code="FlexGlobals.topLevelApplication.obj9.alv.getItemAt(11)" />
		<RunCode code="FlexGlobals.topLevelApplication.obj9.theSimulator.failItem(11)" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj9.theList.dataGroup.getElementAt(0).label" value="item 0 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj9.theList.dataGroup.getElementAt(1).label" value="item 1 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj9.theList.dataGroup.getElementAt(2).label" value="item 2 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj9.theList.dataGroup.getElementAt(3).label" value="item 3 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj9.theList.dataGroup.getElementAt(4).label" value="item 4 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj9.theList.dataGroup.getElementAt(5).label" value="item 5 pending" />
		<RunCode code="FlexGlobals.topLevelApplication.obj9.theList.ensureIndexIsVisible(11)" waitTarget="obj9.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj9.theList.dataGroup.getElementAt(6).label" value="item 6 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj9.theList.dataGroup.getElementAt(7).label" value="item 7 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj9.theList.dataGroup.getElementAt(8).label" value="item 8 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj9.theList.dataGroup.getElementAt(9).label" value="item 9 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj9.theList.dataGroup.getElementAt(10).label" value="item 10 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj9.theList.dataGroup.getElementAt(11).label" value="item 11 failed" />
	</body>
</TestCase>

<TestCase testID="integration_DropDownList_test3" keywords="[AsyncListView,DropDownList]" description="Verify items in dropdown when some pending/some present." >
	<setup>
		<ResetComponent target="obj9" className="assets.PagedDataComp9" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj9.setup(0,12,0,3)" />
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj9.theList.openDropDown()" waitTarget="obj9.theList" waitEvent="open" />
		<RunCode code="FlexGlobals.topLevelApplication.obj9.theSimulator.receivePage()" waitTarget="obj9.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj9.theList.dataGroup.getElementAt(0).label" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj9.theList.dataGroup.getElementAt(1).label" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj9.theList.dataGroup.getElementAt(2).label" value="item 2 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj9.theList.dataGroup.getElementAt(3).label" value="item 3 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj9.theList.dataGroup.getElementAt(4).label" value="item 4 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj9.theList.dataGroup.getElementAt(5).label" value="item 5 pending" />
	</body>
</TestCase>

<TestCase testID="integration_DropDownList_test4" keywords="[AsyncListView,DropDownList]" description="Choose pending item." >
	<setup>
		<ResetComponent target="obj9" className="assets.PagedDataComp9" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj9.setup(0,12,0,3)" />
	</setup>
	<body>
		<SetProperty target="obj9.theList" propertyName="selectedIndex" value="0" waitEvent="updateComplete" />
		<AssertPropertyValue target="obj9.theList.selectedItem" propertyName="info" value="item 0 pending" />
	</body>
</TestCase>

<TestCase testID="integration_DropDownList_test5" keywords="[AsyncListView,DropDownList]" description="Choose present item." >
	<setup>
		<ResetComponent target="obj9" className="assets.PagedDataComp9" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj9.setup(0,12,0,3)" />
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj9.alv.getItemAt(0)" />
		<RunCode code="FlexGlobals.topLevelApplication.obj9.theSimulator.receivePage()" />
		<SetProperty target="obj9.theList" propertyName="selectedIndex" value="0" waitEvent="updateComplete" />
		<AssertPropertyValue target="obj9.theList.selectedItem" propertyName="info" value="item 0 present" />
	</body>
</TestCase>

<TestCase testID="integration_DropDownList_test6" keywords="[AsyncListView,DropDownList]" description="Choose failed item." >
	<setup>
		<ResetComponent target="obj9" className="assets.PagedDataComp9" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj9.setup(0,12,0,3)" />
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj9.alv.getItemAt(0)" />
		<RunCode code="FlexGlobals.topLevelApplication.obj9.theSimulator.failPage()" />
		<SetProperty target="obj9.theList" propertyName="selectedIndex" value="0" waitEvent="updateComplete" />
		<AssertPropertyValue target="obj9.theList.selectedItem" propertyName="info" value="item 0 failed" />
	</body>
</TestCase>

<TestCase testID="integration_DropDownList_test7" keywords="[AsyncListView,DropDownList]" description="Choose pending item, it pages in." >
	<setup>
		<ResetComponent target="obj9" className="assets.PagedDataComp9" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj9.setup(0,12,0,3)" />
	</setup>
	<body>
		<SetProperty target="obj9.theList" propertyName="selectedIndex" value="0" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj9.theSimulator.receivePage()" />
		<AssertPropertyValue target="obj9.theList.selectedItem" propertyName="info" value="item 0 present" />
	</body>
</TestCase>

<TestCase testID="integration_DropDownList_test8" keywords="[AsyncListView,DropDownList]" description="Choose pending item, it fails." >
	<setup>
		<ResetComponent target="obj9" className="assets.PagedDataComp9" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj9.setup(0,12,0,3)" />
	</setup>
	<body>
		<SetProperty target="obj9.theList" propertyName="selectedIndex" value="0" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj9.theSimulator.failPage()" />
		<AssertPropertyValue target="obj9.theList.selectedItem" propertyName="info" value="item 0 failed" />
	</body>
</TestCase>

</testCases>
</UnitTester>