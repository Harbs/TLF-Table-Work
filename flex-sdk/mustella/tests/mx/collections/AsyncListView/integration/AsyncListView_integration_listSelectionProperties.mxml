<?xml version="1.0" encoding="utf-8"?>
<!--

  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.

-->
<UnitTester 
	testDir="mx/collections/AsyncListView/integration/"
	xmlns:mx="http://www.adobe.com/2006/mxml" 
	xmlns="*" 
	xmlns:assets="assets.*"
	testSWF="AsyncListView_App1.mxml">

	<!-- this set of lines form a template that must be in each unit test -->
	<mx:Script>
	<![CDATA[
	public static function init(o:DisplayObject):void
	{
	}
	]]>
	</mx:Script>
	<mx:Metadata>
	<![CDATA[
		[Mixin]
	]]>
	</mx:Metadata>
	<!-- end of set of lines that must be in each unit test -->

	<mx:Script>
	<![CDATA[

		import assets.*;
		import mx.collections.*;
		import mx.core.FlexGlobals;

	]]>
	</mx:Script>

<!--
Test list selection with paged data.  This is the List's API...nothing tricky going on.
	- selectedItem
	- selectedIndex
	- selectedItems
	- selectedIndices
Select items using DispatchMouseClickEvent.  e.g.
<DispatchMouseClickEvent target="obj1.theList.dataGroup.getElementAt(0)" localX="10" localY="10" waitEvent="updateComplete" />
<DispatchMouseClickEvent target="obj1.theList.dataGroup.getElementAt(2)" localX="10" localY="10" waitEvent="updateComplete" shiftKey="true" />

Reminder:
	public function setup( responseDelay:int = 500,
		numItems:int = 100,
		numPreloadedPages:int = 0,
		pageSize:int = 1,
		mode:String = 'manual',
		failureProbability:int = 0,
		createPendingItemFunction:Boolean = true,
		createFailedItemFunction:Boolean = true):void{
-->

	<testCases>

<TestCase testID="listSelection_selectedItem_test1" keywords="[AsyncListView]" description="selectedItem, select a pending item" >
	<setup>
		<ResetComponent target="obj1" className="assets.PagedDataComp1" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.setup(0,20,0,1)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<DispatchMouseClickEvent target="obj1.theList.dataGroup.getElementAt(1)" localX="10" localY="10" waitEvent="updateComplete" />
		<AssertPropertyValue target="obj1.theList.selectedItem" propertyName="info" value="item 1 pending" />
	</body>
</TestCase>

<TestCase testID="listSelection_selectedItem_test2" keywords="[AsyncListView]" description="selectedItem, select a failed item" >
	<setup>
		<ResetComponent target="obj1" className="assets.PagedDataComp1" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.setup(0,20,0,1)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.failItem(1)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<DispatchMouseClickEvent target="obj1.theList.dataGroup.getElementAt(1)" localX="10" localY="10" waitEvent="updateComplete" />
		<AssertPropertyValue target="obj1.theList.selectedItem" propertyName="info" value="item 1 failed" />
	</body>
</TestCase>

<TestCase testID="listSelection_selectedItem_test3" keywords="[AsyncListView]" description="selectedItem, select a present item" >
	<setup>
		<ResetComponent target="obj1" className="assets.PagedDataComp1" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.setup(0,20,0,1)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.receiveItem(1)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<DispatchMouseClickEvent target="obj1.theList.dataGroup.getElementAt(1)" localX="10" localY="10" waitEvent="updateComplete" />
		<AssertPropertyValue target="obj1.theList.selectedItem" propertyName="info" value="item 1 present" />
	</body>
</TestCase>

<TestCase testID="listSelection_selectedItem_test4" keywords="[AsyncListView]" description="selectedItem, select a pending item, get it" >
	<setup>
		<ResetComponent target="obj1" className="assets.PagedDataComp1" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.setup(0,20,0,1)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<DispatchMouseClickEvent target="obj1.theList.dataGroup.getElementAt(1)" localX="10" localY="10" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.receiveItem(1)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<AssertPropertyValue target="obj1.theList.selectedItem" propertyName="info" value="item 1 present" />
	</body>
</TestCase>

<TestCase testID="listSelection_selectedItem_test5" keywords="[AsyncListView]" description="selectedItem, select a pending item, fail it" >
	<setup>
		<ResetComponent target="obj1" className="assets.PagedDataComp1" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.setup(0,20,0,1)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<DispatchMouseClickEvent target="obj1.theList.dataGroup.getElementAt(1)" localX="10" localY="10" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.failItem(1)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<AssertPropertyValue target="obj1.theList.selectedItem" propertyName="info" value="item 1 failed" />
	</body>
</TestCase>

<TestCase testID="listSelection_selectedIndex_test1" keywords="[AsyncListView]" description="selectedIndex, select a pending item" >
	<setup>
		<ResetComponent target="obj1" className="assets.PagedDataComp1" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.setup(0,20,0,1)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<DispatchMouseClickEvent target="obj1.theList.dataGroup.getElementAt(1)" localX="10" localY="10" waitEvent="updateComplete" />
		<AssertPropertyValue target="obj1.theList" propertyName="selectedIndex" value="1" />
	</body>
</TestCase>

<TestCase testID="listSelection_selectedIndex_test2" keywords="[AsyncListView]" description="selectedIndex, select a failed item" >
	<setup>
		<ResetComponent target="obj1" className="assets.PagedDataComp1" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.setup(0,20,0,1)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.failItem(1)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<DispatchMouseClickEvent target="obj1.theList.dataGroup.getElementAt(1)" localX="10" localY="10" waitEvent="updateComplete" />
		<AssertPropertyValue target="obj1.theList" propertyName="selectedIndex" value="1" />
	</body>
</TestCase>

<TestCase testID="listSelection_selectedIndex_test3" keywords="[AsyncListView]" description="selectedIndex, select a present item" >
	<setup>
		<ResetComponent target="obj1" className="assets.PagedDataComp1" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.setup(0,20,0,1)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.receiveItem(1)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<DispatchMouseClickEvent target="obj1.theList.dataGroup.getElementAt(1)" localX="10" localY="10" waitEvent="updateComplete" />
		<AssertPropertyValue target="obj1.theList" propertyName="selectedIndex" value="1" />
	</body>
</TestCase>

<TestCase testID="listSelection_selectedIndex_test4" keywords="[AsyncListView]" description="selectedIndex, select a pending item, get it" >
	<setup>
		<ResetComponent target="obj1" className="assets.PagedDataComp1" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.setup(0,20,0,1)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<DispatchMouseClickEvent target="obj1.theList.dataGroup.getElementAt(1)" localX="10" localY="10" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.receiveItem(1)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<AssertPropertyValue target="obj1.theList" propertyName="selectedIndex" value="1" />
	</body>
</TestCase>

<TestCase testID="listSelection_selectedIndex_test5" keywords="[AsyncListView]" description="selectedIndex, select a pending item, fail it" >
	<setup>
		<ResetComponent target="obj1" className="assets.PagedDataComp1" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.setup(0,20,0,1)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<DispatchMouseClickEvent target="obj1.theList.dataGroup.getElementAt(1)" localX="10" localY="10" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.failItem(1)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<AssertPropertyValue target="obj1.theList" propertyName="selectedIndex" value="1" />
	</body>
</TestCase>

<TestCase testID="listSelection_selectedItems_test1" keywords="[AsyncListView]" description="selectedItems, select all kinds of items" >
	<setup>
		<ResetComponent target="obj1" className="assets.PagedDataComp1" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.setup(0,20,0,1)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.receiveItem(1)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.failItem(2)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<DispatchMouseClickEvent target="obj1.theList.dataGroup.getElementAt(1)" localX="10" localY="10" waitEvent="updateComplete" />
		<DispatchMouseClickEvent target="obj1.theList.dataGroup.getElementAt(3)" localX="10" localY="10" waitEvent="updateComplete" shiftKey="true" />
		<AssertPropertyValue target="obj1.theList.selectedItems.0" propertyName="info" value="item 3 pending" />
		<AssertPropertyValue target="obj1.theList.selectedItems.1" propertyName="info" value="item 2 failed" />
		<AssertPropertyValue target="obj1.theList.selectedItems.2" propertyName="info" value="item 1 present" />
	</body>
</TestCase>

<TestCase testID="listSelection_selectedItems_test2" keywords="[AsyncListView]" description="selectedItems, select all kinds of items, then fail a pending item" >
	<setup>
		<ResetComponent target="obj1" className="assets.PagedDataComp1" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.setup(0,20,0,1)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.receiveItem(1)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.failItem(2)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<DispatchMouseClickEvent target="obj1.theList.dataGroup.getElementAt(0)" localX="10" localY="10" waitEvent="updateComplete" />
		<DispatchMouseClickEvent target="obj1.theList.dataGroup.getElementAt(3)" localX="10" localY="10" waitEvent="updateComplete" shiftKey="true" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.failItem(3)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<AssertPropertyValue target="obj1.theList.selectedItems.0" propertyName="info" value="item 3 failed" />
		<AssertPropertyValue target="obj1.theList.selectedItems.1" propertyName="info" value="item 2 failed" />
		<AssertPropertyValue target="obj1.theList.selectedItems.2" propertyName="info" value="item 1 present" />
		<AssertPropertyValue target="obj1.theList.selectedItems.3" propertyName="info" value="item 0 pending" />
	</body>
</TestCase>

<TestCase testID="listSelection_selectedItems_test3" keywords="[AsyncListView]" description="selectedItems, select all kinds of items, then page in a pending item" >
	<setup>
		<ResetComponent target="obj1" className="assets.PagedDataComp1" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.setup(0,20,0,1)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.receiveItem(1)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.failItem(2)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<DispatchMouseClickEvent target="obj1.theList.dataGroup.getElementAt(0)" localX="10" localY="10" waitEvent="updateComplete" />
		<DispatchMouseClickEvent target="obj1.theList.dataGroup.getElementAt(3)" localX="10" localY="10" waitEvent="updateComplete" shiftKey="true" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.receiveItem(3)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<AssertPropertyValue target="obj1.theList.selectedItems.0" propertyName="info" value="item 3 present" />
		<AssertPropertyValue target="obj1.theList.selectedItems.1" propertyName="info" value="item 2 failed" />
		<AssertPropertyValue target="obj1.theList.selectedItems.2" propertyName="info" value="item 1 present" />
		<AssertPropertyValue target="obj1.theList.selectedItems.3" propertyName="info" value="item 0 pending" />
	</body>
</TestCase>

<TestCase testID="listSelection_selectedItems_test4" keywords="[AsyncListView]" description="selectedItems, select all kinds of items, then page in and fail pending items" >
	<setup>
		<ResetComponent target="obj1" className="assets.PagedDataComp1" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.setup(0,20,0,1)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.receiveItem(1)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.failItem(2)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<DispatchMouseClickEvent target="obj1.theList.dataGroup.getElementAt(0)" localX="10" localY="10" waitEvent="updateComplete" />
		<DispatchMouseClickEvent target="obj1.theList.dataGroup.getElementAt(4)" localX="10" localY="10" waitEvent="updateComplete" shiftKey="true" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.failItem(3)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.receiveItem(4)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<AssertPropertyValue target="obj1.theList.selectedItems.0" propertyName="info" value="item 4 present" />
		<AssertPropertyValue target="obj1.theList.selectedItems.1" propertyName="info" value="item 3 failed" />
		<AssertPropertyValue target="obj1.theList.selectedItems.2" propertyName="info" value="item 2 failed" />
		<AssertPropertyValue target="obj1.theList.selectedItems.3" propertyName="info" value="item 1 present" />
		<AssertPropertyValue target="obj1.theList.selectedItems.4" propertyName="info" value="item 0 pending" />
	</body>
</TestCase>

<TestCase testID="listSelection_selectedIndices_test1" keywords="[AsyncListView]" description="selectedIndices, select all kinds of items" >
	<setup>
		<ResetComponent target="obj1" className="assets.PagedDataComp1" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.setup(0,20,0,1)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.receiveItem(1)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.failItem(2)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<DispatchMouseClickEvent target="obj1.theList.dataGroup.getElementAt(0)" localX="10" localY="10" waitEvent="updateComplete" />
		<DispatchMouseClickEvent target="obj1.theList.dataGroup.getElementAt(2)" localX="10" localY="10" waitEvent="updateComplete" shiftKey="true" />
		<AssertPropertyValue target="obj1.theList.selectedIndices" propertyName="0" value="2" />
		<AssertPropertyValue target="obj1.theList.selectedIndices" propertyName="1" value="1" />
		<AssertPropertyValue target="obj1.theList.selectedIndices" propertyName="2" value="0" />
	</body>
</TestCase>

<TestCase testID="listSelection_selectedIndices_test2" keywords="[AsyncListView]" description="selectedIndices, select all kinds of items, then fail a pending item" >
	<setup>
		<ResetComponent target="obj1" className="assets.PagedDataComp1" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.setup(0,20,0,1)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.receiveItem(1)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.failItem(2)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<DispatchMouseClickEvent target="obj1.theList.dataGroup.getElementAt(0)" localX="10" localY="10" waitEvent="updateComplete" />
		<DispatchMouseClickEvent target="obj1.theList.dataGroup.getElementAt(2)" localX="10" localY="10" waitEvent="updateComplete" shiftKey="true" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.failItem(0)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<AssertPropertyValue target="obj1.theList.selectedIndices" propertyName="0" value="2" />
		<AssertPropertyValue target="obj1.theList.selectedIndices" propertyName="1" value="1" />
		<AssertPropertyValue target="obj1.theList.selectedIndices" propertyName="2" value="0" />
	</body>
</TestCase>

<TestCase testID="listSelection_selectedIndices_test3" keywords="[AsyncListView]" description="selectedIndices, select all kinds of items, then page in a pending item" >
	<setup>
		<ResetComponent target="obj1" className="assets.PagedDataComp1" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.setup(0,20,0,1)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.receiveItem(1)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.failItem(2)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<DispatchMouseClickEvent target="obj1.theList.dataGroup.getElementAt(0)" localX="10" localY="10" waitEvent="updateComplete" />
		<DispatchMouseClickEvent target="obj1.theList.dataGroup.getElementAt(2)" localX="10" localY="10" waitEvent="updateComplete" shiftKey="true" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.receiveItem(0)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<AssertPropertyValue target="obj1.theList.selectedIndices" propertyName="0" value="2" />
		<AssertPropertyValue target="obj1.theList.selectedIndices" propertyName="1" value="1" />
		<AssertPropertyValue target="obj1.theList.selectedIndices" propertyName="2" value="0" />
	</body>
</TestCase>

<TestCase testID="listSelection_selectedIndices_test4" keywords="[AsyncListView]" description="selectedIndices, select all kinds of items, then page in and fail pending items" >
	<setup>
		<ResetComponent target="obj1" className="assets.PagedDataComp1" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.setup(0,20,0,1)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.receiveItem(0)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.failItem(1)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<DispatchMouseClickEvent target="obj1.theList.dataGroup.getElementAt(0)" localX="10" localY="10" waitEvent="updateComplete" />
		<DispatchMouseClickEvent target="obj1.theList.dataGroup.getElementAt(3)" localX="10" localY="10" waitEvent="updateComplete" shiftKey="true" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.receiveItem(2)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.failItem(3)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<AssertPropertyValue target="obj1.theList.selectedIndices" propertyName="0" value="3" />
		<AssertPropertyValue target="obj1.theList.selectedIndices" propertyName="1" value="2" />
		<AssertPropertyValue target="obj1.theList.selectedIndices" propertyName="2" value="1" />
		<AssertPropertyValue target="obj1.theList.selectedIndices" propertyName="3" value="0" />
	</body>
</TestCase>

</testCases>
</UnitTester>