<?xml version="1.0" encoding="utf-8"?>
<!--

  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.

-->
<UnitTester 
	testDir="mx/collections/AsyncListView/methods/"
	xmlns:mx="http://www.adobe.com/2006/mxml" 
	xmlns="*" 
	xmlns:assets="assets.*"
	testSWF="AsyncListView_App1.mxml">

	<!-- this set of lines form a template that must be in each unit test -->
	<mx:Script>
	<![CDATA[
	public static function init(o:DisplayObject):void
	{
	}
	]]>
	</mx:Script>
	<mx:Metadata>
	<![CDATA[
		[Mixin]
	]]>
	</mx:Metadata>
	<!-- end of set of lines that must be in each unit test -->

	<mx:Script>
	<![CDATA[

		import assets.*;
		import mx.collections.*;
		import mx.core.FlexGlobals;
		
		public var storedItem:Object;
	]]>
	</mx:Script>

	<testCases>

<!--
public function setup( responseDelay:int = 500,
						numItems:int = 100,
						numPreloadedPages:int = 0,
						pageSize:int = 1,
						mode:String = 'manual',
						failureProbability:int = 0,
						createPendingItemFunction:Boolean = true,
						createFailedItemFunction:Boolean = true):void{

# Four pending items, call removeItemAt() to remove items 0, 1, 2, 3.
# Four failed items, call removeItemAt() to remove items 0, 1, 2, 3.
# Repeat with mixes.

Be sure to verify the item gets removed from the client (AsyncListView) and the server (ItemPendingSimulator).
Also check the return value (should be the item removed).

NOTE: The simulator's source property is supposed to be the data, but it's storing fails.  Is that a simulator issue?  Checking.
Meanwhile, the lines are commented out.

-->

<TestCase testID="removeItemAt_vlist_test1" keywords="[AsyncListView,removeItemAt]" description="3 pending items, remove item 0" >
	<setup>
		<ResetComponent target="obj1" className="assets.PagedDataComp1" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.setup(0,3,0,1)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="storedItem = FlexGlobals.topLevelApplication.obj1.alv.removeItemAt(0)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = storedItem.info" value="item 0 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(0).info" value="item 1 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(1).info" value="item 2 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[0].info" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[1].info" value="item 2 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(0).nameLabel.text" value="item 1 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(1).nameLabel.text" value="item 2 pending" />
		<AssertPropertyValue target="obj1.alv" propertyName="length" value="2" />
		<AssertPropertyValue target="obj1.items.source" propertyName="length" value="2" />
	</body>
</TestCase>

<TestCase testID="removeItemAt_vlist_test2" keywords="[AsyncListView,removeItemAt]" description="3 pending items, remove item 1" >
	<setup>
		<ResetComponent target="obj1" className="assets.PagedDataComp1" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.setup(0,3,0,1)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="storedItem = FlexGlobals.topLevelApplication.obj1.alv.removeItemAt(1)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = storedItem.info" value="item 1 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(0).info" value="item 0 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(1).info" value="item 2 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[0].info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[1].info" value="item 2 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(0).nameLabel.text" value="item 0 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(1).nameLabel.text" value="item 2 pending" />
		<AssertPropertyValue target="obj1.alv" propertyName="length" value="2" />
		<AssertPropertyValue target="obj1.items.source" propertyName="length" value="2" />
	</body>
</TestCase>

<TestCase testID="removeItemAt_vlist_test3" keywords="[AsyncListView,removeItemAt]" description="3 pending items, remove item 2" >
	<setup>
		<ResetComponent target="obj1" className="assets.PagedDataComp1" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.setup(0,3,0,1)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="storedItem = FlexGlobals.topLevelApplication.obj1.alv.removeItemAt(2)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = storedItem.info" value="item 2 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(0).info" value="item 0 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(1).info" value="item 1 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[0].info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[1].info" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(0).nameLabel.text" value="item 0 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(1).nameLabel.text" value="item 1 pending" />
		<AssertPropertyValue target="obj1.alv" propertyName="length" value="2" />
		<AssertPropertyValue target="obj1.items.source" propertyName="length" value="2" />
	</body>
</TestCase>

<TestCase testID="removeItemAt_vlist_test4" keywords="[AsyncListView,removeItemAt]" description="3 failed items, remove item 0" >
	<setup>
		<ResetComponent target="obj1" className="assets.PagedDataComp1" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.setup(0,3,0,3)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.failPage()" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="storedItem = FlexGlobals.topLevelApplication.obj1.alv.removeItemAt(0)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = storedItem.info" value="item 0 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(0).info" value="item 1 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(1).info" value="item 2 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[0].info" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[1].info" value="item 2 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(0).nameLabel.text" value="item 1 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(1).nameLabel.text" value="item 2 failed" />
		<AssertPropertyValue target="obj1.alv" propertyName="length" value="2" />
		<AssertPropertyValue target="obj1.items.source" propertyName="length" value="2" />
	</body>
</TestCase>

<TestCase testID="removeItemAt_vlist_test5" keywords="[AsyncListView,removeItemAt]" description="3 failed items, remove item 1" >
	<setup>
		<ResetComponent target="obj1" className="assets.PagedDataComp1" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.setup(0,3,0,3)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.failPage()" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="storedItem = FlexGlobals.topLevelApplication.obj1.alv.removeItemAt(1)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = storedItem.info" value="item 1 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(0).info" value="item 0 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(1).info" value="item 2 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[0].info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[1].info" value="item 2 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(0).nameLabel.text" value="item 0 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(1).nameLabel.text" value="item 2 failed" />
		<AssertPropertyValue target="obj1.alv" propertyName="length" value="2" />
		<AssertPropertyValue target="obj1.items.source" propertyName="length" value="2" />
	</body>
</TestCase>

<TestCase testID="removeItemAt_vlist_test6" keywords="[AsyncListView,removeItemAt]" description="3 failed items, remove item 2" >
	<setup>
		<ResetComponent target="obj1" className="assets.PagedDataComp1" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.setup(0,3,0,3)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.failPage()" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="storedItem = FlexGlobals.topLevelApplication.obj1.alv.removeItemAt(2)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = storedItem.info" value="item 2 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(0).info" value="item 0 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(1).info" value="item 1 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[0].info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[1].info" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(0).nameLabel.text" value="item 0 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(1).nameLabel.text" value="item 1 failed" />
		<AssertPropertyValue target="obj1.alv" propertyName="length" value="2" />
		<AssertPropertyValue target="obj1.items.source" propertyName="length" value="2" />
	</body>
</TestCase>

<TestCase testID="removeItemAt_vlist_test7" keywords="[AsyncListView,removeItemAt]" description="3 present items, remove item 0" >
	<setup>
		<ResetComponent target="obj1" className="assets.PagedDataComp1" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.setup(0,3,0,3)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.receivePage()" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="storedItem = FlexGlobals.topLevelApplication.obj1.alv.removeItemAt(0)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = storedItem.info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(0).info" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(1).info" value="item 2 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[0].info" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[1].info" value="item 2 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(0).nameLabel.text" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(1).nameLabel.text" value="item 2 present" />
		<AssertPropertyValue target="obj1.alv" propertyName="length" value="2" />
		<AssertPropertyValue target="obj1.items.source" propertyName="length" value="2" />
	</body>
</TestCase>

<TestCase testID="removeItemAt_vlist_test8" keywords="[AsyncListView,removeItemAt]" description="3 present items, remove item 1" >
	<setup>
		<ResetComponent target="obj1" className="assets.PagedDataComp1" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.setup(0,3,0,3)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.receivePage()" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="storedItem = FlexGlobals.topLevelApplication.obj1.alv.removeItemAt(1)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = storedItem.info" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(0).info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(1).info" value="item 2 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[0].info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[1].info" value="item 2 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(0).nameLabel.text" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(1).nameLabel.text" value="item 2 present" />
		<AssertPropertyValue target="obj1.alv" propertyName="length" value="2" />
		<AssertPropertyValue target="obj1.items.source" propertyName="length" value="2" />
	</body>
</TestCase>

<TestCase testID="removeItemAt_vlist_test9" keywords="[AsyncListView,removeItemAt]" description="3 present items, remove item 2" >
	<setup>
		<ResetComponent target="obj1" className="assets.PagedDataComp1" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.setup(0,3,0,3)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.receivePage()" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="storedItem = FlexGlobals.topLevelApplication.obj1.alv.removeItemAt(2)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = storedItem.info" value="item 2 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(0).info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(1).info" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[0].info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[1].info" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(0).nameLabel.text" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(1).nameLabel.text" value="item 1 present" />
		<AssertPropertyValue target="obj1.alv" propertyName="length" value="2" />
		<AssertPropertyValue target="obj1.items.source" propertyName="length" value="2" />
	</body>
</TestCase>

<TestCase testID="removeItemAt_vlist_test10" keywords="[AsyncListView,removeItemAt]" description="pending/present, remove pending" >
	<setup>
		<ResetComponent target="obj1" className="assets.PagedDataComp1" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.setup(0,2)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.receiveItem(1)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="storedItem = FlexGlobals.topLevelApplication.obj1.alv.removeItemAt(0)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = storedItem.info" value="item 0 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(0).info" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[0].info" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(0).nameLabel.text" value="item 1 present" />
		<AssertPropertyValue target="obj1.alv" propertyName="length" value="1" />
		<AssertPropertyValue target="obj1.items.source" propertyName="length" value="1" />
	</body>
</TestCase>

<TestCase testID="removeItemAt_vlist_test11" keywords="[AsyncListView,removeItemAt]" description="pending/present, remove present" >
	<setup>
		<ResetComponent target="obj1" className="assets.PagedDataComp1" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.setup(0,2)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.receiveItem(1)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="storedItem = FlexGlobals.topLevelApplication.obj1.alv.removeItemAt(1)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = storedItem.info" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(0).info" value="item 0 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[0].info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(0).nameLabel.text" value="item 0 pending" />
		<AssertPropertyValue target="obj1.alv" propertyName="length" value="1" />
		<AssertPropertyValue target="obj1.items.source" propertyName="length" value="1" />
	</body>
</TestCase>

<TestCase testID="removeItemAt_vlist_test12" keywords="[AsyncListView,removeItemAt]" description="pending/fail, remove pending" >
	<setup>
		<ResetComponent target="obj1" className="assets.PagedDataComp1" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.setup(0,2)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.failItem(1)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="storedItem = FlexGlobals.topLevelApplication.obj1.alv.removeItemAt(0)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = storedItem.info" value="item 0 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(0).info" value="item 1 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[0].info" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(0).nameLabel.text" value="item 1 failed" />
		<AssertPropertyValue target="obj1.alv" propertyName="length" value="1" />
		<AssertPropertyValue target="obj1.items.source" propertyName="length" value="1" />
	</body>
</TestCase>

<TestCase testID="removeItemAt_vlist_test13" keywords="[AsyncListView,removeItemAt]" description="pending/fail, remove fail" >
	<setup>
		<ResetComponent target="obj1" className="assets.PagedDataComp1" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.setup(0,2)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.failItem(1)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="storedItem = FlexGlobals.topLevelApplication.obj1.alv.removeItemAt(1)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = storedItem.info" value="item 1 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(0).info" value="item 0 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[0].info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(0).nameLabel.text" value="item 0 pending" />
		<AssertPropertyValue target="obj1.alv" propertyName="length" value="1" />
		<AssertPropertyValue target="obj1.items.source" propertyName="length" value="1" />
	</body>
</TestCase>

<TestCase testID="removeItemAt_vlist_test14" keywords="[AsyncListView,removeItemAt]" description="present/pending, remove present" >
	<setup>
		<ResetComponent target="obj1" className="assets.PagedDataComp1" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.setup(0,2)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.receiveItem(0)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="storedItem = FlexGlobals.topLevelApplication.obj1.alv.removeItemAt(0)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = storedItem.info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(0).info" value="item 1 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[0].info" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(0).nameLabel.text" value="item 1 pending" />
		<AssertPropertyValue target="obj1.alv" propertyName="length" value="1" />
		<AssertPropertyValue target="obj1.items.source" propertyName="length" value="1" />
	</body>
</TestCase>

<TestCase testID="removeItemAt_vlist_test15" keywords="[AsyncListView,removeItemAt]" description="present/pending, remove pending" >
	<setup>
		<ResetComponent target="obj1" className="assets.PagedDataComp1" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.setup(0,2)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.receiveItem(0)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="storedItem = FlexGlobals.topLevelApplication.obj1.alv.removeItemAt(1)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = storedItem.info" value="item 1 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(0).info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[0].info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(0).nameLabel.text" value="item 0 present" />
		<AssertPropertyValue target="obj1.alv" propertyName="length" value="1" />
		<AssertPropertyValue target="obj1.items.source" propertyName="length" value="1" />
	</body>
</TestCase>

<TestCase testID="removeItemAt_vlist_test16" keywords="[AsyncListView,removeItemAt]" description="present/fail, remove present" >
	<setup>
		<ResetComponent target="obj1" className="assets.PagedDataComp1" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.setup(0,2)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.receiveItem(0)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.failItem(1)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="storedItem = FlexGlobals.topLevelApplication.obj1.alv.removeItemAt(0)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = storedItem.info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(0).info" value="item 1 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[0].info" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(0).nameLabel.text" value="item 1 failed" />
		<AssertPropertyValue target="obj1.alv" propertyName="length" value="1" />
		<AssertPropertyValue target="obj1.items.source" propertyName="length" value="1" />
	</body>
</TestCase>

<TestCase testID="removeItemAt_vlist_test17" keywords="[AsyncListView,removeItemAt]" description="present/fail, remove fail" >
	<setup>
		<ResetComponent target="obj1" className="assets.PagedDataComp1" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.setup(0,2)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.receiveItem(0)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.failItem(1)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="storedItem = FlexGlobals.topLevelApplication.obj1.alv.removeItemAt(1)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = storedItem.info" value="item 1 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(0).info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[0].info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(0).nameLabel.text" value="item 0 present" />
		<AssertPropertyValue target="obj1.alv" propertyName="length" value="1" />
		<AssertPropertyValue target="obj1.items.source" propertyName="length" value="1" />
	</body>
</TestCase>

<TestCase testID="removeItemAt_vlist_test18" keywords="[AsyncListView,removeItemAt]" description="fail/pending, remove fail" >
	<setup>
		<ResetComponent target="obj1" className="assets.PagedDataComp1" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.setup(0,2)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.failItem(0)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="storedItem = FlexGlobals.topLevelApplication.obj1.alv.removeItemAt(0)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = storedItem.info" value="item 0 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(0).info" value="item 1 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[0].info" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(0).nameLabel.text" value="item 1 pending" />
		<AssertPropertyValue target="obj1.alv" propertyName="length" value="1" />
		<AssertPropertyValue target="obj1.items.source" propertyName="length" value="1" />
	</body>
</TestCase>

<TestCase testID="removeItemAt_vlist_test19" keywords="[AsyncListView,removeItemAt]" description="fail/pending, remove pending" >
	<setup>
		<ResetComponent target="obj1" className="assets.PagedDataComp1" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.setup(0,2)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.failItem(0)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="storedItem = FlexGlobals.topLevelApplication.obj1.alv.removeItemAt(1)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = storedItem.info" value="item 1 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(0).info" value="item 0 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[0].info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(0).nameLabel.text" value="item 0 failed" />
		<AssertPropertyValue target="obj1.alv" propertyName="length" value="1" />
		<AssertPropertyValue target="obj1.items.source" propertyName="length" value="1" />
	</body>
</TestCase>

<TestCase testID="removeItemAt_vlist_test20" keywords="[AsyncListView,removeItemAt]" description="fail/present, remove fail" >
	<setup>
		<ResetComponent target="obj1" className="assets.PagedDataComp1" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.setup(0,2)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.failItem(0)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.receiveItem(1)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="storedItem = FlexGlobals.topLevelApplication.obj1.alv.removeItemAt(0)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = storedItem.info" value="item 0 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(0).info" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[0].info" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(0).nameLabel.text" value="item 1 present" />
		<AssertPropertyValue target="obj1.alv" propertyName="length" value="1" />
		<AssertPropertyValue target="obj1.items.source" propertyName="length" value="1" />
	</body>
</TestCase>

<TestCase testID="removeItemAt_vlist_test21" keywords="[AsyncListView,removeItemAt]" description="fail/present, remove present" >
	<setup>
		<ResetComponent target="obj1" className="assets.PagedDataComp1" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.setup(0,2)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.failItem(0)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.receiveItem(1)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="storedItem = FlexGlobals.topLevelApplication.obj1.alv.removeItemAt(1)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = storedItem.info" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(0).info" value="item 0 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[0].info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(0).nameLabel.text" value="item 0 failed" />
		<AssertPropertyValue target="obj1.alv" propertyName="length" value="1" />
		<AssertPropertyValue target="obj1.items.source" propertyName="length" value="1" />
	</body>
</TestCase>

<!-- Work with items out of view at the end of the list. -->
<TestCase testID="removeItemAt_vlist_test22" keywords="[AsyncListView,removeItemAt]" description=".../pending/present, remove pending" >
	<setup>
		<ResetComponent target="obj1" className="assets.PagedDataComp1" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.setup(0,20)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj1.alv.getItemAt(18)" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.alv.getItemAt(19)" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.receiveItem(19)" />
		<RunCode code="storedItem = FlexGlobals.topLevelApplication.obj1.alv.removeItemAt(18)" />
		<AssertMethodValue method="value = storedItem.info" value="item 18 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(18).info" value="item 19 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[18].info" value="item 19 present" />
		<RunCode code="FlexGlobals.topLevelApplication.callGetItemAtFor(0, 17, FlexGlobals.topLevelApplication.obj1.alv)" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifyItems(0, 17, 'pending', FlexGlobals.topLevelApplication.obj1.alv)" value="pass" />
		<AssertPropertyValue target="obj1.alv" propertyName="length" value="19" />
		<AssertPropertyValue target="obj1.items.source" propertyName="length" value="19" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.theList.ensureIndexIsVisible(18)" waitTarget="obj1.theList.dataGroup" waitEvent="propertyChange" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(17).nameLabel.text" value="item 17 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(18).nameLabel.text" value="item 19 present" />
	</body>
</TestCase>

<TestCase testID="removeItemAt_vlist_test23" keywords="[AsyncListView,removeItemAt]" description=".../pending/present, remove present" >
	<setup>
		<ResetComponent target="obj1" className="assets.PagedDataComp1" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.setup(0,20)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj1.alv.getItemAt(18)" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.alv.getItemAt(19)" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.receiveItem(19)" />
		<RunCode code="storedItem = FlexGlobals.topLevelApplication.obj1.alv.removeItemAt(19)" />
		<AssertMethodValue method="value = storedItem.info" value="item 19 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(18).info" value="item 18 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[18].info" value="item 18 present" />
		<RunCode code="FlexGlobals.topLevelApplication.callGetItemAtFor(0, 17, FlexGlobals.topLevelApplication.obj1.alv)" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifyItems(0, 18, 'pending', FlexGlobals.topLevelApplication.obj1.alv)" value="pass" />
		<AssertPropertyValue target="obj1.alv" propertyName="length" value="19" />
		<AssertPropertyValue target="obj1.items.source" propertyName="length" value="19" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.theList.ensureIndexIsVisible(18)" waitTarget="obj1.theList.dataGroup" waitEvent="propertyChange" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(17).nameLabel.text" value="item 17 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(18).nameLabel.text" value="item 18 pending" />
	</body>
</TestCase>

<TestCase testID="removeItemAt_vlist_test24" keywords="[AsyncListView,removeItemAt]" description=".../pending/fail, remove pending" >
	<setup>
		<ResetComponent target="obj1" className="assets.PagedDataComp1" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.setup(0,20)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj1.alv.getItemAt(18)" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.alv.getItemAt(19)" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.failItem(19)" />
		<RunCode code="storedItem = FlexGlobals.topLevelApplication.obj1.alv.removeItemAt(18)" />
		<AssertMethodValue method="value = storedItem.info" value="item 18 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(18).info" value="item 19 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[18].info" value="item 19 present" />
		<RunCode code="FlexGlobals.topLevelApplication.callGetItemAtFor(0, 17, FlexGlobals.topLevelApplication.obj1.alv)" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifyItems(0, 17, 'pending', FlexGlobals.topLevelApplication.obj1.alv)" value="pass" />
		<AssertPropertyValue target="obj1.alv" propertyName="length" value="19" />
		<AssertPropertyValue target="obj1.items.source" propertyName="length" value="19" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.theList.ensureIndexIsVisible(18)" waitTarget="obj1.theList.dataGroup" waitEvent="propertyChange" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(17).nameLabel.text" value="item 17 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(18).nameLabel.text" value="item 19 failed" />
	</body>
</TestCase>

<TestCase testID="removeItemAt_vlist_test25" keywords="[AsyncListView,removeItemAt]" description=".../pending/fail, remove fail" >
	<setup>
		<ResetComponent target="obj1" className="assets.PagedDataComp1" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.setup(0,20)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj1.alv.getItemAt(18)" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.alv.getItemAt(19)" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.failItem(19)" />
		<RunCode code="storedItem = FlexGlobals.topLevelApplication.obj1.alv.removeItemAt(19)" />
		<AssertMethodValue method="value = storedItem.info" value="item 19 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(18).info" value="item 18 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[18].info" value="item 18 present" />
		<RunCode code="FlexGlobals.topLevelApplication.callGetItemAtFor(0, 17, FlexGlobals.topLevelApplication.obj1.alv)" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifyItems(0, 18, 'pending', FlexGlobals.topLevelApplication.obj1.alv)" value="pass" />
		<AssertPropertyValue target="obj1.alv" propertyName="length" value="19" />
		<AssertPropertyValue target="obj1.items.source" propertyName="length" value="19" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.theList.ensureIndexIsVisible(18)" waitTarget="obj1.theList.dataGroup" waitEvent="propertyChange" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(17).nameLabel.text" value="item 17 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(18).nameLabel.text" value="item 18 pending" />
	</body>
</TestCase>

<TestCase testID="removeItemAt_vlist_test26" keywords="[AsyncListView,removeItemAt]" description=".../present/pending, remove present" >
	<setup>
		<ResetComponent target="obj1" className="assets.PagedDataComp1" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.setup(0,20)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj1.alv.getItemAt(18)" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.alv.getItemAt(19)" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.receiveItem(18)" />
		<RunCode code="storedItem = FlexGlobals.topLevelApplication.obj1.alv.removeItemAt(18)" />
		<AssertMethodValue method="value = storedItem.info" value="item 18 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(18).info" value="item 19 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[18].info" value="item 19 present" />
		<RunCode code="FlexGlobals.topLevelApplication.callGetItemAtFor(0, 17, FlexGlobals.topLevelApplication.obj1.alv)" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifyItems(0, 17, 'pending', FlexGlobals.topLevelApplication.obj1.alv)" value="pass" />
		<AssertPropertyValue target="obj1.alv" propertyName="length" value="19" />
		<AssertPropertyValue target="obj1.items.source" propertyName="length" value="19" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.theList.ensureIndexIsVisible(18)" waitTarget="obj1.theList.dataGroup" waitEvent="propertyChange" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(17).nameLabel.text" value="item 17 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(18).nameLabel.text" value="item 19 pending" />
	</body>
</TestCase>

<TestCase testID="removeItemAt_vlist_test27" keywords="[AsyncListView,removeItemAt]" description=".../present/pending, remove pending" >
	<setup>
		<ResetComponent target="obj1" className="assets.PagedDataComp1" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.setup(0,20)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj1.alv.getItemAt(18)" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.alv.getItemAt(19)" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.receiveItem(18)" />
		<RunCode code="storedItem = FlexGlobals.topLevelApplication.obj1.alv.removeItemAt(19)" />
		<AssertMethodValue method="value = storedItem.info" value="item 19 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(18).info" value="item 18 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[18].info" value="item 18 present" />
		<RunCode code="FlexGlobals.topLevelApplication.callGetItemAtFor(0, 17, FlexGlobals.topLevelApplication.obj1.alv)" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifyItems(0, 17, 'pending', FlexGlobals.topLevelApplication.obj1.alv)" value="pass" />
		<AssertPropertyValue target="obj1.alv" propertyName="length" value="19" />
		<AssertPropertyValue target="obj1.items.source" propertyName="length" value="19" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.theList.ensureIndexIsVisible(18)" waitTarget="obj1.theList.dataGroup" waitEvent="propertyChange" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(17).nameLabel.text" value="item 17 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(18).nameLabel.text" value="item 18 present" />
	</body>
</TestCase>

<TestCase testID="removeItemAt_vlist_test28" keywords="[AsyncListView,removeItemAt]" description=".../present/fail, remove present" >
	<setup>
		<ResetComponent target="obj1" className="assets.PagedDataComp1" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.setup(0,20)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj1.alv.getItemAt(18)" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.alv.getItemAt(19)" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.receiveItem(18)" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.failItem(19)" />
		<RunCode code="storedItem = FlexGlobals.topLevelApplication.obj1.alv.removeItemAt(18)" />
		<AssertMethodValue method="value = storedItem.info" value="item 18 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(18).info" value="item 19 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[18].info" value="item 19 present" />
		<RunCode code="FlexGlobals.topLevelApplication.callGetItemAtFor(0, 17, FlexGlobals.topLevelApplication.obj1.alv)" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifyItems(0, 17, 'pending', FlexGlobals.topLevelApplication.obj1.alv)" value="pass" />
		<AssertPropertyValue target="obj1.alv" propertyName="length" value="19" />
		<AssertPropertyValue target="obj1.items.source" propertyName="length" value="19" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.theList.ensureIndexIsVisible(18)" waitTarget="obj1.theList.dataGroup" waitEvent="propertyChange" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(17).nameLabel.text" value="item 17 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(18).nameLabel.text" value="item 19 failed" />
	</body>
</TestCase>

<TestCase testID="removeItemAt_vlist_test29" keywords="[AsyncListView,removeItemAt]" description=".../present/fail, remove fail" >
	<setup>
		<ResetComponent target="obj1" className="assets.PagedDataComp1" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.setup(0,20)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj1.alv.getItemAt(18)" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.alv.getItemAt(19)" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.receiveItem(18)" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.failItem(19)" />
		<RunCode code="storedItem = FlexGlobals.topLevelApplication.obj1.alv.removeItemAt(19)" />
		<AssertMethodValue method="value = storedItem.info" value="item 19 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(18).info" value="item 18 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[18].info" value="item 18 present" />
		<RunCode code="FlexGlobals.topLevelApplication.callGetItemAtFor(0, 17, FlexGlobals.topLevelApplication.obj1.alv)" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifyItems(0, 17, 'pending', FlexGlobals.topLevelApplication.obj1.alv)" value="pass" />
		<AssertPropertyValue target="obj1.alv" propertyName="length" value="19" />
		<AssertPropertyValue target="obj1.items.source" propertyName="length" value="19" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.theList.ensureIndexIsVisible(18)" waitTarget="obj1.theList.dataGroup" waitEvent="propertyChange" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(17).nameLabel.text" value="item 17 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(18).nameLabel.text" value="item 18 present" />
	</body>
</TestCase>

<TestCase testID="removeItemAt_vlist_test30" keywords="[AsyncListView,removeItemAt]" description=".../fail/pending, remove fail" >
	<setup>
		<ResetComponent target="obj1" className="assets.PagedDataComp1" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.setup(0,20)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj1.alv.getItemAt(18)" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.alv.getItemAt(19)" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.failItem(18)" />
		<RunCode code="storedItem = FlexGlobals.topLevelApplication.obj1.alv.removeItemAt(18)" />
		<AssertMethodValue method="value = storedItem.info" value="item 18 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(18).info" value="item 19 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[18].info" value="item 19 present" />
		<RunCode code="FlexGlobals.topLevelApplication.callGetItemAtFor(0, 17, FlexGlobals.topLevelApplication.obj1.alv)" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifyItems(0, 17, 'pending', FlexGlobals.topLevelApplication.obj1.alv)" value="pass" />
		<AssertPropertyValue target="obj1.alv" propertyName="length" value="19" />
		<AssertPropertyValue target="obj1.items.source" propertyName="length" value="19" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.theList.ensureIndexIsVisible(18)" waitTarget="obj1.theList.dataGroup" waitEvent="propertyChange" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(17).nameLabel.text" value="item 17 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(18).nameLabel.text" value="item 19 pending" />
	</body>
</TestCase>

<TestCase testID="removeItemAt_vlist_test31" keywords="[AsyncListView,removeItemAt]" description=".../fail/pending, remove pending" >
	<setup>
		<ResetComponent target="obj1" className="assets.PagedDataComp1" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.setup(0,20)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj1.alv.getItemAt(18)" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.alv.getItemAt(19)" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.failItem(18)" />
		<RunCode code="storedItem = FlexGlobals.topLevelApplication.obj1.alv.removeItemAt(19)" />
		<AssertMethodValue method="value = storedItem.info" value="item 19 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(18).info" value="item 18 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[18].info" value="item 18 present" />
		<RunCode code="FlexGlobals.topLevelApplication.callGetItemAtFor(0, 17, FlexGlobals.topLevelApplication.obj1.alv)" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifyItems(0, 17, 'pending', FlexGlobals.topLevelApplication.obj1.alv)" value="pass" />
		<AssertPropertyValue target="obj1.alv" propertyName="length" value="19" />
		<AssertPropertyValue target="obj1.items.source" propertyName="length" value="19" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.theList.ensureIndexIsVisible(18)" waitTarget="obj1.theList.dataGroup" waitEvent="propertyChange" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(17).nameLabel.text" value="item 17 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(18).nameLabel.text" value="item 18 failed" />
	</body>
</TestCase>

<TestCase testID="removeItemAt_vlist_test32" keywords="[AsyncListView,removeItemAt]" description=".../fail/present, remove fail" >
	<setup>
		<ResetComponent target="obj1" className="assets.PagedDataComp1" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.setup(0,20)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj1.alv.getItemAt(18)" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.alv.getItemAt(19)" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.failItem(18)" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.receiveItem(19)" />
		<RunCode code="storedItem = FlexGlobals.topLevelApplication.obj1.alv.removeItemAt(18)" />
		<AssertMethodValue method="value = storedItem.info" value="item 18 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(18).info" value="item 19 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[18].info" value="item 19 present" />
		<RunCode code="FlexGlobals.topLevelApplication.callGetItemAtFor(0, 17, FlexGlobals.topLevelApplication.obj1.alv)" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifyItems(0, 17, 'pending', FlexGlobals.topLevelApplication.obj1.alv)" value="pass" />
		<AssertPropertyValue target="obj1.alv" propertyName="length" value="19" />
		<AssertPropertyValue target="obj1.items.source" propertyName="length" value="19" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.theList.ensureIndexIsVisible(18)" waitTarget="obj1.theList.dataGroup" waitEvent="propertyChange" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(17).nameLabel.text" value="item 17 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(18).nameLabel.text" value="item 19 present" />
	</body>
</TestCase>

<TestCase testID="removeItemAt_vlist_test33" keywords="[AsyncListView,removeItemAt]" description=".../fail/present, remove present" >
	<setup>
		<ResetComponent target="obj1" className="assets.PagedDataComp1" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.setup(0,20)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj1.alv.getItemAt(18)" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.alv.getItemAt(19)" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.failItem(18)" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.receiveItem(19)" />
		<RunCode code="storedItem = FlexGlobals.topLevelApplication.obj1.alv.removeItemAt(19)" />
		<AssertMethodValue method="value = storedItem.info" value="item 19 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(18).info" value="item 18 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[18].info" value="item 18 present" />
		<RunCode code="FlexGlobals.topLevelApplication.callGetItemAtFor(0, 17, FlexGlobals.topLevelApplication.obj1.alv)" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifyItems(0, 17, 'pending', FlexGlobals.topLevelApplication.obj1.alv)" value="pass" />
		<AssertPropertyValue target="obj1.alv" propertyName="length" value="19" />
		<AssertPropertyValue target="obj1.items.source" propertyName="length" value="19" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.theList.ensureIndexIsVisible(18)" waitTarget="obj1.theList.dataGroup" waitEvent="propertyChange" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(17).nameLabel.text" value="item 17 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(18).nameLabel.text" value="item 18 failed" />
	</body>
</TestCase>

<TestCase testID="removeItemAt_vlist_test34a" keywords="[AsyncListView,removeItemAt]" description="In a virtual list, as you remove items at the top and new pending ones come in the bottom, they will all have the same number." >
	<setup>
		<ResetComponent target="obj1" className="assets.PagedDataComp1" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.setup(0,20)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifyItems(0, 11, 'pending', FlexGlobals.topLevelApplication.obj1.alv)" value="pass" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.alv.removeItemAt(0)" waitTarget="obj1.theList" waitEvent="updateComplete" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifyItems(0, 10, 'pending', FlexGlobals.topLevelApplication.obj1.alv, 1)" value="pass" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(11).info" value="item 11 pending" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.alv.removeItemAt(0)" waitTarget="obj1.theList" waitEvent="updateComplete" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifyItems(0, 9, 'pending', FlexGlobals.topLevelApplication.obj1.alv, 2)" value="pass" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(10).info" value="item 11 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(11).info" value="item 11 pending" />
	</body>
</TestCase>

<TestCase testID="removeItemAt_vlist_test34b" keywords="[AsyncListView,removeItemAt]" description="...but not if you call getItemAt() on all items first!" >
	<setup>
		<ResetComponent target="obj1" className="assets.PagedDataComp1" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.setup(0,20)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />	
		<RunCode code="FlexGlobals.topLevelApplication.callGetItemAtFor(0, 19, FlexGlobals.topLevelApplication.obj1.alv)" />
	</setup>
	<body>
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifyItems(0, 11, 'pending', FlexGlobals.topLevelApplication.obj1.alv)" value="pass" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.alv.removeItemAt(0)" waitTarget="obj1.theList" waitEvent="updateComplete" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifyItems(0, 11, 'pending', FlexGlobals.topLevelApplication.obj1.alv, 1)" value="pass" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.alv.removeItemAt(0)" waitTarget="obj1.theList" waitEvent="updateComplete" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifyItems(0, 11, 'pending', FlexGlobals.topLevelApplication.obj1.alv, 2)" value="pass" />
	</body>
</TestCase>

<TestCase testID="removeItemAt_vlist_test35" keywords="[AsyncListView,removeItemAt]" description="Remove first pending item, then receive the others." >
	<setup>
		<ResetComponent target="obj1" className="assets.PagedDataComp1" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.setup(0,3)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj1.alv.removeItemAt(0)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.receiveItem(0)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.receiveItem(1)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />

		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(0).info" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(1).info" value="item 2 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(0).nameLabel.text" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(1).nameLabel.text" value="item 2 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[0].info" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[1].info" value="item 2 present" />
	</body>
</TestCase>

<TestCase testID="removeItemAt_vlist_test36" keywords="[AsyncListView,removeItemAt]" description="Remove middle pending item, then receive the others." >
	<setup>
		<ResetComponent target="obj1" className="assets.PagedDataComp1" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.setup(0,3)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj1.alv.removeItemAt(1)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.receiveItem(0)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.receiveItem(1)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />

		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(0).info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(1).info" value="item 2 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(0).nameLabel.text" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(1).nameLabel.text" value="item 2 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[0].info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[1].info" value="item 2 present" />
	</body>
</TestCase>

<TestCase testID="removeItemAt_vlist_test37" keywords="[AsyncListView,removeItemAt]" description="Remove last pending item, then receive the others." >
	<setup>
		<ResetComponent target="obj1" className="assets.PagedDataComp1" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.setup(0,3)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj1.alv.removeItemAt(2)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.receiveItem(0)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.receiveItem(1)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />

		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(0).info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(1).info" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(0).nameLabel.text" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(1).nameLabel.text" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[0].info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[1].info" value="item 1 present" />
	</body>
</TestCase>

<TestCase testID="removeItemAt_vlist_test38" keywords="[AsyncListView,removeItemAt]" description="Remove first out of view pending item, then receive the others." >
	<setup>
		<ResetComponent target="obj1" className="assets.PagedDataComp1" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.setup(0,20,0,10)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj1.alv.removeItemAt(12)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.callGetItemAtFor(0, 18, FlexGlobals.topLevelApplication.obj1.alv)" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.receivePage()" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.receivePage()" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />

		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifyItems(0, 11, 'present', FlexGlobals.topLevelApplication.obj1.alv)" value="pass" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifyItems(12, 18, 'present', FlexGlobals.topLevelApplication.obj1.alv, 1)" value="pass" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifySimulatorItems(0, 11, 'present', FlexGlobals.topLevelApplication.obj1.items)" value="pass" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifySimulatorItems(12, 18, 'present', FlexGlobals.topLevelApplication.obj1.items, 1)" value="pass" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifyDataGroupItems(0, 10, 'present', FlexGlobals.topLevelApplication.obj1.theList.dataGroup)" value="pass" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.theList.ensureIndexIsVisible(18)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifyDataGroupItems(12, 18, 'present', FlexGlobals.topLevelApplication.obj1.theList.dataGroup, 1)" value="pass" />
	</body>
</TestCase>

<TestCase testID="removeItemAt_vlist_test39" keywords="[AsyncListView,removeItemAt]" description="Remove last pending item (out of view), then receive the others." >
	<setup>
		<ResetComponent target="obj1" className="assets.PagedDataComp1" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.setup(0,20,0,10)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj1.alv.removeItemAt(19)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.callGetItemAtFor(0, 18, FlexGlobals.topLevelApplication.obj1.alv)" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.receivePage()" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.receivePage()" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifyItems(0, 18, 'present', FlexGlobals.topLevelApplication.obj1.alv)" value="pass" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifyDataGroupItems(0, 10, 'present', FlexGlobals.topLevelApplication.obj1.theList.dataGroup)" value="pass" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.theList.ensureIndexIsVisible(18)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifyDataGroupItems(12, 18, 'present', FlexGlobals.topLevelApplication.obj1.theList.dataGroup)" value="pass" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifySimulatorItems(0, 18, 'present', FlexGlobals.topLevelApplication.obj1.items)" value="pass" />
	</body>
</TestCase>

<TestCase testID="removeItemAt_vlist_test40" keywords="[AsyncListView,removeItemAt]" description="Call it when the AsyncListView has no list.">
	<body>
		<Pause timeout="1" />
		<AssertMethodValue method="value = new AsyncListView().removeItemAt(0)" value="null" />
		<Pause timeout="1" />		
	</body>
</TestCase>


<!--
===========
===========
nonvlist
===========
===========
-->
<TestCase testID="removeItemAt_nonvlist_test1" keywords="[AsyncListView,removeItemAt]" description="3 pending items, remove item 0" >
	<setup>
		<ResetComponent target="obj8" className="assets.PagedDataComp8" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.setup(0,3,0,1)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="storedItem = FlexGlobals.topLevelApplication.obj8.alv.removeItemAt(0)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = storedItem.info" value="item 0 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(0).info" value="item 1 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(1).info" value="item 2 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[0].info" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[1].info" value="item 2 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(0).nameLabel.text" value="item 1 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(1).nameLabel.text" value="item 2 pending" />
		<AssertPropertyValue target="obj8.alv" propertyName="length" value="2" />
		<AssertPropertyValue target="obj8.theSimulator.source" propertyName="length" value="2" />
	</body>
</TestCase>

<TestCase testID="removeItemAt_nonvlist_test2" keywords="[AsyncListView,removeItemAt]" description="3 pending items, remove item 1" >
	<setup>
		<ResetComponent target="obj8" className="assets.PagedDataComp8" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.setup(0,3,0,1)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="storedItem = FlexGlobals.topLevelApplication.obj8.alv.removeItemAt(1)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = storedItem.info" value="item 1 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(0).info" value="item 0 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(1).info" value="item 2 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[0].info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[1].info" value="item 2 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(0).nameLabel.text" value="item 0 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(1).nameLabel.text" value="item 2 pending" />
		<AssertPropertyValue target="obj8.alv" propertyName="length" value="2" />
		<AssertPropertyValue target="obj8.theSimulator.source" propertyName="length" value="2" />
	</body>
</TestCase>

<TestCase testID="removeItemAt_nonvlist_test3" keywords="[AsyncListView,removeItemAt]" description="3 pending items, remove item 2" >
	<setup>
		<ResetComponent target="obj8" className="assets.PagedDataComp8" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.setup(0,3,0,1)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="storedItem = FlexGlobals.topLevelApplication.obj8.alv.removeItemAt(2)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = storedItem.info" value="item 2 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(0).info" value="item 0 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(1).info" value="item 1 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[0].info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[1].info" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(0).nameLabel.text" value="item 0 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(1).nameLabel.text" value="item 1 pending" />
		<AssertPropertyValue target="obj8.alv" propertyName="length" value="2" />
		<AssertPropertyValue target="obj8.theSimulator.source" propertyName="length" value="2" />
	</body>
</TestCase>

<TestCase testID="removeItemAt_nonvlist_test4" keywords="[AsyncListView,removeItemAt]" description="3 failed items, remove item 0" >
	<setup>
		<ResetComponent target="obj8" className="assets.PagedDataComp8" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.setup(0,3,0,3)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj8.theSimulator.failPage()" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="storedItem = FlexGlobals.topLevelApplication.obj8.alv.removeItemAt(0)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = storedItem.info" value="item 0 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(0).info" value="item 1 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(1).info" value="item 2 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(0).nameLabel.text" value="item 1 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(1).nameLabel.text" value="item 2 failed" />
		<AssertPropertyValue target="obj8.alv" propertyName="length" value="2" />
		<AssertPropertyValue target="obj8.theSimulator.source" propertyName="length" value="2" />
	</body>
</TestCase>

<TestCase testID="removeItemAt_nonvlist_test5" keywords="[AsyncListView,removeItemAt]" description="3 failed items, remove item 1" >
	<setup>
		<ResetComponent target="obj8" className="assets.PagedDataComp8" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.setup(0,3,0,3)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj8.theSimulator.failPage()" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="storedItem = FlexGlobals.topLevelApplication.obj8.alv.removeItemAt(1)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = storedItem.info" value="item 1 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(0).info" value="item 0 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(1).info" value="item 2 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(0).nameLabel.text" value="item 0 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(1).nameLabel.text" value="item 2 failed" />
		<AssertPropertyValue target="obj8.alv" propertyName="length" value="2" />
		<AssertPropertyValue target="obj8.theSimulator.source" propertyName="length" value="2" />
	</body>
</TestCase>

<TestCase testID="removeItemAt_nonvlist_test6" keywords="[AsyncListView,removeItemAt]" description="3 failed items, remove item 2" >
	<setup>
		<ResetComponent target="obj8" className="assets.PagedDataComp8" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.setup(0,3,0,3)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj8.theSimulator.failPage()" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="storedItem = FlexGlobals.topLevelApplication.obj8.alv.removeItemAt(2)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = storedItem.info" value="item 2 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(0).info" value="item 0 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(1).info" value="item 1 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(0).nameLabel.text" value="item 0 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(1).nameLabel.text" value="item 1 failed" />
		<AssertPropertyValue target="obj8.alv" propertyName="length" value="2" />
		<AssertPropertyValue target="obj8.theSimulator.source" propertyName="length" value="2" />
	</body>
</TestCase>

<TestCase testID="removeItemAt_nonvlist_test7" keywords="[AsyncListView,removeItemAt]" description="3 present items, remove item 0" >
	<setup>
		<ResetComponent target="obj8" className="assets.PagedDataComp8" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.setup(0,3,0,3)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj8.theSimulator.receivePage()" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="storedItem = FlexGlobals.topLevelApplication.obj8.alv.removeItemAt(0)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = storedItem.info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(0).info" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(1).info" value="item 2 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[0].info" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[1].info" value="item 2 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(0).nameLabel.text" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(1).nameLabel.text" value="item 2 present" />
		<AssertPropertyValue target="obj8.alv" propertyName="length" value="2" />
		<AssertPropertyValue target="obj8.theSimulator.source" propertyName="length" value="2" />
	</body>
</TestCase>

<TestCase testID="removeItemAt_nonvlist_test8" keywords="[AsyncListView,removeItemAt]" description="3 present items, remove item 1" >
	<setup>
		<ResetComponent target="obj8" className="assets.PagedDataComp8" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.setup(0,3,0,3)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj8.theSimulator.receivePage()" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="storedItem = FlexGlobals.topLevelApplication.obj8.alv.removeItemAt(1)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = storedItem.info" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(0).info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(1).info" value="item 2 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[0].info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[1].info" value="item 2 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(0).nameLabel.text" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(1).nameLabel.text" value="item 2 present" />
		<AssertPropertyValue target="obj8.alv" propertyName="length" value="2" />
		<AssertPropertyValue target="obj8.theSimulator.source" propertyName="length" value="2" />
	</body>
</TestCase>

<TestCase testID="removeItemAt_nonvlist_test9" keywords="[AsyncListView,removeItemAt]" description="3 present items, remove item 2" >
	<setup>
		<ResetComponent target="obj8" className="assets.PagedDataComp8" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.setup(0,3,0,3)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj8.theSimulator.receivePage()" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="storedItem = FlexGlobals.topLevelApplication.obj8.alv.removeItemAt(2)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = storedItem.info" value="item 2 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(0).info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(1).info" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[0].info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[1].info" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(0).nameLabel.text" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(1).nameLabel.text" value="item 1 present" />
		<AssertPropertyValue target="obj8.alv" propertyName="length" value="2" />
		<AssertPropertyValue target="obj8.theSimulator.source" propertyName="length" value="2" />
	</body>
</TestCase>

<TestCase testID="removeItemAt_nonvlist_test10" keywords="[AsyncListView,removeItemAt]" description="pending/present, remove pending" >
	<setup>
		<ResetComponent target="obj8" className="assets.PagedDataComp8" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.setup(0,2)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj8.theSimulator.receiveItem(1)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="storedItem = FlexGlobals.topLevelApplication.obj8.alv.removeItemAt(0)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = storedItem.info" value="item 0 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(0).info" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[0].info" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(0).nameLabel.text" value="item 1 present" />
		<AssertPropertyValue target="obj8.alv" propertyName="length" value="1" />
		<AssertPropertyValue target="obj8.theSimulator.source" propertyName="length" value="1" />
	</body>
</TestCase>

<TestCase testID="removeItemAt_nonvlist_test11" keywords="[AsyncListView,removeItemAt]" description="pending/present, remove present" >
	<setup>
		<ResetComponent target="obj8" className="assets.PagedDataComp8" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.setup(0,2)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj8.theSimulator.receiveItem(1)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="storedItem = FlexGlobals.topLevelApplication.obj8.alv.removeItemAt(1)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = storedItem.info" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(0).info" value="item 0 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[0].info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(0).nameLabel.text" value="item 0 pending" />
		<AssertPropertyValue target="obj8.alv" propertyName="length" value="1" />
		<AssertPropertyValue target="obj8.theSimulator.source" propertyName="length" value="1" />
	</body>
</TestCase>

<TestCase testID="removeItemAt_nonvlist_test12" keywords="[AsyncListView,removeItemAt]" description="pending/fail, remove pending" >
	<setup>
		<ResetComponent target="obj8" className="assets.PagedDataComp8" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.setup(0,2)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj8.theSimulator.failItem(1)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="storedItem = FlexGlobals.topLevelApplication.obj8.alv.removeItemAt(0)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = storedItem.info" value="item 0 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(0).info" value="item 1 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[0].info" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(0).nameLabel.text" value="item 1 failed" />
		<AssertPropertyValue target="obj8.alv" propertyName="length" value="1" />
		<AssertPropertyValue target="obj8.theSimulator.source" propertyName="length" value="1" />
	</body>
</TestCase>

<TestCase testID="removeItemAt_nonvlist_test13" keywords="[AsyncListView,removeItemAt]" description="pending/fail, remove fail" >
	<setup>
		<ResetComponent target="obj8" className="assets.PagedDataComp8" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.setup(0,2)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj8.theSimulator.failItem(1)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="storedItem = FlexGlobals.topLevelApplication.obj8.alv.removeItemAt(1)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = storedItem.info" value="item 1 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(0).info" value="item 0 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[0].info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(0).nameLabel.text" value="item 0 pending" />
		<AssertPropertyValue target="obj8.alv" propertyName="length" value="1" />
		<AssertPropertyValue target="obj8.theSimulator.source" propertyName="length" value="1" />
	</body>
</TestCase>

<TestCase testID="removeItemAt_nonvlist_test14" keywords="[AsyncListView,removeItemAt]" description="present/pending, remove present" >
	<setup>
		<ResetComponent target="obj8" className="assets.PagedDataComp8" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.setup(0,2)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj8.theSimulator.receiveItem(0)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="storedItem = FlexGlobals.topLevelApplication.obj8.alv.removeItemAt(0)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = storedItem.info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(0).info" value="item 1 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[0].info" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(0).nameLabel.text" value="item 1 pending" />
		<AssertPropertyValue target="obj8.alv" propertyName="length" value="1" />
		<AssertPropertyValue target="obj8.theSimulator.source" propertyName="length" value="1" />
	</body>
</TestCase>

<TestCase testID="removeItemAt_nonvlist_test15" keywords="[AsyncListView,removeItemAt]" description="present/pending, remove pending" >
	<setup>
		<ResetComponent target="obj8" className="assets.PagedDataComp8" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.setup(0,2)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj8.theSimulator.receiveItem(0)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="storedItem = FlexGlobals.topLevelApplication.obj8.alv.removeItemAt(1)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = storedItem.info" value="item 1 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(0).info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[0].info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(0).nameLabel.text" value="item 0 present" />
		<AssertPropertyValue target="obj8.alv" propertyName="length" value="1" />
		<AssertPropertyValue target="obj8.theSimulator.source" propertyName="length" value="1" />
	</body>
</TestCase>

<TestCase testID="removeItemAt_nonvlist_test16" keywords="[AsyncListView,removeItemAt]" description="present/fail, remove present" >
	<setup>
		<ResetComponent target="obj8" className="assets.PagedDataComp8" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.setup(0,2)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj8.theSimulator.receiveItem(0)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.theSimulator.failItem(1)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="storedItem = FlexGlobals.topLevelApplication.obj8.alv.removeItemAt(0)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = storedItem.info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(0).info" value="item 1 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[0].info" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(0).nameLabel.text" value="item 1 failed" />
		<AssertPropertyValue target="obj8.alv" propertyName="length" value="1" />
		<AssertPropertyValue target="obj8.theSimulator.source" propertyName="length" value="1" />
	</body>
</TestCase>

<TestCase testID="removeItemAt_nonvlist_test17" keywords="[AsyncListView,removeItemAt]" description="present/fail, remove fail" >
	<setup>
		<ResetComponent target="obj8" className="assets.PagedDataComp8" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.setup(0,2)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj8.theSimulator.receiveItem(0)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.theSimulator.failItem(1)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="storedItem = FlexGlobals.topLevelApplication.obj8.alv.removeItemAt(1)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = storedItem.info" value="item 1 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(0).info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[0].info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(0).nameLabel.text" value="item 0 present" />
		<AssertPropertyValue target="obj8.alv" propertyName="length" value="1" />
		<AssertPropertyValue target="obj8.theSimulator.source" propertyName="length" value="1" />
	</body>
</TestCase>

<TestCase testID="removeItemAt_nonvlist_test18" keywords="[AsyncListView,removeItemAt]" description="fail/pending, remove fail" >
	<setup>
		<ResetComponent target="obj8" className="assets.PagedDataComp8" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.setup(0,2)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj8.theSimulator.failItem(0)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="storedItem = FlexGlobals.topLevelApplication.obj8.alv.removeItemAt(0)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = storedItem.info" value="item 0 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(0).info" value="item 1 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[0].info" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(0).nameLabel.text" value="item 1 pending" />
		<AssertPropertyValue target="obj8.alv" propertyName="length" value="1" />
		<AssertPropertyValue target="obj8.theSimulator.source" propertyName="length" value="1" />
	</body>
</TestCase>

<TestCase testID="removeItemAt_nonvlist_test19" keywords="[AsyncListView,removeItemAt]" description="fail/pending, remove pending" >
	<setup>
		<ResetComponent target="obj8" className="assets.PagedDataComp8" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.setup(0,2)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj8.theSimulator.failItem(0)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="storedItem = FlexGlobals.topLevelApplication.obj8.alv.removeItemAt(1)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = storedItem.info" value="item 1 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(0).info" value="item 0 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[0].info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(0).nameLabel.text" value="item 0 failed" />
		<AssertPropertyValue target="obj8.alv" propertyName="length" value="1" />
		<AssertPropertyValue target="obj8.theSimulator.source" propertyName="length" value="1" />
	</body>
</TestCase>

<TestCase testID="removeItemAt_nonvlist_test20" keywords="[AsyncListView,removeItemAt]" description="fail/present, remove fail" >
	<setup>
		<ResetComponent target="obj8" className="assets.PagedDataComp8" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.setup(0,2)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj8.theSimulator.failItem(0)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.theSimulator.receiveItem(1)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="storedItem = FlexGlobals.topLevelApplication.obj8.alv.removeItemAt(0)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = storedItem.info" value="item 0 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(0).info" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[0].info" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(0).nameLabel.text" value="item 1 present" />
		<AssertPropertyValue target="obj8.alv" propertyName="length" value="1" />
		<AssertPropertyValue target="obj8.theSimulator.source" propertyName="length" value="1" />
	</body>
</TestCase>

<TestCase testID="removeItemAt_nonvlist_test21" keywords="[AsyncListView,removeItemAt]" description="fail/present, remove present" >
	<setup>
		<ResetComponent target="obj8" className="assets.PagedDataComp8" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.setup(0,2)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj8.theSimulator.failItem(0)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.theSimulator.receiveItem(1)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="storedItem = FlexGlobals.topLevelApplication.obj8.alv.removeItemAt(1)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = storedItem.info" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(0).info" value="item 0 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[0].info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(0).nameLabel.text" value="item 0 failed" />
		<AssertPropertyValue target="obj8.alv" propertyName="length" value="1" />
		<AssertPropertyValue target="obj8.theSimulator.source" propertyName="length" value="1" />
	</body>
</TestCase>

<!-- Work with items out of view at the end of the list. -->
<TestCase testID="removeItemAt_nonvlist_test22" keywords="[AsyncListView,removeItemAt]" description=".../pending/present, remove pending" >
	<setup>
		<ResetComponent target="obj8" className="assets.PagedDataComp8" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.setup(0,20)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj8.alv.getItemAt(18)" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.alv.getItemAt(19)" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.theSimulator.receiveItem(19)" />
		<RunCode code="storedItem = FlexGlobals.topLevelApplication.obj8.alv.removeItemAt(18)" />
		<AssertMethodValue method="value = storedItem.info" value="item 18 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(18).info" value="item 19 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[18].info" value="item 19 present" />
		<RunCode code="FlexGlobals.topLevelApplication.callGetItemAtFor(0, 17, FlexGlobals.topLevelApplication.obj8.alv)" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifyItems(0, 17, 'pending', FlexGlobals.topLevelApplication.obj8.alv)" value="pass" />
		<AssertPropertyValue target="obj8.alv" propertyName="length" value="19" />
		<AssertPropertyValue target="obj8.theSimulator.source" propertyName="length" value="19" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.theList.ensureIndexIsVisible(18)" waitTarget="obj8.theList.dataGroup" waitEvent="propertyChange" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(17).nameLabel.text" value="item 17 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(18).nameLabel.text" value="item 19 present" />
	</body>
</TestCase>

<TestCase testID="removeItemAt_nonvlist_test23" keywords="[AsyncListView,removeItemAt]" description=".../pending/present, remove present" >
	<setup>
		<ResetComponent target="obj8" className="assets.PagedDataComp8" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.setup(0,20)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj8.alv.getItemAt(18)" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.alv.getItemAt(19)" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.theSimulator.receiveItem(19)" />
		<RunCode code="storedItem = FlexGlobals.topLevelApplication.obj8.alv.removeItemAt(19)" />
		<AssertMethodValue method="value = storedItem.info" value="item 19 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(18).info" value="item 18 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[18].info" value="item 18 present" />
		<RunCode code="FlexGlobals.topLevelApplication.callGetItemAtFor(0, 17, FlexGlobals.topLevelApplication.obj8.alv)" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifyItems(0, 18, 'pending', FlexGlobals.topLevelApplication.obj8.alv)" value="pass" />
		<AssertPropertyValue target="obj8.alv" propertyName="length" value="19" />
		<AssertPropertyValue target="obj8.theSimulator.source" propertyName="length" value="19" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.theList.ensureIndexIsVisible(18)" waitTarget="obj8.theList.dataGroup" waitEvent="propertyChange" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(17).nameLabel.text" value="item 17 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(18).nameLabel.text" value="item 18 pending" />
	</body>
</TestCase>

<TestCase testID="removeItemAt_nonvlist_test24" keywords="[AsyncListView,removeItemAt]" description=".../pending/fail, remove pending" >
	<setup>
		<ResetComponent target="obj8" className="assets.PagedDataComp8" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.setup(0,20)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj8.alv.getItemAt(18)" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.alv.getItemAt(19)" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.theSimulator.failItem(19)" />
		<RunCode code="storedItem = FlexGlobals.topLevelApplication.obj8.alv.removeItemAt(18)" />
		<AssertMethodValue method="value = storedItem.info" value="item 18 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(18).info" value="item 19 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[18].info" value="item 19 present" />
		<RunCode code="FlexGlobals.topLevelApplication.callGetItemAtFor(0, 17, FlexGlobals.topLevelApplication.obj8.alv)" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifyItems(0, 17, 'pending', FlexGlobals.topLevelApplication.obj8.alv)" value="pass" />
		<AssertPropertyValue target="obj8.alv" propertyName="length" value="19" />
		<AssertPropertyValue target="obj8.theSimulator.source" propertyName="length" value="19" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.theList.ensureIndexIsVisible(18)" waitTarget="obj8.theList.dataGroup" waitEvent="propertyChange" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(17).nameLabel.text" value="item 17 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(18).nameLabel.text" value="item 19 failed" />
	</body>
</TestCase>

<TestCase testID="removeItemAt_nonvlist_test25" keywords="[AsyncListView,removeItemAt]" description=".../pending/fail, remove fail" >
	<setup>
		<ResetComponent target="obj8" className="assets.PagedDataComp8" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.setup(0,20)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj8.alv.getItemAt(18)" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.alv.getItemAt(19)" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.theSimulator.failItem(19)" />
		<RunCode code="storedItem = FlexGlobals.topLevelApplication.obj8.alv.removeItemAt(19)" />
		<AssertMethodValue method="value = storedItem.info" value="item 19 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(18).info" value="item 18 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[18].info" value="item 18 present" />
		<RunCode code="FlexGlobals.topLevelApplication.callGetItemAtFor(0, 17, FlexGlobals.topLevelApplication.obj8.alv)" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifyItems(0, 18, 'pending', FlexGlobals.topLevelApplication.obj8.alv)" value="pass" />
		<AssertPropertyValue target="obj8.alv" propertyName="length" value="19" />
		<AssertPropertyValue target="obj8.theSimulator.source" propertyName="length" value="19" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.theList.ensureIndexIsVisible(18)" waitTarget="obj8.theList.dataGroup" waitEvent="propertyChange" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(17).nameLabel.text" value="item 17 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(18).nameLabel.text" value="item 18 pending" />
	</body>
</TestCase>

<TestCase testID="removeItemAt_nonvlist_test26" keywords="[AsyncListView,removeItemAt]" description=".../present/pending, remove present" >
	<setup>
		<ResetComponent target="obj8" className="assets.PagedDataComp8" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.setup(0,20)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj8.alv.getItemAt(18)" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.alv.getItemAt(19)" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.theSimulator.receiveItem(18)" />
		<RunCode code="storedItem = FlexGlobals.topLevelApplication.obj8.alv.removeItemAt(18)" />
		<AssertMethodValue method="value = storedItem.info" value="item 18 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(18).info" value="item 19 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[18].info" value="item 19 present" />
		<RunCode code="FlexGlobals.topLevelApplication.callGetItemAtFor(0, 17, FlexGlobals.topLevelApplication.obj8.alv)" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifyItems(0, 17, 'pending', FlexGlobals.topLevelApplication.obj8.alv)" value="pass" />
		<AssertPropertyValue target="obj8.alv" propertyName="length" value="19" />
		<AssertPropertyValue target="obj8.theSimulator.source" propertyName="length" value="19" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.theList.ensureIndexIsVisible(18)" waitTarget="obj8.theList.dataGroup" waitEvent="propertyChange" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(17).nameLabel.text" value="item 17 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(18).nameLabel.text" value="item 19 pending" />
	</body>
</TestCase>

<TestCase testID="removeItemAt_nonvlist_test27" keywords="[AsyncListView,removeItemAt]" description=".../present/pending, remove pending" >
	<setup>
		<ResetComponent target="obj8" className="assets.PagedDataComp8" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.setup(0,20)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj8.alv.getItemAt(18)" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.alv.getItemAt(19)" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.theSimulator.receiveItem(18)" />
		<RunCode code="storedItem = FlexGlobals.topLevelApplication.obj8.alv.removeItemAt(19)" />
		<AssertMethodValue method="value = storedItem.info" value="item 19 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(18).info" value="item 18 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[18].info" value="item 18 present" />
		<RunCode code="FlexGlobals.topLevelApplication.callGetItemAtFor(0, 17, FlexGlobals.topLevelApplication.obj8.alv)" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifyItems(0, 17, 'pending', FlexGlobals.topLevelApplication.obj8.alv)" value="pass" />
		<AssertPropertyValue target="obj8.alv" propertyName="length" value="19" />
		<AssertPropertyValue target="obj8.theSimulator.source" propertyName="length" value="19" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.theList.ensureIndexIsVisible(18)" waitTarget="obj8.theList.dataGroup" waitEvent="propertyChange" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(17).nameLabel.text" value="item 17 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(18).nameLabel.text" value="item 18 present" />
	</body>
</TestCase>

<TestCase testID="removeItemAt_nonvlist_test28" keywords="[AsyncListView,removeItemAt]" description=".../present/fail, remove present" >
	<setup>
		<ResetComponent target="obj8" className="assets.PagedDataComp8" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.setup(0,20)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj8.alv.getItemAt(18)" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.alv.getItemAt(19)" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.theSimulator.receiveItem(18)" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.theSimulator.failItem(19)" />
		<RunCode code="storedItem = FlexGlobals.topLevelApplication.obj8.alv.removeItemAt(18)" />
		<AssertMethodValue method="value = storedItem.info" value="item 18 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(18).info" value="item 19 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[18].info" value="item 19 present" />
		<RunCode code="FlexGlobals.topLevelApplication.callGetItemAtFor(0, 17, FlexGlobals.topLevelApplication.obj8.alv)" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifyItems(0, 17, 'pending', FlexGlobals.topLevelApplication.obj8.alv)" value="pass" />
		<AssertPropertyValue target="obj8.alv" propertyName="length" value="19" />
		<AssertPropertyValue target="obj8.theSimulator.source" propertyName="length" value="19" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.theList.ensureIndexIsVisible(18)" waitTarget="obj8.theList.dataGroup" waitEvent="propertyChange" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(17).nameLabel.text" value="item 17 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(18).nameLabel.text" value="item 19 failed" />
	</body>
</TestCase>

<TestCase testID="removeItemAt_nonvlist_test29" keywords="[AsyncListView,removeItemAt]" description=".../present/fail, remove fail" >
	<setup>
		<ResetComponent target="obj8" className="assets.PagedDataComp8" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.setup(0,20)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj8.alv.getItemAt(18)" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.alv.getItemAt(19)" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.theSimulator.receiveItem(18)" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.theSimulator.failItem(19)" />
		<RunCode code="storedItem = FlexGlobals.topLevelApplication.obj8.alv.removeItemAt(19)" />
		<AssertMethodValue method="value = storedItem.info" value="item 19 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(18).info" value="item 18 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[18].info" value="item 18 present" />
		<RunCode code="FlexGlobals.topLevelApplication.callGetItemAtFor(0, 17, FlexGlobals.topLevelApplication.obj8.alv)" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifyItems(0, 17, 'pending', FlexGlobals.topLevelApplication.obj8.alv)" value="pass" />
		<AssertPropertyValue target="obj8.alv" propertyName="length" value="19" />
		<AssertPropertyValue target="obj8.theSimulator.source" propertyName="length" value="19" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.theList.ensureIndexIsVisible(18)" waitTarget="obj8.theList.dataGroup" waitEvent="propertyChange" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(17).nameLabel.text" value="item 17 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(18).nameLabel.text" value="item 18 present" />
	</body>
</TestCase>

<TestCase testID="removeItemAt_nonvlist_test30" keywords="[AsyncListView,removeItemAt]" description=".../fail/pending, remove fail" >
	<setup>
		<ResetComponent target="obj8" className="assets.PagedDataComp8" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.setup(0,20)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj8.alv.getItemAt(18)" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.alv.getItemAt(19)" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.theSimulator.failItem(18)" />
		<RunCode code="storedItem = FlexGlobals.topLevelApplication.obj8.alv.removeItemAt(18)" />
		<AssertMethodValue method="value = storedItem.info" value="item 18 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(18).info" value="item 19 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[18].info" value="item 19 present" />
		<RunCode code="FlexGlobals.topLevelApplication.callGetItemAtFor(0, 17, FlexGlobals.topLevelApplication.obj8.alv)" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifyItems(0, 17, 'pending', FlexGlobals.topLevelApplication.obj8.alv)" value="pass" />
		<AssertPropertyValue target="obj8.alv" propertyName="length" value="19" />
		<AssertPropertyValue target="obj8.theSimulator.source" propertyName="length" value="19" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.theList.ensureIndexIsVisible(18)" waitTarget="obj8.theList.dataGroup" waitEvent="propertyChange" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(17).nameLabel.text" value="item 17 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(18).nameLabel.text" value="item 19 pending" />
	</body>
</TestCase>

<TestCase testID="removeItemAt_nonvlist_test31" keywords="[AsyncListView,removeItemAt]" description=".../fail/pending, remove pending" >
	<setup>
		<ResetComponent target="obj8" className="assets.PagedDataComp8" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.setup(0,20)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj8.alv.getItemAt(18)" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.alv.getItemAt(19)" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.theSimulator.failItem(18)" />
		<RunCode code="storedItem = FlexGlobals.topLevelApplication.obj8.alv.removeItemAt(19)" />
		<AssertMethodValue method="value = storedItem.info" value="item 19 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(18).info" value="item 18 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[18].info" value="item 18 present" />
		<RunCode code="FlexGlobals.topLevelApplication.callGetItemAtFor(0, 17, FlexGlobals.topLevelApplication.obj8.alv)" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifyItems(0, 17, 'pending', FlexGlobals.topLevelApplication.obj8.alv)" value="pass" />
		<AssertPropertyValue target="obj8.alv" propertyName="length" value="19" />
		<AssertPropertyValue target="obj8.theSimulator.source" propertyName="length" value="19" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.theList.ensureIndexIsVisible(18)" waitTarget="obj8.theList.dataGroup" waitEvent="propertyChange" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(17).nameLabel.text" value="item 17 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(18).nameLabel.text" value="item 18 failed" />
	</body>
</TestCase>

<TestCase testID="removeItemAt_nonvlist_test32" keywords="[AsyncListView,removeItemAt]" description=".../fail/present, remove fail" >
	<setup>
		<ResetComponent target="obj8" className="assets.PagedDataComp8" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.setup(0,20)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj8.alv.getItemAt(18)" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.alv.getItemAt(19)" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.theSimulator.failItem(18)" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.theSimulator.receiveItem(19)" />
		<RunCode code="storedItem = FlexGlobals.topLevelApplication.obj8.alv.removeItemAt(18)" />
		<AssertMethodValue method="value = storedItem.info" value="item 18 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(18).info" value="item 19 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[18].info" value="item 19 present" />
		<RunCode code="FlexGlobals.topLevelApplication.callGetItemAtFor(0, 17, FlexGlobals.topLevelApplication.obj8.alv)" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifyItems(0, 17, 'pending', FlexGlobals.topLevelApplication.obj8.alv)" value="pass" />
		<AssertPropertyValue target="obj8.alv" propertyName="length" value="19" />
		<AssertPropertyValue target="obj8.theSimulator.source" propertyName="length" value="19" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.theList.ensureIndexIsVisible(18)" waitTarget="obj8.theList.dataGroup" waitEvent="propertyChange" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(17).nameLabel.text" value="item 17 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(18).nameLabel.text" value="item 19 present" />
	</body>
</TestCase>

<TestCase testID="removeItemAt_nonvlist_test33" keywords="[AsyncListView,removeItemAt]" description=".../fail/present, remove present" >
	<setup>
		<ResetComponent target="obj8" className="assets.PagedDataComp8" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.setup(0,20)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj8.alv.getItemAt(18)" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.alv.getItemAt(19)" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.theSimulator.failItem(18)" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.theSimulator.receiveItem(19)" />
		<RunCode code="storedItem = FlexGlobals.topLevelApplication.obj8.alv.removeItemAt(19)" />
		<AssertMethodValue method="value = storedItem.info" value="item 19 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(18).info" value="item 18 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[18].info" value="item 18 present" />
		<RunCode code="FlexGlobals.topLevelApplication.callGetItemAtFor(0, 17, FlexGlobals.topLevelApplication.obj8.alv)" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifyItems(0, 17, 'pending', FlexGlobals.topLevelApplication.obj8.alv)" value="pass" />
		<AssertPropertyValue target="obj8.alv" propertyName="length" value="19" />
		<AssertPropertyValue target="obj8.theSimulator.source" propertyName="length" value="19" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.theList.ensureIndexIsVisible(18)" waitTarget="obj8.theList.dataGroup" waitEvent="propertyChange" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(17).nameLabel.text" value="item 17 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(18).nameLabel.text" value="item 18 failed" />
	</body>
</TestCase>

<TestCase testID="removeItemAt_nonvlist_test34" keywords="[AsyncListView,removeItemAt]" description="Remove first pending item, then receive the others." >
	<setup>
		<ResetComponent target="obj8" className="assets.PagedDataComp8" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.setup(0,3)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj8.alv.removeItemAt(0)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.theSimulator.receiveItem(0)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.theSimulator.receiveItem(1)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />

		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(0).info" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(1).info" value="item 2 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(0).nameLabel.text" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(1).nameLabel.text" value="item 2 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[0].info" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[1].info" value="item 2 present" />
	</body>
</TestCase>

<TestCase testID="removeItemAt_nonvlist_test35" keywords="[AsyncListView,removeItemAt]" description="Remove middle pending item, then receive the others." >
	<setup>
		<ResetComponent target="obj8" className="assets.PagedDataComp8" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.setup(0,3)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj8.alv.removeItemAt(1)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.theSimulator.receiveItem(0)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.theSimulator.receiveItem(1)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />

		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(0).info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(1).info" value="item 2 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(0).nameLabel.text" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(1).nameLabel.text" value="item 2 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[0].info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[1].info" value="item 2 present" />
	</body>
</TestCase>

<TestCase testID="removeItemAt_nonvlist_test36" keywords="[AsyncListView,removeItemAt]" description="Remove last pending item, then receive the others." >
	<setup>
		<ResetComponent target="obj8" className="assets.PagedDataComp8" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.setup(0,3)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj8.alv.removeItemAt(2)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.theSimulator.receiveItem(0)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.theSimulator.receiveItem(1)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />

		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(0).info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(1).info" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(0).nameLabel.text" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(1).nameLabel.text" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[0].info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[1].info" value="item 1 present" />
	</body>
</TestCase>

<TestCase testID="removeItemAt_nonvlist_test37" keywords="[AsyncListView,removeItemAt]" description="Remove first out of view pending item, then receive the others." >
	<setup>
		<ResetComponent target="obj8" className="assets.PagedDataComp8" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.setup(0,20,0,10)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj8.alv.removeItemAt(12)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.callGetItemAtFor(0, 18, FlexGlobals.topLevelApplication.obj8.alv)" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.theSimulator.receivePage()" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.theSimulator.receivePage()" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />

		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifyItems(0, 11, 'present', FlexGlobals.topLevelApplication.obj8.alv)" value="pass" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifyItems(12, 18, 'present', FlexGlobals.topLevelApplication.obj8.alv, 1)" value="pass" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifySimulatorItems(0, 11, 'present', FlexGlobals.topLevelApplication.obj8.theSimulator)" value="pass" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifySimulatorItems(12, 18, 'present', FlexGlobals.topLevelApplication.obj8.theSimulator, 1)" value="pass" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifyDataGroupItems(0, 11, 'present', FlexGlobals.topLevelApplication.obj8.theList.dataGroup)" value="pass" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifyDataGroupItems(12, 18, 'present', FlexGlobals.topLevelApplication.obj8.theList.dataGroup, 1)" value="pass" />
	</body>
</TestCase>

<TestCase testID="removeItemAt_nonvlist_test38" keywords="[AsyncListView,removeItemAt]" description="Remove last pending item (out of view), then receive the others." >
	<setup>
		<ResetComponent target="obj8" className="assets.PagedDataComp8" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.setup(0,20,0,10)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj8.alv.removeItemAt(19)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.callGetItemAtFor(0, 18, FlexGlobals.topLevelApplication.obj8.alv)" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.theSimulator.receivePage()" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.theSimulator.receivePage()" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifyItems(0, 18, 'present', FlexGlobals.topLevelApplication.obj8.alv)" value="pass" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifyDataGroupItems(0, 11, 'present', FlexGlobals.topLevelApplication.obj8.theList.dataGroup)" value="pass" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifyDataGroupItems(12, 18, 'present', FlexGlobals.topLevelApplication.obj8.theList.dataGroup)" value="pass" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifySimulatorItems(0, 18, 'present', FlexGlobals.topLevelApplication.obj8.theSimulator)" value="pass" />
	</body>
</TestCase>


</testCases>
</UnitTester>
