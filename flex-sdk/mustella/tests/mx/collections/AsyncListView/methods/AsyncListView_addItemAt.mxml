<?xml version="1.0" encoding="utf-8"?>
<!--

  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.

-->
<UnitTester 
	testDir="mx/collections/AsyncListView/methods/"
	xmlns:mx="http://www.adobe.com/2006/mxml" 
	xmlns="*" 
	xmlns:assets="assets.*"
	testSWF="AsyncListView_App1.mxml">

	<!-- this set of lines form a template that must be in each unit test -->
	<mx:Script>
	<![CDATA[
	public static function init(o:DisplayObject):void
	{
	}
	]]>
	</mx:Script>
	<mx:Metadata>
	<![CDATA[
		[Mixin]
	]]>
	</mx:Metadata>
	<!-- end of set of lines that must be in each unit test -->

	<mx:Script>
	<![CDATA[

		import assets.*;
		import mx.collections.*;
		import mx.core.FlexGlobals;
		
		public var storedItem:Object;
	]]>
	</mx:Script>

	<testCases>

<!--
This tests calling the AsyncListView's addItemAt() method.  We just add "real" items...not pending.
For tests which involve the server (simulator) inserting pending items which fail/succeed in a bunch of 
combinatios, see integration/AsyncListView_integration_serverAddingItems.mxml.

For the tests which add items to visible positions in the list, here's the plan:

                         < addItemAt() here
success/fail/pending item
                         < addItemAt() here
success/fail/pending item
                         < addItemAt() here

success    pending    fail    pending    success    pending    fail		  success    fail
success    pending    fail    success    pending    fail       pending    fail       success

9 list combinations x 3 places to insert x 1 kind of things to insert = 27 tests.



For the tests which add items to positions in the list which are not visible, here's the plan (do for useVirtualLayout = true and false):

...several items...

success/fail/pending item
*******************************************  Items below this line are out of view.  Need to do these with useVirtualLayout = true/false.
                         < addItemAt() here (right after the last visible row), as last items in the list and as being inserted in the list.
...several items...
success/fail/pending item
                         < addItemAt() here (last row)
*******************************************


Keep in mind that when the list is 200 pixels high, items 0-11 are visible.  Item 12 is not. The tests are:
List contains items 0-11, add a new item at position 12:
Item 11 is present
Item 11 is fail
Item 11 is pending

List contains items 0-20, add a new item at position 12:
Item 11 is present
Item 11 is fail
Item 11 is pending

List contains items 0-20, add a new item at position 21:
Item 20 is present
Item 20 is fail
Item 20 is pending

Again, do this for useVirtualLayout true (obj1) and false (obj2).

This is just a reminder:
public function setup( responseDelay:int = 500,
						numItems:int = 100,
						numPreloadedPages:int = 0,
						pageSize:int = 1,
						mode:String = 'manual',
						failureProbability:int = 0,
						createPendingItemFunction:Boolean = true,
						createFailedItemFunction:Boolean = true):void{
-->

<!--
===================
 vlist 
===================
-->


<!--
success
success
-->
<TestCase testID="addItemAt_ss_vlist_test1" keywords="[AsyncListView,addItemAt]" description="beginning of successes, real item" >
	<setup>
		<ResetComponent target="obj1" className="assets.PagedDataComp1" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.setup(0,2,0,2)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.receivePage()" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.alv.addItemAt({info: 'new item', status: 'present'},0)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(0).info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(1).info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(2).info" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(0))" value="0" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(1))" value="1" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(2))" value="2" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(0).nameLabel.text" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(1).nameLabel.text" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(2).nameLabel.text" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[0].info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[1].info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[2].info" value="item 1 present" />
		<AssertPropertyValue target="obj1.alv" propertyName="length" value="3" />
	</body>
</TestCase>

<TestCase testID="addItemAt_ss_vlist_test2" keywords="[AsyncListView,addItemAt]" description="between two successes, real item" >
	<setup>
		<ResetComponent target="obj1" className="assets.PagedDataComp1" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.setup(0,2,0,2)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.receivePage()" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.alv.addItemAt({info: 'new item', status: 'present'},1)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(0).info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(1).info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(2).info" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(0))" value="0" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(1))" value="1" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(2))" value="2" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(0).nameLabel.text" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(1).nameLabel.text" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(2).nameLabel.text" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[0].info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[1].info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[2].info" value="item 1 present" />
		<AssertPropertyValue target="obj1.alv" propertyName="length" value="3" />
	</body>
</TestCase>

<TestCase testID="addItemAt_ss_vlist_test3" keywords="[AsyncListView,addItemAt]" description="end of successes, real item" >
	<setup>
		<ResetComponent target="obj1" className="assets.PagedDataComp1" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.setup(0,2,0,2)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.receivePage()" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.alv.addItemAt({info: 'new item', status: 'present'},2)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(0).info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(1).info" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(2).info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(0))" value="0" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(1))" value="1" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(2))" value="2" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(0).nameLabel.text" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(1).nameLabel.text" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(2).nameLabel.text" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[0].info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[1].info" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[2].info" value="new item" />
		<AssertPropertyValue target="obj1.alv" propertyName="length" value="3" />
	</body>
</TestCase>

<!--
pending
pending
-->
<TestCase testID="addItemAt_pp_vlist_test1" keywords="[AsyncListView,addItemAt]" description="beginning of pendings, real item" >
	<setup>
		<ResetComponent target="obj1" className="assets.PagedDataComp1" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.setup(0,2)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj1.alv.addItemAt({info: 'new item', status: 'present'},0)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(0).info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(1).info" value="item 0 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(2).info" value="item 1 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(0))" value="0" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(1))" value="1" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(2))" value="2" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(0).nameLabel.text" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(1).nameLabel.text" value="item 0 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(2).nameLabel.text" value="item 1 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[0].info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[1].info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[2].info" value="item 1 present" />
		<AssertPropertyValue target="obj1.alv" propertyName="length" value="3" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.receiveItem(1)" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.receiveItem(2)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(0).info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(1).info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(2).info" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(0))" value="0" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(1))" value="1" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(2))" value="2" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(0).nameLabel.text" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(1).nameLabel.text" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(2).nameLabel.text" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[0].info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[1].info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[2].info" value="item 1 present" />
	</body>
</TestCase>

<TestCase testID="addItemAt_pp_vlist_test2" keywords="[AsyncListView,addItemAt]" description="between two pendings, real item" >
	<setup>
		<ResetComponent target="obj1" className="assets.PagedDataComp1" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.setup(0,2)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj1.alv.addItemAt({info: 'new item', status: 'present'},1)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(0).info" value="item 0 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(1).info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(2).info" value="item 1 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(0))" value="0" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(1))" value="1" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(2))" value="2" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(0).nameLabel.text" value="item 0 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(1).nameLabel.text" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(2).nameLabel.text" value="item 1 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[0].info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[1].info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[2].info" value="item 1 present" />
		<AssertPropertyValue target="obj1.alv" propertyName="length" value="3" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.receiveItem(0)" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.receiveItem(2)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(0).info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(1).info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(2).info" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(0))" value="0" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(1))" value="1" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(2))" value="2" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(0).nameLabel.text" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(1).nameLabel.text" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(2).nameLabel.text" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[0].info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[1].info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[2].info" value="item 1 present" />
	</body>
</TestCase>

<TestCase testID="addItemAt_pp_vlist_test3" keywords="[AsyncListView,addItemAt]" description="end of pendings, real item" >
	<setup>
		<ResetComponent target="obj1" className="assets.PagedDataComp1" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.setup(0,2)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj1.alv.addItemAt({info: 'new item', status: 'present'},2)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(0).info" value="item 0 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(1).info" value="item 1 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(2).info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(0))" value="0" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(1))" value="1" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(2))" value="2" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(0).nameLabel.text" value="item 0 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(1).nameLabel.text" value="item 1 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(2).nameLabel.text" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[0].info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[1].info" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[2].info" value="new item" />
		<AssertPropertyValue target="obj1.alv" propertyName="length" value="3" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.receiveItem(0)" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.receiveItem(1)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(0).info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(1).info" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(2).info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(0))" value="0" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(1))" value="1" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(2))" value="2" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(0).nameLabel.text" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(1).nameLabel.text" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(2).nameLabel.text" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[0].info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[1].info" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[2].info" value="new item" />
	</body>
</TestCase>


<!--
fail
fail
-->
<TestCase testID="addItemAt_ff_vlist_test1" keywords="[AsyncListView,addItemAt]" description="beginning of fails, real item" >
	<setup>
		<ResetComponent target="obj1" className="assets.PagedDataComp1" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.setup(0,2,0,2)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.failPage()" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.alv.addItemAt({info: 'new item', status: 'present'},0)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(0).info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(1).info" value="item 0 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(2).info" value="item 1 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(0))" value="0" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(1))" value="1" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(2))" value="2" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(0).nameLabel.text" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(1).nameLabel.text" value="item 0 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(2).nameLabel.text" value="item 1 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[0].info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[1].info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[2].info" value="item 1 present" />
		<AssertPropertyValue target="obj1.alv" propertyName="length" value="3" />
	</body>
</TestCase>

<TestCase testID="addItemAt_ff_vlist_test2" keywords="[AsyncListView,addItemAt]" description="between two fails, real item" >
	<setup>
		<ResetComponent target="obj1" className="assets.PagedDataComp1" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.setup(0,2,0,2)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.failPage()" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.alv.addItemAt({info: 'new item', status: 'present'},1)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(0).info" value="item 0 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(1).info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(2).info" value="item 1 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(0))" value="0" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(1))" value="1" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(2))" value="2" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(0).nameLabel.text" value="item 0 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(1).nameLabel.text" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(2).nameLabel.text" value="item 1 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[0].info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[1].info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[2].info" value="item 1 present" />
		<AssertPropertyValue target="obj1.alv" propertyName="length" value="3" />
	</body>
</TestCase>

<TestCase testID="addItemAt_ff_vlist_test3" keywords="[AsyncListView,addItemAt]" description="end of fails, real item" >
	<setup>
		<ResetComponent target="obj1" className="assets.PagedDataComp1" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.setup(0,2,0,2)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.failPage()" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.alv.addItemAt({info: 'new item', status: 'present'},2)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(0).info" value="item 0 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(1).info" value="item 1 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(2).info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(0))" value="0" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(1))" value="1" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(2))" value="2" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(0).nameLabel.text" value="item 0 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(1).nameLabel.text" value="item 1 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(2).nameLabel.text" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[0].info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[1].info" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[2].info" value="new item" />
		<AssertPropertyValue target="obj1.alv" propertyName="length" value="3" />
	</body>
</TestCase>


<!--
pending
success
-->
<TestCase testID="addItemAt_ps_vlist_test1" keywords="[AsyncListView,addItemAt]" description="beginning of pending and success, real item" >
	<setup>
		<ResetComponent target="obj1" className="assets.PagedDataComp1" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.setup(0,2)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.receiveItem(1)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.alv.addItemAt({info: 'new item', status: 'present'},0)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(0).info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(1).info" value="item 0 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(2).info" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(0))" value="0" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(1))" value="1" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(2))" value="2" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(0).nameLabel.text" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(1).nameLabel.text" value="item 0 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(2).nameLabel.text" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[0].info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[1].info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[2].info" value="item 1 present" />
		<AssertPropertyValue target="obj1.alv" propertyName="length" value="3" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.receiveItem(1)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(0).info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(1).info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(2).info" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(0))" value="0" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(1))" value="1" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(2))" value="2" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(0).nameLabel.text" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(1).nameLabel.text" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(2).nameLabel.text" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[0].info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[1].info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[2].info" value="item 1 present" />
	</body>
</TestCase>

<TestCase testID="addItemAt_ps_vlist_test2" keywords="[AsyncListView,addItemAt]" description="between a pending and success, real item" >
	<setup>
		<ResetComponent target="obj1" className="assets.PagedDataComp1" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.setup(0,2)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.receiveItem(1)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.alv.addItemAt({info: 'new item', status: 'present'},1)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(0).info" value="item 0 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(1).info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(2).info" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(0))" value="0" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(1))" value="1" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(2))" value="2" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(0).nameLabel.text" value="item 0 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(1).nameLabel.text" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(2).nameLabel.text" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[0].info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[1].info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[2].info" value="item 1 present" />
		<AssertPropertyValue target="obj1.alv" propertyName="length" value="3" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.receiveItem(0)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(0).info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(1).info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(2).info" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(0))" value="0" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(1))" value="1" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(2))" value="2" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(0).nameLabel.text" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(1).nameLabel.text" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(2).nameLabel.text" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[0].info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[1].info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[2].info" value="item 1 present" />
	</body>
</TestCase>

<TestCase testID="addItemAt_ps_vlist_test3" keywords="[AsyncListView,addItemAt]" description="end of pending and success, real item" >
	<setup>
		<ResetComponent target="obj1" className="assets.PagedDataComp1" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.setup(0,2)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.receiveItem(1)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.alv.addItemAt({info: 'new item', status: 'present'},2)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(0).info" value="item 0 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(1).info" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(2).info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(0))" value="0" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(1))" value="1" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(2))" value="2" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(0).nameLabel.text" value="item 0 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(1).nameLabel.text" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(2).nameLabel.text" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[0].info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[1].info" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[2].info" value="new item" />
		<AssertPropertyValue target="obj1.alv" propertyName="length" value="3" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.receiveItem(0)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(0).info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(1).info" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(2).info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(0))" value="0" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(1))" value="1" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(2))" value="2" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(0).nameLabel.text" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(1).nameLabel.text" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(2).nameLabel.text" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[0].info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[1].info" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[2].info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[0].info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[1].info" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[2].info" value="new item" />
	</body>
</TestCase>


<!--
success
pending
-->
<TestCase testID="addItemAt_sp_vlist_test1" keywords="[AsyncListView,addItemAt]" description="beginning of success and pending, real item" >
	<setup>
		<ResetComponent target="obj1" className="assets.PagedDataComp1" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.setup(0,2)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.receiveItem(0)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.alv.addItemAt({info: 'new item', status: 'present'},0)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(0).info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(1).info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(2).info" value="item 1 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(0))" value="0" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(1))" value="1" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(2))" value="2" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(0).nameLabel.text" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(1).nameLabel.text" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(2).nameLabel.text" value="item 1 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[0].info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[1].info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[2].info" value="item 1 present" />
		<AssertPropertyValue target="obj1.alv" propertyName="length" value="3" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.receiveItem(2)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(0).info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(1).info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(2).info" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(0))" value="0" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(1))" value="1" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(2))" value="2" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(0).nameLabel.text" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(1).nameLabel.text" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(2).nameLabel.text" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[0].info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[1].info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[2].info" value="item 1 present" />
		<AssertPropertyValue target="obj1.alv" propertyName="length" value="3" />
	</body>
</TestCase>

<TestCase testID="addItemAt_sp_vlist_test2" keywords="[AsyncListView,addItemAt]" description="between a success and pending, real item" >
	<setup>
		<ResetComponent target="obj1" className="assets.PagedDataComp1" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.setup(0,2)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.receiveItem(0)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.alv.addItemAt({info: 'new item', status: 'present'},1)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(0).info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(1).info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(2).info" value="item 1 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(0))" value="0" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(1))" value="1" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(2))" value="2" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(0).nameLabel.text" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(1).nameLabel.text" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(2).nameLabel.text" value="item 1 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[0].info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[1].info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[2].info" value="item 1 present" />
		<AssertPropertyValue target="obj1.alv" propertyName="length" value="3" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.receiveItem(2)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(0).info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(1).info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(2).info" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(0))" value="0" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(1))" value="1" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(2))" value="2" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(0).nameLabel.text" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(1).nameLabel.text" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(2).nameLabel.text" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[0].info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[1].info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[2].info" value="item 1 present" />
	</body>
</TestCase>

<TestCase testID="addItemAt_sp_vlist_test3" keywords="[AsyncListView,addItemAt]" description="end of success and pending, real item" >
	<setup>
		<ResetComponent target="obj1" className="assets.PagedDataComp1" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.setup(0,2)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.receiveItem(0)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.alv.addItemAt({info: 'new item', status: 'present'},2)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(0).info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(1).info" value="item 1 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(2).info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(0))" value="0" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(1))" value="1" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(2))" value="2" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(0).nameLabel.text" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(1).nameLabel.text" value="item 1 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(2).nameLabel.text" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[0].info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[1].info" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[2].info" value="new item" />
		<AssertPropertyValue target="obj1.alv" propertyName="length" value="3" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.receiveItem(1)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(0).info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(1).info" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(2).info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(0))" value="0" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(1))" value="1" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(2))" value="2" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(0).nameLabel.text" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(1).nameLabel.text" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(2).nameLabel.text" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[0].info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[1].info" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[2].info" value="new item" />
	</body>
</TestCase>


<!--
pending
fail
-->
<TestCase testID="addItemAt_pf_vlist_test1" keywords="[AsyncListView,addItemAt]" description="beginning of pending and fail, real item" >
	<setup>
		<ResetComponent target="obj1" className="assets.PagedDataComp1" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.setup(0,2)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.failItem(1)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.alv.addItemAt({info: 'new item', status: 'present'},0)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(0).info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(1).info" value="item 0 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(2).info" value="item 1 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(0))" value="0" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(1))" value="1" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(2))" value="2" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(0).nameLabel.text" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(1).nameLabel.text" value="item 0 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(2).nameLabel.text" value="item 1 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[0].info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[1].info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[2].info" value="item 1 present" />
		<AssertPropertyValue target="obj1.alv" propertyName="length" value="3" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.receiveItem(1)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(0).info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(1).info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(2).info" value="item 1 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(0))" value="0" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(1))" value="1" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(2))" value="2" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(0).nameLabel.text" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(1).nameLabel.text" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(2).nameLabel.text" value="item 1 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[0].info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[1].info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[2].info" value="item 1 present" />
		<AssertPropertyValue target="obj1.alv" propertyName="length" value="3" />
	</body>
</TestCase>

<TestCase testID="addItemAt_pf_vlist_test2" keywords="[AsyncListView,addItemAt]" description="between two pending and fail, real item" >
	<setup>
		<ResetComponent target="obj1" className="assets.PagedDataComp1" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.setup(0,2)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.failItem(1)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.alv.addItemAt({info: 'new item', status: 'present'},1)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(0).info" value="item 0 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(1).info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(2).info" value="item 1 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(0))" value="0" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(1))" value="1" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(2))" value="2" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(0).nameLabel.text" value="item 0 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(1).nameLabel.text" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(2).nameLabel.text" value="item 1 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[0].info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[1].info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[2].info" value="item 1 present" />
		<AssertPropertyValue target="obj1.alv" propertyName="length" value="3" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.receiveItem(0)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(0).info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(1).info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(2).info" value="item 1 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(0))" value="0" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(1))" value="1" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(2))" value="2" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(0).nameLabel.text" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(1).nameLabel.text" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(2).nameLabel.text" value="item 1 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[0].info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[1].info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[2].info" value="item 1 present" />
	</body>
</TestCase>

<TestCase testID="addItemAt_pf_vlist_test3" keywords="[AsyncListView,addItemAt]" description="end of pending and fail, real item" >
	<setup>
		<ResetComponent target="obj1" className="assets.PagedDataComp1" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.setup(0,2)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.failItem(1)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.alv.addItemAt({info: 'new item', status: 'present'},2)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(0).info" value="item 0 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(1).info" value="item 1 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(2).info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(0))" value="0" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(1))" value="1" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(2))" value="2" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(0).nameLabel.text" value="item 0 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(1).nameLabel.text" value="item 1 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(2).nameLabel.text" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[0].info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[1].info" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[2].info" value="new item" />
		<AssertPropertyValue target="obj1.alv" propertyName="length" value="3" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.receiveItem(0)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(0).info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(1).info" value="item 1 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(2).info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(0))" value="0" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(1))" value="1" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(2))" value="2" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(0).nameLabel.text" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(1).nameLabel.text" value="item 1 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(2).nameLabel.text" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[0].info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[1].info" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[2].info" value="new item" />
	</body>
</TestCase>


<!--
fail
pending
-->
<TestCase testID="addItemAt_fp_vlist_test1" keywords="[AsyncListView,addItemAt]" description="beginning of fail and pending, real item" >
	<setup>
		<ResetComponent target="obj1" className="assets.PagedDataComp1" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.setup(0,2)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.failItem(0)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.alv.addItemAt({info: 'new item', status: 'present'},0)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(0).info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(1).info" value="item 0 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(2).info" value="item 1 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(0))" value="0" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(1))" value="1" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(2))" value="2" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(0).nameLabel.text" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(1).nameLabel.text" value="item 0 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(2).nameLabel.text" value="item 1 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[0].info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[1].info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[2].info" value="item 1 present" />
		<AssertPropertyValue target="obj1.alv" propertyName="length" value="3" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.receiveItem(2)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(0).info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(1).info" value="item 0 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(2).info" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(0))" value="0" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(1))" value="1" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(2))" value="2" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(0).nameLabel.text" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(1).nameLabel.text" value="item 0 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(2).nameLabel.text" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[0].info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[1].info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[2].info" value="item 1 present" />
	</body>
</TestCase>

<TestCase testID="addItemAt_fp_vlist_test2" keywords="[AsyncListView,addItemAt]" description="between two fail and pending, real item" >
	<setup>
		<ResetComponent target="obj1" className="assets.PagedDataComp1" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.setup(0,2)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.failItem(0)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.alv.addItemAt({info: 'new item', status: 'present'},1)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(0).info" value="item 0 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(1).info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(2).info" value="item 1 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(0))" value="0" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(1))" value="1" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(2))" value="2" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(0).nameLabel.text" value="item 0 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(1).nameLabel.text" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(2).nameLabel.text" value="item 1 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[0].info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[1].info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[2].info" value="item 1 present" />
		<AssertPropertyValue target="obj1.alv" propertyName="length" value="3" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.receiveItem(2)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(0).info" value="item 0 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(1).info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(2).info" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(0))" value="0" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(1))" value="1" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(2))" value="2" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(0).nameLabel.text" value="item 0 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(1).nameLabel.text" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(2).nameLabel.text" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[0].info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[1].info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[2].info" value="item 1 present" />
	</body>
</TestCase>

<TestCase testID="addItemAt_fp_vlist_test3" keywords="[AsyncListView,addItemAt]" description="end of fail and pending, real item" >
	<setup>
		<ResetComponent target="obj1" className="assets.PagedDataComp1" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.setup(0,2)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.failItem(0)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.alv.addItemAt({info: 'new item', status: 'present'},2)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(0).info" value="item 0 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(1).info" value="item 1 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(2).info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(0))" value="0" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(1))" value="1" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(2))" value="2" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(0).nameLabel.text" value="item 0 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(1).nameLabel.text" value="item 1 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(2).nameLabel.text" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[0].info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[1].info" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[2].info" value="new item" />
		<AssertPropertyValue target="obj1.alv" propertyName="length" value="3" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.receiveItem(1)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(0).info" value="item 0 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(1).info" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(2).info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(0))" value="0" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(1))" value="1" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(2))" value="2" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(0).nameLabel.text" value="item 0 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(1).nameLabel.text" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(2).nameLabel.text" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[0].info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[1].info" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[2].info" value="new item" />
	</body>
</TestCase>


<!--
success
fail
-->
<TestCase testID="addItemAt_sf_vlist_test1" keywords="[AsyncListView,addItemAt]" description="beginning of success and fail, real item" >
	<setup>
		<ResetComponent target="obj1" className="assets.PagedDataComp1" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.setup(0,2)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.receiveItem(0)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.failItem(1)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.alv.addItemAt({info: 'new item', status: 'present'},0)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(0).info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(1).info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(2).info" value="item 1 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(0))" value="0" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(1))" value="1" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(2))" value="2" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(0).nameLabel.text" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(1).nameLabel.text" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(2).nameLabel.text" value="item 1 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[0].info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[1].info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[2].info" value="item 1 present" />
		<AssertPropertyValue target="obj1.alv" propertyName="length" value="3" />
	</body>
</TestCase>

<TestCase testID="addItemAt_sf_vlist_test2" keywords="[AsyncListView,addItemAt]" description="between two success and fail, real item" >
	<setup>
		<ResetComponent target="obj1" className="assets.PagedDataComp1" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.setup(0,2)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.receiveItem(0)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.failItem(1)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.alv.addItemAt({info: 'new item', status: 'present'},1)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(0).info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(1).info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(2).info" value="item 1 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(0))" value="0" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(1))" value="1" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(2))" value="2" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(0).nameLabel.text" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(1).nameLabel.text" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(2).nameLabel.text" value="item 1 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[0].info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[1].info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[2].info" value="item 1 present" />
		<AssertPropertyValue target="obj1.alv" propertyName="length" value="3" />
	</body>
</TestCase>

<TestCase testID="addItemAt_sf_vlist_test3" keywords="[AsyncListView,addItemAt]" description="end of success and fail, real item" >
	<setup>
		<ResetComponent target="obj1" className="assets.PagedDataComp1" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.setup(0,2)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.receiveItem(0)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.failItem(1)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.alv.addItemAt({info: 'new item', status: 'present'},2)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(0).info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(1).info" value="item 1 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(2).info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(0))" value="0" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(1))" value="1" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(2))" value="2" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(0).nameLabel.text" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(1).nameLabel.text" value="item 1 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(2).nameLabel.text" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[0].info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[1].info" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[2].info" value="new item" />
		<AssertPropertyValue target="obj1.alv" propertyName="length" value="3" />
	</body>
</TestCase>


<!--
fail
success
-->
<TestCase testID="addItemAt_fs_vlist_test1" keywords="[AsyncListView,addItemAt]" description="beginning of fail and success, real item" >
	<setup>
		<ResetComponent target="obj1" className="assets.PagedDataComp1" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.setup(0,2)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.failItem(0)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.receiveItem(1)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.alv.addItemAt({info: 'new item', status: 'present'},0)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(0).info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(1).info" value="item 0 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(2).info" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(0))" value="0" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(1))" value="1" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(2))" value="2" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(0).nameLabel.text" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(1).nameLabel.text" value="item 0 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(2).nameLabel.text" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[0].info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[1].info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[2].info" value="item 1 present" />
		<AssertPropertyValue target="obj1.alv" propertyName="length" value="3" />
	</body>
</TestCase>

<TestCase testID="addItemAt_fs_vlist_test2" keywords="[AsyncListView,addItemAt]" description="between two fail and success, real item" >
	<setup>
		<ResetComponent target="obj1" className="assets.PagedDataComp1" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.setup(0,2)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.failItem(0)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.receiveItem(1)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.alv.addItemAt({info: 'new item', status: 'present'},1)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(0).info" value="item 0 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(1).info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(2).info" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(0))" value="0" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(1))" value="1" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(2))" value="2" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(0).nameLabel.text" value="item 0 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(1).nameLabel.text" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(2).nameLabel.text" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[0].info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[1].info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[2].info" value="item 1 present" />
		<AssertPropertyValue target="obj1.alv" propertyName="length" value="3" />
	</body>
</TestCase>

<TestCase testID="addItemAt_fs_vlist_test3" keywords="[AsyncListView,addItemAt]" description="end of fail and success, real item" >
	<setup>
		<ResetComponent target="obj1" className="assets.PagedDataComp1" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.setup(0,2)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.failItem(0)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.receiveItem(1)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.alv.addItemAt({info: 'new item', status: 'present'},2)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(0).info" value="item 0 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(1).info" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(2).info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(0))" value="0" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(1))" value="1" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(2))" value="2" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(0).nameLabel.text" value="item 0 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(1).nameLabel.text" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(2).nameLabel.text" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[0].info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[1].info" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[2].info" value="new item" />
		<AssertPropertyValue target="obj1.alv" propertyName="length" value="3" />
	</body>
</TestCase>


<!-- Here are the tests which work with items out of view, useVirtualLayout = true. -->
<TestCase testID="addItemAt_outOfView_vlist_test1" keywords="[AsyncListView,addItemAt]" description="Last item is present, add the first non-visible item" >
	<setup>
		<ResetComponent target="obj1" className="assets.PagedDataComp1" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.setup(0,12)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj1.theList.ensureIndexIsVisible(11)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.receiveItem(11)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.alv.addItemAt({info: 'new item', status: 'present'},12)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifyItems(0, 10, 'pending', FlexGlobals.topLevelApplication.obj1.alv)" value="pass" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(11).info" value="item 11 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(12).info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(11))" value="11" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(12))" value="12" />
		<AssertPropertyValue target="obj1.alv" propertyName="length" value="13" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.theList.ensureIndexIsVisible(12)" waitTarget="obj1.theList.dataGroup" waitEvent="propertyChange" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifyItems(0, 10, 'pending', FlexGlobals.topLevelApplication.obj1.alv)" value="pass" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(11).info" value="item 11 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(12).info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(11))" value="11" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(12))" value="12" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(11).nameLabel.text" value="item 11 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(12).nameLabel.text" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifySimulatorItems(0, 11, 'present', FlexGlobals.topLevelApplication.obj1.items)" value="pass" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[12].info" value="new item" />
		<AssertPropertyValue target="obj1.alv" propertyName="length" value="13" />
	</body>
</TestCase>

<TestCase testID="addItemAt_outOfView_vlist_test2" keywords="[AsyncListView,addItemAt]" description="Last item is failure, add the first non-visible item" >
	<setup>
		<ResetComponent target="obj1" className="assets.PagedDataComp1" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.setup(0,12)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj1.theList.ensureIndexIsVisible(11)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.failItem(11)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.alv.addItemAt({info: 'new item', status: 'present'},12)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifyItems(0, 10, 'pending', FlexGlobals.topLevelApplication.obj1.alv)" value="pass" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(11).info" value="item 11 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(12).info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(11))" value="11" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(12))" value="12" />
		<AssertPropertyValue target="obj1.alv" propertyName="length" value="13" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.theList.ensureIndexIsVisible(12)" waitTarget="obj1.theList.dataGroup" waitEvent="propertyChange" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifyItems(0, 10, 'pending', FlexGlobals.topLevelApplication.obj1.alv)" value="pass" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(11).info" value="item 11 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(12).info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(11))" value="11" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(12))" value="12" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(11).nameLabel.text" value="item 11 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(12).nameLabel.text" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifySimulatorItems(0, 10, 'present', FlexGlobals.topLevelApplication.obj1.items)" value="pass" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[11].info" value="item 11 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[12].info" value="new item" />
		<AssertPropertyValue target="obj1.alv" propertyName="length" value="13" />
	</body>
</TestCase>

<TestCase testID="addItemAt_outOfView_vlist_test3" keywords="[AsyncListView,addItemAt]" description="Last item is pending, add the first non-visible item" >
	<setup>
		<ResetComponent target="obj1" className="assets.PagedDataComp1" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.setup(0,12)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj1.alv.addItemAt({info: 'new item', status: 'present'},12)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifyItems(0, 11, 'pending', FlexGlobals.topLevelApplication.obj1.alv)" value="pass" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(12).info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(11))" value="11" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(12))" value="12" />
		<AssertPropertyValue target="obj1.alv" propertyName="length" value="13" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.theList.ensureIndexIsVisible(12)" waitTarget="obj1.theList.dataGroup" waitEvent="propertyChange" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifyItems(0, 11, 'pending', FlexGlobals.topLevelApplication.obj1.alv)" value="pass" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(12).info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(11))" value="11" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(12))" value="12" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(11).nameLabel.text" value="item 11 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(12).nameLabel.text" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifySimulatorItems(0, 11, 'present', FlexGlobals.topLevelApplication.obj1.items)" value="pass" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[12].info" value="new item" />
		<AssertPropertyValue target="obj1.alv" propertyName="length" value="13" />
	</body>
</TestCase>

<TestCase testID="addItemAt_outOfView_vlist_test4" keywords="[AsyncListView,addItemAt]" description="Many items on and off screen pending, add at first non-visible position after present item" >
	<setup>
		<ResetComponent target="obj1" className="assets.PagedDataComp1" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.setup(0,30)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj1.theList.ensureIndexIsVisible(11)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.receiveItem(11)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.alv.addItemAt({info: 'new item', status: 'present'},12)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifyItems(0, 10, 'pending', FlexGlobals.topLevelApplication.obj1.alv)" value="pass" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(11).info" value="item 11 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(12).info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifyItems(13, 30, 'pending', FlexGlobals.topLevelApplication.obj1.alv)" value="pass" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(11))" value="11" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(12))" value="12" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifySimulatorItems(0, 11, 'present', FlexGlobals.topLevelApplication.obj1.items)" value="pass" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[12].info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifySimulatorItems(13, 30, 'present', FlexGlobals.topLevelApplication.obj1.items, -1)" value="pass" />
		<AssertPropertyValue target="obj1.alv" propertyName="length" value="31" />
	</body>
</TestCase>

<TestCase testID="addItemAt_outOfView_vlist_test5" keywords="[AsyncListView,addItemAt]" description="Many items on and off screen pending, add at first non-visible position after failed item" >
	<setup>
		<ResetComponent target="obj1" className="assets.PagedDataComp1" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.setup(0,30)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj1.theList.ensureIndexIsVisible(11)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.failItem(11)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.alv.addItemAt({info: 'new item', status: 'present'},12)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifyItems(0, 10, 'pending', FlexGlobals.topLevelApplication.obj1.alv)" value="pass" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(11).info" value="item 11 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(12).info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifyItems(13, 30, 'pending', FlexGlobals.topLevelApplication.obj1.alv)" value="pass" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(11))" value="11" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(12))" value="12" />
		<AssertPropertyValue target="obj1.alv" propertyName="length" value="31" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.theList.ensureIndexIsVisible(12)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifyItems(0, 10, 'pending', FlexGlobals.topLevelApplication.obj1.alv)" value="pass" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(11).info" value="item 11 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(12).info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifyItems(13, 30, 'pending', FlexGlobals.topLevelApplication.obj1.alv)" value="pass" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(11))" value="11" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(12))" value="12" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(11).nameLabel.text" value="item 11 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(12).nameLabel.text" value="new item" />
		<AssertPropertyValue target="obj1.alv" propertyName="length" value="31" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.theList.ensureIndexIsVisible(30)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifyItems(0, 10, 'pending', FlexGlobals.topLevelApplication.obj1.alv)" value="pass" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(11).info" value="item 11 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(12).info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifyItems(13, 30, 'pending', FlexGlobals.topLevelApplication.obj1.alv)" value="pass" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(11))" value="11" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(12))" value="12" />
		<AssertPropertyValue target="obj1.alv" propertyName="length" value="31" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.theList.ensureIndexIsVisible(5)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifyItems(0, 10, 'pending', FlexGlobals.topLevelApplication.obj1.alv)" value="pass" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(11).info" value="item 11 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(12).info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifyItems(13, 30, 'pending', FlexGlobals.topLevelApplication.obj1.alv)" value="pass" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(11))" value="11" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(12))" value="12" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(11).nameLabel.text" value="item 11 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(12).nameLabel.text" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifySimulatorItems(0, 10, 'present', FlexGlobals.topLevelApplication.obj1.items)" value="pass" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[11].info" value="item 11 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[12].info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifySimulatorItems(13, 30, 'present', FlexGlobals.topLevelApplication.obj1.items, -1)" value="pass" />
		<AssertPropertyValue target="obj1.alv" propertyName="length" value="31" />
	</body>
</TestCase>

<TestCase testID="addItemAt_outOfView_vlist_test6" keywords="[AsyncListView,addItemAt]" description="Many items on and off screen pending, add at first non-visible position after pending item" >
	<setup>
		<ResetComponent target="obj1" className="assets.PagedDataComp1" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.setup(0,30)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj1.alv.addItemAt({info: 'new item', status: 'present'},12)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifyItems(0, 10, 'pending', FlexGlobals.topLevelApplication.obj1.alv)" value="pass" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(12).info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifyItems(13, 30, 'pending', FlexGlobals.topLevelApplication.obj1.alv)" value="pass" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(11))" value="11" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(12))" value="12" />
		<AssertPropertyValue target="obj1.alv" propertyName="length" value="31" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.theList.ensureIndexIsVisible(12)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifyItems(0, 10, 'pending', FlexGlobals.topLevelApplication.obj1.alv)" value="pass" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(12).info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifyItems(13, 30, 'pending', FlexGlobals.topLevelApplication.obj1.alv)" value="pass" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(11))" value="11" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(12))" value="12" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(11).nameLabel.text" value="item 11 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(12).nameLabel.text" value="new item" />
		<AssertPropertyValue target="obj1.alv" propertyName="length" value="31" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.theList.ensureIndexIsVisible(30)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifyItems(0, 10, 'pending', FlexGlobals.topLevelApplication.obj1.alv)" value="pass" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(12).info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifyItems(13, 30, 'pending', FlexGlobals.topLevelApplication.obj1.alv)" value="pass" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(11))" value="11" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(12))" value="12" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifySimulatorItems(0, 11, 'present', FlexGlobals.topLevelApplication.obj1.items)" value="pass" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[12].info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifySimulatorItems(13, 30, 'present', FlexGlobals.topLevelApplication.obj1.items, -1)" value="pass" />
		<AssertPropertyValue target="obj1.alv" propertyName="length" value="31" />
	</body>
</TestCase>

<TestCase testID="addItemAt_outOfView_vlist_test7" keywords="[AsyncListView,addItemAt]" description="Many items on and off screen pending, add at last non-visible position after present item" >
	<setup>
		<ResetComponent target="obj1" className="assets.PagedDataComp1" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.setup(0,30)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj1.alv.getItemAt(29)" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.receiveItem(29)" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.alv.addItemAt({info: 'new item', status: 'present'},30)" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifyItems(0, 28, 'pending', FlexGlobals.topLevelApplication.obj1.alv)" value="pass" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(29).info" value="item 29 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(30).info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(29))" value="29" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(30))" value="30" />
		<AssertPropertyValue target="obj1.alv" propertyName="length" value="31" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.theList.ensureIndexIsVisible(12)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifyItems(0, 28, 'pending', FlexGlobals.topLevelApplication.obj1.alv)" value="pass" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(29).info" value="item 29 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(30).info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(29))" value="29" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(30))" value="30" />
		<AssertPropertyValue target="obj1.alv" propertyName="length" value="31" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.theList.ensureIndexIsVisible(30)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifyItems(0, 28, 'pending', FlexGlobals.topLevelApplication.obj1.alv)" value="pass" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(29).info" value="item 29 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(30).info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(29).nameLabel.text" value="item 29 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(30).nameLabel.text" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(29))" value="29" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(30))" value="30" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifySimulatorItems(0, 29, 'present', FlexGlobals.topLevelApplication.obj1.items)" value="pass" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[30].info" value="new item" />
		<AssertPropertyValue target="obj1.alv" propertyName="length" value="31" />
	</body>
</TestCase>

<TestCase testID="addItemAt_outOfView_vlist_test8" keywords="[AsyncListView,addItemAt]" description="Many items on and off screen pending, add at last non-visible position after failed item" >
	<setup>
		<ResetComponent target="obj1" className="assets.PagedDataComp1" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.setup(0,30)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj1.alv.getItemAt(29)" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.failItem(29)" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.alv.addItemAt({info: 'new item', status: 'present'},30)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifyItems(0, 28, 'pending', FlexGlobals.topLevelApplication.obj1.alv)" value="pass" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(29).info" value="item 29 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(30).info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(29))" value="29" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(30))" value="30" />
		<AssertPropertyValue target="obj1.alv" propertyName="length" value="31" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.theList.ensureIndexIsVisible(12)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifyItems(0, 28, 'pending', FlexGlobals.topLevelApplication.obj1.alv)" value="pass" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(29).info" value="item 29 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(30).info" value="new item" />
		<AssertPropertyValue target="obj1.alv" propertyName="length" value="31" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(29))" value="29" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(30))" value="30" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.theList.ensureIndexIsVisible(30)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifyItems(0, 28, 'pending', FlexGlobals.topLevelApplication.obj1.alv)" value="pass" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(29).info" value="item 29 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(30).info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(29).nameLabel.text" value="item 29 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(30).nameLabel.text" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(29))" value="29" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(30))" value="30" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifySimulatorItems(0, 28, 'present', FlexGlobals.topLevelApplication.obj1.items)" value="pass" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[29].info" value="item 29 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[30].info" value="new item" />
		<AssertPropertyValue target="obj1.alv" propertyName="length" value="31" />
	</body>
</TestCase>

<TestCase testID="addItemAt_outOfView_vlist_test9" keywords="[AsyncListView,addItemAt]" description="Many items on and off screen pending, add at last non-visible position after pending item" >
	<setup>
		<ResetComponent target="obj1" className="assets.PagedDataComp1" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.setup(0,30)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj1.alv.addItemAt({info: 'new item', status: 'present'},30)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifyItems(0, 29, 'pending', FlexGlobals.topLevelApplication.obj1.alv)" value="pass" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(30).info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(29))" value="29" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(30))" value="30" />
		<AssertPropertyValue target="obj1.alv" propertyName="length" value="31" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.theList.ensureIndexIsVisible(12)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifyItems(0, 29, 'pending', FlexGlobals.topLevelApplication.obj1.alv)" value="pass" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(30).info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(29))" value="29" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(30))" value="30" />
		<AssertPropertyValue target="obj1.alv" propertyName="length" value="31" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.theList.ensureIndexIsVisible(30)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifyItems(0, 29, 'pending', FlexGlobals.topLevelApplication.obj1.alv)" value="pass" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(30).info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(29))" value="29" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(30))" value="30" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(29).nameLabel.text" value="item 29 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(30).nameLabel.text" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifySimulatorItems(0, 29, 'present', FlexGlobals.topLevelApplication.obj1.items)" value="pass" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[30].info" value="new item" />
		<AssertPropertyValue target="obj1.alv" propertyName="length" value="31" />
	</body>
</TestCase>

<!-- SDK-23831 -->
<TestCase testID="addItemAt_outOfView_vlist_test10" keywords="[AsyncListView,addItemAt]" description="Call addItemAt() to add to the end of the list if the last item in the list was made pending and received before the other items were made pending." >
	<setup>
		<ResetComponent target="obj1" className="assets.PagedDataComp1" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.setup(0,30)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj1.alv.getItemAt(29)" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.receiveItem(29)" />
		<RunCode code="FlexGlobals.topLevelApplication.callGetItemAtFor(0, 29, FlexGlobals.topLevelApplication.obj1.alv)" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.alv.addItemAt({info:'new item', status:'present'}, 30)" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifyItems(0, 28, 'pending', FlexGlobals.topLevelApplication.obj1.alv)" value="pass" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(29).info" value="item 29 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(30).info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifySimulatorItems(0, 29, 'present', FlexGlobals.topLevelApplication.obj1.items)" value="pass" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[30].info" value="new item" />
	</body>
</TestCase>

<TestCase testID="addItemAt_otherItemsConstant_test1" keywords="[AsyncListView,addItemAt]" description="Be sure that when items are added, the pending item which is pushed out of the way are not recreated." >
	<setup>
		<ResetComponent target="obj1" className="assets.PagedDataComp1" waitEvent="updateComplete" />
		<SetProperty target="obj1.theList" propertyName="height" value="40" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.setup(0,2)" />
	</setup>
	<body>
		<RunCode code="storedItem = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(0)" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.alv.addItemAt({info:'added item', status:'present'},0)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = (FlexGlobals.topLevelApplication.obj1.alv.getItemAt(1) === storedItem)" value="true" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.alv.addItemAt({info:'added item', status:'present'},0)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = (FlexGlobals.topLevelApplication.obj1.alv.getItemAt(2) === storedItem)" value="true" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.alv.addItemAt({info:'added item', status:'present'},0)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = (FlexGlobals.topLevelApplication.obj1.alv.getItemAt(3) === storedItem)" value="true" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.alv.addItemAt({info:'added item', status:'present'},0)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = (FlexGlobals.topLevelApplication.obj1.alv.getItemAt(4) === storedItem)" value="true" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.alv.addItemAt({info:'added item', status:'present'},0)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = (FlexGlobals.topLevelApplication.obj1.alv.getItemAt(5) === storedItem)" value="true" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[0].info" value="added item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[1].info" value="added item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[2].info" value="added item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[3].info" value="added item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[4].info" value="added item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[5].info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[6].info" value="item 1 present" />
	</body>
</TestCase>

<TestCase testID="addItemAt_otherItemsConstant_test2" keywords="[AsyncListView,addItemAt]" description="Be sure that when items are added, the present item which is pushed out of the way are not recreated." >
	<setup>
		<ResetComponent target="obj1" className="assets.PagedDataComp1" waitEvent="updateComplete" />
		<SetProperty target="obj1.theList" propertyName="height" value="40" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.setup(0,2)" />
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.receiveItem(0)" />
		<RunCode code="storedItem = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(0)" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.alv.addItemAt({info:'added item', status:'present'},0)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = (FlexGlobals.topLevelApplication.obj1.alv.getItemAt(1) === storedItem)" value="true" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.alv.addItemAt({info:'added item', status:'present'},0)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = (FlexGlobals.topLevelApplication.obj1.alv.getItemAt(2) === storedItem)" value="true" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.alv.addItemAt({info:'added item', status:'present'},0)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = (FlexGlobals.topLevelApplication.obj1.alv.getItemAt(3) === storedItem)" value="true" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.alv.addItemAt({info:'added item', status:'present'},0)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = (FlexGlobals.topLevelApplication.obj1.alv.getItemAt(4) === storedItem)" value="true" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.alv.addItemAt({info:'added item', status:'present'},0)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = (FlexGlobals.topLevelApplication.obj1.alv.getItemAt(5) === storedItem)" value="true" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[0].info" value="added item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[1].info" value="added item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[2].info" value="added item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[3].info" value="added item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[4].info" value="added item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[5].info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[6].info" value="item 1 present" />
	</body>
</TestCase>

<TestCase testID="addItemAt_otherItemsConstant_test3" keywords="[AsyncListView,addItemAt]" description="Be sure that when items are added, the failed item which is pushed out of the way are not recreated." >
	<setup>
		<ResetComponent target="obj1" className="assets.PagedDataComp1" waitEvent="updateComplete" />
		<SetProperty target="obj1.theList" propertyName="height" value="200" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.setup(0,2)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.failItem(0)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="storedItem = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(0)" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.alv.addItemAt({info:'added item', status:'present'},0)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = (FlexGlobals.topLevelApplication.obj1.alv.getItemAt(1) === storedItem)" value="true" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.alv.addItemAt({info:'added item', status:'present'},0)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = (FlexGlobals.topLevelApplication.obj1.alv.getItemAt(2) === storedItem)" value="true" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.alv.addItemAt({info:'added item', status:'present'},0)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = (FlexGlobals.topLevelApplication.obj1.alv.getItemAt(3) === storedItem)" value="true" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.alv.addItemAt({info:'added item', status:'present'},0)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = (FlexGlobals.topLevelApplication.obj1.alv.getItemAt(4) === storedItem)" value="true" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.alv.addItemAt({info:'added item', status:'present'},0)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = (FlexGlobals.topLevelApplication.obj1.alv.getItemAt(5) === storedItem)" value="true" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[0].info" value="added item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[1].info" value="added item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[2].info" value="added item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[3].info" value="added item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[4].info" value="added item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[5].info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[6].info" value="item 1 present" />
	</body>
</TestCase>


<TestCase testID="addItemAt_vlist_addAndReceive_test1" keywords="[AsyncListView,removeItemAt]" description="Add item in front of other pending items, then receive the others." >
	<setup>
		<ResetComponent target="obj1" className="assets.PagedDataComp1" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.setup(0,3)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj1.alv.addItemAt({info:'item added', status:'present'},0)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.receiveItem(1)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.receiveItem(2)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.receiveItem(3)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />

		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(0).info" value="item added" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(1).info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(2).info" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(3).info" value="item 2 present" />
		
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(0).nameLabel.text" value="item added" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(1).nameLabel.text" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(2).nameLabel.text" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(3).nameLabel.text" value="item 2 present" />
		
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[0].info" value="item added" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[1].info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[2].info" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[3].info" value="item 2 present" />
	</body>
</TestCase>

<TestCase testID="addItemAt_vlist_addAndReceive_test2" keywords="[AsyncListView,removeItemAt]" description="Add item between other pending items, then receive the others." >
	<setup>
		<ResetComponent target="obj1" className="assets.PagedDataComp1" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.setup(0,3)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj1.alv.addItemAt({info:'item added', status:'present'},1)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.receiveItem(0)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.receiveItem(2)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.receiveItem(3)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />

		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(0).info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(1).info" value="item added" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(2).info" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(3).info" value="item 2 present" />
		
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(0).nameLabel.text" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(1).nameLabel.text" value="item added" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(2).nameLabel.text" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(3).nameLabel.text" value="item 2 present" />
		
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[0].info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[1].info" value="item added" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[2].info" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[3].info" value="item 2 present" />
	</body>
</TestCase>

<TestCase testID="addItemAt_vlist_addAndReceive_test3" keywords="[AsyncListView,removeItemAt]" description="Add item after other pending items, then receive the others." >
	<setup>
		<ResetComponent target="obj1" className="assets.PagedDataComp1" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.setup(0,3)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj1.alv.addItemAt({info:'item added', status:'present'},3)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.receiveItem(0)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.receiveItem(1)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.receiveItem(2)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />

		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(0).info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(1).info" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(2).info" value="item 2 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(3).info" value="item added" />
		
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(0).nameLabel.text" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(1).nameLabel.text" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(2).nameLabel.text" value="item 2 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(3).nameLabel.text" value="item added" />
		
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[0].info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[1].info" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[2].info" value="item 2 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[3].info" value="item added" />
	</body>
</TestCase>

<TestCase testID="addItemAt_vlist_addAndReceive_test4" keywords="[AsyncListView,removeItemAt]" description="Add item at the first nonvisible position among pending items, then receive the others." >
	<setup>
		<ResetComponent target="obj1" className="assets.PagedDataComp1" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.setup(0,20,0,10)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj1.alv.addItemAt({info:'added item', status:'present'},12)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.callGetItemAtFor(0, 20, FlexGlobals.topLevelApplication.obj1.alv)" />

		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.receivePage()" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.receivePage()" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />

		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifyItems(0, 11, 'present', FlexGlobals.topLevelApplication.obj1.alv)" value="pass" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(12).info" value="added item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifyItems(13, 20, 'present', FlexGlobals.topLevelApplication.obj1.alv, -1)" value="pass" />

		<RunCode code="FlexGlobals.topLevelApplication.obj1.theList.ensureIndexIsVisible(11)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifyDataGroupItems(1, 11, 'present', FlexGlobals.topLevelApplication.obj1.theList.dataGroup)" value="pass" />

		<RunCode code="FlexGlobals.topLevelApplication.obj1.theList.ensureIndexIsVisible(20)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(12).nameLabel.text" value="added item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifyDataGroupItems(13, 20, 'present', FlexGlobals.topLevelApplication.obj1.theList.dataGroup, -1)" value="pass" />

		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifySimulatorItems(0, 11, 'present', FlexGlobals.topLevelApplication.obj1.items)" value="pass" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[12].info" value="added item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifySimulatorItems(13, 20, 'present', FlexGlobals.topLevelApplication.obj1.items, -1)" value="pass" />
	</body>
</TestCase>

<TestCase testID="addItemAt_vlist_addAndReceive_test5" keywords="[AsyncListView,removeItemAt]" description="Add item at the end of pending items, then receive the others." >
	<setup>
		<ResetComponent target="obj1" className="assets.PagedDataComp1" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.setup(0,20,0,10)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj1.alv.addItemAt({info:'added item', status:'present'},20)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.callGetItemAtFor(0, 20, FlexGlobals.topLevelApplication.obj1.alv)" />

		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.receivePage()" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.receivePage()" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />

		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifyItems(0, 19, 'present', FlexGlobals.topLevelApplication.obj1.alv)" value="pass" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(20).info" value="added item" />

		<RunCode code="FlexGlobals.topLevelApplication.obj1.theList.ensureIndexIsVisible(11)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifyDataGroupItems(1, 11, 'present', FlexGlobals.topLevelApplication.obj1.theList.dataGroup)" value="pass" />

		<RunCode code="FlexGlobals.topLevelApplication.obj1.theList.ensureIndexIsVisible(20)" waitTarget="obj1.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifyDataGroupItems(12, 19, 'present', FlexGlobals.topLevelApplication.obj1.theList.dataGroup)" value="pass" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.theList.dataGroup.getElementAt(20).nameLabel.text" value="added item" />

		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifySimulatorItems(0, 19, 'present', FlexGlobals.topLevelApplication.obj1.items)" value="pass" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.items.source[20].info" value="added item" />
	</body>
</TestCase>



<!--
===================
===================
===================
===================
 nonvlist 
===================
===================
===================
===================
-->


<!--
success
success
-->
<TestCase testID="addItemAt_ss_nonvlist_test1" keywords="[AsyncListView,addItemAt]" description="beginning of successes, real item" >
	<setup>
		<ResetComponent target="obj8" className="assets.PagedDataComp8" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.setup(0,2,0,2)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj8.theSimulator.receivePage()" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.alv.addItemAt({info: 'new item', status: 'present'},0)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(0).info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(1).info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(2).info" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(0))" value="0" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(1))" value="1" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(2))" value="2" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(0).nameLabel.text" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(1).nameLabel.text" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(2).nameLabel.text" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[0].info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[1].info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[2].info" value="item 1 present" />
		<AssertPropertyValue target="obj8.alv" propertyName="length" value="3" />
	</body>
</TestCase>

<TestCase testID="addItemAt_ss_nonvlist_test2" keywords="[AsyncListView,addItemAt]" description="between two successes, real item" >
	<setup>
		<ResetComponent target="obj8" className="assets.PagedDataComp8" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.setup(0,2,0,2)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj8.theSimulator.receivePage()" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.alv.addItemAt({info: 'new item', status: 'present'},1)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(0).info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(1).info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(2).info" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(0))" value="0" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(1))" value="1" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(2))" value="2" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(0).nameLabel.text" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(1).nameLabel.text" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(2).nameLabel.text" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[0].info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[1].info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[2].info" value="item 1 present" />
		<AssertPropertyValue target="obj8.alv" propertyName="length" value="3" />
	</body>
</TestCase>

<TestCase testID="addItemAt_ss_nonvlist_test3" keywords="[AsyncListView,addItemAt]" description="end of successes, real item" >
	<setup>
		<ResetComponent target="obj8" className="assets.PagedDataComp8" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.setup(0,2,0,2)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj8.theSimulator.receivePage()" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.alv.addItemAt({info: 'new item', status: 'present'},2)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(0).info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(1).info" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(2).info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(0))" value="0" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(1))" value="1" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(2))" value="2" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(0).nameLabel.text" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(1).nameLabel.text" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(2).nameLabel.text" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[0].info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[1].info" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[2].info" value="new item" />
		<AssertPropertyValue target="obj8.alv" propertyName="length" value="3" />
	</body>
</TestCase>

<!--
pending
pending
-->
<TestCase testID="addItemAt_pp_nonvlist_test1" keywords="[AsyncListView,addItemAt]" description="beginning of pendings, real item" >
	<setup>
		<ResetComponent target="obj8" className="assets.PagedDataComp8" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.setup(0,2)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj8.alv.addItemAt({info: 'new item', status: 'present'},0)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(0).info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(1).info" value="item 0 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(2).info" value="item 1 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(0))" value="0" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(1))" value="1" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(2))" value="2" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(0).nameLabel.text" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(1).nameLabel.text" value="item 0 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(2).nameLabel.text" value="item 1 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[0].info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[1].info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[2].info" value="item 1 present" />
		<AssertPropertyValue target="obj8.alv" propertyName="length" value="3" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.theSimulator.receiveItem(1)" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.theSimulator.receiveItem(2)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(0).info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(1).info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(2).info" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(0))" value="0" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(1))" value="1" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(2))" value="2" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(0).nameLabel.text" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(1).nameLabel.text" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(2).nameLabel.text" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[0].info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[1].info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[2].info" value="item 1 present" />
	</body>
</TestCase>

<TestCase testID="addItemAt_pp_nonvlist_test2" keywords="[AsyncListView,addItemAt]" description="between two pendings, real item" >
	<setup>
		<ResetComponent target="obj8" className="assets.PagedDataComp8" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.setup(0,2)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj8.alv.addItemAt({info: 'new item', status: 'present'},1)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(0).info" value="item 0 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(1).info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(2).info" value="item 1 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(0))" value="0" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(1))" value="1" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(2))" value="2" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(0).nameLabel.text" value="item 0 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(1).nameLabel.text" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(2).nameLabel.text" value="item 1 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[0].info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[1].info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[2].info" value="item 1 present" />
		<AssertPropertyValue target="obj8.alv" propertyName="length" value="3" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.theSimulator.receiveItem(0)" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.theSimulator.receiveItem(2)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(0).info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(1).info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(2).info" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(0))" value="0" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(1))" value="1" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(2))" value="2" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(0).nameLabel.text" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(1).nameLabel.text" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(2).nameLabel.text" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[0].info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[1].info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[2].info" value="item 1 present" />
	</body>
</TestCase>

<TestCase testID="addItemAt_pp_nonvlist_test3" keywords="[AsyncListView,addItemAt]" description="end of pendings, real item" >
	<setup>
		<ResetComponent target="obj8" className="assets.PagedDataComp8" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.setup(0,2)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj8.alv.addItemAt({info: 'new item', status: 'present'},2)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(0).info" value="item 0 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(1).info" value="item 1 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(2).info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(0))" value="0" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(1))" value="1" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(2))" value="2" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(0).nameLabel.text" value="item 0 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(1).nameLabel.text" value="item 1 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(2).nameLabel.text" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[0].info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[1].info" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[2].info" value="new item" />
		<AssertPropertyValue target="obj8.alv" propertyName="length" value="3" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.theSimulator.receiveItem(0)" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.theSimulator.receiveItem(1)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(0).info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(1).info" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(2).info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(0))" value="0" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(1))" value="1" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(2))" value="2" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(0).nameLabel.text" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(1).nameLabel.text" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(2).nameLabel.text" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[0].info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[1].info" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[2].info" value="new item" />
	</body>
</TestCase>


<!--
fail
fail
-->
<TestCase testID="addItemAt_ff_nonvlist_test1" keywords="[AsyncListView,addItemAt]" description="beginning of fails, real item" >
	<setup>
		<ResetComponent target="obj8" className="assets.PagedDataComp8" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.setup(0,2,0,2)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj8.theSimulator.failPage()" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.alv.addItemAt({info: 'new item', status: 'present'},0)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(0).info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(1).info" value="item 0 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(2).info" value="item 1 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(0))" value="0" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(1))" value="1" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(2))" value="2" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(0).nameLabel.text" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(1).nameLabel.text" value="item 0 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(2).nameLabel.text" value="item 1 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[0].info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[1].info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[2].info" value="item 1 present" />
		<AssertPropertyValue target="obj8.alv" propertyName="length" value="3" />
	</body>
</TestCase>

<TestCase testID="addItemAt_ff_nonvlist_test2" keywords="[AsyncListView,addItemAt]" description="between two fails, real item" >
	<setup>
		<ResetComponent target="obj8" className="assets.PagedDataComp8" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.setup(0,2,0,2)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj8.theSimulator.failPage()" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.alv.addItemAt({info: 'new item', status: 'present'},1)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(0).info" value="item 0 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(1).info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(2).info" value="item 1 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(0))" value="0" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(1))" value="1" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(2))" value="2" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(0).nameLabel.text" value="item 0 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(1).nameLabel.text" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(2).nameLabel.text" value="item 1 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[0].info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[1].info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[2].info" value="item 1 present" />
		<AssertPropertyValue target="obj8.alv" propertyName="length" value="3" />
	</body>
</TestCase>

<TestCase testID="addItemAt_ff_nonvlist_test3" keywords="[AsyncListView,addItemAt]" description="end of fails, real item" >
	<setup>
		<ResetComponent target="obj8" className="assets.PagedDataComp8" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.setup(0,2,0,2)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj8.theSimulator.failPage()" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.alv.addItemAt({info: 'new item', status: 'present'},2)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(0).info" value="item 0 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(1).info" value="item 1 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(2).info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(0))" value="0" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(1))" value="1" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(2))" value="2" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(0).nameLabel.text" value="item 0 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(1).nameLabel.text" value="item 1 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(2).nameLabel.text" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[0].info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[1].info" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[2].info" value="new item" />
		<AssertPropertyValue target="obj8.alv" propertyName="length" value="3" />
	</body>
</TestCase>


<!--
pending
success
-->
<TestCase testID="addItemAt_ps_nonvlist_test1" keywords="[AsyncListView,addItemAt]" description="beginning of pending and success, real item" >
	<setup>
		<ResetComponent target="obj8" className="assets.PagedDataComp8" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.setup(0,2)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj8.theSimulator.receiveItem(1)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.alv.addItemAt({info: 'new item', status: 'present'},0)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(0).info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(1).info" value="item 0 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(2).info" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(0))" value="0" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(1))" value="1" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(2))" value="2" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(0).nameLabel.text" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(1).nameLabel.text" value="item 0 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(2).nameLabel.text" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[0].info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[1].info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[2].info" value="item 1 present" />
		<AssertPropertyValue target="obj8.alv" propertyName="length" value="3" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.theSimulator.receiveItem(1)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(0).info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(1).info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(2).info" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(0))" value="0" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(1))" value="1" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(2))" value="2" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(0).nameLabel.text" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(1).nameLabel.text" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(2).nameLabel.text" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[0].info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[1].info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[2].info" value="item 1 present" />
	</body>
</TestCase>

<TestCase testID="addItemAt_ps_nonvlist_test2" keywords="[AsyncListView,addItemAt]" description="between two pending and success, real item" >
	<setup>
		<ResetComponent target="obj8" className="assets.PagedDataComp8" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.setup(0,2)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj8.theSimulator.receiveItem(1)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.alv.addItemAt({info: 'new item', status: 'present'},1)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(0).info" value="item 0 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(1).info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(2).info" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(0))" value="0" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(1))" value="1" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(2))" value="2" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(0).nameLabel.text" value="item 0 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(1).nameLabel.text" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(2).nameLabel.text" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[0].info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[1].info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[2].info" value="item 1 present" />
		<AssertPropertyValue target="obj8.alv" propertyName="length" value="3" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.theSimulator.receiveItem(0)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(0).info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(1).info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(2).info" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(0))" value="0" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(1))" value="1" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(2))" value="2" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(0).nameLabel.text" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(1).nameLabel.text" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(2).nameLabel.text" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[0].info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[1].info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[2].info" value="item 1 present" />
	</body>
</TestCase>

<TestCase testID="addItemAt_ps_nonvlist_test3" keywords="[AsyncListView,addItemAt]" description="end of pending and success, real item" >
	<setup>
		<ResetComponent target="obj8" className="assets.PagedDataComp8" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.setup(0,2)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj8.theSimulator.receiveItem(1)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.alv.addItemAt({info: 'new item', status: 'present'},2)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(0).info" value="item 0 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(1).info" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(2).info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(0))" value="0" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(1))" value="1" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(2))" value="2" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(0).nameLabel.text" value="item 0 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(1).nameLabel.text" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(2).nameLabel.text" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[0].info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[1].info" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[2].info" value="new item" />
		<AssertPropertyValue target="obj8.alv" propertyName="length" value="3" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.theSimulator.receiveItem(0)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(0).info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(1).info" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(2).info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(0))" value="0" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(1))" value="1" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(2))" value="2" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(0).nameLabel.text" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(1).nameLabel.text" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(2).nameLabel.text" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[0].info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[1].info" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[2].info" value="new item" />
	</body>
</TestCase>


<!--
success
pending
-->
<TestCase testID="addItemAt_sp_nonvlist_test1" keywords="[AsyncListView,addItemAt]" description="beginning of success and pending, real item" >
	<setup>
		<ResetComponent target="obj8" className="assets.PagedDataComp8" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.setup(0,2)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj8.theSimulator.receiveItem(0)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.alv.addItemAt({info: 'new item', status: 'present'},0)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(0).info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(1).info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(2).info" value="item 1 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(0))" value="0" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(1))" value="1" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(2))" value="2" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(0).nameLabel.text" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(1).nameLabel.text" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(2).nameLabel.text" value="item 1 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[0].info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[1].info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[2].info" value="item 1 present" />
		<AssertPropertyValue target="obj8.alv" propertyName="length" value="3" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.theSimulator.receiveItem(2)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(0).info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(1).info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(2).info" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(0))" value="0" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(1))" value="1" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(2))" value="2" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(0).nameLabel.text" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(1).nameLabel.text" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(2).nameLabel.text" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[0].info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[1].info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[2].info" value="item 1 present" />
	</body>
</TestCase>

<TestCase testID="addItemAt_sp_nonvlist_test2" keywords="[AsyncListView,addItemAt]" description="between two success and pending, real item" >
	<setup>
		<ResetComponent target="obj8" className="assets.PagedDataComp8" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.setup(0,2)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj8.theSimulator.receiveItem(0)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.alv.addItemAt({info: 'new item', status: 'present'},1)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(0).info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(1).info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(2).info" value="item 1 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(0))" value="0" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(1))" value="1" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(2))" value="2" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(0).nameLabel.text" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(1).nameLabel.text" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(2).nameLabel.text" value="item 1 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[0].info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[1].info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[2].info" value="item 1 present" />
		<AssertPropertyValue target="obj8.alv" propertyName="length" value="3" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.theSimulator.receiveItem(2)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(0).info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(1).info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(2).info" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(0))" value="0" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(1))" value="1" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(2))" value="2" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(0).nameLabel.text" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(1).nameLabel.text" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(2).nameLabel.text" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[0].info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[1].info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[2].info" value="item 1 present" />
	</body>
</TestCase>

<TestCase testID="addItemAt_sp_nonvlist_test3" keywords="[AsyncListView,addItemAt]" description="end of success and pending, real item" >
	<setup>
		<ResetComponent target="obj8" className="assets.PagedDataComp8" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.setup(0,2)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj8.theSimulator.receiveItem(0)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.alv.addItemAt({info: 'new item', status: 'present'},2)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(0).info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(1).info" value="item 1 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(2).info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(0))" value="0" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(1))" value="1" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(2))" value="2" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(0).nameLabel.text" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(1).nameLabel.text" value="item 1 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(2).nameLabel.text" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[0].info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[1].info" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[2].info" value="new item" />
		<AssertPropertyValue target="obj8.alv" propertyName="length" value="3" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.theSimulator.receiveItem(1)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(0).info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(1).info" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(2).info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(0))" value="0" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(1))" value="1" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(2))" value="2" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(0).nameLabel.text" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(1).nameLabel.text" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(2).nameLabel.text" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[0].info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[1].info" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[2].info" value="new item" />
	</body>
</TestCase>


<!--
pending
fail
-->
<TestCase testID="addItemAt_pf_nonvlist_test1" keywords="[AsyncListView,addItemAt]" description="beginning of pending and fail, real item" >
	<setup>
		<ResetComponent target="obj8" className="assets.PagedDataComp8" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.setup(0,2)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj8.theSimulator.failItem(1)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.alv.addItemAt({info: 'new item', status: 'present'},0)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(0).info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(1).info" value="item 0 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(2).info" value="item 1 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(0))" value="0" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(1))" value="1" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(2))" value="2" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(0).nameLabel.text" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(1).nameLabel.text" value="item 0 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(2).nameLabel.text" value="item 1 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[0].info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[1].info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[2].info" value="item 1 present" />
		<AssertPropertyValue target="obj8.alv" propertyName="length" value="3" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.theSimulator.receiveItem(1)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(0).info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(1).info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(2).info" value="item 1 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(0))" value="0" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(1))" value="1" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(2))" value="2" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(0).nameLabel.text" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(1).nameLabel.text" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(2).nameLabel.text" value="item 1 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[0].info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[1].info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[2].info" value="item 1 present" />
	</body>
</TestCase>

<TestCase testID="addItemAt_pf_nonvlist_test2" keywords="[AsyncListView,addItemAt]" description="between two pending and fail, real item" >
	<setup>
		<ResetComponent target="obj8" className="assets.PagedDataComp8" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.setup(0,2)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj8.theSimulator.failItem(1)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.alv.addItemAt({info: 'new item', status: 'present'},1)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(0).info" value="item 0 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(1).info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(2).info" value="item 1 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(0))" value="0" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(1))" value="1" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(2))" value="2" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(0).nameLabel.text" value="item 0 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(1).nameLabel.text" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(2).nameLabel.text" value="item 1 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[0].info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[1].info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[2].info" value="item 1 present" />
		<AssertPropertyValue target="obj8.alv" propertyName="length" value="3" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.theSimulator.receiveItem(0)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(0).info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(1).info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(2).info" value="item 1 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(0))" value="0" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(1))" value="1" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(2))" value="2" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(0).nameLabel.text" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(1).nameLabel.text" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(2).nameLabel.text" value="item 1 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[0].info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[1].info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[2].info" value="item 1 present" />
	</body>
</TestCase>

<TestCase testID="addItemAt_pf_nonvlist_test3" keywords="[AsyncListView,addItemAt]" description="end of pending and fail, real item" >
	<setup>
		<ResetComponent target="obj8" className="assets.PagedDataComp8" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.setup(0,2)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj8.theSimulator.failItem(1)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.alv.addItemAt({info: 'new item', status: 'present'},2)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(0).info" value="item 0 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(1).info" value="item 1 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(2).info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(0))" value="0" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(1))" value="1" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(2))" value="2" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(0).nameLabel.text" value="item 0 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(1).nameLabel.text" value="item 1 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(2).nameLabel.text" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[0].info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[1].info" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[2].info" value="new item" />
		<AssertPropertyValue target="obj8.alv" propertyName="length" value="3" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.theSimulator.receiveItem(0)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(0).info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(1).info" value="item 1 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(2).info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(0))" value="0" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(1))" value="1" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(2))" value="2" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(0).nameLabel.text" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(1).nameLabel.text" value="item 1 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(2).nameLabel.text" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[0].info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[1].info" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[2].info" value="new item" />
	</body>
</TestCase>


<!--
fail
pending
-->
<TestCase testID="addItemAt_fp_nonvlist_test1" keywords="[AsyncListView,addItemAt]" description="beginning of fail and pending, real item" >
	<setup>
		<ResetComponent target="obj8" className="assets.PagedDataComp8" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.setup(0,2)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj8.theSimulator.failItem(0)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.alv.addItemAt({info: 'new item', status: 'present'},0)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(0).info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(1).info" value="item 0 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(2).info" value="item 1 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(0))" value="0" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(1))" value="1" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(2))" value="2" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(0).nameLabel.text" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(1).nameLabel.text" value="item 0 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(2).nameLabel.text" value="item 1 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[0].info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[1].info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[2].info" value="item 1 present" />
		<AssertPropertyValue target="obj8.alv" propertyName="length" value="3" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.theSimulator.receiveItem(2)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(0).info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(1).info" value="item 0 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(2).info" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(0))" value="0" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(1))" value="1" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(2))" value="2" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(0).nameLabel.text" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(1).nameLabel.text" value="item 0 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(2).nameLabel.text" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[0].info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[1].info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[2].info" value="item 1 present" />
	</body>
</TestCase>

<TestCase testID="addItemAt_fp_nonvlist_test2" keywords="[AsyncListView,addItemAt]" description="between two fail and pending, real item" >
	<setup>
		<ResetComponent target="obj8" className="assets.PagedDataComp8" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.setup(0,2)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj8.theSimulator.failItem(0)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.alv.addItemAt({info: 'new item', status: 'present'},1)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(0).info" value="item 0 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(1).info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(2).info" value="item 1 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(0))" value="0" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(1))" value="1" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(2))" value="2" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(0).nameLabel.text" value="item 0 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(1).nameLabel.text" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(2).nameLabel.text" value="item 1 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[0].info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[1].info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[2].info" value="item 1 present" />
		<AssertPropertyValue target="obj8.alv" propertyName="length" value="3" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.theSimulator.receiveItem(2)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(0).info" value="item 0 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(1).info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(2).info" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(0))" value="0" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(1))" value="1" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(2))" value="2" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(0).nameLabel.text" value="item 0 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(1).nameLabel.text" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(2).nameLabel.text" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[0].info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[1].info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[2].info" value="item 1 present" />
	</body>
</TestCase>

<TestCase testID="addItemAt_fp_nonvlist_test3" keywords="[AsyncListView,addItemAt]" description="end of fail and pending, real item" >
	<setup>
		<ResetComponent target="obj8" className="assets.PagedDataComp8" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.setup(0,2)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj8.theSimulator.failItem(0)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.alv.addItemAt({info: 'new item', status: 'present'},2)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(0).info" value="item 0 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(1).info" value="item 1 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(2).info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(0))" value="0" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(1))" value="1" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(2))" value="2" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(0).nameLabel.text" value="item 0 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(1).nameLabel.text" value="item 1 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(2).nameLabel.text" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[0].info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[1].info" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[2].info" value="new item" />
		<AssertPropertyValue target="obj8.alv" propertyName="length" value="3" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.theSimulator.receiveItem(1)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />	
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(0).info" value="item 0 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(1).info" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(2).info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(0))" value="0" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(1))" value="1" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(2))" value="2" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(0).nameLabel.text" value="item 0 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(1).nameLabel.text" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(2).nameLabel.text" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[0].info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[1].info" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[2].info" value="new item" />
	</body>
</TestCase>


<!--
success
fail
-->
<TestCase testID="addItemAt_sf_nonvlist_test1" keywords="[AsyncListView,addItemAt]" description="beginning of success and fail, real item" >
	<setup>
		<ResetComponent target="obj8" className="assets.PagedDataComp8" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.setup(0,2)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj8.theSimulator.receiveItem(0)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.theSimulator.failItem(1)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.alv.addItemAt({info: 'new item', status: 'present'},0)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(0).info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(1).info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(2).info" value="item 1 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(0))" value="0" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(1))" value="1" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(2))" value="2" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(0).nameLabel.text" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(1).nameLabel.text" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(2).nameLabel.text" value="item 1 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[0].info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[1].info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[2].info" value="item 1 present" />
		<AssertPropertyValue target="obj8.alv" propertyName="length" value="3" />
	</body>
</TestCase>

<TestCase testID="addItemAt_sf_nonvlist_test2" keywords="[AsyncListView,addItemAt]" description="between two success and fail, real item" >
	<setup>
		<ResetComponent target="obj8" className="assets.PagedDataComp8" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.setup(0,2)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj8.theSimulator.receiveItem(0)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.theSimulator.failItem(1)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.alv.addItemAt({info: 'new item', status: 'present'},1)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(0).info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(1).info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(2).info" value="item 1 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(0))" value="0" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(1))" value="1" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(2))" value="2" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(0).nameLabel.text" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(1).nameLabel.text" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(2).nameLabel.text" value="item 1 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[0].info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[1].info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[2].info" value="item 1 present" />
		<AssertPropertyValue target="obj8.alv" propertyName="length" value="3" />
	</body>
</TestCase>

<TestCase testID="addItemAt_sf_nonvlist_test3" keywords="[AsyncListView,addItemAt]" description="end of success and fail, real item" >
	<setup>
		<ResetComponent target="obj8" className="assets.PagedDataComp8" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.setup(0,2)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj8.theSimulator.receiveItem(0)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.theSimulator.failItem(1)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.alv.addItemAt({info: 'new item', status: 'present'},2)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(0).info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(1).info" value="item 1 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(2).info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(0))" value="0" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(1))" value="1" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(2))" value="2" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(0).nameLabel.text" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(1).nameLabel.text" value="item 1 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(2).nameLabel.text" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[0].info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[1].info" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[2].info" value="new item" />
		<AssertPropertyValue target="obj8.alv" propertyName="length" value="3" />
	</body>
</TestCase>


<!--
fail
success
-->
<TestCase testID="addItemAt_fs_nonvlist_test1" keywords="[AsyncListView,addItemAt]" description="beginning of fail and success, real item" >
	<setup>
		<ResetComponent target="obj8" className="assets.PagedDataComp8" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.setup(0,2)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj8.theSimulator.failItem(0)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.theSimulator.receiveItem(1)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.alv.addItemAt({info: 'new item', status: 'present'},0)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(0).info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(1).info" value="item 0 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(2).info" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(0))" value="0" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(1))" value="1" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(2))" value="2" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(0).nameLabel.text" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(1).nameLabel.text" value="item 0 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(2).nameLabel.text" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[0].info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[1].info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[2].info" value="item 1 present" />
		<AssertPropertyValue target="obj8.alv" propertyName="length" value="3" />
	</body>
</TestCase>

<TestCase testID="addItemAt_fs_nonvlist_test2" keywords="[AsyncListView,addItemAt]" description="between two fail and success, real item" >
	<setup>
		<ResetComponent target="obj8" className="assets.PagedDataComp8" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.setup(0,2)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj8.theSimulator.failItem(0)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.theSimulator.receiveItem(1)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.alv.addItemAt({info: 'new item', status: 'present'},1)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(0).info" value="item 0 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(1).info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(2).info" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(0))" value="0" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(1))" value="1" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(2))" value="2" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(0).nameLabel.text" value="item 0 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(1).nameLabel.text" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(2).nameLabel.text" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[0].info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[1].info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[2].info" value="item 1 present" />
		<AssertPropertyValue target="obj8.alv" propertyName="length" value="3" />
	</body>
</TestCase>

<TestCase testID="addItemAt_fs_nonvlist_test3" keywords="[AsyncListView,addItemAt]" description="end of fail and success, real item" >
	<setup>
		<ResetComponent target="obj8" className="assets.PagedDataComp8" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.setup(0,2)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj8.theSimulator.failItem(0)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.theSimulator.receiveItem(1)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.alv.addItemAt({info: 'new item', status: 'present'},2)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(0).info" value="item 0 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(1).info" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(2).info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(0))" value="0" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(1))" value="1" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(2))" value="2" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(0).nameLabel.text" value="item 0 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(1).nameLabel.text" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(2).nameLabel.text" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[0].info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[1].info" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[2].info" value="new item" />
		<AssertPropertyValue target="obj8.alv" propertyName="length" value="3" />
	</body>
</TestCase>


<!-- Here are the tests which work with items out of view, useVirtualLayout = true. -->
<TestCase testID="addItemAt_outOfView_nonvlist_test1" keywords="[AsyncListView,addItemAt]" description="Last item is present, add the first non-visible item" >
	<setup>
		<ResetComponent target="obj8" className="assets.PagedDataComp8" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.setup(0,12)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj8.theSimulator.receiveItem(11)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.alv.addItemAt({info: 'new item', status: 'present'},12)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifyItems(0, 10, 'pending', FlexGlobals.topLevelApplication.obj8.alv)" value="pass" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(11).info" value="item 11 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(12).info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(11))" value="11" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(12))" value="12" />
		<AssertPropertyValue target="obj8.alv" propertyName="length" value="13" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.theList.ensureIndexIsVisible(12)" waitTarget="obj8.theList.dataGroup" waitEvent="propertyChange" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifyItems(0, 10, 'pending', FlexGlobals.topLevelApplication.obj8.alv)" value="pass" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(11).info" value="item 11 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(12).info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(11))" value="11" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(12))" value="12" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(11).nameLabel.text" value="item 11 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(12).nameLabel.text" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifySimulatorItems(0, 11, 'present', FlexGlobals.topLevelApplication.obj8.theSimulator)" value="pass" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[12].info" value="new item" />
		<AssertPropertyValue target="obj8.alv" propertyName="length" value="13" />
	</body>
</TestCase>

<TestCase testID="addItemAt_outOfView_nonvlist_test2" keywords="[AsyncListView,addItemAt]" description="Last item is failure, add the first non-visible item" >
	<setup>
		<ResetComponent target="obj8" className="assets.PagedDataComp8" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.setup(0,12)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj8.theSimulator.failItem(11)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.alv.addItemAt({info: 'new item', status: 'present'},12)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifyItems(0, 10, 'pending', FlexGlobals.topLevelApplication.obj8.alv)" value="pass" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(11).info" value="item 11 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(12).info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(11))" value="11" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(12))" value="12" />
		<AssertPropertyValue target="obj8.alv" propertyName="length" value="13" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.theList.ensureIndexIsVisible(12)" waitTarget="obj8.theList.dataGroup" waitEvent="propertyChange" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifyItems(0, 10, 'pending', FlexGlobals.topLevelApplication.obj8.alv)" value="pass" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(11).info" value="item 11 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(12).info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(11))" value="11" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(12))" value="12" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(11).nameLabel.text" value="item 11 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(12).nameLabel.text" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifySimulatorItems(0, 10, 'present', FlexGlobals.topLevelApplication.obj8.theSimulator)" value="pass" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[11].info" value="item 11 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[12].info" value="new item" />
		<AssertPropertyValue target="obj8.alv" propertyName="length" value="13" />
	</body>
</TestCase>

<TestCase testID="addItemAt_outOfView_nonvlist_test3" keywords="[AsyncListView,addItemAt]" description="Last item is pending, add the first non-visible item" >
	<setup>
		<ResetComponent target="obj8" className="assets.PagedDataComp8" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.setup(0,12)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj8.alv.addItemAt({info: 'new item', status: 'present'},12)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifyItems(0, 11, 'pending', FlexGlobals.topLevelApplication.obj8.alv)" value="pass" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(12).info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(11))" value="11" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(12))" value="12" />
		<AssertPropertyValue target="obj8.alv" propertyName="length" value="13" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.theList.ensureIndexIsVisible(12)" waitTarget="obj8.theList.dataGroup" waitEvent="propertyChange" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifyItems(0, 11, 'pending', FlexGlobals.topLevelApplication.obj8.alv)" value="pass" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(12).info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(11))" value="11" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(12))" value="12" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(11).nameLabel.text" value="item 11 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(12).nameLabel.text" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifySimulatorItems(0, 11, 'present', FlexGlobals.topLevelApplication.obj8.theSimulator)" value="pass" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[12].info" value="new item" />
		<AssertPropertyValue target="obj8.alv" propertyName="length" value="13" />
	</body>
</TestCase>

<TestCase testID="addItemAt_outOfView_nonvlist_test4" keywords="[AsyncListView,addItemAt]" description="Many items on and off screen present, add at first non-visible position after present item" >
	<setup>
		<ResetComponent target="obj8" className="assets.PagedDataComp8" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.setup(0,30)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj8.theSimulator.receiveItem(11)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.alv.addItemAt({info: 'new item', status: 'present'},12)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifyItems(0, 10, 'pending', FlexGlobals.topLevelApplication.obj8.alv)" value="pass" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(11).info" value="item 11 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(12).info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifyItems(13, 30, 'pending', FlexGlobals.topLevelApplication.obj8.alv, -1)" value="pass" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(11))" value="11" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(12))" value="12" />
		<AssertPropertyValue target="obj8.alv" propertyName="length" value="31" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.theList.ensureIndexIsVisible(12)" waitTarget="obj8.theList.dataGroup" waitEvent="propertyChange" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifyItems(0, 10, 'pending', FlexGlobals.topLevelApplication.obj8.alv)" value="pass" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(11).info" value="item 11 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(12).info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifyItems(13, 30, 'pending', FlexGlobals.topLevelApplication.obj8.alv, -1)" value="pass" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(11))" value="11" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(12))" value="12" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(11).nameLabel.text" value="item 11 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(12).nameLabel.text" value="new item" />
		<AssertPropertyValue target="obj8.alv" propertyName="length" value="31" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.theList.ensureIndexIsVisible(30)" waitTarget="obj8.theList.dataGroup" waitEvent="propertyChange" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifyItems(0, 10, 'pending', FlexGlobals.topLevelApplication.obj8.alv)" value="pass" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(11).info" value="item 11 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(12).info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifyItems(13, 30, 'pending', FlexGlobals.topLevelApplication.obj8.alv, -1)" value="pass" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(11))" value="11" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(12))" value="12" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifySimulatorItems(0, 11, 'present', FlexGlobals.topLevelApplication.obj8.theSimulator)" value="pass" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[12].info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifySimulatorItems(13, 30, 'present', FlexGlobals.topLevelApplication.obj8.theSimulator, -1)" value="pass" />
		<AssertPropertyValue target="obj8.alv" propertyName="length" value="31" />
	</body>
</TestCase>

<TestCase testID="addItemAt_outOfView_nonvlist_test5" keywords="[AsyncListView,addItemAt]" description="Many items on and off screen pending, add at first non-visible position after failed item" >
	<setup>
		<ResetComponent target="obj8" className="assets.PagedDataComp8" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.setup(0,30)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj8.theSimulator.failItem(11)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.alv.addItemAt({info: 'new item', status: 'present'},12)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifyItems(0, 10, 'pending', FlexGlobals.topLevelApplication.obj8.alv)" value="pass" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(11).info" value="item 11 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(12).info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifyItems(13, 30, 'pending', FlexGlobals.topLevelApplication.obj8.alv, -1)" value="pass" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(11))" value="11" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(12))" value="12" />
		<AssertPropertyValue target="obj8.alv" propertyName="length" value="31" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.theList.ensureIndexIsVisible(12)" waitTarget="obj8.theList.dataGroup" waitEvent="propertyChange" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifyItems(0, 10, 'pending', FlexGlobals.topLevelApplication.obj8.alv)" value="pass" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(11).info" value="item 11 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(12).info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifyItems(13, 30, 'pending', FlexGlobals.topLevelApplication.obj8.alv, -1)" value="pass" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(11))" value="11" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(12))" value="12" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(11).nameLabel.text" value="item 11 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(12).nameLabel.text" value="new item" />
		<AssertPropertyValue target="obj8.alv" propertyName="length" value="31" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.theList.ensureIndexIsVisible(30)" waitTarget="obj8.theList.dataGroup" waitEvent="propertyChange" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifyItems(0, 10, 'pending', FlexGlobals.topLevelApplication.obj8.alv)" value="pass" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(11).info" value="item 11 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(12).info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifyItems(13, 30, 'pending', FlexGlobals.topLevelApplication.obj8.alv, -1)" value="pass" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(11))" value="11" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(12))" value="12" />
		<AssertPropertyValue target="obj8.alv" propertyName="length" value="31" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.theList.ensureIndexIsVisible(5)" waitTarget="obj8.theList.dataGroup" waitEvent="propertyChange" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifyItems(0, 10, 'pending', FlexGlobals.topLevelApplication.obj8.alv)" value="pass" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(11).info" value="item 11 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(12).info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifyItems(13, 30, 'pending', FlexGlobals.topLevelApplication.obj8.alv, -1)" value="pass" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(11))" value="11" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(12))" value="12" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(11).nameLabel.text" value="item 11 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(12).nameLabel.text" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifySimulatorItems(0, 10, 'present', FlexGlobals.topLevelApplication.obj8.theSimulator)" value="pass" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[11].info" value="item 11 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[12].info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifySimulatorItems(13, 30, 'present', FlexGlobals.topLevelApplication.obj8.theSimulator, -1)" value="pass" />
		<AssertPropertyValue target="obj8.alv" propertyName="length" value="31" />
	</body>
</TestCase>

<TestCase testID="addItemAt_outOfView_nonvlist_test6" keywords="[AsyncListView,addItemAt]" description="Many items on and off screen pending, add at first non-visible position after pending item" >
	<setup>
		<ResetComponent target="obj8" className="assets.PagedDataComp8" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.setup(0,30)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj8.alv.addItemAt({info: 'new item', status: 'present'},12)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifyItems(0, 10, 'pending', FlexGlobals.topLevelApplication.obj8.alv)" value="pass" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(12).info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifyItems(13, 30, 'pending', FlexGlobals.topLevelApplication.obj8.alv, -1)" value="pass" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(11))" value="11" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(12))" value="12" />
		<AssertPropertyValue target="obj8.alv" propertyName="length" value="31" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.theList.ensureIndexIsVisible(12)" waitTarget="obj8.theList.dataGroup" waitEvent="propertyChange" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifyItems(0, 10, 'pending', FlexGlobals.topLevelApplication.obj8.alv)" value="pass" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(12).info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifyItems(13, 30, 'pending', FlexGlobals.topLevelApplication.obj8.alv, -1)" value="pass" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(11))" value="11" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(12))" value="12" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(11).nameLabel.text" value="item 11 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(12).nameLabel.text" value="new item" />
		<AssertPropertyValue target="obj8.alv" propertyName="length" value="31" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.theList.ensureIndexIsVisible(30)" waitTarget="obj8.theList.dataGroup" waitEvent="propertyChange" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifyItems(0, 10, 'pending', FlexGlobals.topLevelApplication.obj8.alv)" value="pass" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(12).info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifyItems(13, 30, 'pending', FlexGlobals.topLevelApplication.obj8.alv, -1)" value="pass" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(11))" value="11" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(12))" value="12" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifySimulatorItems(0, 11, 'present', FlexGlobals.topLevelApplication.obj8.theSimulator)" value="pass" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[12].info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifySimulatorItems(13, 30, 'present', FlexGlobals.topLevelApplication.obj8.theSimulator, -1)" value="pass" />
		<AssertPropertyValue target="obj8.alv" propertyName="length" value="31" />
	</body>
</TestCase>

<TestCase testID="addItemAt_outOfView_nonvlist_test7" keywords="[AsyncListView,addItemAt]" description="Many items on and off screen present, add at last non-visible position after present item" >
	<setup>
		<ResetComponent target="obj8" className="assets.PagedDataComp8" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.setup(0,30)" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj8.alv.getItemAt(29)" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.theSimulator.receiveItem(29)" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.alv.addItemAt({info: 'new item', status: 'present'},30)" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifyItems(0, 28, 'pending', FlexGlobals.topLevelApplication.obj8.alv)" value="pass" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(29).info" value="item 29 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(30).info" value="new item" />
		<AssertPropertyValue target="obj8.alv" propertyName="length" value="31" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(29))" value="29" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(30))" value="30" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.theList.ensureIndexIsVisible(12)" waitTarget="obj8.theList.dataGroup" waitEvent="propertyChange" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifyItems(0, 28, 'pending', FlexGlobals.topLevelApplication.obj8.alv)" value="pass" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(29).info" value="item 29 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(30).info" value="new item" />
		<AssertPropertyValue target="obj8.alv" propertyName="length" value="31" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.theList.ensureIndexIsVisible(30)" waitTarget="obj8.theList.dataGroup" waitEvent="propertyChange" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifyItems(0, 28, 'pending', FlexGlobals.topLevelApplication.obj8.alv)" value="pass" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(29).info" value="item 29 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(30).info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(29).nameLabel.text" value="item 29 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(30).nameLabel.text" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(29))" value="29" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(30))" value="30" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifySimulatorItems(0, 29, 'present', FlexGlobals.topLevelApplication.obj8.theSimulator)" value="pass" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[30].info" value="new item" />
		<AssertPropertyValue target="obj8.alv" propertyName="length" value="31" />
	</body>
</TestCase>

<TestCase testID="addItemAt_outOfView_nonvlist_test8" keywords="[AsyncListView,addItemAt]" description="Many items on and off screen present, add at last non-visible position after failed item" >
	<setup>
		<ResetComponent target="obj8" className="assets.PagedDataComp8" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.setup(0,30)" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj8.alv.getItemAt(29)" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.theSimulator.failItem(29)" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.alv.addItemAt({info: 'new item', status: 'present'},30)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifyItems(0, 28, 'pending', FlexGlobals.topLevelApplication.obj8.alv)" value="pass" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(29).info" value="item 29 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(30).info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(29))" value="29" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(30))" value="30" />
		<AssertPropertyValue target="obj8.alv" propertyName="length" value="31" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.theList.ensureIndexIsVisible(12)" waitTarget="obj8.theList.dataGroup" waitEvent="propertyChange" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifyItems(0, 28, 'pending', FlexGlobals.topLevelApplication.obj8.alv)" value="pass" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(29).info" value="item 29 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(30).info" value="new item" />
		<AssertPropertyValue target="obj8.alv" propertyName="length" value="31" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(29))" value="29" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(30))" value="30" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.theList.ensureIndexIsVisible(30)" waitTarget="obj8.theList.dataGroup" waitEvent="propertyChange" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifyItems(0, 28, 'pending', FlexGlobals.topLevelApplication.obj8.alv)" value="pass" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(29).info" value="item 29 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(30).info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(29).nameLabel.text" value="item 29 failed" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(30).nameLabel.text" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(29))" value="29" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(30))" value="30" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifySimulatorItems(0, 28, 'present', FlexGlobals.topLevelApplication.obj8.theSimulator)" value="pass" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[29].info" value="item 29 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[30].info" value="new item" />
		<AssertPropertyValue target="obj8.alv" propertyName="length" value="31" />
	</body>
</TestCase>

<TestCase testID="addItemAt_outOfView_nonvlist_test9" keywords="[AsyncListView,addItemAt]" description="Many items on and off screen present, add at last non-visible position after pending item" >
	<setup>
		<ResetComponent target="obj8" className="assets.PagedDataComp8" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.setup(0,30)" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj8.alv.addItemAt({info: 'new item', status: 'present'},30)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifyItems(0, 29, 'pending', FlexGlobals.topLevelApplication.obj8.alv)" value="pass" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(30).info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(29))" value="29" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(30))" value="30" />
		<AssertPropertyValue target="obj8.alv" propertyName="length" value="31" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(29))" value="29" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(30))" value="30" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.theList.ensureIndexIsVisible(12)" waitTarget="obj8.theList.dataGroup" waitEvent="propertyChange" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifyItems(0, 29, 'pending', FlexGlobals.topLevelApplication.obj8.alv)" value="pass" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(30).info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(29))" value="29" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(30))" value="30" />
		<AssertPropertyValue target="obj8.alv" propertyName="length" value="31" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(29))" value="29" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(30))" value="30" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.theList.ensureIndexIsVisible(30)" waitTarget="obj8.theList.dataGroup" waitEvent="propertyChange" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifyItems(0, 29, 'pending', FlexGlobals.topLevelApplication.obj8.alv)" value="pass" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(30).info" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(29))" value="29" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(30))" value="30" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(29).nameLabel.text" value="item 29 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(30).nameLabel.text" value="new item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(29))" value="29" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemIndex(FlexGlobals.topLevelApplication.obj8.alv.getItemAt(30))" value="30" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifySimulatorItems(0, 29, 'present', FlexGlobals.topLevelApplication.obj8.theSimulator)" value="pass" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[30].info" value="new item" />
		<AssertPropertyValue target="obj8.alv" propertyName="length" value="31" />
	</body>
</TestCase>

<TestCase testID="addItemsAt_nonvlist_otherItemsConstant_test1" keywords="[AsyncListView,addItemAt]" description="Be sure that when items are added, the pending item which is pushed out of the way are not recreated." >
	<setup>
		<ResetComponent target="obj8" className="assets.PagedDataComp8" waitEvent="updateComplete" />
		<SetProperty target="obj8.theList" propertyName="height" value="40" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.setup(0,2)" />
	</setup>
	<body>
		<RunCode code="storedItem = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(0)" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.alv.addItemAt({info:'added item', status:'present'},0)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = (FlexGlobals.topLevelApplication.obj8.alv.getItemAt(1) === storedItem)" value="true" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.alv.addItemAt({info:'added item', status:'present'},0)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = (FlexGlobals.topLevelApplication.obj8.alv.getItemAt(2) === storedItem)" value="true" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.alv.addItemAt({info:'added item', status:'present'},0)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = (FlexGlobals.topLevelApplication.obj8.alv.getItemAt(3) === storedItem)" value="true" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.alv.addItemAt({info:'added item', status:'present'},0)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = (FlexGlobals.topLevelApplication.obj8.alv.getItemAt(4) === storedItem)" value="true" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.alv.addItemAt({info:'added item', status:'present'},0)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = (FlexGlobals.topLevelApplication.obj8.alv.getItemAt(5) === storedItem)" value="true" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[0].info" value="added item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[1].info" value="added item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[2].info" value="added item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[3].info" value="added item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[4].info" value="added item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[5].info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[6].info" value="item 1 present" />
	</body>
</TestCase>

<TestCase testID="addItemsAt_nonvlist_otherItemsConstant_test2" keywords="[AsyncListView,addItemAt]" description="Be sure that when items are added, the present item which is pushed out of the way are not recreated." >
	<setup>
		<ResetComponent target="obj8" className="assets.PagedDataComp8" waitEvent="updateComplete" />
		<SetProperty target="obj8.theList" propertyName="height" value="40" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.setup(0,2)" />
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj8.theSimulator.receiveItem(0)" />
		<RunCode code="storedItem = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(0)" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.alv.addItemAt({info:'added item', status:'present'},0)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = (FlexGlobals.topLevelApplication.obj8.alv.getItemAt(1) === storedItem)" value="true" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.alv.addItemAt({info:'added item', status:'present'},0)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = (FlexGlobals.topLevelApplication.obj8.alv.getItemAt(2) === storedItem)" value="true" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.alv.addItemAt({info:'added item', status:'present'},0)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = (FlexGlobals.topLevelApplication.obj8.alv.getItemAt(3) === storedItem)" value="true" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.alv.addItemAt({info:'added item', status:'present'},0)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = (FlexGlobals.topLevelApplication.obj8.alv.getItemAt(4) === storedItem)" value="true" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.alv.addItemAt({info:'added item', status:'present'},0)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = (FlexGlobals.topLevelApplication.obj8.alv.getItemAt(5) === storedItem)" value="true" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[0].info" value="added item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[1].info" value="added item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[2].info" value="added item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[3].info" value="added item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[4].info" value="added item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[5].info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[6].info" value="item 1 present" />
	</body>
</TestCase>

<TestCase testID="addItemsAt_nonvlist_otherItemsConstant_test3" keywords="[AsyncListView,addItemAt]" description="Be sure that when items are added, the failed item which is pushed out of the way are not recreated." >
	<setup>
		<ResetComponent target="obj8" className="assets.PagedDataComp8" waitEvent="updateComplete" />
		<SetProperty target="obj8.theList" propertyName="height" value="40" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.setup(0,2)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj8.theSimulator.failItem(0)" />
		<RunCode code="storedItem = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(0)" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.alv.addItemAt({info:'added item', status:'present'},0)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = (FlexGlobals.topLevelApplication.obj8.alv.getItemAt(1) === storedItem)" value="true" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.alv.addItemAt({info:'added item', status:'present'},0)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = (FlexGlobals.topLevelApplication.obj8.alv.getItemAt(2) === storedItem)" value="true" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.alv.addItemAt({info:'added item', status:'present'},0)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = (FlexGlobals.topLevelApplication.obj8.alv.getItemAt(3) === storedItem)" value="true" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.alv.addItemAt({info:'added item', status:'present'},0)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = (FlexGlobals.topLevelApplication.obj8.alv.getItemAt(4) === storedItem)" value="true" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.alv.addItemAt({info:'added item', status:'present'},0)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<AssertMethodValue method="value = (FlexGlobals.topLevelApplication.obj8.alv.getItemAt(5) === storedItem)" value="true" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[0].info" value="added item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[1].info" value="added item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[2].info" value="added item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[3].info" value="added item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[4].info" value="added item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[5].info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[6].info" value="item 1 present" />
	</body>
</TestCase>








<TestCase testID="addItemAt_nonvlist_addAndReceive_test1" keywords="[AsyncListView,removeItemAt]" description="Add item in front of other pending items, then receive the others." >
	<setup>
		<ResetComponent target="obj8" className="assets.PagedDataComp8" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.setup(0,3)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj8.alv.addItemAt({info:'item added', status:'present'},0)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.theSimulator.receiveItem(1)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.theSimulator.receiveItem(2)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.theSimulator.receiveItem(3)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />

		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(0).info" value="item added" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(1).info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(2).info" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(3).info" value="item 2 present" />
		
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(0).nameLabel.text" value="item added" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(1).nameLabel.text" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(2).nameLabel.text" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(3).nameLabel.text" value="item 2 present" />
		
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[0].info" value="item added" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[1].info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[2].info" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[3].info" value="item 2 present" />
	</body>
</TestCase>

<TestCase testID="addItemAt_nonvlist_addAndReceive_test2" keywords="[AsyncListView,removeItemAt]" description="Add item between other pending items, then receive the others." >
	<setup>
		<ResetComponent target="obj8" className="assets.PagedDataComp8" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.setup(0,3)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj8.alv.addItemAt({info:'item added', status:'present'},1)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.theSimulator.receiveItem(0)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.theSimulator.receiveItem(2)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.theSimulator.receiveItem(3)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />

		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(0).info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(1).info" value="item added" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(2).info" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(3).info" value="item 2 present" />
		
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(0).nameLabel.text" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(1).nameLabel.text" value="item added" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(2).nameLabel.text" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(3).nameLabel.text" value="item 2 present" />
		
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[0].info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[1].info" value="item added" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[2].info" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[3].info" value="item 2 present" />
	</body>
</TestCase>

<TestCase testID="addItemAt_nonvlist_addAndReceive_test3" keywords="[AsyncListView,removeItemAt]" description="Add item after other pending items, then receive the others." >
	<setup>
		<ResetComponent target="obj8" className="assets.PagedDataComp8" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.setup(0,3)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj8.alv.addItemAt({info:'item added', status:'present'},3)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.theSimulator.receiveItem(0)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.theSimulator.receiveItem(1)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.theSimulator.receiveItem(2)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />

		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(0).info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(1).info" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(2).info" value="item 2 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(3).info" value="item added" />
		
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(0).nameLabel.text" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(1).nameLabel.text" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(2).nameLabel.text" value="item 2 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(3).nameLabel.text" value="item added" />
		
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[0].info" value="item 0 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[1].info" value="item 1 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[2].info" value="item 2 present" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[3].info" value="item added" />
	</body>
</TestCase>

<TestCase testID="addItemAt_nonvlist_addAndReceive_test4" keywords="[AsyncListView,removeItemAt]" description="Add item at the first nonvisible position among pending items, then receive the others." >
	<setup>
		<ResetComponent target="obj8" className="assets.PagedDataComp8" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.setup(0,20,0,10)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj8.alv.addItemAt({info:'added item', status:'present'},12)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.callGetItemAtFor(0, 20, FlexGlobals.topLevelApplication.obj8.alv)" />
		
		<RunCode code="FlexGlobals.topLevelApplication.obj8.theSimulator.receivePage()" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.theSimulator.receivePage()" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifyItems(0, 11, 'present', FlexGlobals.topLevelApplication.obj8.alv)" value="pass" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(12).info" value="added item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifyItems(13, 20, 'present', FlexGlobals.topLevelApplication.obj8.alv, -1)" value="pass" />

		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifyDataGroupItems(0, 11, 'present', FlexGlobals.topLevelApplication.obj8.theList.dataGroup)" value="pass" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.theList.ensureIndexIsVisible(20)" waitTarget="obj8.theList.dataGroup" waitEvent="propertyChange" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(12).nameLabel.text" value="added item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifyDataGroupItems(13, 20, 'present', FlexGlobals.topLevelApplication.obj8.theList.dataGroup, -1)" value="pass" />

		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifySimulatorItems(0, 11, 'present', FlexGlobals.topLevelApplication.obj8.theSimulator)" value="pass" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[12].info" value="added item" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifySimulatorItems(13, 20, 'present', FlexGlobals.topLevelApplication.obj8.theSimulator, -1)" value="pass" />
	</body>
</TestCase>

<TestCase testID="addItemAt_nonvlist_addAndReceive_test5" keywords="[AsyncListView,removeItemAt]" description="Add item at the end of pending items, then receive the others." >
	<setup>
		<ResetComponent target="obj8" className="assets.PagedDataComp8" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.setup(0,20,0,10)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />	
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj8.alv.addItemAt({info:'added item', status:'present'},20)" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.callGetItemAtFor(0, 20, FlexGlobals.topLevelApplication.obj8.alv)" />
		
		<RunCode code="FlexGlobals.topLevelApplication.obj8.theSimulator.receivePage()" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.theSimulator.receivePage()" waitTarget="obj8.theList.dataGroup" waitEvent="updateComplete" />
		
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifyItems(0, 19, 'present', FlexGlobals.topLevelApplication.obj8.alv)" value="pass" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.alv.getItemAt(20).info" value="added item" />

		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifyDataGroupItems(0, 11, 'present', FlexGlobals.topLevelApplication.obj8.theList.dataGroup)" value="pass" />
		<RunCode code="FlexGlobals.topLevelApplication.obj8.theList.ensureIndexIsVisible(20)" waitTarget="obj8.theList.dataGroup" waitEvent="propertyChange" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifyDataGroupItems(12, 19, 'present', FlexGlobals.topLevelApplication.obj8.theList.dataGroup)" value="pass" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theList.dataGroup.getElementAt(20).nameLabel.text" value="added item" />

		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.verifySimulatorItems(0, 19, 'present', FlexGlobals.topLevelApplication.obj8.theSimulator)" value="pass" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj8.theSimulator.source[20].info" value="added item" />
	</body>
</TestCase>

</testCases>
</UnitTester>
