<?xml version="1.0" encoding="utf-8"?>
<!--

  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.

-->
<UnitTester 
	testDir="mx/collections/AsyncListView/methods/"
	xmlns:mx="http://www.adobe.com/2006/mxml" 
	xmlns="*" 
	xmlns:assets="assets.*"
	testSWF="AsyncListView_App1.mxml">

	<!-- this set of lines form a template that must be in each unit test -->
	<mx:Script>
	<![CDATA[
	public static function init(o:DisplayObject):void
	{
	}
	]]>
	</mx:Script>
	<mx:Metadata>
	<![CDATA[
		[Mixin]
	]]>
	</mx:Metadata>
	<!-- end of set of lines that must be in each unit test -->

	<mx:Script>
	<![CDATA[

		import assets.*;
		import mx.collections.*;
		import mx.core.FlexGlobals;
	]]>
	</mx:Script>

	<testCases>


<TestCase testID="constructor_test1" keywords="[AsyncListView,constructor]" description="Call with no param, then set the list property (local source)." >
	<setup>
		<ResetComponent target="obj1" className="assets.PagedDataComp1" waitEvent="updateComplete" />
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj1.alv = new AsyncListView()" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.alv.list = FlexGlobals.topLevelApplication.obj1.ac" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(0).info" value="thing 0" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(1).info" value="thing 1" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(2).info" value="thing 2" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(3).info" value="thing 3" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(4).info" value="thing 4" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.ac.getItemAt(0))" value="0" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.ac.getItemAt(1))" value="1" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.ac.getItemAt(2))" value="2" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.ac.getItemAt(3))" value="3" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.ac.getItemAt(4))" value="4" />
		<AssertPropertyValue target="obj1.alv" propertyName="length" value="5" />
	</body>
</TestCase>

<TestCase testID="constructor_test2" keywords="[AsyncListView,constructor]" description="Call with no param, then set the list property (simulator source)." >
	<setup>
		<ResetComponent target="obj1" className="assets.PagedDataComp1" waitEvent="updateComplete" />
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj1.alv = new AsyncListView()" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.alv.createPendingItemFunction = FlexGlobals.topLevelApplication.obj1.pendingFunction" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items = new ItemPendingErrorSimulator()" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.responseDelay = 1" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.numItems = 5" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.numPreloadedPages = 0" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.pageSize = 1" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.mode = 'manual'" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.failureProbability = 0" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.objectFactory = FlexGlobals.topLevelApplication.obj1.theObjectFactory" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.items.reset()" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.alv.list = FlexGlobals.topLevelApplication.obj1.items" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(0).info" value="item 0 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(1).info" value="item 1 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(2).info" value="item 2 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(3).info" value="item 3 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(4).info" value="item 4 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(0))" value="0" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(1))" value="1" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(2))" value="2" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(3))" value="3" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(4))" value="4" />
		<AssertPropertyValue target="obj1.alv" propertyName="length" value="5" />
	</body>
</TestCase>

<TestCase testID="constructor_test3" keywords="[AsyncListView,constructor]" description="Call with list param (local)." >
	<setup>
		<ResetComponent target="obj1" className="assets.PagedDataComp1" waitEvent="updateComplete" />
	</setup>
	<body>
		<RunCode code="FlexGlobals.topLevelApplication.obj1.alv = new AsyncListView(FlexGlobals.topLevelApplication.obj1.ac)" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(0).info" value="thing 0" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(1).info" value="thing 1" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(2).info" value="thing 2" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(3).info" value="thing 3" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(4).info" value="thing 4" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.ac.getItemAt(0))" value="0" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.ac.getItemAt(1))" value="1" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.ac.getItemAt(2))" value="2" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.ac.getItemAt(3))" value="3" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.ac.getItemAt(4))" value="4" />
		<AssertPropertyValue target="obj1.alv" propertyName="length" value="5" />
	</body>
</TestCase>

<!-- This test case is done every time setup() is called. -->
<TestCase testID="constructor_test4" keywords="[AsyncListView,constructor]" description="Call with list param (simulator)." >
	<setup>
		<ResetComponent target="obj1" className="assets.PagedDataComp1" waitEvent="updateComplete" />
		<RunCode code="FlexGlobals.topLevelApplication.obj1.setup(1,3)" />
	</setup>
	<body>
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(0).info" value="item 0 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(1).info" value="item 1 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemAt(2).info" value="item 2 pending" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(0))" value="0" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(1))" value="1" />
		<AssertMethodValue method="value = FlexGlobals.topLevelApplication.obj1.alv.getItemIndex(FlexGlobals.topLevelApplication.obj1.alv.getItemAt(2))" value="2" />
		<AssertPropertyValue target="obj1.alv" propertyName="length" value="3" />
	</body>
</TestCase>

</testCases>
</UnitTester>
