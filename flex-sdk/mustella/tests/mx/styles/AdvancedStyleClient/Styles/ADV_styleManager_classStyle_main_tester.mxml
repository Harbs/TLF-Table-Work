<?xml version="1.0" encoding="utf-8"?>
<!--

  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.

-->
<UnitTester testDir="mx/styles/AdvancedStyleClient/Styles/"  
			xmlns:mx="http://www.adobe.com/2006/mxml" 
			xmlns:s="library://ns.adobe.com/flex/mx" xmlns="*" 
			testSWF="ADV_styleManager_classStyle_main.mxml">
	
	<mx:Script>
		<![CDATA[
			import mx.events.FlexEvent;		
			import assets.styleTest.ADVStyleTestConstants;
			import assets.styleTest.ADVStyleTestEvent;
			
			public static function init(o:DisplayObject):void
			{
				
			}
			
		]]>
	</mx:Script>
	
	<mx:Metadata>
		<![CDATA[
		[Mixin]
		]]>
	</mx:Metadata>
	
	<testCases>
		<!--testcases for setting style using styleManager-->
		<TestCase testID="ADV_styleManager_classStyle_test1" 
				  description="testcases for setting style using styleManager" 
				  keywords="[AdvancedStyleClient, StyleManager]">
			<setup>
				<RunCode code="application.testADVStyle()"  />
				<Pause timeout="{ADVStyleTestConstants.pauseTime}" />
			</setup>
			<body>
				<!--Verify style compound with inline style and loaded at runtime Class Selector style using inline css value. -->
				<AssertMethodValue method="value=application.classStyleTest.getStyle('teststyle_1_string_noinh')" value="testString" />
				
				<!--Verify inline style using inline value. -->
				<AssertMethodValue method="value=application.classStyleTest.getStyle('teststyle_2_number_noinh')" 
								   valueExpression="value=12345.678"/>
				
				<!--Verify style compound with set by using local Class Selector and set by styleManager API using new set value.-->
				<AssertMethodValue method="value=application.classStyleTest.getStyle('teststyle_3_uint_inh')" valueExpression="value=35" />
				
				<!--Verify style only set by using local Class Selector using class value. -->
				<AssertMethodValue method="value=application.classStyleTest.getStyle('teststyle_5_format_length_noinh')" 
								   valueExpression="value=50" />
				
				<!--Verify style only set by styleManager API using this value.-->
				<AssertMethodValue method="value=application.classStyleTest.getStyle('teststyle_6_format_time_noinh')" 
								   valueExpression="value=1998"/>
				
				<!--Verify those un-setting styles using default value.-->
				<AssertMethodValue method="value=application.classStyleTest.getStyle('teststyle_7_format_color_noinh')" 
								   valueExpression="value=0x112233"/>
			</body>
		</TestCase>	
		
		<!--testcases for clearing style using StyleManager-->
		<TestCase testID="ADV_styleManager_clear_classStyle_test2" 
				  description="testcases for clearing style using StyleManager" 
				  keywords="[AdvancedStyleClient, StyleManager, clear style]">
			<setup>
				<RunCode code="application.testADVStyle()"  />
				<Pause timeout="{ADVStyleTestConstants.pauseTime}" />
				<RunCode code="application.ClearStyle()"  />
				<Pause timeout="{ADVStyleTestConstants.pauseTime}" />
			</setup>
			<body>
				<!--Verify inline style using inline value after clearing. -->
				<AssertMethodValue method="value=application.clearStyleTest.getStyle('teststyle_1_string_noinh')" value="testString" />
				<AssertMethodValue method="value=application.clearStyleTest.getStyle('teststyle_2_number_noinh')" 
								   valueExpression="value=12345.678"/>
				
				<!--Verify un-inline style using default value after clearing. -->
				<AssertMethodValue method="value=application.clearStyleTest.getStyle('teststyle_3_uint_inh')" valueExpression="value=undefined" />
				<AssertMethodValue method="value=application.clearStyleTest.getStyle('teststyle_5_format_length_noinh')" 
								   valueExpression="value=30" />
				<AssertMethodValue method="value=application.clearStyleTest.getStyle('teststyle_6_format_time_noinh')" 
								   valueExpression="value=5000"/>
				<AssertMethodValue method="value=application.clearStyleTest.getStyle('teststyle_7_format_color_noinh')" 
								   valueExpression="value=0x112233"/>
			</body>
		</TestCase>	
	</testCases>
</UnitTester>