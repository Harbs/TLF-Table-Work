<?xml version="1.0" encoding="utf-8"?>
<!--

  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.

-->
<UnitTester testDir="mx/styles/AdvancedStyleClient/Styles/"  
			xmlns:mx="http://www.adobe.com/2006/mxml" 
			xmlns:s="library://ns.adobe.com/flex/spark" 
			xmlns="*" 
			testSWF="ADV_flex_component_main.mxml">
	
	<mx:Script>
		<![CDATA[
			
			import assets.styleTest.ADVStyleTestClass;
			import assets.styleTest.ADVStyleTestVo;
			import assets.styleTest.ADVStyleTestConstants;
			import assets.styleTest.ADVStyleTestEvent;
			import assets.styleTest.ADVStyleTestClassUIComp;
			
			import mx.collections.ArrayCollection;
			import mx.collections.IList;
			import mx.collections.XMLListCollection;
			
			public static function init(o:DisplayObject):void
			{
				
			}
			
		]]>
	</mx:Script>
	
	<mx:Metadata>
		<![CDATA[
		[Mixin]
		]]>
	</mx:Metadata>
	
	<testCases>
		<!--This test case is to test the un-setting styles-->
		<TestCase testID="ADV_component_unsetting_test1" 
				  description="This test case is to test the un-setting styles" 
				  keywords="[ADVStyleTestClass, FlexComponent, un-setting style]">
			<setup>
				<ResetComponent target="advStyleTest_flexComponent" className="assets.FlexComponent" waitEvent="updateComplete"/> 
			</setup>
			<body>
				<AssertMethodValue method="value=application.advStyleTest_flexComponent.getAdvStyle('teststyle_6_format_time_noinh')" valueExpression="value=5000"/>
			</body>
		</TestCase>
		
		<!--This test case is to test the style only defined in application-->
		<TestCase testID="ADV_component_mainOnly_test2" 
				  description="This test case is to test the style only defined in application" 
				  keywords="[ADVStyleTestClass, FlexComponent, main application style]" >
			<setup>
				<ResetComponent target="advStyleTest_flexComponent" className="assets.FlexComponent" waitEvent="updateComplete"/> 
			</setup>
			<body>
				<!--ID Selector-->
				<AssertMethodValue method="value=application.advStyleTest_flexComponent.getAdvStyle('teststyle_4_date_inh')" valueExpression="value=application.appDate"/>
				
				<!--Class Selector-->
				<AssertMethodValue method="value=application.advStyleTest_flexComponent.getAdvCompStyle('teststyle_2_number_noinh')" valueExpression="value=12345"/>
			</body>
		</TestCase>
		
		<!--This test case is to test the style only defined in component-->
		<TestCase testID="ADV_component_componentOnly_test3" 
				  description="This test case is to test the style only defined in component" 
				  keywords="[ADVStyleTestClass, FlexComponent, component style]" >
			<setup>
				<ResetComponent target="advStyleTest_flexComponent" className="assets.FlexComponent" waitEvent="updateComplete"/> 
			</setup>
			<body>
				<!--the first case is test ID Selector with the same name of main application, the second case is test different name-->
				<AssertMethodValue method="value=application.advStyleTest_flexComponent.getAdvStyle('teststyle_2_number_noinh')" valueExpression="value=54321"/>
				<AssertStyleValue styleName="teststyle_2_number_noinh" target="advStyleTest_flexComponent.componentADVDiff" valueExpression="value=12"/>
				
				<!--the first case is test Class Selector with the same name of main application, the second case is test different name -->
				<AssertMethodValue method="value=application.advStyleTest_flexComponent.getAdvCompStyle('teststyle_1_string_noinh')" value="defaultString"/>
				<AssertStyleValue styleName="teststyle_1_string_noinh" target="advStyleTest_flexComponent.componentADVStyleDiff" value="componentString"/>
			</body>
		</TestCase>
		
		<!--This test case is to test the styles defined both in main application and component using same names with Class and ID Selector-->
		<TestCase testID="ADV_component_compound_main_component_sameName_test4" 
				  description="This test case is to test the styles defined both in main application and component using same names with Class and ID Selector" 
				  keywords="[ADVStyleTestClass, FlexComponent, compound, same names of Class Selector and ID Selector]" >
			<setup>
				<ResetComponent target="advStyleTest_flexComponent" className="assets.FlexComponent" waitEvent="updateComplete"/> 
			</setup>
			<body>
				<!--ID Selector-->
				<AssertMethodValue method="value=application.advStyleTest_flexComponent.getAdvStyle('teststyle_1_string_noinh')" value="idAppStr"/>
				<AssertMethodValue method="value=application.advStyleTest_flexComponent.getAdvStyle('teststyle_3_uint_inh')" valueExpression="value=345"/>
				
				<!--Class Selector-->
				<AssertMethodValue method="value=application.advStyleTest_flexComponent.getAdvCompStyle('teststyle_3_uint_inh')" valueExpression="value=67"/>
			</body>
		</TestCase>
		
		<!--This test case is to test the styles defined both in main application and component using different names with Class and ID Selector-->
		<TestCase testID="ADV_component_compound_main_component_diffName_test5" 
				  description="This test case is to test the styles defined both in main application and component using different names with Class and ID Selector" 
				  keywords="[ADVStyleTestClass, FlexComponent, different names of Class Selector and ID Selector]" >
			<setup>
				<ResetComponent target="advStyleTest_flexComponent" className="assets.FlexComponent" waitEvent="updateComplete"/> 
			</setup>
			<body>
				<!--ID Selector-->
				<AssertStyleValue styleName="teststyle_1_string_noinh" target="advStyleTest_flexComponent.componentADVDiff" value="idCompString"/>
				<AssertStyleValue styleName="teststyle_3_uint_inh" target="advStyleTest_flexComponent.componentADVDiff" valueExpression="value=56"/>
				
				<!--Class Selector-->
				<AssertStyleValue styleName="teststyle_3_uint_inh" target="advStyleTest_flexComponent.componentADVStyleDiff" valueExpression="value=34"/>
			</body>
		</TestCase>
		
		<!--This test case is to test the custom method defined in component-->
		<TestCase testID="ADV_component_custom_method_test6" 
				  description="This test case is to test the custom method defined in component" 
				  keywords="[ADVStyleTestClass, FlexComponent, custom method]" >
			<setup>
				<ResetComponent target="advStyleTest_flexComponent" className="assets.FlexComponent" waitEvent="updateComplete"/> 
				<RunCode code="application.advStyleTest_flexComponent.setCompStyle()"/>
				<Pause timeout="100"/>
			</setup>
			<body>
				<!--test setted styles using method -->
				<AssertMethodValue method="value=application.advStyleTest_flexComponent.getAdvStyle('teststyle_1_string_noinh')" value="testsetStr"/>
				<AssertMethodValue method="value=application.advStyleTest_flexComponent.getAdvStyle('teststyle_3_uint_inh')" valueExpression="value=56"/>
				
				<!--test unsetted styles using method -->
				<AssertMethodValue method="value=application.advStyleTest_flexComponent.getAdvStyle('teststyle_2_number_noinh')" valueExpression="value=54321"/>
			</body>
		</TestCase>
		
		<!--This test case is to test the styles using addElement() API-->
		<TestCase testID="ADV_component_addElement_method_test7" 
				  description="This test case is to test the styles using addElement() API" 
				  keywords="[ADVStyleTestClass, FlexComponent, addElement]" >
			<setup>
				<ResetComponent target="advStyleTest_flexComponent" className="assets.FlexComponent" waitEvent="updateComplete"/>
				<RunCode code="application.addFlexComponent()"/>
				<Pause timeout="100"/>
			</setup>
			<body>
				<!--test style not defined in component but in dynamic created component-->
				<AssertMethodValue method="value=application.myComp.getAdvCompStyle('teststyle_4_date_inh')" valueExpression="value=application.compDate1"/>
				<AssertStyleValue styleName="teststyle_4_date_inh" target="myComp.componentADVStyle" valueExpression="value=application.compDate1"/>
				<AssertStyleValue styleName="teststyle_2_number_noinh" target="myComp.componentADVStyle" valueExpression="value=12345"/>
				
				<!--test inheritable style-->
				<AssertStyleValue styleName="teststyle_3_uint_inh" target="myComp.componentADVStyle" valueExpression="value=67"/>
				
				<!--test style only defined in component-->
				<AssertStyleValue styleName="teststyle_1_string_noinh" target="myComp.componentADVStyle" value="defaultString"/>
				
				<!--test un-setting style-->
				<AssertMethodValue method="value=application.myComp.getAdvCompStyle('teststyle_6_format_time_noinh')" valueExpression="value=5000" />
			</body>
		</TestCase>
		
		<!--This test case is to test styleManager API to change styles-->
		<TestCase testID="ADV_component_styleManager_method_test8" 
				  description="This test case is to test styleManager API to change styles" 
				  keywords="[ADVStyleTestClass, FlexComponent, styleManager]" >
			<setup>
				<ResetComponent target="advStyleTest_flexComponent" className="assets.FlexComponent" waitEvent="updateComplete"/> 
				<RunCode code="application.testAdvStyleInSM()"/>
				<Pause timeout="100"/>
			</setup>
			<body>			
				<AssertMethodValue method="value=application.advStyleTest_flexComponent.getAdvCompStyle('teststyle_4_date_inh')" valueExpression="value=application.appDate1"/>
			</body>
		</TestCase>
	</testCases>
</UnitTester>