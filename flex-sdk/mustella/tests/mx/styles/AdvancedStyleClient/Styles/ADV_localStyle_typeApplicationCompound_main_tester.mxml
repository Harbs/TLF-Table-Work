<?xml version="1.0" encoding="utf-8"?>
<!--

  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.

-->
<UnitTester testDir="mx/styles/AdvancedStyleClient/Styles/"  
			xmlns:mx="http://www.adobe.com/2006/mxml" 
			xmlns:s="library://ns.adobe.com/flex/spark" 
			xmlns="*" 
			testSWF="ADV_localStyle_typeApplicationCompound_main.mxml">
	
	<mx:Script>
		<![CDATA[
			import assets.styleTest.*;
			
			public static function init(o:DisplayObject):void 
			{
				
			}
			
			
		]]>
	</mx:Script>
	
	<mx:Metadata>
		<![CDATA[
		[Mixin]
		]]>
	</mx:Metadata>
	
	<testCases>			
		<!--test style compound/overwrite between type selector and application selector-->
		<TestCase testID="ADV_localStyle_compound_type_application_test1" 
				  description="test style compound/overwrite between type selector and application selector" 
				  keywords="[ADVStyleTestClass, local, compound, type selector, application selector]">
			<setup>
				<ResetComponent target="label" className="spark.components.Label" waitEvent="updateComplete" />
			</setup>
			<body>
				<!--type selector setting-->
				<AssertStyleValue target="advStyleTest_Local1" styleName="teststyle_10_xml_arrayCol_noinh" valueExpression="value=application.xmlList"/>
				<AssertStyleValue target="advStyleTest_Local1" styleName="teststyle_11_boolean_noinh" valueExpression="value=true"/>
				<AssertStyleValue target="advStyleTest_Local1" styleName="teststyle_12_enum_string_inh" value="firstType"/>
				<AssertStyleValue target="advStyleTest_Local1" styleName="teststyle_14_object_noinh" valueExpression="value=application.myVo_heavy"/>
				<AssertStyleValue target="advStyleTest_Local1" styleName="teststyle_15_state_string_noinh" value="inlineStringHeavy"/>
				<AssertStyleValue target="advStyleTest_Local1" styleName="teststyle_17_skin_state_noinh" valueExpression="value=assets.styleTest.ADVStyleTestSkin"/>			
				
				<!--compound style between type and application selector using type style value-->
				<AssertStyleValue target="advStyleTest_Local1" styleName="teststyle_2_number_noinh" valueExpression="value=11"/>
				
				<!--default setting-->
				<AssertStyleValue target="advStyleTest_Local1" styleName="teststyle_7_format_color_noinh" valueExpression="value=0x112233"/>
				<AssertStyleValue target="advStyleTest_Local1" styleName="teststyle_8_format_arrayType_noinh" valueExpression="value=application.defaultColorArray"/>
				<AssertStyleValue target="advStyleTest_Local1" styleName="teststyle_9_date_arrayCol_inh" valueExpression="value=application.defaultDateList"/>
				<AssertStyleValue target="advStyleTest_Local1" styleName="teststyle_13_enum_int_noinh" valueExpression="value=15"/>
				<AssertStyleValue target="advStyleTest_Local1" styleName="teststyle_16_skin_noinh" valueExpression="value=ADVStyleTestConstants.defaultCls"/>
				
				<!--application selector setting for inherited style-->
				
				<!--application selector setting for herited style-->
				<AssertStyleValue target="advStyleTest_Local1" styleName="teststyle_3_uint_inh" valueExpression="value=0"/>				
			</body>
		</TestCase>
	</testCases>
</UnitTester>