<UnitTester testDir="spark/collections/Sort/Properties/" testSWF="SF_sort_compareFunction.mxml" xmlns:mx="http://www.adobe.com/2006/mxml" xmlns="*">
    <mx:Script><![CDATA[
			import flash.globalization.LastOperationStatus;
			import assets.newClasses.SFConstant;
			
			public static function init(o:DisplayObject):void
			{
				
			}
		]]></mx:Script>
    <mx:Metadata><![CDATA[
		[Mixin]
		]]></mx:Metadata>
    <testCases>
        <TestCase testID="Sort_Property_compareFunctions_default_inline_1" keywords="[Sort, compareFunctions, default]">
            <setup>
                <ResetComponent target="stComp" className="newComps.CustComp_sort_compareFunction" waitEvent="updateComplete"/>
            </setup>
            <body>
                <AssertMethodValue method="value=application.stComp.SortCompare(1,2,application.stComp.st,'spark')" valueExpression="value=-1"/>
                <AssertMethodValue method="value=application.stComp.SortCompare(1,1,application.stComp.st,'spark')" valueExpression="value=0"/>
                <AssertMethodValue method="value=application.stComp.SortCompare(2,1,application.stComp.st,'spark')" valueExpression="value=1"/>
                <AssertPropertyValue target="stComp.errLabel" propertyName="text" value="No Error"/>
            </body>
        </TestCase>
        <TestCase testID="Sort_Property_compareFunctions_default_inline_2" keywords="[Sort, compareFunctions, default]">
            <setup>
                <ResetComponent target="stComp" className="newComps.CustComp_sort_compareFunction" waitEvent="updateComplete"/>
            </setup>
            <body>
                <AssertMethodValue method="value=application.stComp.SortCompare('a','b',application.stComp.stEN,'spark')" valueExpression="value=-1"/>
                <AssertMethodValue method="value=application.stComp.SortCompare('xxx','xxx',application.stComp.stEN,'spark')" valueExpression="value=0"/>
                <AssertMethodValue method="value=application.stComp.SortCompare('b','a',application.stComp.stEN,'spark')" valueExpression="value=1"/>
                <AssertPropertyValue target="stComp.errLabel" propertyName="text" value="No Error"/>
            </body>
        </TestCase>
        <TestCase testID="Sort_Property_compareFunctions_default_inline_3" keywords="[Sort, compareFunctions, default]">
            <setup>
                <ResetComponent target="stComp" className="newComps.CustComp_sort_compareFunction" waitEvent="updateComplete"/>
            </setup>
            <body>
                <AssertMethodValue method="value=application.stComp.SortCompare(new Date(2010,3,1),new Date(2010,3,2),application.stComp.st,'spark')" valueExpression="value=-1"/>
                <AssertMethodValue method="value=application.stComp.SortCompare(new Date(2010,3,2),new Date(2010,3,2),application.stComp.st,'spark')" valueExpression="value=0"/>
                <AssertMethodValue method="value=application.stComp.SortCompare(new Date(2010,3,2),new Date(2010,3,1),application.stComp.st,'spark')" valueExpression="value=1"/>
                <AssertPropertyValue target="stComp.errLabel" propertyName="text" value="No Error"/>
            </body>
        </TestCase>
        <TestCase testID="Sort_Property_compareFunctions_default_inline_4" keywords="[Sort, compareFunctions, default]">
            <setup>
                <ResetComponent target="stComp" className="newComps.CustComp_sort_compareFunction" waitEvent="updateComplete"/>
            </setup>
            <body>
                <AssertMethodValue method="value=application.stComp.SortCompare(application.stComp.myObj1,application.stComp.myObj2,application.stComp.st,'spark')" valueExpression="value=0"/>
                <AssertMethodValue method="value=application.stComp.SortCompare(application.stComp.myObj2,application.stComp.myObj1,application.stComp.st,'spark')" valueExpression="value=0"/>
                <AssertPropertyValue target="stComp.errLabel" propertyName="text" value="No Error"/>
            </body>
        </TestCase>
        <TestCase testID="Sort_Property_compareFunctions_default_inline_5" keywords="[Sort, compareFunctions, default]">
            <setup>
                <ResetComponent target="stComp" className="newComps.CustComp_sort_compareFunction" waitEvent="updateComplete"/>
            </setup>
            <body>
                <AssertMethodValue method="value=application.stComp.SortCompare(application.stComp.obj1,application.stComp.obj2,application.stComp.st,'spark')" valueExpression="value=0"/>
                <AssertMethodValue method="value=application.stComp.SortCompare(application.stComp.obj2,application.stComp.obj1,application.stComp.st,'spark')" valueExpression="value=0"/>
                <AssertPropertyValue target="stComp.errLabel" propertyName="text" value="No Error"/>
            </body>
        </TestCase>
        <TestCase testID="Sort_Property_compareFunctions_default_script_6" keywords="[Sort, compareFunctions, default]">
            <setup>
                <ResetComponent target="stComp" className="newComps.CustComp_sort_compareFunction" waitEvent="updateComplete"/>
            </setup>
            <body>
                <AssertMethodValue method="value=application.stComp.SortCompare(1,2,application.stComp.stScript,'spark')" valueExpression="value=-1"/>
                <AssertMethodValue method="value=application.stComp.SortCompare(1,1,application.stComp.stScript,'spark')" valueExpression="value=0"/>
                <AssertMethodValue method="value=application.stComp.SortCompare(2,1,application.stComp.stScript,'spark')" valueExpression="value=1"/>
                <AssertPropertyValue target="stComp.errLabel" propertyName="text" value="No Error"/>
            </body>
        </TestCase>
        <TestCase testID="Sort_Property_compareFunctions_default_script_7" keywords="[Sort, compareFunctions, default]">
            <setup>
                <ResetComponent target="stComp" className="newComps.CustComp_sort_compareFunction" waitEvent="updateComplete"/>
            </setup>
            <body>
                <AssertMethodValue method="value=application.stComp.SortCompare('a','b',application.stComp.stScriptEN,'spark')" valueExpression="value=-1"/>
                <AssertMethodValue method="value=application.stComp.SortCompare('xxx','xxx',application.stComp.stScriptEN,'spark')" valueExpression="value=0"/>
                <AssertMethodValue method="value=application.stComp.SortCompare('b','a',application.stComp.stScriptEN,'spark')" valueExpression="value=1"/>
                <AssertPropertyValue target="stComp.errLabel" propertyName="text" value="No Error"/>
            </body>
        </TestCase>
        <TestCase testID="Sort_Property_compareFunctions_default_script_8" keywords="[Sort, compareFunctions, default]">
            <setup>
                <ResetComponent target="stComp" className="newComps.CustComp_sort_compareFunction" waitEvent="updateComplete"/>
            </setup>
            <body>
                <AssertMethodValue method="value=application.stComp.SortCompare(new Date(2010,3,1),new Date(2010,3,2),application.stComp.stScript,'spark')" valueExpression="value=-1"/>
                <AssertMethodValue method="value=application.stComp.SortCompare(new Date(2010,3,2),new Date(2010,3,2),application.stComp.stScript,'spark')" valueExpression="value=0"/>
                <AssertMethodValue method="value=application.stComp.SortCompare(new Date(2010,3,2),new Date(2010,3,1),application.stComp.stScript,'spark')" valueExpression="value=1"/>
                <AssertPropertyValue target="stComp.errLabel" propertyName="text" value="No Error"/>
            </body>
        </TestCase>
        <TestCase testID="Sort_Property_compareFunctions_default_script_9" keywords="[Sort, compareFunctions, default]">
            <setup>
                <ResetComponent target="stComp" className="newComps.CustComp_sort_compareFunction" waitEvent="updateComplete"/>
            </setup>
            <body>
                <AssertMethodValue method="value=application.stComp.SortCompare(application.stComp.myObj1,application.stComp.myObj2,application.stComp.stScript,'spark')" valueExpression="value=0"/>
                <AssertMethodValue method="value=application.stComp.SortCompare(application.stComp.myObj2,application.stComp.myObj1,application.stComp.stScript,'spark')" valueExpression="value=0"/>
                <AssertPropertyValue target="stComp.errLabel" propertyName="text" value="No Error"/>
            </body>
        </TestCase>
        <TestCase testID="Sort_Property_compareFunctions_default_script_10" keywords="[Sort, compareFunctions, default]">
            <setup>
                <ResetComponent target="stComp" className="newComps.CustComp_sort_compareFunction" waitEvent="updateComplete"/>
            </setup>
            <body>
                <AssertMethodValue method="value=application.stComp.SortCompare(application.stComp.obj1,application.stComp.obj2,application.stComp.stScript,'spark')" valueExpression="value=0"/>
                <AssertMethodValue method="value=application.stComp.SortCompare(application.stComp.obj2,application.stComp.obj1,application.stComp.stScript,'spark')" valueExpression="value=0"/>
                <AssertPropertyValue target="stComp.errLabel" propertyName="text" value="No Error"/>
            </body>
        </TestCase>
        <TestCase testID="Sort_Property_compareFunctions_default_withSortFields_inline_11" keywords="[Sort, compareFunctions, default]">
            <setup>
                <ResetComponent target="stComp" className="newComps.CustComp_sort_compareFunction" waitEvent="updateComplete"/>
            </setup>
            <body>
                <AssertMethodValue method="value=application.stComp.SortCompareWithFields(1,2,application.stComp.fields1, application.stComp.st,'spark')" valueExpression="value=0"/>
                <AssertMethodValue method="value=application.stComp.SortCompareWithFields(1,2,application.stComp.fields1, application.stComp.mxST,'mx')" valueExpression="value=0"/>
                <AssertPropertyValue target="stComp.errLabel" propertyName="text" valueExpression="value=application.stComp.errLabelMX.text"/>
            </body>
        </TestCase>
        <TestCase testID="Sort_Property_compareFunctions_default_withSortFields_inline_12" keywords="[Sort, compareFunctions, default]">
            <setup>
                <ResetComponent target="stComp" className="newComps.CustComp_sort_compareFunction" waitEvent="updateComplete"/>
            </setup>
            <body>
                <AssertMethodValue method="value=application.stComp.SortCompareWithFields('aa','bb',application.stComp.fields1, application.stComp.st,'spark')" valueExpression="value=0"/>
                <AssertMethodValue method="value=application.stComp.SortCompareWithFields('aa','bb',application.stComp.fields1, application.stComp.mxST,'mx')" valueExpression="value=0"/>
                <AssertPropertyValue target="stComp.errLabel" propertyName="text" valueExpression="value=application.stComp.errLabelMX.text"/>
            </body>
        </TestCase>
        <TestCase testID="Sort_Property_compareFunctions_default_withSortFields_inline_13" keywords="[Sort, compareFunctions, default]">
            <setup>
                <ResetComponent target="stComp" className="newComps.CustComp_sort_compareFunction" waitEvent="updateComplete"/>
            </setup>
            <body>
                <AssertMethodValue method="value=application.stComp.SortCompareWithFields(new Date(2010,3,1),new Date(2010,3,2),application.stComp.fields1, application.stComp.st,'spark')" valueExpression="value=0"/>
                <AssertMethodValue method="value=application.stComp.SortCompareWithFields(new Date(2010,3,1),new Date(2010,3,1),application.stComp.fields1, application.stComp.st,'spark')" valueExpression="value=0"/>
                <AssertMethodValue method="value=application.stComp.SortCompareWithFields(new Date(2010,3,2),new Date(2010,3,1),application.stComp.fields2, application.stComp.st,'spark')" valueExpression="value=0"/>
                <AssertPropertyValue target="stComp.errLabel" propertyName="text" value="No Error"/>
            </body>
        </TestCase>
        <TestCase testID="Sort_Property_compareFunctions_default_withSortFields_inline_14" keywords="[Sort, compareFunctions, default]">
            <setup>
                <ResetComponent target="stComp" className="newComps.CustComp_sort_compareFunction" waitEvent="updateComplete"/>
            </setup>
            <body>
                <AssertMethodValue method="value=application.stComp.SortCompareWithFields(application.stComp.myObj3,application.stComp.myObj4,application.stComp.fields1, application.stComp.st,'spark')" valueExpression="value=-1"/>
                <AssertMethodValue method="value=application.stComp.SortCompareWithFields(application.stComp.myObj3,application.stComp.myObj3,application.stComp.fields1, application.stComp.st,'spark')" valueExpression="value=0"/>
                <AssertMethodValue method="value=application.stComp.SortCompareWithFields(application.stComp.myObj3,application.stComp.myObj4,application.stComp.fields2, application.stComp.st,'spark')" valueExpression="value=1"/>
                <AssertPropertyValue target="stComp.errLabel" propertyName="text" value="No Error"/>
            </body>
        </TestCase>
        <TestCase testID="Sort_Property_compareFunctions_default_withSortFields_inline_15" keywords="[Sort, compareFunctions, default]">
            <setup>
                <ResetComponent target="stComp" className="newComps.CustComp_sort_compareFunction" waitEvent="updateComplete"/>
            </setup>
            <body>
                <AssertMethodValue method="value=application.stComp.SortCompareWithFields(application.stComp.obj1,application.stComp.obj2,application.stComp.fields1, application.stComp.st,'spark')" valueExpression="value=0"/>
                <AssertMethodValue method="value=application.stComp.SortCompareWithFields(application.stComp.obj1,application.stComp.obj1,application.stComp.fields1, application.stComp.st,'spark')" valueExpression="value=0"/>
                <AssertMethodValue method="value=application.stComp.SortCompareWithFields(application.stComp.obj1,application.stComp.obj2,application.stComp.fields2, application.stComp.st,'spark')" valueExpression="value=0"/>
                <AssertPropertyValue target="stComp.errLabel" propertyName="text" value="No Error"/>
            </body>
        </TestCase>
        <TestCase testID="Sort_Property_compareFunctions_default_withSortFields_script_16" keywords="[Sort, compareFunctions, default]">
            <setup>
                <ResetComponent target="stComp" className="newComps.CustComp_sort_compareFunction" waitEvent="updateComplete"/>
            </setup>
            <body>
                <AssertMethodValue method="value=application.stComp.SortCompareWithFields(1,2,application.stComp.fields1, application.stComp.stScript,'spark')" valueExpression="value=0"/>
                <AssertMethodValue method="value=application.stComp.SortCompareWithFields(1,2,application.stComp.fields1, application.stComp.mxST,'mx')" valueExpression="value=0"/>
                <AssertPropertyValue target="stComp.errLabel" propertyName="text" valueExpression="value=application.stComp.errLabelMX.text"/>
            </body>
        </TestCase>
        <TestCase testID="Sort_Property_compareFunctions_default_withSortFields_script_17" keywords="[Sort, compareFunctions, default]">
            <setup>
                <ResetComponent target="stComp" className="newComps.CustComp_sort_compareFunction" waitEvent="updateComplete"/>
            </setup>
            <body>
                <AssertMethodValue method="value=application.stComp.SortCompareWithFields('aa','bb',application.stComp.fields1, application.stComp.stScript,'spark')" valueExpression="value=0"/>
                <AssertMethodValue method="value=application.stComp.SortCompareWithFields('aa','bb',application.stComp.fields1, application.stComp.mxST,'mx')" valueExpression="value=0"/>
                <AssertPropertyValue target="stComp.errLabel" propertyName="text" valueExpression="value=application.stComp.errLabelMX.text"/>
            </body>
        </TestCase>
        <TestCase testID="Sort_Property_compareFunctions_default_withSortFields_script_18" keywords="[Sort, compareFunctions, default]">
            <setup>
                <ResetComponent target="stComp" className="newComps.CustComp_sort_compareFunction" waitEvent="updateComplete"/>
            </setup>
            <body>
                <AssertMethodValue method="value=application.stComp.SortCompareWithFields(new Date(2010,3,1),new Date(2010,3,2),application.stComp.fields1, application.stComp.stScript,'spark')" valueExpression="value=0"/>
                <AssertMethodValue method="value=application.stComp.SortCompareWithFields(new Date(2010,3,1),new Date(2010,3,1),application.stComp.fields1, application.stComp.stScript,'spark')" valueExpression="value=0"/>
                <AssertMethodValue method="value=application.stComp.SortCompareWithFields(new Date(2010,3,2),new Date(2010,3,1),application.stComp.fields2, application.stComp.stScript,'spark')" valueExpression="value=0"/>
                <AssertPropertyValue target="stComp.errLabel" propertyName="text" value="No Error"/>
            </body>
        </TestCase>
        <TestCase testID="Sort_Property_compareFunctions_default_withSortFields_script_19" keywords="[Sort, compareFunctions, default]">
            <setup>
                <ResetComponent target="stComp" className="newComps.CustComp_sort_compareFunction" waitEvent="updateComplete"/>
            </setup>
            <body>
                <AssertMethodValue method="value=application.stComp.SortCompareWithFields(application.stComp.myObj3,application.stComp.myObj4,application.stComp.fields1, application.stComp.stScript,'spark')" valueExpression="value=-1"/>
                <AssertMethodValue method="value=application.stComp.SortCompareWithFields(application.stComp.myObj3,application.stComp.myObj3,application.stComp.fields1, application.stComp.stScript,'spark')" valueExpression="value=0"/>
                <AssertMethodValue method="value=application.stComp.SortCompareWithFields(application.stComp.myObj3,application.stComp.myObj4,application.stComp.fields2, application.stComp.stScript,'spark')" valueExpression="value=1"/>
                <AssertPropertyValue target="stComp.errLabel" propertyName="text" value="No Error"/>
            </body>
        </TestCase>
        <TestCase testID="Sort_Property_compareFunctions_default_withSortFields_script_20" keywords="[Sort, compareFunctions, default]">
            <setup>
                <ResetComponent target="stComp" className="newComps.CustComp_sort_compareFunction" waitEvent="updateComplete"/>
            </setup>
            <body>
                <AssertMethodValue method="value=application.stComp.SortCompareWithFields(application.stComp.obj1,application.stComp.obj2,application.stComp.fields1, application.stComp.stScript,'spark')" valueExpression="value=0"/>
                <AssertMethodValue method="value=application.stComp.SortCompareWithFields(application.stComp.obj1,application.stComp.obj1,application.stComp.fields1, application.stComp.stScript,'spark')" valueExpression="value=0"/>
                <AssertMethodValue method="value=application.stComp.SortCompareWithFields(application.stComp.obj1,application.stComp.obj2,application.stComp.fields2, application.stComp.stScript,'spark')" valueExpression="value=0"/>
                <AssertPropertyValue target="stComp.errLabel" propertyName="text" value="No Error"/>
            </body>
        </TestCase>
        <TestCase testID="Sort_Property_compareFunctions_set_inline_21" keywords="[Sort, compareFunctions, set]">
            <setup>
                <ResetComponent target="stComp" className="newComps.CustComp_sort_compareFunction" waitEvent="updateComplete"/>
            </setup>
            <body>
                <SetProperty target="stComp.st" propertyName="compareFunction" valueExpression="value=application.stComp.myCompare"/>
                <AssertMethodValue method="value=application.stComp.SortCompare(1,2,application.stComp.st,'spark')" valueExpression="value=2"/>
                <AssertMethodValue method="value=application.stComp.SortCompare(1,1,application.stComp.st,'spark')" valueExpression="value=4"/>
                <AssertMethodValue method="value=application.stComp.SortCompare(2,1,application.stComp.st,'spark')" valueExpression="value=6"/>
                <AssertPropertyValue target="stComp.errLabel" propertyName="text" value="No Error"/>
            </body>
        </TestCase>
        <TestCase testID="Sort_Property_compareFunctions_set_script_22" keywords="[Sort, compareFunctions, set]">
            <setup>
                <ResetComponent target="stComp" className="newComps.CustComp_sort_compareFunction" waitEvent="updateComplete"/>
            </setup>
            <body>
                <SetProperty target="stComp.stScript" propertyName="compareFunction" valueExpression="value=application.stComp.myCompare"/>
                <AssertMethodValue method="value=application.stComp.SortCompare(1,2,application.stComp.stScript,'spark')" valueExpression="value=2"/>
                <AssertMethodValue method="value=application.stComp.SortCompare(1,1,application.stComp.stScript,'spark')" valueExpression="value=4"/>
                <AssertMethodValue method="value=application.stComp.SortCompare(2,1,application.stComp.stScript,'spark')" valueExpression="value=6"/>
                <AssertPropertyValue target="stComp.errLabel" propertyName="text" value="No Error"/>
            </body>
        </TestCase>
        <TestCase testID="Sort_Property_compareFunctions_set_inline_23" keywords="[Sort, compareFunctions, inline]">
            <setup>
                <ResetComponent target="stComp" className="newComps.CustComp_sort_compareFunction" waitEvent="updateComplete"/>
            </setup>
            <body>
                <AssertPropertyValue target="stComp.stInline" propertyName="compareFunction" valueExpression="value=application.stComp.noParameterCompare"/>
            </body>
        </TestCase>
        <TestCase testID="Sort_Property_compareFunctions_nofunction_inline_24" keywords="[Sort, compareFunctions, null]">
            <setup>
                <ResetComponent target="stComp" className="newComps.CustComp_sort_compareFunction" waitEvent="updateComplete"/>
            </setup>
            <body>
                <RunCode code="application.stComp.trySet(application.stComp.st,'compareFunction',null,'spark')"/>
                <Pause timeout="{SFConstant.pauseTime}"/>
                <AssertPropertyValue target="stComp.errLabel" propertyName="text" value="No Error"/>
                <AssertMethodValue method="value=application.stComp.SortCompare(1,2,application.stComp.st,'spark')" valueExpression="value=-1"/>
                <AssertPropertyValue target="stComp.errLabel" propertyName="text" value="No Error"/>
            </body>
        </TestCase>
        <TestCase testID="Sort_Property_compareFunctions_nofunction_script_25" keywords="[Sort, compareFunctions, null]">
            <setup>
                <ResetComponent target="stComp" className="newComps.CustComp_sort_compareFunction" waitEvent="updateComplete"/>
            </setup>
            <body>
                <RunCode code="application.stComp.trySet(application.stComp.stScript,'compareFunction',null,'spark')"/>
                <Pause timeout="{SFConstant.pauseTime}"/>
                <AssertPropertyValue target="stComp.errLabel" propertyName="text" value="No Error"/>
                <AssertMethodValue method="value=application.stComp.SortCompare(1,2,application.stComp.stScript,'spark')" valueExpression="value=-1"/>
                <AssertPropertyValue target="stComp.errLabel" propertyName="text" value="No Error"/>
            </body>
        </TestCase>
        <TestCase testID="Sort_Property_compareFunctions_no_parameter_inline_26" keywords="[Sort, compareFunctions, invalid]">
            <setup>
                <ResetComponent target="stComp" className="newComps.CustComp_sort_compareFunction" waitEvent="updateComplete"/>
            </setup>
            <body>
                <RunCode code="application.stComp.trySet(application.stComp.st,'compareFunction',application.stComp.noParameterCompare,'spark')"/>
                <Pause timeout="{SFConstant.pauseTime}"/>
                <AssertPropertyValue target="stComp.errLabel" propertyName="text" value="No Error"/>
                <RunCode code="application.stComp.trySet(application.stComp.mxST,'compareFunction',application.stComp.noParameterCompare,'mx')"/>
                <Pause timeout="{SFConstant.pauseTime}"/>
                <AssertPropertyValue target="stComp.errLabelMX" propertyName="text" value="No Error"/>
                <AssertMethodValue method="value=application.stComp.SortCompare(1,2,application.stComp.st,'spark')" valueExpression="value=0"/>
                <AssertMethodValue method="value=application.stComp.SortCompare(1,2,application.stComp.mxST,'mx')" valueExpression="value=0"/>
                <AssertPropertyValue target="stComp.errLabel" propertyName="text" valueExpression="value=application.stComp.errLabelMX.text"/>
            </body>
        </TestCase>
        <TestCase testID="Sort_Property_compareFunctions_no_parameter_script_27" keywords="[Sort, compareFunctions, invalid]">
            <setup>
                <ResetComponent target="stComp" className="newComps.CustComp_sort_compareFunction" waitEvent="updateComplete"/>
            </setup>
            <body>
                <RunCode code="application.stComp.trySet(application.stComp.stScript,'compareFunction',application.stComp.noParameterCompare,'spark')"/>
                <Pause timeout="{SFConstant.pauseTime}"/>
                <AssertPropertyValue target="stComp.errLabel" propertyName="text" value="No Error"/>
                <RunCode code="application.stComp.trySet(application.stComp.mxST,'compareFunction',application.stComp.noParameterCompare,'mx')"/>
                <Pause timeout="{SFConstant.pauseTime}"/>
                <AssertPropertyValue target="stComp.errLabelMX" propertyName="text" value="No Error"/>
                <AssertMethodValue method="value=application.stComp.SortCompare(1,2,application.stComp.stScript,'spark')" valueExpression="value=0"/>
                <AssertMethodValue method="value=application.stComp.SortCompare(1,2,application.stComp.mxST,'mx')" valueExpression="value=0"/>
                <AssertPropertyValue target="stComp.errLabel" propertyName="text" valueExpression="value=application.stComp.errLabelMX.text"/>
            </body>
        </TestCase>
        <TestCase testID="Sort_Property_compareFunctions_wrong_return_type_inline_28" keywords="[Sort, compareFunctions, invalid]">
            <setup>
                <ResetComponent target="stComp" className="newComps.CustComp_sort_compareFunction" waitEvent="updateComplete"/>
            </setup>
            <body>
                <RunCode code="application.stComp.trySet(application.stComp.st,'compareFunction',application.stComp.wrongReturnTypeCompare,'spark')"/>
                <Pause timeout="{SFConstant.pauseTime}"/>
                <AssertPropertyValue target="stComp.errLabel" propertyName="text" value="No Error"/>
                <AssertMethodValue method="value=application.stComp.SortCompare(1,2,application.stComp.st,'spark')" valueExpression="value=0"/>
                <AssertPropertyValue target="stComp.errLabel" propertyName="text" value="No Error"/>
            </body>
        </TestCase>
        <TestCase testID="Sort_Property_compareFunctions_wrong_return_type_script_29" keywords="[Sort, compareFunctions, invalid]">
            <setup>
                <ResetComponent target="stComp" className="newComps.CustComp_sort_compareFunction" waitEvent="updateComplete"/>
            </setup>
            <body>
                <RunCode code="application.stComp.trySet(application.stComp.stScript,'compareFunction',application.stComp.wrongReturnTypeCompare,'spark')"/>
                <Pause timeout="{SFConstant.pauseTime}"/>
                <AssertPropertyValue target="stComp.errLabel" propertyName="text" value="No Error"/>
                <AssertMethodValue method="value=application.stComp.SortCompare(1,2,application.stComp.stScript,'spark')" valueExpression="value=0"/>
                <AssertPropertyValue target="stComp.errLabel" propertyName="text" value="No Error"/>
            </body>
        </TestCase>
        <TestCase testID="Sort_Property_compareFunctions_InlineLocale_30" keywords="[Sort, compareFunctions, default]">
            <setup>
                <ResetComponent target="stComp" className="newComps.CustComp_sort_compareFunction" waitEvent="updateComplete"/>
            </setup>
            <body>
                <AssertMethodValue method="value=application.stComp.SortCompare('a','b',application.stComp.stInlineLocaleEN,'spark')" valueExpression="value=-1"/>
                <AssertMethodValue method="value=application.stComp.SortCompare('xxx','xxx',application.stComp.stInlineLocaleEN,'spark')" valueExpression="value=0"/>
                <AssertMethodValue method="value=application.stComp.SortCompare('b','a',application.stComp.stInlineLocaleEN,'spark')" valueExpression="value=1"/>
                <AssertPropertyValue target="stComp.errLabel" propertyName="text" value="No Error"/>
            </body>
        </TestCase>
        <TestCase testID="SortField_Property_compareFunctions_sortWithCF_inline_31" keywords="[Sort, compareFunction, sortWithCF]">
            <setup>
                <ResetComponent target="stComp" className="newComps.CustComp_sort_compareFunction" waitEvent="creationComplete"/>
                <RunCode code="application.stComp.doit(application.stComp.stCF)" waitEvent="collectionChange" waitTarget="stComp.dataComp.myMXNameAgeStrArr"/>
            </setup>
            <body>
                <AssertMethodValue method="value=SFConstant.getArrayOfField('name',application.stComp.dataComp.myMXNameAgeStrArr)" value="TJ,Bo,Ted,Moe,Izzy,Umbra,Danny,Daisy,Imari,Molly,Bunny,barmen,Chumley,cadbury,cadbury,Matisse"/>
            </body>
        </TestCase>
        <TestCase testID="SortField_Property_compareFunctions_sortWithCF_script_32" keywords="[Sort, compareFunction, sortWithCF]">
            <setup>
                <ResetComponent target="stComp" className="newComps.CustComp_sort_compareFunction" waitEvent="creationComplete"/>
                <RunCode code="application.stComp.doit(application.stComp.stCFScript)" waitEvent="collectionChange" waitTarget="stComp.dataComp.myMXNameAgeStrArr"/>
            </setup>
            <body>
                <AssertMethodValue method="value=SFConstant.getArrayOfField('name',application.stComp.dataComp.myMXNameAgeStrArr)" value="TJ,Bo,Ted,Moe,Izzy,Umbra,Danny,Daisy,Imari,Molly,Bunny,barmen,Chumley,cadbury,cadbury,Matisse"/>
            </body>
        </TestCase>
    </testCases>
</UnitTester>