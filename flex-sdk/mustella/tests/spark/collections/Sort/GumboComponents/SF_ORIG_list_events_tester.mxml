<?xml version="1.0" encoding="utf-8"?>
<!--

  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.

-->
<UnitTester testDir="spark/collections/Sort/GumboComponents/"  
			xmlns:fx="http://ns.adobe.com/mxml/2009" 
			xmlns:mx="library://ns.adobe.com/flex/mx" 
			xmlns:s="library://ns.adobe.com/flex/spark" 
			xmlns:m="http://ns.adobe.com/mxml/2009" 
			xmlns="*" testSWF="SF_ORIG_ListBasic.mxml">

    <!-- this set of lines form a template that must be in each unit test -->

    <fx:Script>
        <![CDATA[
        public static function init(o:DisplayObject):void
        {
        }
        ]]>
    </fx:Script>

    <fx:Metadata>
        <![CDATA[
            [Mixin]
        ]]>
    </fx:Metadata>
    <!-- end of set of lines that must be in each unit test -->
    <fx:Script>
    <![CDATA[
        import comps.*;

        import mx.collections.ArrayCollection;
        import spark.events.IndexChangeEvent;
        import spark.skins.spark.*;
        import mx.events.CollectionEventKind;
        import mx.events.CollectionEvent;
        import flashx.textLayout.elements.TextFlow;
        import spark.utils.TextFlowUtil;

        public var data:ArrayCollection = new comps.SampleData();
        var ti:TextFlow = TextFlowUtil.importFromString ("Maecenas tristique, velit aliquam faucibus ornare, justo erat porta elit, sed venenatis neque mi ac elit. Nullam enim metus, gravida ac euismod sit amet, commodo vitae elit. Quisque eget molestie ante. Nulla fermentum pretium augue non tristique. Praesent in orci eu diam ultrices sodales ac quis leo. Aliquam lobortis elit quis mi rutrum feugiat. Aenean sed elit turpis. Duis enim ligula, posuere sit amet semper a, pretium vel leo. Etiam mollis dolor nec elit suscipit imperdiet. Sed a est eros.");

    ]]>
    </fx:Script>
    <testCases>
        
    <TestCase testID="List_events_collectionKind_move" keywords="[List, event, CollectionKind]" description="check that the dataProvider sends off CollectionEvents (move)">
        <setup>
            <ResetComponent target="list1" className="spark.components.List" waitEvent="updateComplete" waitTarget="list1" />
            <SetProperty target="list1" propertyName="itemRendererFunction" valueExpression="value=application.mixItemRendererFunction" waitTarget="list1.dataGroup" waitEvent="updateComplete" />
            <SetProperty target="list1" propertyName="labelField" valueExpression="value='value'" />
            <SetProperty target="list1" propertyName="dataProvider" valueExpression="value=new ArrayCollection([{value:'hello1'},{value:'jello1'},{value:'aello1'}]);" waitTarget="list1.dataGroup" waitEvent="updateComplete" />
            <SetProperty target="list1" propertyName="selectedIndex"  value="0" waitEvent="updateComplete" waitTarget="list1"/>

            <AssertMethodValue method="value=application.resetCollectionChangeResults()" value="complete" />
            <RunCode code="application.list1.dataProvider.addEventListener(CollectionEvent.COLLECTION_CHANGE, application.handleCollectionChangeResults);" />
            <AssertMethodValue method="value=application.kickoffCollectionChangeMoveEvent(application.list1);" value="1" />
        </setup>
        <body>
            <AssertMethodValue method="value=application.collectionChangeResults" value="refreshmove" />
        </body>
    </TestCase>

    </testCases>
</UnitTester>
