<?xml version="1.0" encoding="utf-8"?>
<!--

  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.

-->
<UnitTester testDir="spark/primitives/Graphic/methods/"  xmlns:mx="http://www.adobe.com/2006/mxml" xmlns="*" testSWF="FXG_GroupGraphic.mxml">

    <mx:Script>
    <![CDATA[

       import comps.GroupGraphicBasic;
       import spark.primitives.*;
       import spark.components.RichText;
       import mx.graphics.*;
       import spark.components.Group;


       public static function init(o:DisplayObject):void
        {

        }

       public function addLine(graphicObject:Graphic, groupObject:Group):void
        {
            var myLine:Line = new Line();
            myLine.xFrom = 0; myLine.yFrom = 0;
            myLine.xTo=20; myLine.yTo=15;
            var mySolidColorStroke:SolidColorStroke = new SolidColorStroke();
            mySolidColorStroke.color = 0xFF0000;
            myLine.stroke = mySolidColorStroke;
            if(graphicObject != null)
            {
                graphicObject.addElement(myLine);
            }
            else
            {
               groupObject.addElement(myLine);
            }
        }

       public function removeElementToGraphic(graphicObject:Graphic, num:int):void
        {
            graphicObject.removeElement(graphicObject.getElementAt(num));
        }

       public function addPath(graphicObject:Graphic, groupObject:Group): void
       {
           var newPath:Path = new Path();
           var mySolidColorStroke:SolidColorStroke = new SolidColorStroke();
           mySolidColorStroke.color = 0xFFFFFF;
           newPath.stroke = mySolidColorStroke;
           newPath.data = "M 20,0 c 30,0 30,35 0,35 l -5,0 0,10 -15,-13 15,-13 0,10 5,0 c 24,0 24,-23 0,-23";
           if(graphicObject != null)
           {
                graphicObject.addElement(newPath);
           }
           else
           {
                groupObject.addElement(newPath);
           }
       }

       public function addRect(graphicObject:Graphic, groupObject:Group): void
       {
            var rect1:Rect = new Rect();
            rect1.height = 100;
            rect1.width = 130;
            rect1.x = 10;
            rect1.y = 50;
            var newFill:SolidColor = new SolidColor(0x9966FF, 0.7);
            rect1.fill = newFill;
            if(graphicObject != null)
            {
                graphicObject.addElement(rect1);
            }
            else
            {
                groupObject.addElement(rect1);
            }
       }

       public function addTextGraphic(graphicObject:Graphic, groupObject:Group): void
       {
            var newText:RichText = new RichText();
            newText.content = "Pinatas are fun to hit with a BAT.";
            /*
            newText.color = 0x339966;
            newText.fontWeight = "bold";
            newText.fontSize = 14;
            */
            if(graphicObject != null)
            {
                graphicObject.addElement(newText);
            }
            else
            {
                groupObject.addElement(newText);
            }
       }

       public function addBitmapGraphic(graphicObject:Graphic, groupObject:Group): void
       {
            var newbitmap:BitmapImage = new BitmapImage();
            newbitmap.source = application.kitler;
            newbitmap.x = 20;
            newbitmap.y = 60;
            if(graphicObject != null)
            {
                graphicObject.addElement(newbitmap);
            }
            else
            {
               groupObject.addElement(newbitmap);
            }
       }

       public function addEllipse(graphicObject:Graphic, groupObject:Group): void
       {
            var myEllipse:Ellipse = new Ellipse();
            myEllipse.height = 100;
            myEllipse.width = 130;
            myEllipse.x = 30;
            myEllipse.y = 50;
            var newFill:SolidColor = new SolidColor(0xCC3366, 0.7);
            myEllipse.fill = newFill;
            if(graphicObject != null)
            {
                graphicObject.addElement(myEllipse);
            }
            else
            {
                groupObject.addElement(myEllipse);
            }
       }

       public function addEllipseAtIndex(graphicObject:Graphic, num:int): void
       {
            var myEllipse:Ellipse = new Ellipse();
            myEllipse.height = 100;
            myEllipse.width = 130;
            myEllipse.x = 30;
            myEllipse.y = 50;
            var newFill:SolidColor = new SolidColor(0xFF6600, 1);
            myEllipse.fill = newFill;
            graphicObject.addElementAt(myEllipse, num);
       }

       public function addSquareAtIndex(groupObject:Group, num:int): void
       {
            var mySquare:Rect = new Rect();
            mySquare.height = 100;
            mySquare.width = 100;
            mySquare.x = 30;
            mySquare.y = 20;
            var newFill:SolidColor = new SolidColor(0xFF0000, 1);
            mySquare.fill = newFill;
            groupObject.addElementAt(mySquare, num);
       }

       public function addElementToGraphic2(groupObject:Group):void
        {
            var myLine:Line = new Line();
            myLine.xFrom = 0; myLine.yFrom = 0;
            myLine.xTo=20; myLine.yTo=45;
            var mySolidColorStroke:SolidColorStroke = new SolidColorStroke();
            mySolidColorStroke.color = 0x0000FF;
            myLine.stroke = mySolidColorStroke;
            groupObject.addElement(myLine);
        }

       public function addGroupToGraphic(graphicObject:Graphic):void
       {
            var myNewGroup:Group = new Group();
            var myLine:Line = new Line();
            myLine.xFrom = 0; myLine.yFrom = 0;
            myLine.xTo=70; myLine.yTo=100;
            var mySolidColorStroke:SolidColorStroke = new SolidColorStroke();
            mySolidColorStroke.color = 0x0000FF;
            myLine.stroke = mySolidColorStroke;
            myNewGroup.addElement(myLine);

            var myEllipse:Ellipse = new Ellipse();
            myEllipse.height = 100;
            myEllipse.width = 130;
            myEllipse.x = 30;
            myEllipse.y = 50;
            var newFill:SolidColor = new SolidColor(0x000000, 0.7);
            myEllipse.fill = newFill;
            myNewGroup.addElement(myEllipse);
            graphicObject.addElement(myNewGroup);
       }

       public function addGroup2(graphicObject:Graphic):void
       {
           var myNewGroup:Group = new Group();
           var rect1:Rect = new Rect();
           rect1.height = 100;
           rect1.width = 130;
           rect1.x = 10;
           rect1.y = 50;
           var newFill:SolidColor = new SolidColor(0xFFCCCC, 1.0);
           rect1.fill = newFill;
           myNewGroup.addElement(rect1);
           var myLine:Line = new Line();
           myLine.xFrom = 10; myLine.yFrom = 50;
           myLine.xTo=140; myLine.yTo=150;
           var mySolidColorStroke:SolidColorStroke = new SolidColorStroke();
           mySolidColorStroke.color = 0x99FF33;
           mySolidColorStroke.weight = 3;
           myLine.stroke = mySolidColorStroke;
           myNewGroup.addElement(myLine);
           myLine = new Line();
           myLine.xFrom = 140;
           myLine.yFrom = 50;
           myLine.xTo=10;
           myLine.yTo=150;
           myLine.stroke = mySolidColorStroke;
           myNewGroup.addElement(myLine);
           myNewGroup.rotation = 10;
           graphicObject.addElement(myNewGroup);
       }

       public function removeElementToGraphic2(groupObject:Group):void
        {
            groupObject.removeElement(groupObject.getElementAt(0));
        }

    ]]>
    </mx:Script>

    <mx:Metadata>
    <![CDATA[
        [Mixin]
    ]]>
    </mx:Metadata>

    <testCases>
    <!-- Graphic methods -->
        <TestCase testID="Graphic_methods_addElement_empty" description="Verify that you can add an element to an empty Graphic" keywords="[addElement, Graphic]">
            <setup>
                <ResetComponent target="graphic_empty" className="spark.primitives.Graphic" waitTarget="graphic_empty" waitEvent="updateComplete" />
            </setup>
            <body>

               <RunCode code="addLine(application.graphic_empty, null)" waitTarget="graphic_empty" waitEvent="updateComplete" />
               <AssertPropertyValue value="1" propertyName="numElements" target="graphic_empty" />

            </body>
        </TestCase>
        <TestCase testID="Graphic_methods_addElementGroup_empty" description="Verify that you can add a Group to an empty Graphic" keywords="[Group, addElement, Graphic]">
            <setup>
                <ResetComponent target="graphic_empty" className="spark.primitives.Graphic" waitTarget="graphic_empty" waitEvent="updateComplete" />
            </setup>
            <body>
                <RunCode code="addGroupToGraphic(application.graphic_empty)" waitTarget="graphic_empty" waitEvent="updateComplete" />
                <AssertPropertyValue value="1" propertyName="numElements" target="graphic_empty" />
                <AssertPixelValue value="0x4D4D4D" x="456" y="528" target="" />
            </body>
        </TestCase>
        <TestCase testID="Graphic_methods_addElement_Text" description="Verify that you can add a RichText to a Graphic" keywords="[Group, addElement, Graphic]">
            <setup>
                <ResetComponent target="graphic1" className="comps.GroupGraphicBasic" waitTarget="graphic1" waitEvent="updateComplete" />
            </setup>
            <body>
                <RunCode code="addTextGraphic(application.graphic1.getChildAt(0), null)" waitTarget="graphic1.getChildAt(0)" waitEvent="updateComplete" />
                <AssertPropertyValue value="3" propertyName="numElements" target="graphic1.getChildAt(0)" />
            </body>
        </TestCase>
        <TestCase testID="Graphic_methods_addElement_Ellipse" description="Verify that you can add Group to an empty Graphic" keywords="[Group, addElement, Graphic]">
                <setup>
                    <ResetComponent target="graphic1" className="comps.GroupGraphicBasic" waitTarget="graphic1" waitEvent="updateComplete" />
                </setup>
                <body>
                    <RunCode code="addEllipse(application.graphic1.getChildAt(0), null)" waitTarget="graphic1.getChildAt(0)" waitEvent="updateComplete" />
                    <AssertPropertyValue value="3" propertyName="numElements" target="graphic1.getChildAt(0)" />
                    <AssertPixelValue value="0x9D2375" x="112" y="100" target="graphic1.getChildAt(0)" />
                </body>
        </TestCase>
        <TestCase testID="Graphic_methods_addElement_Line" description="Verify that you can add Group to an empty Graphic" keywords="[Group, addElement, Graphic]">
                <setup>
                    <ResetComponent target="graphic1" className="comps.GroupGraphicBasic" waitTarget="graphic1" waitEvent="updateComplete" />
                </setup>
                <body>
                    <RunCode code="addLine(application.graphic1.getChildAt(0), null)" waitTarget="graphic1.getChildAt(0)" waitEvent="updateComplete" />
                    <AssertPropertyValue value="3" propertyName="numElements" target="graphic1.getChildAt(0)" />
                    <AssertPixelValue value="0xBF002F" x="10" y="8" target="graphic1.getChildAt(0)" />
                </body>
        </TestCase>
        <TestCase testID="Graphic_methods_addElement_Path" description="Verify that you can add Group to an empty Graphic" keywords="[Group, addElement, Graphic]">
                <setup>
                    <ResetComponent target="graphic1" className="comps.GroupGraphicBasic" waitTarget="graphic1" waitEvent="updateComplete" />
                </setup>
                <body>
                    <RunCode code="addPath(application.graphic1.getChildAt(0), null)" waitTarget="graphic1.getChildAt(0)" waitEvent="updateComplete" />
                    <AssertPropertyValue value="3" propertyName="numElements" target="graphic1.getChildAt(0)" />
                    <AssertPixelValue value="0xFFFFFF" x="15" y="35" target="graphic1.getChildAt(0)" />
                </body>
        </TestCase>
        <TestCase testID="Graphic_methods_addElement_Rect" description="Verify that you can add Group to an empty Graphic" keywords="[Group, addElement, Graphic]">
                <setup>
                    <ResetComponent target="graphic1" className="comps.GroupGraphicBasic" waitTarget="graphic1" waitEvent="updateComplete" />
                </setup>
                <body>
                    <RunCode code="addRect(application.graphic1.getChildAt(0), null)" waitTarget="graphic1.getChildAt(0)" waitEvent="updateComplete" />
                    <AssertPropertyValue value="3" propertyName="numElements" target="graphic1.getChildAt(0)" />
                    <AssertPixelValue value="0x7947E0" x="110" y="77" target="graphic1.getChildAt(0)" />
                </body>
        </TestCase>
        <TestCase testID="Graphic_methods_addElement_BitmapGraphic" description="Verify that you can add Group to an empty Graphic" keywords="[Group, addElement, Graphic]">
                <setup>
                    <ResetComponent target="graphic1" className="comps.GroupGraphicBasic" waitTarget="graphic1" waitEvent="updateComplete" />
                </setup>
                <body>
                    <RunCode code="addBitmapGraphic(application.graphic1.getChildAt(0), null)" waitTarget="graphic1.getChildAt(0)" waitEvent="updateComplete" />
                    <AssertPropertyValue value="3" propertyName="numElements" target="graphic1.getChildAt(0)" />
                    <AssertPixelValue value="0xEB1D24" x="80" y="74" target="graphic1.getChildAt(0)" />
                </body>
        </TestCase>
        <TestCase testID="Graphic_methods_addElement_MultipleAdds" description="Verify that you can add Group to an empty Graphic" keywords="[Group, addElement, Graphic]">
                <setup>
                    <ResetComponent target="graphic1" className="comps.GroupGraphicBasic" waitTarget="graphic1" waitEvent="updateComplete" />
                </setup>
                <body>
                    <RunCode code="addBitmapGraphic(application.graphic1.getChildAt(0), null)" waitTarget="graphic1.getChildAt(0)" waitEvent="updateComplete" />
                    <RunCode code="addEllipse(application.graphic1.getChildAt(0), null)" waitTarget="graphic1.getChildAt(0)" waitEvent="updateComplete" />
                    <RunCode code="addPath(application.graphic1.getChildAt(0), null)" waitTarget="graphic1.getChildAt(0)" waitEvent="updateComplete" />
                    <AssertPropertyValue value="5" propertyName="numElements" target="graphic1.getChildAt(0)" />
                    <AssertPixelValue value="0xD52B51" x="67" y="69" target="graphic1.getChildAt(0)" />
                </body>
        </TestCase>
        <TestCase testID="Graphic_methods_addElement_MultipleAddsGroup" description="Verify that you can add Group to an empty Graphic" keywords="[Group, addElement, Graphic]">
                <setup>
                    <ResetComponent target="graphic1" className="comps.GroupGraphicBasic" waitTarget="graphic1" waitEvent="updateComplete" />
                </setup>
                <body>
                    <RunCode code="addBitmapGraphic(application.graphic1.getChildAt(0), null)" waitTarget="graphic1.getChildAt(0)" waitEvent="updateComplete" />
                    <RunCode code="addLine(application.graphic1.getChildAt(0), null)" waitTarget="graphic1.getChildAt(0)" waitEvent="updateComplete" />
                    <RunCode code="addPath(application.graphic1.getChildAt(0), null)" waitTarget="graphic1.getChildAt(0)" waitEvent="updateComplete" />
                    <RunCode code="addGroupToGraphic(application.graphic1.getChildAt(0))" waitTarget="graphic1.getChildAt(0)" waitEvent="updateComplete" />
                    <AssertPropertyValue value="6" propertyName="numElements" target="graphic1.getChildAt(0)" />
                    <AssertPixelValue value="0x40048" x="69" y="99" target="graphic1.getChildAt(0)" />
                    <AssertPixelValue value="0x150Fe3" x="14" y="20" target="graphic1.getChildAt(0)" />
                </body>
        </TestCase>
        <TestCase testID="Graphic_methods_removeElement_basic" description="Verify that you can add Group to an empty Graphic" keywords="[Group, removeElement, Graphic]">
                <setup>
                    <ResetComponent target="graphic1" className="comps.GroupGraphicBasic" waitTarget="graphic1" waitEvent="updateComplete" />
                </setup>
                <body>
                    <RunCode code="removeElementToGraphic(application.graphic1.getChildAt(0), 0)" waitTarget="graphic1.getChildAt(0)" waitEvent="updateComplete" />
                    <AssertPropertyValue value="1" propertyName="numElements" target="graphic1.getChildAt(0)" />
                    <AssertPixelValue value="0xF8F8A6" x="49" y="121" target="graphic1.getChildAt(0)" />
                </body>
        </TestCase>
    </testCases>
</UnitTester>
