<?xml version="1.0" encoding="utf-8" ?>
<s:Application
    xmlns:fx="http://ns.adobe.com/mxml/2009"
    xmlns:mx="library://ns.adobe.com/flex/mx"
    xmlns:s="library://ns.adobe.com/flex/spark"
    xmlns:assets="*"
    height="500" width="500"
    backgroundColor="0xFFFFFF">

	<fx:Style>
		@namespace s "library://ns.adobe.com/flex/spark";
		@namespace mx "library://ns.adobe.com/flex/mx";
		@font-face{
		src: url("../../../../../Assets/Fonts/PT_Serif/PT_Serif-Web-Regular.ttf");
		fontFamily: myArial;
		embedAsCFF: true;
		}


		@font-face{
		src: url("../../../../../Assets/Fonts/PT_Serif/PT_Serif-Web-Bold.ttf");
		fontWeight: bold;
		fontFamily: myArial;
		embedAsCFF: true;
		}

		@font-face{
		src: url("../../../../../Assets/Fonts/PT_Serif/PT_Serif-Web-Italic.ttf");
		fontStyle: italic;
		fontFamily: myArial;
		embedAsCFF: true;

		}

		s|Button{
		fontAntiAliasType: "normal";
		fontFamily: myArial;
		fontSize: 12;
		fontLookup: "embeddedCFF";
		}
	</fx:Style>

	<s:states>
		<mx:State name="s1"/>
		<!-- rotationX states -->
		<mx:State name="s2"/>
	</s:states>

	<s:transitions>
		<mx:Transition id="s1s2" fromState="s1" toState="s2">
			<mx:Parallel id="p_s1s2_valuesIn" duration="1000">
				<s:Move target="{cube}" xBy="50"/>
			</mx:Parallel>
		</mx:Transition>
	</s:transitions>

	<s:Button label="{this.currentState}" click="(this.currentState == 's2')?(this.currentState = 's1'):(this.currentState = 's2')"/>

	<s:Button id="cube" x="50" y="50" width="50" height="50" rotationX.s1="0" rotationX.s2="70"/>

</s:Application>
