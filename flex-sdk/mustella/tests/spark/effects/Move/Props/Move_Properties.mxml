<?xml version="1.0" encoding="utf-8"?>
<!--

  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.

-->
<UnitTester 
    testDir="spark/effects/Move/Props/"  
    xmlns:mx="http://www.adobe.com/2006/mxml" 
    xmlns="*" 
    testSWF="../SWFs/Move_Main.mxml">

    <!-- this set of lines form a template that must be in each unit test -->
    <mx:Script>
        <![CDATA[
        public static function init(o:DisplayObject):void{}
        ]]>
    </mx:Script>

    <mx:Metadata>
        <![CDATA[
        [Mixin]
        ]]>
    </mx:Metadata>
    <!-- end of set of lines that must be in each unit test -->

    <mx:Script>
        <![CDATA[
        import spark.effects.Move;
        import Controls.*;
        import Containers.*;
        ]]>
    </mx:Script>
    
    <!-- 
    Property Test Plan
    ############################################
    
    xBy
    xFrom
    xTo
    
    yBy
    yFrom
    yTo
    
    ############################################
    -->

    <testCases>

        <TestCase testID="Move_xByZero"  keywords="[Move, Properties, xBy]" description="Try to set the xBy property to zero.">
            <setup>
                <ResetComponent target="testVBox" className="Containers.TrixVBox" waitTarget="testVBox" waitEvent="updateComplete"/>
                <ResetComponent target="testEffect" className="spark.effects.Move"/>
                <RunCode code="application.testVBox.x = 150"/>
                <RunCode code="application.testVBox.y = 150"/>
            </setup>
            <body>
                <SetProperty target="testEffect" propertyName="xBy" value="0"/>
                <AssertPropertyValue target="testEffect" propertyName="xBy" value="0"/>
            </body>
        </TestCase>

        <TestCase testID="Move_xByNegative"  keywords="[Move, Properties, xBy]" description="Try to set the xBy property to a negative value.">
            <setup>
                <ResetComponent target="testVBox" className="Containers.TrixVBox" waitTarget="testVBox" waitEvent="updateComplete"/>
                <ResetComponent target="testEffect" className="spark.effects.Move"/>
                <RunCode code="application.testVBox.x = 150"/>
                <RunCode code="application.testVBox.y = 150"/>
            </setup>
            <body>
                <SetProperty target="testEffect" propertyName="xBy" value="-20"/>
                <AssertPropertyValue target="testEffect" propertyName="xBy" value="-20"/>
            </body>
        </TestCase>

        <TestCase testID="Move_xByNormal"  keywords="[Move, Properties, xBy]" description="Try to set the xBy property to a normal value.">
            <setup>
                <ResetComponent target="testVBox" className="Containers.TrixVBox" waitTarget="testVBox" waitEvent="updateComplete"/>
                <ResetComponent target="testEffect" className="spark.effects.Move"/>
                <RunCode code="application.testVBox.x = 150"/>
                <RunCode code="application.testVBox.y = 150"/>
            </setup>
            <body>
                <SetProperty target="testEffect" propertyName="xBy" value="20"/>
                <AssertPropertyValue target="testEffect" propertyName="xBy" value="20"/>
            </body>
        </TestCase>

        <TestCase testID="Move_xByOffStage"  keywords="[Move, Properties, xBy]" description="Try to set the xBy property to a large value.">
            <setup>
                <ResetComponent target="testVBox" className="Containers.TrixVBox" waitTarget="testVBox" waitEvent="updateComplete"/>
                <ResetComponent target="testEffect" className="spark.effects.Move"/>
                <RunCode code="application.testVBox.x = 150"/>
                <RunCode code="application.testVBox.y = 150"/>
            </setup>
            <body>
                <SetProperty target="testEffect" propertyName="xBy" value="2000"/>
                <AssertPropertyValue target="testEffect" propertyName="xBy" value="2000"/>
            </body>
        </TestCase>

        <TestCase testID="Move_xFromZero"  keywords="[Move, Properties, xFrom]" description="Try to set the xFrom property to zero.">
            <setup>
                <ResetComponent target="testVBox" className="Containers.TrixVBox" waitTarget="testVBox" waitEvent="updateComplete"/>
                <ResetComponent target="testEffect" className="spark.effects.Move"/>
                <RunCode code="application.testVBox.x = 150"/>
                <RunCode code="application.testVBox.y = 150"/>
            </setup>
            <body>
                <SetProperty target="testEffect" propertyName="xFrom" value="0"/>
                <AssertPropertyValue target="testEffect" propertyName="xFrom" value="0"/>
            </body>
        </TestCase>

        <TestCase testID="Move_xFromNegative"  keywords="[Move, Properties, xFrom]" description="Try to set the xFrom property to a negative value.">
            <setup>
                <ResetComponent target="testVBox" className="Containers.TrixVBox" waitTarget="testVBox" waitEvent="updateComplete"/>
                <ResetComponent target="testEffect" className="spark.effects.Move"/>
                <RunCode code="application.testVBox.x = 150"/>
                <RunCode code="application.testVBox.y = 150"/>
            </setup>
            <body>
                <SetProperty target="testEffect" propertyName="xFrom" value="-20"/>
                <AssertPropertyValue target="testEffect" propertyName="xFrom" value="-20"/>
            </body>
        </TestCase>

        <TestCase testID="Move_xFromNormal"  keywords="[Move, Properties, xFrom]" description="Try to set the xFrom property to a normal value.">
            <setup>
                <ResetComponent target="testVBox" className="Containers.TrixVBox" waitTarget="testVBox" waitEvent="updateComplete"/>
                <ResetComponent target="testEffect" className="spark.effects.Move"/>
                <RunCode code="application.testVBox.x = 150"/>
                <RunCode code="application.testVBox.y = 150"/>
            </setup>
            <body>
                <SetProperty target="testEffect" propertyName="xFrom" value="20"/>
                <AssertPropertyValue target="testEffect" propertyName="xFrom" value="20"/>
            </body>
        </TestCase>

        <TestCase testID="Move_xFromOffStage"  keywords="[Move, Properties, xFrom]" description="Try to set the xFrom property to a large value.">
            <setup>
                <ResetComponent target="testVBox" className="Containers.TrixVBox" waitTarget="testVBox" waitEvent="updateComplete"/>
                <ResetComponent target="testEffect" className="spark.effects.Move"/>
                <RunCode code="application.testVBox.x = 150"/>
                <RunCode code="application.testVBox.y = 150"/>
            </setup>
            <body>
                <SetProperty target="testEffect" propertyName="xFrom" value="2000"/>
                <AssertPropertyValue target="testEffect" propertyName="xFrom" value="2000"/>
            </body>
        </TestCase>

        <TestCase testID="Move_xToZero"  keywords="[Move, Properties, xTo]" description="Try to set the xTo property to zero.">
            <setup>
                <ResetComponent target="testVBox" className="Containers.TrixVBox" waitTarget="testVBox" waitEvent="updateComplete"/>
                <ResetComponent target="testEffect" className="spark.effects.Move"/>
                <RunCode code="application.testVBox.x = 150"/>
                <RunCode code="application.testVBox.y = 150"/>
            </setup>
            <body>
                <SetProperty target="testEffect" propertyName="xTo" value="0"/>
                <AssertPropertyValue target="testEffect" propertyName="xTo" value="0"/>
            </body>
        </TestCase>

        <TestCase testID="Move_xToNegative"  keywords="[Move, Properties, xTo]" description="Try to set the xTo property to a negative value.">
            <setup>
                <ResetComponent target="testVBox" className="Containers.TrixVBox" waitTarget="testVBox" waitEvent="updateComplete"/>
                <ResetComponent target="testEffect" className="spark.effects.Move"/>
                <RunCode code="application.testVBox.x = 150"/>
                <RunCode code="application.testVBox.y = 150"/>
            </setup>
            <body>
                <SetProperty target="testEffect" propertyName="xTo" value="-20"/>
                <AssertPropertyValue target="testEffect" propertyName="xTo" value="-20"/>
            </body>
        </TestCase>

        <TestCase testID="Move_xToNormal"  keywords="[Move, Properties, xTo]" description="Try to set the xTo property to a normal value.">
            <setup>
                <ResetComponent target="testVBox" className="Containers.TrixVBox" waitTarget="testVBox" waitEvent="updateComplete"/>
                <ResetComponent target="testEffect" className="spark.effects.Move"/>
                <RunCode code="application.testVBox.x = 150"/>
                <RunCode code="application.testVBox.y = 150"/>
            </setup>
            <body>
                <SetProperty target="testEffect" propertyName="xTo" value="20"/>
                <AssertPropertyValue target="testEffect" propertyName="xTo" value="20"/>
            </body>
        </TestCase>

        <TestCase testID="Move_xToOffStage"  keywords="[Move, Properties, xTo]" description="Try to set the xTo property to a large value.">
            <setup>
                <ResetComponent target="testVBox" className="Containers.TrixVBox" waitTarget="testVBox" waitEvent="updateComplete"/>
                <ResetComponent target="testEffect" className="spark.effects.Move"/>
                <RunCode code="application.testVBox.x = 150"/>
                <RunCode code="application.testVBox.y = 150"/>
            </setup>
            <body>
                <SetProperty target="testEffect" propertyName="xTo" value="2000"/>
                <AssertPropertyValue target="testEffect" propertyName="xTo" value="2000"/>
            </body>
        </TestCase>

        <TestCase testID="Move_yByZero"  keywords="[Move, Properties, yBy]" description="Try to set the yBy property to zero.">
            <setup>
                <ResetComponent target="testVBox" className="Containers.TrixVBox" waitTarget="testVBox" waitEvent="updateComplete"/>
                <ResetComponent target="testEffect" className="spark.effects.Move"/>
                <RunCode code="application.testVBox.x = 150"/>
                <RunCode code="application.testVBox.y = 150"/>
            </setup>
            <body>
                <SetProperty target="testEffect" propertyName="yBy" value="0"/>
                <AssertPropertyValue target="testEffect" propertyName="yBy" value="0"/>
            </body>
        </TestCase>

        <TestCase testID="Move_yByNegative"  keywords="[Move, Properties, yBy]" description="Try to set the yBy property to a negative value.">
            <setup>
                <ResetComponent target="testVBox" className="Containers.TrixVBox" waitTarget="testVBox" waitEvent="updateComplete"/>
                <ResetComponent target="testEffect" className="spark.effects.Move"/>
                <RunCode code="application.testVBox.x = 150"/>
                <RunCode code="application.testVBox.y = 150"/>
            </setup>
            <body>
                <SetProperty target="testEffect" propertyName="yBy" value="-20"/>
                <AssertPropertyValue target="testEffect" propertyName="yBy" value="-20"/>
            </body>
        </TestCase>

        <TestCase testID="Move_yByNormal"  keywords="[Move, Properties, yBy]" description="Try to set the yBy property to a normal value.">
            <setup>
                <ResetComponent target="testVBox" className="Containers.TrixVBox" waitTarget="testVBox" waitEvent="updateComplete"/>
                <ResetComponent target="testEffect" className="spark.effects.Move"/>
                <RunCode code="application.testVBox.x = 150"/>
                <RunCode code="application.testVBox.y = 150"/>
            </setup>
            <body>
                <SetProperty target="testEffect" propertyName="yBy" value="20"/>
                <AssertPropertyValue target="testEffect" propertyName="yBy" value="20"/>
            </body>
        </TestCase>

        <TestCase testID="Move_yByOffStage"  keywords="[Move, Properties, yBy]" description="Try to set the yBy property to a large value.">
            <setup>
                <ResetComponent target="testVBox" className="Containers.TrixVBox" waitTarget="testVBox" waitEvent="updateComplete"/>
                <ResetComponent target="testEffect" className="spark.effects.Move"/>
                <RunCode code="application.testVBox.x = 150"/>
                <RunCode code="application.testVBox.y = 150"/>
            </setup>
            <body>
                <SetProperty target="testEffect" propertyName="yBy" value="2000"/>
                <AssertPropertyValue target="testEffect" propertyName="yBy" value="2000"/>
            </body>
        </TestCase>

        <TestCase testID="Move_yFromZero"  keywords="[Move, Properties, yFrom]" description="Try to set the yFrom property to zero.">
            <setup>
                <ResetComponent target="testVBox" className="Containers.TrixVBox" waitTarget="testVBox" waitEvent="updateComplete"/>
                <ResetComponent target="testEffect" className="spark.effects.Move"/>
                <RunCode code="application.testVBox.x = 150"/>
                <RunCode code="application.testVBox.y = 150"/>
            </setup>
            <body>
                <SetProperty target="testEffect" propertyName="yFrom" value="0"/>
                <AssertPropertyValue target="testEffect" propertyName="yFrom" value="0"/>
            </body>
        </TestCase>

        <TestCase testID="Move_yFromNegative"  keywords="[Move, Properties, yFrom]" description="Try to set the yFrom property to a negative value.">
            <setup>
                <ResetComponent target="testVBox" className="Containers.TrixVBox" waitTarget="testVBox" waitEvent="updateComplete"/>
                <ResetComponent target="testEffect" className="spark.effects.Move"/>
                <RunCode code="application.testVBox.x = 150"/>
                <RunCode code="application.testVBox.y = 150"/>
            </setup>
            <body>
                <SetProperty target="testEffect" propertyName="yFrom" value="-20"/>
                <AssertPropertyValue target="testEffect" propertyName="yFrom" value="-20"/>
            </body>
        </TestCase>

        <TestCase testID="Move_yFromNormal"  keywords="[Move, Properties, yFrom]" description="Try to set the yFrom property to a normal value.">
            <setup>
                <ResetComponent target="testVBox" className="Containers.TrixVBox" waitTarget="testVBox" waitEvent="updateComplete"/>
                <ResetComponent target="testEffect" className="spark.effects.Move"/>
                <RunCode code="application.testVBox.x = 150"/>
                <RunCode code="application.testVBox.y = 150"/>
            </setup>
            <body>
                <SetProperty target="testEffect" propertyName="yFrom" value="20"/>
                <AssertPropertyValue target="testEffect" propertyName="yFrom" value="20"/>
            </body>
        </TestCase>

        <TestCase testID="Move_yFromOffStage"  keywords="[Move, Properties, yFrom]" description="Try to set the yFrom property to a large value.">
            <setup>
                <ResetComponent target="testVBox" className="Containers.TrixVBox" waitTarget="testVBox" waitEvent="updateComplete"/>
                <ResetComponent target="testEffect" className="spark.effects.Move"/>
                <RunCode code="application.testVBox.x = 150"/>
                <RunCode code="application.testVBox.y = 150"/>
            </setup>
            <body>
                <SetProperty target="testEffect" propertyName="yFrom" value="2000"/>
                <AssertPropertyValue target="testEffect" propertyName="yFrom" value="2000"/>
            </body>
        </TestCase>

        <TestCase testID="Move_yToZero"  keywords="[Move, Properties, yTo]" description="Try to set the yTo property to zero.">
            <setup>
                <ResetComponent target="testVBox" className="Containers.TrixVBox" waitTarget="testVBox" waitEvent="updateComplete"/>
                <ResetComponent target="testEffect" className="spark.effects.Move"/>
                <RunCode code="application.testVBox.x = 150"/>
                <RunCode code="application.testVBox.y = 150"/>
            </setup>
            <body>
                <SetProperty target="testEffect" propertyName="yTo" value="0"/>
                <AssertPropertyValue target="testEffect" propertyName="yTo" value="0"/>
            </body>
        </TestCase>

        <TestCase testID="Move_yToNegative"  keywords="[Move, Properties, yTo]" description="Try to set the yTo property to a negative value.">
            <setup>
                <ResetComponent target="testVBox" className="Containers.TrixVBox" waitTarget="testVBox" waitEvent="updateComplete"/>
                <ResetComponent target="testEffect" className="spark.effects.Move"/>
                <RunCode code="application.testVBox.x = 150"/>
                <RunCode code="application.testVBox.y = 150"/>
            </setup>
            <body>
                <SetProperty target="testEffect" propertyName="yTo" value="-20"/>
                <AssertPropertyValue target="testEffect" propertyName="yTo" value="-20"/>
            </body>
        </TestCase>

        <TestCase testID="Move_yToNormal"  keywords="[Move, Properties, yTo]" description="Try to set the yTo property to a normal value.">
            <setup>
                <ResetComponent target="testVBox" className="Containers.TrixVBox" waitTarget="testVBox" waitEvent="updateComplete"/>
                <ResetComponent target="testEffect" className="spark.effects.Move"/>
                <RunCode code="application.testVBox.x = 150"/>
                <RunCode code="application.testVBox.y = 150"/>
            </setup>
            <body>
                <SetProperty target="testEffect" propertyName="yTo" value="20"/>
                <AssertPropertyValue target="testEffect" propertyName="yTo" value="20"/>
            </body>
        </TestCase>

        <TestCase testID="Move_yToOffStage"  keywords="[Move, Properties, yTo]" description="Try to set the yTo property to a large value.">
            <setup>
                <ResetComponent target="testVBox" className="Containers.TrixVBox" waitTarget="testVBox" waitEvent="updateComplete"/>
                <ResetComponent target="testEffect" className="spark.effects.Move"/>
                <RunCode code="application.testVBox.x = 150"/>
                <RunCode code="application.testVBox.y = 150"/>
            </setup>
            <body>
                <SetProperty target="testEffect" propertyName="yTo" value="2000"/>
                <AssertPropertyValue target="testEffect" propertyName="yTo" value="2000"/>
            </body>
        </TestCase>

        <TestCase testID="Move_RelevantStyles"  keywords="[Move, properties, RelevantStyles]" description="Test the return values from RelevantStyles.">
            <body>
                <AssertPropertyValue target="testEffect" propertyName="relevantStyles" value="left,right,top,bottom,horizontalCenter,verticalCenter,baseline" />
            </body>
        </TestCase>

    </testCases>

</UnitTester>
