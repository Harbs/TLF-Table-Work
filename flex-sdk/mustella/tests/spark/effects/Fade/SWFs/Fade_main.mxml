<?xml version="1.0" encoding="utf-8"?>
<!--

  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.

-->
<s:Application
	xmlns:fx="http://ns.adobe.com/mxml/2009" 
    xmlns:mx="library://ns.adobe.com/flex/mx" 
    xmlns:s="library://ns.adobe.com/flex/spark"
	xmlns:assets="assets.*"
	width="1200" height="600" 
    backgroundColor="0xFFFFFF"
	creationComplete="Reset()">

	<fx:Style>
		@namespace s "library://ns.adobe.com/flex/spark";
		@namespace mx "library://ns.adobe.com/flex/mx";


		@font-face
		{
		src: url("../../../../../Assets/Fonts/Open_Sans/OpenSans-Regular.ttf");
		fontFamily: vera1;
		embedAsCFF: true;
		}
		
		@font-face
		{
		src: url("../../../../../Assets/Fonts/Open_Sans/OpenSans-Bold.ttf");
		fontFamily: vera1;
		fontWeight: bold;
		embedAsCFF: false;
		}

		
		@font-face
		{
		src: url("../../../../../Assets/Fonts/Open_Sans/OpenSans-Regular.ttf");
		fontFamily: vera1Halo;
		embedAsCFF: false;
		}		
		
		global
		{
		fontFamily: vera1Halo;
		color: blue;
		}
		

		mx|HBox
		{
			fontFamily: vera1Halo;
			color: blue;
		}
		
		s|SkinnableComponent
		{
			fontFamily: vera1;
			color: black;
			fontLookup: "embeddedCFF";
		}
		
		s|Label
		{
		fontFamily: vera1;
		color: black;
		fontLookup: "embeddedCFF";
		}
	</fx:Style>
	

	<fx:Script>
        <![CDATA[
		import assets.ObjectTabs;
		import mx.effects.Effect;
		import mx.events.EffectEvent;
		import mx.events.TweenEvent;
        import mx.containers.Canvas;
        import mx.containers.TabNavigator;
        import flash.events.TimerEvent;
        import mx.controls.Alert;
        import mx.events.StateChangeEvent;
		
		//Privies
		public var currentTabNavigator:TabNavigator;
        public var currentAccordion:Accordion;
        public var currentCanvas:Canvas;
		public var currentEffect:Effect;
		public var timer:Timer = new Timer(2000, 1);
            

		private function ResetEffectAndGauges(effect:Effect):void
		{
			if(effect.hasEventListener(EffectEvent.EFFECT_START))
				effect.removeEventListener(EffectEvent.EFFECT_START, this.HandleEffectStart);

			if(effect.hasEventListener(TweenEvent.TWEEN_START))
				effect.removeEventListener(TweenEvent.TWEEN_START, this.HandleTweenStart);

			if(effect.hasEventListener(TweenEvent.TWEEN_UPDATE))
				effect.removeEventListener(TweenEvent.TWEEN_UPDATE, this.HandleTweenUpdate);

			if(effect.hasEventListener(TweenEvent.TWEEN_END))
				effect.removeEventListener(TweenEvent.TWEEN_END, this.HandleTweenEnd);

			if(effect.hasEventListener(EffectEvent.EFFECT_END))
				effect.removeEventListener(EffectEvent.EFFECT_END, this.HandleEffectEnd);


			//Reattach listeners
			effect.addEventListener(EffectEvent.EFFECT_START, HandleEffectStart);

			effect.addEventListener(TweenEvent.TWEEN_START, HandleTweenStart);
			effect.addEventListener(TweenEvent.TWEEN_UPDATE, HandleTweenUpdate);
			effect.addEventListener(TweenEvent.TWEEN_END, HandleTweenEnd);
			
			effect.addEventListener(EffectEvent.EFFECT_END, HandleEffectEnd);

			//Reset labels
			this.ResetEventLabels();			
		}
		
		private function HandleEffectStart(event:EffectEvent):void
		{
			this.lbl_EffectStart.setStyle("color", "0x00FF00");
		}		

		private function HandleTweenStart(event:TweenEvent):void
		{
			this.lbl_TweenStart.setStyle("color", "0x00FF00");
		}		

		private function HandleTweenUpdate(event:TweenEvent):void
		{
			this.lbl_TweenUpdate.setStyle("color", "0x00FF00");
		}		

		private function HandleTweenEnd(event:TweenEvent):void
		{
			this.lbl_TweenEnd.setStyle("color", "0x00FF00");
		}		

		private function HandleEffectEnd(event:EffectEvent):void
		{
			this.lbl_EffectEnd.setStyle("color", "0x00FF00");
		}		
		
		//Init and reset
		public function Reset():void
		{
			//Remove the object tab
			if(this.mainBox.getChildren().length == 3)
			{
				this.mainBox.removeChildAt(2);
			}
			
		    this.currentTabNavigator = new ObjectTabs();
			this.currentTabNavigator.addEventListener("updateComplete", this.HandleTabUpdate);

			//Reset labels
			this.ResetEventLabels();	
						
			//Readd a new one
			this.mainBox.addChildAt(this.currentTabNavigator, 2); 
		}
		
		private function HandleTabUpdate(event:Event):void
		{
			this.dispatchEvent(new Event("tabUpdate", true));
		}
		
		private function ResetEventLabels():void
		{
			//Reset styles
			this.lbl_EffectStart.setStyle("color", "0x00000");
			this.lbl_TweenStart.setStyle("color", "0x00000");
			this.lbl_TweenUpdate.setStyle("color", "0x00000");
			this.lbl_TweenEnd.setStyle("color", "0x00000");
			this.lbl_AnimationStart.setStyle("color", "0x00000");
			this.lbl_AnimationUpdate.setStyle("color", "0x00000");
			this.lbl_AnimationRepeat.setStyle("color", "0x00000");
			this.lbl_AnimationEnd.setStyle("color", "0x00000");
			this.lbl_EffectEnd.setStyle("color", "0x00000");
		}
			
		public function SelectCanvas(controlName:String):void
		{
			if(this.currentTabNavigator)
			{
				var accordions:Array = this.currentTabNavigator.getChildren();
				
				for(var i:int = 0; i < accordions.length; i++)
				{
					var canvases:Array = (accordions[i] as Accordion).getChildren();
	
					for(var j:int = 0; j < canvases.length; j++)
					{
						if(canvases[j].label == controlName)
						{
                            this.currentTabNavigator.selectedIndex = i;
							accordions[i].selectedIndex = j;
                            this.currentAccordion = accordions[i];
                            this.currentCanvas = accordions[i].getChildAt(j) as Canvas;
						}
					}
				}
			}
            
            this.currentTabNavigator.dispatchEvent(new Event("selectEvent", true, false));
		}
		
		private function GetTarget():Object
		{
			if(this.currentTabNavigator)
			{
				var accord:Accordion = this.currentTabNavigator.getChildAt(this.currentTabNavigator.selectedIndex) as Accordion;
				var canvas:mx.containers.Canvas = accord.selectedChild as mx.containers.Canvas;
				var target:Object = canvas.getChildAt(0);		
	
				return(target);
			}
			
			return(null);
		}
		
		private function GetTargets():Array
		{
			if(this.currentTabNavigator)
			{
				var accord:Accordion = this.currentTabNavigator.getChildAt(this.currentTabNavigator.selectedIndex) as Accordion;
				var canvases:Array = accord.getChildren();
				var targets:Array = new Array();
				
				for(var i:int = 0; i < canvases.length; i++)
				{
					var canvas:mx.containers.Canvas = canvases[i];
					
					if(canvas)
					{
						var target:Object = canvas.getChildAt(0);
						
						if(target)
						{
							targets.push(target);
						}
					}
				}
	
				return(targets);
			}
			
			return(null);
		}
				
		public function PlayEffectTarget(effect:Effect, duration:int, startDelay:int, repeatCount:int, repeatDelay:int, playReversed:Boolean = false):void
		{
			effect.resume();
			effect.stop();
			
			this.currentEffect = effect;
			
			ResetEffectAndGauges(effect);
			
			effect.target = this.GetTarget();
			effect.duration = duration;
			effect.startDelay = startDelay;
			effect.repeatCount = repeatCount;
			effect.repeatDelay = repeatDelay;
			effect.play(null, playReversed);
		}

		public function PlayEffectTargets(effect:Effect, duration:int, startDelay:int, repeatCount:int, repeatDelay:int):void
		{
			effect.resume();
			effect.stop();
			
			this.currentEffect = effect;
			
			ResetEffectAndGauges(effect);
			
			effect.targets = this.GetTargets();
			effect.duration = duration;
			effect.startDelay = startDelay;
			effect.repeatCount = repeatCount;
			effect.repeatDelay = repeatDelay;
			effect.play();
		}

		public function SeekEffectTarget(effect:Effect, duration:int, startDelay:int, repeatCount:int, repeatDelay:int, seekTo:Number):void
		{
			effect.resume();
			effect.stop();
			
			this.currentEffect = effect; 
			
			effect.target = this.GetTarget();
			effect.duration = duration;
			effect.startDelay = startDelay;
			effect.repeatCount = repeatCount;
			effect.repeatDelay = repeatDelay;
			effect.play();
			
			effect.playheadTime = seekTo;
			effect.pause();
            timer.start();
		}
		
		public function SeekEffectTargets(effect:Effect, duration:int, startDelay:int, repeatCount:int, repeatDelay:int, seekTo:Number):void
		{
			effect.resume();
			effect.stop();
			
			this.currentEffect = effect; 
			
			effect.targets = this.GetTargets();
			effect.duration = duration;
			effect.startDelay = startDelay;
			effect.repeatCount = repeatCount;
			effect.repeatDelay = repeatDelay;
			effect.play();
			
			effect.playheadTime = seekTo;
			effect.pause();
            timer.start();
		}		
		
		public function SeekControl(control:String, effect:Effect, duration:int, startDelay:int, repeatCount:int, repeatDelay:int, seekTo:Number):void
		{
			this.SelectCanvas(control);
			this.SeekEffectTarget(effect, duration, startDelay, repeatCount, repeatDelay, seekTo);
		}

		public function SeekControls(control:String, effect:Effect, duration:int, startDelay:int, repeatCount:int, repeatDelay:int, seekTo:Number):void
		{
			this.SelectCanvas(control);
			this.SeekEffectTargets(effect, duration, startDelay, repeatCount, repeatDelay, seekTo);
		}

		public function PlayEffectControl(control:String, effect:Effect, duration:int, startDelay:int, repeatCount:int, repeatDelay:int, playReversed:Boolean = false):void
		{
			this.SelectCanvas(control);
			this.PlayEffectTarget(effect, duration, startDelay, repeatCount, repeatDelay, playReversed);
		}

		public function PlayEffectControls(control:String, effect:Effect, duration:int, startDelay:int, repeatCount:int, repeatDelay:int):void
		{
			this.SelectCanvas(control);
			this.PlayEffectTargets(effect, duration, startDelay, repeatCount, repeatDelay);
		}
		]]>
    </fx:Script>

    <fx:Declarations>
        <!-- Simple Fade effect -->
        <s:Fade id="eff_Fade" alphaFrom="1" alphaTo=".1"/>


        <!-- Simple parallels -->
        <mx:Parallel id="p_Fade">
            <s:Fade alphaFrom="1" alphaTo=".5"/>
        </mx:Parallel>

        <!-- Complex parallel with Thermo-Style Delays -->
        <mx:Parallel id="p_Fade_Thermo">
            <mx:Blur blurXFrom="0" blurXTo="5" startDelay="0" duration="500"/>
            <s:Fade alphaFrom="1" alphaTo=".5" startDelay="500" duration="500"/>
        </mx:Parallel>

        <mx:Parallel id="p_Fade_Thermo_Overlap">
            <s:Fade alphaFrom="1" alphaTo=".5" startDelay="0" duration="1000"/>
            <s:Rotate3D angleZFrom="0" angleZTo="180" startDelay="500" duration="1000"/>
        </mx:Parallel>

        <!-- Combo effect parallels to test order of importance-->
        <mx:Parallel id="p_FxRotate3D_Fade">
            <s:Rotate3D angleXFrom="0" angleXTo="180" angleYFrom="0" angleYTo="180" angleZFrom="0" angleZTo="180"/>
            <s:Fade alphaFrom="1" alphaTo=".5"/>
        </mx:Parallel>

        <mx:Parallel id="p_Fade_FxRotate3D">
            <s:Fade alphaFrom="1" alphaTo=".5"/>
            <s:Rotate3D angleXFrom="0" angleXTo="180" angleYFrom="0" angleYTo="180" angleZFrom="0" angleZTo="180"/>
        </mx:Parallel>

        <!-- Combo effect parallels with Fade -->
        <mx:Parallel id="p_Fade_Blur">
            <s:Fade alphaFrom="1" alphaTo=".5"/>
            <mx:Blur blurXFrom="0" blurXTo="5" blurYFrom="0" blurYTo="5"/>
        </mx:Parallel>
        <mx:Parallel id="p_Fade_Dissolve">
            <s:Fade alphaFrom="1" alphaTo=".5"/>
            <mx:Dissolve alphaFrom="1" alphaTo=".5"/>
        </mx:Parallel>
        <mx:Parallel id="p_Fade_Glow">
            <s:Fade alphaFrom="1" alphaTo=".5"/>
            <mx:Glow alphaFrom="0.3" alphaTo="1.0" blurXFrom="0" blurXTo="5" blurYFrom="0" blurYTo="5" color="0x0000FF"/>
        </mx:Parallel>
        <mx:Parallel id="p_Fade_Iris">
            <s:Fade alphaFrom="1" alphaTo=".5"/>
            <mx:Iris showTarget="true"/>
        </mx:Parallel>
        <mx:Parallel id="p_Fade_MaskEffect">
            <s:Fade alphaFrom="1" alphaTo=".5"/>
            <mx:MaskEffect scaleXFrom="0" scaleXTo="1" scaleYFrom="0" scaleYTo="1"/>
        </mx:Parallel>
        <mx:Parallel id="p_Fade_Move">
            <s:Fade alphaFrom="1" alphaTo=".5"/>
            <mx:Move xBy="100"/>
        </mx:Parallel>
        <mx:Parallel id="p_Fade_Resize">
            <s:Fade alphaFrom="1" alphaTo=".5"/>
            <mx:Resize widthBy="30" heightBy="30"/>
        </mx:Parallel>
        <mx:Parallel id="p_Fade_WipeDown">
            <s:Fade alphaFrom="1" alphaTo=".5"/>
            <mx:WipeDown/>
        </mx:Parallel>
        <mx:Parallel id="p_Fade_WipeLeft">
            <s:Fade alphaFrom="1" alphaTo=".5"/>
            <mx:WipeLeft/>
        </mx:Parallel>
        <mx:Parallel id="p_Fade_WipeRight">
            <s:Fade alphaFrom="1" alphaTo=".5"/>
            <mx:WipeRight/>
        </mx:Parallel>
        <mx:Parallel id="p_Fade_WipeUp">
            <s:Fade alphaFrom="1" alphaTo=".5"/>
            <mx:WipeUp/>
        </mx:Parallel>
        <mx:Parallel id="p_Fade_Zoom">
            <s:Fade alphaFrom="1" alphaTo=".5"/>
            <mx:Zoom zoomWidthFrom="0" zoomWidthTo="1" zoomHeightFrom="0" zoomHeightTo="1"/>
        </mx:Parallel>

        <mx:Parallel id="p_Fade_FxAnimate">
            <s:Fade alphaFrom="1" alphaTo=".5"/>
            <s:Animate>
                <s:motionPaths>
                    <s:SimpleMotionPath property="x" valueFrom="0" valueTo="40"/>
                    <s:SimpleMotionPath property="y" valueFrom="0" valueTo="40"/>
                </s:motionPaths>
            </s:Animate>
        </mx:Parallel>

        <mx:Parallel id="p_Fade_FxAnimate_AdjustConstraints">
            <s:Fade alphaFrom="1" alphaTo=".5"/>
            <s:Animate disableLayout="true">
                <s:motionPaths>
                    <s:SimpleMotionPath property="x" valueFrom="0" valueTo="40"/>
                    <s:SimpleMotionPath property="y" valueFrom="0" valueTo="40"/>
                </s:motionPaths>
            </s:Animate>
        </mx:Parallel>

        <mx:Parallel id="p_Fade_FxAnimateColor">
            <s:Fade alphaFrom="1" alphaTo=".5"/>
            <s:AnimateColor colorFrom="0x00000" colorTo="0x0000FF"/>
        </mx:Parallel>

        <mx:Parallel id="p_Fade_FxFade">
            <s:Fade alphaFrom="1" alphaTo=".5"/>
            <s:Fade alphaFrom="1" alphaTo=".3"/>
        </mx:Parallel>

        <mx:Parallel id="p_Fade_FxMove">
            <s:Fade alphaFrom="1" alphaTo=".5"/>
            <s:Move xBy="100"/>
        </mx:Parallel>

        <mx:Parallel id="p_Fade_FxResize">
            <s:Fade alphaFrom="1" alphaTo=".5"/>
            <s:Resize widthBy="30" heightBy="30"/>
        </mx:Parallel>

        <mx:Parallel id="p_Fade_SetAction">
            <s:Fade alphaFrom="1" alphaTo=".5"/>
            <s:SetAction property="x" value="200"/>
        </mx:Parallel>

        <!-- Simple sequences -->
        <mx:Sequence id="s_Fade">
            <s:Fade alphaFrom="1" alphaTo=".5"/>
        </mx:Sequence>

        <!-- Complex sequence with Thermo-Style Delays -->
        <mx:Sequence id="s_Fade_Thermo">
            <mx:Blur blurXFrom="0" blurXTo="5" startDelay="0" duration="500"/>
            <s:Fade alphaFrom="1" alphaTo=".5" startDelay="500" duration="500"/>
        </mx:Sequence>

        <mx:Sequence id="s_Fade_Thermo_Overlap">
            <s:Fade alphaFrom="1" alphaTo=".5" startDelay="0" duration="1000"/>
            <s:Rotate3D angleZFrom="0" angleZTo="180" startDelay="500" duration="1000"/>
        </mx:Sequence>

        <!-- Combo effect sequences to test order of importance-->
        <mx:Sequence id="s_FxRotate3D_Fade">
            <s:Rotate3D angleXFrom="0" angleXTo="180" angleYFrom="0" angleYTo="180" angleZFrom="0" angleZTo="180"/>
            <s:Fade alphaFrom="1" alphaTo=".5"/>
        </mx:Sequence>

        <mx:Sequence id="s_Fade_FxRotate3D">
            <s:Fade alphaFrom="1" alphaTo=".5"/>
            <s:Rotate3D angleXFrom="0" angleXTo="180" angleYFrom="0" angleYTo="180" angleZFrom="0" angleZTo="180"/>
        </mx:Sequence>

        <!-- Combo effect sequences with Fade -->
        <mx:Parallel id="s_Fade_Blur">
            <s:Fade alphaFrom="1" alphaTo=".5"/>
            <mx:Blur blurXFrom="0" blurXTo="5" blurYFrom="0" blurYTo="5"/>
        </mx:Parallel>
        <mx:Parallel id="s_Fade_Dissolve">
            <s:Fade alphaFrom="1" alphaTo=".5"/>
            <mx:Dissolve alphaFrom="1" alphaTo=".5"/>
        </mx:Parallel>
        <mx:Sequence id="s_Fade_Glow">
            <s:Fade alphaFrom="1" alphaTo=".5"/>
            <mx:Glow alphaFrom="0.3" alphaTo="1.0" blurXFrom="0" blurXTo="5" blurYFrom="0" blurYTo="5" color="0x0000FF"/>
        </mx:Sequence>
        <mx:Sequence id="s_Fade_Iris">
            <s:Fade alphaFrom="1" alphaTo=".5"/>
            <mx:Iris showTarget="true"/>
        </mx:Sequence>
        <mx:Sequence id="s_Fade_MaskEffect">
            <s:Fade alphaFrom="1" alphaTo=".5"/>
            <mx:MaskEffect scaleXFrom="0" scaleXTo="1" scaleYFrom="0" scaleYTo="1"/>
        </mx:Sequence>
        <mx:Sequence id="s_Fade_Move">
            <s:Fade alphaFrom="1" alphaTo=".5"/>
            <mx:Move xBy="100"/>
        </mx:Sequence>
        <mx:Sequence id="s_Fade_Resize">
            <s:Fade alphaFrom="1" alphaTo=".5"/>
            <mx:Resize widthBy="30" heightBy="30"/>
        </mx:Sequence>
        <mx:Sequence id="s_Fade_WipeDown">
            <s:Fade alphaFrom="1" alphaTo=".5"/>
            <mx:WipeDown/>
        </mx:Sequence>
        <mx:Sequence id="s_Fade_WipeLeft">
            <s:Fade alphaFrom="1" alphaTo=".5"/>
            <mx:WipeLeft/>
        </mx:Sequence>
        <mx:Sequence id="s_Fade_WipeRight">
            <s:Fade alphaFrom="1" alphaTo=".5"/>
            <mx:WipeRight/>
        </mx:Sequence>
        <mx:Sequence id="s_Fade_WipeUp">
            <s:Fade alphaFrom="1" alphaTo=".5"/>
            <mx:WipeUp/>
        </mx:Sequence>
        <mx:Sequence id="s_Fade_Zoom">
            <s:Fade alphaFrom="1" alphaTo=".5"/>
            <mx:Zoom zoomWidthFrom="0" zoomWidthTo="1" zoomHeightFrom="0" zoomHeightTo="1"/>
        </mx:Sequence>

        <mx:Sequence id="s_Fade_FxAnimate">
            <s:Fade alphaFrom="1" alphaTo=".5"/>
            <s:Animate>
                <s:motionPaths>
                    <s:SimpleMotionPath property="x" valueFrom="0" valueTo="40"/>
                    <s:SimpleMotionPath property="y" valueFrom="0" valueTo="40"/>
                </s:motionPaths>
            </s:Animate>
        </mx:Sequence>

        <mx:Sequence id="s_Fade_FxAnimate_AdjustConstraints">
            <s:Fade alphaFrom="1" alphaTo=".5"/>
            <s:Animate disableLayout="true">
                <s:motionPaths>
                    <s:SimpleMotionPath property="x" valueFrom="0" valueTo="40"/>
                    <s:SimpleMotionPath property="y" valueFrom="0" valueTo="40"/>
                </s:motionPaths>
            </s:Animate>
        </mx:Sequence>

        <mx:Sequence id="s_Fade_FxAnimateColor">
            <s:Fade alphaFrom="1" alphaTo=".5"/>
            <s:AnimateColor colorFrom="0x00000" colorTo="0x0000FF"/>
        </mx:Sequence>

        <mx:Sequence id="s_Fade_FxFade">
            <s:Fade alphaFrom="1" alphaTo=".5"/>
            <s:Fade alphaFrom="1" alphaTo=".3"/>
        </mx:Sequence>

        <mx:Sequence id="s_Fade_FxMove">
            <s:Fade alphaFrom="1" alphaTo=".5"/>
            <s:Move xBy="100"/>
        </mx:Sequence>

        <mx:Sequence id="s_Fade_FxResize">
            <s:Fade alphaFrom="1" alphaTo=".5"/>
            <s:Resize widthBy="30" heightBy="30"/>
        </mx:Sequence>

        <mx:Sequence id="s_Fade_SetAction">
            <s:Fade alphaFrom="1" alphaTo=".5"/>
            <s:SetAction property="x" value="200"/>
        </mx:Sequence>

    </fx:Declarations>


    <mx:HBox id="mainBox">
        <mx:VBox width="170" height="540" verticalScrollPolicy="off" creationPolicy="all">
            <mx:Label width="100%" text="Properties"/>
            <mx:HRule width="100%"/>
            <s:Button id="btn_Reset" label="Reset" width="100%" click="Reset()"/>
            <s:Button id="btn_Pause" label="Pause" width="100%" click="currentEffect.pause()"/>
            <s:Button id="btn_Resume" label="Resume" width="100%" click="currentEffect.resume()"/>
            <s:Button id="btn_Stop" label="Stop" width="100%" click="currentEffect.stop()"/>
            <mx:Spacer/>
            <mx:Label width="100%" text="Events"/>
            <mx:HRule width="100%"/>
            <mx:VBox id="eventBox">
                <s:Label id="lbl_EffectStart" width="100%" text="EffectStart" color="0x000000" fontWeight="bold" />
                <s:Label id="lbl_TweenStart" width="100%" text="TweenStart" color="0x000000" fontWeight="bold"/>
                <s:Label id="lbl_TweenUpdate" width="100%" text="TweenUpdate" color="0x000000" fontWeight="bold"/>
                <s:Label id="lbl_TweenEnd" width="100%" text="TweenEnd" color="0x000000" fontWeight="bold"/>
                <s:Label id="lbl_AnimationStart" width="100%" text="AnimationStart" color="0x000000" fontWeight="bold"/>
                <s:Label id="lbl_AnimationUpdate" width="100%" text="AnimationUpdate" color="0x000000" fontWeight="bold"/>
                <s:Label id="lbl_AnimationRepeat" width="100%" text="AnimationRepeat" color="0x000000" fontWeight="bold"/>
                <s:Label id="lbl_AnimationEnd" width="100%" text="AnimationEnd" color="0x000000" fontWeight="bold"/>
                <s:Label id="lbl_EffectEnd" width="100%" text="EffectEnd" color="0x000000" fontWeight="bold"/>
            </mx:VBox>
        </mx:VBox>
        <mx:VBox width="250" height="540" verticalScrollPolicy="off" creationPolicy="all">
            <mx:Label width="100%" text="Effects"/>
            <mx:HRule width="100%"/>
            <mx:Accordion width="100%" height="467" creationPolicy="all" verticalScrollPolicy="off">

                <mx:VBox width="100%" height="100%" label="Fade Objects">
                    <mx:LinkButton label="Button" width="100%" click="SeekControl('Button', eff_Fade, 1000, 0, 1, 0, 500)"/>
                    <mx:LinkButton label="ButtonBar" width="100%" click="SeekControl('ButtonBar', eff_Fade, 1000, 0, 1, 0, 500)"/>
                    <mx:LinkButton label="CheckBox" width="100%" click="SeekControl('CheckBox', eff_Fade, 1000, 0, 1, 0, 500)"/>
                    <mx:LinkButton label="ColorPicker" width="100%" click="SeekControl('ColorPicker', eff_Fade, 1000, 0, 1, 0, 500)"/>
                    <mx:LinkButton label="ComboBox" width="100%" click="SeekControl('ComboBox', eff_Fade, 1000, 0, 1, 0, 500)"/>
                    <mx:LinkButton label="DataGrid" width="100%" click="SeekControl('DataGrid', eff_Fade, 1000, 0, 1, 0, 500)"/>
                    <mx:LinkButton label="DateChooser" width="100%" click="SeekControl('DateChooser', eff_Fade, 1000, 0, 1, 0, 500)"/>
                    <mx:LinkButton label="DateField" width="100%" click="SeekControl('DateField', eff_Fade, 1000, 0, 1, 0, 500)"/>
                    <mx:LinkButton label="HorizontalList" width="100%" click="SeekControl('HorizontalList', eff_Fade, 1000, 0, 1, 0, 500)"/>
                    <mx:LinkButton label="HRule" width="100%" click="SeekControl('HRule', eff_Fade, 1000, 0, 1, 0, 500)"/>
                    <mx:LinkButton label="HScrollBar" width="100%" click="SeekControl('HScrollBar', eff_Fade, 1000, 0, 1, 0, 500)"/>
                    <mx:LinkButton label="HSlider" width="100%" click="SeekControl('HSlider', eff_Fade, 1000, 0, 1, 0, 500)"/>
                    <mx:LinkButton label="Image" width="100%" click="SeekControl('Image', eff_Fade, 1000, 0, 1, 0, 500)"/>
                    <mx:LinkButton label="Label" width="100%" click="SeekControl('Label', eff_Fade, 1000, 0, 1, 0, 500)"/>
                    <mx:LinkButton label="LinkBar" width="100%" click="SeekControl('LinkBar', eff_Fade, 1000, 0, 1, 0, 500)"/>
                    <mx:LinkButton label="LinkButton" width="100%" click="SeekControl('LinkButton', eff_Fade, 1000, 0, 1, 0, 500)"/>
                    <mx:LinkButton label="List" width="100%" click="SeekControl('List', eff_Fade, 1000, 0, 1, 0, 500)"/>
                    <mx:LinkButton label="MenuBar" width="100%" click="SeekControl('MenuBar', eff_Fade, 1000, 0, 1, 0, 500)"/>
                    <mx:LinkButton label="NumericStepper" width="100%" click="SeekControl('NumericStepper', eff_Fade, 1000, 0, 1, 0, 500)"/>
                    <mx:LinkButton label="PopUpButton" width="100%" click="SeekControl('PopUpButton', eff_Fade, 1000, 0, 1, 0, 500)"/>
                    <mx:LinkButton label="PopUpMenuButton" width="100%" click="SeekControl('PopUpMenuButton', eff_Fade, 1000, 0, 1, 0, 500)"/>
                    <mx:LinkButton label="ProgressBar" width="100%" click="SeekControl('ProgressBar', eff_Fade, 1000, 0, 1, 0, 500)"/>
                    <mx:LinkButton label="RadioButton" width="100%" click="SeekControl('RadioButton', eff_Fade, 1000, 0, 1, 0, 500)"/>
                    <mx:LinkButton label="RichTextEditor" width="100%" click="SeekControl('RichTextEditor', eff_Fade, 1000, 0, 1, 0, 500)"/>
                    <mx:LinkButton label="TabBar" width="100%" click="SeekControl('TabBar', eff_Fade, 1000, 0, 1, 0, 500)"/>
                    <mx:LinkButton label="Text" width="100%" click="SeekControl('Text', eff_Fade, 1000, 0, 1, 0, 500)"/>
                    <mx:LinkButton label="TextArea" width="100%" click="SeekControl('TextArea', eff_Fade, 1000, 0, 1, 0, 500)"/>
                    <mx:LinkButton label="TextInput" width="100%" click="SeekControl('TextInput', eff_Fade, 1000, 0, 1, 0, 500)"/>
                    <mx:LinkButton label="TileList" width="100%" click="SeekControl('TileList', eff_Fade, 1000, 0, 1, 0, 500)"/>
                    <mx:LinkButton label="ToggleButtonBar" width="100%" click="SeekControl('ToggleButtonBar', eff_Fade, 1000, 0, 1, 0, 500)"/>
                    <mx:LinkButton label="Tree" width="100%" click="SeekControl('Tree', eff_Fade, 1000, 0, 1, 0, 500)"/>
                    <mx:LinkButton label="VRule" width="100%" click="SeekControl('VRule', eff_Fade, 1000, 0, 1, 0, 500)"/>
                    <mx:LinkButton label="VScrollBar" width="100%" click="SeekControl('VScrollBar', eff_Fade, 1000, 0, 1, 0, 500)"/>
                    <mx:LinkButton label="VSlider" width="100%" click="SeekControl('VSlider', eff_Fade, 1000, 0, 1, 0, 500)"/>
                    <mx:LinkButton label="FxButton" width="100%" click="SeekControl('FxButton', eff_Fade, 1000, 0, 1, 0, 500)"/>
                    <mx:LinkButton label="FxCheckBox" width="100%" click="SeekControl('FxCheckBox', eff_Fade, 1000, 0, 1, 0, 500)"/>
                    <mx:LinkButton label="FxHScrollBar" width="100%" click="SeekControl('FxHScrollBar', eff_Fade, 1000, 0, 1, 0, 500)"/>
                    <mx:LinkButton label="FxHSlider" width="100%" click="SeekControl('FxHSlider', eff_Fade, 1000, 0, 1, 0, 500)"/>
                    <mx:LinkButton label="FxNumericStepper" width="100%" click="SeekControl('FxNumericStepper', eff_Fade, 1000, 0, 1, 0, 500)"/>
                    <mx:LinkButton label="FxRadioButton" width="100%" click="SeekControl('FxRadioButton', eff_Fade, 1000, 0, 1, 0, 500)"/>
                    <mx:LinkButton label="FxTextArea" width="100%" click="SeekControl('FxTextArea', eff_Fade, 1000, 0, 1, 0, 500)"/>
                    <mx:LinkButton label="FxTextInput" width="100%" click="SeekControl('FxTextInput', eff_Fade, 1000, 0, 1, 0, 500)"/>
                    <mx:LinkButton label="FxToggleButton" width="100%" click="SeekControl('FxToggleButton', eff_Fade, 1000, 0, 1, 0, 500)"/>
                    <mx:LinkButton label="FxVScrollBar" width="100%" click="SeekControl('FxVScrollBar', eff_Fade, 1000, 0, 1, 0, 500)"/>
                    <mx:LinkButton label="FxVSlider" width="100%" click="SeekControl('FxVSlider', eff_Fade, 1000, 0, 1, 0, 500)"/>
                    <mx:LinkButton label="Triangle" width="100%" click="SeekControl('Triangle', eff_Fade, 1000, 0, 1, 0, 500)"/>
                </mx:VBox>

                <mx:VBox width="100%" height="100%" label="Fade Functionality">
                    <mx:LinkButton label="Just Fade" width="100%" click="PlayEffectControl('Button', eff_Fade, 1000, 0, 1, 0)"/>
                    <mx:LinkButton label="Fade+SD" width="100%" click="PlayEffectControl('Button', eff_Fade, 1000, 500, 1, 0)"/>
                    <mx:LinkButton label="Fade+RC+RD" width="100%" click="PlayEffectControl('Button', eff_Fade, 1000, 0, 2, 500)"/>
                    <mx:LinkButton label="Fade+SD+RC+RD" width="100%" click="PlayEffectControl('Button', eff_Fade, 1000, 500, 2, 500)"/>
                    <mx:LinkButton label="Play Reversed" width="100%" click="eff_Fade.play([this.GetTarget()], true)"/>
                </mx:VBox>

                <mx:VBox width="100%" height="100%" label="Fade Parallel">
                    <mx:LinkButton label="Parallel Fade" width="100%" click="PlayEffectControl('Button', p_Fade, 1000, 0, 1, 0)"/>
                    <mx:LinkButton label="Parallel Fade+Thermo" width="100%" click="PlayEffectControl('Button', p_Fade_Thermo, 1000, 0, 1, 0)"/>
                    <mx:LinkButton label="Parallel Fade+Thermo Overlap" width="100%" click="PlayEffectControl('Button', p_Fade_Thermo_Overlap, 1000, 0, 1, 0)"/>
                    <mx:LinkButton label="Parallel FxRotate3D+Fade (Order)" width="100%" click="PlayEffectControl('Button', p_FxRotate3D_Fade, 1000, 0, 1, 0)"/>
                    <mx:LinkButton label="Parallel Fade+FxRotate3D" width="100%" click="PlayEffectControl('Button', p_Fade_FxRotate3D, 1000, 0, 1, 0)"/>
                    <mx:LinkButton label="Parallel Fade+Blur" width="100%" click="PlayEffectControl('Button', p_Fade_Blur, 1000, 0, 1, 0)"/>
                    <mx:LinkButton label="Parallel Fade+Dissolve" width="100%" click="PlayEffectControl('Button', p_Fade_Dissolve, 1000, 0, 1, 0)"/>
                    <mx:LinkButton label="Parallel Fade+FxAnimate" width="100%" click="PlayEffectControl('Button', p_Fade_FxAnimate, 1000, 0, 1, 0)"/>
                    <mx:LinkButton label="Parallel Fade+FxAnimateColor" width="100%" click="PlayEffectControl('Button', p_Fade_FxAnimateColor, 1000, 0, 1, 0)"/>
                    <mx:LinkButton label="Parallel Fade+FxResize" width="100%" click="PlayEffectControl('Button', p_Fade_FxResize, 1000, 0, 1, 0)"/>
                    <mx:LinkButton label="Parallel Fade+FxRotate3D" width="100%" click="PlayEffectControl('Button', p_Fade_FxRotate3D, 1000, 0, 1, 0)"/>
                    <mx:LinkButton label="Parallel Fade+FxMove" width="100%" click="PlayEffectControl('Button', p_Fade_FxMove, 1000, 0, 1, 0)"/>
                    <mx:LinkButton label="Parallel Fade+Glow" width="100%" click="PlayEffectControl('Button', p_Fade_Glow, 1000, 0, 1, 0)"/>
                    <mx:LinkButton label="Parallel Fade+Iris" width="100%" click="PlayEffectControl('Button', p_Fade_Iris, 1000, 0, 1, 0)"/>
                    <mx:LinkButton label="Parallel Fade+MaskEffect" width="100%" click="PlayEffectControl('Button', p_Fade_MaskEffect, 1000, 0, 1, 0)"/>
                    <mx:LinkButton label="Parallel Fade+Move" width="100%" click="PlayEffectControl('Button', p_Fade_Move, 1000, 0, 1, 0)"/>
                    <mx:LinkButton label="Parallel Fade+Resize" width="100%" click="PlayEffectControl('Button', p_Fade_Resize, 1000, 0, 1, 0)"/>
                    <mx:LinkButton label="Parallel Fade+SetAction" width="100%" click="PlayEffectControl('Button', p_Fade_SetAction, 1000, 0, 1, 0)"/>
                    <mx:LinkButton label="Parallel Fade+WipeDown" width="100%" click="PlayEffectControl('Button', p_Fade_WipeDown, 1000, 0, 1, 0)"/>
                    <mx:LinkButton label="Parallel Fade+WipeLeft" width="100%" click="PlayEffectControl('Button', p_Fade_WipeLeft, 1000, 0, 1, 0)"/>
                    <mx:LinkButton label="Parallel Fade+WipeRight" width="100%" click="PlayEffectControl('Button', p_Fade_WipeRight, 1000, 0, 1, 0)"/>
                    <mx:LinkButton label="Parallel Fade+WipeUp" width="100%" click="PlayEffectControl('Button', p_Fade_WipeUp, 1000, 0, 1, 0)"/>
                    <mx:LinkButton label="Parallel Fade+Zoom" width="100%" click="PlayEffectControl('Button', p_Fade_Zoom, 1000, 0, 1, 0)"/>
                    <mx:LinkButton label="Parallel Multi Targets" width="100%" click="PlayEffectControls('Button', p_Fade, 1000, 0, 1, 0)"/>
                </mx:VBox>

                <mx:VBox width="100%" height="100%" label="Fade Sequence">
                    <mx:LinkButton label="Sequence Fade" width="100%" click="PlayEffectControl('Button', s_Fade, 1000, 0, 1, 0)"/>
                    <mx:LinkButton label="Sequence Fade+Thermo" width="100%" click="PlayEffectControl('Button', s_Fade_Thermo, 1000, 0, 1, 0)"/>
                    <mx:LinkButton label="Sequence Fade+Thermo Overlap" width="100%" click="PlayEffectControl('Button', s_Fade_Thermo_Overlap, 1000, 0, 1, 0)"/>
                    <mx:LinkButton label="Sequence FxRotate3D+Fade (Order)" width="100%" click="PlayEffectControl('Button', s_FxRotate3D_Fade, 1000, 0, 1, 0)"/>
                    <mx:LinkButton label="Sequence Fade+FxRotate3D" width="100%" click="PlayEffectControl('Button', s_Fade_FxRotate3D, 1000, 0, 1, 0)"/>
                    <mx:LinkButton label="Sequence Fade+Blur" width="100%" click="PlayEffectControl('Button', s_Fade_Blur, 1000, 0, 1, 0)"/>
                    <mx:LinkButton label="Sequence Fade+Dissolve" width="100%" click="PlayEffectControl('Button', s_Fade_Dissolve, 1000, 0, 1, 0)"/>
                    <mx:LinkButton label="Sequence Fade+FxAnimate" width="100%" click="PlayEffectControl('Button', s_Fade_FxAnimate, 1000, 0, 1, 0)"/>
                    <mx:LinkButton label="Sequence Fade+FxAnimateColor" width="100%" click="PlayEffectControl('Button', s_Fade_FxAnimateColor, 1000, 0, 1, 0)"/>
                    <mx:LinkButton label="Sequence Fade+FxResize" width="100%" click="PlayEffectControl('Button', s_Fade_FxResize, 1000, 0, 1, 0)"/>
                    <mx:LinkButton label="Sequence Fade+FxRotate3D" width="100%" click="PlayEffectControl('Button', s_Fade_FxRotate3D, 1000, 0, 1, 0)"/>
                    <mx:LinkButton label="Sequence Fade+FxMove" width="100%" click="PlayEffectControl('Button', s_Fade_FxMove, 1000, 0, 1, 0)"/>
                    <mx:LinkButton label="Sequence Fade+Glow" width="100%" click="PlayEffectControl('Button', s_Fade_Glow, 1000, 0, 1, 0)"/>
                    <mx:LinkButton label="Sequence Fade+Iris" width="100%" click="PlayEffectControl('Button', s_Fade_Iris, 1000, 0, 1, 0)"/>
                    <mx:LinkButton label="Sequence Fade+MaskEffect" width="100%" click="PlayEffectControl('Button', s_Fade_MaskEffect, 1000, 0, 1, 0)"/>
                    <mx:LinkButton label="Sequence Fade+Move" width="100%" click="PlayEffectControl('Button', s_Fade_Move, 1000, 0, 1, 0)"/>
                    <mx:LinkButton label="Sequence Fade+Resize" width="100%" click="PlayEffectControl('Button', s_Fade_Resize, 1000, 0, 1, 0)"/>
                    <mx:LinkButton label="Sequence Fade+SetAction" width="100%" click="PlayEffectControl('Button', s_Fade_SetAction, 1000, 0, 1, 0)"/>
                    <mx:LinkButton label="Sequence Fade+WipeDown" width="100%" click="PlayEffectControl('Button', s_Fade_WipeDown, 1000, 0, 1, 0)"/>
                    <mx:LinkButton label="Sequence Fade+WipeLeft" width="100%" click="PlayEffectControl('Button', s_Fade_WipeLeft, 1000, 0, 1, 0)"/>
                    <mx:LinkButton label="Sequence Fade+WipeRight" width="100%" click="PlayEffectControl('Button', s_Fade_WipeRight, 1000, 0, 1, 0)"/>
                    <mx:LinkButton label="Sequence Fade+WipeUp" width="100%" click="PlayEffectControl('Button', s_Fade_WipeUp, 1000, 0, 1, 0)"/>
                    <mx:LinkButton label="Sequence Fade+Zoom" width="100%" click="PlayEffectControl('Button', s_Fade_Zoom, 1000, 0, 1, 0)"/>
                    <mx:LinkButton label="Sequence Multi Targets" width="100%" click="PlayEffectControls('Button', s_Fade, 1000, 0, 1, 0)"/>
                </mx:VBox>

            </mx:Accordion>
        </mx:VBox>
        <assets:ObjectTabs/>
    </mx:HBox>
</s:Application>
