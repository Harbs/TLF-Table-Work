<?xml version="1.0" encoding="utf-8"?>
<!--

  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.

-->
<UnitTester 
    testDir="spark/effects/Resize/BetterAutoCenter/"  
    testSWF="../SWFs/Resize_SpaceInvaders3D_Main.mxml" 
    xmlns:mx="http://www.adobe.com/2006/mxml" 
    xmlns="*">
    
    <!-- this set of lines form a template that must be in each unit test -->
    <mx:Script>
        <![CDATA[
		[Bindable]private var timeout:int = 200;
		
        public static function init(o:DisplayObject):void
        {
        }
		
		private static function InRange(target:Number, min:Number, max:Number, id:String):Boolean
		{
			if((target >= min) && (target <= max))
			{
				return(true);
			}
			else
			{
				throw(new Error(id + target.toString()));
			}
		}
        ]]>
    </mx:Script>
    <mx:Metadata>
        <![CDATA[
        [Mixin]
        ]]>
    </mx:Metadata>
    <!-- end of set of lines that must be in each unit test -->
    <testCases>
    
		<TestCase testID="Resize_SpaceInvaders3D_RM" keywords="[Resize]" description="Resize with better auto centering.">
            <setup>
                <RunCode code="application.Reset()" />
				<Pause timeout="{timeout}"/>
            </setup>
            <body>
                <RunCode code="application.p_rm.playheadTime = 444;"/>
				<Pause timeout="{timeout}"/>
				<AssertMethodValue method="value=Math.ceil(application.invader1.width)" value="106"/>
				<AssertMethodValue method="value=Math.ceil(application.invader1.height)" value="100"/>
				<AssertMethodValue method="value=Math.ceil(application.invader1.x)" value="250"/>
				<AssertMethodValue method="value=Math.ceil(application.invader1.y)" value="0"/>
				<AssertMethodValue method="value=Math.ceil(application.invader1.postLayoutTransformOffsets.x)" value="0"/>
				<AssertMethodValue method="value=Math.ceil(application.invader1.postLayoutTransformOffsets.y)" value="38"/>
			</body>
        </TestCase>

		<TestCase testID="Resize_SpaceInvaders3D_RM_ACT" keywords="[Resize]" description="Resize with better auto centering.">
			<setup>
				<RunCode code="application.Reset()" />
				<Pause timeout="{timeout}"/>
			</setup>
			<body>
				<RunCode code="application.p_rm_act.playheadTime = 512;" />
				<Pause timeout="{timeout}"/>
				<AssertMethodValue method="value=Math.ceil(application.invader1.width)" value="108"/>
				<AssertMethodValue method="value=Math.ceil(application.invader1.height)" value="100"/>
				<AssertMethodValue method="value=Math.ceil(application.invader1.x)" value="250"/>
				<AssertMethodValue method="value=Math.ceil(application.invader1.y)" value="0"/>
				<AssertMethodValue method="value=Math.ceil(application.invader1.postLayoutTransformOffsets.x)" value="-3"/>
				<AssertMethodValue method="value=Math.ceil(application.invader1.postLayoutTransformOffsets.y)" value="50"/>
			</body>
		</TestCase>

		<TestCase testID="Resize_SpaceInvaders3D_RM_ACPL" keywords="[Resize]" description="Resize with better auto centering.">
			<setup>
				<RunCode code="application.Reset()" />
				<Pause timeout="{timeout}"/>
			</setup>
			<body>
				<RunCode code="application.p_rm_acpl.playheadTime = 2102;" />
				<Pause timeout="{timeout}"/>
				<AssertMethodValue method="value=Math.ceil(application.invader1.width)" value="180"/>
				<AssertMethodValue method="value=Math.ceil(application.invader1.height)" value="100"/>
				<AssertMethodValue method="value=Math.ceil(application.invader1.x)" value="250"/>
				<AssertMethodValue method="value=Math.ceil(application.invader1.y)" value="0"/>
				<AssertMethodValue method="value=Math.ceil(application.invader1.postLayoutTransformOffsets.x)" value="0"/>
				<AssertMethodValue method="value=Math.ceil(application.invader1.postLayoutTransformOffsets.y)" value="557"/>
			</body>
		</TestCase>

		<TestCase testID="Resize_SpaceInvaders3D_RM_ACT_ACPL" keywords="[Resize]" description="Resize with better auto centering.">
			<setup>
				<RunCode code="application.Reset()" />
				<Pause timeout="{timeout}"/>
			</setup>
			<body>
				<RunCode code="application.p_rm_act_acpl.playheadTime = 2900;"/>
				<Pause timeout="{timeout}"/>
				<AssertMethodValue method="value=Math.ceil(application.invader1.width)" value="200"/>
				<AssertMethodValue method="value=Math.ceil(application.invader1.height)" value="100"/>
				<AssertMethodValue method="value=Math.ceil(application.invader1.x)" value="250"/>
				<AssertMethodValue method="value=Math.ceil(application.invader1.y)" value="0"/>
				<AssertMethodValue method="value=Math.ceil(application.invader1.postLayoutTransformOffsets.x)" value="-49"/>
				<AssertMethodValue method="value=Math.ceil(application.invader1.postLayoutTransformOffsets.y)" value="699"/>
			</body>
		</TestCase>


		<TestCase testID="Resize_SpaceInvaders3D_RMR" keywords="[Resize]" description="Resize with better auto centering.">
			<setup>
				<RunCode code="application.Reset()" />
				<Pause timeout="{timeout}"/>
			</setup>
			<body>
				<RunCode code="application.p_rmr.playheadTime = 913;" />
				<Pause timeout="{timeout}"/>
				<AssertMethodValue method="value=Math.ceil(application.invader1.width)" value="122"/>
				<AssertMethodValue method="value=Math.ceil(application.invader1.height)" value="100"/>
				<AssertMethodValue method="value=Math.ceil(application.invader1.x)" value="250"/>
				<AssertMethodValue method="value=Math.ceil(application.invader1.y)" value="0"/>
				<AssertMethodValue method="value=Math.ceil(application.invader1.postLayoutTransformOffsets.x)" value="0"/>
				<AssertMethodValue method="value=Math.ceil(application.invader1.postLayoutTransformOffsets.y)" value="149"/>
				<AssertMethodValue method="value=Math.ceil(application.invader1.postLayoutTransformOffsets.rotationZ)" value="77"/>
			</body>
		</TestCase>

		<TestCase testID="Resize_SpaceInvaders3D_RMR_ACT" keywords="[Resize]" description="Resize with better auto centering.">
			<setup>
				<RunCode code="application.Reset()" />
				<Pause timeout="{timeout}"/>
			</setup>
			<body>
				<RunCode code="application.p_rmr_act.playheadTime = 1357;" />
				<Pause timeout="{timeout}"/>
				<AssertMethodValue method="value=Math.ceil(application.invader1.width)" value="143"/>
				<AssertMethodValue method="value=Math.ceil(application.invader1.height)" value="100"/>
				<AssertMethodValue method="value=Math.ceil(application.invader1.x)" value="251"/>
				<AssertMethodValue method="value=Math.ceil(application.invader1.y)" value="0"/>
				<AssertMethodValue method="value=Math.ceil(application.invader1.postLayoutTransformOffsets.x)" value="137"/>
				<AssertMethodValue method="value=Math.ceil(application.invader1.postLayoutTransformOffsets.y)" value="361"/>
				<AssertMethodValue method="value=Math.ceil(application.invader1.postLayoutTransformOffsets.rotationZ)" value="154"/>
			</body>
		</TestCase>

		<TestCase testID="Resize_SpaceInvaders3D_RMR_ACPL" keywords="[Resize]" description="Resize with better auto centering.">
			<setup>
				<RunCode code="application.Reset()" />
				<Pause timeout="{timeout}"/>
			</setup>
			<body>
				<RunCode code="application.p_rmr_act.playheadTime = 2657;" />
				<Pause timeout="{timeout + 200}"/>
				<AssertMethodValue method="value=Math.ceil(application.invader1.width)" value="197"/>
				<AssertMethodValue method="value=Math.ceil(application.invader1.height)" value="100"/>
				<AssertMethodValue method="value=Math.ceil(application.invader1.x)" value="250"/>
				<AssertMethodValue method="value=Math.ceil(application.invader1.postLayoutTransformOffsets.rotationZ)" value="349"/>
			</body>
		</TestCase>

		<TestCase testID="Resize_SpaceInvaders3D_RMR_ACT_ACPL" keywords="[Resize]" description="Resize with better auto centering.">
			<setup>
				<RunCode code="application.Reset()" />
				<Pause timeout="{timeout}"/>
			</setup>
			<body>
				<RunCode code="application.p_rmr_act_acpl.playheadTime = 1591;" />
				<Pause timeout="{timeout}"/>
				<AssertMethodValue method="value=Math.ceil(application.invader1.width)" value="155"/>
				<AssertMethodValue method="value=Math.ceil(application.invader1.height)" value="100"/>
				<AssertMethodValue method="value=Math.ceil(application.invader1.x)" value="251"/>
				<AssertMethodValue method="value=Math.ceil(application.invader1.y)" value="0"/>
				<AssertMethodValue method="value=Math.ceil(application.invader1.postLayoutTransformOffsets.x)" value="110"/>
				<AssertMethodValue method="value=Math.ceil(application.invader1.postLayoutTransformOffsets.y)" value="504"/>
				<AssertMethodValue method="value=Math.ceil(application.invader1.postLayoutTransformOffsets.rotationZ)" value="198"/>
			</body>
		</TestCase>
		
		
		
		
		<!-- Transition stuff -->
		<TestCase testID="Resize_SpaceInvaders3D_Trans_RM" keywords="[Resize]" description="Resize with better auto centering.">
			<setup>
				<RunCode code="application.Reset()" />
				<RunCode code="application.currentState='State1'" />
				<Pause timeout="{timeout}"/>
			</setup>
			<body>
				<RunCode code="application.PlayTransition(application.t_rm)" waitTarget="t_rm" waitEvent="effectEnd"  />
				<AssertPropertyValue target="invader1" propertyName="width" value="200"/>
				<AssertPropertyValue target="invader1" propertyName="height" value="100"/>
				<AssertPropertyValue target="invader1" propertyName="x" value="200"/>
				<AssertPropertyValue target="invader1" propertyName="y" value="700"/>
			</body>
		</TestCase>

		<TestCase testID="Resize_SpaceInvaders3D_Trans_RM_ACT" keywords="[Resize]" description="Resize with better auto centering.">
			<setup>
				<RunCode code="application.Reset()" />
				<RunCode code="application.currentState='State1'" />
				<Pause timeout="{timeout}"/>
			</setup>
			<body>
				<RunCode code="application.PlayTransition(application.t_rm_act);" waitTarget="t_rm_act" waitEvent="effectEnd"  />
				<AssertMethodValue method="value=Math.ceil(application.invader1.width)" value="200"/>
				<AssertMethodValue method="value=Math.ceil(application.invader1.height)" value="100"/>
				<AssertMethodValue method="value=Math.round(application.invader1.x)" value="200"/>
				<AssertMethodValue method="value=Math.round(application.invader1.y)" value="700"/>
			</body>
		</TestCase>


		<TestCase testID="Resize_SpaceInvaders3D_Trans_RMR" keywords="[Resize]" description="Resize with better auto centering.">
			<setup>
				<RunCode code="application.Reset()" />
				<RunCode code="application.currentState='State1'" />
				<Pause timeout="{timeout}"/>
			</setup>
			<body>
				<RunCode code="application.PlayTransition(application.t_rmr);" waitTarget="t_rmr" waitEvent="effectEnd"  />
				<AssertPropertyValue target="invader1" propertyName="width" value="200"/>
				<AssertPropertyValue target="invader1" propertyName="height" value="100"/>
				<AssertMethodValue method="value=(application.invader1.x &lt; 201)" value="true"/>
				<AssertMethodValue method="value=(application.invader1.x &gt; 199)" value="true"/>
				<AssertMethodValue method="value=(application.invader1.y &lt; 701)" value="true"/>
				<AssertMethodValue method="value=(application.invader1.y &gt; 699)" value="true"/>
			</body>
		</TestCase>

		<TestCase testID="Resize_SpaceInvaders3D_Trans_RMR_ACT" keywords="[Resize]" description="Resize with better auto centering.">
			<setup>
				<RunCode code="application.Reset()" />
				<RunCode code="application.currentState='State1'" />
				<Pause timeout="{timeout}"/>
			</setup>
			<body>
				<RunCode code="application.PlayTransition(application.t_rmr_act);" waitTarget="t_rmr_act" waitEvent="effectEnd"  />
				<AssertPropertyValue target="invader1" propertyName="width" value="200"/>
				<AssertPropertyValue target="invader1" propertyName="height" value="100"/>
				<AssertMethodValue method="value=(application.invader1.x &lt; 201)" value="true"/>
				<AssertMethodValue method="value=(application.invader1.x &gt; 199)" value="true"/>
				<AssertMethodValue method="value=(application.invader1.y &lt; 701)" value="true"/>
				<AssertMethodValue method="value=(application.invader1.y &gt; 699)" value="true"/>
			</body>
		</TestCase>
		
		
	</testCases>
</UnitTester>
