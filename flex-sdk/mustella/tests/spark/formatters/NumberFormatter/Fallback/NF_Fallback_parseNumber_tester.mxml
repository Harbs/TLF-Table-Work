<?xml version="1.0" encoding="utf-8"?>
<!--

  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.

-->
<UnitTester testDir="spark/formatters/NumberFormatter/Fallback/"
			xmlns:mx="http://www.adobe.com/2006/mxml"
			xmlns:s="library://ns.adobe.com/flex/spark"
			xmlns="*"
			testSWF="NF_Fallback_parseNumber.mxml">

	<mx:Script>
		<![CDATA[
			import assets.NFConstants;

			public static function init(o:DisplayObject):void
			{

			}
		]]>
	</mx:Script>

	<mx:Metadata>
		<![CDATA[
		[Mixin]
		]]>
	</mx:Metadata>


	<testCases>
		<TestCase testID="NF_Fallback_parseNumber_inline_test1" description="using inline NumberFormatter instance to parse normal number string " keywords="[NumberFormatter, parseNumber]">
			<setup>
			</setup>
			<body>
				<AssertMethodValue method="value=application.nf_inline.parseNumber('1234')" valueExpression="value=1234"/>
				<AssertPropertyValue  target="nf_inline" propertyName="lastOperationStatus" value="noError"/>
				<AssertMethodValue method="value=application.nf_inline.parseNumber('1234.4567')" valueExpression="value=1234.4567"/>
				<AssertPropertyValue  target="nf_inline" propertyName="lastOperationStatus" value="noError"/>
				<AssertMethodValue method="value=application.nf_inline.parseNumber('0')" valueExpression="value=0"/>
				<AssertPropertyValue  target="nf_inline" propertyName="lastOperationStatus" value="noError"/>
			</body>
		</TestCase>

		<TestCase testID="NF_Fallback_parseNumber_inline_test2" description="using inline NumberFormatter instance to parse normal number string with white space" keywords="[NumberFormatter, parseNumber]">
			<setup>
				<ResetComponent target="nf_inline" className="assets.FallbackNF"/>
				<RunCode code="application.nf_inline.initialized(null,'nf_inline')"/>
				<Pause timeout="{NFConstants.pauseTime}"/>

				<RunCode code="application.addStyleClient(application.nf_inline)"/>
				<Pause timeout="{NFConstants.pauseTime}"/>
			</setup>
			<body>
				<AssertMethodValue method="value=application.nf_inline.parseNumber('123456')" valueExpression="value=123456"/>
				<AssertPropertyValue  target="nf_inline" propertyName="lastOperationStatus" value="noError"/>
				<AssertMethodValue method="value=application.nf_inline.parseNumber('1234.5')" valueExpression="value=1234.5"/>
				<AssertPropertyValue  target="nf_inline" propertyName="lastOperationStatus" value="noError"/>
				<AssertMethodValue method="value=application.nf_inline.parseNumber('12345634567 ')" valueExpression="value=12345634567"/>
				<AssertPropertyValue  target="nf_inline" propertyName="lastOperationStatus" value="noError"/>
			</body>
		</TestCase>

		<TestCase testID="NF_Fallback_parseNumber_inline_test3" description="using inline NumberFormatter instance to parse invalid string" keywords="[NumberFormatter, parseNumber]">
			<setup>
				<ResetComponent target="nf_inline" className="assets.FallbackNF"/>
				<RunCode code="application.nf_inline.initialized(null,'nf_inline')"/>
				<Pause timeout="{NFConstants.pauseTime}"/>

				<RunCode code="application.addStyleClient(application.nf_inline)"/>
				<Pause timeout="{NFConstants.pauseTime}"/>
			</setup>
			<body>
				<AssertMethodValue method="value=application.nf_inline.parseNumber('12ab34cd')" valueExpression="value=NaN"/>
				<AssertPropertyValue  target="nf_inline" propertyName="lastOperationStatus" value="parseError"/>
				<AssertMethodValue method="value=application.nf_inline.parseNumber('$4534*.78')" valueExpression="value=NaN"/>
				<AssertPropertyValue  target="nf_inline" propertyName="lastOperationStatus" value="parseError"/>
				<AssertMethodValue method="value=application.nf_inline.parseNumber('1,,,234')" valueExpression="value=NaN"/>
				<AssertPropertyValue  target="nf_inline" propertyName="lastOperationStatus" value="parseError"/>
				<AssertMethodValue method="value=application.nf_inline.parseNumber('1234,')" valueExpression="value=NaN"/>
				<AssertPropertyValue  target="nf_inline" propertyName="lastOperationStatus" value="parseError"/>
				<AssertMethodValue method="value=application.nf_inline.parseNumber('1.23.23,2.3')" valueExpression="value=NaN"/>
				<AssertPropertyValue  target="nf_inline" propertyName="lastOperationStatus" value="parseError"/>
				<AssertMethodValue method="value=application.nf_inline.parseNumber('1234.5 6 7')" valueExpression="value=NaN"/>
				<AssertPropertyValue  target="nf_inline" propertyName="lastOperationStatus" value="parseError"/>
				<AssertMethodValue method="value=application.nf_inline.parseNumber('12 34 567')" valueExpression="value=NaN"/>
				<AssertPropertyValue  target="nf_inline" propertyName="lastOperationStatus" value="parseError"/>
			</body>
		</TestCase>

		<TestCase testID="NF_Fallback_parseNumber_inline_test4" description="using inline NumberFormatter instance to parse null string" keywords="[NumberFormatter, parseNumber]">
			<setup>
				<ResetComponent target="nf_inline" className="assets.FallbackNF"/>
				<RunCode code="application.nf_inline.initialized(null,'nf_inline')"/>
				<Pause timeout="{NFConstants.pauseTime}"/>

				<RunCode code="application.addStyleClient(application.nf_inline)"/>
				<Pause timeout="{NFConstants.pauseTime}"/>

				<RunCode code="application.testTypeError(application.nf_inline)" />
				<Pause timeout="{NFConstants.pauseTime}"/>
			</setup>
			<body>
				<AssertPropertyValue target="nf_inline" propertyName="lastOperationStatus" value="noError"/>
				<AssertPropertyValue propertyName="text" target="testError"
									 errorArray="['TypeError: Error #1009:']"/>
			</body>
		</TestCase>

		<TestCase testID="NF_Fallback_parseNumber_script_test5" description="using script NumberFormatter instance to parse normal number string " keywords="[NumberFormatter, parseNumber]">
			<setup>
				<RunCode code="application.addStyleClient(application.nf)"/>
				<Pause timeout="{NFConstants.pauseTime}"/>
			</setup>
			<body>
				<AssertMethodValue method="value=application.nf.parseNumber('222')" valueExpression="value=222"/>
				<AssertPropertyValue  target="nf" propertyName="lastOperationStatus" value="noError"/>
<!--				<AssertMethodValue method="value=application.nf_inline.parseNumber('1234.4567')" valueExpression="value=1234.4567"/>
				<AssertPropertyValue  target="nf" propertyName="lastOperationStatus" value="noError"/>
				<AssertMethodValue method="value=application.nf_inline.parseNumber('0')" valueExpression="value=0"/>
				<AssertPropertyValue  target="nf" propertyName="lastOperationStatus" value="noError"/>-->
			</body>
		</TestCase>

		<TestCase testID="NF_Fallback_parseNumber_script_test6" description="using script NumberFormatter instance to parse normal number string with white space" keywords="[NumberFormatter, parseNumber]">
			<setup>
				<ResetComponent target="nf" className="assets.FallbackNF"/>
				<RunCode code="application.nf.initialized(null,'nf')"/>
				<Pause timeout="{NFConstants.pauseTime}"/>

				<RunCode code="application.addStyleClient(application.nf)"/>
				<Pause timeout="{NFConstants.pauseTime}"/>
			</setup>
			<body>
				<AssertMethodValue method="value=application.nf.parseNumber('123456')" valueExpression="value=123456"/>
				<AssertPropertyValue  target="nf" propertyName="lastOperationStatus" value="noError"/>
				<AssertMethodValue method="value=application.nf.parseNumber('1234.5')" valueExpression="value=1234.5"/>
				<AssertPropertyValue  target="nf" propertyName="lastOperationStatus" value="noError"/>
				<AssertMethodValue method="value=application.nf.parseNumber('12345634567 ')" valueExpression="value=12345634567"/>
				<AssertPropertyValue  target="nf" propertyName="lastOperationStatus" value="noError"/>
			</body>
		</TestCase>

		<TestCase testID="NF_Fallback_parseNumber_scirpt_test7" description="using scirpt NumberFormatter instance to parse invalid string" keywords="[NumberFormatter, parseNumber]">
			<setup>
				<ResetComponent target="nf" className="assets.FallbackNF"/>
				<RunCode code="application.nf.initialized(null,'nf')"/>
				<Pause timeout="{NFConstants.pauseTime}"/>

				<RunCode code="application.addStyleClient(application.nf)"/>
				<Pause timeout="{NFConstants.pauseTime}"/>
			</setup>
			<body>

				<AssertMethodValue method="value=application.nf.parseNumber('$4534*.78')" valueExpression="value=NaN"/>
				<AssertPropertyValue  target="nf" propertyName="lastOperationStatus" value="parseError"/>
				<!--<AssertMethodValue method="value=application.nf.parseNumber('1,,,234')" valueExpression="value=NaN"/>
				<AssertPropertyValue  target="nf" propertyName="lastOperationStatus" value="parseError"/>
				<AssertMethodValue method="value=application.nf.parseNumber('1234,')" valueExpression="value=NaN"/>
				<AssertPropertyValue  target="nf" propertyName="lastOperationStatus" value="parseError"/>
				<AssertMethodValue method="value=application.nf.parseNumber('1.23.23,2.3')" valueExpression="value=NaN"/>
				<AssertPropertyValue  target="nf" propertyName="lastOperationStatus" value="parseError"/>
				<AssertMethodValue method="value=application.nf.parseNumber('1234.5 6 7')" valueExpression="value=NaN"/>
				<AssertPropertyValue  target="nf" propertyName="lastOperationStatus" value="parseError"/>
				<AssertMethodValue method="value=application.nf.parseNumber('12 34 567')" valueExpression="value=NaN"/>
				<AssertPropertyValue  target="nf" propertyName="lastOperationStatus" value="parseError"/>
				<AssertMethodValue method="value=application.nf.parseNumber('12ab34cd')" valueExpression="value=NaN"/>
				<AssertPropertyValue  target="nf" propertyName="lastOperationStatus" value="parseError"/>-->
			</body>
		</TestCase>
		<TestCase testID="NF_Fallback_parseNumber_script_test8" description="using script NumberFormatter instance to parse null string" keywords="[NumberFormatter, parseNumber]">
			<setup>
				<ResetComponent target="nf" className="assets.FallbackNF"/>
				<RunCode code="application.nf.initialized(null,'nf')"/>
				<Pause timeout="{NFConstants.pauseTime}"/>

				<RunCode code="application.addStyleClient(application.nf)"/>
				<Pause timeout="{NFConstants.pauseTime}"/>

				<RunCode code="application.testTypeError(application.nf)" />
				<Pause timeout="{NFConstants.pauseTime}"/>
			</setup>
			<body>
				<AssertPropertyValue target="nf" propertyName="lastOperationStatus" value="noError"/>
				<AssertPropertyValue propertyName="text" target="testError"
									 errorArray="['TypeError: Error #1009:']"/>
			</body>
		</TestCase>

	</testCases>
</UnitTester>
