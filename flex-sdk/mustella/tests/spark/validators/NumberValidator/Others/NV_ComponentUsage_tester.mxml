<?xml version="1.0" encoding="utf-8"?>
<!--

  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.

-->
<UnitTester testDir="spark/validators/NumberValidator/Others/"  
			xmlns:mx="http://www.adobe.com/2006/mxml" 
			xmlns:s="library://ns.adobe.com/flex/spark" 
			xmlns="*" 
			testSWF="NV_ComponentUsage.mxml">

    <mx:Script>
    <![CDATA[
		import assets.NVConstants;
		
		import flash.globalization.NationalDigitsType;
		import flash.globalization.NumberFormatter;
		
		import mx.validators.NumberValidatorDomainType;
		
		import spark.formatters.NumberFormatter;
		public var nfGSLib:flash.globalization.NumberFormatter;
		
		public var nf:spark.formatters.NumberFormatter = new spark.formatters.NumberFormatter();
        public static function init(o:DisplayObject):void
        {

        }

    ]]>
    </mx:Script>

    <mx:Metadata>
    <![CDATA[
        [Mixin]
    ]]>
    </mx:Metadata>

	<testCases>
		<TestCase testID="NV_ComponentUsage_actualLocaleIDName_test1" description="test properties of module" keywords="[NumberValidator, Component]">
			<setup>
				<RunCode code="nfGSLib=new flash.globalization.NumberFormatter('ar-JO')" />
				<SetStyle target="customGroupComp.nvcLocale" styleName="locale" value="ar-JO" waitEvent="change"/>
			</setup>
			<body>
				<AssertPropertyValue target="customGroupComp.nvcLocale" propertyName="actualLocaleIDName" valueExpression="value=nfGSLib.actualLocaleIDName"/>
				<AssertPropertyValue target="customGroupComp.nvcLocale" propertyName="lastOperationStatus" valueExpression="value=nfGSLib.lastOperationStatus"/>
			</body>
		</TestCase>
		<TestCase testID="NV_ComponentUsage_allowNegative_test2" description="test properties of module" keywords="[NumberValidator, Component]">
			<setup>
				<SetProperty target="customGroupComp.nvcAllowNegative" propertyName="allowNegative" value="false"/>
				<Pause timeout="{NVConstants.pauseTime}"/>			
			</setup>
			<body>
				<AssertPropertyValue target="customGroupComp.nvcAllowNegative" propertyName="allowNegative" value="false"/>
				<AssertPropertyValue target="customGroupComp.nvcAllowNegative" propertyName="lastOperationStatus" valueExpression="value=NVConstants.noErrorMsg"/>
				<SetProperty target="customGroupComp.nvcAllowNegative" propertyName="source" valueExpression="value=application.nvSourceTI"/>
				<SetProperty target="customGroupComp.nvcAllowNegative" propertyName="property" value="text"/>
				<SetProperty target="nvSourceTI" propertyName="text" value="12345" waitEvent="updateComplete"/>
				<DispatchKeyEvent keys="[TAB,TAB]"/>
				<AssertEvent target="customGroupComp.nvcAllowNegative" eventName="valid" eventClass="mx.events::ValidationResultEvent"/>
				<AssertNoEvent target="customGroupComp.nvcAllowNegative" eventName="invalid" eventClass="mx.events::ValidationResultEvent"/>
			</body>
		</TestCase>		
		<TestCase testID="NV_ComponentUsage_decimalSeparator_test3" description="test properties of module" keywords="[NumberValidator, Component]">
			<setup>
				<RunCode code="nfGSLib=new flash.globalization.NumberFormatter('ja-JP')"/>
				<Pause timeout="{NVConstants.pauseTime}"/>
				<RunCode code="nfGSLib.decimalSeparator=';'"/>
				<SetProperty target="customGroupComp.nvcDecimalSeparator" propertyName="decimalSeparator" value=";"/>
				<SetProperty target="customGroupComp.nvcDecimalSeparator" propertyName="fractionalDigits" value="1"/>
			</setup>
			<body>
				<AssertPropertyValue target="customGroupComp.nvcDecimalSeparator" propertyName="decimalSeparator" valueExpression="value=nfGSLib.decimalSeparator"/>
				<AssertPropertyValue target="customGroupComp.nvcDecimalSeparator" propertyName="lastOperationStatus" valueExpression="value=nfGSLib.lastOperationStatus"/>
				<SetProperty target="customGroupComp.nvcDecimalSeparator" propertyName="source" valueExpression="value=application.nvSourceTI"/>
				<SetProperty target="customGroupComp.nvcDecimalSeparator" propertyName="property" value="text"/>
				<SetProperty target="nvSourceTI" propertyName="text" value="-1234;5" waitEvent="updateComplete"/>
				<DispatchKeyEvent keys="[TAB,TAB]"/>
				<AssertEvent target="customGroupComp.nvcDecimalSeparator" eventName="valid" eventClass="mx.events::ValidationResultEvent"/>
				<AssertNoEvent target="customGroupComp.nvcDecimalSeparator" eventName="invalid" eventClass="mx.events::ValidationResultEvent"/>
			</body>
		</TestCase>
		<TestCase testID="NV_ComponentUsage_domain_test4" description="test properties of module" keywords="[NumberValidator, Component]">
			<setup>
				<SetProperty target="customGroupComp.nvcDomain" propertyName="domain" valueExpression="value=NumberValidatorDomainType.INT"/>
				<Pause timeout="{NVConstants.pauseTime}"/>			
			</setup>
			<body>
				<AssertPropertyValue target="customGroupComp.nvcDomain" propertyName="domain" valueExpression="value=NumberValidatorDomainType.INT"/>
				<AssertPropertyValue target="customGroupComp.nvcDomain" propertyName="lastOperationStatus" valueExpression="value=NVConstants.noErrorMsg"/>
				<SetProperty target="customGroupComp.nvcDomain" propertyName="source" valueExpression="value=application.nvSourceTI"/>
				<SetProperty target="customGroupComp.nvcDomain" propertyName="property" value="text"/>
				<SetProperty target="customGroupComp.nvcDomain" propertyName="decimalSeparator" valueExpression="value='.'"/>
				<SetProperty target="nvSourceTI" propertyName="text" value="567.89" waitEvent="updateComplete"/>
				<DispatchKeyEvent keys="[TAB,TAB]"/>
				<AssertEvent target="customGroupComp.nvcDomain" eventName="invalid" eventClass="mx.events::ValidationResultEvent"/>
				<AssertNoEvent target="customGroupComp.nvcDomain" eventName="valid" eventClass="mx.events::ValidationResultEvent"/>
			</body>
		</TestCase>		
		<TestCase testID="NV_ComponentUsage_fractionalDigits_test5" description="test properties of module" keywords="[NumberValidator, Component]">
			<setup>
				<RunCode code="nfGSLib=new flash.globalization.NumberFormatter('ar-SA')"/>
				<Pause timeout="{NVConstants.pauseTime}"/>
				<RunCode code="nfGSLib.fractionalDigits=2"/>
				<RunCode code="nfGSLib.decimalSeparator='.'"/>
				<SetProperty target="customGroupComp.nvcFractionalDigits" propertyName="fractionalDigits" value="2"/>
				<SetProperty target="customGroupComp.nvcFractionalDigits" propertyName="decimalSeparator" value="."/>
			</setup>
			<body>
				<AssertPropertyValue target="customGroupComp.nvcFractionalDigits" propertyName="fractionalDigits" valueExpression="value=nfGSLib.fractionalDigits"/>
				<AssertPropertyValue target="customGroupComp.nvcFractionalDigits" propertyName="lastOperationStatus" valueExpression="value=nfGSLib.lastOperationStatus"/>
				<SetProperty target="customGroupComp.nvcFractionalDigits" propertyName="source" valueExpression="value=application.nvSourceTI"/>
				<SetProperty target="customGroupComp.nvcFractionalDigits" propertyName="property" value="text"/>
				<SetProperty target="nvSourceTI" propertyName="text" valueExpression="value=nfGSLib.formatNumber(12.34)" waitEvent="updateComplete"/>
				<DispatchKeyEvent keys="[TAB,TAB]"/>
				<AssertEvent target="customGroupComp.nvcFractionalDigits" eventName="valid" eventClass="mx.events::ValidationResultEvent"/>
				<AssertNoEvent target="customGroupComp.nvcFractionalDigits" eventName="invalid" eventClass="mx.events::ValidationResultEvent"/>
			</body>
		</TestCase>		
		<TestCase testID="NV_ComponentUsage_digitsType_test6" description="test properties of module" keywords="[NumberValidator, Component]">
			<setup>
				<RunCode code="nfGSLib=new flash.globalization.NumberFormatter('bg-BG')"/>
				<Pause timeout="{NVConstants.pauseTime}"/>
				<RunCode code="nfGSLib.digitsType=NationalDigitsType.DEVANAGARI"/>
				<SetProperty target="customGroupComp.nvcGroupingPattern" propertyName="source" valueExpression="value=application.nvSourceTI"/>
				<SetProperty target="customGroupComp.nvcGroupingPattern" propertyName="property" value="text"/>
				<SetProperty target="customGroupComp.nvcGroupingPattern" propertyName="digitsType" valueExpression="value=NationalDigitsType.DEVANAGARI"/>
			</setup>
			<body>
				<SetProperty target="nvSourceTI" propertyName="text" value="२३४५६७" waitEvent="updateComplete"/>
				<DispatchKeyEvent keys="[TAB,TAB]"/>
				<AssertEvent target="customGroupComp.nvcGroupingPattern" eventName="valid" eventClass="mx.events::ValidationResultEvent"/>
				<AssertNoEvent target="customGroupComp.nvcGroupingPattern" eventName="invalid" eventClass="mx.events::ValidationResultEvent"/>
			</body>
		</TestCase>		
		<TestCase testID="NV_ComponentUsage_groupingSeparator_test7" description="test properties of module" keywords="[NumberValidator, Component]">
			<setup>
				<RunCode code="nfGSLib=new flash.globalization.NumberFormatter('nb-NO')"/>
				<Pause timeout="{NVConstants.pauseTime}"/>
				<RunCode code="nfGSLib.groupingSeparator='*'"/>
				<SetProperty target="customGroupComp.nvcGroupingSeparator" propertyName="groupingSeparator" value="*"/>
				<SetProperty target="customGroupComp.nvcGroupingSeparator" propertyName="fractionalDigits" value="1"/>
			</setup>
			<body>
				<AssertPropertyValue target="customGroupComp.nvcGroupingSeparator" propertyName="groupingSeparator" valueExpression="value=nfGSLib.groupingSeparator"/>
				<AssertPropertyValue target="customGroupComp.nvcGroupingSeparator" propertyName="lastOperationStatus" valueExpression="value=nfGSLib.lastOperationStatus"/>
				<SetProperty target="customGroupComp.nvcGroupingSeparator" propertyName="source" valueExpression="value=application.nvSourceTI"/>
				<SetProperty target="customGroupComp.nvcGroupingSeparator" propertyName="property" value="text"/>
				<SetProperty target="nvSourceTI" propertyName="text" value="-6*23*456,7" waitEvent="updateComplete"/>
				<DispatchKeyEvent keys="[TAB,TAB]"/>
				<AssertEvent target="customGroupComp.nvcGroupingSeparator" eventName="valid" eventClass="mx.events::ValidationResultEvent"/>
				<AssertNoEvent target="customGroupComp.nvcGroupingSeparator" eventName="invalid" eventClass="mx.events::ValidationResultEvent"/>
			</body>
		</TestCase>	
		<TestCase testID="NV_ComponentUsage_maxValue_test8" description="test properties of module" keywords="[NumberValidator, Component]">
			<setup>
				<SetProperty target="customGroupComp.nvcMaxValue" propertyName="maxValue" value="100"/>
			</setup>
			<body>
				<AssertPropertyValue target="customGroupComp.nvcMaxValue" propertyName="maxValue" value="100"/>
				<AssertPropertyValue target="customGroupComp.nvcMaxValue" propertyName="lastOperationStatus" valueExpression="value=nfGSLib.lastOperationStatus"/>
				<SetProperty target="customGroupComp.nvcMaxValue" propertyName="source" valueExpression="value=application.nvSourceTI"/>
				<SetProperty target="customGroupComp.nvcMaxValue" propertyName="property" value="text"/>
				<SetProperty target="nvSourceTI" propertyName="text" value="100,1" waitEvent="updateComplete"/>
				<DispatchKeyEvent keys="[TAB,TAB]"/>
				<AssertEvent target="customGroupComp.nvcMaxValue" eventName="invalid" eventClass="mx.events::ValidationResultEvent"/>
				<AssertNoEvent target="customGroupComp.nvcMaxValue" eventName="valid" eventClass="mx.events::ValidationResultEvent"/>
			</body>
		</TestCase>		
		<TestCase testID="NV_ComponentUsage_minValue_test9" description="test properties of module" keywords="[NumberValidator, Component]">
			<setup>
				<SetProperty target="customGroupComp.nvcMinValue" propertyName="minValue" value="100"/>
			</setup>
			<body>
				<AssertPropertyValue target="customGroupComp.nvcMinValue" propertyName="minValue" value="100"/>
				<AssertPropertyValue target="customGroupComp.nvcMinValue" propertyName="lastOperationStatus" valueExpression="value=nfGSLib.lastOperationStatus"/>
				<SetProperty target="customGroupComp.nvcMinValue" propertyName="source" valueExpression="value=application.nvSourceTI"/>
				<SetProperty target="customGroupComp.nvcMinValue" propertyName="property" value="text"/>
				<SetProperty target="nvSourceTI" propertyName="text" value="100,1" waitEvent="updateComplete"/>
				<DispatchKeyEvent keys="[TAB,TAB]"/>
				<AssertEvent target="customGroupComp.nvcMinValue" eventName="valid" eventClass="mx.events::ValidationResultEvent"/>
				<AssertNoEvent target="customGroupComp.nvcMinValue" eventName="invalid" eventClass="mx.events::ValidationResultEvent"/>
			</body>
		</TestCase>	
		<TestCase testID="NV_ComponentUsage_negativeNumberFormat_test10" description="test properties of module" keywords="[NumberValidator, Component]">
			<setup>
				<RunCode code="nfGSLib=new flash.globalization.NumberFormatter('zh-CN')"/>
				<Pause timeout="{NVConstants.pauseTime}"/>
				<RunCode code="nfGSLib.negativeNumberFormat=4"/>
				<SetProperty target="customGroupComp.nvcNegativeNumberFormat" propertyName="negativeNumberFormat" value="4"/>
			</setup>
			<body>
				<AssertPropertyValue target="customGroupComp.nvcNegativeNumberFormat" propertyName="negativeNumberFormat" valueExpression="value=nfGSLib.negativeNumberFormat"/>
				<AssertPropertyValue target="customGroupComp.nvcNegativeNumberFormat" propertyName="lastOperationStatus" valueExpression="value=nfGSLib.lastOperationStatus"/>
				<SetProperty target="customGroupComp.nvcNegativeNumberFormat" propertyName="source" valueExpression="value=application.nvSourceTI"/>
				<SetProperty target="customGroupComp.nvcNegativeNumberFormat" propertyName="property" value="text"/>
				<SetProperty target="nvSourceTI" propertyName="text" value="(1234)" waitEvent="updateComplete"/>
				<DispatchKeyEvent keys="[TAB,TAB]"/>
				<AssertEvent target="customGroupComp.nvcNegativeNumberFormat" eventName="invalid" eventClass="mx.events::ValidationResultEvent"/>
				<AssertNoEvent target="customGroupComp.nvcNegativeNumberFormat" eventName="valid" eventClass="mx.events::ValidationResultEvent"/>
			</body>
		</TestCase>	
		<TestCase testID="NV_ComponentUsage_negativeSymbol_test11" description="test properties of module" keywords="[NumberValidator, Component]">
			<setup>
				<RunCode code="nfGSLib=new flash.globalization.NumberFormatter('zh-SG')"/>
				<Pause timeout="{NVConstants.pauseTime}"/>			
			</setup>
			<body>
				<AssertPropertyValue target="customGroupComp.nvcNegativeSymbol" propertyName="negativeSymbol" valueExpression="value=nfGSLib.negativeSymbol"/>
				<AssertPropertyValue target="customGroupComp.nvcNegativeSymbol" propertyName="lastOperationStatus" valueExpression="value=nfGSLib.lastOperationStatus"/>
				<SetProperty target="customGroupComp.nvcNegativeSymbol" propertyName="source" valueExpression="value=application.nvSourceTI"/>
				<SetProperty target="customGroupComp.nvcNegativeSymbol" propertyName="property" value="text"/>
				<SetProperty target="nvSourceTI" propertyName="text" value="-123" waitEvent="updateComplete"/>
				<DispatchKeyEvent keys="[TAB,TAB]"/>
				<AssertEvent target="customGroupComp.nvcNegativeSymbol" eventName="valid" eventClass="mx.events::ValidationResultEvent"/>
				<AssertNoEvent target="customGroupComp.nvcNegativeSymbol" eventName="invalid" eventClass="mx.events::ValidationResultEvent"/>
			</body>
		</TestCase>	
		<!--error messages-->
		<TestCase testID="NV_ComponentUsage_decimalPointCountError_test12" description="test properties of module" keywords="[NumberValidator, Component]">
			<setup>
			</setup>
			<body>
				<AssertPropertyValue target="customGroupComp.nvcDecimalPointCountError" propertyName="decimalPointCountError" value="The decimal separator can occur only once."/>
			</body>
		</TestCase>	
		<TestCase testID="NV_ComponentUsage_greaterThanMaxError_test13" description="test properties of module" keywords="[NumberValidator, Component]">
			<setup>
			</setup>
			<body>
				<AssertPropertyValue target="customGroupComp.nvcGreaterThanMaxError" propertyName="greaterThanMaxError" value="The number entered is too large."/>
			</body>
		</TestCase>	
		<TestCase testID="NV_ComponentUsage_fractionalDigitsError_test14" description="test properties of module" keywords="[NumberValidator, Component]">
			<setup>
			</setup>
			<body>
				<AssertPropertyValue target="customGroupComp.nvcFractionalDigitsError" propertyName="fractionalDigitsError" value="The amount entered has too many digits beyond the decimal point."/>
			</body>
		</TestCase>	
		<TestCase testID="NV_ComponentUsage_notAnIntegerError_test16" description="test properties of module" keywords="[NumberValidator, Component]">
			<setup>
			</setup>
			<body>
				<AssertPropertyValue target="customGroupComp.nvcNotAnIntegerError" propertyName="notAnIntegerError" value="The number must be an integer."/>
			</body>
		</TestCase>	
		<TestCase testID="NV_ComponentUsage_invalidCharError_test17" description="test properties of module" keywords="[NumberValidator, Component]">
			<setup>
			</setup>
			<body>
				<AssertPropertyValue target="customGroupComp.nvcInvalidCharError" propertyName="invalidCharError" value="The input contains invalid characters."/>
			</body>
		</TestCase>	
		<TestCase testID="NV_ComponentUsage_invalidFormatCharsErrorr_test18" description="test properties of module" keywords="[NumberValidator, Component]">
			<setup>
			</setup>
			<body>
				<AssertPropertyValue target="customGroupComp.nvcInvalidFormatCharsError" propertyName="invalidFormatCharsError" value="One of the formatting parameters is invalid."/>
			</body>
		</TestCase>	
		<TestCase testID="NV_ComponentUsage_lessThanMinError_test19" description="test properties of module" keywords="[NumberValidator, Component]">
			<setup>
			</setup>
			<body>
				<AssertPropertyValue target="customGroupComp.nvcLessThanMinError" propertyName="lessThanMinError" value="The amount entered is too small."/>
			</body>
		</TestCase>	
		<TestCase testID="NV_ComponentUsage_negativeError_test20" description="test properties of module" keywords="[NumberValidator, Component]">
			<setup>
			</setup>
			<body>
				<AssertPropertyValue target="customGroupComp.nvcNegativeError" propertyName="negativeError" value="The amount may not be negative."/>
			</body>
		</TestCase>	
		<TestCase testID="NV_ComponentUsage_negativeSymbolError_test21" description="test properties of module" keywords="[NumberValidator, Component]">
			<setup>
			</setup>
			<body>
				<AssertPropertyValue target="customGroupComp.nvcNegativeSymbolError" propertyName="negativeSymbolError" value="The negative symbol is repeated or not in right place."/>
			</body>
		</TestCase>	
		<TestCase testID="NV_ComponentUsage_negativeNumberFormatError_test22" description="test properties of module" keywords="[NumberValidator, Component]">
			<setup>
			</setup>
			<body>
				<AssertPropertyValue target="customGroupComp.nvcNegativeNumberFormatError" propertyName="negativeNumberFormatError" value="The negative format of the input number is incorrect."/>
			</body>
		</TestCase>	
		<TestCase testID="NV_ComponentUsage_parseError_test23" description="test properties of module" keywords="[NumberValidator, Component]">
			<setup>
			</setup>
			<body>
				<AssertPropertyValue target="customGroupComp.nvcParseError" propertyName="parseError" value="The input string could not be parsed."/>
			</body>
		</TestCase>	
		<TestCase testID="NV_ComponentUsage_localeUndefinedError_test24" description="test properties of module" keywords="[NumberValidator, Component]">
			<setup>
			</setup>
			<body>
				<AssertPropertyValue target="customGroupComp.nvcLocaleUndefinedError" propertyName="localeUndefinedError" value="Locale is undefined."/>
			</body>
		</TestCase>	
		<TestCase testID="NV_ComponentUsage_localeStyle_appSelector_test25" description="test application selector in component" keywords="[NumberValidator, Component]">
			<setup>
				<ResetComponent target="customGroupComp" className="assets.FlexNVComponent" waitEvent="updateComplete"/>
				<SetProperty target="" propertyName="appLocale" value="fr_FR"/>
				<Pause timeout="{NVConstants.pauseTime}"/>
			</setup>
			<body>
				<AssertPropertyValue target="customGroupComp.nvcAppSelector" propertyName="actualLocaleIDName" value="fr-FR"/>
				<AssertPropertyValue target="customGroupComp.nvcAppSelector" propertyName="lastOperationStatus" valueExpression="value=NVConstants.noErrorMsg"/>
			</body>
		</TestCase>
		<TestCase testID="NV_ComponentUsage_localeStyle_borderContainer_appSelector_test26" description="test application selector in borderContainer component" keywords="[NumberValidator, Component]">
			<setup>
				<ResetComponent target="customBorderContainerComp" className="assets.FlexNVBorderContainerComponent" waitEvent="updateComplete"/>
				<SetProperty target="" propertyName="appLocale" value="fr_FR"/>
				<Pause timeout="{NVConstants.pauseTime}"/>
			</setup>
			<body>
				<AssertPropertyValue target="customBorderContainerComp.nvcBorderContainerApp" propertyName="actualLocaleIDName" value="fr-FR"/>
				<AssertPropertyValue target="customBorderContainerComp.nvcBorderContainerApp" propertyName="lastOperationStatus" valueExpression="value=NVConstants.noErrorMsg"/>
			</body>
		</TestCase>
		<TestCase testID="NV_ComponentUsage_localeStyle_classSelector_test27" description="test class selector in component" keywords="[NumberValidator, Component]">
			<setup>
				<ResetComponent target="customGroupComp" className="assets.FlexNVComponent" waitEvent="updateComplete"/>
			</setup>
			<body>
				<AssertPropertyValue target="customGroupComp.nvcClass" propertyName="actualLocaleIDName" value="ja-JP"/>
				<AssertPropertyValue target="customGroupComp.nvcClass" propertyName="lastOperationStatus" valueExpression="value=NVConstants.noErrorMsg"/>
			</body>
		</TestCase>
		<TestCase testID="NV_ComponentUsage_localeStyle_IDSelector_test28" description="test ID selector in component" keywords="[NumberValidator, Component]">
			<setup>
				<ResetComponent target="customGroupComp" className="assets.FlexNVComponent" waitEvent="updateComplete"/>
			</setup>
			<body>
				<AssertPropertyValue target="customGroupComp.nvcID" propertyName="actualLocaleIDName" value="fr-CA"/>
				<AssertPropertyValue target="customGroupComp.nvcID" propertyName="lastOperationStatus" valueExpression="value=NVConstants.noErrorMsg"/>
			</body>
		</TestCase>
	</testCases>
	
</UnitTester>