<s:VGroup xmlns:fx="http://ns.adobe.com/mxml/2009" 
		  xmlns:s="library://ns.adobe.com/flex/spark" 
		  xmlns:mx="library://ns.adobe.com/flex/mx" 
		  width="100%" height="100%" 
		  updateComplete="updateCompleteHandler(event)" xmlns:assets="assets.*">
	
	<fx:Script>
		<![CDATA[
			import mx.events.FlexEvent;
			import mx.events.ValidationResultEvent;
			import mx.validators.ValidationResult;
			import mx.validators.Validator;
			
			import spark.validators.supportClasses.GlobalizationValidatorBase;
			
			public var cvScript:FallbackCV = new FallbackCV();
			
			protected function updateCompleteHandler(event:FlexEvent):void
			{
				this.addStyleClient(cvScript);
			}
			
			// Define the validator Array.
			private var _curValidatorsArr:Array;
			
			private function initCurValidatorArray():void {
				_curValidatorsArr = [sparkCurV, cvScript];
			}
			
			protected function uiBTAll_clickHandler(event:MouseEvent):void
			{
				initCurValidatorArray();
				
				var resultArr:Array = GlobalizationValidatorBase.validateAll(_curValidatorsArr);
				if (resultArr != null) {
					uiLb.text = new String(resultArr.length);
				} else {
					uiLb.text = "null";
				}
			}
			
			protected function uiBTAllMx_clickHandler(event:MouseEvent):void
			{
				initCurValidatorArray();
				
				var resultArr:Array = Validator.validateAll(_curValidatorsArr);
				if (resultArr != null) {
					uiLb.text = new String(resultArr.length);
				} else {
					uiLb.text = "null";
				}
			}
			
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<assets:FallbackCV id="sparkCurV" />
		
		<assets:FallbackCF id="cf" />
	</fx:Declarations>
	
	<s:TextInput id="uiTISpakrCV" />
	<s:RichText id="uiTISparkCVScript" />
	<s:Button id="uiBTAll" label="uiBTAll" click="uiBTAll_clickHandler(event)"/>
	<s:Button id="uiBTAllMx" label="uiBTAllMx" click="uiBTAllMx_clickHandler(event)"/>
	<s:Label id="uiLb" />
</s:VGroup>