<UnitTester testDir="spark/validators/CurrencyValidator/Properties/" testSWF="CV_currencyStringError.mxml" xmlns:mx="http://www.adobe.com/2006/mxml" xmlns:s="library://ns.adobe.com/flex/spark" xmlns="*">
    <mx:Script><![CDATA[
			import assets.CVConstant;
			
			import mx.validators.CurrencyValidator;
			
			import flash.globalization.LocaleID;
			import spark.validators.CurrencyValidator;
			import spark.formatters.CurrencyFormatter;
			import spark.globalization.LastOperationStatus;
			
			public var cvGSLib:flash.globalization.CurrencyFormatter;
			
			public static function init(o:DisplayObject):void
			{
			}
		]]></mx:Script>
    <mx:Metadata><![CDATA[
		
		[Mixin]
		
		]]></mx:Metadata>
    <testCases>
        <TestCase testID="CV_currencyStringError_default_test_1" description="the test case is for Checking default currencyStringError" keywords="[CurrencyValidator, currencyStringError]">
            <setup>
                <ResetComponent target="cv" className="spark.validators.CurrencyValidator"/>
                <RunCode code="application.cv.initialized(null,'cv')"/>
                <Pause timeout="{CVConstant.pauseTime}"/>
            </setup>
            <body>
                <AssertPropertyValue target="cv" propertyName="currencyStringError" value="Currency name is repeated or not correct."/>
            </body>
        </TestCase>
		
		<TestCase testID="CV_currencyStringError_default_test_1_2" description="the test case is for Checking default currencyStringError" keywords="[CurrencyValidator, currencyStringError]">
			<setup>
				<ResetComponent target="cvScript" className="spark.validators.CurrencyValidator"/>
				<RunCode code="application.cvScript.initialized(null,'cvScript')"/>
				<Pause timeout="{CVConstant.pauseTime}"/>
			</setup>
			<body>
				<AssertPropertyValue target="cvScript" propertyName="currencyStringError" value="Currency name is repeated or not correct."/>
			</body>
		</TestCase>
		
		
        <TestCase testID="CV_currencyStringError_zh_CN_test_2" description="the test case is for Checking currencyStringError for specified locale" keywords="[CurrencyValidator, currencyStringError]">
            <setup>
                <ResetComponent target="cv" className="spark.validators.CurrencyValidator"/>
                <RunCode code="application.cv.initialized(null,'cv')"/>
                <Pause timeout="{CVConstant.pauseTime}"/>
                <SetStyle styleName="locale" target="cv" value="zh_CN" waitEvent="change"/>
            </setup>
            <body>
                <AssertPropertyValue target="cv" propertyName="currencyStringError" value="Currency name is repeated or not correct."/>
            </body>
        </TestCase>
        <TestCase testID="CV_currencyStringError_setcurrencyStringError_test_3" description="the test case is for setting currencyStringError for default locale" keywords="[CurrencyValidator, currencyStringError]">
            <setup>
                <ResetComponent target="cv" className="spark.validators.CurrencyValidator"/>
                <RunCode code="application.cv.initialized(null,'cv')"/>
                <Pause timeout="{CVConstant.pauseTime}"/>
                <SetProperty propertyName="currencyStringError" target="cv" value="this is currencyStringError"/>
            </setup>
            <body>
                <AssertPropertyValue target="cv" propertyName="currencyStringError" value="this is currencyStringError"/>
                <AssertPropertyValue target="cv" propertyName="lastOperationStatus" valueExpression="value=LastOperationStatus.NO_ERROR"/>
            </body>
        </TestCase>
        <TestCase testID="CV_currencyStringError_ar_xx_test_4" description="the test case is for Checking currencyStringError for specified locale" keywords="[CurrencyValidator, currencyStringError]">
            <setup>
                <ResetComponent target="cv" className="spark.validators.CurrencyValidator"/>
                <RunCode code="application.cv.initialized(null,'cv')"/>
				<Pause timeout="{CVConstant.pauseTime}"/>
                <RunCode code="cvGSLib=new flash.globalization.CurrencyFormatter('ar-xx')"/>
                <Pause timeout="{CVConstant.pauseTime}"/>
                <SetStyle styleName="locale" target="cv" value="ar-xx" waitEvent="change"/>
            </setup>
            <body>
                <AssertPropertyValue target="cv" propertyName="currencyStringError" value="Currency name is repeated or not correct."/>
                <AssertPropertyValue target="cv" propertyName="lastOperationStatus" valueExpression="value=LastOperationStatus.USING_FALLBACK_WARNING"/>
            </body>
        </TestCase>
        <TestCase testID="CV_currencyStringError_fr_xx_test_5" description="the test case is for Checking currencyStringError for specified locale" keywords="[CurrencyValidator, currencyStringError]">
            <setup>
                <ResetComponent target="cv" className="spark.validators.CurrencyValidator"/>
                <RunCode code="application.cv.initialized(null,'cv')"/>
				<Pause timeout="{CVConstant.pauseTime}"/>
                <RunCode code="cvGSLib=new flash.globalization.CurrencyFormatter('fr-xx')"/>
                <Pause timeout="{CVConstant.pauseTime}"/>
                <SetStyle styleName="locale" target="cv" value="fr-xx" waitEvent="change"/>
            </setup>
            <body>
                <AssertPropertyValue target="cv" propertyName="currencyStringError" value="Currency name is repeated or not correct."/>
                <AssertPropertyValue target="cv" propertyName="lastOperationStatus" valueExpression="value=LastOperationStatus.USING_FALLBACK_WARNING"/>
            </body>
        </TestCase>
        <TestCase testID="CV_currencyStringError_setcurrencyStringError_test_6" description="set currencyStringError in script" keywords="[CurrencyValidator, currencyStringError]">
            <setup>
                <ResetComponent target="cvScript" className="spark.validators.CurrencyValidator"/>
                <RunCode code="application.cvScript.initialized(null,'cvScript')"/>
                <Pause timeout="{CVConstant.pauseTime}"/>
                <SetStyle styleName="locale" target="cvScript" value="zh_CN" waitEvent="change"/>
                <RunCode code="application.setCVcurrencyStringError(application.cvScript, 'this is currencyStringError')"/>
                <Pause timeout="{CVConstant.pauseTime}"/>
            </setup>
            <body>
                <AssertPropertyValue target="cvScript" propertyName="currencyStringError" value="this is currencyStringError"/>
                <AssertPropertyValue target="cvScript" propertyName="lastOperationStatus" valueExpression="value=LastOperationStatus.NO_ERROR"/>
            </body>
        </TestCase>
        <TestCase testID="CV_currencyStringError_setcurrencyStringError_test_7" description="set currencyStringError for specified locale" keywords="[CurrencyValidator, currencyStringError]">
            <setup>
                <ResetComponent target="cv" className="spark.validators.CurrencyValidator"/>
                <RunCode code="application.cv.initialized(null,'cv')"/>
                <Pause timeout="{CVConstant.pauseTime}"/>
                <SetStyle styleName="locale" target="cv" value="zh_CN" waitEvent="change"/>
                <SetProperty propertyName="currencyStringError" target="cv" value="this is currencyStringError"/>
            </setup>
            <body>
                <AssertPropertyValue target="cv" propertyName="currencyStringError" value="this is currencyStringError"/>
                <AssertPropertyValue target="cv" propertyName="lastOperationStatus" valueExpression="value=LastOperationStatus.NO_ERROR"/>
            </body>
        </TestCase>
        <TestCase testID="CV_currencyStringError_empty_test_8" description="set invalid currencyStringError" keywords="[CurrencyValidator, currencyStringError]">
            <setup>
                <ResetComponent target="cvScript" className="spark.validators.CurrencyValidator"/>
                <RunCode code="application.cvScript.initialized(null,'cvScript')"/>
                <Pause timeout="{CVConstant.pauseTime}"/>
                <SetStyle styleName="locale" target="cvScript" value="this is currencyStringError" waitEvent="change"/>
            </setup>
            <body>
                <AssertMethodValue method="value=application.setCVcurrencyStringError(application.cvScript, '')" value="No_Error"/>
                <AssertPropertyValue target="cvScript" propertyName="currencyStringError" value="Currency name is repeated or not correct."/>
                <AssertPropertyValue target="cvScript" propertyName="lastOperationStatus" valueExpression="value=LastOperationStatus.USING_DEFAULT_WARNING"/>
            </body>
        </TestCase>
        <TestCase testID="CV_currencyStringError_nall_test_9" description="set currencyStringError to nall" keywords="[CurrencyValidator, currencyStringError]">
            <setup>
                <ResetComponent target="cvScript" className="spark.validators.CurrencyValidator"/>
                <RunCode code="application.cvScript.initialized(null,'cvScript')"/>
                <Pause timeout="{CVConstant.pauseTime}"/>
                <SetStyle styleName="locale" target="cvScript" value="zh_CN" waitEvent="change"/>
            </setup>
            <body>
                <AssertMethodValue method="value=application.setCVcurrencyStringError(application.cvScript, null)" value="No_Error"/>
                <AssertPropertyValue target="cvScript" propertyName="currencyStringError" value="Currency name is repeated or not correct."/>
                <AssertPropertyValue target="cvScript" propertyName="lastOperationStatus" valueExpression="value=LastOperationStatus.NO_ERROR"/>
            </body>
        </TestCase>
        <TestCase testID="CV_currencyStringError_inline_test_10" description="Set currencyStringError from inline" keywords="[CurrencyValidator, currencyStringError]">
            <setup/>
            <body>
                <AssertPropertyValue target="cvInline" propertyName="currencyStringError" value="this is currencyStringError"/>
            </body>
        </TestCase>
        <TestCase testID="CV_currencyStringError_inline_changeLocale_test_11" description="if property currencyStringError has been set inline, it doesnot change with locale" keywords="[CurrencyValidator, currencyStringError]">
            <setup>
                <SetStyle target="cvInline_ChangeLocale" styleName="locale" value="fr-FR" waitEvent="change"/>
            </setup>
            <body>
                <AssertPropertyValue target="cvInline_ChangeLocale" propertyName="currencyStringError" value="this is currencyStringError"/>
            </body>
        </TestCase>
        <TestCase testID="CV_currencyStringError_nolocale_test_12" description="the test case is for Checking currencyStringError when locale undefined" keywords="[CurrencyValidator, currencyStringError]">
            <setup>
                <ResetComponent target="cvScript" className="spark.validators.CurrencyValidator"/>
                <RunCode code="application.cv.initialized(null,'cv')"/>
				<Pause timeout="{CVConstant.pauseTime}"/>
            </setup>
            <body>
                <AssertPropertyValue target="cvScript" propertyName="currencyStringError" value="Currency name is repeated or not correct."/>
                <AssertPropertyValue target="cvScript" propertyName="lastOperationStatus" valueExpression="value=LastOperationStatus.NO_ERROR"/>
            </body>
        </TestCase>
		
		<TestCase testID="CV_currencyStringError_binding_inline_test_13" description="check binding with inline CV" keywords="[CurrencyValidator, currencyStringError]">
			<setup>
				<ResetComponent target="cvBinding" className="spark.validators.CurrencyValidator"/>
				<RunCode code="application.cvBinding.initialized(null,'cvBinding')"/>
				<Pause timeout="{CVConstant.pauseTime}"/>
			</setup>
			<body>
				<SetProperty target="cvBinding" propertyName="currencyStringError" value="this is new" waitEvent="change"/>
				<AssertPropertyValue target="inlineLB" propertyName="text" value="this is new"/>
			</body>
		</TestCase>
		
		<TestCase testID="CV_currencyStringError_binding_script_test_14" description="check binding with script CV" keywords="[CurrencyValidator, currencyStringError]">
			<setup>
				<RunCode code="application.creCV(application.cvScriptBinding)"/>
				<Pause timeout="{CVConstant.pauseTime}"/>
			</setup>
			<body>
				<SetProperty target="cvScriptBinding" propertyName="currencyStringError" value="this is newer" waitEvent="change"/>
				<AssertPropertyValue target="scriptLB" propertyName="text" value="this is newer"/>
			</body>
		</TestCase>

    </testCases>
</UnitTester>