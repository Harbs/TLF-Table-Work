<?xml version="1.0" encoding="utf-8"?> 
<!--

  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.

-->
<UnitTester testDir="RuntimeLocalization/RTL_HaloSkin/Integration/"  xmlns:mx="http://www.adobe.com/2006/mxml" xmlns="*" testSWF="RTL_ResourceBundleMetadata_frFR_Read_Halo.mxml" > 
 
    <!-- this set of lines form a template that must be in each unit test --> 
        <mx:Script><![CDATA[ 
            public static function init(o:DisplayObject):void{} 
        ]]></mx:Script> 
 
        <mx:Metadata><![CDATA[ 
            [Mixin] 
        ]]></mx:Metadata>    
    <!-- end of set of lines that must be in each unit test --> 
 
    <mx:Script><![CDATA[ 
    import mx.controls.sliderClasses.SliderDataTip;
    import mx.managers.SystemManager;
    import mx.resources.ResourceManager;

    private var monthIndex:int; 
    private var frMonths:Array = ["fr_January","fr_February","fr_March","fr_April","fr_May","fr_June","fr_July","fr_August","fr_September","fr_October","fr_November","fr_December"]; 

    ]]></mx:Script> 
 
    <testCases> 

<!-- Command line compile from the SWFs dir:
$MAIN_M -source-path+="$MFDIR" -source-path+=../Integration -source-path+=Assets/bundles/custom/fr_FR -allow-source-path-overlap -library-path+=Assets/bundles/framework/frResources.swc -includes=PlaybackControl,ObjectSnifferRemote,MouseSnifferRemot,SendResultsToSnifferClient,RTL_Integration_ATResource_1Locale RTL_ResourceBundleMetadata_frFR_Read.mxml
-->
         
<!-- 
======================================================== 
The associated swf launches in the fr_FR locale. 
======================================================== 
--> 
        <TestCase frequency="all" testID="RTL_ATResource_Boolean_Bundle1_Property_False_fr_Halo" description="Test that resourceManager.getXX() can be used to specify a custom resource as a Boolean in a property." keywords="[Runtime Localization,ATResource,Boolean]" > 
            <setup>
                <ResetComponent target="ck1" className="Components.CCheckBoxSelectedGetBooleanLeft" waitEvent="updateComplete" />
                <DispatchMouseEvent target="ck1" localX="10" localY="10" type="rollOver" waitEvent="updateComplete" />
            </setup>
            <body> 
                <CompareBitmap target="ck1" url="../Integration/Baselines/$testID.png"  />
            </body> 
        </TestCase> 
 
        <TestCase frequency="all" testID="RTL_ATResource_Boolean_Bundle1_Property_True_fr_Halo" description="Test that resourceManager.getXX() can be used to specify a custom resource as a Boolean in a property." keywords="[Runtime Localization,ATResource,Boolean]" > 
            <setup>
                <ResetComponent target="ck2" className="Components.CCheckBoxSelectedGetBooleanRight" waitEvent="updateComplete" />
                <DispatchMouseEvent target="ck2" localX="10" localY="10" type="rollOver" waitEvent="updateComplete" />
            </setup> 
            <body> 
                <CompareBitmap target="ck2" url="../Integration/Baselines/$testID.png"  />
            </body> 
        </TestCase> 
 
        <TestCase frequency="all" testID="RTL_ATResource_StringArray_Bundle1_Property_fr_Halo" description="Test that resourceManager.getXX() can be used to specify a custom resource as a StringArray in a property." keywords="[Runtime Localization,ATResource,StringArray]" > 
            <setup>
                <ResetComponent target="dc1" className="Components.CDateChooserMonthNamesGetStringArray" waitEvent="updateComplete" />
                <SetProperty target="dc1" propertyName="displayedMonth" valueExpression="value = monthIndex = (application.dc1.displayedMonth == 11 ? 0 : application.dc1.displayedMonth + 1);" waitEvent="updateComplete" waitTarget="dc1" />
            </setup> 
            <body> 
                <AssertPropertyValue target="dc1.mx_internal:monthDisplay" propertyName="text" valueExpression="value=frMonths[monthIndex]" />                  
            </body> 
        </TestCase> 
 
        <!-- The panel on the left has square bottom corners, and the panel on the right has round bottom corners. --> 
        <TestCase frequency="all" testID="RTL_ATResource_Boolean_Bundle1_Style_fr_1_Halo" description="Test that resourceManager.getXX() can be used to specify a custom resource as a Boolean in a style." keywords="[Runtime Localization,ATResource,Boolean,Style]" > 
            <setup> 
                <ResetComponent target="pnl1" className="Components.CPanelRoundedCornersGetBooleanLeft" waitEvent="updateComplete" />
           </setup>
           <body> 
               <AssertPixelValue target="pnl1" x="19" y="19" value="0x5AAB5A" />                
           </body> 
        </TestCase> 
 
        <!-- The panel on the left has square bottom corners, and the panel on the right has round bottom corners. --> 
        <TestCase frequency="all" testID="RTL_ATResource_Boolean_Bundle1_Style_fr_2_Halo" description="Test that resourceManager.getXX() can be used to specify a custom resource as a Boolean in a style." keywords="[Runtime Localization,ATResource,Boolean,Style]" > 
            <setup> 
                <ResetComponent target="pnl2" className="Components.CPanelRoundedCornersGetBooleanRight" waitEvent="updateComplete" />
           </setup>
           <body> 
               <AssertPixelValue target="pnl2" x="19" y="19" value="0x006600" />                
           </body> 
        </TestCase> 
 
        <!-- Check that the button is green on top and blue at the bottom. --> 
        <TestCase frequency="all" testID="RTL_ATResource_StringArray_Bundle1_Style_fr_Halo" description="Test that resourceManager.getXX() can be used to specify a custom resource as a StringArray in a style." keywords="[Runtime Localization,ATResource,StringArray,Style]" > 
            <setup>
                <ResetComponent target="btn1" className="Components.CButtonFillColorsGetStringArray" waitEvent="updateComplete" />
                <DispatchMouseEvent target="btn1" localX="10" localY="10" type="rollOver" waitEvent="updateComplete" />
            </setup> 
            <body> 
                <AssertPixelValue target="btn1" x="20" y="1" value="0x4CA74C" /> 
                <AssertPixelValue target="btn1" x="20" y="17" value="0x003D88" />                  
            </body> 
        </TestCase> 
 
        <!-- Verify the backwards checkmark by examining a line across the upper half of the check box.  The tail of the check should be on the left. --> 
        <TestCase frequency="all" testID="RTL_ATResource_Class_ClassReference_Bundle1_Style_fr_Halo" description="Test that resourceManager.getXX() can be used to specify a custom resource as a Class in a style, using ClassReference." keywords="[Runtime Localization,ATResource,Class,Style,ClassReference]" > 
            <setup>
                <ResetComponent target="ck3" className="Components.CCheckBoxSelectedIconsGetClass" waitEvent="updateComplete" />
                <DispatchMouseEvent target="ck3" localX="10" localY="10" type="rollOver" waitEvent="updateComplete" />
            </setup> 
            <body> 
                <CompareBitmap target="ck3" url="../Integration/Baselines/$testID.png"  />
            </body> 
        </TestCase> 
    </testCases> 
</UnitTester> 
