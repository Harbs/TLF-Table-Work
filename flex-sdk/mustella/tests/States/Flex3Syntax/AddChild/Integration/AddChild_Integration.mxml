<?xml version="1.0" encoding="utf-8"?>
<!--

  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.

-->
<UnitTester testDir="States/Flex3Syntax/AddChild/Integration/"  xmlns:mx="http://www.adobe.com/2006/mxml" xmlns="*" testSWF="AddChildApp01.mxml">

	<!-- this set of lines form a template that must be in each unit test -->
	<mx:Script>
	<![CDATA[
	public static function init(o:DisplayObject):void
	{
	}					
	]]>
	</mx:Script>
	<mx:Metadata>
	<![CDATA[
		[Mixin]
	]]>
	</mx:Metadata>	
	<!-- end of set of lines that must be in each unit test -->

	<mx:Script>
	<![CDATA[
        import mx.core.Application;
        
        public var anInt:int = 0;
	]]>
	</mx:Script>

	<testCases>

        <!-- The setup sets the app. to a ReinitState, then to the default state.  We need to start each
             test in a default state, but don't know if the previous test run left us in that state or some other.
             If it left us in the default state, then we can't reset to the default state and then wait for some 
             event, because the app. will be in that state and no event will occur.
        -->
        
        <!-- Use AddChild with no extra parameters (basic sanity tests with bitmap compares). -->
        <TestCase testID="AddChild_None_TextInput_01" keywords="[States,AddChild]" description="AddChild adds a Text control when changing from the default state to a new state.">
            <setup>
                <SetProperty target="{Application.application}" propertyName="currentState" value="ReinitState" waitTarget="{Application.application}" waitEvent="currentStateChange" />
                <SetProperty target="{Application.application}" propertyName="currentState" value="" waitTarget="{Application.application}" waitEvent="currentStateChange" />
            </setup>
            <body>
                <SetProperty target="{Application.application}" propertyName="currentState" value="AddChild_None_TextInput_01" waitTarget="{Application.application}" waitEvent="currentStateChange" />
                <AssertPropertyValue target="addChild9.target" propertyName="parent" value="AddChildApp01_0" />
                <CompareBitmap target="tiAddChild_None_TextInput_01" url="../Integration/baselines/AddChild_None_TextInput_01.png" />
            </body>
        </TestCase>

        <TestCase testID="AddChild_None_TextInput_02" keywords="[States,AddChild]" description="AddChild adds a Text control when changing from a non-default state to a new state.">
            <setup>
                <SetProperty target="{Application.application}" propertyName="currentState" value="ReinitState" waitTarget="{Application.application}" waitEvent="currentStateChange" />
                <SetProperty target="{Application.application}" propertyName="currentState" value="" waitTarget="{Application.application}" waitEvent="currentStateChange" />
            </setup>
            <body>
                <SetProperty target="{Application.application}" propertyName="currentState" value="AddChild_None_TextInput_01" waitTarget="{Application.application}" waitEvent="currentStateChange" />
                <SetProperty target="{Application.application}" propertyName="currentState" value="AddChild_None_TextInput_02" waitTarget="{Application.application}" waitEvent="currentStateChange" />
                <AssertPropertyValue target="addChild10.target" propertyName="parent" value="AddChildApp01_0" />
                <CompareBitmap target="tiAddChild_None_TextInput_02" url="../Integration/baselines/AddChild_None_TextInput_02.png" />
            </body>
        </TestCase>

        <TestCase testID="AddChild_None_TextInput_03" keywords="[States,AddChild]" description="Confirm that the target added by AddChild does not exist before AddChild is called.">
            <setup>
                <SetProperty target="{Application.application}" propertyName="currentState" value="ReinitState" waitTarget="{Application.application}" waitEvent="currentStateChange" />
                <SetProperty target="{Application.application}" propertyName="currentState" value="" waitTarget="{Application.application}" waitEvent="currentStateChange" />
            </setup>
            <body>
                <AssertMethodValue method="value=Application.application.tiAddChild_None_TextInput_03 == null" value="true" />
            </body>
        </TestCase>

	</testCases>                	     
</UnitTester>
