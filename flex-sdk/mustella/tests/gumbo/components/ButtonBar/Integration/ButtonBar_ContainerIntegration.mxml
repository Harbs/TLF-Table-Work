<?xml version="1.0" encoding="utf-8"?>
<!--

  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.

-->
<UnitTester testDir="gumbo/components/ButtonBar/Integration/"  xmlns:mx="http://www.adobe.com/2006/mxml" xmlns="*" testSWF="ButtonBarApp1.mxml">

	<!-- this set of lines form a template that must be in each unit test -->
	<mx:Script>
	<![CDATA[
	public static function init(o:DisplayObject):void
	{
	}					
	]]>
	</mx:Script>
	<mx:Metadata>
	<![CDATA[
		[Mixin]
	]]>
	</mx:Metadata>	
	<!-- end of set of lines that must be in each unit test -->

	<mx:Script>
	<![CDATA[

	]]>
	</mx:Script>

	<testCases>

<!--
=============
States
=============
-->

<TestCase testID="containerIntegration_box_test1" keywords="[ButtonBar,container,box]" description="Put an ButtonBar in a Box." >
    <setup>
        <ResetComponent target="box2" className="Assets::CustomFxButtonBar8" waitEvent="updateComplete" />
    </setup>
    <body>
        <CompareBitmap url="../Integration/baselines/$testID.png" target="box1" numColorVariances="10" maxColorVariance="1"/>
    </body>
</TestCase>

<TestCase testID="containerIntegration_box_test2" keywords="[ButtonBar,container,box]" description="Put an ButtonBar in a Box and set the FxButtonBar's width." >
    <setup>
        <ResetComponent target="box2" className="Assets::CustomFxButtonBar8" waitEvent="updateComplete" />
        <SetProperty target="box2.bb9" propertyName="width" value="100" waitEvent="updateComplete" />
    </setup>
    <body>
        <CompareBitmap url="../Integration/baselines/$testID.png" target="box1" />
    </body>
</TestCase>

<TestCase testID="containerIntegration_box_test3" keywords="[ButtonBar,container,box]" description="Put an ButtonBar in a Box and scroll right." >
    <setup>
        <ResetComponent target="box2" className="Assets::CustomFxButtonBar8" waitEvent="updateComplete" />
    </setup>
    <body>
        <DispatchMouseEvent target="box2.horizontalScrollBar.mx_internal:downArrow" type="rollOver" localY="2" localX="2" waitTarget="box2.horizontalScrollBar.mx_internal:downArrow" waitEvent="updateComplete" />
        <DispatchMouseEvent target="box2.horizontalScrollBar.mx_internal:downArrow" type="mouseDown" localY="2" localX="2" waitTarget="box2.horizontalScrollBar.mx_internal:downArrow" waitEvent="updateComplete" />
        <DispatchMouseEvent target="box2.horizontalScrollBar.mx_internal:downArrow" type="mouseUp" localY="2" localX="2" waitTarget="box2.horizontalScrollBar.mx_internal:downArrow" waitEvent="updateComplete" />
        <DispatchMouseEvent target="box2.horizontalScrollBar.mx_internal:downArrow" type="mouseDown" localY="2" localX="2" waitTarget="box2.horizontalScrollBar.mx_internal:downArrow" waitEvent="updateComplete" />
        <DispatchMouseEvent target="box2.horizontalScrollBar.mx_internal:downArrow" type="mouseUp" localY="2" localX="2" waitTarget="box2.horizontalScrollBar.mx_internal:downArrow" waitEvent="updateComplete" />
        <DispatchMouseEvent target="box2.horizontalScrollBar.mx_internal:downArrow" type="mouseDown" localY="2" localX="2" waitTarget="box2.horizontalScrollBar.mx_internal:downArrow" waitEvent="updateComplete" />
        <DispatchMouseEvent target="box2.horizontalScrollBar.mx_internal:downArrow" type="mouseUp" localY="2" localX="2" waitTarget="box2.horizontalScrollBar.mx_internal:downArrow" waitEvent="updateComplete" />
        <DispatchMouseEvent target="box2.horizontalScrollBar.mx_internal:downArrow" type="mouseDown" localY="2" localX="2" waitTarget="box2.horizontalScrollBar.mx_internal:downArrow" waitEvent="updateComplete" />
        <DispatchMouseEvent target="box2.horizontalScrollBar.mx_internal:downArrow" type="mouseUp" localY="2" localX="2" waitTarget="box2.horizontalScrollBar.mx_internal:downArrow" waitEvent="updateComplete" />
        <DispatchMouseEvent target="box2.horizontalScrollBar.mx_internal:downArrow" type="mouseDown" localY="2" localX="2" waitTarget="box2.horizontalScrollBar.mx_internal:downArrow" waitEvent="updateComplete" />
        <DispatchMouseEvent target="box2.horizontalScrollBar.mx_internal:downArrow" type="mouseUp" localY="2" localX="2" waitTarget="box2.horizontalScrollBar.mx_internal:downArrow" waitEvent="updateComplete" />
        <DispatchMouseEvent target="box2.horizontalScrollBar.mx_internal:downArrow" type="mouseDown" localY="2" localX="2" waitTarget="box2.horizontalScrollBar.mx_internal:downArrow" waitEvent="updateComplete" />
        <DispatchMouseEvent target="box2.horizontalScrollBar.mx_internal:downArrow" type="mouseUp" localY="2" localX="2" waitTarget="box2.horizontalScrollBar.mx_internal:downArrow" waitEvent="updateComplete" />
        <DispatchMouseEvent target="box2.horizontalScrollBar.mx_internal:downArrow" type="mouseDown" localY="2" localX="2" waitTarget="box2.horizontalScrollBar.mx_internal:downArrow" waitEvent="updateComplete" />
        <DispatchMouseEvent target="box2.horizontalScrollBar.mx_internal:downArrow" type="mouseUp" localY="2" localX="2" waitTarget="box2.horizontalScrollBar.mx_internal:downArrow" waitEvent="updateComplete" />
        <DispatchMouseEvent target="box2.horizontalScrollBar.mx_internal:downArrow" type="mouseDown" localY="2" localX="2" waitTarget="box2.horizontalScrollBar.mx_internal:downArrow" waitEvent="updateComplete" />
        <DispatchMouseEvent target="box2.horizontalScrollBar.mx_internal:downArrow" type="mouseUp" localY="2" localX="2" waitTarget="box2.horizontalScrollBar.mx_internal:downArrow" waitEvent="updateComplete" />
        <DispatchMouseEvent target="box2.horizontalScrollBar.mx_internal:downArrow" type="mouseDown" localY="2" localX="2" waitTarget="box2.horizontalScrollBar.mx_internal:downArrow" waitEvent="updateComplete" />
        <DispatchMouseEvent target="box2.horizontalScrollBar.mx_internal:downArrow" type="mouseUp" localY="2" localX="2" waitTarget="box2.horizontalScrollBar.mx_internal:downArrow" waitEvent="updateComplete" />
        <CompareBitmap url="../Integration/baselines/$testID.png" numColorVariances="1" maxColorVariance="10" target="box1" />
    </body>
</TestCase>

<TestCase testID="containerIntegration_panel_test5" keywords="[ButtonBar,container,box]" description="Put an ButtonBar in an FxPanel." >
    <setup>
        <ResetComponent target="panel1" className="Assets::CustomFxButtonBar9" waitEvent="updateComplete" />
    </setup>
    <body>
        <CompareBitmap url="../Integration/baselines/$testID.png" target="box3" />
    </body>
</TestCase>

<TestCase testID="containerIntegration_popup_test6" keywords="[ButtonBar,container,TitleWindow,popup]" description="Put an ButtonBar in a popup (TitleWindow)." >
    <body>
        <RunCode code="application.showPopUp()" />
        <WaitForEffectsToEnd />
        <Pause timeout="500"/>
        <SetProperty propertyName="height" value="60" target="thePopUp" />
        <SetProperty propertyName="width" value="210" target="thePopUp" waitTarget="thePopUp" waitEvent="updateComplete" />
        <CompareBitmap url="../Integration/baselines/$testID.png" target="thePopUp" />
        <RunCode code="application.hidePopUp()" />
        <WaitForEffectsToEnd />
    </body>
</TestCase>

<TestCase testID="closeThePopup" keywords="[ButtonBar]" description="Sometimes you just need to run some code independent of a test case.  If the previos test fails, the popup will never go away, and many failures will result.  There is no way to work around this." >
    <body>
        <RunCode code="application.hidePopUp()" />
        <WaitForEffectsToEnd />
    </body>
</TestCase>

    </testCases>
</UnitTester>
