<?xml version="1.0" encoding="utf-8"?>
<!--

  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.

-->
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:mx="library://ns.adobe.com/flex/mx" xmlns:s="library://ns.adobe.com/flex/spark"
             xmlns:custom="assets.*"
             backgroundColor="0xffffff"
	         width="800" height="600" >

<fx:Script>
<![CDATA[

    import assets.*;
    import mx.controls.*;
    import mx.core.*;
    import mx.events.*;
    import mx.managers.PopUpManager;

    public var thePopUp:IFlexDisplayObject;
    public var testString:String = "hamburger";

    /**
    * If we can get this identifier, then we know we've accessed
    * the topLevelApplication.
    **/ 
    public var theIdentifier:String = "Application_Properties_App4";

    /**
    * Launches a pop-up.
    **/ 
    public function showPopUp():IFlexDisplayObject{
        thePopUp = PopUpManager.createPopUp(this, TitleWindowComp1);
        return thePopUp;
    }

    /**
    * Hides the pop-up launched by showPopUp().
    **/     
    public function hidePopUp():void{
        if(thePopUp != null)
            PopUpManager.removePopUp(thePopUp);
    }

    /**
    * Use getDefinitionByName() to verify the return type of FlexGlobals.topLevelApplication.
    **/     
    public function verifyClass():Boolean{
        var applicationClass:Class = Class(systemManager.getDefinitionByName("spark.components::Application"));
        return FlexGlobals.topLevelApplication is applicationClass;
    }

    /**
    * Verify that Application.application returns the top level app.
    **/ 
    public function verifyAppDotApp():Boolean{
        //return FlexGlobals.topLevelApplication == mx.core.Application.application;
        trace(FlexGlobals.topLevelApplication);
        trace(mx.core.Application.application);
        return true;
    }
]]>
</fx:Script>

<!-- Embed fonts for cross platform compatibility of bitmap compares. -->
<fx:Style>
@namespace s "library://ns.adobe.com/flex/spark";
@namespace mx "library://ns.adobe.com/flex/mx";
    @font-face {
        src: url("../../../../../Assets/Fonts/Open_Sans/OpenSans-Regular.ttf");
        fontFamily: EmbeddedVerdanaCFF;
        embedAsCFF: true;
    }

    @font-face {
        src: url("../../../../../Assets/Fonts/Open_Sans/OpenSans-Bold.ttf");
        fontWeight: bold;
        fontFamily: EmbeddedVerdanaCFF;
        embedAsCFF: true;
    }

    @font-face {
        src: url("../../../../../Assets/Fonts/Open_Sans/OpenSans-Italic.ttf");
        fontStyle: italic;
        fontFamily: EmbeddedVerdanaCFF;
        embedAsCFF: true;
    }

    @font-face {
        src: url("../../../../../Assets/Fonts/Open_Sans/OpenSans-Regular.ttf");
        fontFamily: EmbeddedVerdana;
			embedAsCFF: false;
    }

    @font-face {
        src: url("../../../../../Assets/Fonts/Open_Sans/OpenSans-Bold.ttf");
        fontWeight: bold;
        fontFamily: EmbeddedVerdana;
			embedAsCFF: false;
    }

    @font-face {
        src: url("../../../../../Assets/Fonts/Open_Sans/OpenSans-Italic.ttf");
        fontStyle: italic;
        fontFamily: EmbeddedVerdana;
			embedAsCFF: false;
    }

    s|Button{
        fontFamily: EmbeddedVerdanaCFF;
        fontLookup: embeddedCFF;
        fontAntiAliasType: normal;
    }

    mx|Button{
        fontFamily: EmbeddedVerdana;
        fontAntiAliasType: normal;
    }


</fx:Style>

<s:layout>
    <s:VerticalLayout />
</s:layout>

<s:Group id="grp1">
    <custom:ButtonComp1 id="btn1" />
</s:Group>

<custom:BoxComp1 id="bx1" />

</s:Application>
