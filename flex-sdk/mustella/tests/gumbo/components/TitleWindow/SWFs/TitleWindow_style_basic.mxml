<s:Application
    xmlns:fx="http://ns.adobe.com/mxml/2009" 
    xmlns:mx="library://ns.adobe.com/flex/mx" 
    xmlns:s="library://ns.adobe.com/flex/spark"
    xmlns:local="Comps.*"
    backgroundColor="0xFFFFFF"
    height="800" width="800">
    <s:layout><s:VerticalLayout/></s:layout>
    <fx:Style source="./assets/MyTitleWindowStyle1.css" >
    </fx:Style>	
    <fx:Script>    
    	<![CDATA[    
    		import spark.components.TitleWindow;
    		import mx.core.IFlexDisplayObject;
		import mx.managers.PopUpManager;
		import spark.components.Label;
		import mx.events.FlexEvent;
		
		public var defaultTW:TitleWindow, twObject:TitleWindow;
		public var childWindowList:Array=new Array();
    		
    		public function createDefault():void
    		{
    			defaultTW = new TitleWindow();      
			defaultTW.title="From PopUpManager...";
			defaultTW.width = 250;
			defaultTW.height = 150;
			defaultTW.x = 300;
			defaultTW.y = 10;
			PopUpManager.addPopUp(defaultTW, this, false);
			defaultTW.addEventListener("close", closeHandler);
			defaultTW.addEventListener("creationComplete", handleNewWindowCreationComplete);
    		}
		public function createTitleWindowByClass(c:Class, title:String,yPos:Number=100):TitleWindow
		{
			var win:TitleWindow=new c();
			c(win).y=yPos;
			c(win).x=100;
			win.title=title;
			win.width=400;
		        win.height=400;
			win.addEventListener("creationComplete", handleNewWindowCreationComplete);
			win.addEventListener("close", closeHandler);
			PopUpManager.addPopUp(win, this, false);
			return win;
		}
		public function createTitleWindowNoSize(c:Class, title:String,yPos:Number=100):TitleWindow
		{
			var win:TitleWindow=new c();
			c(win).y=yPos;
			c(win).x=100;
			win.title=title;
			win.addEventListener("creationComplete", handleNewWindowCreationComplete);
			win.addEventListener("close", closeHandler);
			PopUpManager.addPopUp(win, this, false);
			return win;
		}
		public function createTitleWindowNoPopUp(c:Class, title:String,yPos:Number=100):TitleWindow
		{
			var win:TitleWindow=new c();
			c(win).y=yPos;
			c(win).x=100;
			win.title=title;
			win.addEventListener("creationComplete", handleNewWindowCreationComplete);
			win.addEventListener("close", closeHandler);
			return win;
		}
		public function addPopUp(tw:TitleWindow, x:Number=100, y:Number=100):void
		{
			tw.x=x;
			tw.y=y;
			tw.addEventListener("creationComplete", handleNewWindowCreationComplete);
			tw.addEventListener("close", closeHandler);
			PopUpManager.addPopUp(tw, this, false);
		}
		
		
		public function handleNewWindowCreationComplete(e:FlexEvent):void
		{
		    childWindowList.push(e.currentTarget);
		    e.currentTarget.removeEventListener("creationComplete", handleNewWindowCreationComplete);
		    dispatchEvent(new FlexEvent("TitleWindowComplete"));
		}
    		public function closeHandler(event:Event):void
            	{
                	event.target.removeEventListener("close", closeHandler);
                	PopUpManager.removePopUp(event.target as IFlexDisplayObject);
            	}

		public function closePopUPs():void
		{
		
			var win:TitleWindow=null;
			while(childWindowList.length>0)
			{
				win=TitleWindow(childWindowList.pop());
				PopUpManager.removePopUp(win);
			}

		}
    		 	
    		
    	]]>        
    </fx:Script>
        
	<fx:Style>		
		@namespace s "library://ns.adobe.com/flex/spark";
		@namespace mx "library://ns.adobe.com/flex/mx";
		@namespace c "Comps.*";
	
		@font-face {
			src: url("../../../../../Assets/Fonts/Open_Sans/OpenSans-Regular.ttf");
			fontFamily: MyVera;			
			embedAsCFF: true;
		}
		
		@font-face {
			src: url("../../../../../Assets/Fonts/Open_Sans/OpenSans-Italic.ttf");
			fontFamily: MyArial;
			fontStyle: italic;
			embedAsCFF: true;
		}
		
		@font-face {
			src: url("../../../../../Assets/Fonts/Open_Sans/OpenSans-Bold.ttf");
			fontFamily: MyVera;
			fontWeight: bold;
			embedAsCFF: true;
		}
		
		@font-face {
			src: url("../../../../../Assets/Fonts/PT_Serif/PT_Serif-Web-Regular.ttf");
			fontFamily: MyArialHalo;
			embedAsCFF: false;
		}
		
		@font-face {
			src: url("../../../../../Assets/Fonts/PT_Serif/PT_Serif-Web-Italic.ttf");
			fontFamily: MyArialHalo;
			fontStyle: italic;
			embedAsCFF: false;
		}
		
		@font-face {
			src: url("../../../../../Assets/Fonts/PT_Serif/PT_Serif-Web-Bold.ttf");
			fontFamily: MyArialHalo;		
			fontWeight: bold;
			embedAsCFF: false;
		}		
										
		mx|Accordion,
		mx|RadioButton,
		mx|CheckBox,
		mx|List,
		mx|DataGrid,
		mx|Button,
		mx|Text,
		mx|TextInput,
		mx|Label,
		mx|NumericStepper,
		mx|Form,
		mx|ToolTip{
			fontAntiAliasType: "normal";
			fontFamily: MyArialHalo;
			fontSize: 12;
		}
			
		s|TitleWindow,
		s|Panel,
		s|HSlider,
		s|VSlider,
		s|Label,
		s|CheckBox,
		s|TextInput
		s|NumericStepper,
		s|Button,
		s|TextArea,
		s|DropDownList,
		s|List{
			fontAntiAliasType: "normal";
			fontFamily: MyVera;
			fontSize: 12;
            		fontLookup: "embeddedCFF";
		}		
    
			
	</fx:Style>     

                        
</s:Application>
