<?xml version="1.0" encoding="utf-8"?>
<!--

  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.

-->
<UnitTester testDir="gumbo/components/Label/Styles/" xmlns:mx="http://www.adobe.com/2006/mxml" xmlns="*" testSWF="Label_basic1.mxml">

	<mx:Script>
		<![CDATA[
			public static function init(o:DisplayObject):void
			{

			}
		]]>
	</mx:Script>

	<mx:Metadata>
		<![CDATA[
			[Mixin]
		]]>
	</mx:Metadata>

	<!-- ################################################################## -->


	<mx:Script>
		<![CDATA[
			import comps.LabelBasic;

            		import flash.text.engine.*;

            		import flashx.textLayout.formats.*;

			public var singleLineText:String = "The quick brown fox jumps over the lazy dog.";
			public var multiLineText:String = "The quick brown\nfox jumps over\nthe lazy dog.";
			public var singleLineNumbers:String = "The quick brown fox jumps over the lazy dog. 1234567890";
			public var ligatureLevelText:String = "fi fj fl ft ffi ffj ffl ct st Th";
			public var kerningText:String = "YMMVAWAWAWAWA";
            		public var lorem:String = "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec nec mauris. Curabitur nisl lorem, auctor in, condimentum sed, aliquam id, felis. \nSed bibendum, nisi nec pellentesque volutpat, neque metus consequat mi, quis molestie dolor lorem at nunc. Vestibulum quis dolor. Suspendisse eget sapien. Etiam in risus vel diam malesuada tincidunt. Sed orci dui, pellentesque vel, cursus vel, aliquam eu, erat. Donec eget purus eu diam porta lobortis. In nec neque. Vivamus nisi.";
            		public var lorem1:String = "The quick brown fox jumps over the lazy dog. 1234567890,Lorem ipsum dolor sit amet";
		]]>
	</mx:Script>

	<testCases>

		<!-- style: alignmentBaseline -->
		<TestCase testID="Label_alignmentBaseline_default" description="Check default value of alignmentBaseline style" keywords="[TextBox, alignmentBaseline, Graphic]">
			<setup>
				<ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
				<SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=multiLineText;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
			</setup>
			<body>
				<AssertStyleValue target="textBoxComp.textBox" styleName="alignmentBaseline" value="useDominantBaseline" />
				<CompareBitmap numColorVariances="2" maxColorVariance="7" url="../Styles/baselines/$testID.png" target="container" />
			</body>
		</TestCase>

		<TestCase testID="Label_alignmentBaseline_ascent" description="Check value of alignmentBaseline style" keywords="[TextBox, alignmentBaseline, Graphic]">
			<setup>
				<ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
				<SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=multiLineText;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetStyle target="textBoxComp.textBox" styleName="alignmentBaseline" valueExpression="value=TextBaseline.ASCENT;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
			</setup>
			<body>
				<AssertStyleValue target="textBoxComp.textBox" styleName="alignmentBaseline" value="ascent" />
				<CompareBitmap numColorVariances="2" maxColorVariance="7" url="../Styles/baselines/$testID.png" target="container" />
			</body>
		</TestCase>

		<TestCase testID="Label_alignmentBaseline_descent" description="Check value of alignmentBaseline style" keywords="[TextBox, alignmentBaseline, Graphic]">
			<setup>
				<ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
				<SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=multiLineText;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetStyle target="textBoxComp.textBox" styleName="alignmentBaseline" valueExpression="value=TextBaseline.DESCENT;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
			</setup>
			<body>
				<AssertStyleValue target="textBoxComp.textBox" styleName="alignmentBaseline" value="descent" />
				<CompareBitmap numColorVariances="2" maxColorVariance="7" url="../Styles/baselines/$testID.png" target="container" />
			</body>
		</TestCase>

		<TestCase testID="Label_alignmentBaseline_ideographicBottom" description="Check value of alignmentBaseline style" keywords="[TextBox, alignmentBaseline, Graphic]">
			<setup>
				<ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
				<SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=multiLineText;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetStyle target="textBoxComp.textBox" styleName="alignmentBaseline" valueExpression="value=TextBaseline.IDEOGRAPHIC_BOTTOM;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
			</setup>
			<body>
				<AssertStyleValue target="textBoxComp.textBox" styleName="alignmentBaseline" value="ideographicBottom" />
				<CompareBitmap numColorVariances="2" maxColorVariance="7" url="../Styles/baselines/$testID.png" target="container" />
			</body>
		</TestCase>

		<TestCase testID="Label_alignmentBaseline_ideographicCenter" description="Check value of alignmentBaseline style" keywords="[TextBox, alignmentBaseline, Graphic]">
			<setup>
				<ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
				<SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=multiLineText;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetStyle target="textBoxComp.textBox" styleName="alignmentBaseline" valueExpression="value=TextBaseline.IDEOGRAPHIC_CENTER;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
			</setup>
			<body>
				<AssertStyleValue target="textBoxComp.textBox" styleName="alignmentBaseline" value="ideographicCenter" />
				<CompareBitmap numColorVariances="2" maxColorVariance="7" url="../Styles/baselines/$testID.png" target="container" />
			</body>
		</TestCase>

		<TestCase testID="Label_alignmentBaseline_ideographicTop" description="Check value of alignmentBaseline style" keywords="[TextBox, alignmentBaseline, Graphic]">
			<setup>
				<ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
				<SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=multiLineText;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetStyle target="textBoxComp.textBox" styleName="alignmentBaseline" valueExpression="value=TextBaseline.IDEOGRAPHIC_TOP;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
			</setup>
			<body>
				<AssertStyleValue target="textBoxComp.textBox" styleName="alignmentBaseline" value="ideographicTop" />
				<CompareBitmap numColorVariances="2" maxColorVariance="7" url="../Styles/baselines/$testID.png" target="container" />
			</body>
		</TestCase>

		<TestCase testID="Label_alignmentBaseline_roman" description="Check value of alignmentBaseline style" keywords="[TextBox, alignmentBaseline, Graphic]">
			<setup>
				<ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
				<SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=multiLineText;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetStyle target="textBoxComp.textBox" styleName="alignmentBaseline" valueExpression="value=TextBaseline.ROMAN;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
			</setup>
			<body>
				<AssertStyleValue target="textBoxComp.textBox" styleName="alignmentBaseline" value="roman" />
				<CompareBitmap numColorVariances="2" maxColorVariance="7" url="../Styles/baselines/$testID.png" target="container" />
			</body>
		</TestCase>

		<TestCase testID="Label_alignmentBaseline_useDominantBaseline" description="Check value of alignmentBaseline style" keywords="[TextBox, alignmentBaseline, Graphic]">
			<setup>
				<ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
				<SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=multiLineText;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetStyle target="textBoxComp.textBox" styleName="alignmentBaseline" valueExpression="value=TextBaseline.ROMAN;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetStyle target="textBoxComp.textBox" styleName="alignmentBaseline" valueExpression="value=TextBaseline.USE_DOMINANT_BASELINE;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
			</setup>
			<body>
				<AssertStyleValue target="textBoxComp.textBox" styleName="alignmentBaseline" value="useDominantBaseline" />
				<CompareBitmap numColorVariances="2" maxColorVariance="7" url="../Styles/baselines/$testID.png" target="container" />
			</body>
		</TestCase>


		<!-- style: baselineShift -->
		<TestCase testID="Label_baselineShift_default" description="Check default value of baselineShift style" keywords="[TextBox, baselineShift, Graphic]">
			<setup>
				<ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
				<SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=multiLineText;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
			</setup>
			<body>
				<AssertStyleValue target="textBoxComp.textBox" styleName="baselineShift" value="0" />
				<CompareBitmap numColorVariances="2" maxColorVariance="7" url="../Styles/baselines/$testID.png" target="container" />
			</body>
		</TestCase>

		<TestCase testID="Label_baselineShift_pos10" description="Check default value of baselineShift style" keywords="[TextBox, baselineShift, Graphic]">
			<setup>
				<ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
				<SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=multiLineText;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetStyle target="textBoxComp.textBox" styleName="baselineShift" value="10" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
			</setup>
			<body>
				<AssertStyleValue target="textBoxComp.textBox" styleName="baselineShift" value="10" />
				<CompareBitmap numColorVariances="2" maxColorVariance="7" url="../Styles/baselines/$testID.png" target="container" />
			</body>
		</TestCase>

		<TestCase testID="Label_baselineShift_neg10" description="Check default value of baselineShift style" keywords="[TextBox, baselineShift, Graphic]">
			<setup>
				<ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
				<SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=multiLineText;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetStyle target="textBoxComp.textBox" styleName="baselineShift" value="-10" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
			</setup>
			<body>
				<AssertStyleValue target="textBoxComp.textBox" styleName="baselineShift" value="-10" />
				<CompareBitmap numColorVariances="2" maxColorVariance="7" url="../Styles/baselines/$testID.png" target="container" />
			</body>
		</TestCase>

		<TestCase testID="Label_baselineShift_subscript" description="Check default value of baselineShift style" keywords="[TextBox, baselineShift, Graphic]">
			<setup>
				<ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
				<SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=multiLineText;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetStyle target="textBoxComp.textBox" styleName="baselineShift" value="80%" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetStyle target="textBoxComp.textBox" styleName="baselineShift" valueExpression="value=BaselineShift.SUBSCRIPT" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
			</setup>
			<body>
				<AssertStyleValue target="textBoxComp.textBox" styleName="baselineShift" value="subscript" />
				<CompareBitmap  url="../Styles/baselines/" target="container">
					<ConditionalValue os="mac"/>
				</CompareBitmap>
			</body>
		</TestCase>

		<TestCase testID="Label_baselineShift_superscript" description="Check default value of baselineShift style" keywords="[TextBox, baselineShift, Graphic]">
			<setup>
				<ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
				<SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=multiLineText;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetStyle target="textBoxComp.textBox" styleName="baselineShift" valueExpression="value=BaselineShift.SUPERSCRIPT" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
			</setup>
			<body>
				<AssertStyleValue target="textBoxComp.textBox" styleName="baselineShift" value="superscript" />
				<CompareBitmap url="../Styles/baselines/" target="container">
					<ConditionalValue os="mac"/>
				</CompareBitmap>
			</body>
		</TestCase>

		<!-- style: cffHinting -->
		<TestCase testID="Label_cffHinting_default" description="Check default value of cffHinting style" keywords="[TextBox, cffHinting, Graphic]">
			<setup>
				<ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
				<SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=multiLineText;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
			</setup>
			<body>
				<AssertStyleValue target="textBoxComp.textBox" styleName="cffHinting" value="horizontalStem" />
				<CompareBitmap numColorVariances="2" maxColorVariance="7" url="../Styles/baselines/$testID.png" target="container" />
			</body>
		</TestCase>

		<TestCase testID="Label_cffHinting_horizontalStem" description="Check value of cffHinting style" keywords="[TextBox, cffHinting, Graphic]">
			<setup>
				<ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
				<SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=multiLineText;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetStyle target="textBoxComp.textBox" styleName="cffHinting" valueExpression="value=CFFHinting.NONE;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetStyle target="textBoxComp.textBox" styleName="cffHinting" valueExpression="value=CFFHinting.HORIZONTAL_STEM;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
			</setup>
			<body>
				<AssertStyleValue target="textBoxComp.textBox" styleName="cffHinting" value="horizontalStem" />
				<CompareBitmap numColorVariances="2" maxColorVariance="7" url="../Styles/baselines/$testID.png" target="container" />
			</body>
		</TestCase>

		<TestCase testID="Label_cffHinting_none" description="Check value of cffHinting style" keywords="[TextBox, cffHinting, Graphic]">
			<setup>
				<ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
				<SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=multiLineText;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetStyle target="textBoxComp.textBox" styleName="cffHinting" valueExpression="value=CFFHinting.NONE;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
			</setup>
			<body>
				<AssertStyleValue target="textBoxComp.textBox" styleName="cffHinting" value="none" />
				<CompareBitmap url="../Styles/baselines/$testID@mac.png" target="container" />
			</body>
		</TestCase>


		<!-- style: color -->
		<TestCase testID="Label_color_default" description="Check default value of color style" keywords="[TextBox, color, Graphic]">
			<setup>
				<ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
				<SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=multiLineText;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
			</setup>
			<body>
				<AssertStyleValue target="textBoxComp.textBox" styleName="color" value="0x000000" />
				<CompareBitmap numColorVariances="2" maxColorVariance="7" url="../Styles/baselines/$testID.png" target="container" />
			</body>
		</TestCase>

		<TestCase testID="Label_color_red" description="Check default value of color style" keywords="[TextBox, color, Graphic]">
			<setup>
				<ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
				<SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=multiLineText;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetStyle target="textBoxComp.textBox" styleName="color" value="red" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
			</setup>
			<body>
				<AssertStyleValue target="textBoxComp.textBox" styleName="color" value="0xFF0000" />
				<CompareBitmap numColorVariances="2" maxColorVariance="7" url="../Styles/baselines/$testID.png" target="container" />
			</body>
		</TestCase>

		<TestCase testID="Label_color_pound" description="Check default value of color style" keywords="[TextBox, color, Graphic]">
			<setup>
				<ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
				<SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=multiLineText;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetStyle target="textBoxComp.textBox" styleName="color" value="#FF00FF" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
			</setup>
			<body>
				<AssertStyleValue target="textBoxComp.textBox" styleName="color" value="0xFF00FF" />
				<CompareBitmap numColorVariances="2" maxColorVariance="7" url="../Styles/baselines/$testID.png" target="container" />
			</body>
		</TestCase>


		<!-- style: digitCase -->
		<TestCase testID="Label_digitCase_default" description="Check default value of digitCase style" keywords="[TextBox, digitCase, Graphic]">
			<setup>
				<ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
				<SetStyle target="textBoxComp.textBox" styleName="fontSize" value="16" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetStyle target="textBoxComp.textBox" styleName="fontFamily" value="ArnoEmbedded" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=singleLineNumbers;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
			</setup>
			<body>
				<AssertStyleValue target="textBoxComp.textBox" styleName="digitCase" value="default" />
				<CompareBitmap numColorVariances="2" maxColorVariance="7" url="../Styles/baselines/$testID.png" target="container" />
			</body>
		</TestCase>

		<TestCase testID="Label_digitCase_default2" description="Check 'default' value of digitCase style" keywords="[TextBox, digitCase, Graphic]">
			<setup>
				<ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
				<SetStyle target="textBoxComp.textBox" styleName="fontSize" value="16" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetStyle target="textBoxComp.textBox" styleName="fontFamily" value="ArnoEmbedded" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=singleLineNumbers;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetStyle target="textBoxComp.textBox" styleName="digitCase" valueExpression="value=DigitCase.LINING;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetStyle target="textBoxComp.textBox" styleName="digitCase" valueExpression="value=DigitCase.DEFAULT;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
			</setup>
			<body>
				<AssertStyleValue target="textBoxComp.textBox" styleName="digitCase" value="default" />
				<CompareBitmap numColorVariances="2" maxColorVariance="7" url="../Styles/baselines/$testID.png" target="container" />
			</body>
		</TestCase>

		<TestCase testID="Label_digitCase_lining" description="Check 'lining' value of digitCase style" keywords="[TextBox, digitCase, Graphic]">
			<setup>
				<ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
				<SetStyle target="textBoxComp.textBox" styleName="fontSize" value="16" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetStyle target="textBoxComp.textBox" styleName="fontFamily" value="ArnoEmbedded" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=singleLineNumbers;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetStyle target="textBoxComp.textBox" styleName="digitCase" valueExpression="value=DigitCase.LINING;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
			</setup>
			<body>
				<AssertStyleValue target="textBoxComp.textBox" styleName="digitCase" value="lining" />
				<CompareBitmap numColorVariances="2" maxColorVariance="7" url="../Styles/baselines/$testID.png" target="container" />
			</body>
		</TestCase>

		<TestCase testID="Label_digitCase_oldStyle" description="Check 'oldStyle' value of digitCase style" keywords="[TextBox, digitCase, Graphic]">
			<setup>
				<ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
				<SetStyle target="textBoxComp.textBox" styleName="fontSize" value="16" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetStyle target="textBoxComp.textBox" styleName="fontFamily" value="ArnoEmbedded" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=singleLineNumbers;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetStyle target="textBoxComp.textBox" styleName="digitCase" valueExpression="value=DigitCase.OLD_STYLE;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
			</setup>
			<body>
				<AssertStyleValue target="textBoxComp.textBox" styleName="digitCase" value="oldStyle" />
				<CompareBitmap numColorVariances="2" maxColorVariance="7" url="../Styles/baselines/$testID.png" target="container" />
			</body>
		</TestCase>


		<!-- style: digitWidth -->
		<TestCase testID="Label_digitWidth_default" description="Check default value of digitWidth style" keywords="[TextBox, digitWidth, Graphic]">
			<setup>
				<ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
				<SetStyle target="textBoxComp.textBox" styleName="fontSize" value="16" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetStyle target="textBoxComp.textBox" styleName="fontFamily" value="ArnoEmbedded" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=singleLineNumbers;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
			</setup>
			<body>
				<AssertStyleValue target="textBoxComp.textBox" styleName="digitWidth" value="default" />
				<CompareBitmap numColorVariances="2" maxColorVariance="7" url="../Styles/baselines/$testID.png" target="container" />
			</body>
		</TestCase>

		<TestCase testID="Label_digitWidth_default2" description="Check 'default' value of digitWidth style" keywords="[TextBox, digitWidth, Graphic]">
			<setup>
				<ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
				<SetStyle target="textBoxComp.textBox" styleName="fontSize" value="16" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetStyle target="textBoxComp.textBox" styleName="fontFamily" value="ArnoEmbedded" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=singleLineNumbers;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetStyle target="textBoxComp.textBox" styleName="digitWidth" valueExpression="value=DigitWidth.PROPORTIONAL;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetStyle target="textBoxComp.textBox" styleName="digitWidth" valueExpression="value=DigitWidth.DEFAULT;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
			</setup>
			<body>
				<AssertStyleValue target="textBoxComp.textBox" styleName="digitWidth" value="default" />
				<CompareBitmap numColorVariances="2" maxColorVariance="7" url="../Styles/baselines/$testID.png" target="container" />
			</body>
		</TestCase>

		<TestCase testID="Label_digitWidth_proportional" description="Check 'proportional' value of digitWidth style" keywords="[TextBox, digitWidth, Graphic]">
			<setup>
				<ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
				<SetStyle target="textBoxComp.textBox" styleName="fontSize" value="16" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetStyle target="textBoxComp.textBox" styleName="fontFamily" value="ArnoEmbedded" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=singleLineNumbers;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetStyle target="textBoxComp.textBox" styleName="digitWidth" valueExpression="value=DigitWidth.PROPORTIONAL;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
			</setup>
			<body>
				<AssertStyleValue target="textBoxComp.textBox" styleName="digitWidth" value="proportional" />
				<CompareBitmap numColorVariances="2" maxColorVariance="7" url="../Styles/baselines/$testID.png" target="container" />
			</body>
		</TestCase>

		<TestCase testID="Label_digitWidth_tabular" description="Check 'tabular' value of digitWidth style" keywords="[TextBox, digitWidth, Graphic]">
			<setup>
				<ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
				<SetStyle target="textBoxComp.textBox" styleName="fontSize" value="16" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetStyle target="textBoxComp.textBox" styleName="fontFamily" value="ArnoEmbedded" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=singleLineNumbers;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetStyle target="textBoxComp.textBox" styleName="digitWidth" valueExpression="value=DigitWidth.TABULAR;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
			</setup>
			<body>
				<AssertStyleValue target="textBoxComp.textBox" styleName="digitWidth" value="tabular" />
				<CompareBitmap numColorVariances="2" maxColorVariance="7" url="../Styles/baselines/$testID.png" target="container" />
			</body>
		</TestCase>


		<!-- style: direction -->
		<TestCase testID="Label_direction_default" description="Check default value of direction style" keywords="[TextBox, direction, Graphic]">
			<setup>
				<ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
				<SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=multiLineText;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
			</setup>
			<body>
				<AssertStyleValue target="textBoxComp.textBox" styleName="direction" value="ltr" />
				<CompareBitmap numColorVariances="2" maxColorVariance="7" url="../Styles/baselines/$testID.png" target="container" />
			</body>
		</TestCase>

		<TestCase testID="Label_direction_ltr" description="Check 'ltr' value of direction style" keywords="[TextBox, direction, Graphic]">
			<setup>
				<ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
				<SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=multiLineText;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetStyle target="textBoxComp.textBox" styleName="direction" valueExpression="value=Direction.RTL" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetStyle target="textBoxComp.textBox" styleName="direction" valueExpression="value=Direction.LTR" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
			</setup>
			<body>
				<AssertStyleValue target="textBoxComp.textBox" styleName="direction" value="ltr" />
				<CompareBitmap numColorVariances="2" maxColorVariance="7" url="../Styles/baselines/$testID.png" target="container" />
			</body>
		</TestCase>

		<TestCase testID="Label_direction_rtl" description="Check 'rtk' value of direction style" keywords="[TextBox, direction, Graphic]">
			<setup>
				<ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
				<SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=multiLineText;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetStyle target="textBoxComp.textBox" styleName="direction" valueExpression="value=Direction.RTL" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
			</setup>
			<body>
				<AssertStyleValue target="textBoxComp.textBox" styleName="direction" value="rtl" />
				<CompareBitmap numColorVariances="10" maxColorVariance="20" url="../Styles/baselines/$testID.png" target="container" />
			</body>
		</TestCase>


		<!-- style: dominantBaseline -->
		<TestCase testID="Label_dominantBaseline_default" description="Check default value of dominantBaseline style" keywords="[TextBox, dominantBaseline, Graphic]">
			<setup>
				<ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
				<SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=multiLineText;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
			</setup>
			<body>
				<AssertStyleValue target="textBoxComp.textBox" styleName="dominantBaseline" value="auto" />
				<CompareBitmap numColorVariances="2" maxColorVariance="7" url="../Styles/baselines/$testID.png" target="container" />
			</body>
		</TestCase>

		<TestCase testID="Label_dominantBaseline_ascent" description="Check 'ascent' value of dominantBaseline style" keywords="[TextBox, dominantBaseline, Graphic]">
			<setup>
				<ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
				<SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=multiLineText;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetStyle target="textBoxComp.textBox" styleName="dominantBaseline" valueExpression="value=TextBaseline.ASCENT;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
			</setup>
			<body>
				<AssertStyleValue target="textBoxComp.textBox" styleName="dominantBaseline" value="ascent" />
				<CompareBitmap numColorVariances="2" maxColorVariance="7" url="../Styles/baselines/$testID.png" target="container" />
			</body>
		</TestCase>

		<TestCase testID="Label_dominantBaseline_descent" description="Check 'descent' value of dominantBaseline style" keywords="[TextBox, dominantBaseline, Graphic]">
			<setup>
				<ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
				<SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=multiLineText;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetStyle target="textBoxComp.textBox" styleName="dominantBaseline" valueExpression="value=TextBaseline.DESCENT;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
			</setup>
			<body>
				<AssertStyleValue target="textBoxComp.textBox" styleName="dominantBaseline" value="descent" />
				<CompareBitmap numColorVariances="2" maxColorVariance="7" url="../Styles/baselines/$testID.png" target="container" />
			</body>
		</TestCase>

		<TestCase testID="Label_dominantBaseline_ideographicBottom" description="Check 'ideographicBottom' value of dominantBaseline style" keywords="[TextBox, dominantBaseline, Graphic]">
			<setup>
				<ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
				<SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=multiLineText;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetStyle target="textBoxComp.textBox" styleName="dominantBaseline" valueExpression="value=TextBaseline.IDEOGRAPHIC_BOTTOM;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
			</setup>
			<body>
				<AssertStyleValue target="textBoxComp.textBox" styleName="dominantBaseline" value="ideographicBottom" />
				<CompareBitmap numColorVariances="2" maxColorVariance="7" url="../Styles/baselines/$testID.png" target="container" />
			</body>
		</TestCase>

		<TestCase testID="Label_dominantBaseline_ideographicCenter" description="Check 'ideographicCenter' value of dominantBaseline style" keywords="[TextBox, dominantBaseline, Graphic]">
			<setup>
				<ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
				<SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=multiLineText;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetStyle target="textBoxComp.textBox" styleName="dominantBaseline" valueExpression="value=TextBaseline.IDEOGRAPHIC_CENTER;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
			</setup>
			<body>
				<AssertStyleValue target="textBoxComp.textBox" styleName="dominantBaseline" value="ideographicCenter" />
				<CompareBitmap numColorVariances="2" maxColorVariance="7" url="../Styles/baselines/$testID.png" target="container" />
			</body>
		</TestCase>

		<TestCase testID="Label_dominantBaseline_ideographicTop" description="Check 'ideographicTop' value of dominantBaseline style" keywords="[TextBox, dominantBaseline, Graphic]">
			<setup>
				<ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
				<SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=multiLineText;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetStyle target="textBoxComp.textBox" styleName="dominantBaseline" valueExpression="value=TextBaseline.IDEOGRAPHIC_TOP;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
			</setup>
			<body>
				<AssertStyleValue target="textBoxComp.textBox" styleName="dominantBaseline" value="ideographicTop" />
				<CompareBitmap numColorVariances="2" maxColorVariance="7" url="../Styles/baselines/$testID.png" target="container" />
			</body>
		</TestCase>

		<TestCase testID="Label_dominantBaseline_roman" description="Check 'roman' value of dominantBaseline style" keywords="[TextBox, dominantBaseline, Graphic]">
			<setup>
				<ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
				<SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=multiLineText;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetStyle target="textBoxComp.textBox" styleName="dominantBaseline" valueExpression="value=TextBaseline.ASCENT;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetStyle target="textBoxComp.textBox" styleName="dominantBaseline" valueExpression="value=TextBaseline.ROMAN;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
			</setup>
			<body>
				<AssertStyleValue target="textBoxComp.textBox" styleName="dominantBaseline" value="roman" />
				<CompareBitmap numColorVariances="2" maxColorVariance="7" url="../Styles/baselines/$testID.png" target="container" />
			</body>
		</TestCase>


		<!-- style: fontFamily -->
		<TestCase testID="Label_fontFamily_default" description="Check default value of fontFamily style" keywords="[TextBox, fontFamily, Graphic]">
			<setup>
				<ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
				<SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=multiLineText;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
			</setup>
			<body>
				<AssertStyleValue target="textBoxComp.textBox" styleName="fontFamily" value="ArialEmbedded" />
				<CompareBitmap numColorVariances="2" maxColorVariance="7" url="../Styles/baselines/$testID.png" target="container" />
			</body>
		</TestCase>


		<!-- style: fontLookup -->
		<TestCase testID="Label_fontLookup_default" description="Check default value of fontFamily style" keywords="[TextBox, fontLookup, Graphic]">
			<setup>
				<ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
				<SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=multiLineText;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
			</setup>
			<body>
				<AssertStyleValue target="textBoxComp.textBox" styleName="fontLookup" value="embeddedCFF" />
				<CompareBitmap numColorVariances="2" maxColorVariance="7" url="../Styles/baselines/$testID.png" target="container" />
			</body>
		</TestCase>


		<!-- style: fontSize -->
		<TestCase testID="Label_fontSize_default" description="Check default value of fontSize style" keywords="[TextBox, fontSize, Graphic]">
			<setup>
				<ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
				<SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=multiLineText;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
			</setup>
			<body>
				<AssertStyleValue target="textBoxComp.textBox" styleName="fontSize" value="12" />
				<CompareBitmap numColorVariances="2" maxColorVariance="7" url="../Styles/baselines/$testID.png" target="container" />
			</body>
		</TestCase>

		<TestCase testID="Label_fontSize_10" description="Check default value of fontSize style" keywords="[TextBox, fontSize, Graphic]">
			<setup>
				<ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
				<SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=multiLineText;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetStyle target="textBoxComp.textBox" styleName="fontSize" value="10" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
			</setup>
			<body>
				<AssertStyleValue target="textBoxComp.textBox" styleName="fontSize" value="10" />
				<CompareBitmap numColorVariances="2" maxColorVariance="7" url="../Styles/baselines/$testID.png" target="container" />
			</body>
		</TestCase>

		<TestCase testID="Label_fontSize_20" description="Check default value of fontSize style" keywords="[TextBox, fontSize, Graphic]">
			<setup>
				<ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
				<SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=multiLineText;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetStyle target="textBoxComp.textBox" styleName="fontSize" value="20" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
			</setup>
			<body>
				<AssertStyleValue target="textBoxComp.textBox" styleName="fontSize" value="20" />
				<CompareBitmap numColorVariances="15" maxColorVariance="10" url="../Styles/baselines/$testID.png" target="container" />
			</body>
		</TestCase>

		<TestCase testID="Label_fontSize_decimal" description="Check default value of fontSize style" keywords="[TextBox, fontSize, Graphic]">
			<setup>
				<ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
				<SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=multiLineText;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetStyle target="textBoxComp.textBox" styleName="fontSize" value="24.9999" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
			</setup>
			<body>
				<AssertStyleValue target="textBoxComp.textBox" styleName="fontSize" value="24.9999" />
				<CompareBitmap numColorVariances="2" maxColorVariance="7" url="../Styles/baselines/$testID.png" target="container" />
			</body>
		</TestCase>


		<!-- style: fontStyle -->
		<TestCase testID="Label_fontStyle_default" description="Check default value of fontStyle style" keywords="[TextBox, fontStyle, Graphic]">
			<setup>
				<ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
				<SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=multiLineText;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
			</setup>
			<body>
				<AssertStyleValue target="textBoxComp.textBox" styleName="fontStyle" value="normal" />
				<CompareBitmap numColorVariances="2" maxColorVariance="7" url="../Styles/baselines/$testID.png" target="container" />
			</body>
		</TestCase>

		<TestCase testID="Label_fontStyle_italic" description="Check 'italic' value of fontStyle style" keywords="[TextBox, fontStyle, Graphic]">
			<setup>
				<ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
				<SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=multiLineText;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetStyle target="textBoxComp.textBox" styleName="fontStyle" valueExpression="value=FontPosture.ITALIC" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
			</setup>
			<body>
				<AssertStyleValue target="textBoxComp.textBox" styleName="fontStyle" value="italic" />
				<CompareBitmap numColorVariances="10" maxColorVariance="20" url="../Styles/baselines/$testID.png" target="container" />
			</body>
		</TestCase>

		<TestCase testID="Label_fontStyle_normal" description="Check 'normal' value of fontStyle style" keywords="[TextBox, fontStyle, Graphic]">
			<setup>
				<ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
				<SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=multiLineText;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetStyle target="textBoxComp.textBox" styleName="fontStyle" valueExpression="value=FontPosture.ITALIC" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetStyle target="textBoxComp.textBox" styleName="fontStyle" valueExpression="value=FontPosture.NORMAL" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
			</setup>
			<body>
				<AssertStyleValue target="textBoxComp.textBox" styleName="fontStyle" value="normal" />
				<CompareBitmap numColorVariances="2" maxColorVariance="7" url="../Styles/baselines/$testID.png" target="container" />
			</body>
		</TestCase>


		<!-- style: fontWeight -->
		<TestCase testID="Label_fontWeight_default" description="Check default value of fontWeight style" keywords="[TextBox, fontWeight, Graphic]">
			<setup>
				<ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
				<SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=multiLineText;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
			</setup>
			<body>
				<AssertStyleValue target="textBoxComp.textBox" styleName="fontWeight" value="normal" />
				<CompareBitmap numColorVariances="2" maxColorVariance="7" url="../Styles/baselines/$testID.png" target="container" />
			</body>
		</TestCase>

		<TestCase testID="Label_fontWeight_italic" description="Check 'bold' value of fontWeight style" keywords="[TextBox, fontWeight, Graphic]">
			<setup>
				<ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
				<SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=multiLineText;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetStyle target="textBoxComp.textBox" styleName="fontWeight" valueExpression="value=FontWeight.BOLD" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
			</setup>
			<body>
				<AssertStyleValue target="textBoxComp.textBox" styleName="fontWeight" value="bold" />
				<CompareBitmap numColorVariances="2" maxColorVariance="7" url="../Styles/baselines/$testID.png" target="container" />
			</body>
		</TestCase>

		<TestCase testID="Label_fontWeight_normal" description="Check 'normal' value of fontWeight style" keywords="[TextBox, fontWeight, Graphic]">
			<setup>
				<ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
				<SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=multiLineText;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetStyle target="textBoxComp.textBox" styleName="fontWeight" valueExpression="value=FontWeight.BOLD" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetStyle target="textBoxComp.textBox" styleName="fontWeight" valueExpression="value=FontWeight.NORMAL" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
			</setup>
			<body>
				<AssertStyleValue target="textBoxComp.textBox" styleName="fontWeight" value="normal" />
				<CompareBitmap numColorVariances="2" maxColorVariance="7" url="../Styles/baselines/$testID.png" target="container" />
			</body>
		</TestCase>

<!-- mustella sucks
		<TestCase testID="Label_fontWeight_invalidValueRTE" description="Check invalid value of fontWeight style throws RTE" keywords="[TextBox, fontWeight, Graphic]">
			<setup>
				<ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
			</setup>
			<body>
				<SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=multiLineText;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<AssertMethodValue method="try{application.textBoxComp.textBox.setStyle('fontWeight', 'failz')}catch(e:Error){value=e.message}" value="Parameter fontWeight must be one of the accepted values." />
				<SetStyle target="textBoxComp.textBox" styleName="fontWeight" value="failz" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<AssertError value="Error #2008: Parameter fontWeight must be one of the accepted values." />
			</body>
		</TestCase>
-->

		<!-- style: justificationRule -->
		<TestCase testID="Label_justificationRule_default" description="Check default value of justificationRule style" keywords="[TextBox, justificationRule, Graphic]">
			<setup>
				<ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
				<SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=multiLineText;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
			</setup>
			<body>
				<AssertStyleValue target="textBoxComp.textBox" styleName="justificationRule" value="auto" />
				<CompareBitmap numColorVariances="2" maxColorVariance="7" url="../Styles/baselines/$testID.png" target="container" />
			</body>
		</TestCase>

		<TestCase testID="Label_justificationRule_eastAsian" description="Check 'eastAsian' value of justificationRule style" keywords="[TextBox, justificationRule, Graphic]">
			<setup>
				<ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
				<SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=multiLineText;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetStyle target="textBoxComp.textBox" styleName="justificationRule" valueExpression="value=JustificationRule.EAST_ASIAN" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
			</setup>
			<body>
				<AssertStyleValue target="textBoxComp.textBox" styleName="justificationRule" value="eastAsian" />
				<CompareBitmap numColorVariances="2" maxColorVariance="7" url="../Styles/baselines/$testID.png" target="container" />
			</body>
		</TestCase>

		<TestCase testID="Label_justificationRule_space" description="Check 'space' value of justificationRule style" keywords="[TextBox, justificationRule, Graphic]">
			<setup>
				<ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
				<SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=multiLineText;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetStyle target="textBoxComp.textBox" styleName="justificationRule" valueExpression="value=JustificationRule.EAST_ASIAN" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetStyle target="textBoxComp.textBox" styleName="justificationRule" valueExpression="value=JustificationRule.SPACE" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
			</setup>
			<body>
				<AssertStyleValue target="textBoxComp.textBox" styleName="justificationRule" value="space" />
				<CompareBitmap numColorVariances="2" maxColorVariance="7" url="../Styles/baselines/$testID.png" target="container" />
			</body>
		</TestCase>


		<!-- style: justificationStyle -->
		<TestCase testID="Label_justificationStyle_default" description="Check default value of justificationStyle style" keywords="[TextBox, justificationStyle, Graphic]">
			<setup>
				<ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
				<SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=multiLineText;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
			</setup>
			<body>
				<AssertStyleValue target="textBoxComp.textBox" styleName="justificationStyle" value="auto" />
				<CompareBitmap numColorVariances="2" maxColorVariance="7" url="../Styles/baselines/$testID.png" target="container" />
			</body>
		</TestCase>

		<TestCase testID="Label_justificationStyle_prioritizeLeastAdjustment1" description="Check 'prioritizeLeastAdjustment' value of justificationStyle style" keywords="[TextBox, justificationStyle, Graphic]">
			<setup>
				<ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
				<SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=multiLineText;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetStyle target="textBoxComp.textBox" styleName="justificationStyle" valueExpression="value=JustificationStyle.PRIORITIZE_LEAST_ADJUSTMENT" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
			</setup>
			<body>
				<AssertStyleValue target="textBoxComp.textBox" styleName="justificationStyle" value="prioritizeLeastAdjustment" />
				<CompareBitmap numColorVariances="2" maxColorVariance="7" url="../Styles/baselines/$testID.png" target="container" />
			</body>
		</TestCase>

		<TestCase testID="Label_justificationStyle_prioritizeLeastAdjustment2" description="Check 'prioritizeLeastAdjustment' value of justificationStyle style" keywords="[TextBox, justificationStyle, Graphic]">
			<setup>
				<ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
				<SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=multiLineText;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetStyle target="textBoxComp.textBox" styleName="justificationRule" valueExpression="value=JustificationRule.EAST_ASIAN" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetStyle target="textBoxComp.textBox" styleName="justificationStyle" valueExpression="value=JustificationStyle.PRIORITIZE_LEAST_ADJUSTMENT" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
			</setup>
			<body>
				<AssertStyleValue target="textBoxComp.textBox" styleName="justificationStyle" value="prioritizeLeastAdjustment" />
				<CompareBitmap numColorVariances="2" maxColorVariance="7" url="../Styles/baselines/$testID.png" target="container" />
			</body>
		</TestCase>

		<TestCase testID="Label_justificationStyle_pushInKinsoku1" description="Check 'pushInKinsoku' value of justificationStyle style" keywords="[TextBox, justificationStyle, Graphic]">
			<setup>
				<ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
				<SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=multiLineText;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetStyle target="textBoxComp.textBox" styleName="justificationStyle" valueExpression="value=JustificationStyle.PRIORITIZE_LEAST_ADJUSTMENT" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetStyle target="textBoxComp.textBox" styleName="justificationStyle" valueExpression="value=JustificationStyle.PUSH_IN_KINSOKU" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
			</setup>
			<body>
				<AssertStyleValue target="textBoxComp.textBox" styleName="justificationStyle" value="pushInKinsoku" />
				<CompareBitmap numColorVariances="2" maxColorVariance="7" url="../Styles/baselines/$testID.png" target="container" />
			</body>
		</TestCase>

		<TestCase testID="Label_justificationStyle_pushInKinsoku2" description="Check 'pushInKinsoku' value of justificationStyle style" keywords="[TextBox, justificationStyle, Graphic]">
			<setup>
				<ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
				<SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=multiLineText;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetStyle target="textBoxComp.textBox" styleName="justificationRule" valueExpression="value=JustificationRule.EAST_ASIAN" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetStyle target="textBoxComp.textBox" styleName="justificationStyle" valueExpression="value=JustificationStyle.PRIORITIZE_LEAST_ADJUSTMENT" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetStyle target="textBoxComp.textBox" styleName="justificationStyle" valueExpression="value=JustificationStyle.PUSH_IN_KINSOKU" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
			</setup>
			<body>
				<AssertStyleValue target="textBoxComp.textBox" styleName="justificationStyle" value="pushInKinsoku" />
				<CompareBitmap numColorVariances="2" maxColorVariance="7" url="../Styles/baselines/$testID.png" target="container" />
			</body>
		</TestCase>

		<TestCase testID="Label_justificationStyle_pushOutOnly1" description="Check 'pushOutOnly' value of justificationStyle style" keywords="[TextBox, justificationStyle, Graphic]">
			<setup>
				<ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
				<SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=multiLineText;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetStyle target="textBoxComp.textBox" styleName="justificationStyle" valueExpression="value=JustificationStyle.PUSH_OUT_ONLY" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
			</setup>
			<body>
				<AssertStyleValue target="textBoxComp.textBox" styleName="justificationStyle" value="pushOutOnly" />
				<CompareBitmap numColorVariances="2" maxColorVariance="7" url="../Styles/baselines/$testID.png" target="container" />
			</body>
		</TestCase>

		<TestCase testID="Label_justificationStyle_pushOutOnly2" description="Check 'pushOutOnly' value of justificationStyle style" keywords="[TextBox, justificationStyle, Graphic]">
			<setup>
				<ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
				<SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=multiLineText;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetStyle target="textBoxComp.textBox" styleName="justificationRule" valueExpression="value=JustificationRule.EAST_ASIAN" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetStyle target="textBoxComp.textBox" styleName="justificationStyle" valueExpression="value=JustificationStyle.PUSH_OUT_ONLY" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
			</setup>
			<body>
				<AssertStyleValue target="textBoxComp.textBox" styleName="justificationStyle" value="pushOutOnly" />
				<CompareBitmap numColorVariances="2" maxColorVariance="7" url="../Styles/baselines/$testID.png" target="container" />
			</body>
		</TestCase>


		<!-- style: kerning -->
		<TestCase testID="Label_kerning_default" description="Check default value of kerning style" keywords="[TextBox, kerning, Graphic]">
			<setup>
				<ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
				<SetStyle target="textBoxComp.textBox" styleName="fontSize" value="97" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetStyle target="textBoxComp.textBox" styleName="fontFamily" value="ArialEmbedded" waitTarget="textBoxComp.textBox"  />
				<SetProperty target="textBoxComp.textBox" propertyName="text" value="Text" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
			</setup>
			<body>
				<AssertStyleValue target="textBoxComp.textBox" styleName="kerning" value="default" />
				<CompareBitmap numColorVariances="5" maxColorVariance="10" url="../Styles/baselines/$testID.png" target="container" />
			</body>
		</TestCase>

		<TestCase testID="Label_kerning_auto" description="Check 'auto' value of kerning style" keywords="[TextBox, kerning, Graphic]">
			<setup>
				<ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
				<SetStyle target="textBoxComp.textBox" styleName="fontSize" value="97" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetStyle target="textBoxComp.textBox" styleName="fontFamily" value="ArialEmbedded" waitTarget="textBoxComp.textBox"  />
				<SetProperty target="textBoxComp.textBox" propertyName="text" value="Text" waitTarget="textBoxComp.textBox"  />
				<SetStyle target="textBoxComp.textBox" styleName="kerning" valueExpression="value=Kerning.AUTO" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
			</setup>
			<body>
				<AssertStyleValue target="textBoxComp.textBox" styleName="kerning" value="auto" />
				<CompareBitmap numColorVariances="2" maxColorVariance="7" url="../Styles/baselines/$testID.png" target="container" />
			</body>
		</TestCase>

		<TestCase testID="Label_kerning_off" description="Check 'off' value of kerning style" keywords="[TextBox, kerning, Graphic]">
			<setup>
				<ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
				<SetStyle target="textBoxComp.textBox" styleName="fontSize" value="97" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetStyle target="textBoxComp.textBox" styleName="fontFamily" value="ArialEmbedded" waitTarget="textBoxComp.textBox"  />
				<SetStyle target="textBoxComp.textBox" styleName="kerning" valueExpression="value=Kerning.OFF"  />
				<SetProperty target="textBoxComp.textBox" propertyName="text" value="Text" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />

			</setup>
			<body>
				<AssertStyleValue target="textBoxComp.textBox" styleName="kerning" value="off" />
				<CompareBitmap numColorVariances="5" maxColorVariance="10" url="../Styles/baselines/$testID.png" target="container" />
			</body>
		</TestCase>

		<TestCase testID="Label_kerning_on" description="Check 'on' value of kerning style" keywords="[TextBox, kerning, Graphic]">
			<setup>
				<ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
				<SetStyle target="textBoxComp.textBox" styleName="fontSize" value="97" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetStyle target="textBoxComp.textBox" styleName="fontFamily" value="ArialEmbedded" waitTarget="textBoxComp.textBox"  />
				<SetProperty target="textBoxComp.textBox" propertyName="text" value="Text" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetStyle target="textBoxComp.textBox" styleName="kerning" valueExpression="value=Kerning.OFF" />
				<SetStyle target="textBoxComp.textBox" styleName="kerning" valueExpression="value=Kerning.ON" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
			</setup>
			<body>
				<AssertStyleValue target="textBoxComp.textBox" styleName="kerning" value="on" />
				<CompareBitmap numColorVariances="2" maxColorVariance="7" url="../Styles/baselines/$testID.png" target="container" />
			</body>
		</TestCase>


		<!-- style: ligatureLevel -->
		<TestCase testID="Label_ligatureLevel_default" description="Check default value of ligatureLevel style" keywords="[TextBox, ligatureLevel, Graphic]">
			<setup>
				<ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
				<SetStyle target="textBoxComp.textBox" styleName="fontFamily" value="ArnoEmbedded" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetStyle target="textBoxComp.textBox" styleName="fontSize" value="16" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=ligatureLevelText;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
			</setup>
			<body>
				<AssertStyleValue target="textBoxComp.textBox" styleName="ligatureLevel" value="common" />
				<CompareBitmap numColorVariances="2" maxColorVariance="7" url="../Styles/baselines/$testID.png" target="container" />
			</body>
		</TestCase>

		<TestCase testID="Label_ligatureLevel_common" description="Check 'common' value of ligatureLevel style" keywords="[TextBox, ligatureLevel, Graphic]">
			<setup>
				<ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
				<SetStyle target="textBoxComp.textBox" styleName="fontFamily" value="ArnoEmbedded" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetStyle target="textBoxComp.textBox" styleName="fontSize" value="16" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=ligatureLevelText;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetStyle target="textBoxComp.textBox" styleName="ligatureLevel" valueExpression="value=LigatureLevel.NONE" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetStyle target="textBoxComp.textBox" styleName="ligatureLevel" valueExpression="value=LigatureLevel.COMMON" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
			</setup>
			<body>
				<AssertStyleValue target="textBoxComp.textBox" styleName="ligatureLevel" value="common" />
				<CompareBitmap numColorVariances="2" maxColorVariance="7" url="../Styles/baselines/$testID.png" target="container" />
			</body>
		</TestCase>

		<TestCase testID="Label_ligatureLevel_exotic" description="Check 'exotic' value of ligatureLevel style" keywords="[TextBox, ligatureLevel, Graphic]">
			<setup>
				<ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
				<SetStyle target="textBoxComp.textBox" styleName="fontFamily" value="ArnoEmbedded" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetStyle target="textBoxComp.textBox" styleName="fontSize" value="16" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=ligatureLevelText;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetStyle target="textBoxComp.textBox" styleName="ligatureLevel" valueExpression="value=LigatureLevel.EXOTIC" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
			</setup>
			<body>
				<AssertStyleValue target="textBoxComp.textBox" styleName="ligatureLevel" value="exotic" />
				<CompareBitmap numColorVariances="2" maxColorVariance="7" url="../Styles/baselines/$testID.png" target="container" />
			</body>
		</TestCase>

		<TestCase testID="Label_ligatureLevel_minimum" description="Check 'minimum' value of ligatureLevel style" keywords="[TextBox, ligatureLevel, Graphic]">
			<setup>
				<ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
				<SetStyle target="textBoxComp.textBox" styleName="fontFamily" value="ArnoEmbedded" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetStyle target="textBoxComp.textBox" styleName="fontSize" value="16" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=ligatureLevelText;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetStyle target="textBoxComp.textBox" styleName="ligatureLevel" valueExpression="value=LigatureLevel.MINIMUM" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
			</setup>
			<body>
				<AssertStyleValue target="textBoxComp.textBox" styleName="ligatureLevel" value="minimum" />
				<CompareBitmap numColorVariances="2" maxColorVariance="7" url="../Styles/baselines/$testID.png" target="container" />
			</body>
		</TestCase>

		<TestCase testID="Label_ligatureLevel_none" description="Check 'none' value of ligatureLevel style" keywords="[TextBox, ligatureLevel, Graphic]">
			<setup>
				<ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
				<SetStyle target="textBoxComp.textBox" styleName="fontFamily" value="ArnoEmbedded" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetStyle target="textBoxComp.textBox" styleName="fontSize" value="16" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=ligatureLevelText;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetStyle target="textBoxComp.textBox" styleName="ligatureLevel" valueExpression="value=LigatureLevel.NONE" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
			</setup>
			<body>
				<AssertStyleValue target="textBoxComp.textBox" styleName="ligatureLevel" value="none" />
				<CompareBitmap numColorVariances="2" maxColorVariance="7" url="../Styles/baselines/$testID.png" target="container" />
			</body>
		</TestCase>

		<TestCase testID="Label_ligatureLevel_uncommon" description="Check 'uncommon' value of ligatureLevel style" keywords="[TextBox, ligatureLevel, Graphic]">
			<setup>
				<ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
				<SetStyle target="textBoxComp.textBox" styleName="fontFamily" value="ArnoEmbedded" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetStyle target="textBoxComp.textBox" styleName="fontSize" value="16" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=ligatureLevelText;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetStyle target="textBoxComp.textBox" styleName="ligatureLevel" valueExpression="value=LigatureLevel.UNCOMMON" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
			</setup>
			<body>
				<AssertStyleValue target="textBoxComp.textBox" styleName="ligatureLevel" value="uncommon" />
				<CompareBitmap numColorVariances="2" maxColorVariance="7" url="../Styles/baselines/$testID.png" target="container" />
			</body>
		</TestCase>


		<!-- style: lineBreak -->
		<TestCase testID="Label_lineBreak_default" description="Check default value of lineBreak style" keywords="[TextBox, lineBreak, Graphic]">
			<setup>
				<ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
				<SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=singleLineText;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
			</setup>
			<body>
				<AssertStyleValue target="textBoxComp.textBox" styleName="lineBreak" value="toFit" />
				<CompareBitmap numColorVariances="2" maxColorVariance="7" url="../Styles/baselines/$testID.png" target="container" />
			</body>
		</TestCase>

		<TestCase testID="Label_lineBreak_explicit" description="Check 'explicit' value of lineBreak style" keywords="[TextBox, lineBreak, Graphic]">
			<setup>
				<ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
				<SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=singleLineText;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetStyle target="textBoxComp.textBox" styleName="lineBreak" valueExpression="value=LineBreak.EXPLICIT;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
			</setup>
			<body>
				<AssertStyleValue target="textBoxComp.textBox" styleName="lineBreak" value="explicit" />
				<CompareBitmap numColorVariances="2" maxColorVariance="7" url="../Styles/baselines/$testID.png" target="container" />
			</body>
		</TestCase>

		<TestCase testID="Label_lineBreak_explicit_150" description="Check 'explicit' value of lineBreak style with single line text" keywords="[TextBox, lineBreak, Graphic]">
			<setup>
				<ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
				<SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=singleLineText;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetStyle target="textBoxComp.textBox" styleName="lineBreak" valueExpression="value=LineBreak.EXPLICIT;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetProperty target="textBoxComp.textBox" propertyName="width" value="150" waitTarget="textBoxComp.textBox" waitEvent="resize" />
			</setup>
			<body>
				<AssertStyleValue target="textBoxComp.textBox" styleName="lineBreak" value="explicit" />
				<CompareBitmap numColorVariances="5" maxColorVariance="10" url="../Styles/baselines/$testID.png" target="container" />
			</body>
		</TestCase>

		<TestCase testID="Label_lineBreak_explicit_150_multi" description="Check 'explicit' value of lineBreak style with multi-line text" keywords="[TextBox, lineBreak, Graphic]">
			<setup>
				<ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
				<SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=multiLineText;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetStyle target="textBoxComp.textBox" styleName="lineBreak" valueExpression="value=LineBreak.EXPLICIT;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetProperty target="textBoxComp.textBox" propertyName="width" value="150" waitTarget="textBoxComp.textBox" waitEvent="resize" />
			</setup>
			<body>
				<AssertStyleValue target="textBoxComp.textBox" styleName="lineBreak" value="explicit" />
				<CompareBitmap numColorVariances="2" maxColorVariance="7" url="../Styles/baselines/$testID.png" target="container" />
			</body>
		</TestCase>

		<TestCase testID="Label_lineBreak_toFit" description="Check 'toFit' value of lineBreak style with single line text" keywords="[TextBox, lineBreak, Graphic]">
			<setup>
				<ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
				<SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=singleLineText;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetStyle target="textBoxComp.textBox" styleName="lineBreak" valueExpression="value=LineBreak.EXPLICIT;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetStyle target="textBoxComp.textBox" styleName="lineBreak" valueExpression="value=LineBreak.TO_FIT;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
			</setup>
			<body>
				<AssertStyleValue target="textBoxComp.textBox" styleName="lineBreak" value="toFit" />
				<CompareBitmap numColorVariances="2" maxColorVariance="7" url="../Styles/baselines/$testID.png" target="container" />
			</body>
		</TestCase>

		<TestCase testID="Label_lineBreak_toFit_150" description="Check 'toFit' value of lineBreak style with single line text" keywords="[TextBox, lineBreak, Graphic]">
			<setup>
				<ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
				<SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=singleLineText;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetProperty target="textBoxComp.textBox" propertyName="width" value="150" waitTarget="textBoxComp.textBox" waitEvent="resize" />
			</setup>
			<body>
				<AssertStyleValue target="textBoxComp.textBox" styleName="lineBreak" value="toFit" />
				<CompareBitmap numColorVariances="2" maxColorVariance="7" url="../Styles/baselines/$testID.png" target="container" />
			</body>
		</TestCase>

		<TestCase testID="Label_lineBreak_toFit_150_multi" description="Check 'toFit' value of lineBreak style with multi-line text" keywords="[TextBox, lineBreak, Graphic]">
			<setup>
				<ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
				<SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=multiLineText;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetProperty target="textBoxComp.textBox" propertyName="width" value="150" waitTarget="textBoxComp.textBox" waitEvent="resize" />
			</setup>
			<body>
				<AssertStyleValue target="textBoxComp.textBox" styleName="lineBreak" value="toFit" />
				<CompareBitmap numColorVariances="2" maxColorVariance="7" url="../Styles/baselines/$testID.png" target="container" />
			</body>
		</TestCase>


		<!-- style: lineHeight -->
		<TestCase testID="Label_lineHeight_default" description="Check default value of lineHeight style" keywords="[TextBox, lineHeight, Graphic]">
			<setup>
				<ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
				<SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=singleLineText;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetProperty target="textBoxComp.textBox" propertyName="width" value="150" waitTarget="textBoxComp.textBox" waitEvent="resize" />
			</setup>
			<body>
				<AssertStyleValue target="textBoxComp.textBox" styleName="lineHeight" value="120%" />
				<CompareBitmap numColorVariances="2" maxColorVariance="7" url="../Styles/baselines/$testID.png" target="container" />
			</body>
		</TestCase>

		<TestCase testID="Label_lineHeight_10" description="Check lineHeight 10px" keywords="[TextBox, lineHeight, Graphic]">
			<setup>
				<ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
				<SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=singleLineText;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetProperty target="textBoxComp.textBox" propertyName="width" value="150" waitTarget="textBoxComp.textBox" waitEvent="resize" />
				<SetStyle target="textBoxComp.textBox" styleName="lineHeight" value="10" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
			</setup>
			<body>
				<AssertStyleValue target="textBoxComp.textBox" styleName="lineHeight" value="10" />
				<CompareBitmap numColorVariances="2" maxColorVariance="7" url="../Styles/baselines/$testID.png" target="container" />
			</body>
		</TestCase>

		<TestCase testID="Label_lineHeight_20" description="Check lineHeight 20px" keywords="[TextBox, lineHeight, Graphic]">
			<setup>
				<ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
				<SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=singleLineText;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetProperty target="textBoxComp.textBox" propertyName="width" value="150" waitTarget="textBoxComp.textBox" waitEvent="resize" />
				<SetStyle target="textBoxComp.textBox" styleName="lineHeight" value="20" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
			</setup>
			<body>
				<AssertStyleValue target="textBoxComp.textBox" styleName="lineHeight" value="20" />
				<CompareBitmap numColorVariances="2" maxColorVariance="7" url="../Styles/baselines/$testID.png" target="container" />
			</body>
		</TestCase>

		<TestCase testID="Label_lineHeight_40" description="Check lineHeight 40px" keywords="[TextBox, lineHeight, Graphic]">
			<setup>
				<ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
				<SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=singleLineText;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetProperty target="textBoxComp.textBox" propertyName="width" value="150" waitTarget="textBoxComp.textBox" waitEvent="resize" />
				<SetStyle target="textBoxComp.textBox" styleName="lineHeight" value="40" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
			</setup>
			<body>
				<AssertStyleValue target="textBoxComp.textBox" styleName="lineHeight" value="40" />
				<CompareBitmap numColorVariances="2" maxColorVariance="7" url="../Styles/baselines/$testID.png" target="container" />
			</body>
		</TestCase>

		<TestCase testID="Label_lineHeight_50pct" description="Check lineHeight 50%" keywords="[TextBox, lineHeight, Graphic]">
			<setup>
				<ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
				<SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=singleLineText;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetProperty target="textBoxComp.textBox" propertyName="width" value="150" waitTarget="textBoxComp.textBox" waitEvent="resize" />
				<SetStyle target="textBoxComp.textBox" styleName="lineHeight" value="50%" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
			</setup>
			<body>
				<AssertStyleValue target="textBoxComp.textBox" styleName="lineHeight" value="50%" />
				<CompareBitmap numColorVariances="2" maxColorVariance="7" url="../Styles/baselines/$testID.png" target="container" />
			</body>
		</TestCase>

		<TestCase testID="Label_lineHeight_100pct" description="Check lineHeight 100%" keywords="[TextBox, lineHeight, Graphic]">
			<setup>
				<ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
				<SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=singleLineText;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetProperty target="textBoxComp.textBox" propertyName="width" value="150" waitTarget="textBoxComp.textBox" waitEvent="resize" />
				<SetStyle target="textBoxComp.textBox" styleName="lineHeight" value="100%" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
			</setup>
			<body>
				<AssertStyleValue target="textBoxComp.textBox" styleName="lineHeight" value="100%" />
				<CompareBitmap numColorVariances="2" maxColorVariance="7" url="../Styles/baselines/$testID.png" target="container" />
			</body>
		</TestCase>

		<TestCase testID="Label_lineHeight_200pct" description="Check lineHeight 100%" keywords="[TextBox, lineHeight, Graphic]">
			<setup>
				<ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
				<SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=singleLineText;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetProperty target="textBoxComp.textBox" propertyName="width" value="150" waitTarget="textBoxComp.textBox" waitEvent="resize" />
				<SetStyle target="textBoxComp.textBox" styleName="lineHeight" value="200%" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
			</setup>
			<body>
				<AssertStyleValue target="textBoxComp.textBox" styleName="lineHeight" value="200%" />
				<CompareBitmap numColorVariances="2" maxColorVariance="7" url="../Styles/baselines/$testID.png" target="container" />
			</body>
		</TestCase>

		<TestCase testID="Label_lineHeight_null" description="Check lineHeight null" keywords="[TextBox, lineHeight, Graphic]">
			<setup>
				<ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
				<SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=singleLineText;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetProperty target="textBoxComp.textBox" propertyName="width" value="150" waitTarget="textBoxComp.textBox" waitEvent="resize" />
			</setup>
			<body>
				<SetStyle target="textBoxComp.textBox" styleName="lineHeight" value="200%" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<AssertStyleValue target="textBoxComp.textBox" styleName="lineHeight" value="200%" />
				<SetStyle target="textBoxComp.textBox" styleName="lineHeight" value="null" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<AssertStyleValue target="textBoxComp.textBox" styleName="lineHeight" value="null" />
				<CompareBitmap numColorVariances="2" maxColorVariance="7" url="../Styles/baselines/$testID.png" target="container" />
			</body>
		</TestCase>


		<!-- style: lineThrough -->
		<TestCase testID="Label_lineThrough_default" description="Check default value of lineThrough style" keywords="[TextBox, lineThrough, Graphic]">
			<setup>
				<ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
				<SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=singleLineText;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetProperty target="textBoxComp.textBox" propertyName="width" value="150" waitTarget="textBoxComp.textBox" waitEvent="resize" />
			</setup>
			<body>
				<AssertStyleValue target="textBoxComp.textBox" styleName="lineThrough" value="false" />
				<CompareBitmap numColorVariances="2" maxColorVariance="7" url="../Styles/baselines/$testID.png" target="container" />
			</body>
		</TestCase>

		<TestCase testID="Label_lineThrough_true" description="Check 'true' value of lineThrough style" keywords="[TextBox, lineThrough, Graphic]">
			<setup>
				<ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
				<SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=singleLineText;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetProperty target="textBoxComp.textBox" propertyName="width" value="150" waitTarget="textBoxComp.textBox" waitEvent="resize" />
				<SetStyle target="textBoxComp.textBox" styleName="lineThrough" value="true" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
			</setup>
			<body>
				<AssertStyleValue target="textBoxComp.textBox" styleName="lineThrough" value="true" />
				<CompareBitmap numColorVariances="2" maxColorVariance="7" url="../Styles/baselines/$testID.png" target="container" />
			</body>
		</TestCase>

		<TestCase testID="Label_lineThrough_false" description="Check 'false' value of lineThrough style" keywords="[TextBox, lineThrough, Graphic]">
			<setup>
				<ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
				<SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=singleLineText;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetProperty target="textBoxComp.textBox" propertyName="width" value="150" waitTarget="textBoxComp.textBox" waitEvent="resize" />
				<SetStyle target="textBoxComp.textBox" styleName="lineThrough" value="true" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetStyle target="textBoxComp.textBox" styleName="lineThrough" value="false" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
			</setup>
			<body>
				<AssertStyleValue target="textBoxComp.textBox" styleName="lineThrough" value="false" />
				<CompareBitmap numColorVariances="2" maxColorVariance="7" url="../Styles/baselines/$testID.png" target="container" />
			</body>
		</TestCase>

		<TestCase testID="Label_lineThrough_null" description="Check null value of lineThrough style" keywords="[TextBox, lineThrough, Graphic]">
			<setup>
				<ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
				<SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=singleLineText;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetProperty target="textBoxComp.textBox" propertyName="width" value="150" waitTarget="textBoxComp.textBox" waitEvent="resize" />
				<SetStyle target="textBoxComp.textBox" styleName="lineThrough" value="true" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<RunCode code="application.textBoxComp.textBox.clearStyle('lineThrough')"  waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
			</setup>
			<body>
				<AssertStyleValue target="textBoxComp.textBox" styleName="lineThrough" value="false" />
				<CompareBitmap numColorVariances="2" maxColorVariance="7" url="../Styles/baselines/$testID.png" target="container" />
			</body>
		</TestCase>


		<!-- style: locale -->
		<TestCase testID="Label_locale_default" description="Check default value of locale style" keywords="[TextBox, locale, Graphic]">
			<setup>
				<ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
				<SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=singleLineText;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetProperty target="textBoxComp.textBox" propertyName="width" value="150" waitTarget="textBoxComp.textBox" waitEvent="resize" />
			</setup>
			<body>
				<AssertStyleValue target="textBoxComp.textBox" styleName="locale" value="en" />
				<CompareBitmap numColorVariances="2" maxColorVariance="7" url="../Styles/baselines/$testID.png" target="container" />
			</body>
		</TestCase>


		<!-- style: paddingBottom -->
		<TestCase testID="Label_paddingBottom_default" description="Check default value of paddingBottom style" keywords="[TextBox, paddingBottom, Graphic]">
			<setup>
				<ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
				<SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=singleLineText;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetProperty target="textBoxComp.textBox" propertyName="width" value="150" waitTarget="textBoxComp.textBox" waitEvent="resize" />
			</setup>
			<body>
				<AssertStyleValue target="textBoxComp.textBox" styleName="paddingBottom" value="0" />
				<CompareBitmap numColorVariances="2" maxColorVariance="7" url="../Styles/baselines/$testID.png" target="container" />
			</body>
		</TestCase>

		<TestCase testID="Label_paddingBottom_20" description="Check value of 20 for paddingBottom style" keywords="[TextBox, paddingBottom, Graphic]">
			<setup>
				<ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
				<SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=singleLineText;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetProperty target="textBoxComp.textBox" propertyName="width" value="100" waitTarget="textBoxComp.textBox" waitEvent="resize" />
				<SetProperty target="textBoxComp.textBox" propertyName="height" value="100" waitTarget="textBoxComp.textBox" waitEvent="resize" />
				<SetStyle target="textBoxComp.textBox" styleName="verticalAlign" value="middle" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetStyle target="textBoxComp.textBox" styleName="paddingBottom" value="20" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
			</setup>
			<body>
				<AssertStyleValue target="textBoxComp.textBox" styleName="paddingBottom" value="20" />
				<CompareBitmap url="../Styles/baselines/$testID.png" target="container" numColorVariances="2" maxColorVariance="10" />
			</body>
		</TestCase>
		

		<TestCase testID="Label_paddingBottom_vertAlignJustify_50" description="Check paddingBottom style when text is vertically justified" keywords="[TextBox, paddingBottom, Graphic]">
			<setup>
				<ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
				<SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=singleLineText;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetProperty target="textBoxComp.textBox" propertyName="width" value="100" waitTarget="textBoxComp.textBox" waitEvent="resize" />
				<SetProperty target="textBoxComp.textBox" propertyName="height" value="100" waitTarget="textBoxComp.textBox" waitEvent="resize" />
				<SetStyle target="textBoxComp.textBox" styleName="verticalAlign" value="justify" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetStyle target="textBoxComp.textBox" styleName="paddingBottom" value="50" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
			</setup>
			<body>
				<AssertStyleValue target="textBoxComp.textBox" styleName="paddingBottom" value="50" />
				<CompareBitmap url="../Styles/baselines/$testID.png" target="container" numColorVariances="2" maxColorVariance="10" />
			</body>
		</TestCase>
		
		<TestCase testID="Label_paddingBottom_null" description="Check value of null for paddingBottom style" keywords="[TextBox, paddingBottom, Graphic]">
			<setup>
				<ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
				<SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=singleLineText;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetProperty target="textBoxComp.textBox" propertyName="width" value="100" waitTarget="textBoxComp.textBox" waitEvent="resize" />
				<SetProperty target="textBoxComp.textBox" propertyName="height" value="100" waitTarget="textBoxComp.textBox" waitEvent="resize" />
				<SetStyle target="textBoxComp.textBox" styleName="verticalAlign" value="middle" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetStyle target="textBoxComp.textBox" styleName="paddingBottom" value="80" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
			</setup>
			<body>
				<SetStyle target="textBoxComp.textBox" styleName="paddingBottom" valueExpression="value=null" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<AssertStyleValue target="textBoxComp.textBox" styleName="paddingBottom" value="null" />
				<CompareBitmap url="../Styles/baselines/$testID.png" target="container" numColorVariances="2" maxColorVariance="10" />
			</body>
		</TestCase>


		<!-- style: paddingLeft -->
		<TestCase testID="Label_paddingLeft_default" description="Check default value of paddingBottom style" keywords="[TextBox, paddingLeft, Graphic]">
			<setup>
				<ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
				<SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=singleLineText;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetProperty target="textBoxComp.textBox" propertyName="width" value="150" waitTarget="textBoxComp.textBox" waitEvent="resize" />
			</setup>
			<body>
				<AssertStyleValue target="textBoxComp.textBox" styleName="paddingLeft" value="0" />
				<CompareBitmap numColorVariances="2" maxColorVariance="7" url="../Styles/baselines/$testID.png" target="container" />
			</body>
		</TestCase>

		<TestCase testID="Label_paddingLeft_20" description="Check value of 20 for paddingLeft style" keywords="[TextBox, paddingLeft, Graphic]">
			<setup>
				<ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
				<SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=singleLineText;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetProperty target="textBoxComp.textBox" propertyName="width" value="100" waitTarget="textBoxComp.textBox" waitEvent="resize" />
				<SetProperty target="textBoxComp.textBox" propertyName="height" value="100" waitTarget="textBoxComp.textBox" waitEvent="resize" />
				<SetStyle target="textBoxComp.textBox" styleName="verticalAlign" value="middle" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetStyle target="textBoxComp.textBox" styleName="paddingLeft" value="20" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
			</setup>
			<body>
				<AssertStyleValue target="textBoxComp.textBox" styleName="paddingLeft" value="20" />
				<CompareBitmap numColorVariances="2" maxColorVariance="7" url="../Styles/baselines/$testID.png" target="container" />
			</body>
		</TestCase>

		<TestCase testID="Label_paddingLeft_50" description="Check value of 50 for paddingLeft style" keywords="[TextBox, paddingLeft, Graphic]">
			<setup>
				<ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
				<SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=singleLineText;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetProperty target="textBoxComp.textBox" propertyName="width" value="100" waitTarget="textBoxComp.textBox" waitEvent="resize" />
				<SetProperty target="textBoxComp.textBox" propertyName="height" value="100" waitTarget="textBoxComp.textBox" waitEvent="resize" />
				<SetStyle target="textBoxComp.textBox" styleName="verticalAlign" value="middle" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetStyle target="textBoxComp.textBox" styleName="paddingLeft" value="50" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
			</setup>
			<body>
				<AssertStyleValue target="textBoxComp.textBox" styleName="paddingLeft" value="50" />
				<CompareBitmap numColorVariances="2" maxColorVariance="7" url="../Styles/baselines/$testID.png" target="container" />
			</body>
		</TestCase>

		<TestCase testID="Label_paddingLeft_55" description="Check value of 55 for paddingLeft style" keywords="[TextBox, paddingLeft, Graphic]">
			<setup>
				<ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
				<SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=singleLineText;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetProperty target="textBoxComp.textBox" propertyName="width" value="100" waitTarget="textBoxComp.textBox" waitEvent="resize" />
				<SetProperty target="textBoxComp.textBox" propertyName="height" value="100" waitTarget="textBoxComp.textBox" waitEvent="resize" />
				<SetStyle target="textBoxComp.textBox" styleName="verticalAlign" value="middle" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetStyle target="textBoxComp.textBox" styleName="paddingLeft" value="55" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
			</setup>
			<body>
				<AssertStyleValue target="textBoxComp.textBox" styleName="paddingLeft" value="55" />
				<CompareBitmap numColorVariances="2" maxColorVariance="7" url="../Styles/baselines/$testID.png" target="container" />
			</body>
		</TestCase>

		<TestCase testID="Label_paddingLeft_null" description="Check value of 55 for paddingLeft style" keywords="[TextBox, paddingLeft, Graphic]">
			<setup>
				<ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
				<SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=singleLineText;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetProperty target="textBoxComp.textBox" propertyName="width" value="100" waitTarget="textBoxComp.textBox" waitEvent="resize" />
				<SetProperty target="textBoxComp.textBox" propertyName="height" value="100" waitTarget="textBoxComp.textBox" waitEvent="resize" />
				<SetStyle target="textBoxComp.textBox" styleName="verticalAlign" value="middle" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetStyle target="textBoxComp.textBox" styleName="paddingLeft" value="55" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
			</setup>
			<body>
				<SetStyle target="textBoxComp.textBox" styleName="paddingLeft" valueExpression="value=null" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<AssertStyleValue target="textBoxComp.textBox" styleName="paddingLeft" value="null" />
				<CompareBitmap url="../Styles/baselines/$testID.png" target="container" numColorVariances="2" maxColorVariance="10" />
			</body>
		</TestCase>


		<!-- style: paddingRight -->
		<TestCase testID="Label_paddingRight_default" description="Check default value of paddingRight style" keywords="[TextBox, paddingRight, Graphic]">
			<setup>
				<ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
				<SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=singleLineText;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetProperty target="textBoxComp.textBox" propertyName="width" value="150" waitTarget="textBoxComp.textBox" waitEvent="resize" />
			</setup>
			<body>
				<AssertStyleValue target="textBoxComp.textBox" styleName="paddingRight" value="0" />
				<CompareBitmap numColorVariances="2" maxColorVariance="7" url="../Styles/baselines/$testID.png" target="container" />
			</body>
		</TestCase>

		<TestCase testID="Label_paddingRight_20" description="Check value of 20 for paddingRight style" keywords="[TextBox, paddingRight, Graphic]">
			<setup>
				<ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
				<SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=singleLineText;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetProperty target="textBoxComp.textBox" propertyName="width" value="100" waitTarget="textBoxComp.textBox" waitEvent="resize" />
				<SetProperty target="textBoxComp.textBox" propertyName="height" value="100" waitTarget="textBoxComp.textBox" waitEvent="resize" />
				<SetStyle target="textBoxComp.textBox" styleName="verticalAlign" value="middle" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetStyle target="textBoxComp.textBox" styleName="paddingRight" value="20" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
			</setup>
			<body>
				<AssertStyleValue target="textBoxComp.textBox" styleName="paddingRight" value="20" />
				<CompareBitmap numColorVariances="2" maxColorVariance="7" url="../Styles/baselines/$testID.png" target="container" />
			</body>
		</TestCase>

		<TestCase testID="Label_paddingRight_50" description="Check value of 50 for paddingRight style" keywords="[TextBox, paddingRight, Graphic]">
			<setup>
				<ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
				<SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=singleLineText;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetProperty target="textBoxComp.textBox" propertyName="width" value="100" waitTarget="textBoxComp.textBox" waitEvent="resize" />
				<SetProperty target="textBoxComp.textBox" propertyName="height" value="100" waitTarget="textBoxComp.textBox" waitEvent="resize" />
				<SetStyle target="textBoxComp.textBox" styleName="verticalAlign" value="middle" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetStyle target="textBoxComp.textBox" styleName="paddingRight" value="50" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
			</setup>
			<body>
				<AssertStyleValue target="textBoxComp.textBox" styleName="paddingRight" value="50" />
				<CompareBitmap numColorVariances="2" maxColorVariance="7" url="../Styles/baselines/$testID.png" target="container" />
			</body>
		</TestCase>

		<TestCase testID="Label_paddingRight_55" description="Check value of 55 for paddingRight style" keywords="[TextBox, paddingRight, Graphic]">
			<setup>
				<ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
				<SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=singleLineText;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetProperty target="textBoxComp.textBox" propertyName="width" value="100" waitTarget="textBoxComp.textBox" waitEvent="resize" />
				<SetProperty target="textBoxComp.textBox" propertyName="height" value="100" waitTarget="textBoxComp.textBox" waitEvent="resize" />
				<SetStyle target="textBoxComp.textBox" styleName="verticalAlign" value="middle" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetStyle target="textBoxComp.textBox" styleName="paddingRight" value="55" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
			</setup>
			<body>
				<AssertStyleValue target="textBoxComp.textBox" styleName="paddingRight" value="55" />
				<CompareBitmap numColorVariances="2" maxColorVariance="7" url="../Styles/baselines/$testID.png" target="container" />
			</body>
		</TestCase>

		<TestCase testID="Label_paddingRight_null" description="Check value of 55 for paddingRight style" keywords="[TextBox, paddingRight, Graphic]">
			<setup>
				<ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
				<SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=singleLineText;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetProperty target="textBoxComp.textBox" propertyName="width" value="100" waitTarget="textBoxComp.textBox" waitEvent="resize" />
				<SetProperty target="textBoxComp.textBox" propertyName="height" value="100" waitTarget="textBoxComp.textBox" waitEvent="resize" />
				<SetStyle target="textBoxComp.textBox" styleName="verticalAlign" value="middle" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetStyle target="textBoxComp.textBox" styleName="paddingRight" value="55" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
			</setup>
			<body>
				<SetStyle target="textBoxComp.textBox" styleName="paddingRight" valueExpression="value=null" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<AssertStyleValue target="textBoxComp.textBox" styleName="paddingRight" value="null" />
				<CompareBitmap url="../Styles/baselines/$testID.png" target="container" numColorVariances="2" maxColorVariance="10" />
			</body>
		</TestCase>


		<!-- style: paddingTop -->
		<TestCase testID="Label_paddingTop_default" description="Check default value of paddingTop style" keywords="[TextBox, paddingTop, Graphic]">
			<setup>
				<ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
				<SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=singleLineText;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetProperty target="textBoxComp.textBox" propertyName="width" value="150" waitTarget="textBoxComp.textBox" waitEvent="resize" />
			</setup>
			<body>
				<AssertStyleValue target="textBoxComp.textBox" styleName="paddingTop" value="0" />
				<CompareBitmap numColorVariances="2" maxColorVariance="7" url="../Styles/baselines/$testID.png" target="container" />
			</body>
		</TestCase>

		<TestCase testID="Label_paddingTop_20" description="Check value of 20 for paddingTop style" keywords="[TextBox, paddingTop, Graphic]">
			<setup>
				<ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
				<SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=singleLineText;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetProperty target="textBoxComp.textBox" propertyName="width" value="100" waitTarget="textBoxComp.textBox" waitEvent="resize" />
				<SetProperty target="textBoxComp.textBox" propertyName="height" value="100" waitTarget="textBoxComp.textBox" waitEvent="resize" />
				<SetStyle target="textBoxComp.textBox" styleName="verticalAlign" value="middle" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetStyle target="textBoxComp.textBox" styleName="paddingTop" value="20" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
			</setup>
			<body>
				<AssertStyleValue target="textBoxComp.textBox" styleName="paddingTop" value="20" />
				<CompareBitmap url="../Styles/baselines/$testID.png" target="container" numColorVariances="2" maxColorVariance="10" />
			</body>
		</TestCase>

		<TestCase testID="Label_paddingTop_70" description="Check value of 70 for paddingTop style" keywords="[TextBox, paddingTop, Graphic]">
			<setup>
				<ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
				<SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=singleLineText;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetProperty target="textBoxComp.textBox" propertyName="width" value="100" waitTarget="textBoxComp.textBox" waitEvent="resize" />
				<SetProperty target="textBoxComp.textBox" propertyName="height" value="100" waitTarget="textBoxComp.textBox" waitEvent="resize" />
				<SetStyle target="textBoxComp.textBox" styleName="verticalAlign" value="middle" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetStyle target="textBoxComp.textBox" styleName="paddingTop" value="70" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
			</setup>
			<body>
				<AssertStyleValue target="textBoxComp.textBox" styleName="paddingTop" value="70" />
				<CompareBitmap url="../Styles/baselines/$testID.png" target="container" numColorVariances="2" maxColorVariance="10" />
			</body>
		</TestCase>

		<TestCase testID="Label_paddingTop_72" description="Check value of 72 for paddingTop style" keywords="[TextBox, paddingTop, Graphic]">
			<setup>
				<ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
				<SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=singleLineText;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetProperty target="textBoxComp.textBox" propertyName="width" value="100" waitTarget="textBoxComp.textBox" waitEvent="resize" />
				<SetProperty target="textBoxComp.textBox" propertyName="height" value="100" waitTarget="textBoxComp.textBox" waitEvent="resize" />
				<SetStyle target="textBoxComp.textBox" styleName="verticalAlign" value="middle" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetStyle target="textBoxComp.textBox" styleName="paddingTop" value="72" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
			</setup>
			<body>
				<AssertStyleValue target="textBoxComp.textBox" styleName="paddingTop" value="72" />
				<CompareBitmap url="../Styles/baselines/$testID.png" target="container" numColorVariances="2" maxColorVariance="10" />
			</body>
		</TestCase>

		<TestCase testID="Label_paddingTop_vertAlignJustify_50" description="Check paddingTop style when text is vertically justified" keywords="[TextBox, paddingTop, Graphic]">
			<setup>
				<ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
				<SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=singleLineText;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetProperty target="textBoxComp.textBox" propertyName="width" value="100" waitTarget="textBoxComp.textBox" waitEvent="resize" />
				<SetProperty target="textBoxComp.textBox" propertyName="height" value="100" waitTarget="textBoxComp.textBox" waitEvent="resize" />
				<SetStyle target="textBoxComp.textBox" styleName="verticalAlign" value="justify" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetStyle target="textBoxComp.textBox" styleName="paddingTop" value="50" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
			</setup>
			<body>
				<AssertStyleValue target="textBoxComp.textBox" styleName="paddingTop" value="50" />
				<CompareBitmap url="../Styles/baselines/$testID.png" target="container" numColorVariances="2" maxColorVariance="10" />
			</body>
		</TestCase>
		
		<TestCase testID="Label_paddingTop_null" description="Check value of null for paddingTop style" keywords="[TextBox, paddingTop, Graphic]">
			<setup>
				<ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
				<SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=singleLineText;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetProperty target="textBoxComp.textBox" propertyName="width" value="100" waitTarget="textBoxComp.textBox" waitEvent="resize" />
				<SetProperty target="textBoxComp.textBox" propertyName="height" value="100" waitTarget="textBoxComp.textBox" waitEvent="resize" />
				<SetStyle target="textBoxComp.textBox" styleName="verticalAlign" value="middle" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetStyle target="textBoxComp.textBox" styleName="paddingTop" value="80" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
			</setup>
			<body>
				<SetStyle target="textBoxComp.textBox" styleName="paddingTop" valueExpression="value=null" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<AssertStyleValue target="textBoxComp.textBox" styleName="paddingTop" value="null" />
				<CompareBitmap url="../Styles/baselines/$testID.png" target="container" numColorVariances="2" maxColorVariance="10" />
			</body>
		</TestCase>


		<!-- style: renderingMode -->
		<TestCase testID="Label_renderingMode_default" description="Check default value of renderingMode style" keywords="[TextBox, renderingMode, Graphic]">
			<setup>
				<ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
				<SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=singleLineText;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetProperty target="textBoxComp.textBox" propertyName="width" value="150" waitTarget="textBoxComp.textBox" waitEvent="resize" />
			</setup>
			<body>
				<AssertStyleValue target="textBoxComp.textBox" styleName="renderingMode" value="cff" />
				<CompareBitmap numColorVariances="2" maxColorVariance="7" url="../Styles/baselines/$testID.png" target="container" />
			</body>
		</TestCase>

		<TestCase testID="Label_renderingMode_normal" description="Check 'normal' value of renderingMode style" keywords="[TextBox, renderingMode, Graphic]">
			<setup>
				<ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
				<SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=singleLineText;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetProperty target="textBoxComp.textBox" propertyName="width" value="150" waitTarget="textBoxComp.textBox" waitEvent="resize" />
				<SetStyle target="textBoxComp.textBox" styleName="renderingMode" valueExpression="value=RenderingMode.NORMAL;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
			</setup>
			<body>
				<AssertStyleValue target="textBoxComp.textBox" styleName="renderingMode" value="normal" />
				<CompareBitmap numColorVariances="2" maxColorVariance="7" url="../Styles/baselines/$testID.png" target="container" />
			</body>
		</TestCase>

		<TestCase testID="Label_renderingMode_cff" description="Check 'cff' value of renderingMode style" keywords="[TextBox, renderingMode, Graphic]">
			<setup>
				<ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
				<SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=singleLineText;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetProperty target="textBoxComp.textBox" propertyName="width" value="150" waitTarget="textBoxComp.textBox" waitEvent="resize" />
				<SetStyle target="textBoxComp.textBox" styleName="renderingMode" valueExpression="value=RenderingMode.NORMAL;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
				<SetStyle target="textBoxComp.textBox" styleName="renderingMode" valueExpression="value=RenderingMode.CFF;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
			</setup>
			<body>
				<AssertStyleValue target="textBoxComp.textBox" styleName="renderingMode" value="cff" />
				<CompareBitmap numColorVariances="2" maxColorVariance="7" url="../Styles/baselines/$testID.png" target="container" />
			</body>
		</TestCase>

		
		
        <!-- style: textAlign -->
        <TestCase testID="Label_textAlign_default" description="Check default value of textAlign style" keywords="[TextBox, textAlign, Graphic]">
            <setup>
                <ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
                <SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=lorem1;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
                <SetProperty target="textBoxComp.textBox" propertyName="width" value="100" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
            </setup>
            <body>
                <AssertStyleValue target="textBoxComp.textBox" styleName="textAlign" value="start" />
                <CompareBitmap numColorVariances="5" maxColorVariance="15"  url="../Styles/baselines/$testID.png" target="container" />
            </body>
        </TestCase>

        <TestCase testID="Label_textAlign_center" description="Check center value of textAlign style" keywords="[TextBox, textAlign, Graphic]">
            <setup>
                <ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
                <SetStyle target="textBoxComp.textBox" styleName="textAlign" valueExpression="value=TextAlign.CENTER;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
                <SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=lorem1;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
                <SetProperty target="textBoxComp.textBox" propertyName="width" value="100" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
            </setup>
            <body>
                <AssertStyleValue target="textBoxComp.textBox" styleName="textAlign" value="center" />
                <CompareBitmap numColorVariances="5" maxColorVariance="15"  url="../Styles/baselines/$testID.png" target="container" />
            </body>
        </TestCase>

        <TestCase testID="Label_textAlign_end" description="Check end value of textAlign style" keywords="[TextBox, textAlign, Graphic]">
            <setup>
                <ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
                <SetStyle target="textBoxComp.textBox" styleName="textAlign" valueExpression="value=TextAlign.END;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
                <SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=lorem1;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
                <SetProperty target="textBoxComp.textBox" propertyName="width" value="100" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
            </setup>
            <body>
                <AssertStyleValue target="textBoxComp.textBox" styleName="textAlign" value="end" />
                <CompareBitmap numColorVariances="5" maxColorVariance="15"  url="../Styles/baselines/$testID.png" target="container" />
            </body>
        </TestCase>

        <TestCase testID="Label_textAlign_justify" description="Check justify value of textAlign style" keywords="[TextBox, textAlign, Graphic]">
            <setup>
                <ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
                <SetStyle target="textBoxComp.textBox" styleName="textAlign" valueExpression="value=TextAlign.JUSTIFY;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
                <SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=lorem1;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
                <SetProperty target="textBoxComp.textBox" propertyName="width" value="100" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
            </setup>
            <body>
                <AssertStyleValue target="textBoxComp.textBox" styleName="textAlign" value="justify" />
                <CompareBitmap numColorVariances="5" maxColorVariance="15"  url="../Styles/baselines/$testID.png" target="container" />
            </body>
        </TestCase>

        <TestCase testID="Label_textAlign_left" description="Check left value of textAlign style" keywords="[TextBox, textAlign, Graphic]">
            <setup>
                <ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
                <SetStyle target="textBoxComp.textBox" styleName="textAlign" valueExpression="value=TextAlign.CENTER;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
                <SetStyle target="textBoxComp.textBox" styleName="textAlign" valueExpression="value=TextAlign.LEFT;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
                <SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=lorem1;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
                <SetProperty target="textBoxComp.textBox" propertyName="width" value="100" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
            </setup>
            <body>
                <AssertStyleValue target="textBoxComp.textBox" styleName="textAlign" value="left" />
                <CompareBitmap numColorVariances="5" maxColorVariance="15"  url="../Styles/baselines/$testID.png" target="container" />
            </body>
        </TestCase>

        <TestCase testID="Label_textAlign_right" description="Check right value of textAlign style" keywords="[TextBox, textAlign, Graphic]">
            <setup>
                <ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
                <SetStyle target="textBoxComp.textBox" styleName="textAlign" valueExpression="value=TextAlign.RIGHT;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
                <SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=lorem1;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
                <SetProperty target="textBoxComp.textBox" propertyName="width" value="100" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
            </setup>
            <body>
                <AssertStyleValue target="textBoxComp.textBox" styleName="textAlign" value="right" />
                <CompareBitmap numColorVariances="5" maxColorVariance="15"  url="../Styles/baselines/$testID.png" target="container" />
            </body>
        </TestCase>

        <TestCase testID="Label_textAlign_start" description="Check start value of textAlign style" keywords="[TextBox, textAlign, Graphic]">
            <setup>
                <ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
                <SetStyle target="textBoxComp.textBox" styleName="textAlign" valueExpression="value=TextAlign.CENTER;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
                <SetStyle target="textBoxComp.textBox" styleName="textAlign" valueExpression="value=TextAlign.START;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
                <SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=lorem1;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
                <SetProperty target="textBoxComp.textBox" propertyName="width" value="100" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
            </setup>
            <body>
                <AssertStyleValue target="textBoxComp.textBox" styleName="textAlign" value="start" />
                <CompareBitmap numColorVariances="5" maxColorVariance="15"  url="../Styles/baselines/$testID.png" target="container" />
            </body>
        </TestCase>


        <!-- style: textAlignLast -->
        <TestCase testID="Label_textAlignLast_default" description="Check default value of textAlignLast style" keywords="[TextBox, textAlignLast, Graphic]">
            <setup>
                <ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
                <SetStyle target="textBoxComp.textBox" styleName="textAlign" value="justify" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
                <SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=lorem1;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
                <SetProperty target="textBoxComp.textBox" propertyName="width" value="100" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
            </setup>
            <body>
                <AssertStyleValue target="textBoxComp.textBox" styleName="textAlignLast" value="start" />
                <CompareBitmap numColorVariances="5" maxColorVariance="15"  url="../Styles/baselines/$testID.png" target="container" />
            </body>
        </TestCase>

        <TestCase testID="Label_textAlignLast_left" description="Check left value of textAlignLast style" keywords="[TextBox, textAlignLast, Graphic]">
            <setup>
                <ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
                <SetStyle target="textBoxComp.textBox" styleName="textAlign" value="justify" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
                <SetStyle target="textBoxComp.textBox" styleName="textAlignLast" valueExpression="value=TextAlign.LEFT" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
                <SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=lorem1;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
                <SetProperty target="textBoxComp.textBox" propertyName="width" value="100" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
            </setup>
            <body>
                <AssertStyleValue target="textBoxComp.textBox" styleName="textAlignLast" value="left" />
                <CompareBitmap numColorVariances="5" maxColorVariance="15"  url="../Styles/baselines/$testID.png" target="container" />
            </body>
        </TestCase>

        <TestCase testID="Label_textAlignLast_center" description="Check left value of textAlignLast style" keywords="[TextBox, textAlignLast, Graphic]">
            <setup>
                <ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
                <SetStyle target="textBoxComp.textBox" styleName="textAlign" value="justify" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
                <SetStyle target="textBoxComp.textBox" styleName="textAlignLast" valueExpression="value=TextAlign.CENTER" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
                <SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=lorem1;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
                <SetProperty target="textBoxComp.textBox" propertyName="width" value="100" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
            </setup>
            <body>
                <AssertStyleValue target="textBoxComp.textBox" styleName="textAlignLast" value="center" />
                <CompareBitmap numColorVariances="5" maxColorVariance="15"  url="../Styles/baselines/$testID.png" target="container" />
            </body>
        </TestCase>

        <TestCase testID="Label_textAlignLast_right" description="Check right value of textAlignLast style" keywords="[TextBox, textAlignLast, Graphic]">
            <setup>
                <ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
                <SetStyle target="textBoxComp.textBox" styleName="textAlign" value="justify" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
                <SetStyle target="textBoxComp.textBox" styleName="textAlignLast" valueExpression="value=TextAlign.RIGHT" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
                <SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=lorem1;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
                <SetProperty target="textBoxComp.textBox" propertyName="width" value="100" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
            </setup>
            <body>
                <AssertStyleValue target="textBoxComp.textBox" styleName="textAlignLast" value="right" />
                <CompareBitmap numColorVariances="5" maxColorVariance="15"  url="../Styles/baselines/$testID.png" target="container" />
            </body>
        </TestCase>

        <TestCase testID="Label_textAlignLast_justify" description="Check justify value of textAlignLast style" keywords="[TextBox, textAlignLast, Graphic]">
            <setup>
                <ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
                <SetStyle target="textBoxComp.textBox" styleName="textAlign" value="justify" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
                <SetStyle target="textBoxComp.textBox" styleName="textAlignLast" valueExpression="value=TextAlign.JUSTIFY" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
                <SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=lorem1;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
                <SetProperty target="textBoxComp.textBox" propertyName="width" value="100" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
            </setup>
            <body>
                <AssertStyleValue target="textBoxComp.textBox" styleName="textAlignLast" value="justify" />
                <CompareBitmap numColorVariances="5" maxColorVariance="15"  url="../Styles/baselines/$testID.png" target="container" />
            </body>
        </TestCase>

        <TestCase testID="Label_textAlignLast_start" description="Check start value of textAlignLast style" keywords="[TextBox, textAlignLast, Graphic]">
            <setup>
                <ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
                <SetStyle target="textBoxComp.textBox" styleName="textAlign" value="justify" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
                <SetStyle target="textBoxComp.textBox" styleName="textAlignLast" valueExpression="value=TextAlign.JUSTIFY" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
                <SetStyle target="textBoxComp.textBox" styleName="textAlignLast" valueExpression="value=TextAlign.START" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
                <SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=lorem1;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
                <SetProperty target="textBoxComp.textBox" propertyName="width" value="100" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
            </setup>
            <body>
                <AssertStyleValue target="textBoxComp.textBox" styleName="textAlignLast" value="start" />
                <CompareBitmap numColorVariances="5" maxColorVariance="15"  url="../Styles/baselines/$testID.png" target="container" />
            </body>
        </TestCase>

        <TestCase testID="Label_textAlignLast_end" description="Check end value of textAlignLast style" keywords="[TextBox, textAlignLast, Graphic]">
            <setup>
                <ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
                <SetStyle target="textBoxComp.textBox" styleName="textAlign" value="justify" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
                <SetStyle target="textBoxComp.textBox" styleName="textAlignLast" valueExpression="value=TextAlign.END" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
                <SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=lorem1;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
                <SetProperty target="textBoxComp.textBox" propertyName="width" value="100" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
            </setup>
            <body>
                <AssertStyleValue target="textBoxComp.textBox" styleName="textAlignLast" value="end" />
                <CompareBitmap numColorVariances="5" maxColorVariance="15"  url="../Styles/baselines/$testID.png" target="container" />
            </body>
        </TestCase>


        <!-- style: textAlpha -->
        <TestCase testID="Label_textAlpha_default" description="Check default value of textAlpha style" keywords="[TextBox, textAlpha, Graphic]">
            <setup>
                <ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
                <SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=singleLineText;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
            </setup>
            <body>
                <AssertStyleValue target="textBoxComp.textBox" styleName="textAlpha" value="1" />
                <CompareBitmap numColorVariances="5" maxColorVariance="15"  url="../Styles/baselines/$testID.png" target="container" />
            </body>
        </TestCase>

        <TestCase testID="Label_textAlpha_0" description="Check 0 value of textAlpha style" keywords="[TextBox, textAlpha, Graphic]">
            <setup>
                <ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
                <SetStyle target="textBoxComp.textBox" styleName="textAlpha" value="0.0" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
                <SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=singleLineText;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
            </setup>
            <body>
                <AssertStyleValue target="textBoxComp.textBox" styleName="textAlpha" value="0.0" />
                <CompareBitmap numColorVariances="5" maxColorVariance="15"  url="../Styles/baselines/$testID.png" target="container" />
            </body>
        </TestCase>

        <TestCase testID="Label_textAlpha_05" description="Check 0 value of textAlpha style" keywords="[TextBox, textAlpha, Graphic]">
            <setup>
                <ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
                <SetStyle target="textBoxComp.textBox" styleName="textAlpha" value="0.5" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
                <SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=singleLineText;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
            </setup>
            <body>
                <AssertStyleValue target="textBoxComp.textBox" styleName="textAlpha" value="0.5" />
                <CompareBitmap numColorVariances="5" maxColorVariance="15"  url="../Styles/baselines/$testID.png" target="container" />
            </body>
        </TestCase>

        <!-- style: textDecoration -->
        <TestCase testID="Label_textDecoration_default" description="Check default value of textDecoration style" keywords="[TextBox, textDecoration, Graphic]">
            <setup>
                <ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
                <SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=singleLineText;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
            </setup>
            <body>
                <AssertStyleValue target="textBoxComp.textBox" styleName="textDecoration" value="none" />
                <CompareBitmap numColorVariances="5" maxColorVariance="15"  url="../Styles/baselines/$testID.png" target="container" />
            </body>
        </TestCase>

        <TestCase testID="Label_textDecoration_underline" description="Check default value of textDecoration style" keywords="[TextBox, textDecoration, Graphic]">
            <setup>
                <ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
                <SetStyle target="textBoxComp.textBox" styleName="textDecoration" value="underline" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
                <SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=singleLineText;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
            </setup>
            <body>
                <AssertStyleValue target="textBoxComp.textBox" styleName="textDecoration" value="underline" />
                <CompareBitmap numColorVariances="5" maxColorVariance="15"  url="../Styles/baselines/$testID.png" target="container" />
            </body>
        </TestCase>

        <TestCase testID="Label_textDecoration_none" description="Check default value of textDecoration style" keywords="[TextBox, textDecoration, Graphic]">
            <setup>
                <ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
                <SetStyle target="textBoxComp.textBox" styleName="textDecoration" value="underline" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
                <SetStyle target="textBoxComp.textBox" styleName="textDecoration" value="none" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
                <SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=singleLineText;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
            </setup>
            <body>
                <AssertStyleValue target="textBoxComp.textBox" styleName="textDecoration" value="none" />
                <CompareBitmap numColorVariances="5" maxColorVariance="15"  url="../Styles/baselines/$testID.png" target="container" />
            </body>
        </TestCase>


        <!-- style: textIndent -->
        <TestCase testID="Label_textIndent_default" description="Check default value of textIndent style" keywords="[TextBox, textDecoration, Graphic]">
            <setup>
                <ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
                <SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=lorem1;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
                <SetProperty target="textBoxComp.textBox" propertyName="width" value="100" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
            </setup>
            <body>
                <AssertStyleValue target="textBoxComp.textBox" styleName="textIndent" value="0" />
                <CompareBitmap numColorVariances="5" maxColorVariance="15"  url="../Styles/baselines/$testID.png" target="container" />
            </body>
        </TestCase>

        <TestCase testID="Label_textIndent_pos" description="Check positive value of textIndent style" keywords="[TextBox, textDecoration, Graphic]">
            <setup>
                <ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
                <SetStyle target="textBoxComp.textBox" styleName="textIndent" value="20" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
                <SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=lorem1;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
                <SetProperty target="textBoxComp.textBox" propertyName="width" value="100" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
            </setup>
            <body>
                <AssertStyleValue target="textBoxComp.textBox" styleName="textIndent" value="20" />
                <CompareBitmap numColorVariances="5" maxColorVariance="15"  url="../Styles/baselines/$testID.png" target="container" />
            </body>
        </TestCase>

        <TestCase testID="Label_textIndent_posWithDirection" description="Check positive RTL value of textIndent style" keywords="[TextBox, textDecoration, Graphic]">
            <setup>
                <ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
                <SetStyle target="textBoxComp.textBox" styleName="textIndent" value="20" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
                <SetStyle target="textBoxComp.textBox" styleName="direction" value="rtl" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
                <SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=lorem1;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
                <SetProperty target="textBoxComp.textBox" propertyName="width" value="100" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
            </setup>
            <body>
                <AssertStyleValue target="textBoxComp.textBox" styleName="textIndent" value="20" />
                <CompareBitmap numColorVariances="5" maxColorVariance="15"  url="../Styles/baselines/$testID.png" target="container" />
            </body>
        </TestCase>


        <TestCase testID="Label_textIndent_negWithMargin" description="Check negative + margin value of textIndent style" keywords="[TextBox, textDecoration, Graphic]">
            <setup>
                <ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
                <SetStyle target="textBoxComp.textBox" styleName="textIndent" value="-20" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
                <SetStyle target="textBoxComp.textBox" styleName="marginLeft" value="20" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
                <SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=lorem1;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
                <SetProperty target="textBoxComp.textBox" propertyName="width" value="100" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
            </setup>
            <body>
                <AssertStyleValue target="textBoxComp.textBox" styleName="textIndent" value="-20" />
                <CompareBitmap numColorVariances="5" maxColorVariance="15"  url="../Styles/baselines/$testID.png" target="container" />
            </body>
        </TestCase>

        <TestCase testID="Label_textIndent_negWithDirection" description="Check negative RTL value of textIndent style" keywords="[TextBox, textDecoration, Graphic]">
            <setup>
                <ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
                <SetStyle target="textBoxComp.textBox" styleName="textIndent" value="-20" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
                <SetStyle target="textBoxComp.textBox" styleName="marginRight" value="20" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
                <SetStyle target="textBoxComp.textBox" styleName="direction" value="rtl" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
                <SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=lorem1;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
                <SetProperty target="textBoxComp.textBox" propertyName="width" value="100" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
            </setup>
            <body>
                <AssertStyleValue target="textBoxComp.textBox" styleName="textIndent" value="-20" />
                <CompareBitmap numColorVariances="5" maxColorVariance="15"  url="../Styles/baselines/$testID.png" target="container" />
            </body>
        </TestCase>


        <!-- style: textJustify -->

        <TestCase testID="Label_textJustify_distribute" description="Check distribute value of textJustify style" keywords="[TextBox, textJustify, Graphic]">
            <setup>
                <ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
                <SetStyle target="textBoxComp.textBox" styleName="textAlign" value="justify" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
                <SetStyle target="textBoxComp.textBox" styleName="textAlignLast" value="justify" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
                <SetStyle target="textBoxComp.textBox" styleName="textJustify" valueExpression="value=TextJustify.DISTRIBUTE;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
                <SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=lorem1;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
                <SetProperty target="textBoxComp.textBox" propertyName="width" value="100" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
            </setup>
            <body>
                <AssertStyleValue target="textBoxComp.textBox" styleName="textJustify" value="distribute" />
                <CompareBitmap numColorVariances="15" maxColorVariance="15"  url="../Styles/baselines/$testID.png" target="container" />
            </body>
        </TestCase>

        <TestCase testID="Label_textJustify_interWord" description="Check interWord value of textJustify style" keywords="[TextBox, textJustify, Graphic]">
            <setup>
                <ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
                <SetStyle target="textBoxComp.textBox" styleName="textAlign" value="justify" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
                <SetStyle target="textBoxComp.textBox" styleName="textAlignLast" value="justify" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
                <SetStyle target="textBoxComp.textBox" styleName="textJustify" valueExpression="value=TextJustify.INTER_WORD;"  />
                <SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=lorem1;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
                <SetProperty target="textBoxComp.textBox" propertyName="width" value="100" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
            </setup>
            <body>
                <AssertStyleValue target="textBoxComp.textBox" styleName="textJustify" value="interWord" />
                <CompareBitmap numColorVariances="5" maxColorVariance="15"  url="../Styles/baselines/$testID.png" target="container" />
            </body>
        </TestCase>



        <!-- style: tracking -->
        <TestCase testID="Label_tracking_default" description="Check default value of tracking style" keywords="[TextBox, tracking, Graphic]">
            <setup>
                <ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
                <SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=singleLineText;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
            </setup>
            <body>
                <AssertStyleValue target="textBoxComp.textBox" styleName="tracking" value="null" />
                <CompareBitmap numColorVariances="5" maxColorVariance="15"  url="../Styles/baselines/$testID.png" target="container" />
            </body>
        </TestCase>

        <TestCase testID="Label_tracking_0" description="Check default value of tracking style" keywords="[TextBox, tracking, Graphic]">
            <setup>
                <ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
                <SetStyle target="textBoxComp.textBox" styleName="tracking" value="0" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
                <SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=singleLineText;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
            </setup>
            <body>
                <AssertStyleValue target="textBoxComp.textBox" styleName="tracking" value="0" />
                <CompareBitmap numColorVariances="5" maxColorVariance="15"  url="../Styles/baselines/$testID.png" target="container" />
            </body>
        </TestCase>

        <TestCase testID="Label_tracking_pos" description="Check default value of tracking style" keywords="[TextBox, tracking, Graphic]">
            <setup>
                <ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
                <SetStyle target="textBoxComp.textBox" styleName="tracking" value="20" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
                <SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=singleLineText;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
            </setup>
            <body>
                <AssertStyleValue target="textBoxComp.textBox" styleName="tracking" value="20" />
                <CompareBitmap numColorVariances="5" maxColorVariance="15"  url="../Styles/baselines/$testID.png" target="container" />
            </body>
        </TestCase>

        <TestCase testID="Label_tracking_neg" description="Check default value of tracking style" keywords="[TextBox, tracking, Graphic]">
            <setup>
                <ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
                <SetStyle target="textBoxComp.textBox" styleName="tracking" value="-20" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
                <SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=singleLineText;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
            </setup>
            <body>
                <AssertStyleValue target="textBoxComp.textBox" styleName="tracking" value="-20" />
                <CompareBitmap numColorVariances="5" maxColorVariance="15"  url="../Styles/baselines/$testID.png" target="container" />
            </body>
        </TestCase>


        <!-- style: trackingLeft -->
        <TestCase testID="Label_trackingLeft_default" description="Check default value of trackingLeft style" keywords="[TextBox, trackingLeft, Graphic]">
            <setup>
                <ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
                <SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=singleLineText;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
            </setup>
            <body>
                <AssertStyleValue target="textBoxComp.textBox" styleName="trackingLeft" value="0" />
                <CompareBitmap numColorVariances="5" maxColorVariance="15"  url="../Styles/baselines/$testID.png" target="container" />
            </body>
        </TestCase>

        <TestCase testID="Label_trackingLeft_pos" description="Check positive value of trackingLeft style" keywords="[TextBox, tracking, Graphic]">
            <setup>
                <ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
                <SetStyle target="textBoxComp.textBox" styleName="trackingLeft" value="10" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
                <SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=singleLineText;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
            </setup>
            <body>
                <AssertStyleValue target="textBoxComp.textBox" styleName="trackingLeft" value="10" />
                <CompareBitmap numColorVariances="10" maxColorVariance="15"  url="../Styles/baselines/$testID.png" target="container" />
            </body>
        </TestCase>

        <TestCase testID="Label_trackingLeft_neg" description="Check negative value of trackingLeft style" keywords="[TextBox, tracking, Graphic]">
            <setup>
                <ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
                <SetStyle target="textBoxComp.textBox" styleName="trackingLeft" value="-2" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
                <SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=singleLineText;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
            </setup>
            <body>
                <AssertStyleValue target="textBoxComp.textBox" styleName="trackingLeft" value="-2" />
                <CompareBitmap numColorVariances="5" maxColorVariance="15"  url="../Styles/baselines/$testID.png" target="container" />
            </body>
        </TestCase>

        <TestCase testID="Label_trackingLeft_pos_percent" description="Check positive percent value of trackingLeft style" keywords="[TextBox, tracking, Graphic]">
            <setup>
                <ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
                <SetStyle target="textBoxComp.textBox" styleName="trackingLeft" value="20%" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
                <SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=singleLineText;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
            </setup>
            <body>
                <AssertStyleValue target="textBoxComp.textBox" styleName="trackingLeft" value="20%" />
                <CompareBitmap numColorVariances="10" maxColorVariance="15"  url="../Styles/baselines/$testID.png" target="container" />
            </body>
        </TestCase>

        <TestCase testID="Label_trackingLeft_neg_percent" description="Check negative percent value of trackingLeft style" keywords="[TextBox, tracking, Graphic]">
            <setup>
                <ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
                <SetStyle target="textBoxComp.textBox" styleName="trackingLeft" value="-10%" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
                <SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=singleLineText;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
            </setup>
            <body>
                <AssertStyleValue target="textBoxComp.textBox" styleName="trackingLeft" value="-10%" />
                <CompareBitmap numColorVariances="5" maxColorVariance="15"  url="../Styles/baselines/$testID.png" target="container" />
            </body>
        </TestCase>



        <!-- style: trackingRight -->
        <TestCase testID="Label_trackingRight_default" description="Check default value of trackingRight style" keywords="[TextBox, trackingLeft, Graphic]">
            <setup>
                <ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
                <SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=singleLineText;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
            </setup>
            <body>
                <AssertStyleValue target="textBoxComp.textBox" styleName="trackingRight" value="0" />
                <CompareBitmap numColorVariances="5" maxColorVariance="15"  url="../Styles/baselines/$testID.png" target="container" />
            </body>
        </TestCase>

        <TestCase testID="Label_trackingRight_pos" description="Check positive value of trackingRight style" keywords="[TextBox, tracking, Graphic]">
            <setup>
                <ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
                <SetStyle target="textBoxComp.textBox" styleName="trackingRight" value="10" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
                <SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=singleLineText;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
            </setup>
            <body>
                <AssertStyleValue target="textBoxComp.textBox" styleName="trackingRight" value="10" />
                <CompareBitmap numColorVariances="10" maxColorVariance="15"  url="../Styles/baselines/$testID.png" target="container" />
            </body>
        </TestCase>

        <TestCase testID="Label_trackingRight_neg" description="Check negative value of trackingRight style" keywords="[TextBox, tracking, Graphic]">
            <setup>
                <ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
                <SetStyle target="textBoxComp.textBox" styleName="trackingRight" value="-2" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
                <SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=singleLineText;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
            </setup>
            <body>
                <AssertStyleValue target="textBoxComp.textBox" styleName="trackingRight" value="-2" />
                <CompareBitmap numColorVariances="5" maxColorVariance="15"  url="../Styles/baselines/$testID.png" target="container" />
            </body>
        </TestCase>

        <TestCase testID="Label_trackingRight_pos_percent" description="Check positive percent value of trackingRight style" keywords="[TextBox, tracking, Graphic]">
            <setup>
                <ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
                <SetStyle target="textBoxComp.textBox" styleName="trackingRight" value="20%" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
                <SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=singleLineText;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
            </setup>
            <body>
                <AssertStyleValue target="textBoxComp.textBox" styleName="trackingRight" value="20%" />
                <CompareBitmap numColorVariances="10" maxColorVariance="15"  url="../Styles/baselines/$testID.png" target="container" />
            </body>
        </TestCase>

        <TestCase testID="Label_trackingRight_neg_percent" description="Check negative percent value of trackingRight style" keywords="[TextBox, tracking, Graphic]">
            <setup>
                <ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
                <SetStyle target="textBoxComp.textBox" styleName="trackingRight" value="-10%" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
                <SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=singleLineText;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
            </setup>
            <body>
                <AssertStyleValue target="textBoxComp.textBox" styleName="trackingRight" value="-10%" />
                <CompareBitmap numColorVariances="5" maxColorVariance="15"  url="../Styles/baselines/$testID.png" target="container" />
            </body>
        </TestCase>


        <!-- style: typographicCase -->
        <TestCase testID="Label_typographicCase_default" description="Check default value of typographicCase style" keywords="[TextBox, typographicCase, Graphic]">
            <setup>
                <ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
                <SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=singleLineNumbers;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
            </setup>
            <body>
                <AssertStyleValue target="textBoxComp.textBox" styleName="typographicCase" value="default" />
                <CompareBitmap numColorVariances="5" maxColorVariance="15"  url="../Styles/baselines/$testID.png" target="container" />
            </body>
        </TestCase>

        <TestCase testID="Label_typographicCase_caps" description="Check caps value of typographicCase style" keywords="[TextBox, typographicCase, Graphic]">
            <setup>
                <ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
                <SetStyle target="textBoxComp.textBox" styleName="typographicCase" valueExpression="value=TypographicCase.CAPS" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
                <SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=singleLineNumbers;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
            </setup>
            <body>
                <AssertStyleValue target="textBoxComp.textBox" styleName="typographicCase" value="caps" />
                <CompareBitmap numColorVariances="5" maxColorVariance="15"  url="../Styles/baselines/$testID.png" target="container" />
            </body>
        </TestCase>

        <TestCase testID="Label_typographicCase_capsAndSmallCaps" description="Check capsAndSmallCaps value of typographicCase style" keywords="[TextBox, typographicCase, Graphic]">
            <setup>
                <ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
                <SetStyle target="textBoxComp.textBox" styleName="typographicCase" valueExpression="value=TypographicCase.CAPS_AND_SMALL_CAPS" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
                <SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=singleLineNumbers;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
            </setup>
            <body>
                <AssertStyleValue target="textBoxComp.textBox" styleName="typographicCase" value="capsAndSmallCaps" />
                <CompareBitmap numColorVariances="15" maxColorVariance="15"  url="../Styles/baselines/$testID.png" target="container" />
            </body>
        </TestCase>

        <TestCase testID="Label_typographicCase_default2" description="Check default value of typographicCase style" keywords="[TextBox, typographicCase, Graphic]">
            <setup>
                <ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
                <SetStyle target="textBoxComp.textBox" styleName="typographicCase" valueExpression="value=TypographicCase.CAPS_AND_SMALL_CAPS" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
                <SetStyle target="textBoxComp.textBox" styleName="typographicCase" valueExpression="value=TypographicCase.DEFAULT" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
                <SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=singleLineNumbers;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
            </setup>
            <body>
                <AssertStyleValue target="textBoxComp.textBox" styleName="typographicCase" value="default" />
                <CompareBitmap numColorVariances="5" maxColorVariance="15"  url="../Styles/baselines/$testID.png" target="container" />
            </body>
        </TestCase>

        <TestCase testID="Label_typographicCase_lowercase" description="Check lowercase value of typographicCase style" keywords="[TextBox, typographicCase, Graphic]">
            <setup>
                <ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
                <SetStyle target="textBoxComp.textBox" styleName="typographicCase" valueExpression="value=TypographicCase.LOWERCASE" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
                <SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=singleLineNumbers;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
            </setup>
            <body>
                <AssertStyleValue target="textBoxComp.textBox" styleName="typographicCase" value="lowercase" />
                <CompareBitmap numColorVariances="5" maxColorVariance="15"  url="../Styles/baselines/$testID.png" target="container" />
            </body>
        </TestCase>

        <TestCase testID="Label_typographicCase_smallCaps" description="Check smallCaps value of typographicCase style" keywords="[TextBox, typographicCase, Graphic]">
            <setup>
                <ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
                <SetStyle target="textBoxComp.textBox" styleName="typographicCase" valueExpression="value=TypographicCase.SMALL_CAPS" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
                <SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=singleLineNumbers;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
            </setup>
            <body>
                <AssertStyleValue target="textBoxComp.textBox" styleName="typographicCase" value="smallCaps" />
                <CompareBitmap numColorVariances="5" maxColorVariance="15"  url="../Styles/baselines/$testID.png" target="container" />
            </body>
        </TestCase>

        <TestCase testID="Label_typographicCase_title" description="Check title value of typographicCase style" keywords="[TextBox, typographicCase, Graphic]">
            <setup>
                <ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
                <SetStyle target="textBoxComp.textBox" styleName="typographicCase" valueExpression="value=TypographicCase.TITLE" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
                <SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=singleLineNumbers;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
            </setup>
            <body>
                <AssertStyleValue target="textBoxComp.textBox" styleName="typographicCase" value="title" />
                <CompareBitmap numColorVariances="5" maxColorVariance="15"  url="../Styles/baselines/$testID.png" target="container" />
            </body>
        </TestCase>

        <TestCase testID="Label_typographicCase_uppercase" description="Check uppercase value of typographicCase style" keywords="[TextBox, typographicCase, Graphic]">
            <setup>
                <ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
                <SetStyle target="textBoxComp.textBox" styleName="typographicCase" valueExpression="value=TypographicCase.UPPERCASE" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
                <SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=singleLineNumbers;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
            </setup>
            <body>
                <AssertStyleValue target="textBoxComp.textBox" styleName="typographicCase" value="uppercase" />
                <CompareBitmap numColorVariances="10" maxColorVariance="15"  url="../Styles/baselines/$testID.png" target="container"  />
            </body>
        </TestCase>


        <!-- style: verticalAlign -->
        <TestCase testID="Label_verticalAlign_default" description="Check default value of verticalAlign style" keywords="[TextBox, typographicCase, Graphic]">
            <setup>
                <ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
                <SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=singleLineNumbers;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
            </setup>
            <body>
                <AssertStyleValue target="textBoxComp.textBox" styleName="verticalAlign" value="top" />
                <CompareBitmap numColorVariances="5" maxColorVariance="15"  url="../Styles/baselines/$testID.png" target="container" />
            </body>
        </TestCase>

        <TestCase testID="Label_verticalAlign_top" description="Check top value of verticalAlign style" keywords="[TextBox, typographicCase, Graphic]">
            <setup>
                <ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
                <SetStyle target="textBoxComp.textBox" styleName="verticalAlign" valueExpression="value=VerticalAlign.BOTTOM" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
                <SetStyle target="textBoxComp.textBox" styleName="verticalAlign" valueExpression="value=VerticalAlign.TOP" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
                <SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=singleLineNumbers;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
                <SetProperty target="textBoxComp.textBox" propertyName="width" value="100" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
                <SetProperty target="textBoxComp.textBox" propertyName="height" value="100" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
            </setup>
            <body>
                <AssertStyleValue target="textBoxComp.textBox" styleName="verticalAlign" value="top" />
                <CompareBitmap numColorVariances="5" maxColorVariance="15"  url="../Styles/baselines/$testID.png" target="container" />
            </body>
        </TestCase>

        <TestCase testID="Label_verticalAlign_middle" description="Check middle value of verticalAlign style" keywords="[TextBox, typographicCase, Graphic]">
            <setup>
                <ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
                <SetStyle target="textBoxComp.textBox" styleName="verticalAlign" valueExpression="value=VerticalAlign.MIDDLE" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
                <SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=singleLineNumbers;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
                <SetProperty target="textBoxComp.textBox" propertyName="width" value="100" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
                <SetProperty target="textBoxComp.textBox" propertyName="height" value="100" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
            </setup>
            <body>
                <AssertStyleValue target="textBoxComp.textBox" styleName="verticalAlign" value="middle" />
                <CompareBitmap numColorVariances="5" maxColorVariance="15"  url="../Styles/baselines/$testID.png" target="container" />
            </body>
        </TestCase>

        <TestCase testID="Label_verticalAlign_bottom" description="Check bottom value of verticalAlign style" keywords="[TextBox, typographicCase, Graphic]">
            <setup>
                <ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
                <SetStyle target="textBoxComp.textBox" styleName="verticalAlign" valueExpression="value=VerticalAlign.BOTTOM" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
                <SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=singleLineNumbers;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
                <SetProperty target="textBoxComp.textBox" propertyName="width" value="100" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
                <SetProperty target="textBoxComp.textBox" propertyName="height" value="100" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
            </setup>
            <body>
                <AssertStyleValue target="textBoxComp.textBox" styleName="verticalAlign" value="bottom" />
                <CompareBitmap numColorVariances="5" maxColorVariance="15"  url="../Styles/baselines/$testID.png" target="container" />
            </body>
        </TestCase>

        <TestCase testID="Label_verticalAlign_justify" description="Check justify value of verticalAlign style" keywords="[TextBox, typographicCase, Graphic]">
            <setup>
                <ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
                <SetStyle target="textBoxComp.textBox" styleName="verticalAlign" valueExpression="value=VerticalAlign.JUSTIFY" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
                <SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=singleLineNumbers;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
                <SetProperty target="textBoxComp.textBox" propertyName="width" value="100" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
                <SetProperty target="textBoxComp.textBox" propertyName="height" value="100" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
            </setup>
            <body>
                <AssertStyleValue target="textBoxComp.textBox" styleName="verticalAlign" value="justify" />
                <CompareBitmap numColorVariances="5" maxColorVariance="15"  url="../Styles/baselines/$testID.png" target="container" />
            </body>
        </TestCase>


        <!-- style: whiteSpaceCollapse -->
        <TestCase testID="Label_whiteSpaceCollapse_default" description="Check default value of whiteSpaceCollapse style" keywords="[TextBox, typographicCase, Graphic]">
            <setup>
                <ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
                <SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=singleLineNumbers;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
            </setup>
            <body>
                <AssertStyleValue target="textBoxComp.textBox" styleName="whiteSpaceCollapse" value="collapse" />
                <CompareBitmap numColorVariances="5" maxColorVariance="15"  url="../Styles/baselines/$testID.png" target="container" />
            </body>
        </TestCase>
        <!-- property: maxDisplayedLines -->

        <TestCase testID="Label_text_singleLine_truncation_default" description="TextBox text set to a single line of text" keywords="[Label, style, Graphic]">
            <setup>
                <ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
                <SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=singleLineText;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
                <SetProperty target="textBoxComp.textBox" propertyName="width" value="100" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
                <SetProperty target="textBoxComp.textBox" propertyName="height" value="30" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
                <SetStyle target="textBoxComp.textBox" styleName="columnGap" value="10" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />

            </setup>
            <body>
                <AssertPropertyValue target="textBoxComp.textBox" propertyName="text" value="The quick brown fox jumps over the lazy dog." />
                <AssertPropertyValue target="textBoxComp.textBox" propertyName="maxDisplayedLines" value="0" />

                <CompareBitmap numColorVariances="5" maxColorVariance="15"  url="../Styles/baselines/$testID.png" target="container" />
            </body>
        </TestCase>

        <TestCase testID="Label_text_multiLine_truncation_default" description="TextBox text set to multiple lines of text using \n" keywords="[Label, style, Graphic]">
            <setup>
                <ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
                <SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=multiLineText;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
                <SetProperty target="textBoxComp.textBox" propertyName="width" value="100" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
                <SetProperty target="textBoxComp.textBox" propertyName="height" value="50" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
                <SetStyle target="textBoxComp.textBox" styleName="columnGap" value="10" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />

            </setup>
            <body>
                <AssertPropertyValue target="textBoxComp.textBox" propertyName="text" valueExpression="value='The quick brown\nfox jumps over\nthe lazy dog.';" />
                <AssertPropertyValue target="textBoxComp.textBox" propertyName="maxDisplayedLines" value="0" />
                <CompareBitmap numColorVariances="5" maxColorVariance="15"  url="../Styles/baselines/$testID.png" target="container" />
            </body>
        </TestCase>
        <TestCase testID="Label_text_singleLine_truncation-1" description="TextBox text set to a single line of text" keywords="[Label, style, Graphic]">
            <setup>
                <ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
                <SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=singleLineText;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
                <SetProperty target="textBoxComp.textBox" propertyName="width" value="100" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
                <SetProperty target="textBoxComp.textBox" propertyName="height" value="30" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
                <SetProperty target="textBoxComp.textBox" propertyName="maxDisplayedLines" value="-1" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
                <SetStyle target="textBoxComp.textBox" styleName="columnGap" value="10" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />

            </setup>
            <body>
                <AssertPropertyValue target="textBoxComp.textBox" propertyName="text" value="The quick brown fox jumps over the lazy dog." />
                <AssertPropertyValue target="textBoxComp.textBox" propertyName="maxDisplayedLines" value="-1" />

                <CompareBitmap numColorVariances="5" maxColorVariance="15"  url="../Styles/baselines/$testID.png" target="container" />
            </body>
        </TestCase>

        <TestCase testID="Label_text_multiLine_truncation-1" description="TextBox text set to multiple lines of text using \n" keywords="[Label, style, Graphic]">
            <setup>
                <ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
                <SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=multiLineText;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
                <SetProperty target="textBoxComp.textBox" propertyName="width" value="100" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
                <SetProperty target="textBoxComp.textBox" propertyName="height" value="30" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
                <SetProperty target="textBoxComp.textBox" propertyName="maxDisplayedLines" value="-1" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
                <SetStyle target="textBoxComp.textBox" styleName="columnGap" value="10" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />

            </setup>
            <body>
                <AssertPropertyValue target="textBoxComp.textBox" propertyName="text" valueExpression="value='The quick brown\nfox jumps over\nthe lazy dog.';" />
                <AssertPropertyValue target="textBoxComp.textBox" propertyName="maxDisplayedLines" value="-1" />
                <CompareBitmap numColorVariances="5" maxColorVariance="15"  url="../Styles/baselines/$testID.png" target="container" />
            </body>
        </TestCase>
        <TestCase testID="Label_text_singleLine_truncation1" description="TextBox text set to a single line of text" keywords="[Label, style, Graphic]">
            <setup>
                <ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
                <SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=singleLineText;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
                <SetProperty target="textBoxComp.textBox" propertyName="width" value="100" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
                <SetProperty target="textBoxComp.textBox" propertyName="height" value="30" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
                <SetProperty target="textBoxComp.textBox" propertyName="maxDisplayedLines" value="1" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
                <SetStyle target="textBoxComp.textBox" styleName="columnGap" value="10" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />

            </setup>
            <body>
                <AssertPropertyValue target="textBoxComp.textBox" propertyName="text" value="The quick brown fox jumps over the lazy dog." />
                <AssertPropertyValue target="textBoxComp.textBox" propertyName="maxDisplayedLines" value="1" />

                <CompareBitmap numColorVariances="5" maxColorVariance="15"  url="../Styles/baselines/$testID.png" target="container" />
            </body>
        </TestCase>

        <TestCase testID="Label_text_multiLine_truncation1" description="TextBox text set to multiple lines of text using \n" keywords="[Label, style, Graphic]">
            <setup>
                <ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
                <SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=multiLineText;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
                <SetProperty target="textBoxComp.textBox" propertyName="width" value="100" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
                <SetProperty target="textBoxComp.textBox" propertyName="height" value="30" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
                <SetProperty target="textBoxComp.textBox" propertyName="maxDisplayedLines" value="1" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
                <SetStyle target="textBoxComp.textBox" styleName="columnGap" value="10" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />

            </setup>
            <body>
                <AssertPropertyValue target="textBoxComp.textBox" propertyName="text" valueExpression="value='The quick brown\nfox jumps over\nthe lazy dog.';" />
                <AssertPropertyValue target="textBoxComp.textBox" propertyName="maxDisplayedLines" value="1" />
                <CompareBitmap numColorVariances="5" maxColorVariance="15"  url="../Styles/baselines/$testID.png" target="container" />
            </body>
        </TestCase>
        <TestCase testID="Label_text_singleLine_truncation2" description="TextBox text set to a single line of text" keywords="[Label, style, Graphic]">
            <setup>
                <ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
                <SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=singleLineText;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
                <SetProperty target="textBoxComp.textBox" propertyName="width" value="100" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
                <SetProperty target="textBoxComp.textBox" propertyName="height" value="30" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
                <SetProperty target="textBoxComp.textBox" propertyName="maxDisplayedLines" value="2" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
                <SetStyle target="textBoxComp.textBox" styleName="columnGap" value="10" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />

            </setup>
            <body>
                <AssertPropertyValue target="textBoxComp.textBox" propertyName="text" value="The quick brown fox jumps over the lazy dog." />
                <AssertPropertyValue target="textBoxComp.textBox" propertyName="maxDisplayedLines" value="2" />

                <CompareBitmap numColorVariances="5" maxColorVariance="15"  url="../Styles/baselines/$testID.png" target="container" />
            </body>
        </TestCase>

        <TestCase testID="Label_text_multiLine_truncation2" description="TextBox text set to multiple lines of text using \n" keywords="[Label, style, Graphic]">
            <setup>
                <ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
                <SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=multiLineText;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
                <SetProperty target="textBoxComp.textBox" propertyName="width" value="100" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
                <SetProperty target="textBoxComp.textBox" propertyName="height" value="30" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
                <SetProperty target="textBoxComp.textBox" propertyName="maxDisplayedLines" value="2" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
                <SetStyle target="textBoxComp.textBox" styleName="columnGap" value="10" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />

            </setup>
            <body>
                <AssertPropertyValue target="textBoxComp.textBox" propertyName="text" valueExpression="value='The quick brown\nfox jumps over\nthe lazy dog.';" />
                <AssertPropertyValue target="textBoxComp.textBox" propertyName="maxDisplayedLines" value="2" />
                <CompareBitmap numColorVariances="5" maxColorVariance="15"  url="../Styles/baselines/$testID.png" target="container" />
            </body>
        </TestCase>
        <TestCase testID="Label_text_singleLine_truncation_default_defaultSize" description="TextBox text set to a single line of text" keywords="[Label, style, Graphic]">
            <setup>
                <ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
                <SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=singleLineText;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
                <SetStyle target="textBoxComp.textBox" styleName="columnGap" value="10" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />

            </setup>
            <body>
                <AssertPropertyValue target="textBoxComp.textBox" propertyName="text" value="The quick brown fox jumps over the lazy dog." />
                <AssertPropertyValue target="textBoxComp.textBox" propertyName="maxDisplayedLines" value="0" />

                <CompareBitmap numColorVariances="5" maxColorVariance="15"  url="../Styles/baselines/$testID.png" target="container" />
            </body>
        </TestCase>

        <TestCase testID="Label_text_multiLine_truncation_default_defaultSize" description="TextBox text set to multiple lines of text using \n" keywords="[Label, style, Graphic]">
            <setup>
                <ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
                <SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=multiLineText;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
                <SetStyle target="textBoxComp.textBox" styleName="columnGap" value="10" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />

            </setup>
            <body>
                <AssertPropertyValue target="textBoxComp.textBox" propertyName="text" valueExpression="value='The quick brown\nfox jumps over\nthe lazy dog.';" />
                <AssertPropertyValue target="textBoxComp.textBox" propertyName="maxDisplayedLines" value="0" />
                <CompareBitmap numColorVariances="5" maxColorVariance="15"  url="../Styles/baselines/$testID.png" target="container" />
            </body>
        </TestCase>
        <TestCase testID="Label_text_singleLine_truncation-1_defaultSize" description="TextBox text set to a single line of text" keywords="[Label, style, Graphic]">
            <setup>
                <ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
                <SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=singleLineText;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
                <SetProperty target="textBoxComp.textBox" propertyName="maxDisplayedLines" value="-1" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
                <SetStyle target="textBoxComp.textBox" styleName="columnGap" value="10" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />

            </setup>
            <body>
                <AssertPropertyValue target="textBoxComp.textBox" propertyName="text" value="The quick brown fox jumps over the lazy dog." />
                <AssertPropertyValue target="textBoxComp.textBox" propertyName="maxDisplayedLines" value="-1" />

                <CompareBitmap numColorVariances="5" maxColorVariance="15"  url="../Styles/baselines/$testID.png" target="container" />
            </body>
        </TestCase>

        <TestCase testID="Label_text_multiLine_truncation-1_defaultSize" description="TextBox text set to multiple lines of text using \n" keywords="[Label, style, Graphic]">
            <setup>
                <ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
                <SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=multiLineText;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
                <SetProperty target="textBoxComp.textBox" propertyName="maxDisplayedLines" value="-1" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
                <SetStyle target="textBoxComp.textBox" styleName="columnGap" value="10" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />

            </setup>
            <body>
                <AssertPropertyValue target="textBoxComp.textBox" propertyName="text" valueExpression="value='The quick brown\nfox jumps over\nthe lazy dog.';" />
                <AssertPropertyValue target="textBoxComp.textBox" propertyName="maxDisplayedLines" value="-1" />
                <CompareBitmap numColorVariances="5" maxColorVariance="15"  url="../Styles/baselines/$testID.png" target="container" />
            </body>
        </TestCase>
        <TestCase testID="Label_text_singleLine_truncation1_defaultSize" description="TextBox text set to a single line of text" keywords="[Label, style, Graphic]">
            <setup>
                <ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
                <SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=singleLineText;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
                <SetProperty target="textBoxComp.textBox" propertyName="maxDisplayedLines" value="1" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
                <SetStyle target="textBoxComp.textBox" styleName="columnGap" value="10" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />

            </setup>
            <body>
                <AssertPropertyValue target="textBoxComp.textBox" propertyName="text" value="The quick brown fox jumps over the lazy dog." />
                <AssertPropertyValue target="textBoxComp.textBox" propertyName="maxDisplayedLines" value="1" />

                <CompareBitmap numColorVariances="5" maxColorVariance="15"  url="../Styles/baselines/$testID.png" target="container" />
            </body>
        </TestCase>

        <TestCase testID="Label_text_multiLine_truncation1_defaultSize" description="TextBox text set to multiple lines of text using \n" keywords="[Label, style, Graphic]">
            <setup>
                <ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
                <SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=multiLineText;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
                <SetProperty target="textBoxComp.textBox" propertyName="maxDisplayedLines" value="1" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
                <SetStyle target="textBoxComp.textBox" styleName="columnGap" value="10" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />

            </setup>
            <body>
                <AssertPropertyValue target="textBoxComp.textBox" propertyName="text" valueExpression="value='The quick brown\nfox jumps over\nthe lazy dog.';" />
                <AssertPropertyValue target="textBoxComp.textBox" propertyName="maxDisplayedLines" value="1" />
                <CompareBitmap numColorVariances="5" maxColorVariance="15"  url="../Styles/baselines/$testID.png" target="container" />
            </body>
        </TestCase>
        <TestCase testID="Label_text_singleLine_truncation2_defaultSize" description="TextBox text set to a single line of text" keywords="[Label, style, Graphic]">
            <setup>
                <ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
                <SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=singleLineText;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
                <SetProperty target="textBoxComp.textBox" propertyName="maxDisplayedLines" value="2" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
                <SetStyle target="textBoxComp.textBox" styleName="columnGap" value="10" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />

            </setup>
            <body>
                <AssertPropertyValue target="textBoxComp.textBox" propertyName="text" value="The quick brown fox jumps over the lazy dog." />
                <AssertPropertyValue target="textBoxComp.textBox" propertyName="maxDisplayedLines" value="2" />

                <CompareBitmap numColorVariances="5" maxColorVariance="15"  url="../Styles/baselines/$testID.png" target="container" />
            </body>
        </TestCase>

        <TestCase testID="Label_text_multiLine_truncation2_defaultSize" description="TextBox text set to multiple lines of text using \n" keywords="[Label, style, Graphic]">
            <setup>
                <ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
                <SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=multiLineText;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
                <SetProperty target="textBoxComp.textBox" propertyName="maxDisplayedLines" value="2" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
                <SetStyle target="textBoxComp.textBox" styleName="columnGap" value="10" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />

            </setup>
            <body>
                <AssertPropertyValue target="textBoxComp.textBox" propertyName="text" valueExpression="value='The quick brown\nfox jumps over\nthe lazy dog.';" />
                <AssertPropertyValue target="textBoxComp.textBox" propertyName="maxDisplayedLines" value="2" />
                <CompareBitmap numColorVariances="5" maxColorVariance="15"  url="../Styles/baselines/$testID.png" target="container" />
            </body>
        </TestCase>
 	<TestCase testID="Label_text_focusskin" description="TextBox text set focusSkin,verify no error" keywords="[TextBox, style,focusSkin]">
            <setup>
                <ResetComponent target="textBoxComp" className="comps.LabelBasic" waitTarget="textBoxComp" waitEvent="updateComplete" />
                <SetProperty target="textBoxComp.textBox" propertyName="text" valueExpression="value=multiLineText;" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
                <SetProperty target="textBoxComp.textBox" propertyName="maxDisplayedLines" value="2" waitTarget="textBoxComp.textBox" waitEvent="updateComplete" />
                <SetStyle target="textBoxComp.textBox" styleName="focusSkin" value="spark.skins.spark.FocusSkin" />
 		<SetStyle target="textBoxComp.textBox" styleName="focusColor" value="0x00FF00"  />
  		<SetStyle target="textBoxComp.textBox" styleName="focusThickness" value="14" />
            </setup>
            <body>
            	<DispatchKeyEvent key="TAB"  waitTarget="textBoxComp.textBox"/>
            </body>
        </TestCase>
        
  </testCases>
</UnitTester>


<!--
tabStops
textAlign
textAlignLast
textAlpha
textDecoration
textJustify
textRotation
tracking
trackingLeft
trackingRight
typographicCase
verticalAlign
-->