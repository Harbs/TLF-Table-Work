<?xml version="1.0" encoding="utf-8"?>
<!--

  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.

-->
<UnitTester testDir="gumbo/components/Button/styles/"  xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:mx="library://ns.adobe.com/flex/mx" xmlns:s="library://ns.adobe.com/flex/spark"  xmlns:m="http://ns.adobe.com/mxml/2009" xmlns="*" testSWF="Flex4_Button_main.mxml">
	<!-- this set of lines form a template that must be in each unit test -->
	<fx:Script>
		<![CDATA[
		public static function init(o:DisplayObject):void
		{
		}			
		]]>
	</fx:Script>
	
	<fx:Metadata>
		<![CDATA[
			[Mixin]
		]]>
	</fx:Metadata>	
	
	<!-- end of set of lines that must be in each unit test -->

	<fx:Script>
		<![CDATA[
import spark.components.Button;
			
			[Bindable]
			[Embed(source="../../../../../Assets/Images/ButtonImages/smallUpSkin.jpg")]
			public var RedU:Class;

		]]>
	</fx:Script>

	<fx:Style>
		
		@font-face {
		    src: url("../../../../../Assets/Fonts/Cousine/Cousine-Regular.ttf");
		    fontFamily: "ArnoProRegEmbedded";
		    embedAsCFF: true;
		}
		
		@font-face {
		    src: url("../../../../../Assets/Fonts/Lobster_Two/LobsterTwo-Regular.ttf");
		    fontFamily: "Helvetica";
		    embedAsCFF: true;
		}
	    .myStyle{
	        color: #FF0000
	    }
	
	    .myStyle2{
	        color: #0000FF
	    }
	</fx:Style>

	<testCases>
		<!-- Text styles for Button -->
		<!-- 
			DONE alignmentBaseline
			DONE baselineShift                              
			DONE breakOpportunity                      
			DONE cffHinting                                 
			DONE color
			DONE digitCase
			DONE digitWidth
			DONE direction
			DONE DOESN'T WORK? dominantBaseline
			DONE fontFamily
			DONE fontLookup
			DONE fontSize
			DONE fontStyle
			DONE fontWeight
			DONE justificationRule - *
			DONE justificationStyle - *
			DONE kerning
			DONE ligatureLevel - *
			DONE lineBreak
			DONE lineHeight
			DONE lineThrough
			DONE locale
			DONE paddingBottom
			DONE paddingLeft
			DONE paddingRight
			DONE paddingTop
			DONE renderingMode
			tabStops
			DONE textAlign
			DONE textAlignLast
			DONE textAlpha
			DONE textDecoration
			DONE textJustify
			DONE textRotation
			DONE tracking
			DONE trackingLeft
			DONE trackingRight
			DONE typographicCase
			DONE verticalAlign
		-->			
		<TestCase testID="alignmentBaseline_default_Button" description="default alignmentBaseline FxButton" keywords="[FxButton, alignmentBaseline, style]">
			<setup>
				<ResetComponent target="myButton" className="spark.components.Button" waitEvent="updateComplete"/>
			</setup>
			<body>
				<AssertStyleValue styleName="alignmentBaseline" value="useDominantBaseline" target="myButton"/>
			</body>
		</TestCase>
		
		<TestCase testID="alignmentBaseline_roman_Button" description="default alignmentBaseline FxButton" keywords="[FxButton, alignmentBaseline, style]">
			<setup>
				<ResetComponent target="myButton" className="spark.components.Button" waitEvent="updateComplete"/>
				<SetStyle styleName="alignmentBaseline" value="roman" target="myButton"/>
				<SetProperty target="myButton" propertyName="label" value="The quick brown fox jumps over the lazy dog." waitEvent="updateComplete" waitTarget="myButton"/>				
			</setup>
			<body>
				<AssertStyleValue styleName="alignmentBaseline" value="roman" target="myButton"/>
				<CompareBitmap url="../styles/baselines/$testID.png" target="myButton"/>
			</body>
		</TestCase>
		
		<TestCase testID="alignmentBaseline_ideographicTop_Button" description="default alignmentBaseline FxButton" keywords="[FxButton, alignmentBaseline, style]">
			<setup>
				<ResetComponent target="myButton" className="spark.components.Button" waitEvent="updateComplete"/>
				<SetStyle styleName="alignmentBaseline" value="ideographicTop" target="myButton"/>
				<SetProperty target="myButton" propertyName="label" value="The quick brown fox jumps over the lazy dog." waitEvent="updateComplete" waitTarget="myButton"/>				
			</setup>
			<body>
				<AssertStyleValue styleName="alignmentBaseline" value="ideographicTop" target="myButton"/>
				<CompareBitmap url="../styles/baselines/$testID.png" target="myButton"/>
			</body>
		</TestCase>
		
		<TestCase testID="alignmentBaseline_ideographicCenter_Button" description="default alignmentBaseline FxButton" keywords="[FxButton, alignmentBaseline, style]">
			<setup>
				<ResetComponent target="myButton" className="spark.components.Button" waitEvent="updateComplete"/>
				<SetStyle styleName="alignmentBaseline" value="ideographicCenter" target="myButton"/>
				<SetProperty target="myButton" propertyName="label" value="The quick brown fox jumps over the lazy dog." waitEvent="updateComplete" waitTarget="myButton"/>				
			</setup>
			<body>
				<AssertStyleValue styleName="alignmentBaseline" value="ideographicCenter" target="myButton"/>
				<CompareBitmap url="../styles/baselines/$testID.png" target="myButton"/>
			</body>
		</TestCase>
		
		<TestCase testID="alignmentBaseline_ideographicBottom_Button" description="default alignmentBaseline FxButton" keywords="[FxButton, alignmentBaseline, style]">
			<setup>
				<ResetComponent target="myButton" className="spark.components.Button" waitEvent="updateComplete"/>
				<SetStyle styleName="alignmentBaseline" value="ideographicBottom" target="myButton"/>
				<SetProperty target="myButton" propertyName="label" value="The quick brown fox jumps over the lazy dog." waitEvent="updateComplete" waitTarget="myButton"/>				
			</setup>
			<body>
				<AssertStyleValue styleName="alignmentBaseline" value="ideographicBottom" target="myButton"/>
				<CompareBitmap url="../styles/baselines/$testID.png" target="myButton"/>
			</body>
		</TestCase>
		
		<TestCase testID="alignmentBaseline_descent_Button" description="default alignmentBaseline FxButton" keywords="[FxButton, alignmentBaseline, style]">
			<setup>
				<ResetComponent target="myButton" className="spark.components.Button" waitEvent="updateComplete"/>
				<SetStyle styleName="alignmentBaseline" value="descent" target="myButton"/>
				<SetProperty target="myButton" propertyName="label" value="The quick brown fox jumps over the lazy dog." waitEvent="updateComplete" waitTarget="myButton"/>				
			</setup>
			<body>
				<AssertStyleValue styleName="alignmentBaseline" value="descent" target="myButton"/>
				<CompareBitmap url="../styles/baselines/$testID.png" target="myButton"/>
			</body>
		</TestCase>
		
		<TestCase testID="alignmentBaseline_ascent_Button" description="default alignmentBaseline FxButton" keywords="[FxButton, alignmentBaseline, style]">
			<setup>
				<ResetComponent target="myButton" className="spark.components.Button" waitEvent="updateComplete"/>
				<SetStyle styleName="alignmentBaseline" value="ascent" target="myButton"/>
				<SetProperty target="myButton" propertyName="label" value="The quick brown fox jumps over the lazy dog." waitEvent="updateComplete" waitTarget="myButton"/>				
			</setup>
			<body>
				<AssertStyleValue styleName="alignmentBaseline" value="ascent" target="myButton"/>
				<CompareBitmap url="../styles/baselines/$testID.png" target="myButton"/>
			</body>
		</TestCase>
		
		<TestCase testID="baselineShift_default_Button" description="default baselineShift FxButton" keywords="[FxButton, baselineShift, style]">
			<setup>
				<ResetComponent target="myButton" className="spark.components.Button" waitEvent="updateComplete"/>
			</setup>
			<body>
				<AssertStyleValue styleName="baselineShift" value="0" target="myButton"/>
			</body>
		</TestCase>
		
		<TestCase testID="baselineShift_50_Button" description="50 baselineShift FxButton" keywords="[FxButton, baselineShift, style]">
			<setup>
				<ResetComponent target="myButton" className="spark.components.Button" waitEvent="updateComplete"/>
				<SetProperty propertyName="height" value="100" target="myButton"/>
				<SetStyle styleName="baselineShift" value="50" target="myButton"/>
				<SetProperty target="myButton" propertyName="label" value="The quick brown fox jumps over the lazy dog." waitEvent="updateComplete" waitTarget="myButton"/>				
			</setup>
			<body>
				<AssertStyleValue styleName="baselineShift" value="50" target="myButton"/>
				<CompareBitmap url="../styles/baselines/$testID.png" target="myButton"/>
			</body>
		</TestCase>
		
		<TestCase testID="baselineShift_neg50_Button" description="neg50 baselineShift FxButton" keywords="[FxButton, baselineShift, style]">
			<setup>
				<ResetComponent target="myButton" className="spark.components.Button" waitEvent="updateComplete"/>
				<SetProperty propertyName="height" value="100" target="myButton"/>
				<SetStyle styleName="baselineShift" value="-50" target="myButton"/>
				<SetProperty target="myButton" propertyName="label" value="The quick brown fox jumps over the lazy dog." waitEvent="updateComplete" waitTarget="myButton"/>				
			</setup>
			<body>
				<AssertStyleValue styleName="baselineShift" value="-50" target="myButton"/>
				<CompareBitmap url="../styles/baselines/$testID.png" target="myButton"/>
			</body>
		</TestCase>
		
		<TestCase testID="breakOpportunity_default_Button" description="default breakOpportunity FxButton" keywords="[FxButton, baselineShift, style]">
			<setup>
				<ResetComponent target="myButton" className="spark.components.Button" waitEvent="updateComplete"/>
			</setup>
			<body>
				<AssertStyleValue styleName="breakOpportunity" value="auto" target="myButton"/>
			</body>
		</TestCase>
		
		<TestCase testID="breakOpportunity_all_Button" description="all breakOpportunity FxButton" keywords="[FxButton, baselineShift, style]">
			<setup>
				<ResetComponent target="myButton" className="spark.components.Button" waitEvent="updateComplete"/>
				<SetProperty propertyName="width" value="100" target="myButton"/>
				<SetProperty propertyName="height" value="100" target="myButton"/>
				<SetStyle styleName="breakOpportunity" value="all" target="myButton"/>
				<SetProperty target="myButton" propertyName="label" value="The quick brown fox jumps over the lazy dog." waitEvent="updateComplete" waitTarget="myButton"/>				
			</setup>
			<body>
				<AssertStyleValue styleName="breakOpportunity" value="all" target="myButton"/>
				<CompareBitmap url="../styles/baselines/$testID.png" target="myButton"/>
			</body>
		</TestCase>
		
		<TestCase testID="breakOpportunity_any_Button" description="any breakOpportunity FxButton" keywords="[FxButton, baselineShift, style]">
			<setup>
				<ResetComponent target="myButton" className="spark.components.Button" waitEvent="updateComplete"/>
				<SetProperty propertyName="width" value="100" target="myButton"/>
				<SetProperty propertyName="height" value="100" target="myButton"/>
				<SetStyle styleName="breakOpportunity" value="any" target="myButton"/>
				<SetProperty target="myButton" propertyName="label" value="The quick brown fox jumps over the lazy dog." waitEvent="updateComplete" waitTarget="myButton"/>				
			</setup>
			<body>
				<AssertStyleValue styleName="breakOpportunity" value="any" target="myButton"/>
				<CompareBitmap url="../styles/baselines/$testID.png" target="myButton"/>
			</body>
		</TestCase>
		
		<TestCase testID="breakOpportunity_none_Button" description="none breakOpportunity FxButton" keywords="[FxButton, baselineShift, style]">
			<setup>
				<ResetComponent target="myButton" className="spark.components.Button" waitEvent="updateComplete"/>
				<SetProperty propertyName="width" value="100" target="myButton"/>
				<SetStyle styleName="breakOpportunity" value="none" target="myButton"/>
				<SetProperty target="myButton" propertyName="label" value="The quick brown fox jumps over the lazy dog." waitEvent="updateComplete" waitTarget="myButton"/>				
			</setup>
			<body>
				<AssertStyleValue styleName="breakOpportunity" value="none" target="myButton"/>
				<CompareBitmap url="../styles/baselines/$testID.png" target="myButton"/>
			</body>
		</TestCase>
		
		<TestCase testID="cffHinting_default_Button" description="none breakOpportunity FxButton" keywords="[FxButton, baselineShift, style]">
			<setup>
				<ResetComponent target="myButton" className="spark.components.Button" waitEvent="updateComplete"/>
				<SetProperty propertyName="width" value="100" target="myButton"/>
				<SetProperty target="myButton" propertyName="label" value="The quick brown fox jumps over the lazy dog." waitEvent="updateComplete" waitTarget="myButton"/>				
			</setup>
			<body>
				<AssertStyleValue styleName="cffHinting" value="horizontalStem" target="myButton"/>
			</body>
		</TestCase>
		
		<TestCase testID="cffHinting_none_Button" description="none breakOpportunity FxButton" keywords="[FxButton, baselineShift, style]">
			<setup>
				<ResetComponent target="myButton" className="spark.components.Button" waitEvent="updateComplete"/>
				<SetProperty propertyName="width" value="100" target="myButton"/>
				<SetStyle styleName="cffHinting" value="none" target="myButton"/>
				<SetProperty target="myButton" propertyName="label" value="The quick brown fox jumps over the lazy dog." waitEvent="updateComplete" waitTarget="myButton"/>				
			</setup>
			<body>
				<AssertStyleValue styleName="cffHinting" value="none" target="myButton"/>
				<CompareBitmap url="../styles/baselines/$testID.png" target="myButton"/>
			</body>
		</TestCase>
		
		<TestCase testID="color_default_FxButton" description="set color of Button to red" keywords="[FxButton, color, style]">
			<setup>
				<ResetComponent target="myButton" className="spark.components.Button" waitEvent="updateComplete" waitTarget="myButton"/>
				<SetProperty target="myButton" propertyName="label" value="color default label" waitEvent="updateComplete" waitTarget="myButton"/>				
			</setup>
			<body>
				<CompareBitmap url="../styles/baselines/$testID.png" target="myButton"/>
			</body>
		</TestCase>		
		
		<TestCase testID="color_red_FxButton" description="set color of Button to red" keywords="[FxButton, color, style]">
			<setup>
				<ResetComponent target="myButton" className="spark.components.Button" waitEvent="updateComplete" waitTarget="myButton"/>
				<SetStyle target="myButton" styleName="color" value="red"/>
				<SetProperty target="myButton" propertyName="label" value="color red label" waitEvent="updateComplete" waitTarget="myButton"/>				
			</setup>
			<body>
				<CompareBitmap url="../styles/baselines/$testID.png" target="myButton"/>
			</body>
		</TestCase>
		
		<TestCase testID="color_green_FxButton" description="set color of Button to green" keywords="[FxButton, color, style]">
			<setup>
				<ResetComponent target="myButton" className="spark.components.Button" waitEvent="updateComplete" waitTarget="myButton"/>
				<SetStyle target="myButton" styleName="color" value="0x00FF00"/>
				<SetProperty target="myButton" propertyName="label" value="color green label" waitEvent="updateComplete" waitTarget="myButton"/>				
			</setup>
			<body>
				<CompareBitmap url="../styles/baselines/$testID.png" target="myButton"/>
			</body>
		</TestCase>
		
		<TestCase testID="color_blue_FxButton" description="set color of Button to blue" keywords="[FxButton, color, style]">
			<setup>
				<ResetComponent target="myButton" className="spark.components.Button" waitEvent="updateComplete" waitTarget="myButton"/>
				<SetStyle target="myButton" styleName="color" value="#0000FF"/>
				<SetProperty target="myButton" propertyName="label" value="color blue label" waitEvent="updateComplete" waitTarget="myButton"/>				
			</setup>
			<body>
				<CompareBitmap url="../styles/baselines/$testID.png" target="myButton"/>
			</body>
		</TestCase>
				
		<TestCase testID="digitCase_default_Button" description="none breakOpportunity FxButton" keywords="[FxButton, baselineShift, style]">
			<setup>
				<ResetComponent target="myButton" className="spark.components.Button" waitEvent="updateComplete"/>
				<SetStyle target="myButton" styleName="fontFamily" value="ArnoProRegEmbedded"/>
				<SetStyle target="myButton" styleName="fontLookup" value="embeddedCFF"/>
            			<SetProperty target="myButton" propertyName="label" value="0123456789" waitEvent="updateComplete" waitTarget="myButton"/>				
			</setup>
			<body>
				<AssertStyleValue styleName="digitCase" value="default" target="myButton"/>
				<CompareBitmap url="../styles/baselines/$testID.png" target="myButton"/>
			</body>
		</TestCase>
		
		<TestCase testID="digitCase_lining_Button" description="none breakOpportunity FxButton" keywords="[FxButton, baselineShift, style]">
			<setup>
				<ResetComponent target="myButton" className="spark.components.Button" waitEvent="updateComplete"/>
				<SetStyle styleName="digitCase" value="lining" target="myButton"/>
				<SetStyle target="myButton" styleName="fontFamily" value="ArnoProRegEmbedded"/>
				<SetStyle target="myButton" styleName="fontLookup" value="embeddedCFF"/>
            			<SetProperty target="myButton" propertyName="label" value="0123456789" waitEvent="updateComplete" waitTarget="myButton"/>				
			</setup>
			<body>
				<AssertStyleValue styleName="digitCase" value="lining" target="myButton"/>
				<CompareBitmap url="../styles/baselines/$testID.png" target="myButton"/>
			</body>
		</TestCase>
		
		<TestCase testID="digitCase_oldStyle_Button" description="none breakOpportunity FxButton" keywords="[FxButton, baselineShift, style]">
			<setup>
				<ResetComponent target="myButton" className="spark.components.Button" waitEvent="updateComplete"/>
				<SetStyle styleName="digitCase" value="oldStyle" target="myButton"/>
				<SetStyle target="myButton" styleName="fontFamily" value="ArnoProRegEmbedded"/>
				<SetStyle target="myButton" styleName="fontLookup" value="embeddedCFF"/>
        			<SetProperty target="myButton" propertyName="label" value="0123456789" waitEvent="updateComplete" waitTarget="myButton"/>				
			</setup>
			<body>
				<AssertStyleValue styleName="digitCase" value="oldStyle" target="myButton"/>
				<CompareBitmap url="../styles/baselines/$testID.png" target="myButton"/>
			</body>
		</TestCase>
		
		<TestCase testID="digitWidth_default_Button" description="none breakOpportunity FxButton" keywords="[FxButton, baselineShift, style]">
			<setup>
				<ResetComponent target="myButton" className="spark.components.Button" waitEvent="updateComplete"/>
				<SetProperty target="myButton" propertyName="label" value="0123456789" waitEvent="updateComplete" waitTarget="myButton"/>				
			</setup>
			<body>
				<AssertStyleValue styleName="digitWidth" value="default" target="myButton"/>
			</body>
		</TestCase>
		
		<TestCase testID="digitWidth_tabular_Button" description="none breakOpportunity FxButton" keywords="[FxButton, baselineShift, style]">
			<setup>
				<ResetComponent target="myButton" className="spark.components.Button" waitEvent="updateComplete"/>
				<SetStyle target="myButton" styleName="fontFamily" value="ArnoProRegEmbedded"/>
				<SetStyle target="myButton" styleName="fontLookup" value="embeddedCFF"/>
        			<SetStyle styleName="digitWidth" value="tabular" target="myButton"/>
				<SetProperty target="myButton" propertyName="label" value="0123456789" waitEvent="updateComplete" waitTarget="myButton"/>				
			</setup>
			<body>
				<AssertStyleValue styleName="digitWidth" value="tabular" target="myButton"/>
				<CompareBitmap url="../styles/baselines/$testID.png" target="myButton"/>
			</body>
		</TestCase>
		
		<TestCase testID="digitWidth_proportional_Button" description="none breakOpportunity FxButton" keywords="[FxButton, baselineShift, style]">
			<setup>
				<ResetComponent target="myButton" className="spark.components.Button" waitEvent="updateComplete"/>
				<SetStyle target="myButton" styleName="fontFamily" value="ArnoProRegEmbedded"/>
				<SetStyle target="myButton" styleName="fontLookup" value="embeddedCFF"/>
        			<SetStyle styleName="digitWidth" value="proportional" target="myButton"/>
        			<SetProperty target="myButton" propertyName="label" value="0123456789" waitEvent="updateComplete" waitTarget="myButton"/>				
			</setup>
			<body>
				<AssertStyleValue styleName="digitWidth" value="proportional" target="myButton"/>
				<CompareBitmap url="../styles/baselines/$testID.png" target="myButton"/>
			</body>
		</TestCase>
		<TestCase testID="direction_default_FxButton" description="direction default FxButton" keywords="[FxButton, direction, style]">
			<setup>
				<ResetComponent target="myButton" className="spark.components.Button" waitEvent="updateComplete" waitTarget="myButton"/>
				<SetProperty target="myButton" propertyName="width" value="100"/>
				<SetProperty target="myButton" propertyName="height" value="100"/>
				<SetStyle styleName="lineBreak" value="toFit" target="myButton"/>
				<SetProperty target="myButton" propertyName="label" value="The quick brown fox jumps over the lazy dog." waitEvent="updateComplete" waitTarget="myButton"/>				
			</setup>
			<body>
				<AssertStyleValue target="myButton" styleName="direction" value="ltr"/>
				<CompareBitmap url="../styles/baselines/$testID.png" target="myButton"/>
			</body>
		</TestCase>

		<TestCase testID="direction_rtl_FxButton" description="direction rtl FxButton" keywords="[FxButton, direction, style]">
			<setup>
				<ResetComponent target="myButton" className="spark.components.Button" waitEvent="updateComplete" waitTarget="myButton"/>
				<SetProperty target="myButton" propertyName="width" value="100"/>
				<SetProperty target="myButton" propertyName="height" value="100"/>
				<SetStyle styleName="lineBreak" value="toFit" target="myButton"/>
				<SetStyle styleName="direction" value="rtl" target="myButton"/>
				<SetProperty target="myButton" propertyName="label" value="The quick brown fox jumps over the lazy dog." waitEvent="updateComplete" waitTarget="myButton"/>				
			</setup>
			<body>
				<AssertStyleValue target="myButton" styleName="direction" value="rtl"/>
				<CompareBitmap url="../styles/baselines/$testID.png" target="myButton"/>
			</body>
		</TestCase>
		
		<TestCase testID="dominantBaseline_default_Button" description="default dominantBaseline FxButton" keywords="[FxButton, dominantBaseline, style]">
			<setup>
				<ResetComponent target="myButton" className="spark.components.Button" waitEvent="updateComplete"/>
			</setup>
			<body>
				<AssertStyleValue styleName="dominantBaseline" value="roman" target="myButton"/>
			</body>
		</TestCase>
				
		<TestCase testID="dominantBaseline_roman_Button" description="default dominantBaseline FxButton" keywords="[FxButton, dominantBaseline, style]">
			<setup>
				<ResetComponent target="myButton" className="spark.components.Button" waitEvent="updateComplete"/>
				<SetStyle styleName="dominantBaseline" value="roman" target="myButton"/>
				<SetStyle styleName="alignmentBaseline" value="roman" target="myButton"/>
				<SetProperty target="myButton" propertyName="label" value="The quick brown fox jumps over the lazy dog." waitEvent="updateComplete" waitTarget="myButton"/>				
			</setup>
			<body>
				<AssertStyleValue styleName="dominantBaseline" value="roman" target="myButton"/>
				<CompareBitmap url="../styles/baselines/$testID.png" target="myButton"/>
			</body>
		</TestCase>
				
		<TestCase testID="dominantBaseline_ideographicTop_Button" description="ideographicTop dominantBaseline FxButton" keywords="[FxButton, dominantBaseline, style]">
			<setup>
				<ResetComponent target="myButton" className="spark.components.Button" waitEvent="updateComplete"/>
				<SetStyle styleName="dominantBaseline" value="ideographicTop" target="myButton"/>
				<SetStyle styleName="alignmentBaseline" value="roman" target="myButton"/>
				<SetProperty target="myButton" propertyName="label" value="The quick brown fox jumps over the lazy dog." waitEvent="updateComplete" waitTarget="myButton"/>				
			</setup>
			<body>
				<AssertStyleValue styleName="dominantBaseline" value="ideographicTop" target="myButton"/>
				<CompareBitmap url="../styles/baselines/$testID.png" target="myButton"/>
			</body>
		</TestCase>
				
		<TestCase testID="dominantBaseline_ideographicCenter_Button" description="ideographicCenter dominantBaseline FxButton" keywords="[FxButton, dominantBaseline, style]">
			<setup>
				<ResetComponent target="myButton" className="spark.components.Button" waitEvent="updateComplete"/>
				<SetStyle styleName="dominantBaseline" value="ideographicCenter" target="myButton"/>
				<SetStyle styleName="alignmentBaseline" value="roman" target="myButton"/>
				<SetProperty target="myButton" propertyName="label" value="The quick brown fox jumps over the lazy dog." waitEvent="updateComplete" waitTarget="myButton"/>				
			</setup>
			<body>
				<AssertStyleValue styleName="dominantBaseline" value="ideographicCenter" target="myButton"/>
				<CompareBitmap url="../styles/baselines/$testID.png" target="myButton"/>
			</body>
		</TestCase>

		<TestCase testID="dominantBaseline_ideographicBottom_Button" description="ideographicBottom dominantBaseline FxButton" keywords="[FxButton, dominantBaseline, style]">
			<setup>
				<ResetComponent target="myButton" className="spark.components.Button" waitEvent="updateComplete"/>
				<SetStyle styleName="dominantBaseline" value="ideographicBottom" target="myButton"/>
				<SetStyle styleName="alignmentBaseline" value="roman" target="myButton"/>
				<SetProperty target="myButton" propertyName="label" value="The quick brown fox jumps over the lazy dog." waitEvent="updateComplete" waitTarget="myButton"/>				
			</setup>
			<body>
				<AssertStyleValue styleName="dominantBaseline" value="ideographicBottom" target="myButton"/>
				<CompareBitmap url="../styles/baselines/$testID.png" target="myButton"/>
			</body>
		</TestCase>

		<TestCase testID="dominantBaseline_descent_Button" description="descent dominantBaseline FxButton" keywords="[FxButton, dominantBaseline, style]">
			<setup>
				<ResetComponent target="myButton" className="spark.components.Button" waitEvent="updateComplete"/>
				<SetStyle styleName="dominantBaseline" value="descent" target="myButton"/>
				<SetStyle styleName="alignmentBaseline" value="roman" target="myButton"/>
				<SetProperty target="myButton" propertyName="label" value="The quick brown fox jumps over the lazy dog." waitEvent="updateComplete" waitTarget="myButton"/>				
			</setup>
			<body>
				<AssertStyleValue styleName="dominantBaseline" value="descent" target="myButton"/>
				<CompareBitmap url="../styles/baselines/$testID.png" target="myButton"/>
			</body>
		</TestCase>

		<TestCase testID="dominantBaseline_ascent_Button" description="ascent dominantBaseline FxButton" keywords="[FxButton, dominantBaseline, style]">
			<setup>
				<ResetComponent target="myButton" className="spark.components.Button" waitEvent="updateComplete"/>
				<SetStyle styleName="dominantBaseline" value="ascent" target="myButton"/>
				<SetStyle styleName="alignmentBaseline" value="roman" target="myButton"/>
				<SetProperty target="myButton" propertyName="label" value="The quick brown fox jumps over the lazy dog." waitEvent="updateComplete" waitTarget="myButton"/>				
			</setup>
			<body>
				<AssertStyleValue styleName="dominantBaseline" value="ascent" target="myButton"/>
				<CompareBitmap url="../styles/baselines/$testID.png" target="myButton"/>
			</body>
		</TestCase>
		
		<TestCase testID="fontFamily_myArial_FxButton" description="default fontFamily is myArial" keywords="[FxButton, fontFamily, style]">
			<setup>
				<ResetComponent target="myButton" className="spark.components.Button" waitEvent="updateComplete" waitTarget="myButton"/>
				<SetProperty target="myButton" propertyName="label" value="The quick brown fox jumps over the lazy dog." waitEvent="updateComplete" waitTarget="myButton"/>				
			</setup>
			<body>
				<AssertStyleValue target="myButton" styleName="fontFamily" value="myArial"/>
			</body>
		</TestCase>

		<TestCase testID="fontLookup_embedded_FxButton" description="fontLookup is embedded" keywords="[FxButton, fontFamily, style]">
			<setup>
				<ResetComponent target="myButton" className="spark.components.Button" waitEvent="updateComplete" waitTarget="myButton"/>
				<SetProperty target="myButton" propertyName="label" value="The quick brown fox jumps over the lazy dog." waitEvent="updateComplete" waitTarget="myButton"/>				
			</setup>
			<body>
				<AssertStyleValue target="myButton" styleName="fontLookup" value="embeddedCFF"/>
			</body>
		</TestCase>
		
		<TestCase testID="fontLookup_device_FxButton" description="fontLookup is device" keywords="[FxButton, fontFamily, style]">
			<setup>
				<ResetComponent target="myButton" className="spark.components.Button" waitEvent="updateComplete" waitTarget="myButton"/>
				<SetStyle styleName="fontFamily" value="Times New Roman" target="myButton"/>
				<SetStyle styleName="fontLookup" value="device" target="myButton"/>
				<SetProperty target="myButton" propertyName="label" value="The quick brown fox jumps over the lazy dog." waitEvent="updateComplete" waitTarget="myButton"/>				
			</setup>
			<body>
				<AssertStyleValue target="myButton" styleName="fontLookup" value="device"/>
			</body>
		</TestCase>
		
		<TestCase testID="fontSize_16_FxButton" description="set fontSize of Button to 16" keywords="[FxButton, fontSize, style]">
			<setup>
				<ResetComponent target="myButton" className="spark.components.Button" waitEvent="updateComplete" waitTarget="myButton"/>
				<SetStyle target="myButton" styleName="fontSize" value="16"/>
				<SetProperty target="myButton" propertyName="label" value="fontSize 16 label" waitEvent="updateComplete" waitTarget="myButton"/>				
			</setup>
			<body>
				<CompareBitmap url="../styles/baselines/$testID.png" target="myButton"/>
			</body>
		</TestCase>
		
		<TestCase testID="fontSize_default_FxButton" description="set fontSize of Button to 16" keywords="[FxButton, fontSize, style]">
			<setup>
				<ResetComponent target="myButton" className="spark.components.Button" waitEvent="updateComplete" waitTarget="myButton"/>
				<SetProperty target="myButton" propertyName="label" value="fontSize default label" waitEvent="updateComplete" waitTarget="myButton"/>				
			</setup>
			<body>	
				<AssertStyleValue target="myButton" styleName="fontSize" value="12"/>
				<CompareBitmap url="../styles/baselines/$testID.png" target="myButton"/>
			</body>
		</TestCase>
		
		<TestCase testID="fontSize_6_FxButton" description="set fontSize of Button to 16" keywords="[FxButton, fontSize, style]">
			<setup>
				<ResetComponent target="myButton" className="spark.components.Button" waitEvent="updateComplete" waitTarget="myButton"/>
				<SetStyle target="myButton" styleName="fontSize" value="6"/>
				<SetProperty target="myButton" propertyName="label" value="fontSize 6 label" waitEvent="updateComplete" waitTarget="myButton"/>				
			</setup>
			<body>
				<CompareBitmap url="../styles/baselines/$testID.png" target="myButton"/>
			</body>
		</TestCase>
		<TestCase testID="fontSize_40_FxButton" description="set fontSize of Button to 16" keywords="[FxButton, fontSize, style]">
			<setup>
				<ResetComponent target="myButton" className="spark.components.Button" waitEvent="updateComplete" waitTarget="myButton"/>
				<SetStyle target="myButton" styleName="fontSize" value="40"/>
				<SetProperty target="myButton" propertyName="label" value="fontSize 40 label" waitEvent="updateComplete" waitTarget="myButton"/>				
			</setup>
			<body>
				<CompareBitmap url="../styles/baselines/$testID.png" target="myButton"/>
			</body>
		</TestCase>
		
		<TestCase testID="fontStyle_default_FxButton" description="fontStyle default FxButton" keywords="[FxButton, fontStyle, style]">
			<setup>
				<ResetComponent target="myButton" className="spark.components.Button" waitEvent="updateComplete" waitTarget="myButton"/>
				<SetProperty target="myButton" propertyName="label" value="The quick brown fox jumps over the lazy dog." waitEvent="updateComplete" waitTarget="myButton"/>				
			</setup>
			<body>
				<AssertStyleValue target="myButton" styleName="fontStyle" value="normal"/>
			</body>
		</TestCase>

		<TestCase testID="fontStyle_italic_FxButton" description="fontStyle default FxButton" keywords="[FxButton, fontStyle, style]">
			<setup>
				<ResetComponent target="myButton" className="spark.components.Button" waitEvent="updateComplete" waitTarget="myButton"/>
				<SetStyle styleName="fontStyle" value="italic" target="myButton"/>
				<SetProperty target="myButton" propertyName="label" value="The quick brown fox jumps over the lazy dog." waitEvent="updateComplete" waitTarget="myButton"/>				
			</setup>
			<body>
				<AssertStyleValue target="myButton" styleName="fontStyle" value="italic"/>
				<CompareBitmap url="../styles/baselines/$testID.png" target="myButton"/>	
			</body>
		</TestCase>

		<TestCase testID="fontWeight_bold_Button" description="fontWeight bold Button" keywords="[FxButton, fontWeight, style]">
			<setup>
				<ResetComponent target="myButton" className="spark.components.Button" waitEvent="updateComplete" waitTarget="myButton"/>
				<SetStyle target="myButton" styleName="fontWeight" value="bold"/>
				<SetProperty target="myButton" propertyName="label" value="fontWeight bold label" waitEvent="updateComplete" waitTarget="myButton"/>
			</setup>
			<body>
				<CompareBitmap url="../styles/baselines/$testID.png" target="myButton"/>
			</body>		
		</TestCase>
		
		<TestCase testID="fontWeight_normal_Button" description="fontWeight bold Button" keywords="[FxButton, fontWeight, style]">
			<setup>
				<ResetComponent target="myButton" className="spark.components.Button" waitEvent="updateComplete" waitTarget="myButton"/>
				<SetProperty target="myButton" propertyName="label" value="fontWeight normal label" waitEvent="updateComplete" waitTarget="myButton"/>
			</setup>
			<body>
				<AssertStyleValue target="myButton" styleName="fontWeight" value="normal"/>
				<CompareBitmap url="../styles/baselines/$testID.png" target="myButton"/>
			</body>		
		</TestCase>

		<TestCase testID="justificationRule_default_FxButton" description="justificationRule default FxButton" keywords="[FxButton, justificationRule, style]">
			<setup>	
				<ResetComponent target="myButton" className="spark.components.Button" waitEvent="updateComplete" waitTarget="myButton"/>
			</setup>
			<body>
				<AssertStyleValue target="myButton" styleName="justificationRule" value="space"/>
			</body>
		</TestCase>
		
		<!--Need to write test w/ East Asian characters <TestCase testID="justificationRule_eastAsian_FxButton" description="justificationRule default FxButton" keywords="[FxButton, justificationRule, style]">
			<setup>
				<ResetComponent target="myButton" className="spark.components.Button" waitEvent="updateComplete" waitTarget="myButton"/>
				<SetStyle styleName="justificationRule" value="eastAsian" target="myButton"/>
				<SetProperty target="myButton" propertyName="label" value="The quick brown fox, jumps over the lazy dog." waitEvent="updateComplete" waitTarget="myButton"/>				
			</setup>
			<body>
				<AssertStyleValue target="myButton" styleName="justificationRule" value="eastAsian"/>
				<CompareBitmap url="../styles/baselines/$testID.png" target="myButton"/>
			</body>
		</TestCase>
		-->
		
		<TestCase testID="justificationStyle_default_FxButton" description="justificationRule default FxButton" keywords="[FxButton, justificationRule, style]">
			<setup>	
				<ResetComponent target="myButton" className="spark.components.Button" waitEvent="updateComplete" waitTarget="myButton"/>
				<SetStyle styleName="justificationRule" value="eastAsian" target="myButton"/>
				<SetProperty target="myButton" propertyName="label" value="The quick brown fox, jumps over the lazy dog." waitEvent="updateComplete" waitTarget="myButton"/>				
			</setup>
			<body>
				<AssertStyleValue target="myButton" styleName="justificationStyle" value="pushInKinsoku"/>
			</body>
		</TestCase>
		
		<!-- Need east asian test for justificationStyle -->
		
		<TestCase testID="kerning_default_FxButton" description="kerning default FxButton" keywords="[FxButton, kerning, style]">
			<setup>	
				<ResetComponent target="myButton" className="spark.components.Button" waitEvent="updateComplete" waitTarget="myButton"/>
			</setup>
			<body>
				<AssertStyleValue target="myButton" styleName="kerning" value="false"/>
			</body>
		</TestCase>
		
		<TestCase testID="kerning_off_FxButton" description="kerning off FxButton" keywords="[FxButton, kerning, style]">
			<setup>	
				<ResetComponent target="myButton" className="spark.components.Button" waitEvent="updateComplete" waitTarget="myButton"/>
				<SetStyle styleName="kerning" value="off" target="myButton"/>
				<SetStyle styleName="fontFamily" value="Helvetica" target="myButton"/>
				<SetProperty target="myButton" propertyName="label" value="VA rn" waitEvent="updateComplete" waitTarget="myButton"/>				
			</setup>
			<body>
				<AssertStyleValue target="myButton" styleName="kerning" value="off"/>
				<CompareBitmap url="../styles/baselines/$testID.png" target="myButton"/>
			</body>
		</TestCase>
		
		<TestCase testID="kerning_auto_FxButton" description="kerning auto FxButton" keywords="[FxButton, kerning, style]">
			<setup>	
				<ResetComponent target="myButton" className="spark.components.Button" waitEvent="updateComplete" waitTarget="myButton"/>
				<SetStyle styleName="kerning" value="auto" target="myButton"/>
				<SetStyle styleName="fontFamily" value="Helvetica" target="myButton"/>
				<SetProperty target="myButton" propertyName="label" value="VA rn" waitEvent="updateComplete" waitTarget="myButton"/>				
			</setup>
			<body>
				<AssertStyleValue target="myButton" styleName="kerning" value="auto"/>
				<CompareBitmap url="../styles/baselines/$testID.png" target="myButton"/>
			</body>
		</TestCase>
		
		<TestCase testID="ligatureLevel_default_FxButton" description="ligatureLevel default FxButton" keywords="[FxButton, ligatureLevel, style]">
			<setup>	
				<ResetComponent target="myButton" className="spark.components.Button" waitEvent="updateComplete" waitTarget="myButton"/>
			</setup>
			<body>
				<AssertStyleValue target="myButton" styleName="ligatureLevel" value="common"/>
			</body>
		</TestCase>
		
		<TestCase testID="lineThrough_default_FxButton" description="default value of lineThrough FxButton" keywords="[FxButton, lineThrough, style]">
			<setup>
				<ResetComponent target="myButton" className="spark.components.Button" waitEvent="updateComplete" waitTarget="myButton"/>
				<SetProperty target="myButton" propertyName="label" value="lineThrough label" waitEvent="updateComplete" waitTarget="myButton"/>				
			</setup>
			<body>
				<AssertStyleValue target="myButton" styleName="lineThrough" value="false"/>
				<CompareBitmap url="../styles/baselines/$testID.png" target="myButton"/>
			</body>
		</TestCase>
		<TestCase testID="lineThrough_true_FxButton" description="set value of lineThrough true FxButton" keywords="[FxButton, lineThrough, style]">
			<setup>
				<ResetComponent target="myButton" className="spark.components.Button" waitEvent="updateComplete" waitTarget="myButton"/>
				<SetStyle styleName="lineThrough" value="true" target="myButton"/>
				<SetProperty target="myButton" propertyName="label" value="lineThrough label" waitEvent="updateComplete" waitTarget="myButton"/>				
			</setup>
			<body>
				<CompareBitmap url="../styles/baselines/$testID.png" target="myButton"/>
			</body>
		</TestCase>

		<TestCase testID="lineBreak_default_FxButton" description="lineBreak default FxButton" keywords="[FxButton, lineBreak, style]">
			<setup>
				<ResetComponent target="myButton" className="spark.components.Button" waitEvent="updateComplete" waitTarget="myButton"/>
				<SetProperty target="myButton" propertyName="width" value="100"/>
				<SetProperty target="myButton" propertyName="height" value="100"/>
				<SetProperty target="myButton" propertyName="label" value="The quick brown fox jumps over the lazy dog." waitEvent="updateComplete" waitTarget="myButton"/>				
			</setup>
			<body>
				<AssertStyleValue target="myButton" styleName="lineBreak" value="explicit"/>
				<CompareBitmap url="../styles/baselines/$testID.png" target="myButton"/>
			</body>
		</TestCase>

		<TestCase testID="lineBreak_toFit_FxButton" description="lineBreak toFit FxButton" keywords="[FxButton, lineBreak, style]">
			<setup>
				<ResetComponent target="myButton" className="spark.components.Button" waitEvent="updateComplete" waitTarget="myButton"/>
				<SetProperty target="myButton" propertyName="width" value="100"/>
				<SetProperty target="myButton" propertyName="height" value="100"/>
				<SetStyle styleName="lineBreak" value="toFit" target="myButton"/>
				<SetProperty target="myButton" propertyName="label" value="The quick brown fox jumps over the lazy dog." waitEvent="updateComplete" waitTarget="myButton"/>				
			</setup>
			<body>
				<AssertStyleValue target="myButton" styleName="lineBreak" value="toFit"/>
				<CompareBitmap url="../styles/baselines/$testID.png" target="myButton"/>
			</body>
		</TestCase>


		<TestCase testID="lineHeight_default_FxButton" description="lineHeight default FxButton" keywords="[FxButton, direction, style]">
			<setup>
				<ResetComponent target="myButton" className="spark.components.Button" waitEvent="updateComplete" waitTarget="myButton"/>
				<SetStyle styleName="lineBreak" value="toFit" target="myButton"/>
				<SetProperty propertyName="height" value="100" target="myButton"/>
				<SetProperty propertyName="width" value="100" target="myButton"/>
				<SetProperty target="myButton" propertyName="label" value="The quick brown fox jumps over the lazy dog." waitEvent="updateComplete" waitTarget="myButton"/>				
			</setup>
			<body>
				<AssertStyleValue target="myButton" styleName="lineHeight" value="120%"/>
				<CompareBitmap url="../styles/baselines/$testID.png" target="myButton"/>
			</body>
		</TestCase>

		<TestCase testID="lineHeight_18_FxButton" description="lineHeight default FxButton" keywords="[FxButton, direction, style]">
			<setup>
				<ResetComponent target="myButton" className="spark.components.Button" waitEvent="updateComplete" waitTarget="myButton"/>
				<SetStyle styleName="lineBreak" value="toFit" target="myButton"/>
				<SetProperty propertyName="height" value="100" target="myButton"/>
				<SetProperty propertyName="width" value="100" target="myButton"/>
				<SetStyle styleName="lineHeight" value="18" target="myButton"/>
				<SetProperty target="myButton" propertyName="label" value="The quick brown fox jumps over the lazy dog." waitEvent="updateComplete" waitTarget="myButton"/>				
			</setup>
			<body>
				<AssertStyleValue target="myButton" styleName="lineHeight" value="18"/>
				<CompareBitmap url="../styles/baselines/$testID.png" target="myButton"/>
			</body>
		</TestCase>

		<TestCase testID="lineHeight_200percent_FxButton" description="lineHeight default FxButton" keywords="[FxButton, direction, style]">
			<setup>
				<ResetComponent target="myButton" className="spark.components.Button" waitEvent="updateComplete" waitTarget="myButton"/>
				<SetStyle styleName="lineBreak" value="toFit" target="myButton"/>
				<SetProperty propertyName="height" value="100" target="myButton"/>
				<SetProperty propertyName="width" value="100" target="myButton"/>
				<SetStyle styleName="lineHeight" value="200%" target="myButton"/>
				<SetProperty target="myButton" propertyName="label" value="The quick brown fox jumps over the lazy dog." waitEvent="updateComplete" waitTarget="myButton"/>				
			</setup>
			<body>
				<AssertStyleValue target="myButton" styleName="lineHeight" value="200%"/>
				<CompareBitmap url="../styles/baselines/$testID.png" target="myButton"/>
			</body>
		</TestCase>

		<TestCase testID="locale_default_FxButton" description="locale default FxButton" keywords="[FxButton, locale, style]">
			<setup>	
				<ResetComponent target="myButton" className="spark.components.Button" waitEvent="updateComplete" waitTarget="myButton"/>
			</setup>
			<body>
				<AssertStyleValue target="myButton" styleName="locale" value="en"/>
			</body>
		</TestCase>
		
		<!-- These padding* tests are all failing due to SDK-18313-->
		
		<TestCase testID="paddingTop_default_FxButton" description="paddingTop default FxButton" keywords="[FxButton, paddingTop, style]">
			<setup>	
				<ResetComponent target="myButton" className="spark.components.Button" waitEvent="updateComplete" waitTarget="myButton"/>
			</setup>
			<body>
				<AssertStyleValue target="myButton" styleName="paddingTop" value="0"/>
			</body>
		</TestCase>
		
		<TestCase testID="paddingTop_100_FxButton" description="paddingTop 100 FxButton" keywords="[FxButton, paddingTop, style]">
			<setup>	
				<ResetComponent target="myButton" className="spark.components.Button" waitEvent="updateComplete" waitTarget="myButton"/>
				<SetStyle styleName="paddingTop" value="100" target="myButton"/>
				<SetProperty target="myButton" propertyName="label" value="The quick brown fox jumps over the lazy dog." waitEvent="updateComplete" waitTarget="myButton"/>				
			</setup>
			<body>
				<AssertStyleValue target="myButton" styleName="paddingTop" value="100"/>
				<CompareBitmap url="../styles/baselines/$testID.png" target="myButton"/>
			</body>
		</TestCase>
		
		<TestCase testID="paddingTop_1000_FxButton" description="paddingTop 1000 FxButton" keywords="[FxButton, paddingTop, style]">
			<setup>	
				<ResetComponent target="myButton" className="spark.components.Button" waitEvent="updateComplete" waitTarget="myButton"/>
				<SetStyle styleName="paddingTop" value="1000" target="myButton"/>
				<SetProperty target="myButton" propertyName="label" value="The quick brown fox jumps over the lazy dog." waitEvent="updateComplete" waitTarget="myButton"/>				
			</setup>
			<body>
				<AssertStyleValue target="myButton" styleName="paddingTop" value="1000"/>
				<CompareBitmap url="../styles/baselines/$testID.png" target="myButton"/>
			</body>
		</TestCase>
		
		<TestCase testID="paddingBottom_default_FxButton" description="paddingBottom default FxButton" keywords="[FxButton, paddingBottom, style]">
			<setup>	
				<ResetComponent target="myButton" className="spark.components.Button" waitEvent="updateComplete" waitTarget="myButton"/>
			</setup>
			<body>
				<AssertStyleValue target="myButton" styleName="paddingBottom" value="0"/>
			</body>
		</TestCase>
		
		<TestCase testID="paddingBottom_100_FxButton" description="paddingBottom 100 FxButton" keywords="[FxButton, paddingBottom, style]">
			<setup>	
				<ResetComponent target="myButton" className="spark.components.Button" waitEvent="updateComplete" waitTarget="myButton"/>
				<SetStyle styleName="paddingBottom" value="100" target="myButton"/>
				<SetProperty target="myButton" propertyName="label" value="The quick brown fox jumps over the lazy dog." waitEvent="updateComplete" waitTarget="myButton"/>				
			</setup>
			<body>
				<AssertStyleValue target="myButton" styleName="paddingBottom" value="100"/>
				<CompareBitmap url="../styles/baselines/$testID.png" target="myButton"/>
			</body>
		</TestCase>

		<TestCase testID="paddingBottom_1000_FxButton" description="paddingBottom 1000 FxButton" keywords="[FxButton, paddingBottom, style]">
			<setup>	
				<ResetComponent target="myButton" className="spark.components.Button" waitEvent="updateComplete" waitTarget="myButton"/>
				<SetStyle styleName="paddingBottom" value="1000" target="myButton"/>
				<SetProperty target="myButton" propertyName="label" value="The quick brown fox jumps over the lazy dog." waitEvent="updateComplete" waitTarget="myButton"/>				
			</setup>
			<body>
				<AssertStyleValue target="myButton" styleName="paddingBottom" value="1000"/>
				<CompareBitmap url="../styles/baselines/$testID.png" target="myButton"/>
			</body>
		</TestCase>
		
		<TestCase testID="paddingLeft_default_FxButton" description="paddingLeft default FxButton" keywords="[FxButton, paddingLeft, style]">
			<setup>	
				<ResetComponent target="myButton" className="spark.components.Button" waitEvent="updateComplete" waitTarget="myButton"/>
			</setup>
			<body>
				<AssertStyleValue target="myButton" styleName="paddingLeft" value="0"/>
			</body>
		</TestCase>
		
		<TestCase testID="paddingLeft_100_FxButton" description="paddingLeft 100 FxButton" keywords="[FxButton, paddingLeft, style]">
			<setup>	
				<ResetComponent target="myButton" className="spark.components.Button" waitEvent="updateComplete" waitTarget="myButton"/>
				<SetStyle styleName="paddingLeft" value="100" target="myButton"/>
				<SetProperty target="myButton" propertyName="label" value="The quick brown fox jumps over the lazy dog." waitEvent="updateComplete" waitTarget="myButton"/>				
			</setup>
			<body>
				<AssertStyleValue target="myButton" styleName="paddingLeft" value="100"/>
				<CompareBitmap url="../styles/baselines/$testID.png" target="myButton"/>
			</body>
		</TestCase>

		<TestCase testID="paddingLeft_1000_FxButton" description="paddingLeft 1000 FxButton" keywords="[FxButton, paddingLeft, style]">
			<setup>	
				<ResetComponent target="myButton" className="spark.components.Button" waitEvent="updateComplete" waitTarget="myButton"/>
				<SetStyle styleName="paddingLeft" value="1000" target="myButton"/>
				<SetProperty target="myButton" propertyName="label" value="The quick brown fox jumps over the lazy dog." waitEvent="updateComplete" waitTarget="myButton"/>				
			</setup>
			<body>
				<AssertStyleValue target="myButton" styleName="paddingLeft" value="1000"/>
				<CompareBitmap url="../styles/baselines/$testID.png" target="myButton"/>
			</body>
		</TestCase>
		
		<TestCase testID="paddingRight_default_FxButton" description="paddingRight default FxButton" keywords="[FxButton, paddingRight, style]">
			<setup>	
				<ResetComponent target="myButton" className="spark.components.Button" waitEvent="updateComplete" waitTarget="myButton"/>
			</setup>
			<body>
				<AssertStyleValue target="myButton" styleName="paddingRight" value="0"/>
			</body>
		</TestCase>
		
		<TestCase testID="paddingRight_100_FxButton" description="paddingRight 100 FxButton" keywords="[FxButton, paddingRight, style]">
			<setup>	
				<ResetComponent target="myButton" className="spark.components.Button" waitEvent="updateComplete" waitTarget="myButton"/>
				<SetStyle styleName="paddingRight" value="100" target="myButton"/>
				<SetProperty target="myButton" propertyName="label" value="The quick brown fox jumps over the lazy dog." waitEvent="updateComplete" waitTarget="myButton"/>				
			</setup>
			<body>
				<AssertStyleValue target="myButton" styleName="paddingRight" value="100"/>
				<CompareBitmap url="../styles/baselines/$testID.png" target="myButton"/>
			</body>
		</TestCase>

		<TestCase testID="paddingRight_1000_FxButton" description="paddingRight 1000 FxButton" keywords="[FxButton, paddingRight, style]">
			<setup>	
				<ResetComponent target="myButton" className="spark.components.Button" waitEvent="updateComplete" waitTarget="myButton"/>
				<SetStyle styleName="paddingRight" value="1000" target="myButton"/>
				<SetProperty target="myButton" propertyName="label" value="The quick brown fox jumps over the lazy dog." waitEvent="updateComplete" waitTarget="myButton"/>				
			</setup>
			<body>
				<AssertStyleValue target="myButton" styleName="paddingRight" value="1000"/>
				<CompareBitmap url="../styles/baselines/$testID.png" target="myButton"/>
			</body>
		</TestCase>
			
		<TestCase testID="renderingMode_default_FxButton" description="renderingMode default FxButton" keywords="[FxButton, renderingMode, style]">
			<setup>	
				<ResetComponent target="myButton" className="spark.components.Button" waitEvent="updateComplete" waitTarget="myButton"/>
				<SetProperty target="myButton" propertyName="label" value="The quick brown fox jumps over the lazy dog." waitEvent="updateComplete" waitTarget="myButton"/>				
			</setup>
			<body>
				<AssertStyleValue target="myButton" styleName="renderingMode" value="cff"/>
				<CompareBitmap url="../styles/baselines/$testID.png" target="myButton"/>
			</body>
		</TestCase>
		
		<TestCase testID="renderingMode_normal_FxButton" description="renderingMode normal FxButton" keywords="[FxButton, renderingMode, style]">
			<setup>	
				<ResetComponent target="myButton" className="spark.components.Button" waitEvent="updateComplete" waitTarget="myButton"/>
				<SetStyle styleName="renderingMode" value="normal" target="myButton"/>
				<SetProperty target="myButton" propertyName="label" value="The quick brown fox jumps over the lazy dog." waitEvent="updateComplete" waitTarget="myButton"/>				
			</setup>
			<body>
				<AssertStyleValue target="myButton" styleName="renderingMode" value="normal"/>
				<CompareBitmap url="../styles/baselines/$testID.png" target="myButton"/>
			</body>
		</TestCase>
		
		<TestCase testID="tabStops_default_FxButton" description="tabStops default FxButton" keywords="[FxButton, tabStops, style]">
			<setup>	
				<ResetComponent target="myButton" className="spark.components.Button" waitEvent="updateComplete" waitTarget="myButton"/>
			</setup>
			<body>
				<AssertStyleValue target="myButton" styleName="tabStops" value="null"/>
			</body>
		</TestCase>
		
		<TestCase testID="textAlign_label_right_width_FxButton" description="textAlign right FxButton" keywords="[FxButton, textAlign, style]">
			<setup>
				<ResetComponent target="myButton" className="spark.components.Button" waitEvent="updateComplete"/>
				<SetStyle target="myButton" styleName="textAlign" value="right"/>
				<SetProperty target="myButton" propertyName="label" value="long button label" />
				<SetProperty target="myButton" propertyName="width" value="150" waitEvent="updateComplete" waitTarget="myButton"/>
			</setup>
			<body>
				<CompareBitmap url="../styles/baselines/$testID.png" target="myButton"/>
			</body>
		</TestCase>
		<TestCase testID="textAlign_label_right_FxButton" description="textAlign right FxButton" keywords="[FxButton, textAlign, style]">
			<setup>
				<ResetComponent target="myButton" className="spark.components.Button" waitEvent="updateComplete"/>
				<SetStyle target="myButton" styleName="textAlign" value="right"/>
				<SetProperty target="myButton" propertyName="label" value="long button label" waitEvent="updateComplete" waitTarget="myButton"/>
				<SetProperty target="myButton" propertyName="width" value="150" waitEvent="updateComplete" waitTarget="myButton"/>
			</setup>
			<body>
				<CompareBitmap url="../styles/baselines/$testID.png" target="myButton"/>
			</body>
		</TestCase>
		<TestCase testID="textAlign_label_center_FxButton" description="textAlign center FxButton" keywords="[FxButton, textAlign, style]">
			<setup>
				<ResetComponent target="myButton" className="spark.components.Button" waitEvent="updateComplete"/>
				<SetStyle target="myButton" styleName="textAlign" value="center"/>
				<SetProperty target="myButton" propertyName="label" value="long button label" waitEvent="updateComplete" waitTarget="myButton"/>
				<SetProperty target="myButton" propertyName="width" value="150" waitEvent="updateComplete" waitTarget="myButton"/>
			</setup>
			<body>
				<CompareBitmap url="../styles/baselines/$testID.png" target="myButton"/>
			</body>
		</TestCase>
		<TestCase testID="textAlign_label_center_FxButton" description="textAlign right FxButton" keywords="[FxButton, textAlign, style]">
			<setup>
				<ResetComponent target="myButton" className="spark.components.Button" waitEvent="updateComplete"/>
				<SetStyle target="myButton" styleName="textAlign" value="center"/>
				<SetProperty target="myButton" propertyName="label" value="long button label" waitEvent="updateComplete" waitTarget="myButton"/>
				<SetProperty target="myButton" propertyName="width" value="150" waitEvent="updateComplete" waitTarget="myButton"/>
			</setup>
			<body>
				<CompareBitmap url="../styles/baselines/$testID.png" target="myButton"/>
			</body>
		</TestCase>
		<TestCase testID="textAlign_label_end_FxButton" description="textAlign end FxButton" keywords="[FxButton, textAlign, style]">
			<setup>
				<ResetComponent target="myButton" className="spark.components.Button" waitEvent="updateComplete"/>
				<SetStyle target="myButton" styleName="textAlign" value="end"/>
				<SetProperty target="myButton" propertyName="label" value="long button label" waitEvent="updateComplete" waitTarget="myButton"/>
				<SetProperty target="myButton" propertyName="width" value="150" waitEvent="updateComplete" waitTarget="myButton"/>
			</setup>
			<body>
				<CompareBitmap url="../styles/baselines/$testID.png" target="myButton"/>
			</body>
		</TestCase>
		<TestCase testID="textAlign_label_end_FxButton" description="textAlign right FxButton" keywords="[FxButton, textAlign, style]">
			<setup>
				<ResetComponent target="myButton" className="spark.components.Button" waitEvent="updateComplete"/>
				<SetStyle target="myButton" styleName="textAlign" value="end"/>
				<SetProperty target="myButton" propertyName="label" value="long button label" waitEvent="updateComplete" waitTarget="myButton"/>
				<SetProperty target="myButton" propertyName="width" value="150" waitEvent="updateComplete" waitTarget="myButton"/>
			</setup>
			<body>
				<CompareBitmap url="../styles/baselines/$testID.png" target="myButton"/>
			</body>
		</TestCase>
		
		<TestCase testID="textAlign_label_justify_FxButton" description="textAlign justify FxButton" keywords="[FxButton, textAlign, style]">
			<setup>
				<ResetComponent target="myButton" className="spark.components.Button" waitEvent="updateComplete"/>
				<SetStyle target="myButton" styleName="textAlign" value="justify"/>
				<SetProperty target="myButton" propertyName="height" value="100"/>
				<SetStyle target="myButton" styleName="lineBreak" value="toFit"/>
				<SetProperty target="myButton" propertyName="label" value="The quick brown fox jumps over the lazy dog." waitEvent="updateComplete" waitTarget="myButton"/>
				<SetProperty target="myButton" propertyName="width" value="150" waitEvent="updateComplete" waitTarget="myButton"/>
			</setup>
			<body>
				<CompareBitmap url="../styles/baselines/$testID.png" target="myButton"/>
			</body>
		</TestCase>
		<TestCase testID="textAlign_label_left_FxButton" description="textAlign left FxButton" keywords="[FxButton, textAlign, style]">
			<setup>
				<ResetComponent target="myButton" className="spark.components.Button" waitEvent="updateComplete"/>
				<SetStyle target="myButton" styleName="textAlign" value="left"/>
				<SetProperty target="myButton" propertyName="label" value="long button label" waitEvent="updateComplete" waitTarget="myButton"/>
				<SetProperty target="myButton" propertyName="width" value="150" waitEvent="updateComplete" waitTarget="myButton"/>
			</setup>
			<body>
				<CompareBitmap url="../styles/baselines/$testID.png" target="myButton"/>
			</body>
		</TestCase>
		<TestCase testID="textAlign_label_left_FxButton" description="textAlign left FxButton" keywords="[FxButton, textAlign, style]">
			<setup>
				<ResetComponent target="myButton" className="spark.components.Button" waitEvent="updateComplete"/>
				<SetStyle target="myButton" styleName="textAlign" value="left"/>
				<SetProperty target="myButton" propertyName="label" value="long button label" waitEvent="updateComplete" waitTarget="myButton"/>
				<SetProperty target="myButton" propertyName="width" value="150" waitEvent="updateComplete" waitTarget="myButton"/>
			</setup>
			<body>
				<CompareBitmap url="../styles/baselines/$testID.png" target="myButton"/>
			</body>
		</TestCase>
		<TestCase testID="textAlign_label_start_FxButton" description="textAlign start FxButton" keywords="[FxButton, textAlign, style]">
			<setup>
				<ResetComponent target="myButton" className="spark.components.Button" waitEvent="updateComplete"/>
				<SetStyle target="myButton" styleName="textAlign" value="start"/>
				<SetProperty target="myButton" propertyName="label" value="long button label" waitEvent="updateComplete" waitTarget="myButton"/>
				<SetProperty target="myButton" propertyName="width" value="150" waitEvent="updateComplete" waitTarget="myButton"/>
			</setup>
			<body>
				<CompareBitmap url="../styles/baselines/$testID.png" target="myButton"/>
			</body>
		</TestCase>
		<TestCase testID="textAlign_label_start_FxButton" description="textAlign start FxButton" keywords="[FxButton, textAlign, style]">
			<setup>
				<ResetComponent target="myButton" className="spark.components.Button" waitEvent="updateComplete"/>
				<SetStyle target="myButton" styleName="textAlign" value="start"/>
				<SetProperty target="myButton" propertyName="label" value="long button label" waitEvent="updateComplete" waitTarget="myButton"/>
				<SetProperty target="myButton" propertyName="width" value="150" waitEvent="updateComplete" waitTarget="myButton"/>
			</setup>
			<body>
				<CompareBitmap url="../styles/baselines/$testID.png" target="myButton"/>
			</body>
		</TestCase>

		<TestCase testID="textAlignLast_default_Button" description="textAlign start FxButton" keywords="[FxButton, textAlign, style]">
			<setup>
				<ResetComponent target="myButton" className="spark.components.Button" waitEvent="updateComplete"/>
				<SetStyle target="myButton" styleName="textAlign" value="justify"/>
				<SetProperty target="myButton" propertyName="label" value="The quick brown fox jumps over the lazy dog." waitEvent="updateComplete" waitTarget="myButton"/>
			</setup>
			<body>
				<CompareBitmap url="../styles/baselines/$testID.png" target="myButton"/>
				<AssertStyleValue target="myButton" styleName="textAlignLast" value="start"/>
			</body>
		</TestCase>
		
		<TestCase testID="textAlignLast_left_Button" description="textAlignLast left FxButton" keywords="[FxButton, textAlign, style]">
			<setup>
				<ResetComponent target="myButton" className="spark.components.Button" waitEvent="updateComplete"/>
				<SetStyle target="myButton" styleName="textAlign" value="justify"/>
				<SetStyle target="myButton" styleName="textAlignLast" value="left"/>
				<SetProperty target="myButton" propertyName="width" value="100"/>
				<SetProperty target="myButton" propertyName="height" value="100"/>
				<SetStyle target="myButton" styleName="lineBreak" value="toFit"/>
				<SetProperty target="myButton" propertyName="label" value="The quick brown fox jumps over the lazy dog." waitEvent="updateComplete" waitTarget="myButton"/>
			</setup>
			<body>
				<AssertStyleValue target="myButton" styleName="textAlignLast" value="left"/>
				<CompareBitmap url="../styles/baselines/$testID.png" target="myButton"/>
			</body>
		</TestCase>
		
		<TestCase testID="textAlignLast_right_Button" description="textAlignLast right FxButton" keywords="[FxButton, textAlign, style]">
			<setup>
				<ResetComponent target="myButton" className="spark.components.Button" waitEvent="updateComplete"/>
				<SetStyle target="myButton" styleName="textAlign" value="justify"/>
				<SetStyle target="myButton" styleName="textAlignLast" value="right"/>
				<SetProperty target="myButton" propertyName="width" value="100"/>
				<SetProperty target="myButton" propertyName="height" value="100"/>
				<SetStyle target="myButton" styleName="lineBreak" value="toFit"/>
				<SetProperty target="myButton" propertyName="label" value="The quick brown fox jumps over the lazy dog." waitEvent="updateComplete" waitTarget="myButton"/>
			</setup>
			<body>
				<AssertStyleValue target="myButton" styleName="textAlignLast" value="right"/>
				<CompareBitmap url="../styles/baselines/$testID.png" target="myButton"/>
			</body>
		</TestCase>
		
		<TestCase testID="textAlignLast_center_Button" description="textAlignLast center FxButton" keywords="[FxButton, textAlign, style]">
			<setup>
				<ResetComponent target="myButton" className="spark.components.Button" waitEvent="updateComplete"/>
				<SetStyle target="myButton" styleName="textAlign" value="justify"/>
				<SetStyle target="myButton" styleName="textAlignLast" value="center"/>
				<SetProperty target="myButton" propertyName="width" value="100"/>
				<SetProperty target="myButton" propertyName="height" value="100"/>
				<SetStyle target="myButton" styleName="lineBreak" value="toFit"/>
				<SetProperty target="myButton" propertyName="label" value="The quick brown fox jumps over the lazy dog." waitEvent="updateComplete" waitTarget="myButton"/>
			</setup>
			<body>
				<AssertStyleValue target="myButton" styleName="textAlignLast" value="center"/>
				<CompareBitmap url="../styles/baselines/$testID.png" target="myButton"/>
			</body>
		</TestCase>
		
		<TestCase testID="textAlignLast_justify_Button" description="textAlignLast justify FxButton" keywords="[FxButton, textAlign, style]">
			<setup>
				<ResetComponent target="myButton" className="spark.components.Button" waitEvent="updateComplete"/>
				<SetStyle target="myButton" styleName="textAlign" value="justify"/>
				<SetStyle target="myButton" styleName="textAlignLast" value="justify"/>
				<SetProperty target="myButton" propertyName="width" value="100"/>
				<SetProperty target="myButton" propertyName="height" value="100"/>
				<SetStyle target="myButton" styleName="lineBreak" value="toFit"/>
				<SetProperty target="myButton" propertyName="label" value="The quick brown fox jumps over the lazy dog." waitEvent="updateComplete" waitTarget="myButton"/>
			</setup>
			<body>
				<AssertStyleValue target="myButton" styleName="textAlignLast" value="justify"/>
				<CompareBitmap url="../styles/baselines/$testID.png" target="myButton"/>
			</body>
		</TestCase>
		
		<TestCase testID="textAlignLast_end_Button" description="textAlignLast end FxButton" keywords="[FxButton, textAlign, style]">
			<setup>
				<ResetComponent target="myButton" className="spark.components.Button" waitEvent="updateComplete"/>
				<SetStyle target="myButton" styleName="textAlign" value="justify"/>
				<SetStyle target="myButton" styleName="textAlignLast" value="end"/>
				<SetProperty target="myButton" propertyName="width" value="100"/>
				<SetProperty target="myButton" propertyName="height" value="100"/>
				<SetStyle target="myButton" styleName="lineBreak" value="toFit"/>
				<SetProperty target="myButton" propertyName="label" value="The quick brown fox jumps over the lazy dog." waitEvent="updateComplete" waitTarget="myButton"/>
			</setup>
			<body>
				<AssertStyleValue target="myButton" styleName="textAlignLast" value="end"/>
				<CompareBitmap url="../styles/baselines/$testID.png" target="myButton"/>
			</body>
		</TestCase>
		
		<TestCase testID="textAlpha_default_FxButton" description="textAlpha default FxButton" keywords="[FxButton, textAlpha, style]">
			<setup>	
				<ResetComponent target="myButton" className="spark.components.Button" waitEvent="updateComplete" waitTarget="myButton"/>
			</setup>
			<body>
				<AssertStyleValue target="myButton" styleName="textAlpha" value="1"/>
			</body>
		</TestCase>
		
		<TestCase testID="textAlpha_0_FxButton" description="textAlpha 0 FxButton" keywords="[FxButton, textAlpha, style]">
			<setup>	
				<ResetComponent target="myButton" className="spark.components.Button" waitEvent="updateComplete" waitTarget="myButton"/>
				<SetStyle styleName="textAlpha" value="0" target="myButton"/>
				<SetProperty target="myButton" propertyName="label" value="The quick brown fox jumps over the lazy dog." waitEvent="updateComplete" waitTarget="myButton"/>				
			</setup>
			<body>
				<AssertStyleValue target="myButton" styleName="textAlpha" value="0"/>
				<CompareBitmap url="../styles/baselines/$testID.png" target="myButton"/>
			</body>
		</TestCase>
		
		<TestCase testID="textAlpha_0point5_FxButton" description="textAlpha 0.5 FxButton" keywords="[FxButton, textAlpha, style]">
			<setup>	
				<ResetComponent target="myButton" className="spark.components.Button" waitEvent="updateComplete" waitTarget="myButton"/>
				<SetStyle styleName="textAlpha" value="0.5" target="myButton"/>
				<SetProperty target="myButton" propertyName="label" value="The quick brown fox jumps over the lazy dog." waitEvent="updateComplete" waitTarget="myButton"/>				
			</setup>
			<body>
				<AssertStyleValue target="myButton" styleName="textAlpha" value="0.5"/>
				<CompareBitmap url="../styles/baselines/$testID.png" target="myButton"/>
			</body>
		</TestCase>
		
		<TestCase testID="textDecoration_default_FxButton" description="textDecoration default FxButton" keywords="[FxButton, textDecoration, style]">
			<setup>
				<ResetComponent target="myButton" className="spark.components.Button" waitEvent="updateComplete" waitTarget="myButton"/>
				<SetProperty target="myButton" propertyName="label" value="The quick brown fox jumps over the lazy dog." waitEvent="updateComplete" waitTarget="myButton"/>				
			</setup>
			<body>
				<AssertStyleValue target="myButton" styleName="textDecoration" value="none"/>
				<CompareBitmap url="../styles/baselines/$testID.png" target="myButton"/>
			</body>
		</TestCase>

		<TestCase testID="textDecoration_underline_FxButton" description="textDecoration underline FxButton" keywords="[FxButton, textDecoration, style]">
			<setup>
				<ResetComponent target="myButton" className="spark.components.Button" waitEvent="updateComplete" waitTarget="myButton"/>
				<SetStyle styleName="textDecoration" value="underline" target="myButton"/>
				<SetProperty target="myButton" propertyName="label" value="The quick brown fox jumps over the lazy dog." waitEvent="updateComplete" waitTarget="myButton"/>				
			</setup>
			<body>
				<AssertStyleValue target="myButton" styleName="textDecoration" value="underline"/>
				<CompareBitmap url="../styles/baselines/$testID.png" target="myButton"/>
			</body>
		</TestCase>

		<TestCase testID="textJustify_default_FxButton" description="textJustify default FxButton" keywords="[FxButton, textJustify, style]">
			<setup>
				<ResetComponent target="myButton" className="spark.components.Button" waitEvent="updateComplete" waitTarget="myButton"/>
				<SetStyle target="myButton" styleName="textAlign" value="justify"/>
				<SetProperty target="myButton" propertyName="width" value="100"/>
				<SetProperty target="myButton" propertyName="height" value="100"/>
				<SetStyle target="myButton" styleName="lineBreak" value="toFit"/>
				<SetProperty target="myButton" propertyName="label" value="The quick brown fox jumps over the lazy dog." waitEvent="updateComplete" waitTarget="myButton"/>				
			</setup>
			<body>
				<AssertStyleValue target="myButton" styleName="textJustify" value="null"/>
				<CompareBitmap url="../styles/baselines/$testID.png" target="myButton"/>
			</body>
		</TestCase>
		
		<TestCase testID="textJustify_default_justified_FxButton" description="textJustify default FxButton" keywords="[FxButton, textJustify, style]">
			<setup>
				<ResetComponent target="myButton" className="spark.components.Button" waitEvent="updateComplete" waitTarget="myButton"/>
				<SetStyle target="myButton" styleName="textAlign" value="justify"/>
				<SetProperty target="myButton" propertyName="width" value="100"/>
				<SetProperty target="myButton" propertyName="height" value="100"/>
				<SetStyle target="myButton" styleName="lineBreak" value="toFit"/>
				<SetStyle target="myButton" styleName="textJustify" value="interWord"/>
				<SetProperty target="myButton" propertyName="label" value="The quick brown fox jumps over the lazy dog." waitEvent="updateComplete" waitTarget="myButton"/>				
			</setup>
			<body>
				<AssertStyleValue target="myButton" styleName="textJustify" value="interWord"/>
				<CompareBitmap url="../styles/baselines/$testID.png" target="myButton"/>
			</body>
		</TestCase>
		
		<TestCase testID="textJustify_distribute_FxButton" description="textJustify distribute FxButton" keywords="[FxButton, textJustify, style]">
			<setup>
				<ResetComponent target="myButton" className="spark.components.Button" waitEvent="updateComplete" waitTarget="myButton"/>
				<SetStyle styleName="textJustify" value="distribute" target="myButton"/>
				<SetStyle target="myButton" styleName="textAlign" value="justify"/>
				<SetProperty target="myButton" propertyName="width" value="100"/>
				<SetProperty target="myButton" propertyName="height" value="100"/>
				<SetStyle target="myButton" styleName="lineBreak" value="toFit"/>
				<SetProperty target="myButton" propertyName="label" value="The quick brown fox jumps over the lazy dog." waitEvent="updateComplete" waitTarget="myButton"/>				
			</setup>
			<body>
				<AssertStyleValue target="myButton" styleName="textJustify" value="distribute"/>
				<CompareBitmap url="../styles/baselines/$testID.png" target="myButton"/>
			</body>
		</TestCase>
		
		<TestCase testID="textJustify_distribute_eastAsian_FxButton" description="textJustify distribute FxButton" keywords="[FxButton, textJustify, style]">
			<setup>
				<!--Shouldn't do anything b/c justificationRule is set to eastAsian-->
				<ResetComponent target="myButton" className="spark.components.Button" waitEvent="updateComplete" waitTarget="myButton"/>
				<SetStyle styleName="textJustify" value="distribute" target="myButton"/>
				<SetStyle target="myButton" styleName="textAlign" value="justify"/>
				<SetProperty target="myButton" propertyName="width" value="100"/>
				<SetProperty target="myButton" propertyName="height" value="100"/>
				<SetStyle target="myButton" styleName="lineBreak" value="toFit"/>
				<SetStyle styleName="textJustify" value="distribute" target="myButton"/>
				<SetStyle styleName="justificationRule" value="eastAsian" target="myButton"/>
				<SetProperty target="myButton" propertyName="label" value="The quick brown fox jumps over the lazy dog." waitEvent="updateComplete" waitTarget="myButton"/>				
			</setup>
			<body>
				<AssertStyleValue target="myButton" styleName="textJustify" value="distribute"/>
				<CompareBitmap url="../styles/baselines/$testID.png" target="myButton"/>
			</body>
		</TestCase>
		
		<TestCase testID="tracking_default_FxButton" description="tracking default FxButton" keywords="[FxButton, tracking, style]">
			<setup>
				<ResetComponent target="myButton" className="spark.components.Button" waitEvent="updateComplete" waitTarget="myButton"/>
			</setup>
			<body>
				<AssertStyleValue target="myButton" styleName="tracking" value="null"/>
			</body>
		</TestCase>
		
		<TestCase testID="tracking_10_FxButton" description="tracking default FxButton" keywords="[FxButton, tracking, style]">
			<setup>
				<ResetComponent target="myButton" className="spark.components.Button" waitEvent="updateComplete" waitTarget="myButton"/>
				<SetStyle styleName="kerning" value="on" target="myButton"/>
				<SetStyle styleName="tracking" value="10" target="myButton"/>
				<SetProperty target="myButton" propertyName="label" value="The quick brown fox jumps over the lazy dog." waitEvent="updateComplete" waitTarget="myButton"/>				
			</setup>
			<body>
				<AssertStyleValue target="myButton" styleName="tracking" value="10"/>
				<CompareBitmap url="../styles/baselines/$testID.png" target="myButton"/>
			</body>
		</TestCase>
		
		<TestCase testID="tracking_50_FxButton" description="tracking default FxButton" keywords="[FxButton, tracking, style]">
			<setup>
				<ResetComponent target="myButton" className="spark.components.Button" waitEvent="updateComplete" waitTarget="myButton"/>
				<SetStyle styleName="kerning" value="on" target="myButton"/>
				<SetStyle styleName="tracking" value="50" target="myButton"/>
				<SetProperty target="myButton" propertyName="label" value="The quick brown fox jumps over the lazy dog." waitEvent="updateComplete" waitTarget="myButton"/>				
			</setup>
			<body>
				<AssertStyleValue target="myButton" styleName="tracking" value="50"/>
				<CompareBitmap url="../styles/baselines/$testID.png" target="myButton"/>
			</body>
		</TestCase>
		
		<TestCase testID="tracking_neg10_FxButton" description="tracking default FxButton" keywords="[FxButton, tracking, style]">
			<setup>
				<ResetComponent target="myButton" className="spark.components.Button" waitEvent="updateComplete" waitTarget="myButton"/>
				<SetStyle styleName="kerning" value="on" target="myButton"/>
				<SetStyle styleName="tracking" value="-10" target="myButton"/>
				<SetProperty target="myButton" propertyName="label" value="The quick brown fox jumps over the lazy dog." waitEvent="updateComplete" waitTarget="myButton"/>				
			</setup>
			<body>
				<AssertStyleValue target="myButton" styleName="tracking" value="-10"/>
				<CompareBitmap url="../styles/baselines/$testID.png" target="myButton"/>
			</body>
		</TestCase>

		<TestCase testID="tracking_neg50_FxButton" description="tracking default FxButton" keywords="[FxButton, tracking, style]">
			<setup>
				<ResetComponent target="myButton" className="spark.components.Button" waitEvent="updateComplete" waitTarget="myButton"/>
				<SetStyle styleName="kerning" value="on" target="myButton"/>
				<SetStyle styleName="tracking" value="-50" target="myButton"/>
				<SetProperty target="myButton" propertyName="label" value="The quick brown fox jumps over the lazy dog." waitEvent="updateComplete" waitTarget="myButton"/>				
			</setup>
			<body>
				<AssertStyleValue target="myButton" styleName="tracking" value="-50"/>
				<CompareBitmap url="../styles/baselines/$testID.png" target="myButton"/>
			</body>
		</TestCase>		

		<TestCase testID="trackingLeft_default_FxButton" description="tracking default FxButton" keywords="[FxButton, tracking, style]">
			<setup>
				<ResetComponent target="myButton" className="spark.components.Button" waitEvent="updateComplete" waitTarget="myButton"/>
			</setup>
			<body>
				<AssertStyleValue target="myButton" styleName="trackingLeft" value="0"/>
			</body>
		</TestCase>
		<TestCase testID="trackingLeft_10_FxButton" description="trackingLeft 10 FxButton" keywords="[FxButton, trackingLeft, style]">
			<setup>
				<ResetComponent target="myButton" className="spark.components.Button" waitEvent="updateComplete" waitTarget="myButton"/>
				<SetProperty target="myButton" propertyName="width" value="100"/>
				<SetProperty target="myButton" propertyName="height" value="100"/>
				<SetStyle styleName="lineBreak" value="toFit" target="myButton"/>
				<SetStyle styleName="kerning" value="on" target="myButton"/>
				<SetStyle styleName="trackingLeft" value="10" target="myButton"/>
				<SetProperty target="myButton" propertyName="label" value="The quick brown fox jumps over the lazy dog." waitEvent="updateComplete" waitTarget="myButton"/>				
			</setup>
			<body>
				<AssertStyleValue target="myButton" styleName="trackingLeft" value="10"/>
				<CompareBitmap url="../styles/baselines/$testID.png" target="myButton"/>
			</body>
		</TestCase>

		<TestCase testID="trackingLeft_50_FxButton" description="trackingLeft 50 FxButton" keywords="[FxButton, trackingLeft, style]">
			<setup>
				<ResetComponent target="myButton" className="spark.components.Button" waitEvent="updateComplete" waitTarget="myButton"/>
				<SetProperty target="myButton" propertyName="width" value="100"/>
				<SetProperty target="myButton" propertyName="height" value="100"/>
				<SetStyle styleName="lineBreak" value="toFit" target="myButton"/>
				<SetStyle styleName="kerning" value="on" target="myButton"/>
				<SetStyle styleName="trackingLeft" value="50" target="myButton"/>
				<SetProperty target="myButton" propertyName="label" value="The quick brown fox jumps over the lazy dog." waitEvent="updateComplete" waitTarget="myButton"/>				
			</setup>
			<body>
				<AssertStyleValue target="myButton" styleName="trackingLeft" value="50"/>
				<CompareBitmap url="../styles/baselines/$testID.png" target="myButton"/>
			</body>
		</TestCase>

		<TestCase testID="trackingLeft_neg10_FxButton" description="trackingLeft neg10 FxButton" keywords="[FxButton, trackingLeft, style]">
			<setup>
				<ResetComponent target="myButton" className="spark.components.Button" waitEvent="updateComplete" waitTarget="myButton"/>
				<SetProperty target="myButton" propertyName="width" value="100"/>
				<SetProperty target="myButton" propertyName="height" value="100"/>
				<SetStyle styleName="lineBreak" value="toFit" target="myButton"/>
				<SetStyle styleName="kerning" value="on" target="myButton"/>
				<SetStyle styleName="trackingLeft" value="-10" target="myButton"/>
				<SetProperty target="myButton" propertyName="label" value="The quick brown fox jumps over the lazy dog." waitEvent="updateComplete" waitTarget="myButton"/>				
			</setup>
			<body>
				<AssertStyleValue target="myButton" styleName="trackingLeft" value="-10"/>
				<CompareBitmap url="../styles/baselines/$testID.png" target="myButton"/>
			</body>
		</TestCase>

		<TestCase testID="trackingLeft_neg50_FxButton" description="trackingLeft neg50 FxButton" keywords="[FxButton, trackingLeft, style]">
			<setup>
				<ResetComponent target="myButton" className="spark.components.Button" waitEvent="updateComplete" waitTarget="myButton"/>
				<SetProperty target="myButton" propertyName="width" value="100"/>
				<SetProperty target="myButton" propertyName="height" value="100"/>
				<SetStyle styleName="lineBreak" value="toFit" target="myButton"/>
				<SetStyle styleName="kerning" value="on" target="myButton"/>
				<SetStyle styleName="trackingLeft" value="-50" target="myButton"/>
				<SetProperty target="myButton" propertyName="label" value="The quick brown fox jumps over the lazy dog." waitEvent="updateComplete" waitTarget="myButton"/>				
			</setup>
			<body>
				<AssertStyleValue target="myButton" styleName="trackingLeft" value="-50"/>
				<CompareBitmap url="../styles/baselines/$testID.png" target="myButton"/>
			</body>
		</TestCase>		

		<TestCase testID="trackingRight_default_FxButton" description="tracking default FxButton" keywords="[FxButton, tracking, style]">
			<setup>
				<ResetComponent target="myButton" className="spark.components.Button" waitEvent="updateComplete" waitTarget="myButton"/>
			</setup>
			<body>
				<AssertStyleValue target="myButton" styleName="trackingRight" value="0"/>
			</body>
		</TestCase>

		<TestCase testID="trackingRight_10_FxButton" description="trackingRight 10 FxButton" keywords="[FxButton, trackingRight, style]">
			<setup>
				<ResetComponent target="myButton" className="spark.components.Button" waitEvent="updateComplete" waitTarget="myButton"/>
				<SetProperty target="myButton" propertyName="width" value="100"/>
				<SetProperty target="myButton" propertyName="height" value="100"/>
				<SetStyle styleName="lineBreak" value="toFit" target="myButton"/>
				<SetStyle styleName="kerning" value="on" target="myButton"/>
				<SetStyle styleName="trackingRight" value="10" target="myButton"/>
				<SetProperty target="myButton" propertyName="label" value="The quick brown fox jumps over the lazy dog." waitEvent="updateComplete" waitTarget="myButton"/>				
			</setup>
			<body>
				<AssertStyleValue target="myButton" styleName="trackingRight" value="10"/>
				<CompareBitmap url="../styles/baselines/$testID.png" target="myButton"/>
			</body>
		</TestCase>

		<TestCase testID="trackingRight_50_FxButton" description="trackingRight 50 FxButton" keywords="[FxButton, trackingRight, style]">
			<setup>
				<ResetComponent target="myButton" className="spark.components.Button" waitEvent="updateComplete" waitTarget="myButton"/>
				<SetProperty target="myButton" propertyName="width" value="100"/>
				<SetProperty target="myButton" propertyName="height" value="100"/>
				<SetStyle styleName="lineBreak" value="toFit" target="myButton"/>
				<SetStyle styleName="kerning" value="on" target="myButton"/>
				<SetStyle styleName="trackingRight" value="50" target="myButton"/>
				<SetProperty target="myButton" propertyName="label" value="The quick brown fox jumps over the lazy dog." waitEvent="updateComplete" waitTarget="myButton"/>				
			</setup>
			<body>
				<AssertStyleValue target="myButton" styleName="trackingRight" value="50"/>
				<CompareBitmap url="../styles/baselines/$testID.png" target="myButton"/>
			</body>
		</TestCase>

		<TestCase testID="trackingRight_neg10_FxButton" description="trackingRight neg10 FxButton" keywords="[FxButton, trackingRight, style]">
			<setup>
				<ResetComponent target="myButton" className="spark.components.Button" waitEvent="updateComplete" waitTarget="myButton"/>
				<SetProperty target="myButton" propertyName="width" value="100"/>
				<SetProperty target="myButton" propertyName="height" value="100"/>
				<SetStyle styleName="lineBreak" value="toFit" target="myButton"/>
				<SetStyle styleName="kerning" value="on" target="myButton"/>
				<SetStyle styleName="trackingRight" value="-10" target="myButton"/>
				<SetProperty target="myButton" propertyName="label" value="The quick brown fox jumps over the lazy dog." waitEvent="updateComplete" waitTarget="myButton"/>				
			</setup>
			<body>
				<AssertStyleValue target="myButton" styleName="trackingRight" value="-10"/>
				<CompareBitmap url="../styles/baselines/$testID.png" target="myButton"/>
			</body>
		</TestCase>

		<TestCase testID="trackingRight_neg50_FxButton" description="trackingRight neg50 FxButton" keywords="[FxButton, trackingRight, style]">
			<setup>
				<ResetComponent target="myButton" className="spark.components.Button" waitEvent="updateComplete" waitTarget="myButton"/>
				<SetProperty target="myButton" propertyName="width" value="100"/>
				<SetProperty target="myButton" propertyName="height" value="100"/>
				<SetStyle styleName="lineBreak" value="toFit" target="myButton"/>
				<SetStyle styleName="kerning" value="on" target="myButton"/>
				<SetStyle styleName="trackingRight" value="-50" target="myButton"/>
				<SetProperty target="myButton" propertyName="label" value="The quick brown fox jumps over the lazy dog." waitEvent="updateComplete" waitTarget="myButton"/>				
			</setup>
			<body>
				<AssertStyleValue target="myButton" styleName="trackingRight" value="-50"/>
				<CompareBitmap url="../styles/baselines/$testID.png" target="myButton"/>
			</body>
		</TestCase>			
		
		<TestCase testID="typographicCase_default_FxButton" description="tracking default FxButton" keywords="[FxButton, tracking, style]">
			<setup>
				<ResetComponent target="myButton" className="spark.components.Button" waitEvent="updateComplete" waitTarget="myButton"/>
			</setup>
			<body>
				<AssertStyleValue target="myButton" styleName="typographicCase" value="default"/>
			</body>
		</TestCase>
		
		<TestCase testID="typographicCase_title_FxButton" description="tracking default FxButton" keywords="[FxButton, tracking, style]">
			<setup>
				<ResetComponent target="myButton" className="spark.components.Button" waitEvent="updateComplete" waitTarget="myButton"/>
				<SetStyle styleName="fontFamily" value="ArnoProRegEmbedded" target="myButton"/>
				<SetStyle styleName="typographicCase" value="title" target="myButton"/>
				<SetProperty target="myButton" propertyName="label" value="The quick brown fox jumps over the lazy dog." waitEvent="updateComplete" waitTarget="myButton"/>				
			</setup>
			<body>
				<AssertStyleValue target="myButton" styleName="typographicCase" value="title"/>
				<CompareBitmap url="../styles/baselines/$testID.png" target="myButton"/>
			</body>
		</TestCase>
		
		<TestCase testID="typographicCase_caps_FxButton" description="tracking default FxButton" keywords="[FxButton, tracking, style]">
			<setup>
				<ResetComponent target="myButton" className="spark.components.Button" waitEvent="updateComplete" waitTarget="myButton"/>
				<SetStyle styleName="fontFamily" value="ArnoProRegEmbedded" target="myButton"/>
				<SetStyle styleName="typographicCase" value="caps" target="myButton"/>
				<SetProperty target="myButton" propertyName="label" value="The quick brown fox jumps over the lazy dog." waitEvent="updateComplete" waitTarget="myButton"/>				
			</setup>
			<body>
				<AssertStyleValue target="myButton" styleName="typographicCase" value="caps"/>
				<CompareBitmap url="../styles/baselines/$testID.png" target="myButton"/>
			</body>
		</TestCase>
		
		<TestCase testID="typographicCase_smallCaps_FxButton" description="tracking default FxButton" keywords="[FxButton, tracking, style]">
			<setup>
				<ResetComponent target="myButton" className="spark.components.Button" waitEvent="updateComplete" waitTarget="myButton"/>
				<SetStyle styleName="fontFamily" value="ArnoProRegEmbedded" target="myButton"/>
				<SetStyle styleName="typographicCase" value="smallCaps" target="myButton"/>
				<SetProperty target="myButton" propertyName="label" value="The quick brown fox jumps over the lazy dog." waitEvent="updateComplete" waitTarget="myButton"/>				
			</setup>
			<body>
				<AssertStyleValue target="myButton" styleName="typographicCase" value="smallCaps"/>
				<CompareBitmap url="../styles/baselines/$testID.png" target="myButton"/>
			</body>
		</TestCase>
		
		<TestCase testID="typographicCase_upperCase_FxButton" description="tracking default FxButton" keywords="[FxButton, tracking, style]">
			<setup>
				<ResetComponent target="myButton" className="spark.components.Button" waitEvent="updateComplete" waitTarget="myButton"/>
				<SetStyle styleName="fontFamily" value="ArnoProRegEmbedded" target="myButton"/>
				<SetStyle styleName="typographicCase" value="uppercase" target="myButton"/>
				<SetProperty target="myButton" propertyName="label" value="The quick brown fox jumps over the lazy dog." waitEvent="updateComplete" waitTarget="myButton"/>				
			</setup>
			<body>
				<AssertStyleValue target="myButton" styleName="typographicCase" value="uppercase"/>
				<CompareBitmap url="../styles/baselines/$testID.png" target="myButton"/>
			</body>
		</TestCase>
		
		<TestCase testID="typographicCase_lowerCase_FxButton" description="tracking default FxButton" keywords="[FxButton, tracking, style]">
			<setup>
				<ResetComponent target="myButton" className="spark.components.Button" waitEvent="updateComplete" waitTarget="myButton"/>
				<SetStyle styleName="fontFamily" value="ArnoProRegEmbedded" target="myButton"/>
				<SetStyle styleName="typographicCase" value="lowercase" target="myButton"/>
				<SetProperty target="myButton" propertyName="label" value="The quick brown fox jumps over the lazy dog." waitEvent="updateComplete" waitTarget="myButton"/>				
			</setup>
			<body>
				<AssertStyleValue target="myButton" styleName="typographicCase" value="lowercase"/>
				<CompareBitmap url="../styles/baselines/$testID.png" target="myButton"/>
			</body>
		</TestCase>
		
		<TestCase testID="typographicCase_capsAndSmallCaps_FxButton" description="tracking default FxButton" keywords="[FxButton, tracking, style]">
			<setup>
				<ResetComponent target="myButton" className="spark.components.Button" waitEvent="updateComplete" waitTarget="myButton"/>
				<SetStyle styleName="fontFamily" value="ArnoProRegEmbedded" target="myButton"/>
				<SetStyle styleName="typographicCase" value="capsAndSmallCaps" target="myButton"/>
				<SetProperty target="myButton" propertyName="label" value="The quick brown fox jumps over the lazy dog." waitEvent="updateComplete" waitTarget="myButton"/>				
			</setup>
			<body>
				<AssertStyleValue target="myButton" styleName="typographicCase" value="capsAndSmallCaps"/>
				<CompareBitmap url="../styles/baselines/$testID.png" target="myButton"/>
			</body>
		</TestCase>
		
		<TestCase testID="verticalAlign_top_Button" description="verticalAlign top Button" keywords="[FxButton, verticalAlign, style]">
			<setup>
				<ResetComponent target="myButton" className="spark.components.Button" waitEvent="updateComplete" waitTarget="myButton"/>
				<SetStyle target="myButton" styleName="verticalAlign" value="top"/>
				<SetProperty target="myButton" propertyName="height" value="70" waitEvent="updateComplete" waitTarget="myButton"/>
				<SetProperty target="myButton" propertyName="label" value="verticalAlign top label" waitEvent="updateComplete" waitTarget="myButton"/>
			</setup>
			<body>
				<CompareBitmap url="../styles/baselines/$testID.png" target="myButton"/>
			</body>
		</TestCase>
		<TestCase testID="verticalAlign_bottom_Button" description="verticalAlign bottom Button" keywords="[FxButton, verticalAlign, style]">
			<setup>
				<ResetComponent target="myButton" className="spark.components.Button" waitEvent="updateComplete" waitTarget="myButton"/>
				<SetStyle target="myButton" styleName="verticalAlign" value="bottom"/>
				<SetProperty target="myButton" propertyName="height" value="70" waitEvent="updateComplete" waitTarget="myButton"/>
				<SetProperty target="myButton" propertyName="label" value="verticalAlign bottom label" waitEvent="updateComplete" waitTarget="myButton"/>
			</setup>
			<body>
				<CompareBitmap url="../styles/baselines/$testID.png" target="myButton"/>
			</body>
		</TestCase>
		<TestCase testID="verticalAlign_middle_Button" description="verticalAlign middle Button" keywords="[FxButton, verticalAlign, style]">
			<setup>
				<ResetComponent target="myButton" className="spark.components.Button" waitEvent="updateComplete" waitTarget="myButton"/>
				<SetStyle target="myButton" styleName="verticalAlign" value="middle"/>
				<SetProperty target="myButton" propertyName="height" value="70" waitEvent="updateComplete" waitTarget="myButton"/>
				<SetProperty target="myButton" propertyName="label" value="verticalAlign middle label" waitEvent="updateComplete" waitTarget="myButton"/>
			</setup>
			<body>
				<CompareBitmap url="../styles/baselines/$testID.png" target="myButton"/>
			</body>		
		</TestCase>
		<TestCase testID="verticalAlign_justify_Button" description="verticalAlign justify Button" keywords="[FxButton, verticalAlign, style]">
			<setup>
				<ResetComponent target="myButton" className="spark.components.Button" waitEvent="updateComplete" waitTarget="myButton"/>
				<SetStyle target="myButton" styleName="verticalAlign" value="justify"/>
				<SetProperty target="myButton" propertyName="height" value="70" waitEvent="updateComplete" waitTarget="myButton"/>
				<SetProperty target="myButton" propertyName="label" value="verticalAlign justify label" waitEvent="updateComplete" waitTarget="myButton"/>
			</setup>
			<body>
				<CompareBitmap url="../styles/baselines/$testID.png" target="myButton"/>
			</body>		
		</TestCase>
	</testCases>
</UnitTester>