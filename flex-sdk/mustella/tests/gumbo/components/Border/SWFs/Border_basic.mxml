<?xml version="1.0" encoding="utf-8"?>
<!--

  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.

-->
<s:Application 
	xmlns:fx="http://ns.adobe.com/mxml/2009" 
	xmlns:s="library://ns.adobe.com/flex/spark" 
	xmlns:mx="library://ns.adobe.com/flex/mx"
	xmlns:comps="comps.*"
	height="600"
	width="600">
	
	<fx:Style>		
		@namespace s "library://ns.adobe.com/flex/spark";
		@namespace mx "library://ns.adobe.com/flex/mx";
		@namespace c "Comps.*";
	
		@font-face {
			src: url("../../../../../Assets/Fonts/Open_Sans/OpenSans-Regular.ttf");
			fontFamily: MyVera;
			embedAsCFF: true;
		}
		
		@font-face {
			src: url("../../../../../Assets/Fonts/Open_Sans/OpenSans-Italic.ttf");
			fontFamily: MyVera;
			fontStyle: italic;
			embedAsCFF: true;
		}
		
		@font-face {
			src: url("../../../../../Assets/Fonts/Open_Sans/OpenSans-Bold.ttf");
			fontFamily: MyVera;
			fontWeight: bold;
			embedAsCFF: true;
		}
		
		@font-face {
			src: url("../../../../../Assets/Fonts/Open_Sans/OpenSans-Regular.ttf");
			fontFamily: MyVeraHalo;
			embedAsCFF: false;
		}
		
		@font-face {
			src: url("../../../../../Assets/Fonts/Open_Sans/OpenSans-Italic.ttf");
			fontFamily: MyVeraHalo;
			fontStyle: italic;
			embedAsCFF: false;
		}
		
		@font-face {
			src: url("../../../../../Assets/Fonts/Open_Sans/OpenSans-Bold.ttf");
			fontFamily: MyVeraHalo;		
			fontWeight: bold;
			embedAsCFF: false;
		}		
												
		mx|ToolTip{
			fontAntiAliasType: "normal";
			fontFamily: MyVeraHalo;
			fontSize: 12;
		}
		
		.errorTip {
               borderStyle: "errorTipRight";
               fontFamily: MyVeraHalo;               
               fontWeight: bold;               
        }				
			
		s|BorderContainer{
			fontAntiAliasType: "normal";
			fontFamily: MyVera;
			fontSize: 12;
            fontLookup: "embeddedCFF";
		}					
		s|Label{
			fontAntiAliasType: "normal";
			fontFamily: MyVera;
			fontSize: 12;
            fontLookup: "embeddedCFF";
		}							
		s|Button{
			fontAntiAliasType: "normal";
			fontFamily: MyVera;
			fontSize: 12;
            fontLookup: "embeddedCFF";
		}							
		s|NumericStepper{
			fontAntiAliasType: "normal";
			fontFamily: MyVera;
			fontSize: 12;
            fontLookup: "embeddedCFF";
		}											
	</fx:Style> 	
			
	<fx:Script> 
		<![CDATA[ 
			import spark.components.Button;
		
			public function addSomething():Boolean{
				var b1:Button = new Button();
				b1.label = 'New Button';
				b1.width = 200;
				mySimpleBorder.addElement(b1);
				return true;
			}
		]]> 
	</fx:Script> 
			
	<s:VGroup>
	
		<s:HGroup>		
			<comps:customBorder id="myBorderGrp"/>	
			<comps:customEmptyBorder id="myEmptyBorderGrp"/>
		</s:HGroup>

		<s:HGroup>		
			<comps:customBorderLGS id="myBorderGrpLGS"/>
			<comps:customBorderRGS id="myBorderGrpRGS"/>
			<comps:customBorderSCS id="myBorderGrpSCS"/>		
		</s:HGroup>	
		
		<s:HGroup>		
			<comps:customBorderLG id="myBorderGrpLG"/>
			<comps:customBorderRG id="myBorderGrpRG"/>
			<comps:customBorderSC id="myBorderGrpSC"/>		
		</s:HGroup>		
		
		<s:HGroup>		
			<comps:customBorderBF id="myBorderGrpBF"/>
			<comps:customBorderHL id="myBorderGrpHL"/>								
		</s:HGroup>
		
		<s:HGroup>		
			<comps:customBorderHL2 id="myBorderGrpHL2"/>
			<comps:customBorderVL id="myBorderGrpVL"/>
		</s:HGroup>				
		
		<s:HGroup>
			<comps:customBorderSCR id="myBorderGrpSCR"/>			
			<s:Group width="100" height="100" id="mySimpleBorderGrp">
				<s:BorderContainer id="mySimpleBorder"/>
			</s:Group>
		</s:HGroup>
		
	</s:VGroup>
					
</s:Application>
