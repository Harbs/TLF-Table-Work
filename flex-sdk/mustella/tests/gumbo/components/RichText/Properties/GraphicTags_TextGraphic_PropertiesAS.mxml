<?xml version="1.0" encoding="utf-8"?>
<!--

  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.

-->
<UnitTester testDir="gumbo/components/RichText/Properties/"  xmlns:mx="http://www.adobe.com/2006/mxml" xmlns="*" testSWF="GraphicTags_TextBitmapGraphic.mxml">

    <mx:Script>
	<![CDATA[

       import comps.TextGraphicBasic;

       public static function init(o:DisplayObject):void
		{

		}

	]]>
	</mx:Script>

	<mx:Metadata>
	<![CDATA[
		[Mixin]
	]]>
	</mx:Metadata>

	<testCases>
    <!-- property: x -->
        <TestCase testID="GraphicTags_TextGraphic_x_positive" description="TextGraphic x set to a positive int" keywords="[TextGraphic, x, Graphic]">
			<setup>
			   <ResetComponent target="graphic2" className="comps.TextGraphicBasic" waitTarget="graphic2" waitEvent="updateComplete" />
			</setup>
			<body>
			    <SetProperty target="graphic2.textGraphic1" propertyName="x" value="20" waitTarget="graphic2.textGraphic1" waitEvent="updateComplete" />
			    <CompareBitmap url="../Properties/baselines/$testID.png" numColorVariances="3" maxColorVariance="20" target="graphic2" timeout="2000"/>
			</body>
		</TestCase>
        <TestCase testID="GraphicTags_TextGraphic_x_zero" description="TextGraphic x set to zero" keywords="[TextGraphic, x, Graphic]">
			<setup>
			    <ResetComponent target="graphic2" className="comps.TextGraphicBasic" waitTarget="graphic2" waitEvent="updateComplete" />
			</setup>
			<body>
			    <SetProperty target="graphic2.textGraphic1" propertyName="x" value="50" waitTarget="graphic2.textGraphic1" waitEvent="updateComplete" />
			    <SetProperty target="graphic2.textGraphic1" propertyName="x" value="0" waitTarget="graphic2.textGraphic1" waitEvent="updateComplete" />
			    <CompareBitmap url="../Properties/baselines/$testID.png" numColorVariances="3" maxColorVariance="20" target="graphic2" timeout="2000"/>
			</body>
		</TestCase>
        <TestCase testID="GraphicTags_TextGraphic_x_negative" description="TextGraphic x set to a negative int" keywords="[TextGraphic, x, Graphic]">
			<setup>
			   <ResetComponent target="graphic2" className="comps.TextGraphicBasic" waitTarget="graphic2" waitEvent="updateComplete" />
			</setup>
			<body>
			    <SetProperty target="graphic2.textGraphic1" propertyName="x" value="-20" waitTarget="graphic2.textGraphic1" waitEvent="updateComplete" />
			    <CompareBitmap url="../Properties/baselines/$testID.png" numColorVariances="3" maxColorVariance="20" target="graphic2" timeout="2000"/>
			</body>
		</TestCase>
    <!-- property: y -->
        <TestCase testID="GraphicTags_TextGraphic_y_positive" description="TextGraphic y set to a positive int" keywords="[TextGraphic, y, Graphic]">
			<setup>
			   <ResetComponent target="graphic2" className="comps.TextGraphicBasic" waitTarget="graphic2" waitEvent="updateComplete" />
			</setup>
			<body>
			    <SetProperty target="graphic2.textGraphic1" propertyName="y" value="30" waitTarget="graphic2.getChildAt(0)" waitEvent="updateComplete" />
			    <CompareBitmap url="../Properties/baselines/$testID.png" numColorVariances="3" maxColorVariance="20" target="graphic2" timeout="2000"/>
			</body>
		</TestCase>
        <TestCase testID="GraphicTags_TextGraphic_y_zero" description="TextGraphic y set to zero" keywords="[TextGraphic, y, Graphic]">
			<setup>
			   <ResetComponent target="graphic2" className="comps.TextGraphicBasic" waitTarget="graphic2" waitEvent="updateComplete" />
			</setup>
			<body>
			    <SetProperty target="graphic2.textGraphic1" propertyName="y" value="30" waitTarget="graphic2.textGraphic1" waitEvent="updateComplete" />
			    <SetProperty target="graphic2.textGraphic1" propertyName="y" value="0" waitTarget="graphic2.textGraphic1" waitEvent="updateComplete" />
			    <CompareBitmap url="../Properties/baselines/$testID.png" numColorVariances="3" maxColorVariance="20" target="graphic2" timeout="2000"/>
			</body>
		</TestCase>
        <TestCase testID="GraphicTags_TextGraphic_y_negative" description="TextGraphic y set to a negative int" keywords="[TextGraphic, y, Graphic]">
			<setup>
			   <ResetComponent target="graphic2" className="comps.TextGraphicBasic" waitTarget="graphic2" waitEvent="updateComplete" />
			</setup>
			<body>
			    <SetProperty target="graphic2.textGraphic1" propertyName="y" value="-20" waitTarget="graphic2.textGraphic1" waitEvent="updateComplete" />
			    <CompareBitmap url="../Properties/baselines/$testID.png" numColorVariances="3" maxColorVariance="20" target="graphic2" timeout="2000"/>
			</body>
		</TestCase>
    <!-- property: width -->
        <TestCase testID="GraphicTags_TextGraphic_width_positive" description="TextGraphic width set to a positive int causing wrapping" keywords="[TextGraphic, width, Graphic]">
			<setup>
			   <ResetComponent target="graphic2" className="comps.TextGraphicBasic" waitTarget="graphic2" waitEvent="updateComplete" />
			</setup>
			<body>
			    <SetProperty target="graphic2.textGraphic1" propertyName="width" value="90" waitTarget="graphic2.getChildAt(0)" waitEvent="updateComplete" />
			    <CompareBitmap url="../Properties/baselines/$testID.png" numColorVariances="3" maxColorVariance="20" target="graphic2" timeout="2000"/>
			</body>
		</TestCase>
        <TestCase testID="GraphicTags_TextGraphic_width_zero" description="TextGraphic width set to 0" keywords="[TextGraphic, width, Graphic]">
            <setup>
               <ResetComponent target="graphic2" className="comps.TextGraphicBasic" waitTarget="graphic2" waitEvent="updateComplete" />
            </setup>
            <body>
                <SetProperty target="graphic2.textGraphic1" propertyName="width" value="0" waitTarget="graphic2.textGraphic1" waitEvent="updateComplete" />
                <CompareBitmap url="../Properties/baselines/$testID.png" target="graphic2" timeout="2000" numColorVariances="10" maxColorVariance="1" />
            </body>
        </TestCase>
        <TestCase testID="GraphicTags_TextGraphic_height_zero" description="TextGraphic height set to 0" keywords="[TextGraphic, height, Graphic]">
            <setup>
               <ResetComponent target="graphic2" className="comps.TextGraphicBasic" waitTarget="graphic2" waitEvent="updateComplete" />
            </setup>
            <body>
                <SetProperty target="graphic2.textGraphic1" propertyName="height" value="0" waitTarget="graphic2.textGraphic1" waitEvent="updateComplete" />
                <CompareBitmap url="../Properties/baselines/$testID.png" target="graphic2" timeout="2000" numColorVariances="5" maxColorVariance="1"/>
           </body>
        </TestCase>
        <TestCase testID="GraphicTags_TextGraphic_height_positive" description="TextGraphic height set to a positive int causing wrapping" keywords="[TextGraphic, height, Graphic]">
            <setup>
               <ResetComponent target="graphic2" className="comps.TextGraphicBasic" waitTarget="graphic2" waitEvent="updateComplete" />
            </setup>
            <body>
                <SetProperty target="graphic2.textGraphic1" propertyName="height" value="40" waitTarget="graphic2.textGraphic1" waitEvent="updateComplete" />
                <CompareBitmap url="../Properties/baselines/$testID.png" numColorVariances="3" maxColorVariance="20" target="graphic2" timeout="2000"/>
           </body>
        </TestCase>
        <TestCase testID="GraphicTags_TextGraphic_text_blank" description="TextGraphic text set to blank" keywords="[TextGraphic, text, Graphic]">
            <setup>
               <ResetComponent target="graphic2" className="comps.TextGraphicBasic" waitTarget="graphic2" waitEvent="updateComplete" />
            </setup>
            <body>
                <SetProperty target="graphic2.textGraphic1" propertyName="content" value="" waitTarget="graphic2.textGraphic1" waitEvent="updateComplete" />
                <AssertPixelValue value="0x99CCCC" x="5" y="9" target="graphic2.textGraphic1" />
            </body>
        </TestCase>
        <TestCase testID="GraphicTags_TextGraphic_text_longer" description="TextGraphic text set to a longer string" keywords="[TextGraphic, text, Graphic]">
            <setup>
               <ResetComponent target="graphic2" className="comps.TextGraphicBasic" waitTarget="graphic2" waitEvent="updateComplete" />
            </setup>
            <body>
                <SetProperty target="graphic2.textGraphic1" propertyName="width" value="100" waitTarget="graphic2.textGraphic1" waitEvent="updateComplete" />
                <SetProperty target="graphic2.textGraphic1" propertyName="content" value="This is a 100% longer text. With some -other @$34! ~text. I am longer than +34@}{asd23.jxji23|. sklf$^09" waitTarget="graphic2.textGraphic1" waitEvent="updateComplete" />
                <CompareBitmap url="../Properties/baselines/text_long.png" numColorVariances="5" maxColorVariance="20"  target="graphic2.textGraphic1" timeout="2000" />
            </body>
        </TestCase>
        <TestCase testID="GraphicTags_TextGraphic_text_doublebyte" description="TextGraphic text set to a double-byte string" keywords="[TextGraphic, text, Graphic]">
            <setup>
               <ResetComponent target="graphic2" className="comps.TextGraphicBasic" waitTarget="graphic2" waitEvent="updateComplete" />
           </setup>
            <body>
                <SetProperty target="graphic2.textGraphic1" propertyName="width" value="140" waitTarget="graphic2.textGraphic1" waitEvent="updateComplete" />
                <SetProperty target="graphic2.textGraphic1" propertyName="content" value="???????? ????" waitTarget="graphic2.textGraphic1" waitEvent="updateComplete" />
                <CompareBitmap url="../Properties/baselines/text_doublebyte.png" target="graphic2.textGraphic1" timeout="2000" />
            </body>
        </TestCase>
        <TestCase testID="GraphicTags_TextGraphic_text_german" description="TextGraphic text set to a German string" keywords="[TextGraphic, text, Graphic]">
            <setup>
               <ResetComponent target="graphic2" className="comps.TextGraphicBasic" waitTarget="graphic2" waitEvent="updateComplete" />
           </setup>
            <body>
                <SetProperty target="graphic2.textGraphic1" propertyName="width" value="140" waitTarget="graphic2.textGraphic1" waitEvent="updateComplete" />
                <SetProperty target="graphic2.textGraphic1" propertyName="content" value="Adressen ausgewählt. Sie sind dadurch ein möglicher Car Gewinner!" waitTarget="graphic2.textGraphic1" waitEvent="updateComplete" />
                <CompareBitmap url="../Properties/baselines/text_german.png" numColorVariances="6" maxColorVariance="20" target="graphic2.textGraphic1" timeout="2000" />
            </body>
        </TestCase>

	</testCases>
</UnitTester>
