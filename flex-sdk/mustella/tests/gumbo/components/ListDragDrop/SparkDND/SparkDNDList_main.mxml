<?xml version="1.0" encoding="utf-8"?>
<!--

Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

-->
<UnitTester testDir="gumbo/components/ListDragDrop/SparkDND/" xmlns:fx="http://ns.adobe.com/mxml/2009" 
			xmlns:mx="library://ns.adobe.com/flex/mx" xmlns:s="library://ns.adobe.com/flex/spark"  
			xmlns:m="http://ns.adobe.com/mxml/2009" xmlns="*" 
			testSWF="SparkDNDListBasic.mxml">
	<!-- this set of lines form a template that must be in each unit test -->
	<fx:Script>
		<![CDATA[
			public static function init(o:DisplayObject):void { }
		]]>
	</fx:Script>
	<fx:Metadata>
		<![CDATA[
		[Mixin]
		]]>
	</fx:Metadata>
	<!-- end of set of lines that must be in each unit test -->
	<fx:Script>
		<![CDATA[
			import spark.layouts.*;
			import comps.*;
			import mx.managers.DragManager;
			import mx.core.mx_internal;
			use namespace mx_internal;
		]]>
	</fx:Script>
	
	<testCases>
		<TestCase testID="SparkListDefaultRenderer_asserts" keywords="[DragDrop, List]" description="">
			<setup>
				<ResetComponent target="l1" className="spark.components.List" waitEvent="updateComplete" />
				<SetProperty target="l1" propertyName="dataProvider" valueExpression="value=application.createPlayersAC()" waitEvent="updateComplete" waitTarget="l1.dataGroup"/>
				<SetProperty target="l1" propertyName="labelField" value="lastName" waitEvent="updateComplete" waitTarget="l1"/>
				<SetProperty target="l1.layout" propertyName="dragScrollInitialDelay" value="0" />
				<SetProperty target="l2.layout" propertyName="dragScrollInitialDelay" value="0" />
			</setup>
			<body>
				<AssertPropertyValue target="l1" propertyName="dropEnabled" value="false" />
				<AssertPropertyValue target="l1" propertyName="dragEnabled" value="false" />
				<AssertPropertyValue target="l1" propertyName="dragMoveEnabled" value="false" />
				<AssertPropertyValue target="l2" propertyName="dropEnabled" value="false" />
				<AssertPropertyValue target="l2" propertyName="dragEnabled" value="false" />
				<AssertPropertyValue target="l2" propertyName="dragMoveEnabled" value="false" />
			</body>
		</TestCase>
		<TestCase testID="SparkListDefaultRenderer_copy" keywords="[DragDrop, List]" description="">
			<setup>
				<ResetComponent target="l1" className="spark.components.List" waitEvent="updateComplete" />
				<ResetComponent target="l2" className="spark.components.List"      waitEvent="updateComplete" />
				<SetProperty target="l1" propertyName="dataProvider" valueExpression="value=application.createPlayersAC()" waitEvent="updateComplete" waitTarget="l1.dataGroup"/>
				<SetProperty target="l2" propertyName="dataProvider" valueExpression="value=application.createPlayersAC()" waitEvent="updateComplete" waitTarget="l2"/>
				<SetProperty target="l1" propertyName="labelField" value="lastName" waitEvent="updateComplete" waitTarget="l1"/>
				<SetProperty target="l2" propertyName="labelField" value="firstName" waitEvent="updateComplete" waitTarget="l2"/>
				<SetProperty target="l1" propertyName="selectedIndex" value="0" />
				<SetProperty target="l1" propertyName="dragEnabled" value="true" />
				<SetProperty target="l2" propertyName="dragEnabled" value="true" />
				<SetProperty target="l2" propertyName="dropEnabled" value="true" />
				
				<SetProperty target="l1.layout" propertyName="dragScrollInitialDelay" value="0" />
				<SetProperty target="l2.layout" propertyName="dragScrollInitialDelay" value="0" />
			</setup>
			<body>
				<RunCode code="DragManager.endDrag()" />
				<WaitForEffectsToEnd/>
				<DispatchMouseEvent target="l1"  type="mouseUp"  localX="10" localY="10" />
				<DispatchMouseEvent target="l1"  type="mouseOver" buttonDown="false" localX="10" localY="10" />
				<DispatchMouseClickEvent target="l1"    localX="20" localY="10" waitEvent="click" waitTarget="l1"/>
				<DispatchMouseEvent target="l1"  type="mouseDown" buttonDown="true"  localX="10" localY="10" />
				<DispatchMouseEvent target="l1"  type="mouseMove" buttonDown="true"  localX="50" localY="12" waitEvent="dragStart" />
				<DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="15" localY="10" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="updateComplete"/>
				<DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="50" localY="30" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="move"/>
				<DispatchMouseEvent target="l2" type="mouseUp" localX="50" localY="30"  waitTarget="l1" waitEvent="dragComplete" />
				<WaitForEffectsToEnd/>
				<CompareBitmap numColorVariances="7" maxColorVariance="20" target="hg" url="../SparkDND/baselines/$testID.png" />
			</body>
		</TestCase>
		<TestCase testID="SparkListDefaultRenderer_move" keywords="[DragDrop, List]" description="">
			<setup>
				<ResetComponent target="l1" className="spark.components.List" waitEvent="updateComplete" />
				<ResetComponent target="l2" className="spark.components.List"      waitEvent="updateComplete" />
				<SetProperty target="l1" propertyName="dataProvider" valueExpression="value=application.createPlayersAC()" waitEvent="updateComplete" waitTarget="l1.dataGroup"/>
				<SetProperty target="l2" propertyName="dataProvider" valueExpression="value=application.createPlayersAC()" waitEvent="updateComplete" waitTarget="l2"/>
				<SetProperty target="l1" propertyName="labelField" value="lastName" waitEvent="updateComplete" waitTarget="l1"/>
				<SetProperty target="l2" propertyName="labelField" value="firstName" waitEvent="updateComplete" waitTarget="l2"/>
				<SetProperty target="l1" propertyName="selectedIndex" value="0" />
				<SetProperty target="l1" propertyName="dragEnabled" value="true" />
				<SetProperty target="l1" propertyName="dragMoveEnabled" value="true" />
				<SetProperty target="l2" propertyName="dropEnabled" value="true" />
				
				<SetProperty target="l1.layout" propertyName="dragScrollInitialDelay" value="0" />
				<SetProperty target="l2.layout" propertyName="dragScrollInitialDelay" value="0" />
			</setup>
			<body>
				<RunCode code="DragManager.endDrag()" />
				<WaitForEffectsToEnd/>
				<DispatchMouseEvent target="l1"  type="mouseUp"  localX="10" localY="10" />
				<DispatchMouseEvent target="l1"  type="mouseOver" buttonDown="false" localX="10" localY="10" />
				<DispatchMouseClickEvent target="l1"    localX="20" localY="10" waitEvent="click" waitTarget="l1"/>
				<DispatchMouseEvent target="l1"  type="mouseDown" buttonDown="true"  localX="10" localY="10" />
				<DispatchMouseEvent target="l1"  type="mouseMove" buttonDown="true"  localX="50" localY="12" />
				<DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="15" localY="10" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="updateComplete"/>
				<DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="50" localY="30" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="move"/>
				<DispatchMouseEvent target="l2" type="mouseUp" localX="50" localY="30"  waitTarget="l1" waitEvent="dragComplete" />
				<WaitForEffectsToEnd/>
				<CompareBitmap numColorVariances="7" maxColorVariance="20" target="hg" url="../SparkDND/baselines/$testID.png" />
			</body>
		</TestCase>
		<TestCase testID="SparkListDefaultRenderer_move1" keywords="[DragDrop, List]" description="">
			<setup>
				<ResetComponent target="l1" className="spark.components.List" waitEvent="updateComplete" />
				<ResetComponent target="l2" className="spark.components.List"      waitEvent="updateComplete" />
				
				<SetProperty target="l1" propertyName="dataProvider" valueExpression="value=application.createPlayersAC()" waitEvent="updateComplete" waitTarget="l1.dataGroup"/>
				<SetProperty target="l2" propertyName="dataProvider" valueExpression="value=application.createPlayersAC()" waitEvent="updateComplete" waitTarget="l2"/>
				<SetProperty target="l1" propertyName="labelField" value="lastName" waitEvent="updateComplete" waitTarget="l1"/>
				<SetProperty target="l2" propertyName="labelField" value="firstName" waitEvent="updateComplete" waitTarget="l2"/>
				<SetProperty target="l1" propertyName="selectedIndex" value="0" />
				<SetProperty target="l1" propertyName="dragEnabled" value="true" />
				<SetProperty target="l1" propertyName="dragMoveEnabled" value="true" />
				<SetProperty target="l2" propertyName="dropEnabled" value="true" />
				<SetProperty target="l1" propertyName="height" value="105" />
				<SetProperty target="l1.layout" propertyName="dragScrollInitialDelay" value="0" />
				<SetProperty target="l2.layout" propertyName="dragScrollInitialDelay" value="0" />
			</setup>
			<body>
				<RunCode code="DragManager.endDrag()" />
				<WaitForEffectsToEnd/>
				<DispatchMouseEvent target="l1"  type="mouseUp"  localX="10" localY="10" />
				<DispatchMouseEvent target="l1"  type="mouseOver" buttonDown="false" localX="10" localY="10" />
				<DispatchMouseClickEvent target="l1"    localX="20" localY="10" waitEvent="click" waitTarget="l1"/>
				<DispatchMouseEvent target="l1"  type="mouseDown" buttonDown="true"  localX="10" localY="10" />
				<DispatchMouseEvent target="l1"  type="mouseMove" buttonDown="true"  localX="50" localY="12" />
				<DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="15" localY="100" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="updateComplete"/>
				<DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="50" localY="100" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="move"/>
				<DispatchMouseEvent target="l2" type="mouseUp" localX="50" localY="100"  waitTarget="l1" waitEvent="dragComplete" />
				<WaitForEffectsToEnd/>
				<CompareBitmap numColorVariances="7" maxColorVariance="20" target="hg" url="../SparkDND/baselines/$testID.png" />
			</body>
		</TestCase>
		<TestCase testID="SparkListDefaultRenderer_rejectDrop1" keywords="[DragDrop, List]" description="">
			<setup>
				<ResetComponent target="l1" className="spark.components.List" waitEvent="updateComplete" />
				<ResetComponent target="l2" className="spark.components.List"      waitEvent="updateComplete" />
				
				<SetProperty target="l1" propertyName="dataProvider" valueExpression="value=application.createPlayersAC()" waitEvent="updateComplete" waitTarget="l1.dataGroup"/>
				<SetProperty target="l2" propertyName="dataProvider" valueExpression="value=application.createPlayersAC()" waitEvent="updateComplete" waitTarget="l2"/>
				<SetProperty target="l1" propertyName="labelField" value="lastName" waitEvent="updateComplete" waitTarget="l1"/>
				<SetProperty target="l2" propertyName="labelField" value="firstName" waitEvent="updateComplete" waitTarget="l2"/>
				<SetProperty target="l1" propertyName="selectedIndex" value="0" />
				<SetProperty target="l1" propertyName="dragEnabled" value="true" />
				<SetProperty target="l1" propertyName="dragMoveEnabled" value="true" />
				<SetProperty target="l1.layout" propertyName="dragScrollInitialDelay" value="0" />
				<SetProperty target="l2.layout" propertyName="dragScrollInitialDelay" value="0" />
			</setup>
			<body>
				<RunCode code="DragManager.endDrag()" />
				<WaitForEffectsToEnd/>
				<DispatchMouseEvent target="l1"  type="mouseUp"  localX="10" localY="10" />
				<DispatchMouseEvent target="l1"  type="mouseOver" buttonDown="false" localX="10" localY="10" />
				<DispatchMouseClickEvent target="l1"    localX="20" localY="10" waitEvent="click" waitTarget="l1"/>
				<DispatchMouseEvent target="l1"  type="mouseDown" buttonDown="true"  localX="10" localY="10" />
				<DispatchMouseEvent target="l1"  type="mouseMove" buttonDown="true"  localX="50" localY="12" />
				<DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="15" localY="10" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="updateComplete"/>
				<Pause timeout="100"/>
				<DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="50" localY="30" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="move"/>
				<Pause timeout="100"/>
				<DispatchMouseEvent target="l2" type="mouseUp" localX="50" localY="30"  waitTarget="l1"  />
				<WaitForEffectsToEnd/>
				<CompareBitmap numColorVariances="7" maxColorVariance="20" target="hg" url="../SparkDND/baselines/$testID.png" />
			</body>
		</TestCase>
		<TestCase testID="SparkListDefaultRenderer_rejectDrop2" keywords="[DragDrop, List]" description="">
			<setup>
				<ResetComponent target="l1" className="spark.components.List" waitEvent="updateComplete" />
				<ResetComponent target="l2" className="spark.components.List"      waitEvent="updateComplete" />
				
				<SetProperty target="l1" propertyName="dataProvider" valueExpression="value=application.createPlayersAC()" waitEvent="updateComplete" waitTarget="l1.dataGroup"/>
				<SetProperty target="l2" propertyName="dataProvider" valueExpression="value=application.createPlayersAC()" waitEvent="updateComplete" waitTarget="l2"/>
				<SetProperty target="l1" propertyName="labelField" value="lastName" waitEvent="updateComplete" waitTarget="l1"/>
				<SetProperty target="l2" propertyName="labelField" value="firstName" waitEvent="updateComplete" waitTarget="l2"/>
				<SetProperty target="l1" propertyName="selectedIndex" value="0" />
				<SetProperty target="l1" propertyName="dragEnabled" value="true" />
				<SetProperty target="l2" propertyName="dropEnabled" value="false" />
				<SetProperty target="l1.layout" propertyName="dragScrollInitialDelay" value="0" />
				<SetProperty target="l2.layout" propertyName="dragScrollInitialDelay" value="0" />
			</setup>
			<body>
				<RunCode code="DragManager.endDrag()" />
				<WaitForEffectsToEnd/>
				<DispatchMouseEvent target="l1"  type="mouseUp"  localX="10" localY="10" />
				<DispatchMouseEvent target="l1"  type="mouseOver" buttonDown="false" localX="10" localY="10" />
				<DispatchMouseClickEvent target="l1"    localX="20" localY="10" waitEvent="click" waitTarget="l1"/>
				<DispatchMouseEvent target="l1"  type="mouseDown" buttonDown="true"  localX="10" localY="10" />
				<DispatchMouseEvent target="l1"  type="mouseMove" buttonDown="true"  localX="50" localY="12" waitEvent="dragStart"/>
				<DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="15" localY="10"  waitEvent="dragEnter"/>
				<DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="25" localY="20"  waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="move"/>
				
				<CompareBitmap numColorVariances="25" maxColorVariance="1" target="hg" url="../SparkDND/baselines/$testID.png"/>
				<DispatchMouseEvent target="hg" type="mouseUp" localX="250" localY="30"  waitTarget="l1" waitEvent="dragComplete" />
				<WaitForEffectsToEnd/>
			</body>
		</TestCase>
		<TestCase testID="SparkListDefaultRenderer_dragProxy" keywords="[DragDrop, List]" description="">
			<setup>
				<ResetComponent target="l1" className="spark.components.List" waitEvent="updateComplete" />
				<ResetComponent target="l2" className="spark.components.List"      waitEvent="updateComplete" />
				
				<SetProperty target="l1" propertyName="dataProvider" valueExpression="value=application.createPlayersAC()" waitEvent="updateComplete" waitTarget="l1.dataGroup"/>
				<SetProperty target="l2" propertyName="dataProvider" valueExpression="value=application.createPlayersAC()" waitEvent="updateComplete" waitTarget="l2"/>
				<SetProperty target="l1" propertyName="labelField" value="lastName" waitEvent="updateComplete" waitTarget="l1"/>
				<SetProperty target="l2" propertyName="labelField" value="firstName" waitEvent="updateComplete" waitTarget="l2"/>
				<SetProperty target="l1" propertyName="selectedIndex" value="0" />
				<SetProperty target="l1" propertyName="dragEnabled" value="true" />
				<SetProperty target="l2" propertyName="dropEnabled" value="true" />
				<SetProperty target="l1.layout" propertyName="dragScrollInitialDelay" value="0" />
				<SetProperty target="l2.layout" propertyName="dragScrollInitialDelay" value="0" />
			</setup>
			<body>
				<RunCode code="DragManager.endDrag()" />
				<WaitForEffectsToEnd/>
				<DispatchMouseEvent target="l1"  type="mouseUp"  localX="10" localY="10" />
				<DispatchMouseEvent target="l1"  type="mouseOver" buttonDown="false" localX="10" localY="10" />
				<DispatchMouseClickEvent target="l1"    localX="20" localY="10" waitEvent="click" waitTarget="l1"/>
				<DispatchMouseEvent target="l1"  type="mouseDown" buttonDown="true"  localX="10" localY="10" />
				<DispatchMouseEvent target="l1"  type="mouseMove" buttonDown="true"  localX="50" localY="12" />
				<DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="5" localY="10"  waitEvent="dragEnter"/>
				<DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="10" localY="15"  waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="move"/>
				<WaitForEffectsToEnd/>
				<CompareBitmap numColorVariances="7" maxColorVariance="20" target="hg" url="../SparkDND/baselines/$testID.png" />
				<DispatchMouseEvent target="hg" type="mouseUp" localX="250" localY="8"   />
				<WaitForEffectsToEnd/>
			</body>
		</TestCase>
		
		<TestCase testID="SparkListDefaultRenderer_moveAll" keywords="[DragDrop, List]" description="">
			<setup>
				<ResetComponent target="l1" className="spark.components.List" waitEvent="updateComplete" />
				<ResetComponent target="l2" className="spark.components.List"      waitEvent="updateComplete" />
				
				<SetProperty target="l1" propertyName="dataProvider" valueExpression="value=application.createPlayersAC()" waitEvent="updateComplete" waitTarget="l1.dataGroup"/>
				<SetProperty target="l2" propertyName="dataProvider" valueExpression="value=application.createPlayersAC()" waitEvent="updateComplete" waitTarget="l2"/>
				<SetProperty target="l1" propertyName="labelField" value="lastName" waitEvent="updateComplete" waitTarget="l1"/>
				<SetProperty target="l2" propertyName="labelField" value="firstName" waitEvent="updateComplete" waitTarget="l2"/>
				<SetProperty target="l1" propertyName="dragEnabled" value="true" />
				<SetProperty target="l1" propertyName="dragMoveEnabled" value="true" />
				<SetProperty target="l2" propertyName="dropEnabled" value="true" />
				<SetProperty target="l1" propertyName="allowMultipleSelection" value="true" />
				
				<SetProperty target="l1.layout" propertyName="dragScrollInitialDelay" value="0" />
				<SetProperty target="l2.layout" propertyName="dragScrollInitialDelay" value="0" />
				<WaitForEffectsToEnd/>
			</setup>
			<body>
				<RunCode code="DragManager.endDrag()" />
				<WaitForEffectsToEnd/>
				<DispatchMouseEvent target="l1"  type="mouseUp"  localX="10" localY="10" />
				<DispatchMouseEvent target="l1"  type="mouseOver" buttonDown="false" localX="10" localY="10" />
				<DispatchMouseClickEvent target="l1"    localX="20" localY="10" waitEvent="click" waitTarget="l1"/>
				<DispatchKeyEvent keys="[END]"  waitTarget="l1" shiftKey="true" waitEvent="updateComplete"/>
				
				<DispatchMouseEvent target="l1"  type="mouseDown" buttonDown="true"  localX="10" localY="10" />
				<DispatchMouseEvent target="l1"  type="mouseMove" buttonDown="true"  localX="50" localY="12" />
				<DispatchMouseEvent target="l1"  type="mouseMove" buttonDown="true"  localX="90" localY="12" />
				<DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="15" localY="10" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="updateComplete"/>
				<DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="50" localY="30" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="move"/>
				<DispatchMouseEvent target="l2" type="mouseUp" localX="50" localY="30"  waitTarget="l1" waitEvent="dragComplete" />
				<WaitForEffectsToEnd/>
				<CompareBitmap numColorVariances="7" maxColorVariance="20" target="hg" url="../SparkDND/baselines/$testID.png" />
			</body>
		</TestCase>
		
		<TestCase testID="SparkListDefaultRenderer_rejectAll" keywords="[DragDrop, List]" description="">
			<setup>
				<ResetComponent target="l1" className="spark.components.List" waitEvent="updateComplete" />
				<ResetComponent target="l2" className="spark.components.List"      waitEvent="updateComplete" />
				
				<SetProperty target="l1" propertyName="dataProvider" valueExpression="value=application.createPlayersAC()" waitEvent="updateComplete" waitTarget="l1.dataGroup"/>
				<SetProperty target="l2" propertyName="dataProvider" valueExpression="value=application.createPlayersAC()" waitEvent="updateComplete" waitTarget="l2"/>
				<SetProperty target="l1" propertyName="labelField" value="lastName" waitEvent="updateComplete" waitTarget="l1"/>
				<SetProperty target="l2" propertyName="labelField" value="firstName" waitEvent="updateComplete" waitTarget="l2"/>
				<SetProperty target="l1" propertyName="dragEnabled" value="true" />
				<SetProperty target="l1" propertyName="dragMoveEnabled" value="true" />
				
				<SetProperty target="l1" propertyName="allowMultipleSelection" value="true" />
				
				<SetProperty target="l1.layout" propertyName="dragScrollInitialDelay" value="0" />
				<SetProperty target="l2.layout" propertyName="dragScrollInitialDelay" value="0" />
			</setup>
			<body>
				<RunCode code="DragManager.endDrag()" />
				<WaitForEffectsToEnd/>
				<DispatchMouseEvent target="l1"  type="mouseUp"  localX="10" localY="10" />
				<DispatchMouseEvent target="l1"  type="mouseOver" buttonDown="false" localX="10" localY="10" />
				<DispatchMouseClickEvent target="l1"    localX="20" localY="10" waitEvent="click" waitTarget="l1"/>
				<DispatchKeyEvent keys="[END]"  waitTarget="l1" shiftKey="true" waitEvent="updateComplete"/>
				<DispatchMouseEvent target="l1"  type="mouseDown" buttonDown="true"  localX="10" localY="10" />
				<DispatchMouseEvent target="l1"  type="mouseMove" buttonDown="true"  localX="50" localY="12" />
				<DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="15" localY="10" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="updateComplete"/>
				<DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="50" localY="30" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="move"/>
				<DispatchMouseEvent target="l2" type="mouseUp" localX="50" localY="30"  waitTarget="l1" waitEvent="dragComplete" />
				<WaitForEffectsToEnd/>
				<CompareBitmap numColorVariances="7" maxColorVariance="20" target="hg" url="../SparkDND/baselines/$testID.png" />
			</body>
		</TestCase>
		
		<TestCase testID="SparkListDND1_copy" keywords="[DragDrop, List]" description="">
			<setup>
				<ResetComponent target="l1" className="spark.components.List" waitEvent="updateComplete" />
				<ResetComponent target="l2" className="spark.components.List"      waitEvent="updateComplete" />
				<SetProperty target="l1" propertyName="itemRenderer"  valueExpression ="value= new ClassFactory( comps.ItemWithBorder )"  />
				<SetProperty target="l2" propertyName="itemRenderer"  valueExpression ="value= new ClassFactory( comps.ItemWithBorder )"  />
				<SetProperty target="l1" propertyName="dataProvider" valueExpression="value=application.createPlayersAC()" waitEvent="updateComplete" waitTarget="l1.dataGroup"/>
				<SetProperty target="l2" propertyName="dataProvider" valueExpression="value=application.createPlayersAC()" waitEvent="updateComplete" waitTarget="l2"/>
				<SetProperty target="l1" propertyName="labelField" value="lastName" waitEvent="updateComplete" waitTarget="l1"/>
				<SetProperty target="l2" propertyName="labelField" value="firstName" waitEvent="updateComplete" waitTarget="l2"/>
				<SetProperty target="l1" propertyName="selectedIndex" value="0" />
				<SetProperty target="l1" propertyName="dragEnabled" value="true" />
				<SetProperty target="l2" propertyName="dragEnabled" value="true" />
				<SetProperty target="l2" propertyName="dropEnabled" value="true" />
				
				<SetProperty target="l1.layout" propertyName="dragScrollInitialDelay" value="0" />
				<SetProperty target="l2.layout" propertyName="dragScrollInitialDelay" value="0" />
			</setup>
			<body>
				<RunCode code="DragManager.endDrag()" />
				<WaitForEffectsToEnd/>
				<DispatchMouseEvent target="l1"  type="mouseUp"  localX="10" localY="10" />
				<DispatchMouseEvent target="l1"  type="mouseOver" buttonDown="false" localX="10" localY="10" />
				<DispatchMouseClickEvent target="l1"    localX="20" localY="10" waitEvent="click" waitTarget="l1"/>
				<DispatchMouseEvent target="l1"  type="mouseDown" buttonDown="true"  localX="10" localY="10" />
				<DispatchMouseEvent target="l1"  type="mouseMove" buttonDown="true"  localX="50" localY="12" />
				<DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="15" localY="10" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="updateComplete"/>
				<DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="50" localY="30" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="move"/>
				<DispatchMouseEvent target="l2" type="mouseUp" localX="50" localY="30"  waitTarget="l1" waitEvent="dragComplete" />
				<WaitForEffectsToEnd/>
				<CompareBitmap numColorVariances="7" maxColorVariance="20" target="hg" url="../SparkDND/baselines/$testID.png" />
			</body>
		</TestCase>
		<TestCase testID="SparkListDND1_move" keywords="[DragDrop, List]" description="">
			<setup>
				<ResetComponent target="l1" className="spark.components.List" waitEvent="updateComplete" />
				<ResetComponent target="l2" className="spark.components.List"      waitEvent="updateComplete" />
				<SetProperty target="l1" propertyName="itemRenderer"  valueExpression ="value= new ClassFactory( comps.ItemWithBorder )"  />
				<SetProperty target="l2" propertyName="itemRenderer"  valueExpression ="value= new ClassFactory( comps.ItemWithBorder )"  />
				<SetProperty target="l1" propertyName="dataProvider" valueExpression="value=application.createPlayersAC()" waitEvent="updateComplete" waitTarget="l1.dataGroup"/>
				<SetProperty target="l2" propertyName="dataProvider" valueExpression="value=application.createPlayersAC()" waitEvent="updateComplete" waitTarget="l2"/>
				<SetProperty target="l1" propertyName="labelField" value="lastName" waitEvent="updateComplete" waitTarget="l1"/>
				<SetProperty target="l2" propertyName="labelField" value="firstName" waitEvent="updateComplete" waitTarget="l2"/>
				<SetProperty target="l1" propertyName="selectedIndex" value="0" />
				<SetProperty target="l1" propertyName="dragEnabled" value="true" />
				<SetProperty target="l1" propertyName="dragMoveEnabled" value="true" />
				<SetProperty target="l2" propertyName="dropEnabled" value="true" />
				
				<SetProperty target="l1.layout" propertyName="dragScrollInitialDelay" value="0" />
				<SetProperty target="l2.layout" propertyName="dragScrollInitialDelay" value="0" />
			</setup>
			<body>
				<RunCode code="DragManager.endDrag()" />
				<WaitForEffectsToEnd/>
				<DispatchMouseEvent target="l1"  type="mouseUp"  localX="10" localY="10" />
				<DispatchMouseEvent target="l1"  type="mouseOver" buttonDown="false" localX="10" localY="10" />
				<DispatchMouseClickEvent target="l1"    localX="20" localY="10" waitEvent="click" waitTarget="l1"/>
				<DispatchMouseEvent target="l1"  type="mouseDown" buttonDown="true"  localX="10" localY="10" />
				<DispatchMouseEvent target="l1"  type="mouseMove" buttonDown="true"  localX="50" localY="12" />
				<DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="15" localY="10" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="updateComplete"/>
				<DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="50" localY="30" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="move"/>
				<DispatchMouseEvent target="l2" type="mouseUp" localX="50" localY="30"  waitTarget="l1" waitEvent="dragComplete" />
				<WaitForEffectsToEnd/>
				<CompareBitmap numColorVariances="7" maxColorVariance="20" target="hg" url="../SparkDND/baselines/$testID.png" />
			</body>
		</TestCase>
		<TestCase testID="SparkListDND1_move1" keywords="[DragDrop, List]" description="">
			<setup>
				<ResetComponent target="l1" className="spark.components.List" waitEvent="updateComplete" />
				<ResetComponent target="l2" className="spark.components.List"      waitEvent="updateComplete" />
				<SetProperty target="l1" propertyName="itemRenderer"  valueExpression ="value= new ClassFactory( comps.ItemWithBorder )"  />
				<SetProperty target="l2" propertyName="itemRenderer"  valueExpression ="value= new ClassFactory( comps.ItemWithBorder )"  />
				<SetProperty target="l1" propertyName="dataProvider" valueExpression="value=application.createPlayersAC()" waitEvent="updateComplete" waitTarget="l1.dataGroup"/>
				<SetProperty target="l2" propertyName="dataProvider" valueExpression="value=application.createPlayersAC()" waitEvent="updateComplete" waitTarget="l2"/>
				<SetProperty target="l1" propertyName="labelField" value="lastName" waitEvent="updateComplete" waitTarget="l1"/>
				<SetProperty target="l2" propertyName="labelField" value="firstName" waitEvent="updateComplete" waitTarget="l2"/>
				<SetProperty target="l1" propertyName="selectedIndex" value="0" />
				<SetProperty target="l1" propertyName="dragEnabled" value="true" />
				<SetProperty target="l1" propertyName="dragMoveEnabled" value="true" />
				<SetProperty target="l2" propertyName="dropEnabled" value="true" />
				<SetProperty target="l1" propertyName="height" value="105" />
				<SetProperty target="l1.layout" propertyName="dragScrollInitialDelay" value="0" />
				<SetProperty target="l2.layout" propertyName="dragScrollInitialDelay" value="0" />
			</setup>
			<body>
				<RunCode code="DragManager.endDrag()" />
				<WaitForEffectsToEnd/>
				<DispatchMouseEvent target="l1"  type="mouseUp"  localX="10" localY="10" />
				<DispatchMouseEvent target="l1"  type="mouseOver" buttonDown="false" localX="10" localY="10" />
				<DispatchMouseClickEvent target="l1"    localX="20" localY="10" waitEvent="click" waitTarget="l1"/>
				<DispatchMouseEvent target="l1"  type="mouseDown" buttonDown="true"  localX="10" localY="10" />
				<DispatchMouseEvent target="l1"  type="mouseMove" buttonDown="true"  localX="50" localY="12" />
				<DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="15" localY="100" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="updateComplete"/>
				<DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="50" localY="100" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="move"/>
				<DispatchMouseEvent target="l2" type="mouseUp" localX="50" localY="100"  waitTarget="l1" waitEvent="dragComplete" />
				<WaitForEffectsToEnd/>
				<CompareBitmap numColorVariances="7" maxColorVariance="20" target="hg" url="../SparkDND/baselines/$testID.png" />
			</body>
		</TestCase>
		<TestCase testID="SparkListDND1_rejectDrop1" keywords="[DragDrop, List]" description="">
			<setup>
				<ResetComponent target="l1" className="spark.components.List" waitEvent="updateComplete" />
				<ResetComponent target="l2" className="spark.components.List"      waitEvent="updateComplete" />
				<SetProperty target="l1" propertyName="itemRenderer"  valueExpression ="value= new ClassFactory( comps.ItemWithBorder )"  />
				<SetProperty target="l2" propertyName="itemRenderer"  valueExpression ="value= new ClassFactory( comps.ItemWithBorder )"  />
				<SetProperty target="l1" propertyName="dataProvider" valueExpression="value=application.createPlayersAC()" waitEvent="updateComplete" waitTarget="l1.dataGroup"/>
				<SetProperty target="l2" propertyName="dataProvider" valueExpression="value=application.createPlayersAC()" waitEvent="updateComplete" waitTarget="l2"/>
				<SetProperty target="l1" propertyName="labelField" value="lastName" waitEvent="updateComplete" waitTarget="l1"/>
				<SetProperty target="l2" propertyName="labelField" value="firstName" waitEvent="updateComplete" waitTarget="l2"/>
				<SetProperty target="l1" propertyName="selectedIndex" value="0" />
				<SetProperty target="l1" propertyName="dragEnabled" value="true" />
				<SetProperty target="l1" propertyName="dragMoveEnabled" value="true" />
				<SetProperty target="l1.layout" propertyName="dragScrollInitialDelay" value="0" />
				<SetProperty target="l2.layout" propertyName="dragScrollInitialDelay" value="0" />
			</setup>
			<body>
				<RunCode code="DragManager.endDrag()" />
				<WaitForEffectsToEnd/>
				<DispatchMouseEvent target="l1"  type="mouseUp"  localX="10" localY="10" />
				<DispatchMouseEvent target="l1"  type="mouseOver" buttonDown="false" localX="10" localY="10" />
				<DispatchMouseClickEvent target="l1"    localX="20" localY="10" waitEvent="click" waitTarget="l1"/>
				<DispatchMouseEvent target="l1"  type="mouseDown" buttonDown="true"  localX="10" localY="10" />
				<DispatchMouseEvent target="l1"  type="mouseMove" buttonDown="true"  localX="50" localY="12" />
				<DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="15" localY="10" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="updateComplete"/>
				<DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="50" localY="30" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="move"/>
				<DispatchMouseEvent target="l2" type="mouseUp" localX="50" localY="30"  waitTarget="l1" waitEvent="dragComplete" />
				<WaitForEffectsToEnd/>
				<CompareBitmap numColorVariances="7" maxColorVariance="20" target="hg" url="../SparkDND/baselines/$testID.png" />
			</body>
		</TestCase>
		<TestCase testID="SparkListDND1_rejectDrop2" keywords="[DragDrop, List]" description="">
			<setup>
				<ResetComponent target="l1" className="spark.components.List" waitEvent="updateComplete" />
				<ResetComponent target="l2" className="spark.components.List"      waitEvent="updateComplete" />
				<SetProperty target="l1" propertyName="itemRenderer"  valueExpression ="value= new ClassFactory( comps.ItemWithBorder )"  />
				<SetProperty target="l2" propertyName="itemRenderer"  valueExpression ="value= new ClassFactory( comps.ItemWithBorder )"  />
				<SetProperty target="l1" propertyName="dataProvider" valueExpression="value=application.createPlayersAC()" waitEvent="updateComplete" waitTarget="l1.dataGroup"/>
				<SetProperty target="l2" propertyName="dataProvider" valueExpression="value=application.createPlayersAC()" waitEvent="updateComplete" waitTarget="l2"/>
				<SetProperty target="l1" propertyName="labelField" value="lastName" waitEvent="updateComplete" waitTarget="l1"/>
				<SetProperty target="l2" propertyName="labelField" value="firstName" waitEvent="updateComplete" waitTarget="l2"/>
				<SetProperty target="l1" propertyName="selectedIndex" value="0" />
				<SetProperty target="l1" propertyName="dragEnabled" value="true" />
				<SetProperty target="l2" propertyName="dropEnabled" value="false" />
				<SetProperty target="l1.layout" propertyName="dragScrollInitialDelay" value="0" />
				<SetProperty target="l2.layout" propertyName="dragScrollInitialDelay" value="0" />
			</setup>
			<body>
				<RunCode code="DragManager.endDrag()" />
				<WaitForEffectsToEnd/>
				<DispatchMouseEvent target="l1"  type="mouseUp"  localX="10" localY="10" />
				<DispatchMouseEvent target="l1"  type="mouseOver" buttonDown="false" localX="10" localY="10" />
				<DispatchMouseClickEvent target="l1"    localX="20" localY="10" waitEvent="click" waitTarget="l1"/>
				<DispatchMouseEvent target="l1"  type="mouseDown" buttonDown="true"  localX="10" localY="10" />
				<DispatchMouseEvent target="l1"  type="mouseMove" buttonDown="true"  localX="50" localY="12" />
				<DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="15" localY="10" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="updateComplete"/>
				<DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="50" localY="30" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="move"/>
				<DispatchMouseEvent target="hg" type="mouseMove" buttonDown="true" localX="250" localY="30" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="move"/>
				<DispatchMouseEvent target="hg" type="mouseUp" localX="250" localY="30"  waitTarget="l1" waitEvent="dragComplete" />
				<WaitForEffectsToEnd/>
				<CompareBitmap numColorVariances="7" maxColorVariance="20" target="hg" url="../SparkDND/baselines/$testID.png" />
			</body>
		</TestCase>
		<TestCase testID="SparkListDND1_dragProxy" keywords="[DragDrop, List]" description="">
			<setup>
				<ResetComponent target="l1" className="spark.components.List" waitEvent="updateComplete" />
				<ResetComponent target="l2" className="spark.components.List"      waitEvent="updateComplete" />
				<SetProperty target="l1" propertyName="itemRenderer"  valueExpression ="value= new ClassFactory( comps.ItemWithBorder )"  />
				<SetProperty target="l2" propertyName="itemRenderer"  valueExpression ="value= new ClassFactory( comps.ItemWithBorder )"  />
				<SetProperty target="l1" propertyName="dataProvider" valueExpression="value=application.createPlayersAC()" waitEvent="updateComplete" waitTarget="l1.dataGroup"/>
				<SetProperty target="l2" propertyName="dataProvider" valueExpression="value=application.createPlayersAC()" waitEvent="updateComplete" waitTarget="l2"/>
				<SetProperty target="l1" propertyName="labelField" value="lastName" waitEvent="updateComplete" waitTarget="l1"/>
				<SetProperty target="l2" propertyName="labelField" value="firstName" waitEvent="updateComplete" waitTarget="l2"/>
				<SetProperty target="l1" propertyName="selectedIndex" value="0" />
				<SetProperty target="l1" propertyName="dragEnabled" value="true" />
				<SetProperty target="l2" propertyName="dropEnabled" value="true" />
				<SetProperty target="l1.layout" propertyName="dragScrollInitialDelay" value="0" />
				<SetProperty target="l2.layout" propertyName="dragScrollInitialDelay" value="0" />
			</setup>
			<body>
				<RunCode code="DragManager.endDrag()" />
				<WaitForEffectsToEnd/>
				<DispatchMouseEvent target="l1"  type="mouseUp"  localX="10" localY="10" />
				<DispatchMouseEvent target="l1"  type="mouseOver" buttonDown="false" localX="10" localY="10" />
				<DispatchMouseClickEvent target="l1"    localX="20" localY="10" waitEvent="click" waitTarget="l1"/>
				<DispatchMouseEvent target="l1"  type="mouseDown" buttonDown="true"  localX="10" localY="10" />
				<DispatchMouseEvent target="l1"  type="mouseMove" buttonDown="true"  localX="50" localY="12" />
				<DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="5" localY="10" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="updateComplete"/>
				<DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="10" localY="5" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="move"/>
				<WaitForEffectsToEnd/>
				<CompareBitmap numColorVariances="7" maxColorVariance="20" target="hg" url="../SparkDND/baselines/$testID.png" />
				<DispatchMouseEvent target="hg" type="mouseUp" localX="250" localY="8"   />
				<WaitForEffectsToEnd/>
			</body>
		</TestCase>
		
		<TestCase testID="SparkListDND1_moveAll" keywords="[DragDrop, List]" description="">
			<setup>
				<ResetComponent target="l1" className="spark.components.List" waitEvent="updateComplete" />
				<ResetComponent target="l2" className="spark.components.List"      waitEvent="updateComplete" />
				<SetProperty target="l1" propertyName="itemRenderer"  valueExpression ="value= new ClassFactory( comps.ItemWithBorder )"  />
				<SetProperty target="l2" propertyName="itemRenderer"  valueExpression ="value= new ClassFactory( comps.ItemWithBorder )"  />
				<SetProperty target="l1" propertyName="dataProvider" valueExpression="value=application.createPlayersAC()" waitEvent="updateComplete" waitTarget="l1.dataGroup"/>
				<SetProperty target="l2" propertyName="dataProvider" valueExpression="value=application.createPlayersAC()" waitEvent="updateComplete" waitTarget="l2"/>
				<SetProperty target="l1" propertyName="labelField" value="lastName" waitEvent="updateComplete" waitTarget="l1"/>
				<SetProperty target="l2" propertyName="labelField" value="firstName" waitEvent="updateComplete" waitTarget="l2"/>
				<SetProperty target="l1" propertyName="dragEnabled" value="true" />
				<SetProperty target="l1" propertyName="dragMoveEnabled" value="true" />
				<SetProperty target="l2" propertyName="dropEnabled" value="true" />
				<SetProperty target="l1" propertyName="allowMultipleSelection" value="true" />
				
				<SetProperty target="l1.layout" propertyName="dragScrollInitialDelay" value="0" />
				<SetProperty target="l2.layout" propertyName="dragScrollInitialDelay" value="0" />
			</setup>
			<body>
				<RunCode code="DragManager.endDrag()" />
				<WaitForEffectsToEnd/>
				<DispatchMouseEvent target="l1"  type="mouseUp"  localX="10" localY="10" />
				<DispatchMouseEvent target="l1"  type="mouseOver" buttonDown="false" localX="10" localY="10" />
				<DispatchMouseClickEvent target="l1"    localX="20" localY="10" waitEvent="click" waitTarget="l1"/>
				<DispatchKeyEvent keys="[END]"  waitTarget="l1" shiftKey="true" waitEvent="updateComplete"/>
				
				<DispatchMouseEvent target="l1"  type="mouseDown" buttonDown="true"  localX="10" localY="10" />
				<DispatchMouseEvent target="l1"  type="mouseMove" buttonDown="true"  localX="50" localY="12" />
				<DispatchMouseEvent target="l1"  type="mouseMove" buttonDown="true"  localX="90" localY="12" />
				<DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="15" localY="10" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="updateComplete"/>
				<DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="50" localY="30" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="move"/>
				<DispatchMouseEvent target="l2" type="mouseUp" localX="50" localY="30"  waitTarget="l1" waitEvent="dragComplete" />
				<WaitForEffectsToEnd/>
				<CompareBitmap numColorVariances="7" maxColorVariance="20" target="hg" url="../SparkDND/baselines/$testID.png" />
			</body>
		</TestCase>
		<TestCase testID="SparkListDND1_rejectAll" keywords="[DragDrop, List]" description="">
			<setup>
				<ResetComponent target="l1" className="spark.components.List" waitEvent="updateComplete" />
				<ResetComponent target="l2" className="spark.components.List"      waitEvent="updateComplete" />
				<SetProperty target="l1" propertyName="itemRenderer"  valueExpression ="value= new ClassFactory( comps.ItemWithBorder )"  />
				<SetProperty target="l2" propertyName="itemRenderer"  valueExpression ="value= new ClassFactory( comps.ItemWithBorder )"  />
				<SetProperty target="l1" propertyName="dataProvider" valueExpression="value=application.createPlayersAC()" waitEvent="updateComplete" waitTarget="l1.dataGroup"/>
				<SetProperty target="l2" propertyName="dataProvider" valueExpression="value=application.createPlayersAC()" waitEvent="updateComplete" waitTarget="l2"/>
				<SetProperty target="l1" propertyName="labelField" value="lastName" waitEvent="updateComplete" waitTarget="l1"/>
				<SetProperty target="l2" propertyName="labelField" value="firstName" waitEvent="updateComplete" waitTarget="l2"/>
				<SetProperty target="l1" propertyName="dragEnabled" value="true" />
				<SetProperty target="l1" propertyName="dragMoveEnabled" value="true" />
				
				<SetProperty target="l1" propertyName="allowMultipleSelection" value="true" />
				
				<SetProperty target="l1.layout" propertyName="dragScrollInitialDelay" value="0" />
				<SetProperty target="l2.layout" propertyName="dragScrollInitialDelay" value="0" />
			</setup>
			<body>
				<RunCode code="DragManager.endDrag()" />
				<WaitForEffectsToEnd/>
				<DispatchMouseEvent target="l1"  type="mouseUp"  localX="10" localY="10" />
				<DispatchMouseEvent target="l1"  type="mouseOver" buttonDown="false" localX="10" localY="10" />
				<DispatchMouseClickEvent target="l1"    localX="20" localY="10" waitEvent="click" waitTarget="l1"/>
				<DispatchKeyEvent keys="[END]"  waitTarget="l1" shiftKey="true" waitEvent="updateComplete"/>
				<DispatchMouseEvent target="l1"  type="mouseDown" buttonDown="true"  localX="10" localY="10" />
				<DispatchMouseEvent target="l1"  type="mouseMove" buttonDown="true"  localX="50" localY="12" />
				<DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="15" localY="10" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="updateComplete"/>
				<DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="50" localY="30" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="move"/>
				<DispatchMouseEvent target="l2" type="mouseUp" localX="50" localY="30"  waitTarget="l1" waitEvent="dragComplete" />
				<WaitForEffectsToEnd/>
				<CompareBitmap numColorVariances="7" maxColorVariance="20" target="hg" url="../SparkDND/baselines/$testID.png" />
			</body>
		</TestCase>
		<TestCase testID="SparkListAbcDND1_copy" keywords="[DragDrop, List]" description="">
			<setup>
				<ResetComponent target="l1" className="spark.components.List" waitEvent="updateComplete" />
				<ResetComponent target="l2" className="spark.components.List"      waitEvent="updateComplete" />
				<SetProperty target="l1" propertyName="itemRenderer"  valueExpression ="value= new ClassFactory( comps.ItemWithBorder )"  />
				<SetProperty target="l2" propertyName="itemRenderer"  valueExpression ="value= new ClassFactory( comps.ItemWithBorder )"  />
				<SetProperty target="l1" propertyName="dataProvider" valueExpression="value=application.createAbc()" waitEvent="updateComplete" waitTarget="l1.dataGroup"/>
				<SetProperty target="l2" propertyName="dataProvider" valueExpression="value=application.createAbc()" waitEvent="updateComplete" waitTarget="l2"/>
				<SetProperty target="l1" propertyName="height" value="200" waitEvent="updateComplete" waitTarget="l1"/>
				<SetProperty target="l2" propertyName="height" value="200" waitEvent="updateComplete" waitTarget="l2"/>
				<SetProperty target="l1" propertyName="selectedIndex" value="0" />
				<SetProperty target="l1" propertyName="dragEnabled" value="true" />
				<SetProperty target="l2" propertyName="dragEnabled" value="true" />
				<SetProperty target="l2" propertyName="dropEnabled" value="true" />
				
				<SetProperty target="l1.layout" propertyName="dragScrollInitialDelay" value="0" />
				<SetProperty target="l2.layout" propertyName="dragScrollInitialDelay" value="0" />
			</setup>
			<body>
				<RunCode code="DragManager.endDrag()" />
				<WaitForEffectsToEnd/>
				<DispatchMouseEvent target="l1"  type="mouseUp"  localX="10" localY="10" />
				<DispatchMouseEvent target="l1"  type="mouseOver" buttonDown="false" localX="10" localY="10" />
				<DispatchMouseClickEvent target="l1"    localX="20" localY="10" waitEvent="click" waitTarget="l1"/>
				<DispatchMouseEvent target="l1"  type="mouseDown" buttonDown="true"  localX="10" localY="10" />
				<DispatchMouseEvent target="l1"  type="mouseMove" buttonDown="true"  localX="50" localY="12" />
				<DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="15" localY="10" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="updateComplete"/>
				<DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="50" localY="30" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="move"/>
				<DispatchMouseEvent target="l2" type="mouseUp" localX="50" localY="30"  waitTarget="l1" waitEvent="dragComplete" />
				<WaitForEffectsToEnd/>
				<CompareBitmap numColorVariances="7" maxColorVariance="20" target="hg" url="../SparkDND/baselines/$testID.png" />
			</body>
		</TestCase>
		<TestCase testID="SparkListAbcDND1_move" keywords="[DragDrop, List]" description="">
			<setup>
				<ResetComponent target="l1" className="spark.components.List" waitEvent="updateComplete" />
				<ResetComponent target="l2" className="spark.components.List"      waitEvent="updateComplete" />
				<SetProperty target="l1" propertyName="itemRenderer"  valueExpression ="value= new ClassFactory( comps.ItemWithBorder )"  />
				<SetProperty target="l2" propertyName="itemRenderer"  valueExpression ="value= new ClassFactory( comps.ItemWithBorder )"  />
				<SetProperty target="l1" propertyName="dataProvider" valueExpression="value=application.createAbc()" waitEvent="updateComplete" waitTarget="l1.dataGroup"/>
				<SetProperty target="l2" propertyName="dataProvider" valueExpression="value=application.createAbc()" waitEvent="updateComplete" waitTarget="l2"/>
				<SetProperty target="l1" propertyName="height" value="200" waitEvent="updateComplete" waitTarget="l1"/>
				<SetProperty target="l2" propertyName="height" value="200" waitEvent="updateComplete" waitTarget="l2"/>
				<SetProperty target="l1" propertyName="selectedIndex" value="0" />
				<SetProperty target="l1" propertyName="dragEnabled" value="true" />
				<SetProperty target="l1" propertyName="dragMoveEnabled" value="true" />
				<SetProperty target="l2" propertyName="dropEnabled" value="true" />
				
				<SetProperty target="l1.layout" propertyName="dragScrollInitialDelay" value="0" />
				<SetProperty target="l2.layout" propertyName="dragScrollInitialDelay" value="0" />
			</setup>
			<body>
				<RunCode code="DragManager.endDrag()" />
				<WaitForEffectsToEnd/>
				<DispatchMouseEvent target="l1"  type="mouseUp"  localX="10" localY="10" />
				<DispatchMouseEvent target="l1"  type="mouseOver" buttonDown="false" localX="10" localY="10" />
				<DispatchMouseClickEvent target="l1"    localX="20" localY="10" waitEvent="click" waitTarget="l1"/>
				<DispatchMouseEvent target="l1"  type="mouseDown" buttonDown="true"  localX="10" localY="10" />
				<DispatchMouseEvent target="l1"  type="mouseMove" buttonDown="true"  localX="50" localY="12" />
				<DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="15" localY="10" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="updateComplete"/>
				<DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="50" localY="30" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="move"/>
				<DispatchMouseEvent target="l2" type="mouseUp" localX="50" localY="30"  waitTarget="l1" waitEvent="dragComplete" />
				<WaitForEffectsToEnd/>
				<CompareBitmap numColorVariances="7" maxColorVariance="20" target="hg" url="../SparkDND/baselines/$testID.png" />
			</body>
		</TestCase>
		<TestCase testID="SparkListAbcDND1_move1" keywords="[DragDrop, List]" description="">
			<setup>
				<ResetComponent target="l1" className="spark.components.List" waitEvent="updateComplete" />
				<ResetComponent target="l2" className="spark.components.List"      waitEvent="updateComplete" />
				<SetProperty target="l1" propertyName="itemRenderer"  valueExpression ="value= new ClassFactory( comps.ItemWithBorder )"  />
				<SetProperty target="l2" propertyName="itemRenderer"  valueExpression ="value= new ClassFactory( comps.ItemWithBorder )"  />
				<SetProperty target="l1" propertyName="dataProvider" valueExpression="value=application.createAbc()" waitEvent="updateComplete" waitTarget="l1.dataGroup"/>
				<SetProperty target="l2" propertyName="dataProvider" valueExpression="value=application.createAbc()" waitEvent="updateComplete" waitTarget="l2"/>
				<SetProperty target="l1" propertyName="height" value="200" waitEvent="updateComplete" waitTarget="l1"/>
				<SetProperty target="l2" propertyName="height" value="200" waitEvent="updateComplete" waitTarget="l2"/>
				<SetProperty target="l1" propertyName="selectedIndex" value="0" />
				<SetProperty target="l1" propertyName="dragEnabled" value="true" />
				<SetProperty target="l1" propertyName="dragMoveEnabled" value="true" />
				<SetProperty target="l2" propertyName="dropEnabled" value="true" />
				<SetProperty target="l1" propertyName="height" value="105" />
				<SetProperty target="l1.layout" propertyName="dragScrollInitialDelay" value="0" />
				<SetProperty target="l2.layout" propertyName="dragScrollInitialDelay" value="0" />
			</setup>
			<body>
				<RunCode code="DragManager.endDrag()" />
				<WaitForEffectsToEnd/>
				<DispatchMouseEvent target="l1"  type="mouseUp"  localX="10" localY="10" />
				<DispatchMouseEvent target="l1"  type="mouseOver" buttonDown="false" localX="10" localY="10" />
				<DispatchMouseClickEvent target="l1"    localX="20" localY="10" waitEvent="click" waitTarget="l1"/>
				<DispatchMouseEvent target="l1"  type="mouseDown" buttonDown="true"  localX="10" localY="10" />
				<DispatchMouseEvent target="l1"  type="mouseMove" buttonDown="true"  localX="50" localY="12" />
				<DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="15" localY="100" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="updateComplete"/>
				<DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="50" localY="100" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="move"/>
				<DispatchMouseEvent target="l2" type="mouseUp" localX="50" localY="100"  waitTarget="l1" waitEvent="dragComplete" />
				<WaitForEffectsToEnd/>
				<CompareBitmap numColorVariances="7" maxColorVariance="20" target="hg" url="../SparkDND/baselines/$testID.png" />
			</body>
		</TestCase>
		<TestCase testID="SparkListAbcDND1_rejectDrop1" keywords="[DragDrop, List]" description="">
			<setup>
				<ResetComponent target="l1" className="spark.components.List" waitEvent="updateComplete" />
				<ResetComponent target="l2" className="spark.components.List"      waitEvent="updateComplete" />
				<SetProperty target="l1" propertyName="itemRenderer"  valueExpression ="value= new ClassFactory( comps.ItemWithBorder )"  />
				<SetProperty target="l2" propertyName="itemRenderer"  valueExpression ="value= new ClassFactory( comps.ItemWithBorder )"  />
				<SetProperty target="l1" propertyName="dataProvider" valueExpression="value=application.createAbc()" waitEvent="updateComplete" waitTarget="l1.dataGroup"/>
				<SetProperty target="l2" propertyName="dataProvider" valueExpression="value=application.createAbc()" waitEvent="updateComplete" waitTarget="l2"/>
				<SetProperty target="l1" propertyName="height" value="200" waitEvent="updateComplete" waitTarget="l1"/>
				<SetProperty target="l2" propertyName="height" value="200" waitEvent="updateComplete" waitTarget="l2"/>
				<SetProperty target="l1" propertyName="selectedIndex" value="0" />
				<SetProperty target="l1" propertyName="dragEnabled" value="true" />
				<SetProperty target="l1" propertyName="dragMoveEnabled" value="true" />
				<SetProperty target="l1.layout" propertyName="dragScrollInitialDelay" value="0" />
				<SetProperty target="l2.layout" propertyName="dragScrollInitialDelay" value="0" />
			</setup>
			<body>
				<RunCode code="DragManager.endDrag()" />
				<WaitForEffectsToEnd/>
				<DispatchMouseEvent target="l1"  type="mouseUp"  localX="10" localY="10" />
				<DispatchMouseEvent target="l1"  type="mouseOver" buttonDown="false" localX="10" localY="10" />
				<DispatchMouseClickEvent target="l1"    localX="20" localY="10" waitEvent="click" waitTarget="l1"/>
				<DispatchMouseEvent target="l1"  type="mouseDown" buttonDown="true"  localX="10" localY="10" />
				<DispatchMouseEvent target="l1"  type="mouseMove" buttonDown="true"  localX="50" localY="12" />
				<DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="15" localY="10" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="updateComplete"/>
				<DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="50" localY="30" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="move"/>
				<DispatchMouseEvent target="l2" type="mouseUp" localX="50" localY="30"  waitTarget="l1" waitEvent="dragComplete" />
				<WaitForEffectsToEnd/>
				<CompareBitmap numColorVariances="7" maxColorVariance="20" target="hg" url="../SparkDND/baselines/$testID.png" />
			</body>
		</TestCase>
		
		<TestCase testID="SparkListAbcDND1_moveAll" keywords="[DragDrop, List]" description="">
			<setup>
				<ResetComponent target="l1" className="spark.components.List" waitEvent="updateComplete" />
				<ResetComponent target="l2" className="spark.components.List"      waitEvent="updateComplete" />
				<SetProperty target="l1" propertyName="itemRenderer"  valueExpression ="value= new ClassFactory( comps.ItemWithBorder )"  />
				<SetProperty target="l2" propertyName="itemRenderer"  valueExpression ="value= new ClassFactory( comps.ItemWithBorder )"  />
				<SetProperty target="l1" propertyName="dataProvider" valueExpression="value=application.createAbc()" waitEvent="updateComplete" waitTarget="l1.dataGroup"/>
				<SetProperty target="l2" propertyName="dataProvider" valueExpression="value=application.createAbc()" waitEvent="updateComplete" waitTarget="l2"/>
				<SetProperty target="l1" propertyName="height" value="200" waitEvent="updateComplete" waitTarget="l1"/>
				<SetProperty target="l2" propertyName="height" value="200" waitEvent="updateComplete" waitTarget="l2"/>
				<SetProperty target="l1" propertyName="dragEnabled" value="true" />
				<SetProperty target="l1" propertyName="dragMoveEnabled" value="true" />
				<SetProperty target="l2" propertyName="dropEnabled" value="true" />
				<SetProperty target="l1" propertyName="allowMultipleSelection" value="true" />
				
				<SetProperty target="l1.layout" propertyName="dragScrollInitialDelay" value="0" />
				<SetProperty target="l2.layout" propertyName="dragScrollInitialDelay" value="0" />
			</setup>
			<body>
				<RunCode code="DragManager.endDrag()" />
				<WaitForEffectsToEnd/>
				<DispatchMouseEvent target="l1"  type="mouseUp"  localX="10" localY="10" />
				<DispatchMouseEvent target="l1"  type="mouseOver" buttonDown="false" localX="10" localY="10" />
				<DispatchMouseClickEvent target="l1"    localX="20" localY="10" waitEvent="click" waitTarget="l1"/>
				<DispatchKeyEvent keys="[END]"  waitTarget="l1" shiftKey="true" waitEvent="updateComplete"/>
				
				<DispatchMouseEvent target="l1"  type="mouseDown" buttonDown="true"  localX="10" localY="10" />
				<DispatchMouseEvent target="l1"  type="mouseMove" buttonDown="true"  localX="50" localY="12" />
				<DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="15" localY="10" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="updateComplete"/>
				<DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="50" localY="30" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="move"/>
				<DispatchMouseEvent target="l2" type="mouseUp" localX="50" localY="30"  waitTarget="l1" waitEvent="dragComplete" />
				<WaitForEffectsToEnd/>
				<CompareBitmap numColorVariances="7" maxColorVariance="20" target="hg" url="../SparkDND/baselines/$testID.png" />
			</body>
		</TestCase>
		<TestCase testID="SparkListAbcDND1_rejectAll" keywords="[DragDrop, List]" description="">
			<setup>
				<ResetComponent target="l1" className="spark.components.List" waitEvent="updateComplete" />
				<ResetComponent target="l2" className="spark.components.List"      waitEvent="updateComplete" />
				<SetProperty target="l1" propertyName="itemRenderer"  valueExpression ="value= new ClassFactory( comps.ItemWithBorder )"  />
				<SetProperty target="l2" propertyName="itemRenderer"  valueExpression ="value= new ClassFactory( comps.ItemWithBorder )"  />
				<SetProperty target="l1" propertyName="dataProvider" valueExpression="value=application.createAbc()" waitEvent="updateComplete" waitTarget="l1.dataGroup"/>
				<SetProperty target="l2" propertyName="dataProvider" valueExpression="value=application.createAbc()" waitEvent="updateComplete" waitTarget="l2"/>
				<SetProperty target="l1" propertyName="height" value="200" waitEvent="updateComplete" waitTarget="l1"/>
				<SetProperty target="l2" propertyName="height" value="200" waitEvent="updateComplete" waitTarget="l2"/>
				<SetProperty target="l1" propertyName="dragEnabled" value="true" />
				<SetProperty target="l1" propertyName="dragMoveEnabled" value="true" />
				
				<SetProperty target="l1" propertyName="allowMultipleSelection" value="true" />
				
				<SetProperty target="l1.layout" propertyName="dragScrollInitialDelay" value="0" />
				<SetProperty target="l2.layout" propertyName="dragScrollInitialDelay" value="0" />
			</setup>
			<body>
				<RunCode code="DragManager.endDrag()" />
				<WaitForEffectsToEnd/>
				<DispatchMouseEvent target="l1"  type="mouseUp"  localX="10" localY="10" />
				<DispatchMouseEvent target="l1"  type="mouseOver" buttonDown="false" localX="10" localY="10" />
				<DispatchMouseClickEvent target="l1"    localX="20" localY="10" waitEvent="click" waitTarget="l1"/>
				<DispatchKeyEvent keys="[END]"  waitTarget="l1" shiftKey="true" waitEvent="updateComplete"/>
				<DispatchMouseEvent target="l1"  type="mouseDown" buttonDown="true"  localX="10" localY="10" />
				<DispatchMouseEvent target="l1"  type="mouseMove" buttonDown="true"  localX="50" localY="12" />
				<DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="5" localY="5" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="updateComplete"/>
				<DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="8" localY="8" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="move"/>
				<DispatchMouseEvent target="l2" type="mouseUp" localX="50" localY="30"  waitTarget="l1" waitEvent="dragComplete" />
				<WaitForEffectsToEnd/>
				
				<CompareBitmap numColorVariances="7" maxColorVariance="20" target="hg" url="../SparkDND/baselines/$testID.png" />
				
			</body>
		</TestCase>
		<TestCase testID="SparkListAbcDND1_rejectDrop2" keywords="[DragDrop, List]" description="">
			<setup>
				<ResetComponent target="l1" className="spark.components.List" waitEvent="updateComplete" />
				<ResetComponent target="l2" className="spark.components.List"      waitEvent="updateComplete" />
				<SetProperty target="l1" propertyName="itemRenderer"  valueExpression ="value= new ClassFactory( comps.ItemWithBorder )"  />
				<SetProperty target="l2" propertyName="itemRenderer"  valueExpression ="value= new ClassFactory( comps.ItemWithBorder )"  />
				<SetProperty target="l1" propertyName="dataProvider" valueExpression="value=application.createAbc()" waitEvent="updateComplete" waitTarget="l1.dataGroup"/>
				<SetProperty target="l2" propertyName="dataProvider" valueExpression="value=application.createAbc()" waitEvent="updateComplete" waitTarget="l2"/>
				<SetProperty target="l1" propertyName="height" value="200" waitEvent="updateComplete" waitTarget="l1"/>
				<SetProperty target="l2" propertyName="height" value="200" waitEvent="updateComplete" waitTarget="l2"/>
				<SetProperty target="l1" propertyName="selectedIndex" value="0" />
				<SetProperty target="l1" propertyName="dragEnabled" value="true" />
				<SetProperty target="l2" propertyName="dropEnabled" value="false" />
				<SetProperty target="l1.layout" propertyName="dragScrollInitialDelay" value="0" />
				<SetProperty target="l2.layout" propertyName="dragScrollInitialDelay" value="0" />
			</setup>
			<body>
				<RunCode code="DragManager.endDrag()" />
				<WaitForEffectsToEnd/>
				<DispatchMouseEvent target="l1"  type="mouseUp"  localX="10" localY="10" />
				<DispatchMouseEvent target="l1"  type="mouseOver" buttonDown="false" localX="10" localY="10" />
				<DispatchMouseClickEvent target="l1"    localX="20" localY="10" waitEvent="click" waitTarget="l1"/>
				<DispatchMouseEvent target="l1"  type="mouseDown" buttonDown="true"  localX="10" localY="10" />
				<DispatchMouseEvent target="l1"  type="mouseMove" buttonDown="true"  localX="50" localY="12" />
				<DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="5" localY="10" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="updateComplete"/>
				<DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="10" localY="5" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="move"/>
				
				<CompareBitmap numColorVariances="10" maxColorVariance="2" target="hg" url="../SparkDND/baselines/$testID.png" />
				<DispatchMouseEvent target="hg" type="mouseUp" localX="250" localY="8"  waitTarget="l1" waitEvent="dragComplete" />
				<WaitForEffectsToEnd/>
				
			</body>
		</TestCase>
		<TestCase testID="SparkListAbcDND1_dragProxy" keywords="[DragDrop, List]" description="">
			<setup>
				<ResetComponent target="l1" className="spark.components.List" waitEvent="updateComplete" />
				<ResetComponent target="l2" className="spark.components.List"      waitEvent="updateComplete" />
				<SetProperty target="l1" propertyName="itemRenderer"  valueExpression ="value= new ClassFactory( comps.ItemWithBorder )"  />
				<SetProperty target="l2" propertyName="itemRenderer"  valueExpression ="value= new ClassFactory( comps.ItemWithBorder )"  />
				<SetProperty target="l1" propertyName="dataProvider" valueExpression="value=application.createAbc()" waitEvent="updateComplete" waitTarget="l1.dataGroup"/>
				<SetProperty target="l2" propertyName="dataProvider" valueExpression="value=application.createAbc()" waitEvent="updateComplete" waitTarget="l2"/>
				<SetProperty target="l1" propertyName="height" value="200" waitEvent="updateComplete" waitTarget="l1"/>
				<SetProperty target="l2" propertyName="height" value="200" waitEvent="updateComplete" waitTarget="l2"/>
				<SetProperty target="l1" propertyName="selectedIndex" value="0" />
				<SetProperty target="l1" propertyName="dragEnabled" value="true" />
				<SetProperty target="l2" propertyName="dropEnabled" value="true" />
				<SetProperty target="l1.layout" propertyName="dragScrollInitialDelay" value="0" />
				<SetProperty target="l2.layout" propertyName="dragScrollInitialDelay" value="0" />
			</setup>
			<body>
				<RunCode code="DragManager.endDrag()" />
				<WaitForEffectsToEnd/>
				<DispatchMouseEvent target="l1"  type="mouseUp"  localX="10" localY="10" />
				<DispatchMouseEvent target="l1"  type="mouseOver" buttonDown="false" localX="10" localY="10" />
				<DispatchMouseClickEvent target="l1"    localX="20" localY="10" waitEvent="click" waitTarget="l1"/>
				<DispatchMouseEvent target="l1"  type="mouseDown" buttonDown="true"  localX="10" localY="10" />
				<DispatchMouseEvent target="l1"  type="mouseMove" buttonDown="true"  localX="50" localY="12" />
				<DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="5" localY="10" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="updateComplete"/>
				<DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="10" localY="5" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="move"/>
				
				<CompareBitmap numColorVariances="7" maxColorVariance="20" target="hg" url="../SparkDND/baselines/$testID.png" />
				<DispatchMouseEvent target="hg" type="mouseUp" localX="250" localY="8"  waitTarget="l1" waitEvent="dragComplete" />
				<WaitForEffectsToEnd/>
				
			</body>
		</TestCase>
		
		<TestCase testID="SparkListDupNullDND1_copy" keywords="[DragDrop, List]" description="">
			<setup>
				<ResetComponent target="l1" className="spark.components.List" waitEvent="updateComplete" />
				<ResetComponent target="l2" className="spark.components.List"      waitEvent="updateComplete" />
				<SetProperty target="l1" propertyName="itemRenderer"  valueExpression ="value= new ClassFactory( comps.ItemWithBorder )"  />
				<SetProperty target="l2" propertyName="itemRenderer"  valueExpression ="value= new ClassFactory( comps.ItemWithBorder )"  />
				<SetProperty target="l1" propertyName="dataProvider" valueExpression="value=application.createNullDupData()" waitEvent="updateComplete" waitTarget="l1.dataGroup"/>
				<SetProperty target="l2" propertyName="dataProvider" valueExpression="value=application.createNullDupData()" waitEvent="updateComplete" waitTarget="l2"/>
				<SetProperty target="l1" propertyName="height" value="200" waitEvent="updateComplete" waitTarget="l1"/>
				<SetProperty target="l2" propertyName="height" value="200" waitEvent="updateComplete" waitTarget="l2"/>
				<SetProperty target="l1" propertyName="selectedIndex" value="0" />
				<SetProperty target="l1" propertyName="dragEnabled" value="true" />
				<SetProperty target="l2" propertyName="dragEnabled" value="true" />
				<SetProperty target="l2" propertyName="dropEnabled" value="true" />
				
				<SetProperty target="l1.layout" propertyName="dragScrollInitialDelay" value="0" />
				<SetProperty target="l2.layout" propertyName="dragScrollInitialDelay" value="0" />
			</setup>
			<body>
				<RunCode code="DragManager.endDrag()" />
				<WaitForEffectsToEnd/>
				<DispatchMouseEvent target="l1"  type="mouseUp"  localX="10" localY="10" />
				<DispatchMouseEvent target="l1"  type="mouseOver" buttonDown="false" localX="10" localY="10" />
				<DispatchMouseClickEvent target="l1"    localX="20" localY="10" waitEvent="click" waitTarget="l1"/>
				<DispatchMouseEvent target="l1"  type="mouseDown" buttonDown="true"  localX="10" localY="10" />
				<DispatchMouseEvent target="l1"  type="mouseMove" buttonDown="true"  localX="50" localY="12" />
				<DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="15" localY="10" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="updateComplete"/>
				<DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="50" localY="30" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="move"/>
				<DispatchMouseEvent target="l2" type="mouseUp" localX="50" localY="30"  waitTarget="l1" waitEvent="dragComplete" />
				<WaitForEffectsToEnd/>
				<CompareBitmap numColorVariances="7" maxColorVariance="20" target="hg" url="../SparkDND/baselines/$testID.png" />
			</body>
		</TestCase>
		<TestCase testID="SparkListDupNullDND1_move" keywords="[DragDrop, List]" description="">
			<setup>
				<ResetComponent target="l1" className="spark.components.List" waitEvent="updateComplete" />
				<ResetComponent target="l2" className="spark.components.List"      waitEvent="updateComplete" />
				<SetProperty target="l1" propertyName="itemRenderer"  valueExpression ="value= new ClassFactory( comps.ItemWithBorder )"  />
				<SetProperty target="l2" propertyName="itemRenderer"  valueExpression ="value= new ClassFactory( comps.ItemWithBorder )"  />
				<SetProperty target="l1" propertyName="dataProvider" valueExpression="value=application.createNullDupData()" waitEvent="updateComplete" waitTarget="l1.dataGroup"/>
				<SetProperty target="l2" propertyName="dataProvider" valueExpression="value=application.createNullDupData()" waitEvent="updateComplete" waitTarget="l2"/>
				<SetProperty target="l1" propertyName="height" value="200" waitEvent="updateComplete" waitTarget="l1"/>
				<SetProperty target="l2" propertyName="height" value="200" waitEvent="updateComplete" waitTarget="l2"/>
				<SetProperty target="l1" propertyName="selectedIndex" value="0" />
				<SetProperty target="l1" propertyName="dragEnabled" value="true" />
				<SetProperty target="l1" propertyName="dragMoveEnabled" value="true" />
				<SetProperty target="l2" propertyName="dropEnabled" value="true" />
				
				<SetProperty target="l1.layout" propertyName="dragScrollInitialDelay" value="0" />
				<SetProperty target="l2.layout" propertyName="dragScrollInitialDelay" value="0" />
			</setup>
			<body>
				<RunCode code="DragManager.endDrag()" />
				<WaitForEffectsToEnd/>
				<DispatchMouseEvent target="l1"  type="mouseUp"  localX="10" localY="10" />
				<DispatchMouseEvent target="l1"  type="mouseOver" buttonDown="false" localX="10" localY="10" />
				<DispatchMouseClickEvent target="l1"    localX="20" localY="10" waitEvent="click" waitTarget="l1"/>
				<DispatchMouseEvent target="l1"  type="mouseDown" buttonDown="true"  localX="10" localY="10" />
				<DispatchMouseEvent target="l1"  type="mouseMove" buttonDown="true"  localX="50" localY="12" />
				<DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="15" localY="10" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="updateComplete"/>
				<DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="50" localY="30" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="move"/>
				<DispatchMouseEvent target="l2" type="mouseUp" localX="50" localY="30"  waitTarget="l1" waitEvent="dragComplete" />
				<WaitForEffectsToEnd/>
				<CompareBitmap numColorVariances="7" maxColorVariance="20" target="hg" url="../SparkDND/baselines/$testID.png" />
			</body>
		</TestCase>
		<TestCase testID="SparkListDupNullDND1_move1" keywords="[DragDrop, List]" description="">
			<setup>
				<ResetComponent target="l1" className="spark.components.List" waitEvent="updateComplete" />
				<ResetComponent target="l2" className="spark.components.List"      waitEvent="updateComplete" />
				<SetProperty target="l1" propertyName="itemRenderer"  valueExpression ="value= new ClassFactory( comps.ItemWithBorder )"  />
				<SetProperty target="l2" propertyName="itemRenderer"  valueExpression ="value= new ClassFactory( comps.ItemWithBorder )"  />
				<SetProperty target="l1" propertyName="dataProvider" valueExpression="value=application.createNullDupData()" waitEvent="updateComplete" waitTarget="l1.dataGroup"/>
				<SetProperty target="l2" propertyName="dataProvider" valueExpression="value=application.createNullDupData()" waitEvent="updateComplete" waitTarget="l2"/>
				<SetProperty target="l1" propertyName="height" value="200" waitEvent="updateComplete" waitTarget="l1"/>
				<SetProperty target="l2" propertyName="height" value="200" waitEvent="updateComplete" waitTarget="l2"/>
				<SetProperty target="l1" propertyName="selectedIndex" value="0" />
				<SetProperty target="l1" propertyName="dragEnabled" value="true" />
				<SetProperty target="l1" propertyName="dragMoveEnabled" value="true" />
				<SetProperty target="l2" propertyName="dropEnabled" value="true" />
				<SetProperty target="l1" propertyName="height" value="105" />
				<SetProperty target="l1.layout" propertyName="dragScrollInitialDelay" value="0" />
				<SetProperty target="l2.layout" propertyName="dragScrollInitialDelay" value="0" />
			</setup>
			<body>
				<RunCode code="DragManager.endDrag()" />
				<WaitForEffectsToEnd/>
				<DispatchMouseEvent target="l1"  type="mouseUp"  localX="10" localY="10" />
				<DispatchMouseEvent target="l1"  type="mouseOver" buttonDown="false" localX="10" localY="10" />
				<DispatchMouseClickEvent target="l1"    localX="20" localY="10" waitEvent="click" waitTarget="l1"/>
				<DispatchMouseEvent target="l1"  type="mouseDown" buttonDown="true"  localX="10" localY="10" />
				<DispatchMouseEvent target="l1"  type="mouseMove" buttonDown="true"  localX="50" localY="12" />
				<DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="15" localY="100" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="updateComplete"/>
				<DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="50" localY="100" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="move"/>
				<DispatchMouseEvent target="l2" type="mouseUp" localX="50" localY="100"  waitTarget="l1" waitEvent="dragComplete" />
				<WaitForEffectsToEnd/>
				<CompareBitmap numColorVariances="7" maxColorVariance="20" target="hg" url="../SparkDND/baselines/$testID.png" />
			</body>
		</TestCase>
		<TestCase testID="SparkListDupNullDND1_rejectDrop1" keywords="[DragDrop, List]" description="">
			<setup>
				<ResetComponent target="l1" className="spark.components.List" waitEvent="updateComplete" />
				<ResetComponent target="l2" className="spark.components.List"      waitEvent="updateComplete" />
				<SetProperty target="l1" propertyName="itemRenderer"  valueExpression ="value= new ClassFactory( comps.ItemWithBorder )"  />
				<SetProperty target="l2" propertyName="itemRenderer"  valueExpression ="value= new ClassFactory( comps.ItemWithBorder )"  />
				<SetProperty target="l1" propertyName="dataProvider" valueExpression="value=application.createNullDupData()" waitEvent="updateComplete" waitTarget="l1.dataGroup"/>
				<SetProperty target="l2" propertyName="dataProvider" valueExpression="value=application.createNullDupData()" waitEvent="updateComplete" waitTarget="l2"/>
				<SetProperty target="l1" propertyName="height" value="200" waitEvent="updateComplete" waitTarget="l1"/>
				<SetProperty target="l2" propertyName="height" value="200" waitEvent="updateComplete" waitTarget="l2"/>
				<SetProperty target="l1" propertyName="selectedIndex" value="0" />
				<SetProperty target="l1" propertyName="dragEnabled" value="true" />
				<SetProperty target="l1" propertyName="dragMoveEnabled" value="true" />
				<SetProperty target="l1.layout" propertyName="dragScrollInitialDelay" value="0" />
				<SetProperty target="l2.layout" propertyName="dragScrollInitialDelay" value="0" />
			</setup>
			<body>
				<RunCode code="DragManager.endDrag()" />
				<WaitForEffectsToEnd/>
				<DispatchMouseEvent target="l1"  type="mouseUp"  localX="10" localY="10" />
				<DispatchMouseEvent target="l1"  type="mouseOver" buttonDown="false" localX="10" localY="10" />
				<DispatchMouseClickEvent target="l1"    localX="20" localY="10" waitEvent="click" waitTarget="l1"/>
				<DispatchMouseEvent target="l1"  type="mouseDown" buttonDown="true"  localX="10" localY="10" />
				<DispatchMouseEvent target="l1"  type="mouseMove" buttonDown="true"  localX="50" localY="12" />
				<DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="15" localY="10" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="updateComplete"/>
				<DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="50" localY="30" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="move"/>
				<DispatchMouseEvent target="l2" type="mouseUp" localX="50" localY="30"  waitTarget="l1" waitEvent="dragComplete" />
				<WaitForEffectsToEnd/>
				<CompareBitmap numColorVariances="7" maxColorVariance="20" target="hg" url="../SparkDND/baselines/$testID.png" />
			</body>
		</TestCase>
		
		<TestCase testID="SparkListDupNullDND1_moveAll" keywords="[DragDrop, List]" description="">
			<setup>
				<ResetComponent target="l1" className="spark.components.List" waitEvent="updateComplete" />
				<ResetComponent target="l2" className="spark.components.List"      waitEvent="updateComplete" />
				<SetProperty target="l1" propertyName="itemRenderer"  valueExpression ="value= new ClassFactory( comps.ItemWithBorder )"  />
				<SetProperty target="l2" propertyName="itemRenderer"  valueExpression ="value= new ClassFactory( comps.ItemWithBorder )"  />
				<SetProperty target="l1" propertyName="dataProvider" valueExpression="value=application.createNullDupData()" waitEvent="updateComplete" waitTarget="l1.dataGroup"/>
				<SetProperty target="l2" propertyName="dataProvider" valueExpression="value=application.createNullDupData()" waitEvent="updateComplete" waitTarget="l2"/>
				<SetProperty target="l1" propertyName="height" value="200" waitEvent="updateComplete" waitTarget="l1"/>
				<SetProperty target="l2" propertyName="height" value="200" waitEvent="updateComplete" waitTarget="l2"/>
				<SetProperty target="l1" propertyName="dragEnabled" value="true" />
				<SetProperty target="l1" propertyName="dragMoveEnabled" value="true" />
				<SetProperty target="l2" propertyName="dropEnabled" value="true" />
				<SetProperty target="l1" propertyName="allowMultipleSelection" value="true" />
				
				<SetProperty target="l1.layout" propertyName="dragScrollInitialDelay" value="0" />
				<SetProperty target="l2.layout" propertyName="dragScrollInitialDelay" value="0" />
			</setup>
			<body>
				<RunCode code="DragManager.endDrag()" />
				<WaitForEffectsToEnd/>
				<DispatchMouseEvent target="l1"  type="mouseUp"  localX="10" localY="10" />
				<DispatchMouseEvent target="l1"  type="mouseOver" buttonDown="false" localX="10" localY="10" />
				<DispatchMouseClickEvent target="l1"    localX="20" localY="10" waitEvent="click" waitTarget="l1"/>
				<DispatchKeyEvent keys="[END]"  waitTarget="l1" shiftKey="true" waitEvent="updateComplete"/>
				
				<DispatchMouseEvent target="l1"  type="mouseDown" buttonDown="true"  localX="10" localY="10" />
				<DispatchMouseEvent target="l1"  type="mouseMove" buttonDown="true"  localX="50" localY="12" />
				<DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="15" localY="10" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="updateComplete"/>
				<DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="50" localY="30" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="move"/>
				<DispatchMouseEvent target="l2" type="mouseUp" localX="50" localY="30"  waitTarget="l1" waitEvent="dragComplete" />
				<WaitForEffectsToEnd/>
				<CompareBitmap numColorVariances="7" maxColorVariance="20" target="hg" url="../SparkDND/baselines/$testID.png" />
			</body>
		</TestCase>
		<TestCase testID="SparkListDupNullDND1_rejectAll" keywords="[DragDrop, List]" description="">
			<setup>
				<ResetComponent target="l1" className="spark.components.List" waitEvent="updateComplete" />
				<ResetComponent target="l2" className="spark.components.List"      waitEvent="updateComplete" />
				<SetProperty target="l1" propertyName="itemRenderer"  valueExpression ="value= new ClassFactory( comps.ItemWithBorder )"  />
				<SetProperty target="l2" propertyName="itemRenderer"  valueExpression ="value= new ClassFactory( comps.ItemWithBorder )"  />
				<SetProperty target="l1" propertyName="dataProvider" valueExpression="value=application.createNullDupData()" waitEvent="updateComplete" waitTarget="l1.dataGroup"/>
				<SetProperty target="l2" propertyName="dataProvider" valueExpression="value=application.createNullDupData()" waitEvent="updateComplete" waitTarget="l2"/>
				<SetProperty target="l1" propertyName="height" value="200" waitEvent="updateComplete" waitTarget="l1"/>
				<SetProperty target="l2" propertyName="height" value="200" waitEvent="updateComplete" waitTarget="l2"/>
				<SetProperty target="l1" propertyName="dragEnabled" value="true" />
				<SetProperty target="l1" propertyName="dragMoveEnabled" value="true" />
				
				<SetProperty target="l1" propertyName="allowMultipleSelection" value="true" />
				
				<SetProperty target="l1.layout" propertyName="dragScrollInitialDelay" value="0" />
				<SetProperty target="l2.layout" propertyName="dragScrollInitialDelay" value="0" />
			</setup>
			<body>
				<RunCode code="DragManager.endDrag()" />
				<WaitForEffectsToEnd/>
				<DispatchMouseEvent target="l1"  type="mouseUp"  localX="10" localY="10" />
				<DispatchMouseEvent target="l1"  type="mouseOver" buttonDown="false" localX="10" localY="10" />
				<DispatchMouseClickEvent target="l1"    localX="20" localY="10" waitEvent="click" waitTarget="l1"/>
				<DispatchKeyEvent keys="[END]"  waitTarget="l1" shiftKey="true" waitEvent="updateComplete"/>
				<DispatchMouseEvent target="l1"  type="mouseDown" buttonDown="true"  localX="10" localY="10" />
				<DispatchMouseEvent target="l1"  type="mouseMove" buttonDown="true"  localX="50" localY="12" />
				<DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="5" localY="5" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="updateComplete"/>
				<DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="8" localY="8" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="move"/>
				<CompareBitmap numColorVariances="10" maxColorVariance="2" target="hg" url="../SparkDND/baselines/$testID.png" />
				<DispatchMouseEvent target="l2" type="mouseUp" localX="50" localY="30"  waitTarget="l1" waitEvent="dragComplete" />
				<WaitForEffectsToEnd/>
				
			</body>
		</TestCase>
		
		<TestCase testID="SparkListDupNullDND1_rejectDrop2" keywords="[DragDrop, List]" description="">
			<setup>
				<ResetComponent target="l1" className="spark.components.List" waitEvent="updateComplete" />
				<ResetComponent target="l2" className="spark.components.List"      waitEvent="updateComplete" />
				<SetProperty target="l1" propertyName="itemRenderer"  valueExpression ="value= new ClassFactory( comps.ItemWithBorder )"  />
				<SetProperty target="l2" propertyName="itemRenderer"  valueExpression ="value= new ClassFactory( comps.ItemWithBorder )"  />
				<SetProperty target="l1" propertyName="dataProvider" valueExpression="value=application.createNullDupData()" waitEvent="updateComplete" waitTarget="l1.dataGroup"/>
				<SetProperty target="l2" propertyName="dataProvider" valueExpression="value=application.createNullDupData()" waitEvent="updateComplete" waitTarget="l2"/>
				<SetProperty target="l1" propertyName="height" value="200" waitEvent="updateComplete" waitTarget="l1"/>
				<SetProperty target="l2" propertyName="height" value="200" waitEvent="updateComplete" waitTarget="l2"/>
				<SetProperty target="l1" propertyName="selectedIndex" value="0" />
				<SetProperty target="l1" propertyName="dragEnabled" value="true" />
				<SetProperty target="l2" propertyName="dropEnabled" value="false" />
				<SetProperty target="l1.layout" propertyName="dragScrollInitialDelay" value="0" />
				<SetProperty target="l2.layout" propertyName="dragScrollInitialDelay" value="0" />
			</setup>
			<body>
				<RunCode code="DragManager.endDrag()" />
				<WaitForEffectsToEnd/>
				<DispatchMouseEvent target="l1"  type="mouseUp"  localX="10" localY="10" />
				<DispatchMouseEvent target="l1"  type="mouseOver" buttonDown="false" localX="10" localY="10" />
				<DispatchMouseClickEvent target="l1"    localX="20" localY="10" waitEvent="click" waitTarget="l1" />
				<DispatchMouseEvent target="l1"  type="mouseDown" buttonDown="true"  localX="10" localY="10" />
				<DispatchMouseEvent target="l1"  type="mouseMove" buttonDown="true"  localX="50" localY="12" />
				<DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="5" localY="10" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="updateComplete"/>
				<DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="10" localY="5" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="move"/>
				
				<CompareBitmap numColorVariances="10" maxColorVariance="1" target="hg" url="../SparkDND/baselines/$testID.png" />
				<DispatchMouseEvent target="hg" type="mouseUp" localX="250" localY="8"  waitTarget="l1" waitEvent="dragComplete" />
				<WaitForEffectsToEnd/>
				
			</body>
		</TestCase>
		
		<TestCase testID="SparkListDupNullDND1_dragProxy" keywords="[DragDrop, List]" description="">
			<setup>
				<ResetComponent target="l1" className="spark.components.List" waitEvent="updateComplete" />
				<ResetComponent target="l2" className="spark.components.List"      waitEvent="updateComplete" />
				<SetProperty target="l1" propertyName="itemRenderer"  valueExpression ="value= new ClassFactory( comps.ItemWithBorder )"  />
				<SetProperty target="l2" propertyName="itemRenderer"  valueExpression ="value= new ClassFactory( comps.ItemWithBorder )"  />
				<SetProperty target="l1" propertyName="dataProvider" valueExpression="value=application.createNullDupData()" waitEvent="updateComplete" waitTarget="l1.dataGroup"/>
				<SetProperty target="l2" propertyName="dataProvider" valueExpression="value=application.createNullDupData()" waitEvent="updateComplete" waitTarget="l2"/>
				<SetProperty target="l1" propertyName="height" value="200" waitEvent="updateComplete" waitTarget="l1"/>
				<SetProperty target="l2" propertyName="height" value="200" waitEvent="updateComplete" waitTarget="l2"/>
				<SetProperty target="l1" propertyName="selectedIndex" value="0" />
				<SetProperty target="l1" propertyName="dragEnabled" value="true" />
				<SetProperty target="l2" propertyName="dropEnabled" value="true" />
				<SetProperty target="l1.layout" propertyName="dragScrollInitialDelay" value="0" />
				<SetProperty target="l2.layout" propertyName="dragScrollInitialDelay" value="0" />
			</setup>
			<body>
				<RunCode code="DragManager.endDrag()" />
				<WaitForEffectsToEnd/>
				<DispatchMouseEvent target="l1"  type="mouseUp"  localX="10" localY="10" />
				<DispatchMouseEvent target="l1"  type="mouseOver" buttonDown="false" localX="10" localY="10" />
				<DispatchMouseClickEvent target="l1"    localX="20" localY="10" waitEvent="click" waitTarget="l1"/>
				<DispatchMouseEvent target="l1"  type="mouseDown" buttonDown="true"  localX="10" localY="10" />
				<DispatchMouseEvent target="l1"  type="mouseMove" buttonDown="true"  localX="50" localY="12" />
				<DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="5" localY="10" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="updateComplete"/>
				<DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="10" localY="5" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="move"/>
				
				<CompareBitmap numColorVariances="7" maxColorVariance="20" target="hg" url="../SparkDND/baselines/$testID.png" />
				<DispatchMouseEvent target="hg" type="mouseUp" localX="250" localY="8"  waitTarget="l1" waitEvent="dragComplete" />
				<WaitForEffectsToEnd/>
				
			</body>
		</TestCase>
		
		<TestCase testID="SparkSortedList_copy" keywords="[DragDrop, List]" description="">
			<setup>
				<ResetComponent target="l1" className="spark.components.List" waitEvent="updateComplete" />
				<ResetComponent target="l2" className="spark.components.List"      waitEvent="updateComplete" />
				<SetProperty target="l1" propertyName="itemRenderer"  valueExpression ="value= new ClassFactory( comps.ItemWithBorder )"  />
				<SetProperty target="l2" propertyName="itemRenderer"  valueExpression ="value= new ClassFactory( comps.ItemWithBorder )"  />
				<SetProperty target="l1" propertyName="dataProvider" valueExpression="value=application.sortAC()" waitEvent="updateComplete" waitTarget="l1"/>
				<SetProperty target="l2" propertyName="dataProvider" valueExpression="value=application.createPlayersAC()" waitEvent="updateComplete" waitTarget="l2"/>
				<SetProperty target="l1" propertyName="labelField" value="lastName" waitEvent="updateComplete" waitTarget="l1"/>
				<SetProperty target="l2" propertyName="labelField" value="firstName" waitEvent="updateComplete" waitTarget="l2"/>
				<SetProperty target="l1" propertyName="selectedIndex" value="0" />
				<SetProperty target="l1" propertyName="dragEnabled" value="true" />
				<SetProperty target="l2" propertyName="dragEnabled" value="true" />
				<SetProperty target="l2" propertyName="dropEnabled" value="true" />
				
				<SetProperty target="l1.layout" propertyName="dragScrollInitialDelay" value="0" />
				<SetProperty target="l2.layout" propertyName="dragScrollInitialDelay" value="0" />
			</setup>
			<body>
				<RunCode code="DragManager.endDrag()" />
				<WaitForEffectsToEnd/>
				<DispatchMouseEvent target="l1"  type="mouseUp"  localX="10" localY="10" />
				<DispatchMouseEvent target="l1"  type="mouseOver" buttonDown="false" localX="10" localY="10" />
				<DispatchMouseClickEvent target="l1"    localX="20" localY="10" waitEvent="click" waitTarget="l1"/>
				<DispatchMouseEvent target="l1"  type="mouseDown" buttonDown="true"  localX="10" localY="10" />
				<DispatchMouseEvent target="l1"  type="mouseMove" buttonDown="true"  localX="50" localY="12" />
				<DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="15" localY="10" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="updateComplete"/>
				<DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="50" localY="30" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="move"/>
				<DispatchMouseEvent target="l2" type="mouseUp" localX="50" localY="30"  waitTarget="l1" waitEvent="dragComplete" />
				<WaitForEffectsToEnd/>
				<CompareBitmap numColorVariances="7" maxColorVariance="20" target="hg" url="../SparkDND/baselines/$testID.png" />
			</body>
		</TestCase>
		
		<TestCase testID="SparkSortedList_move" keywords="[DragDrop, List]" description="">
			<setup>
				<ResetComponent target="l1" className="spark.components.List" waitEvent="updateComplete" />
				<ResetComponent target="l2" className="spark.components.List"      waitEvent="updateComplete" />
				<SetProperty target="l1" propertyName="itemRenderer"  valueExpression ="value= new ClassFactory( comps.ItemWithBorder )"  />
				<SetProperty target="l2" propertyName="itemRenderer"  valueExpression ="value= new ClassFactory( comps.ItemWithBorder )"  />
				<SetProperty target="l1" propertyName="dataProvider" valueExpression="value=application.sortAC()" waitEvent="updateComplete" waitTarget="l1"/>
				<SetProperty target="l2" propertyName="dataProvider" valueExpression="value=application.createPlayersAC()" waitEvent="updateComplete" waitTarget="l2"/>
				<SetProperty target="l1" propertyName="labelField" value="lastName" waitEvent="updateComplete" waitTarget="l1"/>
				<SetProperty target="l2" propertyName="labelField" value="firstName" waitEvent="updateComplete" waitTarget="l2"/>
				<SetProperty target="l1" propertyName="selectedIndex" value="0" />
				<SetProperty target="l1" propertyName="dragEnabled" value="true" />
				<SetProperty target="l1" propertyName="dragMoveEnabled" value="true" />
				<SetProperty target="l2" propertyName="dropEnabled" value="true" />
				
				<SetProperty target="l1.layout" propertyName="dragScrollInitialDelay" value="0" />
				<SetProperty target="l2.layout" propertyName="dragScrollInitialDelay" value="0" />
			</setup>
			<body>
				<RunCode code="DragManager.endDrag()" />
				<WaitForEffectsToEnd/>
				<DispatchMouseEvent target="l1"  type="mouseUp"  localX="10" localY="10" />
				<DispatchMouseEvent target="l1"  type="mouseOver" buttonDown="false" localX="10" localY="10" />
				<DispatchMouseClickEvent target="l1"    localX="20" localY="10" waitEvent="click" waitTarget="l1"/>
				<DispatchMouseEvent target="l1"  type="mouseDown" buttonDown="true"  localX="10" localY="10" />
				<DispatchMouseEvent target="l1"  type="mouseMove" buttonDown="true"  localX="50" localY="12" />
				<DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="15" localY="10" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="updateComplete"/>
				<DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="50" localY="30" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="move"/>
				<DispatchMouseEvent target="l2" type="mouseUp" localX="50" localY="30"  waitTarget="l1" waitEvent="dragComplete" />
				<WaitForEffectsToEnd/>
				<CompareBitmap numColorVariances="7" maxColorVariance="20" target="hg" url="../SparkDND/baselines/$testID.png" />
			</body>
		</TestCase>
		
		<TestCase testID="SparkSortedList_move1" keywords="[DragDrop, List]" description="">
			<setup>
				<ResetComponent target="l1" className="spark.components.List" waitEvent="updateComplete" />
				<ResetComponent target="l2" className="spark.components.List"      waitEvent="updateComplete" />
				<SetProperty target="l1" propertyName="itemRenderer"  valueExpression ="value= new ClassFactory( comps.ItemWithBorder )"  />
				<SetProperty target="l2" propertyName="itemRenderer"  valueExpression ="value= new ClassFactory( comps.ItemWithBorder )"  />
				<SetProperty target="l1" propertyName="dataProvider" valueExpression="value=application.sortAC()" waitEvent="updateComplete" waitTarget="l1"/>
				<SetProperty target="l2" propertyName="dataProvider" valueExpression="value=application.createPlayersAC()" waitEvent="updateComplete" waitTarget="l2"/>
				<SetProperty target="l1" propertyName="labelField" value="lastName" waitEvent="updateComplete" waitTarget="l1"/>
				<SetProperty target="l2" propertyName="labelField" value="firstName" waitEvent="updateComplete" waitTarget="l2"/>
				<SetProperty target="l1" propertyName="selectedIndex" value="0" />
				<SetProperty target="l1" propertyName="dragEnabled" value="true" />
				<SetProperty target="l1" propertyName="dragMoveEnabled" value="true" />
				<SetProperty target="l2" propertyName="dropEnabled" value="true" />
				<SetProperty target="l1" propertyName="height" value="105" />
				<SetProperty target="l1.layout" propertyName="dragScrollInitialDelay" value="0" />
				<SetProperty target="l2.layout" propertyName="dragScrollInitialDelay" value="0" />
			</setup>
			<body>
				<RunCode code="DragManager.endDrag()" />
				<WaitForEffectsToEnd/>
				<DispatchMouseEvent target="l1"  type="mouseUp"  localX="10" localY="10" />
				<DispatchMouseEvent target="l1"  type="mouseOver" buttonDown="false" localX="10" localY="10" />
				<DispatchMouseClickEvent target="l1"    localX="20" localY="10" waitEvent="click" waitTarget="l1"/>
				<DispatchMouseEvent target="l1"  type="mouseDown" buttonDown="true"  localX="10" localY="10" />
				<DispatchMouseEvent target="l1"  type="mouseMove" buttonDown="true"  localX="50" localY="12" />
				<DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="15" localY="100" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="updateComplete"/>
				<DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="50" localY="100" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="move"/>
				<DispatchMouseEvent target="l2" type="mouseUp" localX="50" localY="100"  waitTarget="l1" waitEvent="dragComplete" />
				<WaitForEffectsToEnd/>
				<CompareBitmap numColorVariances="7" maxColorVariance="20" target="hg" url="../SparkDND/baselines/$testID.png" />
			</body>
		</TestCase>
		
		<TestCase testID="SparkSortedList_rejectDrop1" keywords="[DragDrop, List]" description="">
			<setup>
				<ResetComponent target="l1" className="spark.components.List" waitEvent="updateComplete" />
				<ResetComponent target="l2" className="spark.components.List"      waitEvent="updateComplete" />
				<SetProperty target="l1" propertyName="itemRenderer"  valueExpression ="value= new ClassFactory( comps.ItemWithBorder )"  />
				<SetProperty target="l2" propertyName="itemRenderer"  valueExpression ="value= new ClassFactory( comps.ItemWithBorder )"  />
				<SetProperty target="l1" propertyName="dataProvider" valueExpression="value=application.sortAC()" waitEvent="updateComplete" waitTarget="l1"/>
				<SetProperty target="l2" propertyName="dataProvider" valueExpression="value=application.createPlayersAC()" waitEvent="updateComplete" waitTarget="l2"/>
				<SetProperty target="l1" propertyName="labelField" value="lastName" waitEvent="updateComplete" waitTarget="l1"/>
				<SetProperty target="l2" propertyName="labelField" value="firstName" waitEvent="updateComplete" waitTarget="l2"/>
				<SetProperty target="l1" propertyName="selectedIndex" value="0" />
				<SetProperty target="l1" propertyName="dragEnabled" value="true" />
				<SetProperty target="l1" propertyName="dragMoveEnabled" value="true" />
				<SetProperty target="l1.layout" propertyName="dragScrollInitialDelay" value="0" />
				<SetProperty target="l2.layout" propertyName="dragScrollInitialDelay" value="0" />
			</setup>
			<body>
				<RunCode code="DragManager.endDrag()" />
				<WaitForEffectsToEnd/>
				<DispatchMouseEvent target="l1"  type="mouseUp"  localX="10" localY="10" />
				<DispatchMouseEvent target="l1"  type="mouseOver" buttonDown="false" localX="10" localY="10" />
				<DispatchMouseClickEvent target="l1"    localX="20" localY="10" waitEvent="click" waitTarget="l1"/>
				<DispatchMouseEvent target="l1"  type="mouseDown" buttonDown="true"  localX="10" localY="10" />
				<DispatchMouseEvent target="l1"  type="mouseMove" buttonDown="true"  localX="50" localY="12" />
				<DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="15" localY="10" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="updateComplete"/>
				<DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="50" localY="30" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="move"/>
				<CompareBitmap numColorVariances="20" maxColorVariance="1" target="hg" url="../SparkDND/baselines/$testID.png" />
				<DispatchMouseEvent target="l2" type="mouseUp" localX="50" localY="30"  waitTarget="l1" waitEvent="dragComplete" />
				<WaitForEffectsToEnd/>
				
			</body>
		</TestCase>
		
		<TestCase testID="SparkSortedList_dragProxy" keywords="[DragDrop, List]" description="">
			<setup>
				<ResetComponent target="l1" className="spark.components.List" waitEvent="updateComplete" />
				<ResetComponent target="l2" className="spark.components.List"      waitEvent="updateComplete" />
				<SetProperty target="l1" propertyName="itemRenderer"  valueExpression ="value= new ClassFactory( comps.ItemWithBorder )"  />
				<SetProperty target="l2" propertyName="itemRenderer"  valueExpression ="value= new ClassFactory( comps.ItemWithBorder )"  />
				<SetProperty target="l1" propertyName="dataProvider" valueExpression="value=application.sortAC()" waitEvent="updateComplete" waitTarget="l1"/>
				<SetProperty target="l2" propertyName="dataProvider" valueExpression="value=application.createPlayersAC()" waitEvent="updateComplete" waitTarget="l2"/>
				<SetProperty target="l1" propertyName="labelField" value="lastName" waitEvent="updateComplete" waitTarget="l1"/>
				<SetProperty target="l2" propertyName="labelField" value="firstName" waitEvent="updateComplete" waitTarget="l2"/>
				<SetProperty target="l1" propertyName="selectedIndex" value="0" />
				<SetProperty target="l1" propertyName="dragEnabled" value="true" />
				<SetProperty target="l2" propertyName="dropEnabled" value="true" />
				<SetProperty target="l1.layout" propertyName="dragScrollInitialDelay" value="0" />
				<SetProperty target="l2.layout" propertyName="dragScrollInitialDelay" value="0" />
			</setup>
			<body>
				<RunCode code="DragManager.endDrag()" />
				<WaitForEffectsToEnd/>
				<DispatchMouseEvent target="l1"  type="mouseUp"  localX="10" localY="10" />
				<DispatchMouseEvent target="l1"  type="mouseOver" buttonDown="false" localX="10" localY="10" />
				<DispatchMouseClickEvent target="l1"    localX="20" localY="10" waitEvent="click" waitTarget="l1"/>
				<DispatchMouseEvent target="l1"  type="mouseDown" buttonDown="true"  localX="10" localY="10" />
				<DispatchMouseEvent target="l1"  type="mouseMove" buttonDown="true"  localX="50" localY="12" />
				<DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="5" localY="10" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="updateComplete"/>
				<DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="10" localY="5" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="move"/>
				
				<CompareBitmap numColorVariances="7" maxColorVariance="20" target="hg" url="../SparkDND/baselines/$testID.png" />
				<DispatchMouseEvent target="hg" type="mouseUp" localX="250" localY="8"  waitTarget="l1" waitEvent="dragComplete" />
				<WaitForEffectsToEnd/>
			</body>
		</TestCase>
		<!--
		<TestCase testID="SparkSortedList_moveAll" keywords="[DragDrop, List]" description="">
		<setup>
		<ResetComponent target="l1" className="spark.components.List" waitEvent="updateComplete" />
		<ResetComponent target="l2" className="spark.components.List"      waitEvent="updateComplete" />
		<SetProperty target="l1" propertyName="itemRenderer"  valueExpression ="value= new ClassFactory( comps.ItemWithBorder )"  />
		<SetProperty target="l2" propertyName="itemRenderer"  valueExpression ="value= new ClassFactory( comps.ItemWithBorder )"  />
		<SetProperty target="l1" propertyName="dataProvider" valueExpression="value=application.sortAC()" waitEvent="updateComplete" waitTarget="l1"/>
		<SetProperty target="l2" propertyName="dataProvider" valueExpression="value=application.createPlayersAC()" waitEvent="updateComplete" waitTarget="l2"/>
		<SetProperty target="l1" propertyName="labelField" value="lastName" waitEvent="updateComplete" waitTarget="l1"/>
		<SetProperty target="l2" propertyName="labelField" value="firstName" waitEvent="updateComplete" waitTarget="l2"/>
		<SetProperty target="l1" propertyName="dragEnabled" value="true" />
		<SetProperty target="l1" propertyName="dragMoveEnabled" value="true" />
		<SetProperty target="l2" propertyName="dropEnabled" value="true" />
		<SetProperty target="l1" propertyName="allowMultipleSelection" value="true" />
		
		<SetProperty target="l1.layout" propertyName="dragScrollInitialDelay" value="0" />
		<SetProperty target="l2.layout" propertyName="dragScrollInitialDelay" value="0" />
		</setup>
		<body>
		<RunCode code="DragManager.endDrag()" />
		<WaitForEffectsToEnd/>
		<DispatchMouseEvent target="l1"  type="mouseUp"  localX="10" localY="10" />
		<DispatchMouseEvent target="l1"  type="mouseOver" buttonDown="false" localX="10" localY="10" />
		<DispatchMouseClickEvent target="l1"    localX="20" localY="10" waitEvent="click" waitTarget="l1"/>
		<DispatchKeyEvent keys="[END]"  waitTarget="l1" shiftKey="true" waitEvent="updateComplete"/>
		
		<DispatchMouseEvent target="l1"  type="mouseDown" buttonDown="true"  localX="10" localY="10" />
		<DispatchMouseEvent target="l1"  type="mouseMove" buttonDown="true"  localX="50" localY="12" />
		<DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="15" localY="10" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="updateComplete"/>
		<DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="50" localY="30" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="move"/>
		<DispatchMouseEvent target="l2" type="mouseUp" localX="50" localY="30"  waitTarget="l1" waitEvent="dragComplete" />
		<WaitForEffectsToEnd/>
		<CompareBitmap numColorVariances="7" maxColorVariance="20" target="hg" url="../SparkDND/baselines/$testID.png" />
		</body>
		</TestCase>
		-->
		<TestCase testID="SparkSortedList_rejectAll" keywords="[DragDrop, List]" description="">
			<setup>
				<ResetComponent target="l1" className="spark.components.List" waitEvent="updateComplete" />
				<ResetComponent target="l2" className="spark.components.List"      waitEvent="updateComplete" />
				<SetProperty target="l1" propertyName="itemRenderer"  valueExpression ="value= new ClassFactory( comps.ItemWithBorder )"  />
				<SetProperty target="l2" propertyName="itemRenderer"  valueExpression ="value= new ClassFactory( comps.ItemWithBorder )"  />
				<SetProperty target="l1" propertyName="dataProvider" valueExpression="value=application.sortAC()" waitEvent="updateComplete" waitTarget="l1"/>
				<SetProperty target="l2" propertyName="dataProvider" valueExpression="value=application.createPlayersAC()" waitEvent="updateComplete" waitTarget="l2"/>
				<SetProperty target="l1" propertyName="labelField" value="lastName" waitEvent="updateComplete" waitTarget="l1"/>
				<SetProperty target="l2" propertyName="labelField" value="firstName" waitEvent="updateComplete" waitTarget="l2"/>
				<SetProperty target="l1" propertyName="dragEnabled" value="true" />
				<SetProperty target="l1" propertyName="dragMoveEnabled" value="true" />
				
				<SetProperty target="l1" propertyName="allowMultipleSelection" value="true" />
				
				<SetProperty target="l1.layout" propertyName="dragScrollInitialDelay" value="0" />
				<SetProperty target="l2.layout" propertyName="dragScrollInitialDelay" value="0" />
			</setup>
			<body>
				<RunCode code="DragManager.endDrag()" />
				<WaitForEffectsToEnd/>
				<DispatchMouseEvent target="l1"  type="mouseUp"  localX="10" localY="10" />
				<DispatchMouseEvent target="l1"  type="mouseOver" buttonDown="false" localX="10" localY="10" />
				<DispatchMouseClickEvent target="l1"    localX="20" localY="10" waitEvent="click" waitTarget="l1"/>
				<DispatchKeyEvent keys="[END]"  waitTarget="l1" shiftKey="true" waitEvent="updateComplete"/>
				<DispatchMouseEvent target="l1"  type="mouseDown" buttonDown="true"  localX="10" localY="10" />
				<DispatchMouseEvent target="l1"  type="mouseMove" buttonDown="true"  localX="50" localY="12" />
				<DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="15" localY="10" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="updateComplete"/>
				<DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="50" localY="30" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="move"/>
				<CompareBitmap numColorVariances="15" maxColorVariance="10" target="hg" url="../SparkDND/baselines/$testID.png" />
				<DispatchMouseEvent target="l2" type="mouseUp" localX="50" localY="30"  waitTarget="l1" waitEvent="dragComplete" />
				<WaitForEffectsToEnd/>
				
			</body>
		</TestCase>
	</testCases>
</UnitTester>
