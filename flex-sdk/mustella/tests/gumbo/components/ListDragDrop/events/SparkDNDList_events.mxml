<?xml version="1.0" encoding="utf-8"?>
<!--

  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.

-->
<UnitTester testDir="gumbo/components/ListDragDrop/events/" xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:mx="library://ns.adobe.com/flex/mx" xmlns:s="library://ns.adobe.com/flex/spark"  xmlns:m="http://ns.adobe.com/mxml/2009" xmlns="*" testSWF="SparkDNDListBasic.mxml">
  <!-- this set of lines form a template that must be in each unit test -->
  <fx:Script>
    <![CDATA[
      public static function init(o:DisplayObject):void { }
    ]]>
  </fx:Script>
  <fx:Metadata>
    <![CDATA[
      [Mixin]
    ]]>
  </fx:Metadata>
  <!-- end of set of lines that must be in each unit test -->
  <fx:Script>
    <![CDATA[
	import spark.layouts.*;
	import comps.*;
	import mx.managers.DragManager;
	import mx.core.mx_internal;
	use namespace mx_internal;
    ]]>
  </fx:Script>

  <testCases>
   	<TestCase testID="List_bug25334_copyOnDrop" keywords="[DragDrop, List]" description="">
        <setup>
            <ResetComponent target="l1" className="spark.components.List" waitEvent="updateComplete" />
            <ResetComponent target="l2" className="spark.components.List"      waitEvent="updateComplete" />
            <SetProperty target="l1" propertyName="dataProvider" valueExpression="value=application.createPlayersAC()" waitEvent="updateComplete" waitTarget="l1"/>
            <SetProperty target="l1" propertyName="dragEnabled" value="true" />
            <SetProperty target="l1" propertyName="dragMoveEnabled" value="false" />
            <SetProperty target="l2" propertyName="dropEnabled" value="true" />
        
        </setup>
        <body>
            <RunCode code="DragManager.endDrag()" />
            <DispatchMouseEvent target="l1"  type="mouseUp"  localX="10" localY="10" />
            <DispatchMouseEvent target="l1"  type="mouseOver" buttonDown="false" localX="10" localY="10" />
            <DispatchMouseClickEvent target="l1"    localX="20" localY="10" waitEvent="updateComplete" waitTarget="l1"/>
            <DispatchMouseEvent target="l1"  type="mouseDown" buttonDown="true"  localX="10" localY="10" />
            <DispatchMouseEvent target="l1"  type="mouseMove" buttonDown="true"  localX="50" localY="12" waitEvent="dragStart" />
            <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="5" localY="10" waitEvent="dragEnter"/>
            <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="5" localY="10" waitEvent="dragOver"/>
            <DispatchMouseEvent target="l2" type="mouseUp" localX="5" localY="10"  waitTarget="l1" waitEvent="dragComplete" />
            <WaitForEffectsToEnd/>
            <AssertMethodValue method="value=(application.l1.dataProvider.getItemAt(0) === application.l2.dataProvider.getItemAt(0) )" value="false" />
        </body>
        <cleanup>
            <RunCode code="DragManager.endDrag()" />
        </cleanup>
        </TestCase>
        
  	<TestCase testID="List_NoDP_drop" keywords="[DragDrop, List]" description="">
            <setup>
                <ResetComponent target="l1" className="spark.components.List" waitEvent="updateComplete" />
                <ResetComponent target="l2" className="spark.components.List"      waitEvent="updateComplete" />
                <SetProperty target="l1" propertyName="dataProvider" valueExpression="value=application.createAbc()" waitEvent="updateComplete" waitTarget="l1"/>
                <SetProperty target="l1" propertyName="dragEnabled" value="true" />
                <SetProperty target="l2" propertyName="dropEnabled" value="true" />
                <SetProperty target="l1.layout" propertyName="dragScrollInitialDelay" value="0" />
            </setup>
            <body>
                <DispatchMouseEvent target="l1"  type="mouseUp"  localX="10" localY="10" />
                <DispatchMouseEvent target="l1"  type="mouseOver" buttonDown="false" localX="10" localY="10" />
                <DispatchMouseClickEvent target="l1"    localX="20" localY="10" waitEvent="updateComplete" waitTarget="l1"/>
                <DispatchMouseEvent target="l1"  type="mouseDown" buttonDown="true"  localX="10" localY="10" />
                <DispatchMouseEvent target="l1"  type="mouseMove" buttonDown="true"  localX="50" localY="12" waitEvent="dragStart" />
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="5" localY="10" waitEvent="dragEnter"/>
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="5" localY="10" waitEvent="dragOver"/>
                <DispatchMouseEvent target="l2" type="mouseUp" localX="5" localY="10"  waitTarget="l1" waitEvent="dragComplete" />
                <WaitForEffectsToEnd/>
                <WaitForLayoutManager/>
                <CompareBitmap numColorVariances="20" ignoreMaxColorVariance="true" target="l2" url="../events/baselines/$testID.png" />
            </body>
            <cleanup>
                <RunCode code="DragManager.endDrag()" />
            </cleanup>
        </TestCase>
        
	<TestCase testID="ListDefaultRenderer_dragComplete" keywords="[DragDrop, List]" description="">
            <setup>
                <ResetComponent target="l1" className="spark.components.List" waitEvent="updateComplete" />
                <ResetComponent target="l2" className="spark.components.List"      waitEvent="updateComplete" />
                <SetProperty target="l1" propertyName="dataProvider" valueExpression="value=application.createPlayersAC()" waitEvent="updateComplete" waitTarget="l1"/>
                <SetProperty target="l2" propertyName="dataProvider" valueExpression="value=application.createPlayersAC()" waitEvent="updateComplete" waitTarget="l2"/>
                <SetProperty target="l1" propertyName="labelField" value="lastName" waitEvent="updateComplete" waitTarget="l1"/>
                <SetProperty target="l2" propertyName="labelField" value="firstName" waitEvent="updateComplete" waitTarget="l2"/>
                <SetProperty target="l1" propertyName="selectedIndex" value="0" />
                <SetProperty target="l1" propertyName="dragEnabled" value="true" />
                <SetProperty target="l2" propertyName="dragEnabled" value="true" />
                <SetProperty target="l2" propertyName="dropEnabled" value="true" />
                <SetProperty target="l1.layout" propertyName="dragScrollInitialDelay" value="0" />
                <SetProperty target="l2.layout" propertyName="dragScrollInitialDelay" value="0" />
            </setup>
            <body>
                <DispatchMouseEvent target="l1"  type="mouseUp"  localX="10" localY="10" />
                <DispatchMouseEvent target="l1"  type="mouseOver" buttonDown="false" localX="10" localY="10" />
                <DispatchMouseClickEvent target="l1"    localX="20" localY="10" waitEvent="updateComplete" waitTarget="l1"/>
                <DispatchMouseEvent target="l1"  type="mouseDown" buttonDown="true"  localX="10" localY="10" />
                <DispatchMouseEvent target="l1"  type="mouseMove" buttonDown="true"  localX="50" localY="12" waitEvent="dragStart" />
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="5" localY="10" waitEvent="dragEnter"/>
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="50" localY="30"  waitEvent="dragOver"/>
                <DispatchMouseEvent target="l2" type="mouseUp" localX="50" localY="30"  waitTarget="l1" waitEvent="dragComplete" />
                <WaitForEffectsToEnd/>
                <WaitForLayoutManager/>
                <CompareBitmap numColorVariances="20" ignoreMaxColorVariance="true" target="hg" url="../events/baselines/$testID.png" />
            </body>
            <cleanup>
                <RunCode code="DragManager.endDrag()" />
            </cleanup>
        </TestCase>
        
	<TestCase testID="ListDefaultRenderer_dragExit" keywords="[DragDrop, List]" description="">
           <setup>
                <ResetComponent target="l1" className="spark.components.List" waitEvent="updateComplete" />
                <ResetComponent target="l2" className="spark.components.List"      waitEvent="updateComplete" />
                <SetProperty target="l1" propertyName="dataProvider" valueExpression="value=application.createPlayersAC()" waitEvent="updateComplete" waitTarget="l1"/>
                <SetProperty target="l2" propertyName="dataProvider" valueExpression="value=application.createPlayersAC()" waitEvent="updateComplete" waitTarget="l2"/>
                <SetProperty target="l1" propertyName="labelField" value="lastName" waitEvent="updateComplete" waitTarget="l1"/>
                <SetProperty target="l2" propertyName="labelField" value="firstName" waitEvent="updateComplete" waitTarget="l2"/>
                <SetProperty target="l1" propertyName="selectedIndex" value="0" />
                <SetProperty target="l1" propertyName="dragEnabled" value="true" />
                <SetProperty target="l1" propertyName="dragMoveEnabled" value="true" />
                <SetProperty target="l2" propertyName="dropEnabled" value="true" />

            	<SetProperty target="l1.layout" propertyName="dragScrollInitialDelay" value="0" />
	    	    <SetProperty target="l2.layout" propertyName="dragScrollInitialDelay" value="0" />
            </setup>
            <body>
                <DispatchMouseEvent target="l1"  type="mouseUp"  localX="10" localY="10" />
                <DispatchMouseEvent target="l1"  type="mouseOver" buttonDown="false" localX="10" localY="10" />
                <DispatchMouseClickEvent target="l1"    localX="20" localY="10" waitEvent="updateComplete" waitTarget="l1"/>
                <DispatchMouseEvent target="l1"  type="mouseDown" buttonDown="true"  localX="10" localY="10" />
                <DispatchMouseEvent target="l1"  type="mouseMove" buttonDown="true"  localX="50" localY="12" waitEvent="dragStart" />
                <WaitForEffectsToEnd/>
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="5" localY="10" waitEvent="dragEnter"/>
                <WaitForEffectsToEnd/>
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="5" localY="30"  waitEvent="dragOver"/>
                <WaitForEffectsToEnd/>
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="-10" localY="-10"  waitEvent="dragExit"/>
                <WaitForEffectsToEnd/>
                <DispatchMouseEvent target="l2" type="mouseUp" localX="50" localY="30"  waitTarget="l1" waitEvent="dragComplete" />
                <WaitForEffectsToEnd/>
                <WaitForLayoutManager/>
                <CompareBitmap numColorVariances="20" ignoreMaxColorVariance="true" target="hg" url="../events/baselines/$testID.png" />
            </body>
            <cleanup>
                <RunCode code="DragManager.endDrag()" />
            </cleanup>
        </TestCase>
        
	<TestCase testID="ListDefaultRenderer_dragDrop" keywords="[DragDrop, List]" description="">
           <setup>
                <ResetComponent target="l1" className="spark.components.List" waitEvent="updateComplete" />
                <ResetComponent target="l2" className="spark.components.List"      waitEvent="updateComplete" />
                
                <SetProperty target="l1" propertyName="dataProvider" valueExpression="value=application.createPlayersAC()" waitEvent="updateComplete" waitTarget="l1"/>
                <SetProperty target="l2" propertyName="dataProvider" valueExpression="value=application.createPlayersAC()" waitEvent="updateComplete" waitTarget="l2"/>
                <SetProperty target="l1" propertyName="labelField" value="lastName" waitEvent="updateComplete" waitTarget="l1"/>
                <SetProperty target="l2" propertyName="labelField" value="firstName" waitEvent="updateComplete" waitTarget="l2"/>
                <SetProperty target="l1" propertyName="selectedIndex" value="0" />
                <SetProperty target="l1" propertyName="dragEnabled" value="true" />
                <SetProperty target="l1" propertyName="dragMoveEnabled" value="true" />
                <SetProperty target="l2" propertyName="dropEnabled" value="true" />
                <SetProperty target="l1" propertyName="height" value="105" />
                <SetProperty target="l1.layout" propertyName="dragScrollInitialDelay" value="0" />
                <SetProperty target="l2.layout" propertyName="dragScrollInitialDelay" value="0" />
            </setup>
            <body>
                <DispatchMouseEvent target="l1"  type="mouseUp"  localX="10" localY="10" />
                <DispatchMouseEvent target="l1"  type="mouseOver" buttonDown="false" localX="10" localY="10" />
                <DispatchMouseClickEvent target="l1"    localX="20" localY="10" waitEvent="updateComplete" waitTarget="l1"/>
                <DispatchMouseEvent target="l1"  type="mouseDown" buttonDown="true"  localX="10" localY="10" />
                <DispatchMouseEvent target="l1"  type="mouseMove" buttonDown="true"  localX="50" localY="12" />
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="15" localY="100" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="updateComplete"/>
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="50" localY="100" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="move"/>
                <DispatchMouseEvent target="l2" type="mouseUp" localX="50" localY="100"  waitEvent="dragDrop" />
                <WaitForEffectsToEnd/>
                <WaitForLayoutManager/>
                <CompareBitmap numColorVariances="20" ignoreMaxColorVariance="true" target="hg" url="../events/baselines/$testID.png" />
            </body>
            <cleanup>
                <RunCode code="DragManager.endDrag()" />
            </cleanup>
        </TestCase>

	<TestCase testID="ListDefaultRenderer_dragDrop_ctrlKey_multiple" keywords="[DragDrop, List]" description="">
           <setup>
                <ResetComponent target="l1" className="spark.components.List" waitEvent="updateComplete" />
                <ResetComponent target="l2" className="spark.components.List"      waitEvent="updateComplete" />
                
                <SetProperty target="l1" propertyName="dataProvider" valueExpression="value=application.createPlayersAC()" waitEvent="updateComplete" waitTarget="l1"/>
                <SetProperty target="l2" propertyName="dataProvider" valueExpression="value=application.createPlayersAC()" waitEvent="updateComplete" waitTarget="l2"/>
                <SetProperty target="l1" propertyName="labelField" value="lastName" waitEvent="updateComplete" waitTarget="l1"/>
                <SetProperty target="l2" propertyName="labelField" value="firstName" waitEvent="updateComplete" waitTarget="l2"/>
                <SetProperty target="l1" propertyName="selectedIndex" value="0" />
                <SetProperty target="l1" propertyName="allowMultipleSelection" value="true" />
                <SetProperty target="l2" propertyName="allowMultipleSelection" value="true" />
                <SetProperty target="l1" propertyName="dragEnabled" value="true" />
                <SetProperty target="l1" propertyName="dragMoveEnabled" value="true" />
                <SetProperty target="l2" propertyName="dropEnabled" value="true" />
                <SetProperty target="l1" propertyName="height" value="105" />
                <SetProperty target="l1.layout" propertyName="dragScrollInitialDelay" value="0" />
                <SetProperty target="l2.layout" propertyName="dragScrollInitialDelay" value="0" />
            </setup>
            <body>
                <DispatchMouseEvent target="l1"  type="mouseUp"  localX="10" localY="10" />
                <DispatchMouseEvent target="l1"  type="mouseOver" buttonDown="false" localX="10" localY="10" />
                <DispatchMouseClickEvent target="l1"    localX="20" localY="10" waitEvent="updateComplete" waitTarget="l1"/>
                <DispatchKeyEvent keys="[END]"  waitTarget="l1" shiftKey="true" waitEvent="updateComplete"/>
                <DispatchMouseEvent target="l1"  type="mouseDown" buttonDown="true" ctrlKey="true"  localX="10" localY="10" />
                <DispatchMouseEvent target="l1"  type="mouseMove" buttonDown="true" ctrlKey="true" localX="50" localY="12" />
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" ctrlKey="true" localX="15" localY="100" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="updateComplete"/>
                <WaitForLayoutManager/>
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" ctrlKey="true" localX="50" localY="100" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="move"/>
                <WaitForLayoutManager/>
                <DispatchMouseEvent target="l2" type="mouseUp" ctrlKey="true" localX="50" localY="100"  waitEvent="dragDrop" />
                <WaitForEffectsToEnd/>
                <WaitForLayoutManager/>
                <CompareBitmap numColorVariances="20" ignoreMaxColorVariance="true" target="hg" url="../events/baselines/$testID.png" />
            </body>
            <cleanup>
                <RunCode code="DragManager.endDrag()" />
            </cleanup>
        </TestCase>

	<TestCase testID="ListDefaultRenderer_dragDrop_ctrlKey_singleSel" keywords="[DragDrop, List]" description="">
           <setup>
                <ResetComponent target="l1" className="spark.components.List" waitEvent="updateComplete" />
                <ResetComponent target="l2" className="spark.components.List"      waitEvent="updateComplete" />
                
                <SetProperty target="l1" propertyName="dataProvider" valueExpression="value=application.createPlayersAC()" waitEvent="updateComplete" waitTarget="l1"/>
                <SetProperty target="l2" propertyName="dataProvider" valueExpression="value=application.createPlayersAC()" waitEvent="updateComplete" waitTarget="l2"/>
                <SetProperty target="l1" propertyName="labelField" value="lastName" waitEvent="updateComplete" waitTarget="l1"/>
                <SetProperty target="l2" propertyName="labelField" value="firstName" waitEvent="updateComplete" waitTarget="l2"/>
                <SetProperty target="l1" propertyName="selectedIndex" value="0" />
                <SetProperty target="l1" propertyName="dragEnabled" value="true" />
                <SetProperty target="l1" propertyName="dragMoveEnabled" value="true" />
                <SetProperty target="l2" propertyName="dropEnabled" value="true" />
                <SetProperty target="l1" propertyName="height" value="105" />
                <SetProperty target="l1.layout" propertyName="dragScrollInitialDelay" value="0" />
                <SetProperty target="l2.layout" propertyName="dragScrollInitialDelay" value="0" />
            </setup>
            <body>
                <DispatchMouseEvent target="l1"  type="mouseUp"  localX="10" localY="10" />
                <DispatchMouseEvent target="l1"  type="mouseOver" buttonDown="false" localX="10" localY="10" />
                <DispatchMouseClickEvent target="l1"    localX="20" localY="10" waitEvent="updateComplete" waitTarget="l1"/>
        
                <DispatchMouseEvent target="l1"  type="mouseDown" buttonDown="true" ctrlKey="true"  localX="10" localY="10" />
                <DispatchMouseEvent target="l1"  type="mouseMove" buttonDown="true" ctrlKey="true" localX="50" localY="12" />
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" ctrlKey="true" localX="15" localY="100" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="updateComplete"/>
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" ctrlKey="true" localX="50" localY="100" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="move"/>
                <WaitForEffectsToEnd/>
                <DispatchMouseEvent target="l2" type="mouseUp" ctrlKey="true" localX="50" localY="100"  waitEvent="dragDrop" />
                <WaitForEffectsToEnd/>
                <WaitForLayoutManager/>
                <CompareBitmap numColorVariances="20" ignoreMaxColorVariance="true" target="hg" url="../events/baselines/$testID.png" />
            </body>
            <cleanup>
                <RunCode code="DragManager.endDrag()" />
            </cleanup>
        </TestCase>

	<TestCase testID="ListDefaultRenderer_dragDrop_negativeGap" keywords="[DragDrop, List]" description="">
           <setup>
                <ResetComponent target="l1" className="spark.components.List" waitEvent="updateComplete" />
                <ResetComponent target="l2" className="spark.components.List"      waitEvent="updateComplete" />

                <SetProperty target="l1" propertyName="dataProvider" valueExpression="value=application.createPlayersAC()" waitEvent="updateComplete" waitTarget="l1"/>
                <SetProperty target="l2" propertyName="dataProvider" valueExpression="value=application.createPlayersAC()" waitEvent="updateComplete" waitTarget="l2"/>
                <SetProperty target="l1" propertyName="labelField" value="lastName" waitEvent="updateComplete" waitTarget="l1"/>
                <SetProperty target="l2" propertyName="labelField" value="firstName" waitEvent="updateComplete" waitTarget="l2"/>
                <SetProperty target="l2.layout" propertyName="gap" value="-1" />
                <SetProperty target="l1" propertyName="selectedIndex" value="0" />
                <SetProperty target="l1" propertyName="dragEnabled" value="true" />
                <SetProperty target="l1" propertyName="dragMoveEnabled" value="true" />
                <SetProperty target="l2" propertyName="dropEnabled" value="true" />
                <SetProperty target="l1" propertyName="height" value="105" />
                <SetProperty target="l2" propertyName="height" value="105" />
            	<SetProperty target="l1.layout" propertyName="dragScrollInitialDelay" value="0" />
	    	<SetProperty target="l2.layout" propertyName="dragScrollInitialDelay" value="0" />
            </setup>
            <body>
                <DispatchMouseEvent target="l1"  type="mouseUp"  localX="10" localY="10" />
                <DispatchMouseEvent target="l1"  type="mouseOver" buttonDown="false" localX="10" localY="10" />
                <DispatchMouseClickEvent target="l1"    localX="20" localY="10" waitEvent="updateComplete" waitTarget="l1"/>
                <DispatchMouseEvent target="l1"  type="mouseDown" buttonDown="true"  localX="10" localY="10" />
                <DispatchMouseEvent target="l1"  type="mouseMove" buttonDown="true"  localX="50" localY="12" />
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="15" localY="100" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="updateComplete"/>
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="50" localY="100" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="move"/>
                <DispatchMouseEvent target="l2" type="mouseUp" localX="50" localY="100"  waitEvent="dragDrop" />
                <WaitForEffectsToEnd/>
                <WaitForLayoutManager/>
                <CompareBitmap numColorVariances="20" ignoreMaxColorVariance="true" target="hg" url="../events/baselines/$testID.png" />
            </body>
            <cleanup>
                <RunCode code="DragManager.endDrag()" />
            </cleanup>
        </TestCase>

	<TestCase testID="HListDefaultRenderer_dragDrop_negativeGap" keywords="[DragDrop, List]" description="">
           <setup>
                <ResetComponent target="l1" className="spark.components.List" waitEvent="updateComplete" />
                <ResetComponent target="l2" className="spark.components.List"      waitEvent="updateComplete" />
                
                <SetProperty target="l1" propertyName="dataProvider" valueExpression="value=application.createPlayersAC()" waitEvent="updateComplete" waitTarget="l1"/>
                <SetProperty target="l2" propertyName="dataProvider" valueExpression="value=application.createPlayersAC()" waitEvent="updateComplete" waitTarget="l2"/>
                <SetProperty    target="l2" propertyName="layout"  valueExpression="value=new HorizontalLayout()" />
                <SetProperty target="l2.layout" propertyName="gap" value="-2" />
                <SetProperty target="l1" propertyName="labelField" value="lastName" waitEvent="updateComplete" waitTarget="l1"/>
                <SetProperty target="l2" propertyName="labelField" value="firstName" waitEvent="updateComplete" waitTarget="l2"/>
                
                <SetProperty target="l1" propertyName="selectedIndex" value="0" />
                <SetProperty target="l1" propertyName="dragEnabled" value="true" />
                <SetProperty target="l1" propertyName="dragMoveEnabled" value="true" />
                <SetProperty target="l2" propertyName="dropEnabled" value="true" />
                <SetProperty target="l1" propertyName="height" value="105" />
                <SetProperty target="l2" propertyName="width" value="105" />
                <SetProperty target="l1.layout" propertyName="dragScrollInitialDelay" value="0" />
                <SetProperty target="l2.layout" propertyName="dragScrollInitialDelay" value="0" />
            </setup>
            <body>
                <DispatchMouseEvent target="l1"  type="mouseUp"  localX="10" localY="10" />
                <DispatchMouseEvent target="l1"  type="mouseOver" buttonDown="false" localX="10" localY="10" />
                <DispatchMouseClickEvent target="l1"    localX="20" localY="10" waitEvent="updateComplete" waitTarget="l1"/>
                <DispatchMouseEvent target="l1"  type="mouseDown" buttonDown="true"  localX="10" localY="10" />
                <DispatchMouseEvent target="l1"  type="mouseMove" buttonDown="true"  localX="50" localY="12" />
                <WaitForEffectsToEnd/>
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="100" localY="10" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="updateComplete"/>
                <WaitForEffectsToEnd/>
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="100" localY="9" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="move"/>
                <WaitForEffectsToEnd/>
                <DispatchMouseEvent target="l2" type="mouseUp" localX="100" localY="8"  waitEvent="dragDrop" />
                <WaitForEffectsToEnd/>
                <WaitForLayoutManager/>
                <CompareBitmap numColorVariances="20" ignoreMaxColorVariance="true" target="hg" url="../events/baselines/$testID.png" />
            </body>
            <cleanup>
                <RunCode code="DragManager.endDrag()" />
            </cleanup>
        </TestCase>

	<TestCase testID="ListDefaultRenderer_rejectDrop1" keywords="[DragDrop, List]" description="">
           <setup>
                <ResetComponent target="l1" className="spark.components.List" waitEvent="updateComplete" />
                <ResetComponent target="l2" className="spark.components.List"      waitEvent="updateComplete" />

                <SetProperty target="l1" propertyName="dataProvider" valueExpression="value=application.createPlayersAC()" waitEvent="updateComplete" waitTarget="l1"/>
                <SetProperty target="l2" propertyName="dataProvider" valueExpression="value=application.createPlayersAC()" waitEvent="updateComplete" waitTarget="l2"/>
                <SetProperty target="l1" propertyName="labelField" value="lastName" waitEvent="updateComplete" waitTarget="l1"/>
                <SetProperty target="l2" propertyName="labelField" value="firstName" waitEvent="updateComplete" waitTarget="l2"/>
                <SetProperty target="l1" propertyName="selectedIndex" value="0" />
                <SetProperty target="l1" propertyName="dragEnabled" value="true" />
                <SetProperty target="l1" propertyName="dragMoveEnabled" value="true" />
             	<SetProperty target="l1.layout" propertyName="dragScrollInitialDelay" value="0" />
	     		<SetProperty target="l2.layout" propertyName="dragScrollInitialDelay" value="0" />
            </setup>
            <body>
                <DispatchMouseEvent target="l1"  type="mouseUp"  localX="10" localY="10" />
                <DispatchMouseEvent target="l1"  type="mouseOver" buttonDown="false" localX="10" localY="10" />
                <DispatchMouseClickEvent target="l1"    localX="20" localY="10" waitEvent="updateComplete" waitTarget="l1"/>
                <DispatchMouseEvent target="l1"  type="mouseDown" buttonDown="true"  localX="10" localY="10" />
                <DispatchMouseEvent target="l1"  type="mouseMove" buttonDown="true"  localX="50" localY="12" waitEvent="dragStart" />
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="5" localY="10" waitEvent="dragEnter"/>
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="5" localY="30"  waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="move"/>
                <DispatchMouseEvent target="l2" type="mouseUp" localX="50" localY="30"  waitTarget="l1" waitEvent="dragComplete" />
                <WaitForEffectsToEnd/>
                <WaitForLayoutManager/>
                <CompareBitmap numColorVariances="20" ignoreMaxColorVariance="true" target="hg" url="../events/baselines/$testID.png" />
            </body>
            <cleanup>
                <RunCode code="DragManager.endDrag()" />
            </cleanup>
        </TestCase>

	<TestCase testID="ListDefaultRenderer_rejectDrop2" keywords="[DragDrop, List]" description="">
           <setup>
                <ResetComponent target="l1" className="spark.components.List" waitEvent="updateComplete" />
                <ResetComponent target="l2" className="spark.components.List"      waitEvent="updateComplete" />

                <SetProperty target="l1" propertyName="dataProvider" valueExpression="value=application.createPlayersAC()" waitEvent="updateComplete" waitTarget="l1"/>
                <SetProperty target="l2" propertyName="dataProvider" valueExpression="value=application.createPlayersAC()" waitEvent="updateComplete" waitTarget="l2"/>
                <SetProperty target="l1" propertyName="labelField" value="lastName" waitEvent="updateComplete" waitTarget="l1"/>
                <SetProperty target="l2" propertyName="labelField" value="firstName" waitEvent="updateComplete" waitTarget="l2"/>
                <SetProperty target="l1" propertyName="selectedIndex" value="0" />
                <SetProperty target="l1" propertyName="dragEnabled" value="true" />
                <SetProperty target="l2" propertyName="dropEnabled" value="false" />
             	<SetProperty target="l1.layout" propertyName="dragScrollInitialDelay" value="0" />
	     		<SetProperty target="l2.layout" propertyName="dragScrollInitialDelay" value="0" />
            </setup>
            <body>
                <DispatchMouseEvent target="l1"  type="mouseUp"  localX="10" localY="10" />
                <DispatchMouseEvent target="l1"  type="mouseOver" buttonDown="false" localX="10" localY="10" />
                <DispatchMouseClickEvent target="l1"    localX="20" localY="10" waitEvent="updateComplete" waitTarget="l1"/>
                <DispatchMouseEvent target="l1"  type="mouseDown" buttonDown="true"  localX="10" localY="10" />
                <DispatchMouseEvent target="l1"  type="mouseMove" buttonDown="true"  localX="50" localY="12" />
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="15" localY="100" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="updateComplete"/>
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="50" localY="100" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="move"/>
                <DispatchMouseEvent target="l2" type="mouseUp" localX="50" localY="100" waitTarget="l1" waitEvent="dragComplete" />
                <WaitForEffectsToEnd/>
                <WaitForLayoutManager/>
                <CompareBitmap numColorVariances="20" ignoreMaxColorVariance="true" target="hg" url="../events/baselines/$testID.png" />

            </body>
            <cleanup>
                <RunCode code="DragManager.endDrag()" />
            </cleanup>
        </TestCase>

	<TestCase testID="ListAbcDND1_dragComplete" keywords="[DragDrop, List]" description="">
           <setup>
                <ResetComponent target="l1" className="spark.components.List" waitEvent="updateComplete" />
                <ResetComponent target="l2" className="spark.components.List"      waitEvent="updateComplete" />
                <SetProperty target="l1" propertyName="itemRenderer"  valueExpression ="value= new ClassFactory( comps.ItemWithBorder )"  />
                <SetProperty target="l2" propertyName="itemRenderer"  valueExpression ="value= new ClassFactory( comps.ItemWithBorder )"  />
                <SetProperty target="l1" propertyName="dataProvider" valueExpression="value=application.createAbc()" waitEvent="updateComplete" waitTarget="l1"/>
                <SetProperty target="l2" propertyName="dataProvider" valueExpression="value=application.createAbc()" waitEvent="updateComplete" waitTarget="l2"/>
                <SetProperty target="l1" propertyName="height" value="200" waitEvent="updateComplete" waitTarget="l1"/>
                <SetProperty target="l2" propertyName="height" value="200" waitEvent="updateComplete" waitTarget="l2"/>
                <SetProperty target="l1" propertyName="selectedIndex" value="0" />
                <SetProperty target="l1" propertyName="dragEnabled" value="true" />
                <SetProperty target="l2" propertyName="dragEnabled" value="true" />
                <SetProperty target="l2" propertyName="dropEnabled" value="true" />

            	<SetProperty target="l1.layout" propertyName="dragScrollInitialDelay" value="0" />
	    	<SetProperty target="l2.layout" propertyName="dragScrollInitialDelay" value="0" />
            </setup>
            <body>
                <DispatchMouseEvent target="l1"  type="mouseUp"  localX="10" localY="10" />
                <DispatchMouseEvent target="l1"  type="mouseOver" buttonDown="false" localX="10" localY="10" />
                <DispatchMouseClickEvent target="l1"    localX="20" localY="10" waitEvent="updateComplete" waitTarget="l1"/>
                <DispatchMouseEvent target="l1"  type="mouseDown" buttonDown="true"  localX="10" localY="10" />
                <DispatchMouseEvent target="l1"  type="mouseMove" buttonDown="true"  localX="50" localY="12" waitEvent="dragStart" />
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="5" localY="10" waitEvent="dragEnter"/>
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="50" localY="30"  waitEvent="dragOver"/>
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="50" localY="195" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="move"/>
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="50" localY="197" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="move"/>
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="50" localY="196" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="move"/>
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="50" localY="197" />
                <WaitForEvent target="l2" eventName="dragOver" numExpectedEvents="2" />
                <DispatchMouseEvent target="l2" type="mouseUp" localX="50" localY="197"  waitTarget="l1" waitEvent="dragComplete" />
                <WaitForEffectsToEnd/>
                <WaitForLayoutManager/>
                <CompareBitmap numColorVariances="20" ignoreMaxColorVariance="true" target="hg" url="../events/baselines/$testID.png" />
            </body>
            <cleanup>
                <RunCode code="DragManager.endDrag()" />
            </cleanup>
        </TestCase>

	<TestCase testID="ListAbcDND1_dragDrop" keywords="[DragDrop, List]" description="">
           <setup>
                <ResetComponent target="l1" className="spark.components.List" waitEvent="updateComplete" />
                <ResetComponent target="l2" className="spark.components.List"      waitEvent="updateComplete" />
                <SetProperty target="l1" propertyName="itemRenderer"  valueExpression ="value= new ClassFactory( comps.ItemWithBorder )"  />
                <SetProperty target="l2" propertyName="itemRenderer"  valueExpression ="value= new ClassFactory( comps.ItemWithBorder )"  />
                <SetProperty target="l1" propertyName="dataProvider" valueExpression="value=application.createAbc()" waitEvent="updateComplete" waitTarget="l1"/>
                <SetProperty target="l2" propertyName="dataProvider" valueExpression="value=application.createAbc()" waitEvent="updateComplete" waitTarget="l2"/>
                <SetProperty target="l1" propertyName="height" value="200" waitEvent="updateComplete" waitTarget="l1"/>
                <SetProperty target="l2" propertyName="height" value="200" waitEvent="updateComplete" waitTarget="l2"/>
                <SetProperty target="l1" propertyName="selectedIndex" value="0" />
                <SetProperty target="l1" propertyName="dragEnabled" value="true" />
                <SetProperty target="l1" propertyName="dragMoveEnabled" value="true" />
                <SetProperty target="l2" propertyName="dropEnabled" value="true" />

            	<SetProperty target="l1.layout" propertyName="dragScrollInitialDelay" value="0"/>
	    	    <SetProperty target="l2.layout" propertyName="dragScrollInitialDelay" value="0"/>
            </setup>
            <body>
                <DispatchMouseEvent target="l1"  type="mouseUp"  localX="10" localY="10" />
                <DispatchMouseEvent target="l1"  type="mouseOver" buttonDown="false" localX="10" localY="10" />
                <DispatchMouseClickEvent target="l1" localX="20" localY="10" waitEvent="updateComplete" waitTarget="l1"/>
                <DispatchMouseEvent target="l1"  type="mouseDown" buttonDown="true"  localX="10" localY="10" />
                <DispatchMouseEvent target="l1"  type="mouseMove" buttonDown="true"  localX="50" localY="12" waitEvent="dragStart" />
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="5" localY="10" waitEvent="dragEnter"/>
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="50" localY="30"  waitEvent="dragOver"/>
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="50" localY="199" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="move"/>
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="50" localY="198" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="move"/>
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="50" localY="199" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="move"/>
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="50" localY="198"/>
                <WaitForEvent target="l2" eventName="dragOver" numExpectedEvents="2" />
                <DispatchMouseEvent target="l2" type="mouseUp" localX="50" localY="199"  waitTarget="l2" waitEvent="dragDrop" timeout="50"/>
                <WaitForEffectsToEnd/>
                <WaitForLayoutManager/>
                <CompareBitmap numColorVariances="20" ignoreMaxColorVariance="true" target="hg" url="../events/baselines/$testID.png" />
            </body>
            <cleanup>
                <RunCode code="DragManager.endDrag()" />
            </cleanup>
        </TestCase>

	<TestCase testID="ListAbcDND1_rejectDrop1" keywords="[DragDrop, List]" description="">
           <setup>
                <ResetComponent target="l1" className="spark.components.List" waitEvent="updateComplete" />
                <ResetComponent target="l2" className="spark.components.List"      waitEvent="updateComplete" />
                <SetProperty target="l1" propertyName="itemRenderer"  valueExpression ="value= new ClassFactory( comps.ItemWithBorder )"  />
                <SetProperty target="l2" propertyName="itemRenderer"  valueExpression ="value= new ClassFactory( comps.ItemWithBorder )"  />
                <SetProperty target="l1" propertyName="dataProvider" valueExpression="value=application.createAbc()" waitEvent="updateComplete" waitTarget="l1"/>
                <SetProperty target="l2" propertyName="dataProvider" valueExpression="value=application.createAbc()" waitEvent="updateComplete" waitTarget="l2"/>
                <SetProperty target="l1" propertyName="height" value="200" waitEvent="updateComplete" waitTarget="l1"/>
                <SetProperty target="l2" propertyName="height" value="200" waitEvent="updateComplete" waitTarget="l2"/>
                <SetProperty target="l1" propertyName="selectedIndex" value="0" />
                <SetProperty target="l1" propertyName="dragEnabled" value="true" />
                <SetProperty target="l1" propertyName="dragMoveEnabled" value="true" />
             	<SetProperty target="l1.layout" propertyName="dragScrollInitialDelay" value="0" />
	     		<SetProperty target="l2.layout" propertyName="dragScrollInitialDelay" value="0" />
            </setup>
            <body>
                <DispatchMouseEvent target="l1"  type="mouseUp"  localX="10" localY="10" />
                <DispatchMouseEvent target="l1"  type="mouseOver" buttonDown="false" localX="10" localY="10" />
                <DispatchMouseClickEvent target="l1"    localX="20" localY="10" waitEvent="updateComplete" waitTarget="l1"/>
                <DispatchMouseEvent target="l1"  type="mouseDown" buttonDown="true"  localX="10" localY="10" />
                <DispatchMouseEvent target="l1"  type="mouseMove" buttonDown="true"  localX="50" localY="12" waitEvent="dragStart" />
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="5" localY="10" waitEvent="dragEnter"/>
                <WaitForLayoutManager/>
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="50" localY="199" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="move"/>
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="50" localY="198" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="move"/>
                <WaitForLayoutManager/>
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="50" localY="199" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="move"/>
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="50" localY="198" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="move"/>
                <WaitForLayoutManager/>
                <CompareBitmap numColorVariances="20" ignoreMaxColorVariance="true" target="hg" url="../events/baselines/$testID.png" />
                <DispatchMouseEvent target="l2" type="mouseUp" localX="50" localY="199"  waitTarget="l1" waitEvent="dragComplete" />
                <WaitForEffectsToEnd/>
            </body>
            <cleanup>
                <RunCode code="DragManager.endDrag()" />
            </cleanup>
        </TestCase>

	<TestCase testID="HListDefaultRenderer_dragComplete" keywords="[DragDrop, List]" description="">
           <setup>
                <ResetComponent target="l1" className="spark.components.List" waitEvent="updateComplete" />
				<SetProperty target="l1" propertyName="layout"  valueExpression="value=new HorizontalLayout()" />
                <ResetComponent target="l2" className="spark.components.List" waitEvent="updateComplete" />
				<SetProperty target="l2" propertyName="layout"  valueExpression="value=new HorizontalLayout()" />
                <SetProperty target="l1" propertyName="dataProvider" valueExpression="value=application.createPlayersAC()" waitEvent="updateComplete" waitTarget="l1"/>
                <SetProperty target="l2" propertyName="dataProvider" valueExpression="value=application.createPlayersAC()" waitEvent="updateComplete" waitTarget="l2"/>
                <SetProperty target="l1" propertyName="labelField" value="lastName" waitEvent="updateComplete" waitTarget="l1"/>
                <SetProperty target="l2" propertyName="labelField" value="firstName" waitEvent="updateComplete" waitTarget="l2"/>
                <SetProperty target="l1" propertyName="selectedIndex" value="0" />
                <SetProperty target="l1" propertyName="dragEnabled" value="true" />
                <SetProperty target="l2" propertyName="dragEnabled" value="true" />
                <SetProperty target="l2" propertyName="dropEnabled" value="true" />
				<SetProperty target="l1" propertyName="width" value="150" waitEvent="updateComplete"/>
				<SetProperty target="l1" propertyName="height" value="50" waitEvent="updateComplete"/>
				<SetProperty target="l2" propertyName="width" value="150" waitEvent="updateComplete"/>
				<SetProperty target="l2" propertyName="height" value="50" waitEvent="updateComplete"/>
            	<SetProperty target="l1.layout" propertyName="dragScrollInitialDelay" value="0" />
	    		<SetProperty target="l2.layout" propertyName="dragScrollInitialDelay" value="0" />
            </setup>
            <body>
				<DispatchMouseEvent target="l1"  type="mouseUp"  localX="10" localY="10" />
				<DispatchMouseEvent target="l1"  type="mouseOver" buttonDown="false" localX="10" localY="10" />
				<DispatchMouseEvent target="l1"  type="mouseDown" buttonDown="true"  localX="10" localY="10" />
				<DispatchMouseEvent target="l1"  type="mouseMove" buttonDown="true"  localX="145" localY="12" waitEvent="dragStart" />
				<DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="5" localY="10" waitEvent="dragEnter"/>
				<DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="145" localY="30"  waitEvent="dragOver"/>
				<DispatchMouseEvent target="l2" type="mouseUp" localX="145" localY="30"  waitTarget="l1" waitEvent="dragComplete" />
				<WaitForEffectsToEnd/>
				<WaitForLayoutManager/>
				<CompareBitmap numColorVariances="20" ignoreMaxColorVariance="true" target="hg" url="../events/baselines/$testID.png" />
            </body>
            <cleanup>
                <RunCode code="DragManager.endDrag()" />
            </cleanup>
        </TestCase>

	<TestCase testID="HListDefaultRenderer_dragExit" keywords="[DragDrop, List]" description="">
        <setup>
            <ResetComponent target="l1" className="spark.components.List" waitEvent="updateComplete" />
            <SetProperty    target="l1" propertyName="layout"  valueExpression="value=new HorizontalLayout()" />
            <ResetComponent target="l2" className="spark.components.List" waitEvent="updateComplete" />
            <SetProperty    target="l2" propertyName="layout"  valueExpression="value=new HorizontalLayout()" />
            <SetProperty target="l1" propertyName="dataProvider" valueExpression="value=application.createPlayersAC()" waitEvent="updateComplete" waitTarget="l1"/>
            <SetProperty target="l2" propertyName="dataProvider" valueExpression="value=application.createPlayersAC()" waitEvent="updateComplete" waitTarget="l2"/>
            <SetProperty target="l1" propertyName="labelField" value="lastName" waitEvent="updateComplete" waitTarget="l1"/>
            <SetProperty target="l2" propertyName="labelField" value="firstName" waitEvent="updateComplete" waitTarget="l2"/>
            <SetProperty target="l1" propertyName="selectedIndex" value="0" />
            <SetProperty target="l1" propertyName="dragEnabled" value="true" />
            <SetProperty target="l1" propertyName="dragMoveEnabled" value="true" />
            <SetProperty target="l2" propertyName="dropEnabled" value="true" />
            <SetProperty target="l1" propertyName="width" value="150" waitEvent="updateComplete"/>
            <SetProperty target="l1" propertyName="height" value="50" waitEvent="updateComplete"/>
            <SetProperty target="l2" propertyName="width" value="150" waitEvent="updateComplete"/>
            <SetProperty target="l2" propertyName="height" value="50" waitEvent="updateComplete"/>
            <SetProperty target="l1.layout" propertyName="dragScrollInitialDelay" value="0" />
            <SetProperty target="l2.layout" propertyName="dragScrollInitialDelay" value="0" />
        </setup>
        <body>
            <DispatchMouseEvent target="l1"  type="mouseUp"  localX="10" localY="10" />
            <DispatchMouseEvent target="l1"  type="mouseOver" buttonDown="false" localX="10" localY="10" />
            <WaitForLayoutManager/>
            <DispatchMouseEvent target="l1"  type="mouseDown" buttonDown="true"  localX="10" localY="10" />
            <DispatchMouseEvent target="l1"  type="mouseMove" buttonDown="true"  localX="145" localY="12" waitEvent="dragStart" />
            <WaitForLayoutManager/>
            <WaitForEffectsToEnd/>
            <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="5" localY="10" waitEvent="dragEnter"/>
            <WaitForLayoutManager/>
            <WaitForEffectsToEnd/>
            <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="145" localY="30"  waitEvent="dragOver"/>
            <WaitForLayoutManager/>
            <WaitForEffectsToEnd/>
            <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="-10" localY="-10"  waitEvent="dragExit"/>
            <WaitForLayoutManager/>
            <WaitForEffectsToEnd/>
            <DispatchMouseEvent target="l2" type="mouseUp" localX="145" localY="30"  waitTarget="l1" waitEvent="dragComplete" />
            <WaitForEffectsToEnd/>
            <WaitForLayoutManager/>
            <CompareBitmap numColorVariances="20" ignoreMaxColorVariance="true" target="hg" url="../events/baselines/$testID.png" />
        </body>
        <cleanup>
            <RunCode code="DragManager.endDrag()" />
        </cleanup>
    </TestCase>
        
    <TestCase testID="HListDefaultRenderer_dragDrop" keywords="[DragDrop, List]" description="">
        <setup>
            <ResetComponent target="l1" className="spark.components.List" waitEvent="updateComplete" />
            <SetProperty    target="l1" propertyName="layout"  valueExpression="value=new HorizontalLayout()" />
            <ResetComponent target="l2" className="spark.components.List" waitEvent="updateComplete" />
            <SetProperty    target="l2" propertyName="layout"  valueExpression="value=new HorizontalLayout()" />
            
            <SetProperty target="l1" propertyName="dataProvider" valueExpression="value=application.createPlayersAC()" waitEvent="updateComplete" waitTarget="l1"/>
            <SetProperty target="l2" propertyName="dataProvider" valueExpression="value=application.createPlayersAC()" waitEvent="updateComplete" waitTarget="l2"/>
            <SetProperty target="l1" propertyName="labelField" value="lastName" waitEvent="updateComplete" waitTarget="l1"/>
            <SetProperty target="l2" propertyName="labelField" value="firstName" waitEvent="updateComplete" waitTarget="l2"/>
            <SetProperty target="l1" propertyName="selectedIndex" value="0" />
            <SetProperty target="l1" propertyName="dragEnabled" value="true" />
            <SetProperty target="l1" propertyName="dragMoveEnabled" value="true" />
            <SetProperty target="l2" propertyName="dropEnabled" value="true" />
            
            <SetProperty target="l1" propertyName="width" value="150" waitEvent="updateComplete"/>
            <SetProperty target="l1" propertyName="height" value="50" waitEvent="updateComplete"/>
            <SetProperty target="l2" propertyName="width" value="150" waitEvent="updateComplete"/>
            <SetProperty target="l2" propertyName="height" value="50" waitEvent="updateComplete"/>
            <SetProperty target="l1.layout" propertyName="dragScrollInitialDelay" value="0" />
            <SetProperty target="l2.layout" propertyName="dragScrollInitialDelay" value="0" />
        </setup>
        <body>
            <DispatchMouseEvent target="l1"  type="mouseUp"  localX="10" localY="10" />
            <DispatchMouseEvent target="l1"  type="mouseOver" buttonDown="false" localX="10" localY="10" />
            <DispatchMouseClickEvent target="l1"    localX="20" localY="10" />
            <DispatchMouseEvent target="l1"  type="mouseDown" buttonDown="true"  localX="10" localY="10" />
            <DispatchMouseEvent target="l1"  type="mouseMove" buttonDown="true"  localX="145" localY="12" />
            <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="15" localY="15" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="updateComplete"/>
            <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="145" localY="15" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="move"/>
            <DispatchMouseEvent target="l2" type="mouseUp" localX="145" localY="15"  waitEvent="dragDrop" />
            <WaitForEffectsToEnd/>
            <WaitForLayoutManager/>
            <CompareBitmap numColorVariances="20" ignoreMaxColorVariance="true" target="hg" url="../events/baselines/$testID.png" />
        </body>
        <cleanup>
            <RunCode code="DragManager.endDrag()" />
        </cleanup>
    </TestCase>

	<TestCase testID="HListDefaultRenderer_rejectDrop1" keywords="[DragDrop, List]" description="">
           <setup>
                <ResetComponent target="l1" className="spark.components.List" waitEvent="updateComplete" />
                <SetProperty    target="l1" propertyName="layout"  valueExpression="value=new HorizontalLayout()" />
                <ResetComponent target="l2" className="spark.components.List" waitEvent="updateComplete" />
                <SetProperty    target="l2" propertyName="layout"  valueExpression="value=new HorizontalLayout()" />
                
                <SetProperty target="l1" propertyName="dataProvider" valueExpression="value=application.createPlayersAC()" waitEvent="updateComplete" waitTarget="l1"/>
                <SetProperty target="l2" propertyName="dataProvider" valueExpression="value=application.createPlayersAC()" waitEvent="updateComplete" waitTarget="l2"/>
                <SetProperty target="l1" propertyName="labelField" value="lastName" waitEvent="updateComplete" waitTarget="l1"/>
                <SetProperty target="l2" propertyName="labelField" value="firstName" waitEvent="updateComplete" waitTarget="l2"/>
                <SetProperty target="l1" propertyName="selectedIndex" value="0" />
                <SetProperty target="l1" propertyName="dragEnabled" value="true" />
                <SetProperty target="l1" propertyName="dragMoveEnabled" value="true" />
                <SetProperty target="l1" propertyName="width" value="150" waitEvent="updateComplete"/>
                <SetProperty target="l1" propertyName="height" value="50" waitEvent="updateComplete"/>
                <SetProperty target="l2" propertyName="width" value="150" waitEvent="updateComplete"/>
                <SetProperty target="l2" propertyName="height" value="50" waitEvent="updateComplete"/>
             	<SetProperty target="l1.layout" propertyName="dragScrollInitialDelay" value="0" />
	     		<SetProperty target="l2.layout" propertyName="dragScrollInitialDelay" value="0" />
            </setup>
            <body>
                <DispatchMouseEvent target="l1"  type="mouseUp"  localX="10" localY="10" />
                <DispatchMouseEvent target="l1"  type="mouseOver" buttonDown="false" localX="10" localY="10" />
                <DispatchMouseClickEvent target="l1"    localX="20" localY="10" />
                <DispatchMouseEvent target="l1"  type="mouseDown" buttonDown="true"  localX="10" localY="10" />
                <DispatchMouseEvent target="l1"  type="mouseMove" buttonDown="true"  localX="145" localY="12" waitEvent="dragStart" />
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="5" localY="10" waitEvent="dragEnter"/>
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="5" localY="30"  waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="move"/>
                <DispatchMouseEvent target="l2" type="mouseUp" localX="145" localY="30"  waitTarget="l1" waitEvent="dragComplete" />
                <WaitForEffectsToEnd/>
                <WaitForLayoutManager/>
                <CompareBitmap numColorVariances="20" ignoreMaxColorVariance="true" target="hg" url="../events/baselines/$testID.png" />
            </body>
            <cleanup>
                <RunCode code="DragManager.endDrag()" />
            </cleanup>
        </TestCase>

	<TestCase testID="HListDefaultRenderer_rejectDrop2" keywords="[DragDrop, List]" description="">
           <setup>
                <ResetComponent target="l1" className="spark.components.List" waitEvent="updateComplete" />
                <SetProperty    target="l1" propertyName="layout"  valueExpression="value=new HorizontalLayout()" />
                <ResetComponent target="l2" className="spark.components.List" waitEvent="updateComplete" />
                <SetProperty    target="l2" propertyName="layout"  valueExpression="value=new HorizontalLayout()" />

                <SetProperty target="l1" propertyName="dataProvider" valueExpression="value=application.createPlayersAC()" waitEvent="updateComplete" waitTarget="l1"/>
                <SetProperty target="l2" propertyName="dataProvider" valueExpression="value=application.createPlayersAC()" waitEvent="updateComplete" waitTarget="l2"/>
                <SetProperty target="l1" propertyName="labelField" value="lastName" waitEvent="updateComplete" waitTarget="l1"/>
                <SetProperty target="l2" propertyName="labelField" value="firstName" waitEvent="updateComplete" waitTarget="l2"/>
                <SetProperty target="l1" propertyName="selectedIndex" value="0" />
                <SetProperty target="l1" propertyName="dragEnabled" value="true" />
                <SetProperty target="l2" propertyName="dropEnabled" value="false" />
                <SetProperty target="l1" propertyName="width" value="150" waitEvent="updateComplete"/>
                <SetProperty target="l1" propertyName="height" value="50" waitEvent="updateComplete"/>
                <SetProperty target="l2" propertyName="width" value="150" waitEvent="updateComplete"/>
                <SetProperty target="l2" propertyName="height" value="50" waitEvent="updateComplete"/>
             	<SetProperty target="l1.layout" propertyName="dragScrollInitialDelay" value="0" />
	     		<SetProperty target="l2.layout" propertyName="dragScrollInitialDelay" value="0" />
            </setup>
            <body>
                <DispatchMouseEvent target="l1"  type="mouseUp"  localX="10" localY="10" />
                <DispatchMouseEvent target="l1"  type="mouseOver" buttonDown="false" localX="10" localY="10" />
                <DispatchMouseClickEvent target="l1"    localX="20" localY="10" />
                <DispatchMouseEvent target="l1"  type="mouseDown" buttonDown="true"  localX="10" localY="10" />
                <DispatchMouseEvent target="l1"  type="mouseMove" buttonDown="true"  localX="145" localY="12" />
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="15" localY="15" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="updateComplete"/>
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="145" localY="15" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="move"/>
                <DispatchMouseEvent target="l2" type="mouseUp" localX="145" localY="15" waitTarget="l1" waitEvent="dragComplete" />
                <WaitForEffectsToEnd/>
                <WaitForLayoutManager/>
                <CompareBitmap numColorVariances="20" ignoreMaxColorVariance="true" target="hg" url="../events/baselines/$testID.png" />
            </body>
            <cleanup>
                <RunCode code="DragManager.endDrag()" />
            </cleanup>
        </TestCase>

	<TestCase testID="HListAbcDND1_dragComplete" keywords="[DragDrop, List]" description="">
           <setup>
                <ResetComponent target="l1" className="spark.components.List" waitEvent="updateComplete" />
                <SetProperty    target="l1" propertyName="layout"  valueExpression="value=new HorizontalLayout()" />
                <ResetComponent target="l2" className="spark.components.List" waitEvent="updateComplete" />
                <SetProperty    target="l2" propertyName="layout"  valueExpression="value=new HorizontalLayout()" />
                <SetProperty target="l1" propertyName="itemRenderer"  valueExpression ="value= new ClassFactory( comps.ItemWithBorder )"  />
                <SetProperty target="l2" propertyName="itemRenderer"  valueExpression ="value= new ClassFactory( comps.ItemWithBorder )"  />
                <SetProperty target="l1" propertyName="dataProvider" valueExpression="value=application.createAbc()" waitEvent="updateComplete" waitTarget="l1"/>
                <SetProperty target="l2" propertyName="dataProvider" valueExpression="value=application.createAbc()" waitEvent="updateComplete" waitTarget="l2"/>
                <SetProperty target="l1" propertyName="selectedIndex" value="0" />
                <SetProperty target="l1" propertyName="dragEnabled" value="true" />
                <SetProperty target="l2" propertyName="dragEnabled" value="true" />
                <SetProperty target="l2" propertyName="dropEnabled" value="true" />
                <SetProperty target="l1" propertyName="width" value="150" waitEvent="updateComplete"/>
                <SetProperty target="l1" propertyName="height" value="50" waitEvent="updateComplete"/>
                <SetProperty target="l2" propertyName="width" value="150" waitEvent="updateComplete"/>
                <SetProperty target="l2" propertyName="height" value="50" waitEvent="updateComplete"/>
                <SetProperty target="l1.layout" propertyName="dragScrollInitialDelay" value="0" />
                <SetProperty target="l2.layout" propertyName="dragScrollInitialDelay" value="0" />
            </setup>
            <body>
                <DispatchMouseEvent target="l1"  type="mouseUp"  localX="10" localY="10" />
                <DispatchMouseEvent target="l1"  type="mouseOver" buttonDown="false" localX="10" localY="10" />
                <DispatchMouseClickEvent target="l1"    localX="20" localY="10" />
                <DispatchMouseEvent target="l1"  type="mouseDown" buttonDown="true"  localX="10" localY="10" />
                <DispatchMouseEvent target="l1"  type="mouseMove" buttonDown="true"  localX="145" localY="12" waitEvent="dragStart" />
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="5" localY="10" waitEvent="dragEnter"/>
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="145" localY="30"  waitEvent="dragOver"/>
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="145" localY="15" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="move"/>
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="145" localY="7" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="move"/>
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="145" localY="6" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="move"/>
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="145" localY="7"/>
                <WaitForEvent target="l2" eventName="dragOver" numExpectedEvents="2" />
                <DispatchMouseEvent target="l2" type="mouseUp" localX="145" localY="197"  waitTarget="l1" waitEvent="dragComplete" />
                <WaitForEffectsToEnd/>
                <WaitForLayoutManager/>
                <CompareBitmap numColorVariances="20" ignoreMaxColorVariance="true" target="hg" url="../events/baselines/$testID.png" />
            </body>
            <cleanup>
                <RunCode code="DragManager.endDrag()" />
            </cleanup>
        </TestCase>

	<TestCase testID="HListAbcDND1_dragDrop" keywords="[DragDrop, List]" description="">
           <setup>
                <ResetComponent target="l1" className="spark.components.List" waitEvent="updateComplete" />
                <SetProperty    target="l1" propertyName="layout"  valueExpression="value=new HorizontalLayout()" />
                <ResetComponent target="l2" className="spark.components.List" waitEvent="updateComplete" />
                <SetProperty    target="l2" propertyName="layout"  valueExpression="value=new HorizontalLayout()" />
                <SetProperty target="l1" propertyName="itemRenderer"  valueExpression ="value= new ClassFactory( comps.ItemWithBorder )"  />
                <SetProperty target="l2" propertyName="itemRenderer"  valueExpression ="value= new ClassFactory( comps.ItemWithBorder )"  />
                <SetProperty target="l1" propertyName="dataProvider" valueExpression="value=application.createAbc()" waitEvent="updateComplete" waitTarget="l1"/>
                <SetProperty target="l2" propertyName="dataProvider" valueExpression="value=application.createAbc()" waitEvent="updateComplete" waitTarget="l2"/>
                <SetProperty target="l1" propertyName="selectedIndex" value="0" />
                <SetProperty target="l1" propertyName="dragEnabled" value="true" />
                <SetProperty target="l1" propertyName="dragMoveEnabled" value="true" />
                <SetProperty target="l2" propertyName="dropEnabled" value="true" />
                <SetProperty target="l1" propertyName="width" value="150" waitEvent="updateComplete"/>
                <SetProperty target="l1" propertyName="height" value="50" waitEvent="updateComplete"/>
                <SetProperty target="l2" propertyName="width" value="150" waitEvent="updateComplete"/>
                <SetProperty target="l2" propertyName="height" value="50" waitEvent="updateComplete"/>
                <SetProperty target="l1.layout" propertyName="dragScrollInitialDelay" value="0" />
                <SetProperty target="l2.layout" propertyName="dragScrollInitialDelay" value="0" />
            </setup>
            <body>
                <DispatchMouseEvent target="l1"  type="mouseUp"  localX="10" localY="10" />
                <DispatchMouseEvent target="l1"  type="mouseOver" buttonDown="false" localX="10" localY="10" />
        
                <DispatchMouseEvent target="l1"  type="mouseDown" buttonDown="true"  localX="10" localY="10" />
                <DispatchMouseEvent target="l1"  type="mouseMove" buttonDown="true"  localX="145" localY="12" waitEvent="dragStart" />
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="5" localY="10" waitEvent="dragEnter"/>
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="145" localY="30"  waitEvent="dragOver"/>
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="145" localY="9" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="move"/>
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="145" localY="8" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="move"/>
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="145" localY="9" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="move"/>
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="145" localY="8"/>
                <WaitForEvent target="l2" eventName="dragOver" numExpectedEvents="2" />
                <DispatchMouseEvent target="l2" type="mouseUp" localX="145" localY="199"  waitTarget="l2" waitEvent="dragDrop" />
                <WaitForEffectsToEnd/>
                <WaitForLayoutManager/>
                <CompareBitmap numColorVariances="20" ignoreMaxColorVariance="true" target="hg" url="../events/baselines/$testID.png" />
            </body>
            <cleanup>
                <RunCode code="DragManager.endDrag()" />
            </cleanup>
        </TestCase>

	<!--TestCase testID="HListAbcDND1_dragExit" keywords="[DragDrop, List]" description="">
           <setup>
                <ResetComponent target="l1" className="spark.components.List" waitEvent="updateComplete" />
                <SetProperty    target="l1" propertyName="layout"  valueExpression="value=new HorizontalLayout()" />
                <ResetComponent target="l2" className="spark.components.List" waitEvent="updateComplete" />
                <SetProperty    target="l2" propertyName="layout"  valueExpression="value=new HorizontalLayout()" />
                <SetProperty target="l1" propertyName="itemRenderer"  valueExpression ="value= new ClassFactory( comps.ItemWithBorder )"  />
                <SetProperty target="l2" propertyName="itemRenderer"  valueExpression ="value= new ClassFactory( comps.ItemWithBorder )"  />
                <SetProperty target="l1" propertyName="dataProvider" valueExpression="value=application.createAbc()" waitEvent="updateComplete" waitTarget="l1"/>
                <SetProperty target="l2" propertyName="dataProvider" valueExpression="value=application.createAbc()" waitEvent="updateComplete" waitTarget="l2"/>
                <SetProperty target="l1" propertyName="selectedIndex" value="0" />
                <SetProperty target="l1" propertyName="dragEnabled" value="true" />
                <SetProperty target="l1" propertyName="dragMoveEnabled" value="true" />
                <SetProperty target="l2" propertyName="dropEnabled" value="true" />
                <SetProperty target="l1" propertyName="height" value="105" />
                <SetProperty target="l1" propertyName="width" value="150" waitEvent="updateComplete"/>
                <SetProperty target="l1" propertyName="height" value="50" waitEvent="updateComplete"/>
                <SetProperty target="l2" propertyName="width" value="150" waitEvent="updateComplete"/>
                <SetProperty target="l2" propertyName="height" value="50" waitEvent="updateComplete"/>
                <SetProperty target="l1.layout" propertyName="dragScrollInitialDelay" value="0" />
                <SetProperty target="l2.layout" propertyName="dragScrollInitialDelay" value="0" />
            </setup>
            <body>
                <DispatchMouseEvent target="l1"  type="mouseUp"  localX="10" localY="10" />
                <DispatchMouseEvent target="l1"  type="mouseOver" buttonDown="false" localX="10" localY="10" />
        
                <DispatchMouseEvent target="l1"  type="mouseDown" buttonDown="true"  localX="10" localY="10" />
                <DispatchMouseEvent target="l1"  type="mouseMove" buttonDown="true"  localX="145" localY="12" waitEvent="dragStart" />
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="5" localY="10" waitEvent="dragEnter"/>
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="145" localY="30"  waitEvent="dragOver"/>
                <WaitForLayoutManager/>
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="145" localY="9" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="move"/>
                <WaitForLayoutManager/>
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="145" localY="8" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="move"/>
                <WaitForEffectsToEnd/>
                <WaitForLayoutManager/>
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="145" localY="9" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="move"/>
                <WaitForEffectsToEnd/>
                <WaitForLayoutManager/>
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="5" localY="8" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="move"/>
                <WaitForEffectsToEnd/>
                <WaitForLayoutManager/>
                <DispatchMouseEvent target="l2" type="mouseMove" localX="-5" localY="-5"  waitTarget="l2" waitEvent="dragExit" />
                <WaitForEffectsToEnd/>
                <WaitForLayoutManager/>
                <CompareBitmap numColorVariances="20" ignoreMaxColorVariance="true" target="hg" url="../events/baselines/$testID.png" />
                <DispatchMouseEvent target="l2" type="mouseUp" localX="1" localY="20"  waitTarget="l1" waitEvent="dragComplete" />
                <WaitForEffectsToEnd/>

            </body>
            <cleanup>
                <RunCode code="DragManager.endDrag()" />
            </cleanup>
        </TestCase-->

	<TestCase testID="HListAbcDND1_rejectDrop1" keywords="[DragDrop, List]" description="">
           <setup>
                <ResetComponent target="l1" className="spark.components.List" waitEvent="updateComplete" />
                <SetProperty    target="l1" propertyName="layout"  valueExpression="value=new HorizontalLayout()" />
                <ResetComponent target="l2" className="spark.components.List" waitEvent="updateComplete" />
                <SetProperty    target="l2" propertyName="layout"  valueExpression="value=new HorizontalLayout()" />
                <SetProperty target="l1" propertyName="itemRenderer"  valueExpression ="value= new ClassFactory( comps.ItemWithBorder )"  />
                <SetProperty target="l2" propertyName="itemRenderer"  valueExpression ="value= new ClassFactory( comps.ItemWithBorder )"  />
                <SetProperty target="l1" propertyName="dataProvider" valueExpression="value=application.createAbc()" waitEvent="updateComplete" waitTarget="l1"/>
                <SetProperty target="l2" propertyName="dataProvider" valueExpression="value=application.createAbc()" waitEvent="updateComplete" waitTarget="l2"/>
                <SetProperty target="l1" propertyName="width" value="150" waitEvent="updateComplete"/>
                <SetProperty target="l1" propertyName="height" value="50" waitEvent="updateComplete"/>
                <SetProperty target="l2" propertyName="width" value="150" waitEvent="updateComplete"/>
                <SetProperty target="l2" propertyName="height" value="50" waitEvent="updateComplete"/>
                <SetProperty target="l1" propertyName="selectedIndex" value="0" />
                <SetProperty target="l1" propertyName="dragEnabled" value="true" />
                <SetProperty target="l1" propertyName="dragMoveEnabled" value="true" />
                <SetProperty target="l1.layout" propertyName="dragScrollInitialDelay" value="0" />
                <SetProperty target="l2.layout" propertyName="dragScrollInitialDelay" value="0" />
            </setup>
            <body>
                <DispatchMouseEvent target="l1"  type="mouseUp"  localX="10" localY="10" />
                <DispatchMouseEvent target="l1"  type="mouseOver" buttonDown="false" localX="10" localY="10" />
                
                <DispatchMouseEvent target="l1"  type="mouseDown" buttonDown="true"  localX="10" localY="10" />
                <DispatchMouseEvent target="l1"  type="mouseMove" buttonDown="true"  localX="145" localY="12" waitEvent="dragStart" />
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="5" localY="10" waitEvent="dragEnter"/>
                
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="145" localY="9" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="move"/>
                <WaitForLayoutManager/>
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="145" localY="8" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="move"/>
                <WaitForLayoutManager/>
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="145" localY="9" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="move"/>
                <WaitForLayoutManager/>
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="145" localY="8" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="move"/>
                <WaitForLayoutManager/>
                <CompareBitmap numColorVariances="20" ignoreMaxColorVariance="true" target="hg" url="../events/baselines/$testID.png" />
            </body>
            <cleanup>
                <RunCode code="DragManager.endDrag()" />
            </cleanup>
        </TestCase>

	<TestCase testID="TileListDefaultRenderer_dragComplete" keywords="[DragDrop, List]" description="">
           <setup>
                <DispatchMouseEvent target="l2" type="mouseUp" localX="145" localY="1"  waitTarget="l1" waitEvent="dragComplete" />
                <WaitForEffectsToEnd/>
                <ResetComponent target="l1" className="spark.components.List" waitEvent="updateComplete" />
                <SetProperty    target="l1" propertyName="layout"  valueExpression="value=new TileLayout()" />
                <ResetComponent target="l2" className="spark.components.List" waitEvent="updateComplete" />
                <SetProperty    target="l2" propertyName="layout"  valueExpression="value=new TileLayout()" />
                <SetProperty target="l1" propertyName="dataProvider" valueExpression="value=application.createPlayersAC()" waitEvent="updateComplete" waitTarget="l1"/>
                <SetProperty target="l2" propertyName="dataProvider" valueExpression="value=application.createPlayersAC()" waitEvent="updateComplete" waitTarget="l2"/>
                <SetProperty target="l1" propertyName="labelField" value="lastName" waitEvent="updateComplete" waitTarget="l1"/>
                <SetProperty target="l2" propertyName="labelField" value="firstName" waitEvent="updateComplete" waitTarget="l2"/>
                <SetProperty target="l1" propertyName="selectedIndex" value="0" />
                <SetProperty target="l1" propertyName="dragEnabled" value="true" />
                <SetProperty target="l2" propertyName="dragEnabled" value="true" />
                <SetProperty target="l2" propertyName="dropEnabled" value="true" />
                <SetProperty target="l1" propertyName="width" value="150" waitEvent="updateComplete"/>
                <SetProperty target="l1" propertyName="height" value="200" waitEvent="updateComplete"/>
                <SetProperty target="l2" propertyName="width" value="150" waitEvent="updateComplete"/>
                <SetProperty target="l2" propertyName="height" value="200" waitEvent="updateComplete"/>
                <SetProperty target="l1.layout" propertyName="dragScrollInitialDelay" value="0" />
                <SetProperty target="l2.layout" propertyName="dragScrollInitialDelay" value="0" />
            </setup>
            <body>
                <DispatchMouseEvent target="l1"  type="mouseUp"  localX="10" localY="10" />
                <DispatchMouseEvent target="l1"  type="mouseOver" buttonDown="false" localX="10" localY="10" />
        
                <DispatchMouseEvent target="l1"  type="mouseDown" buttonDown="true"  localX="10" localY="10" />
                <DispatchMouseEvent target="l1"  type="mouseMove" buttonDown="true"  localX="145" localY="12" waitEvent="dragStart" />
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="5" localY="10" waitEvent="dragEnter"/>
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="145" localY="30"  waitEvent="dragOver"/>
                <DispatchMouseEvent target="l2" type="mouseUp" localX="145" localY="30"  waitTarget="l1" waitEvent="dragComplete" />
                <WaitForEffectsToEnd/>
                <WaitForLayoutManager/>
                <CompareBitmap numColorVariances="20" ignoreMaxColorVariance="true" target="hg" url="../events/baselines/$testID.png" />
            </body>
             <cleanup>
                <RunCode code="DragManager.endDrag()" />
            </cleanup>
       </TestCase>
        
	<TestCase testID="TileListDefaultRenderer_dragExit" keywords="[DragDrop, List]" description="">
           <setup>
                <ResetComponent target="l1" className="spark.components.List" waitEvent="updateComplete" />
                <SetProperty    target="l1" propertyName="layout"  valueExpression="value=new TileLayout()" />
                <ResetComponent target="l2" className="spark.components.List" waitEvent="updateComplete" />
                <SetProperty    target="l2" propertyName="layout"  valueExpression="value=new TileLayout()" />
                <SetProperty target="l1" propertyName="dataProvider" valueExpression="value=application.createPlayersAC()" waitEvent="updateComplete" waitTarget="l1"/>
                <SetProperty target="l2" propertyName="dataProvider" valueExpression="value=application.createPlayersAC()" waitEvent="updateComplete" waitTarget="l2"/>
                <SetProperty target="l1" propertyName="labelField" value="lastName" waitEvent="updateComplete" waitTarget="l1"/>
                <SetProperty target="l2" propertyName="labelField" value="firstName" waitEvent="updateComplete" waitTarget="l2"/>
                <SetProperty target="l1" propertyName="selectedIndex" value="0" />
                <SetProperty target="l1" propertyName="dragEnabled" value="true" />
                <SetProperty target="l1" propertyName="dragMoveEnabled" value="true" />
                <SetProperty target="l2" propertyName="dropEnabled" value="true" />
                <SetProperty target="l1" propertyName="width" value="150" waitEvent="updateComplete"/>
                <SetProperty target="l1" propertyName="height" value="200" waitEvent="updateComplete"/>
                <SetProperty target="l2" propertyName="width" value="150" waitEvent="updateComplete"/>
                <SetProperty target="l2" propertyName="height" value="200" waitEvent="updateComplete"/>
                <SetProperty target="l1.layout" propertyName="dragScrollInitialDelay" value="0" />
                <SetProperty target="l2.layout" propertyName="dragScrollInitialDelay" value="0" />
            </setup>
            <body>
                <DispatchMouseEvent target="l1"  type="mouseUp"  localX="10" localY="10" />
                <DispatchMouseEvent target="l1"  type="mouseOver" buttonDown="false" localX="10" localY="10" />
        
                <DispatchMouseEvent target="l1"  type="mouseDown" buttonDown="true"  localX="10" localY="10" />
                <DispatchMouseEvent target="l1"  type="mouseMove" buttonDown="true"  localX="145" localY="12" waitEvent="dragStart" />
                <WaitForLayoutManager/>
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="5" localY="10" waitEvent="dragEnter"/>
                <WaitForLayoutManager/>
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="145" localY="30"  waitEvent="dragOver"/>
                <WaitForLayoutManager/>
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="-1" localY="-10"  waitEvent="dragExit"/>
                <WaitForLayoutManager/>
                <DispatchMouseEvent target="l2" type="mouseUp" localX="145" localY="30"  waitTarget="l1" waitEvent="dragComplete" />
                <WaitForLayoutManager/>
                <CompareBitmap numColorVariances="20" ignoreMaxColorVariance="true" target="hg" url="../events/baselines/$testID.png" />
            </body>
            <cleanup>
                <RunCode code="DragManager.endDrag()" />
            </cleanup>
        </TestCase>
        
	<TestCase testID="TileListDefaultRenderer_dragDrop" keywords="[DragDrop, List]" description="">
           <setup>
                <ResetComponent target="l1" className="spark.components.List" waitEvent="updateComplete" />
                <SetProperty    target="l1" propertyName="layout"  valueExpression="value=new TileLayout()" />
                <ResetComponent target="l2" className="spark.components.List" waitEvent="updateComplete" />
                <SetProperty    target="l2" propertyName="layout"  valueExpression="value=new TileLayout()" />
                
                <SetProperty target="l1" propertyName="dataProvider" valueExpression="value=application.createPlayersAC()" waitEvent="updateComplete" waitTarget="l1"/>
                <SetProperty target="l2" propertyName="dataProvider" valueExpression="value=application.createPlayersAC()" waitEvent="updateComplete" waitTarget="l2"/>
                <SetProperty target="l1" propertyName="labelField" value="lastName" waitEvent="updateComplete" waitTarget="l1"/>
                <SetProperty target="l2" propertyName="labelField" value="firstName" waitEvent="updateComplete" waitTarget="l2"/>
                <SetProperty target="l1" propertyName="selectedIndex" value="0" />
                <SetProperty target="l1" propertyName="dragEnabled" value="true" />
                <SetProperty target="l1" propertyName="dragMoveEnabled" value="true" />
                <SetProperty target="l2" propertyName="dropEnabled" value="true" />
                
                <SetProperty target="l1" propertyName="width" value="150" waitEvent="updateComplete"/>
                <SetProperty target="l1" propertyName="height" value="200" waitEvent="updateComplete"/>
                <SetProperty target="l2" propertyName="width" value="150" waitEvent="updateComplete"/>
                <SetProperty target="l2" propertyName="height" value="200" waitEvent="updateComplete"/>
                <SetProperty target="l1.layout" propertyName="dragScrollInitialDelay" value="0" />
                <SetProperty target="l2.layout" propertyName="dragScrollInitialDelay" value="0" />
            </setup>
            <body>
                <DispatchMouseEvent target="l1"  type="mouseUp"  localX="10" localY="10" />
                <DispatchMouseEvent target="l1"  type="mouseOver" buttonDown="false" localX="10" localY="10" />
                <DispatchMouseClickEvent target="l1"    localX="20" localY="10" />
                <DispatchMouseEvent target="l1"  type="mouseDown" buttonDown="true"  localX="10" localY="10" />
                <DispatchMouseEvent target="l1"  type="mouseMove" buttonDown="true"  localX="145" localY="12" />
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="15" localY="15" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="updateComplete"/>
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="145" localY="15" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="move"/>
                <DispatchMouseEvent target="l2" type="mouseUp" localX="145" localY="15"  waitEvent="dragDrop" />
                <WaitForEffectsToEnd/>
                <WaitForLayoutManager/>
                <CompareBitmap numColorVariances="20" ignoreMaxColorVariance="true" target="hg" url="../events/baselines/$testID.png" />
            </body>
            <cleanup>
                <RunCode code="DragManager.endDrag()" />
            </cleanup>
        </TestCase>

	<TestCase testID="TileListDefaultRenderer_rejectDrop1" keywords="[DragDrop, List]" description="">
           <setup>
                <ResetComponent target="l1" className="spark.components.List" waitEvent="updateComplete" />
                <SetProperty    target="l1" propertyName="layout"  valueExpression="value=new TileLayout()" />
                <ResetComponent target="l2" className="spark.components.List" waitEvent="updateComplete" />
                <SetProperty    target="l2" propertyName="layout"  valueExpression="value=new TileLayout()" />
                
                <SetProperty target="l1" propertyName="dataProvider" valueExpression="value=application.createPlayersAC()" waitEvent="updateComplete" waitTarget="l1"/>
                <SetProperty target="l2" propertyName="dataProvider" valueExpression="value=application.createPlayersAC()" waitEvent="updateComplete" waitTarget="l2"/>
                <SetProperty target="l1" propertyName="labelField" value="lastName" waitEvent="updateComplete" waitTarget="l1"/>
                <SetProperty target="l2" propertyName="labelField" value="firstName" waitEvent="updateComplete" waitTarget="l2"/>
                <SetProperty target="l1" propertyName="selectedIndex" value="0" />
                <SetProperty target="l1" propertyName="dragEnabled" value="true" />
                <SetProperty target="l1" propertyName="dragMoveEnabled" value="true" />
                <SetProperty target="l1" propertyName="width" value="150" waitEvent="updateComplete"/>
                <SetProperty target="l1" propertyName="height" value="200" waitEvent="updateComplete"/>
                <SetProperty target="l2" propertyName="width" value="150" waitEvent="updateComplete"/>
                <SetProperty target="l2" propertyName="height" value="200" waitEvent="updateComplete"/>
                <SetProperty target="l1.layout" propertyName="dragScrollInitialDelay" value="0" />
                <SetProperty target="l2.layout" propertyName="dragScrollInitialDelay" value="0" />
            </setup>
            <body>
                <DispatchMouseEvent target="l1"  type="mouseUp"  localX="10" localY="10" />
                <DispatchMouseEvent target="l1"  type="mouseOver" buttonDown="false" localX="10" localY="10" />
                <DispatchMouseClickEvent target="l1"    localX="20" localY="10" />
                <DispatchMouseEvent target="l1"  type="mouseDown" buttonDown="true"  localX="10" localY="10" />
                <DispatchMouseEvent target="l1"  type="mouseMove" buttonDown="true"  localX="145" localY="12" waitEvent="dragStart" />
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="5" localY="10" waitEvent="dragEnter"/>
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="5" localY="30"  waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="move"/>
                <DispatchMouseEvent target="l2" type="mouseUp" localX="145" localY="30"  waitTarget="l1" waitEvent="dragComplete" />
                <WaitForEffectsToEnd/>
                <WaitForLayoutManager/>
                <CompareBitmap numColorVariances="20" ignoreMaxColorVariance="true" target="hg" url="../events/baselines/$testID.png" />
            </body>
            <cleanup>
                <RunCode code="DragManager.endDrag()" />
            </cleanup>
        </TestCase>

	<TestCase testID="TileListDefaultRenderer_rejectDrop2" keywords="[DragDrop, List]" description="">
           <setup>
                <ResetComponent target="l1" className="spark.components.List" waitEvent="updateComplete" />
                <SetProperty    target="l1" propertyName="layout"  valueExpression="value=new TileLayout()" />
                <ResetComponent target="l2" className="spark.components.List" waitEvent="updateComplete" />
                <SetProperty    target="l2" propertyName="layout"  valueExpression="value=new TileLayout()" />
                
                <SetProperty target="l1" propertyName="dataProvider" valueExpression="value=application.createPlayersAC()" waitEvent="updateComplete" waitTarget="l1"/>
                <SetProperty target="l2" propertyName="dataProvider" valueExpression="value=application.createPlayersAC()" waitEvent="updateComplete" waitTarget="l2"/>
                <SetProperty target="l1" propertyName="labelField" value="lastName" waitEvent="updateComplete" waitTarget="l1"/>
                <SetProperty target="l2" propertyName="labelField" value="firstName" waitEvent="updateComplete" waitTarget="l2"/>
                <SetProperty target="l1" propertyName="selectedIndex" value="0" />
                <SetProperty target="l1" propertyName="dragEnabled" value="true" />
                <SetProperty target="l2" propertyName="dropEnabled" value="false" />
                <SetProperty target="l1" propertyName="width" value="150" waitEvent="updateComplete"/>
                <SetProperty target="l1" propertyName="height" value="200" waitEvent="updateComplete"/>
                <SetProperty target="l2" propertyName="width" value="150" waitEvent="updateComplete"/>
                <SetProperty target="l2" propertyName="height" value="200" waitEvent="updateComplete"/>
                <SetProperty target="l1.layout" propertyName="dragScrollInitialDelay" value="0" />
                <SetProperty target="l2.layout" propertyName="dragScrollInitialDelay" value="0" />
            </setup>
            <body>
                <DispatchMouseEvent target="l1"  type="mouseUp"  localX="10" localY="10" />
                <DispatchMouseEvent target="l1"  type="mouseOver" buttonDown="false" localX="10" localY="10" />
                <DispatchMouseClickEvent target="l1"    localX="20" localY="10" />
                <DispatchMouseEvent target="l1"  type="mouseDown" buttonDown="true"  localX="10" localY="10" />
                <DispatchMouseEvent target="l1"  type="mouseMove" buttonDown="true"  localX="145" localY="12" />
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="15" localY="15" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="updateComplete"/>
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="145" localY="15" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="move"/>
                <DispatchMouseEvent target="l2" type="mouseUp" localX="145" localY="15" waitTarget="l1" waitEvent="dragComplete" />
                <WaitForEffectsToEnd/>
                <WaitForLayoutManager/>
                <CompareBitmap numColorVariances="20" ignoreMaxColorVariance="true" target="hg" url="../events/baselines/$testID.png" />

            </body>
            <cleanup>
                <RunCode code="DragManager.endDrag()" />
            </cleanup>
        </TestCase>


	<TestCase testID="TileListAbcDND1_dragComplete" keywords="[DragDrop, List]" description="">
           <setup>
                <ResetComponent target="l1" className="spark.components.List" waitEvent="updateComplete" />
                <SetProperty    target="l1" propertyName="layout"  valueExpression="value=new TileLayout()" />
                <ResetComponent target="l2" className="spark.components.List" waitEvent="updateComplete" />
                <SetProperty    target="l2" propertyName="layout"  valueExpression="value=new TileLayout()" />
                <SetProperty target="l1" propertyName="itemRenderer"  valueExpression ="value= new ClassFactory( comps.ItemWithBorder )"  />
                <SetProperty target="l2" propertyName="itemRenderer"  valueExpression ="value= new ClassFactory( comps.ItemWithBorder )"  />
                <SetProperty target="l1" propertyName="dataProvider" valueExpression="value=application.createAbc()" waitEvent="updateComplete" waitTarget="l1"/>
                <SetProperty target="l2" propertyName="dataProvider" valueExpression="value=application.createAbc()" waitEvent="updateComplete" waitTarget="l2"/>
                <SetProperty target="l1" propertyName="selectedIndex" value="0" />
                <SetProperty target="l1" propertyName="dragEnabled" value="true" />
                <SetProperty target="l2" propertyName="dragEnabled" value="true" />
                <SetProperty target="l2" propertyName="dropEnabled" value="true" />
                <SetProperty target="l1" propertyName="width" value="150" waitEvent="updateComplete"/>
                <SetProperty target="l1" propertyName="height" value="200" waitEvent="updateComplete"/>
                <SetProperty target="l2" propertyName="width" value="150" waitEvent="updateComplete"/>
                <SetProperty target="l2" propertyName="height" value="200" waitEvent="updateComplete"/>
            	<SetProperty target="l1.layout" propertyName="dragScrollInitialDelay" value="0" />
	    	    <SetProperty target="l2.layout" propertyName="dragScrollInitialDelay" value="0" />
            </setup>
            <body>
                <DispatchMouseEvent target="l1"  type="mouseUp"  localX="10" localY="10" />
                <DispatchMouseEvent target="l1"  type="mouseOver" buttonDown="false" localX="10" localY="10" />
                <DispatchMouseClickEvent target="l1"    localX="20" localY="10" />
                <DispatchMouseEvent target="l1"  type="mouseDown" buttonDown="true"  localX="10" localY="10" />
                <DispatchMouseEvent target="l1"  type="mouseMove" buttonDown="true"  localX="145" localY="12" waitEvent="dragStart" />
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="5" localY="10" waitEvent="dragEnter"/>
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="145" localY="30"  waitEvent="dragOver"/>
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="145" localY="15" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="move"/>
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="145" localY="7" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="move"/>
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="145" localY="6" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="move"/>
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="145" localY="7" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="move"/>
                <DispatchMouseEvent target="l2" type="mouseUp" localX="145" localY="197"  waitTarget="l1" waitEvent="dragComplete" />
                <WaitForEffectsToEnd/>
                <WaitForLayoutManager/>
                <CompareBitmap numColorVariances="20" ignoreMaxColorVariance="true" target="hg" url="../events/baselines/$testID.png" />
            </body>
            <cleanup>
                <RunCode code="DragManager.endDrag()" />
            </cleanup>
        </TestCase>

	<TestCase testID="TileListAbcDND1_dragDrop" keywords="[DragDrop, List]" description="">
           <setup>
                <ResetComponent target="l1" className="spark.components.List" waitEvent="updateComplete" />
                <SetProperty    target="l1" propertyName="layout"  valueExpression="value=new TileLayout()" />
                <ResetComponent target="l2" className="spark.components.List" waitEvent="updateComplete" />
                <SetProperty    target="l2" propertyName="layout"  valueExpression="value=new TileLayout()" />
                <SetProperty target="l1" propertyName="itemRenderer"  valueExpression ="value= new ClassFactory( comps.ItemWithBorder )"  />
                <SetProperty target="l2" propertyName="itemRenderer"  valueExpression ="value= new ClassFactory( comps.ItemWithBorder )"  />
                <SetProperty target="l1" propertyName="dataProvider" valueExpression="value=application.createAbc()" waitEvent="updateComplete" waitTarget="l1"/>
                <SetProperty target="l2" propertyName="dataProvider" valueExpression="value=application.createAbc()" waitEvent="updateComplete" waitTarget="l2"/>
                <SetProperty target="l1" propertyName="selectedIndex" value="0" />
                <SetProperty target="l1" propertyName="dragEnabled" value="true" />
                <SetProperty target="l1" propertyName="dragMoveEnabled" value="true" />
                <SetProperty target="l2" propertyName="dropEnabled" value="true" />
                <SetProperty target="l1" propertyName="width" value="150" waitEvent="updateComplete"/>
                <SetProperty target="l1" propertyName="height" value="200" waitEvent="updateComplete"/>
                <SetProperty target="l2" propertyName="width" value="150" waitEvent="updateComplete"/>
                <SetProperty target="l2" propertyName="height" value="200" waitEvent="updateComplete"/>
                <SetProperty target="l1.layout" propertyName="dragScrollInitialDelay" value="0" />
                <SetProperty target="l2.layout" propertyName="dragScrollInitialDelay" value="0" />
            </setup>
            <body>
                <DispatchMouseEvent target="l1"  type="mouseUp"  localX="10" localY="10" />
                <DispatchMouseEvent target="l1"  type="mouseOver" buttonDown="false" localX="10" localY="10" />
        
                <DispatchMouseEvent target="l1"  type="mouseDown" buttonDown="true"  localX="10" localY="10" />
                <DispatchMouseEvent target="l1"  type="mouseMove" buttonDown="true"  localX="145" localY="12" waitEvent="dragStart" />
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="5" localY="10" waitEvent="dragEnter"/>
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="145" localY="30"  waitEvent="dragOver"/>
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="145" localY="199" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="move"/>
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="145" localY="198" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="move"/>
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="145" localY="199" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="move"/>
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="145" localY="198" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="move"/>
                <DispatchMouseEvent target="l2" type="mouseUp" localX="145" localY="199"  waitTarget="l2" waitEvent="dragDrop" />
                <WaitForEffectsToEnd/>
                <WaitForLayoutManager/>
                <CompareBitmap numColorVariances="20" ignoreMaxColorVariance="true" target="hg" url="../events/baselines/$testID.png" />
            </body>
            <cleanup>
                <RunCode code="DragManager.endDrag()" />
            </cleanup>
        </TestCase>

	<TestCase testID="TileListAbcDND1_dragExit" keywords="[DragDrop, List]" description="">
           <setup>
                <ResetComponent target="l1" className="spark.components.List" waitEvent="updateComplete" />
                <SetProperty    target="l1" propertyName="layout"  valueExpression="value=new TileLayout()" />
                <ResetComponent target="l2" className="spark.components.List" waitEvent="updateComplete" />
                <SetProperty    target="l2" propertyName="layout"  valueExpression="value=new TileLayout()" />
                <SetProperty target="l1" propertyName="itemRenderer"  valueExpression ="value= new ClassFactory( comps.ItemWithBorder )"  />
                <SetProperty target="l2" propertyName="itemRenderer"  valueExpression ="value= new ClassFactory( comps.ItemWithBorder )"  />
                <SetProperty target="l1" propertyName="dataProvider" valueExpression="value=application.createAbc()" waitEvent="updateComplete" waitTarget="l1"/>
                <SetProperty target="l2" propertyName="dataProvider" valueExpression="value=application.createAbc()" waitEvent="updateComplete" waitTarget="l2"/>
                <SetProperty target="l1" propertyName="selectedIndex" value="0" />
                <SetProperty target="l1" propertyName="dragEnabled" value="true" />
                <SetProperty target="l1" propertyName="dragMoveEnabled" value="true" />
                <SetProperty target="l2" propertyName="dropEnabled" value="true" />
                <SetProperty target="l1" propertyName="height" value="105" />
                <SetProperty target="l1" propertyName="width" value="150" waitEvent="updateComplete"/>
                <SetProperty target="l1" propertyName="height" value="200" waitEvent="updateComplete"/>
                <SetProperty target="l2" propertyName="width" value="150" waitEvent="updateComplete"/>
                <SetProperty target="l2" propertyName="height" value="200" waitEvent="updateComplete"/>
                <SetProperty target="l1.layout" propertyName="dragScrollInitialDelay" value="0" />
                <SetProperty target="l2.layout" propertyName="dragScrollInitialDelay" value="0" />
            </setup>
            <body>
                <DispatchMouseEvent target="l1"  type="mouseUp"  localX="10" localY="10" />
                <DispatchMouseEvent target="l1"  type="mouseOver" buttonDown="false" localX="10" localY="10" />
                
                <DispatchMouseEvent target="l1"  type="mouseDown" buttonDown="true"  localX="10" localY="10" />
                <DispatchMouseEvent target="l1"  type="mouseMove" buttonDown="true"  localX="145" localY="12" waitEvent="dragStart" />
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="5" localY="10" waitEvent="dragEnter"/>
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="145" localY="30"  waitEvent="dragOver"/>
                <WaitForEffectsToEnd/>
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="145" localY="199" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="move"/>
                <WaitForEffectsToEnd/>
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="145" localY="198" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="move"/>
                <WaitForEffectsToEnd/>
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="145" localY="199" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="move"/>
                <WaitForEffectsToEnd/>
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="5" localY="198" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="move"/>
                <WaitForEffectsToEnd/>
                <DispatchMouseEvent target="l2" type="mouseMove" localX="-2" localY="195"  waitTarget="l2" waitEvent="dragExit" />
                <WaitForEffectsToEnd/>
                <DispatchMouseEvent target="l2" type="mouseUp" localX="-1" localY="190"  waitTarget="l1" waitEvent="dragComplete" />
                <WaitForEffectsToEnd/>
                <WaitForLayoutManager/>
                <CompareBitmap numColorVariances="20" ignoreMaxColorVariance="true" target="hg" url="../events/baselines/$testID.png" />
            </body>
             <cleanup>
                <RunCode code="DragManager.endDrag()" />
            </cleanup>
       </TestCase>

	<TestCase testID="TileListAbcDND1_rejectDrop1" keywords="[DragDrop, List]" description="">
           <setup>
                <ResetComponent target="l1" className="spark.components.List" waitEvent="updateComplete" />
                <SetProperty    target="l1" propertyName="layout"  valueExpression="value=new TileLayout()" />
                <ResetComponent target="l2" className="spark.components.List" waitEvent="updateComplete" />
                <SetProperty    target="l2" propertyName="layout"  valueExpression="value=new TileLayout()" />
                <SetProperty target="l1" propertyName="itemRenderer"  valueExpression ="value= new ClassFactory( comps.ItemWithBorder )"  />
                <SetProperty target="l2" propertyName="itemRenderer"  valueExpression ="value= new ClassFactory( comps.ItemWithBorder )"  />
                <SetProperty target="l1" propertyName="dataProvider" valueExpression="value=application.createAbc()" waitEvent="updateComplete" waitTarget="l1"/>
                <SetProperty target="l2" propertyName="dataProvider" valueExpression="value=application.createAbc()" waitEvent="updateComplete" waitTarget="l2"/>
                <SetProperty target="l1" propertyName="width" value="150" waitEvent="updateComplete"/>
                <SetProperty target="l1" propertyName="height" value="200" waitEvent="updateComplete"/>
                <SetProperty target="l2" propertyName="width" value="150" waitEvent="updateComplete"/>
                <SetProperty target="l2" propertyName="height" value="200" waitEvent="updateComplete"/>
                <SetProperty target="l1" propertyName="selectedIndex" value="0" />
                <SetProperty target="l1" propertyName="dragEnabled" value="true" />
                <SetProperty target="l1" propertyName="dragMoveEnabled" value="true" />
                <SetProperty target="l1.layout" propertyName="dragScrollInitialDelay" value="0" />
                <SetProperty target="l2.layout" propertyName="dragScrollInitialDelay" value="0" />
            </setup>
            <body>
                <DispatchMouseEvent target="l1"  type="mouseUp"  localX="10" localY="10" />
                <DispatchMouseEvent target="l1"  type="mouseOver" buttonDown="false" localX="10" localY="10" />
        
                <DispatchMouseEvent target="l1"  type="mouseDown" buttonDown="true"  localX="10" localY="10" />
                <DispatchMouseEvent target="l1"  type="mouseMove" buttonDown="true"  localX="145" localY="12" waitEvent="dragStart" />
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="5" localY="10" waitEvent="dragEnter"/>
        
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="145" localY="199" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="move"/>
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="145" localY="198" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="move"/>
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="145" localY="199" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="move"/>
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="145" localY="198" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="move"/>
                <WaitForLayoutManager/>
                <CompareBitmap numColorVariances="20" ignoreMaxColorVariance="true" target="hg" url="../events/baselines/$testID.png" />
                <DispatchMouseEvent target="l2" type="mouseUp" localX="145" localY="191"  waitTarget="l1" waitEvent="dragComplete" />
                <WaitForEffectsToEnd/>
            </body>
            <cleanup>
                <RunCode code="DragManager.endDrag()" />
            </cleanup>
        </TestCase>
        
	<TestCase testID="TileListColDefaultRenderer_dragComplete" keywords="[DragDrop, List]" description="">
           <setup>
                <ResetComponent target="l1" className="spark.components.List" waitEvent="updateComplete" />
                <SetProperty    target="l1" propertyName="layout"  valueExpression="value=new TileLayout()" />
                <ResetComponent target="l2" className="spark.components.List" waitEvent="updateComplete" />
                <SetProperty    target="l2" propertyName="layout"  valueExpression="value=new TileLayout()" />
                <SetProperty    target="l1.layout" propertyName="orientation" value="columns" />
                <SetProperty    target="l2.layout" propertyName="orientation" value="columns" />
                <SetProperty target="l1" propertyName="dataProvider" valueExpression="value=application.createPlayersAC()" waitEvent="updateComplete" waitTarget="l1"/>
                <SetProperty target="l2" propertyName="dataProvider" valueExpression="value=application.createPlayersAC()" waitEvent="updateComplete" waitTarget="l2"/>
                <SetProperty target="l1" propertyName="labelField" value="lastName" waitEvent="updateComplete" waitTarget="l1"/>
                <SetProperty target="l2" propertyName="labelField" value="firstName" waitEvent="updateComplete" waitTarget="l2"/>
                <SetProperty target="l1" propertyName="selectedIndex" value="0" />
                <SetProperty target="l1" propertyName="dragEnabled" value="true" />
                <SetProperty target="l2" propertyName="dragEnabled" value="true" />
                <SetProperty target="l2" propertyName="dropEnabled" value="true" />
                <SetProperty target="l1" propertyName="width" value="150" waitEvent="updateComplete"/>
                <SetProperty target="l1" propertyName="height" value="200" waitEvent="updateComplete"/>
                <SetProperty target="l2" propertyName="width" value="150" waitEvent="updateComplete"/>
                <SetProperty target="l2" propertyName="height" value="200" waitEvent="updateComplete"/>
                <SetProperty target="l1.layout" propertyName="dragScrollInitialDelay" value="0" />
                <SetProperty target="l2.layout" propertyName="dragScrollInitialDelay" value="0" />
            </setup>
            <body>
                <DispatchMouseEvent target="l1"  type="mouseUp"  localX="10" localY="10" />
                <DispatchMouseEvent target="l1"  type="mouseOver" buttonDown="false" localX="10" localY="10" />
                
                <DispatchMouseEvent target="l1"  type="mouseDown" buttonDown="true"  localX="10" localY="10" />
                <DispatchMouseEvent target="l1"  type="mouseMove" buttonDown="true"  localX="145" localY="12" waitEvent="dragStart" />
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="5" localY="10" waitEvent="dragEnter"/>
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="145" localY="30"  waitEvent="dragOver"/>
                <DispatchMouseEvent target="l2" type="mouseUp" localX="145" localY="30"  waitTarget="l1" waitEvent="dragComplete" />
                <WaitForEffectsToEnd/>
                <WaitForLayoutManager/>
                <CompareBitmap numColorVariances="20" ignoreMaxColorVariance="true" target="hg" url="../events/baselines/$testID.png" />
            </body>
            <cleanup>
                <RunCode code="DragManager.endDrag()" />
            </cleanup>
        </TestCase>
        
	<TestCase testID="TileListColDefaultRenderer_dragExit" keywords="[DragDrop, List]" description="">
           <setup>
                <ResetComponent target="l1" className="spark.components.List" waitEvent="updateComplete" />
                <SetProperty    target="l1" propertyName="layout"  valueExpression="value=new TileLayout()" />
                <ResetComponent target="l2" className="spark.components.List" waitEvent="updateComplete" />
                <SetProperty    target="l2" propertyName="layout"  valueExpression="value=new TileLayout()" />
                <SetProperty    target="l1.layout" propertyName="orientation" value="columns" />
                <SetProperty    target="l2.layout" propertyName="orientation" value="columns" />
                <SetProperty target="l1" propertyName="dataProvider" valueExpression="value=application.createPlayersAC()" waitEvent="updateComplete" waitTarget="l1"/>
                <SetProperty target="l2" propertyName="dataProvider" valueExpression="value=application.createPlayersAC()" waitEvent="updateComplete" waitTarget="l2"/>
                <SetProperty target="l1" propertyName="labelField" value="lastName" waitEvent="updateComplete" waitTarget="l1"/>
                <SetProperty target="l2" propertyName="labelField" value="firstName" waitEvent="updateComplete" waitTarget="l2"/>
                <SetProperty target="l1" propertyName="selectedIndex" value="0" />
                <SetProperty target="l1" propertyName="dragEnabled" value="true" />
                <SetProperty target="l1" propertyName="dragMoveEnabled" value="true" />
                <SetProperty target="l2" propertyName="dropEnabled" value="true" />
                <SetProperty target="l1" propertyName="width" value="150" waitEvent="updateComplete"/>
                <SetProperty target="l1" propertyName="height" value="200" waitEvent="updateComplete"/>
                <SetProperty target="l2" propertyName="width" value="150" waitEvent="updateComplete"/>
                <SetProperty target="l2" propertyName="height" value="200" waitEvent="updateComplete"/>
                <SetProperty target="l1.layout" propertyName="dragScrollInitialDelay" value="0" />
                <SetProperty target="l2.layout" propertyName="dragScrollInitialDelay" value="0" />
            </setup>
            <body>
                <DispatchMouseEvent target="l1"  type="mouseUp"  localX="10" localY="10" />
                <DispatchMouseEvent target="l1"  type="mouseOver" buttonDown="false" localX="10" localY="10" />
                
                <DispatchMouseEvent target="l1"  type="mouseDown" buttonDown="true"  localX="10" localY="10" />
                <DispatchMouseEvent target="l1"  type="mouseMove" buttonDown="true"  localX="145" localY="12" waitEvent="dragStart" />
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="5" localY="10" waitEvent="dragEnter"/>
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="145" localY="30"  waitEvent="dragOver"/>
                <WaitForLayoutManager/>
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="-10" localY="-10"  waitEvent="dragExit"/>
                <WaitForEffectsToEnd/>
                <DispatchMouseEvent target="l2" type="mouseUp" localX="-10" localY="-10"  waitTarget="l1" waitEvent="dragComplete" />
                <WaitForEffectsToEnd/>
                <WaitForLayoutManager/>
                <CompareBitmap numColorVariances="20" ignoreMaxColorVariance="true" target="hg" url="../events/baselines/$testID.png" />
            </body>
            <cleanup>
                <RunCode code="DragManager.endDrag()" />
            </cleanup>
        </TestCase>
        
	    <TestCase testID="TileListColDefaultRenderer_dragDrop" keywords="[DragDrop, List]" description="">
           <setup>
                <ResetComponent target="l1" className="spark.components.List" waitEvent="updateComplete" />
                <SetProperty    target="l1" propertyName="layout"  valueExpression="value=new TileLayout()" />
                <ResetComponent target="l2" className="spark.components.List" waitEvent="updateComplete" />
                <SetProperty    target="l2" propertyName="layout"  valueExpression="value=new TileLayout()" />
                <SetProperty    target="l1.layout" propertyName="orientation" value="columns" />
                <SetProperty    target="l2.layout" propertyName="orientation" value="columns" />
                
                <SetProperty target="l1" propertyName="dataProvider" valueExpression="value=application.createPlayersAC()" waitEvent="updateComplete" waitTarget="l1"/>
                <SetProperty target="l2" propertyName="dataProvider" valueExpression="value=application.createPlayersAC()" waitEvent="updateComplete" waitTarget="l2"/>
                <SetProperty target="l1" propertyName="labelField" value="lastName" waitEvent="updateComplete" waitTarget="l1"/>
                <SetProperty target="l2" propertyName="labelField" value="firstName" waitEvent="updateComplete" waitTarget="l2"/>
                <SetProperty target="l1" propertyName="selectedIndex" value="0" />
                <SetProperty target="l1" propertyName="dragEnabled" value="true" />
                <SetProperty target="l1" propertyName="dragMoveEnabled" value="true" />
                <SetProperty target="l2" propertyName="dropEnabled" value="true" />
                
                <SetProperty target="l1" propertyName="width" value="150" waitEvent="updateComplete"/>
                <SetProperty target="l1" propertyName="height" value="200" waitEvent="updateComplete"/>
                <SetProperty target="l2" propertyName="width" value="150" waitEvent="updateComplete"/>
                <SetProperty target="l2" propertyName="height" value="200" waitEvent="updateComplete"/>
                <SetProperty target="l1.layout" propertyName="dragScrollInitialDelay" value="0" />
                <SetProperty target="l2.layout" propertyName="dragScrollInitialDelay" value="0" />
            </setup>
            <body>
                <DispatchMouseEvent target="l1"  type="mouseUp"  localX="10" localY="10" />
                <DispatchMouseEvent target="l1"  type="mouseOver" buttonDown="false" localX="10" localY="10" />
                <DispatchMouseClickEvent target="l1"    localX="20" localY="10" />
                <DispatchMouseEvent target="l1"  type="mouseDown" buttonDown="true"  localX="10" localY="10" />
                <DispatchMouseEvent target="l1"  type="mouseMove" buttonDown="true"  localX="145" localY="12" />
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="15" localY="15" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="updateComplete"/>
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="145" localY="15" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="move"/>
                <DispatchMouseEvent target="l2" type="mouseUp" localX="145" localY="15"  waitEvent="dragDrop" />
                <WaitForEffectsToEnd/>
                <WaitForLayoutManager/>
                <CompareBitmap numColorVariances="20" ignoreMaxColorVariance="true" target="hg" url="../events/baselines/$testID.png" />
            </body>
            <cleanup>
                <RunCode code="DragManager.endDrag()" />
            </cleanup>
        </TestCase>

	<TestCase testID="TileListColDefaultRenderer_rejectDrop1" keywords="[DragDrop, List]" description="">
           <setup>
                <ResetComponent target="l1" className="spark.components.List" waitEvent="updateComplete" />
                <SetProperty    target="l1" propertyName="layout"  valueExpression="value=new TileLayout()" />
                <ResetComponent target="l2" className="spark.components.List" waitEvent="updateComplete" />
                <SetProperty    target="l2" propertyName="layout"  valueExpression="value=new TileLayout()" />
                <SetProperty    target="l1.layout" propertyName="orientation" value="columns" />
                <SetProperty    target="l2.layout" propertyName="orientation" value="columns" />
                
                <SetProperty target="l1" propertyName="dataProvider" valueExpression="value=application.createPlayersAC()" waitEvent="updateComplete" waitTarget="l1"/>
                <SetProperty target="l2" propertyName="dataProvider" valueExpression="value=application.createPlayersAC()" waitEvent="updateComplete" waitTarget="l2"/>
                <SetProperty target="l1" propertyName="labelField" value="lastName" waitEvent="updateComplete" waitTarget="l1"/>
                <SetProperty target="l2" propertyName="labelField" value="firstName" waitEvent="updateComplete" waitTarget="l2"/>
                <SetProperty target="l1" propertyName="selectedIndex" value="0" />
                <SetProperty target="l1" propertyName="dragEnabled" value="true" />
                <SetProperty target="l1" propertyName="dragMoveEnabled" value="true" />
                <SetProperty target="l1" propertyName="width" value="150" waitEvent="updateComplete"/>
                <SetProperty target="l1" propertyName="height" value="200" waitEvent="updateComplete"/>
                <SetProperty target="l2" propertyName="width" value="150" waitEvent="updateComplete"/>
                <SetProperty target="l2" propertyName="height" value="200" waitEvent="updateComplete"/>
                <SetProperty target="l1.layout" propertyName="dragScrollInitialDelay" value="0" />
                <SetProperty target="l2.layout" propertyName="dragScrollInitialDelay" value="0" />
            </setup>
            <body>
                <DispatchMouseEvent target="l1"  type="mouseUp"  localX="10" localY="10" />
                <DispatchMouseEvent target="l1"  type="mouseOver" buttonDown="false" localX="10" localY="10" />
                <DispatchMouseClickEvent target="l1"    localX="20" localY="10" />
                <DispatchMouseEvent target="l1"  type="mouseDown" buttonDown="true"  localX="10" localY="10" />
                <DispatchMouseEvent target="l1"  type="mouseMove" buttonDown="true"  localX="145" localY="12" waitEvent="dragStart" />
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="5" localY="10" waitEvent="dragEnter"/>
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="5" localY="30"  waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="move"/>
                <DispatchMouseEvent target="l2" type="mouseUp" localX="145" localY="30"  waitTarget="l1" waitEvent="dragComplete" />
                <WaitForEffectsToEnd/>
                <WaitForLayoutManager/>
                <CompareBitmap numColorVariances="20" ignoreMaxColorVariance="true" target="hg" url="../events/baselines/$testID.png" />
            </body>
            <cleanup>
                <RunCode code="DragManager.endDrag()" />
            </cleanup>
        </TestCase>

	<TestCase testID="TileListColDefaultRenderer_rejectDrop2" keywords="[DragDrop, List]" description="">
           <setup>
                <ResetComponent target="l1" className="spark.components.List" waitEvent="updateComplete" />
                <SetProperty    target="l1" propertyName="layout"  valueExpression="value=new TileLayout()" />
                <ResetComponent target="l2" className="spark.components.List" waitEvent="updateComplete" />
                <SetProperty    target="l2" propertyName="layout"  valueExpression="value=new TileLayout()" />
                <SetProperty    target="l1.layout" propertyName="orientation" value="columns" />
                <SetProperty    target="l2.layout" propertyName="orientation" value="columns" />
                
                <SetProperty target="l1" propertyName="dataProvider" valueExpression="value=application.createPlayersAC()" waitEvent="updateComplete" waitTarget="l1"/>
                <SetProperty target="l2" propertyName="dataProvider" valueExpression="value=application.createPlayersAC()" waitEvent="updateComplete" waitTarget="l2"/>
                <SetProperty target="l1" propertyName="labelField" value="lastName" waitEvent="updateComplete" waitTarget="l1"/>
                <SetProperty target="l2" propertyName="labelField" value="firstName" waitEvent="updateComplete" waitTarget="l2"/>
                <SetProperty target="l1" propertyName="selectedIndex" value="0" />
                <SetProperty target="l1" propertyName="dragEnabled" value="true" />
                <SetProperty target="l2" propertyName="dropEnabled" value="false" />
                <SetProperty target="l1" propertyName="width" value="150" waitEvent="updateComplete"/>
                <SetProperty target="l1" propertyName="height" value="200" waitEvent="updateComplete"/>
                <SetProperty target="l2" propertyName="width" value="150" waitEvent="updateComplete"/>
                <SetProperty target="l2" propertyName="height" value="200" waitEvent="updateComplete"/>
                <SetProperty target="l1.layout" propertyName="dragScrollInitialDelay" value="0" />
                <SetProperty target="l2.layout" propertyName="dragScrollInitialDelay" value="0" />
            </setup>
            <body>
                <DispatchMouseEvent target="l1"  type="mouseUp"  localX="10" localY="10" />
                <DispatchMouseEvent target="l1"  type="mouseOver" buttonDown="false" localX="10" localY="10" />
                <DispatchMouseClickEvent target="l1"    localX="20" localY="10" />
                <DispatchMouseEvent target="l1"  type="mouseDown" buttonDown="true"  localX="10" localY="10" />
                <DispatchMouseEvent target="l1"  type="mouseMove" buttonDown="true"  localX="145" localY="12" />
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="15" localY="15" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="updateComplete"/>
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="145" localY="15" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="move"/>
                <DispatchMouseEvent target="l2" type="mouseUp" localX="145" localY="15" waitTarget="l1" waitEvent="dragComplete" />
                <WaitForEffectsToEnd/>
                <WaitForLayoutManager/>
                <CompareBitmap numColorVariances="20" ignoreMaxColorVariance="true" target="hg" url="../events/baselines/$testID.png" />
            </body>
            <cleanup>
                <RunCode code="DragManager.endDrag()" />
            </cleanup>
        </TestCase>


	<TestCase testID="TileListColAbcDND1_dragComplete" keywords="[DragDrop, List]" description="">
           <setup>
                <ResetComponent target="l1" className="spark.components.List" waitEvent="updateComplete" />
                <SetProperty    target="l1" propertyName="layout"  valueExpression="value=new TileLayout()" />
                <ResetComponent target="l2" className="spark.components.List" waitEvent="updateComplete" />
                <SetProperty    target="l2" propertyName="layout"  valueExpression="value=new TileLayout()" />
                <SetProperty    target="l1.layout" propertyName="orientation" value="columns" />
                <SetProperty    target="l2.layout" propertyName="orientation" value="columns" />
                
                <SetProperty target="l1" propertyName="itemRenderer"  valueExpression ="value= new ClassFactory( comps.ItemWithBorder )"  />
                <SetProperty target="l2" propertyName="itemRenderer"  valueExpression ="value= new ClassFactory( comps.ItemWithBorder )"  />
                <SetProperty target="l1" propertyName="dataProvider" valueExpression="value=application.createAbc()" waitEvent="updateComplete" waitTarget="l1"/>
                <SetProperty target="l2" propertyName="dataProvider" valueExpression="value=application.createAbc()" waitEvent="updateComplete" waitTarget="l2"/>
                <SetProperty target="l1" propertyName="selectedIndex" value="0" />
                <SetProperty target="l1" propertyName="dragEnabled" value="true" />
                <SetProperty target="l2" propertyName="dragEnabled" value="true" />
                <SetProperty target="l2" propertyName="dropEnabled" value="true" />
                <SetProperty target="l1" propertyName="width" value="150" waitEvent="updateComplete"/>
                <SetProperty target="l1" propertyName="height" value="200" waitEvent="updateComplete"/>
                <SetProperty target="l2" propertyName="width" value="150" waitEvent="updateComplete"/>
                <SetProperty target="l2" propertyName="height" value="200" waitEvent="updateComplete"/>
                <SetProperty target="l1.layout" propertyName="dragScrollInitialDelay" value="0" />
                <SetProperty target="l2.layout" propertyName="dragScrollInitialDelay" value="0" />
            </setup>
            <body>
                <DispatchMouseEvent target="l1"  type="mouseUp"  localX="10" localY="10" />
                <DispatchMouseEvent target="l1"  type="mouseOver" buttonDown="false" localX="10" localY="10" />
                <DispatchMouseClickEvent target="l1"    localX="20" localY="10" />
                <DispatchMouseEvent target="l1"  type="mouseDown" buttonDown="true"  localX="10" localY="10" />
                <DispatchMouseEvent target="l1"  type="mouseMove" buttonDown="true"  localX="145" localY="12" waitEvent="dragStart" />
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="5" localY="10" waitEvent="dragEnter"/>
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="145" localY="30"  waitEvent="dragOver"/>
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="145" localY="15" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="move"/>
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="145" localY="7" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="move"/>
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="145" localY="6" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="move"/>
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="145" localY="7" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="move"/>
                <DispatchMouseEvent target="l2" type="mouseUp" localX="145" localY="197"  waitTarget="l1" waitEvent="dragComplete" />
                <WaitForEffectsToEnd/>
                <WaitForLayoutManager/>
                <CompareBitmap numColorVariances="20" ignoreMaxColorVariance="true" target="hg" url="../events/baselines/$testID.png" />
            </body>
            <cleanup>
                <RunCode code="DragManager.endDrag()" />
            </cleanup>
        </TestCase>

	<TestCase testID="TileListColAbcDND1_dragDrop" keywords="[DragDrop, List]" description="">
           <setup>
                <ResetComponent target="l1" className="spark.components.List" waitEvent="updateComplete" />
                <SetProperty    target="l1" propertyName="layout"  valueExpression="value=new TileLayout()" />
                <ResetComponent target="l2" className="spark.components.List" waitEvent="updateComplete" />
                <SetProperty    target="l2" propertyName="layout"  valueExpression="value=new TileLayout()" />
                <SetProperty target="l1" propertyName="itemRenderer"  valueExpression ="value= new ClassFactory( comps.ItemWithBorder )"  />
                <SetProperty target="l2" propertyName="itemRenderer"  valueExpression ="value= new ClassFactory( comps.ItemWithBorder )"  />
                <SetProperty target="l1" propertyName="dataProvider" valueExpression="value=application.createAbc()" waitEvent="updateComplete" waitTarget="l1"/>
                <SetProperty target="l2" propertyName="dataProvider" valueExpression="value=application.createAbc()" waitEvent="updateComplete" waitTarget="l2"/>
                <SetProperty target="l1" propertyName="selectedIndex" value="0" />
                <SetProperty target="l1" propertyName="dragEnabled" value="true" />
                <SetProperty target="l1" propertyName="dragMoveEnabled" value="true" />
                <SetProperty target="l2" propertyName="dropEnabled" value="true" />
                <SetProperty    target="l1.layout" propertyName="orientation" value="columns" />
                <SetProperty    target="l2.layout" propertyName="orientation" value="columns" />
                
                <SetProperty target="l1" propertyName="width" value="150" waitEvent="updateComplete"/>
                <SetProperty target="l1" propertyName="height" value="200" waitEvent="updateComplete"/>
                <SetProperty target="l2" propertyName="width" value="150" waitEvent="updateComplete"/>
                <SetProperty target="l2" propertyName="height" value="200" waitEvent="updateComplete"/>
                <SetProperty target="l1.layout" propertyName="dragScrollInitialDelay" value="0" />
                <SetProperty target="l2.layout" propertyName="dragScrollInitialDelay" value="0" />
            </setup>
            <body>
                <DispatchMouseEvent target="l1"  type="mouseUp"  localX="10" localY="10" />
                <DispatchMouseEvent target="l1"  type="mouseOver" buttonDown="false" localX="10" localY="10" />
                
                <DispatchMouseEvent target="l1"  type="mouseDown" buttonDown="true"  localX="10" localY="10" />
                <DispatchMouseEvent target="l1"  type="mouseMove" buttonDown="true"  localX="145" localY="12" waitEvent="dragStart" />
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="5" localY="10" waitEvent="dragEnter"/>
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="145" localY="30"  waitEvent="dragOver"/>
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="145" localY="199" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="move"/>
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="145" localY="198" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="move"/>
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="145" localY="199" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="move"/>
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="145" localY="198" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="move"/>
                <DispatchMouseEvent target="l2" type="mouseUp" localX="145" localY="199"  waitTarget="l2" waitEvent="dragDrop" />
                <WaitForEffectsToEnd/>
                <WaitForLayoutManager/>
                <CompareBitmap numColorVariances="20" ignoreMaxColorVariance="true" target="hg" url="../events/baselines/$testID.png" />
            </body>
            <cleanup>
                <RunCode code="DragManager.endDrag()" />
            </cleanup>
        </TestCase>

	<TestCase testID="TileListColAbcDND1_dragExit" keywords="[DragDrop, List]" description="">
           <setup>
                <ResetComponent target="l1" className="spark.components.List" waitEvent="updateComplete" />
                <SetProperty    target="l1" propertyName="layout"  valueExpression="value=new TileLayout()" />
                <ResetComponent target="l2" className="spark.components.List" waitEvent="updateComplete" />
                <SetProperty    target="l2" propertyName="layout"  valueExpression="value=new TileLayout()" />
                <SetProperty    target="l1.layout" propertyName="orientation" value="columns" />
                <SetProperty    target="l2.layout" propertyName="orientation" value="columns" />
                
                <SetProperty target="l1" propertyName="itemRenderer"  valueExpression ="value= new ClassFactory( comps.ItemWithBorder )"  />
                <SetProperty target="l2" propertyName="itemRenderer"  valueExpression ="value= new ClassFactory( comps.ItemWithBorder )"  />
                <SetProperty target="l1" propertyName="dataProvider" valueExpression="value=application.createAbc()" waitEvent="updateComplete" waitTarget="l1"/>
                <SetProperty target="l2" propertyName="dataProvider" valueExpression="value=application.createAbc()" waitEvent="updateComplete" waitTarget="l2"/>
                <SetProperty target="l1" propertyName="selectedIndex" value="0" />
                <SetProperty target="l1" propertyName="dragEnabled" value="true" />
                <SetProperty target="l1" propertyName="dragMoveEnabled" value="true" />
                <SetProperty target="l2" propertyName="dropEnabled" value="true" />
                <SetProperty target="l1" propertyName="height" value="105" />
                <SetProperty target="l1" propertyName="width" value="150" waitEvent="updateComplete"/>
                <SetProperty target="l1" propertyName="height" value="200" waitEvent="updateComplete"/>
                <SetProperty target="l2" propertyName="width" value="150" waitEvent="updateComplete"/>
                <SetProperty target="l2" propertyName="height" value="200" waitEvent="updateComplete"/>
                <SetProperty target="l1.layout" propertyName="dragScrollInitialDelay" value="0" />
                <SetProperty target="l2.layout" propertyName="dragScrollInitialDelay" value="0" />
            </setup>
            <body>
                <DispatchMouseEvent target="l1"  type="mouseUp"  localX="10" localY="10" />
                <DispatchMouseEvent target="l1"  type="mouseOver" buttonDown="false" localX="10" localY="10" />
                
                <DispatchMouseEvent target="l1"  type="mouseDown" buttonDown="true"  localX="10" localY="10" />
                <DispatchMouseEvent target="l1"  type="mouseMove" buttonDown="true"  localX="145" localY="12" waitEvent="dragStart" />
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="5" localY="10" waitEvent="dragEnter"/>
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="145" localY="30"  waitEvent="dragOver"/>
                <WaitForEffectsToEnd/>
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="145" localY="199" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="move"/>
                <WaitForEffectsToEnd/>
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="145" localY="198" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="move"/>
                <WaitForEffectsToEnd/>
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="145" localY="199" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="move"/>
                <WaitForEffectsToEnd/>
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="5" localY="198" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="move"/>
                <WaitForEffectsToEnd/>
                <DispatchMouseEvent target="l2" type="mouseMove" localX="-2" localY="195"  waitTarget="l2" waitEvent="dragExit" />
                <WaitForEffectsToEnd/>
                <DispatchMouseEvent target="l2" type="mouseUp" localX="-1" localY="190"  waitTarget="l1" waitEvent="dragComplete" />
                <WaitForEffectsToEnd/>
                <WaitForLayoutManager/>
                <CompareBitmap numColorVariances="20" ignoreMaxColorVariance="true" target="hg" url="../events/baselines/$testID.png" />
            </body>
            <cleanup>
                <RunCode code="DragManager.endDrag()" />
            </cleanup>
        </TestCase>

	<TestCase testID="TileListColAbcDND1_rejectDrop1" keywords="[DragDrop, List]" description="">
           <setup>
                <ResetComponent target="l1" className="spark.components.List" waitEvent="updateComplete" />
                <SetProperty    target="l1" propertyName="layout"  valueExpression="value=new TileLayout()" />
                <ResetComponent target="l2" className="spark.components.List" waitEvent="updateComplete" />
                <SetProperty    target="l2" propertyName="layout"  valueExpression="value=new TileLayout()" />
                <SetProperty    target="l1.layout" propertyName="orientation" value="columns" />
                <SetProperty    target="l2.layout" propertyName="orientation" value="columns" />
                
                <SetProperty target="l1" propertyName="itemRenderer"  valueExpression ="value= new ClassFactory( comps.ItemWithBorder )"  />
                <SetProperty target="l2" propertyName="itemRenderer"  valueExpression ="value= new ClassFactory( comps.ItemWithBorder )"  />
                <SetProperty target="l1" propertyName="dataProvider" valueExpression="value=application.createAbc()" waitEvent="updateComplete" waitTarget="l1"/>
                <SetProperty target="l2" propertyName="dataProvider" valueExpression="value=application.createAbc()" waitEvent="updateComplete" waitTarget="l2"/>
                <SetProperty target="l1" propertyName="width" value="150" waitEvent="updateComplete"/>
                <SetProperty target="l1" propertyName="height" value="200" waitEvent="updateComplete"/>
                <SetProperty target="l2" propertyName="width" value="150" waitEvent="updateComplete"/>
                <SetProperty target="l2" propertyName="height" value="200" waitEvent="updateComplete"/>
                <SetProperty target="l1" propertyName="selectedIndex" value="0" />
                <SetProperty target="l1" propertyName="dragEnabled" value="true" />
                <SetProperty target="l1" propertyName="dragMoveEnabled" value="true" />
                <SetProperty target="l1.layout" propertyName="dragScrollInitialDelay" value="0" />
                <SetProperty target="l2.layout" propertyName="dragScrollInitialDelay" value="0" />
            </setup>
            <body>
                <DispatchMouseEvent target="l1"  type="mouseUp"  localX="10" localY="10" />
                <DispatchMouseEvent target="l1"  type="mouseOver" buttonDown="false" localX="10" localY="10" />
        
                <DispatchMouseEvent target="l1"  type="mouseDown" buttonDown="true"  localX="10" localY="10" />
                <DispatchMouseEvent target="l1"  type="mouseMove" buttonDown="true"  localX="145" localY="12" waitEvent="dragStart" />
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="5" localY="10" waitEvent="dragEnter"/>
        
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="145" localY="199" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="move"/>
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="145" localY="198" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="move"/>
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="145" localY="199" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="move"/>
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="145" localY="198" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="move"/>
                <WaitForLayoutManager/>
                <CompareBitmap numColorVariances="20" ignoreMaxColorVariance="true" target="hg" url="../events/baselines/$testID.png" />
                <DispatchMouseEvent target="l2" type="mouseUp" localX="145" localY="191"  waitTarget="l1" waitEvent="dragComplete" />
                <WaitForEffectsToEnd/>

            </body>
            <cleanup>
                <RunCode code="DragManager.endDrag()" />
            </cleanup>
        </TestCase>

	<TestCase testID="TileListRowsDefaultRenderer_dragComplete" keywords="[DragDrop, List]" description="">
           <setup>
                <ResetComponent target="l1" className="spark.components.List" waitEvent="updateComplete" />
                <SetProperty    target="l1" propertyName="layout"  valueExpression="value=new TileLayout()" />
                <ResetComponent target="l2" className="spark.components.List" waitEvent="updateComplete" />
                <SetProperty    target="l2" propertyName="layout"  valueExpression="value=new TileLayout()" />
                <SetProperty    target="l1.layout" propertyName="orientation" value="rows" />
                <SetProperty    target="l2.layout" propertyName="orientation" value="rows" />
                <SetProperty target="l1" propertyName="dataProvider" valueExpression="value=application.createPlayersAC()" waitEvent="updateComplete" waitTarget="l1"/>
                <SetProperty target="l2" propertyName="dataProvider" valueExpression="value=application.createPlayersAC()" waitEvent="updateComplete" waitTarget="l2"/>
                <SetProperty target="l1" propertyName="labelField" value="lastName" waitEvent="updateComplete" waitTarget="l1"/>
                <SetProperty target="l2" propertyName="labelField" value="firstName" waitEvent="updateComplete" waitTarget="l2"/>
                <SetProperty target="l1" propertyName="selectedIndex" value="0" />
                <SetProperty target="l1" propertyName="dragEnabled" value="true" />
                <SetProperty target="l2" propertyName="dragEnabled" value="true" />
                <SetProperty target="l2" propertyName="dropEnabled" value="true" />
                <SetProperty target="l1" propertyName="width" value="150" waitEvent="updateComplete"/>
                <SetProperty target="l1" propertyName="height" value="100" waitEvent="updateComplete"/>
                <SetProperty target="l2" propertyName="width" value="150" waitEvent="updateComplete"/>
                <SetProperty target="l2" propertyName="height" value="100" waitEvent="updateComplete"/>
                <SetProperty target="l1.layout" propertyName="dragScrollInitialDelay" value="0" />
                <SetProperty target="l2.layout" propertyName="dragScrollInitialDelay" value="0" />
            </setup>
            <body>
                <DispatchMouseEvent target="l1"  type="mouseUp"  localX="10" localY="10" />
                <DispatchMouseEvent target="l1"  type="mouseOver" buttonDown="false" localX="10" localY="10" />
                
                <DispatchMouseEvent target="l1"  type="mouseDown" buttonDown="true"  localX="10" localY="10" />
                <DispatchMouseEvent target="l1"  type="mouseMove" buttonDown="true"  localX="145" localY="12" waitEvent="dragStart" />
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="5" localY="10" waitEvent="dragEnter" timeout="50"/>
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="145" localY="30"  waitEvent="dragOver"/>
                <DispatchMouseEvent target="l2" type="mouseUp" localX="145" localY="30"  waitTarget="l1" waitEvent="dragComplete" />
                <WaitForEffectsToEnd/>
                <WaitForLayoutManager/>
                <CompareBitmap numColorVariances="20" ignoreMaxColorVariance="true" target="hg" url="../events/baselines/$testID.png" />
            </body>
            <cleanup>
                <RunCode code="DragManager.endDrag()" />
            </cleanup>
        </TestCase>
        
	<TestCase testID="TileListRowsDefaultRenderer_dragExit" keywords="[DragDrop, List]" description="">
           <setup>
                <ResetComponent target="l1" className="spark.components.List" waitEvent="updateComplete" />
                <SetProperty    target="l1" propertyName="layout"  valueExpression="value=new TileLayout()" />
                <ResetComponent target="l2" className="spark.components.List" waitEvent="updateComplete" />
                <SetProperty    target="l2" propertyName="layout"  valueExpression="value=new TileLayout()" />
                <SetProperty    target="l1.layout" propertyName="orientation" value="rows" />
                <SetProperty    target="l2.layout" propertyName="orientation" value="rows" />
                <SetProperty target="l1" propertyName="dataProvider" valueExpression="value=application.createPlayersAC()" waitEvent="updateComplete" waitTarget="l1"/>
                <SetProperty target="l2" propertyName="dataProvider" valueExpression="value=application.createPlayersAC()" waitEvent="updateComplete" waitTarget="l2"/>
                <SetProperty target="l1" propertyName="labelField" value="lastName" waitEvent="updateComplete" waitTarget="l1"/>
                <SetProperty target="l2" propertyName="labelField" value="firstName" waitEvent="updateComplete" waitTarget="l2"/>
                <SetProperty target="l1" propertyName="selectedIndex" value="0" />
                <SetProperty target="l1" propertyName="dragEnabled" value="true" />
                <SetProperty target="l1" propertyName="dragMoveEnabled" value="true" />
                <SetProperty target="l2" propertyName="dropEnabled" value="true" />
                <SetProperty target="l1" propertyName="width" value="150" waitEvent="updateComplete"/>
                <SetProperty target="l1" propertyName="height" value="100" waitEvent="updateComplete"/>
                <SetProperty target="l2" propertyName="width" value="150" waitEvent="updateComplete"/>
                <SetProperty target="l2" propertyName="height" value="100" waitEvent="updateComplete"/>
                <SetProperty target="l1.layout" propertyName="dragScrollInitialDelay" value="0" />
                <SetProperty target="l2.layout" propertyName="dragScrollInitialDelay" value="0" />
            </setup>
            <body>
                <RunCode code="DragManager.endDrag()" />
                <DispatchMouseEvent target="l1"  type="mouseUp"  localX="10" localY="10" />
                <DispatchMouseEvent target="l1"  type="mouseOver" buttonDown="false" localX="10" localY="10" />
        
                <DispatchMouseEvent target="l1"  type="mouseDown" buttonDown="true"  localX="10" localY="10" />
                <DispatchMouseEvent target="l1"  type="mouseMove" buttonDown="true"  localX="145" localY="12" waitEvent="dragStart" />
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="5" localY="10" waitEvent="dragEnter"/>
                <WaitForEffectsToEnd/>
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="145" localY="30"  waitEvent="dragOver"/>
                <WaitForEffectsToEnd/>
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="-1" localY="-10"  waitEvent="dragExit"/>
                <WaitForEffectsToEnd/>
                <DispatchMouseEvent target="l2" type="mouseUp" localX="145" localY="30"  waitTarget="l1" waitEvent="dragComplete" />
                <WaitForEffectsToEnd/>
                <WaitForLayoutManager/>
                <CompareBitmap numColorVariances="20" ignoreMaxColorVariance="true" target="hg" url="../events/baselines/$testID.png" />
            </body>
            <cleanup>
                <RunCode code="DragManager.endDrag()" />
            </cleanup>
        </TestCase>
        
	<TestCase testID="TileListRowsDefaultRenderer_dragDrop" keywords="[DragDrop, List]" description="">
           <setup>
                <ResetComponent target="l1" className="spark.components.List" waitEvent="updateComplete" />
                <SetProperty    target="l1" propertyName="layout"  valueExpression="value=new TileLayout()" />
                <ResetComponent target="l2" className="spark.components.List" waitEvent="updateComplete" />
                <SetProperty    target="l2" propertyName="layout"  valueExpression="value=new TileLayout()" />
                <SetProperty    target="l1.layout" propertyName="orientation" value="rows" />
                <SetProperty    target="l2.layout" propertyName="orientation" value="rows" />
                
                <SetProperty target="l1" propertyName="dataProvider" valueExpression="value=application.createPlayersAC()" waitEvent="updateComplete" waitTarget="l1"/>
                <SetProperty target="l2" propertyName="dataProvider" valueExpression="value=application.createPlayersAC()" waitEvent="updateComplete" waitTarget="l2"/>
                <SetProperty target="l1" propertyName="labelField" value="lastName" waitEvent="updateComplete" waitTarget="l1"/>
                <SetProperty target="l2" propertyName="labelField" value="firstName" waitEvent="updateComplete" waitTarget="l2"/>
                <SetProperty target="l1" propertyName="selectedIndex" value="0" />
                <SetProperty target="l1" propertyName="dragEnabled" value="true" />
                <SetProperty target="l1" propertyName="dragMoveEnabled" value="true" />
                <SetProperty target="l2" propertyName="dropEnabled" value="true" />
                
                <SetProperty target="l1" propertyName="width" value="150" waitEvent="updateComplete"/>
                <SetProperty target="l1" propertyName="height" value="100" waitEvent="updateComplete"/>
                <SetProperty target="l2" propertyName="width" value="150" waitEvent="updateComplete"/>
                <SetProperty target="l2" propertyName="height" value="100" waitEvent="updateComplete"/>
                <SetProperty target="l1.layout" propertyName="dragScrollInitialDelay" value="0" />
                <SetProperty target="l2.layout" propertyName="dragScrollInitialDelay" value="0" />
            </setup>
            <body>
                <DispatchMouseEvent target="l1"  type="mouseUp"  localX="10" localY="10" />
                <DispatchMouseEvent target="l1"  type="mouseOver" buttonDown="false" localX="10" localY="10" />
                <DispatchMouseClickEvent target="l1"    localX="20" localY="10" />
                <DispatchMouseEvent target="l1"  type="mouseDown" buttonDown="true"  localX="10" localY="10" />
                <DispatchMouseEvent target="l1"  type="mouseMove" buttonDown="true"  localX="145" localY="12" />
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="15" localY="15" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="updateComplete"/>
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="145" localY="15" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="move"/>
                <DispatchMouseEvent target="l2" type="mouseUp" localX="145" localY="15"  waitEvent="dragDrop" />
                <WaitForEffectsToEnd/>
                <WaitForLayoutManager/>
                <CompareBitmap numColorVariances="20" ignoreMaxColorVariance="true" target="hg" url="../events/baselines/$testID.png" />
            </body>
            <cleanup>
                <RunCode code="DragManager.endDrag()" />
            </cleanup>
        </TestCase>

	<TestCase testID="TileListRowsDefaultRenderer_rejectDrop1" keywords="[DragDrop, List]" description="">
           <setup>
                <ResetComponent target="l1" className="spark.components.List" waitEvent="updateComplete" />
                <SetProperty    target="l1" propertyName="layout"  valueExpression="value=new TileLayout()" />
                <ResetComponent target="l2" className="spark.components.List" waitEvent="updateComplete" />
                <SetProperty    target="l2" propertyName="layout"  valueExpression="value=new TileLayout()" />
                <SetProperty    target="l1.layout" propertyName="orientation" value="rows" />
                <SetProperty    target="l2.layout" propertyName="orientation" value="rows" />
                
                <SetProperty target="l1" propertyName="dataProvider" valueExpression="value=application.createPlayersAC()" waitEvent="updateComplete" waitTarget="l1"/>
                <SetProperty target="l2" propertyName="dataProvider" valueExpression="value=application.createPlayersAC()" waitEvent="updateComplete" waitTarget="l2"/>
                <SetProperty target="l1" propertyName="labelField" value="lastName" waitEvent="updateComplete" waitTarget="l1"/>
                <SetProperty target="l2" propertyName="labelField" value="firstName" waitEvent="updateComplete" waitTarget="l2"/>
                <SetProperty target="l1" propertyName="selectedIndex" value="0" />
                <SetProperty target="l1" propertyName="dragEnabled" value="true" />
                <SetProperty target="l1" propertyName="dragMoveEnabled" value="true" />
                <SetProperty target="l1" propertyName="width" value="150" waitEvent="updateComplete"/>
                <SetProperty target="l1" propertyName="height" value="100" waitEvent="updateComplete"/>
                <SetProperty target="l2" propertyName="width" value="150" waitEvent="updateComplete"/>
                <SetProperty target="l2" propertyName="height" value="100" waitEvent="updateComplete"/>
                <SetProperty target="l1.layout" propertyName="dragScrollInitialDelay" value="0" />
                <SetProperty target="l2.layout" propertyName="dragScrollInitialDelay" value="0" />
            </setup>
            <body>
                <DispatchMouseEvent target="l1"  type="mouseUp"  localX="10" localY="10" />
                <DispatchMouseEvent target="l1"  type="mouseOver" buttonDown="false" localX="10" localY="10" />
                <DispatchMouseClickEvent target="l1"    localX="20" localY="10" />
                <DispatchMouseEvent target="l1"  type="mouseDown" buttonDown="true"  localX="10" localY="10" />
                <DispatchMouseEvent target="l1"  type="mouseMove" buttonDown="true"  localX="145" localY="12" waitEvent="dragStart" />
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="5" localY="10" waitEvent="dragEnter"/>
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="5" localY="30"  waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="move"/>
                <DispatchMouseEvent target="l2" type="mouseUp" localX="145" localY="30"  waitTarget="l1" waitEvent="dragComplete" />
                <WaitForEffectsToEnd/>
                <WaitForLayoutManager/>
                <CompareBitmap numColorVariances="20" ignoreMaxColorVariance="true" target="hg" url="../events/baselines/$testID.png" />
            </body>
            <cleanup>
                <RunCode code="DragManager.endDrag()" />
            </cleanup>
        </TestCase>

	<TestCase testID="TileListRowsDefaultRenderer_rejectDrop2" keywords="[DragDrop, List]" description="">
           <setup>
                <ResetComponent target="l1" className="spark.components.List" waitEvent="updateComplete" />
                <SetProperty    target="l1" propertyName="layout"  valueExpression="value=new TileLayout()" />
                <ResetComponent target="l2" className="spark.components.List" waitEvent="updateComplete" />
                <SetProperty    target="l2" propertyName="layout"  valueExpression="value=new TileLayout()" />
                <SetProperty    target="l1.layout" propertyName="orientation" value="rows" />
                <SetProperty    target="l2.layout" propertyName="orientation" value="rows" />
                
                <SetProperty target="l1" propertyName="dataProvider" valueExpression="value=application.createPlayersAC()" waitEvent="updateComplete" waitTarget="l1"/>
                <SetProperty target="l2" propertyName="dataProvider" valueExpression="value=application.createPlayersAC()" waitEvent="updateComplete" waitTarget="l2"/>
                <SetProperty target="l1" propertyName="labelField" value="lastName" waitEvent="updateComplete" waitTarget="l1"/>
                <SetProperty target="l2" propertyName="labelField" value="firstName" waitEvent="updateComplete" waitTarget="l2"/>
                <SetProperty target="l1" propertyName="selectedIndex" value="0" />
                <SetProperty target="l1" propertyName="dragEnabled" value="true" />
                <SetProperty target="l2" propertyName="dropEnabled" value="false" />
                <SetProperty target="l1" propertyName="width" value="150" waitEvent="updateComplete"/>
                <SetProperty target="l1" propertyName="height" value="100" waitEvent="updateComplete"/>
                <SetProperty target="l2" propertyName="width" value="150" waitEvent="updateComplete"/>
                <SetProperty target="l2" propertyName="height" value="100" waitEvent="updateComplete"/>
                <SetProperty target="l1.layout" propertyName="dragScrollInitialDelay" value="0" />
                <SetProperty target="l2.layout" propertyName="dragScrollInitialDelay" value="0" />
            </setup>
            <body>
                <DispatchMouseEvent target="l1"  type="mouseUp"  localX="10" localY="10" />
                <DispatchMouseEvent target="l1"  type="mouseOver" buttonDown="false" localX="10" localY="10" />
                <DispatchMouseClickEvent target="l1"    localX="20" localY="10" />
                <DispatchMouseEvent target="l1"  type="mouseDown" buttonDown="true"  localX="10" localY="10" />
                <DispatchMouseEvent target="l1"  type="mouseMove" buttonDown="true"  localX="145" localY="12" />
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="15" localY="15" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="updateComplete"/>
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="145" localY="15" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="move"/>
                <DispatchMouseEvent target="l2" type="mouseUp" localX="145" localY="15" waitTarget="l1" waitEvent="dragComplete" />
                <WaitForEffectsToEnd/>
                <WaitForLayoutManager/>
                <CompareBitmap numColorVariances="20" ignoreMaxColorVariance="true" target="hg" url="../events/baselines/$testID.png" />
            </body>
            <cleanup>
                <RunCode code="DragManager.endDrag()" />
            </cleanup>
        </TestCase>

	<TestCase testID="TileListRowsAbcDND1_dragComplete" keywords="[DragDrop, List]" description="">
           <setup>
                <ResetComponent target="l1" className="spark.components.List" waitEvent="updateComplete" />
                <SetProperty    target="l1" propertyName="layout"  valueExpression="value=new TileLayout()" />
                <ResetComponent target="l2" className="spark.components.List" waitEvent="updateComplete" />
                <SetProperty    target="l2" propertyName="layout"  valueExpression="value=new TileLayout()" />
                <SetProperty    target="l1.layout" propertyName="orientation" value="rows" />
                <SetProperty    target="l2.layout" propertyName="orientation" value="rows" />
                
                <SetProperty target="l1" propertyName="itemRenderer"  valueExpression ="value= new ClassFactory( comps.ItemWithBorder )"  />
                <SetProperty target="l2" propertyName="itemRenderer"  valueExpression ="value= new ClassFactory( comps.ItemWithBorder )"  />
                <SetProperty target="l1" propertyName="dataProvider" valueExpression="value=application.createAbc()" waitEvent="updateComplete" waitTarget="l1"/>
                <SetProperty target="l2" propertyName="dataProvider" valueExpression="value=application.createAbc()" waitEvent="updateComplete" waitTarget="l2"/>
                <SetProperty target="l1" propertyName="selectedIndex" value="0" />
                <SetProperty target="l1" propertyName="dragEnabled" value="true" />
                <SetProperty target="l2" propertyName="dragEnabled" value="true" />
                <SetProperty target="l2" propertyName="dropEnabled" value="true" />
                <SetProperty target="l1" propertyName="width" value="150" waitEvent="updateComplete"/>
                <SetProperty target="l1" propertyName="height" value="100" waitEvent="updateComplete"/>
                <SetProperty target="l2" propertyName="width" value="150" waitEvent="updateComplete"/>
                <SetProperty target="l2" propertyName="height" value="100" waitEvent="updateComplete"/>
                <SetProperty target="l1.layout" propertyName="dragScrollInitialDelay" value="0" />
                <SetProperty target="l2.layout" propertyName="dragScrollInitialDelay" value="0" />
            </setup>
            <body>
                <DispatchMouseEvent target="l1"  type="mouseUp"  localX="10" localY="10" />
                <DispatchMouseEvent target="l1"  type="mouseOver" buttonDown="false" localX="10" localY="10" />
                <DispatchMouseClickEvent target="l1"    localX="20" localY="10" />
                <DispatchMouseEvent target="l1"  type="mouseDown" buttonDown="true"  localX="10" localY="10" />
                <DispatchMouseEvent target="l1"  type="mouseMove" buttonDown="true"  localX="145" localY="12" waitEvent="dragStart" />
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="5" localY="10" waitEvent="dragEnter"/>
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="145" localY="30"  waitEvent="dragOver"/>
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="145" localY="15" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="move"/>
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="145" localY="7" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="move"/>
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="145" localY="6" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="move"/>
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="145" localY="7" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="move"/>
                <DispatchMouseEvent target="l2" type="mouseUp" localX="145" localY="197"  waitTarget="l1" waitEvent="dragComplete" />
                <WaitForEffectsToEnd/>
                <WaitForLayoutManager/>
                <CompareBitmap numColorVariances="20" ignoreMaxColorVariance="true" target="hg" url="../events/baselines/$testID.png" />
            </body>
            <cleanup>
                <RunCode code="DragManager.endDrag()" />
            </cleanup>
        </TestCase>

	<TestCase testID="TileListRowsAbcDND1_dragDrop" keywords="[DragDrop, List]" description="">
           <setup>
                <ResetComponent target="l1" className="spark.components.List" waitEvent="updateComplete" />
                <SetProperty    target="l1" propertyName="layout"  valueExpression="value=new TileLayout()" />
                <ResetComponent target="l2" className="spark.components.List" waitEvent="updateComplete" />
                <SetProperty    target="l2" propertyName="layout"  valueExpression="value=new TileLayout()" />
                <SetProperty target="l1" propertyName="itemRenderer"  valueExpression ="value= new ClassFactory( comps.ItemWithBorder )"  />
                <SetProperty target="l2" propertyName="itemRenderer"  valueExpression ="value= new ClassFactory( comps.ItemWithBorder )"  />
                <SetProperty target="l1" propertyName="dataProvider" valueExpression="value=application.createAbc()" waitEvent="updateComplete" waitTarget="l1"/>
                <SetProperty target="l2" propertyName="dataProvider" valueExpression="value=application.createAbc()" waitEvent="updateComplete" waitTarget="l2"/>
                <SetProperty target="l1" propertyName="selectedIndex" value="0" />
                <SetProperty target="l1" propertyName="dragEnabled" value="true" />
                <SetProperty target="l1" propertyName="dragMoveEnabled" value="true" />
                <SetProperty target="l2" propertyName="dropEnabled" value="true" />
                <SetProperty    target="l1.layout" propertyName="orientation" value="rows" />
                <SetProperty    target="l2.layout" propertyName="orientation" value="rows" />
                
                <SetProperty target="l1" propertyName="width" value="150" waitEvent="updateComplete"/>
                <SetProperty target="l1" propertyName="height" value="100" waitEvent="updateComplete"/>
                <SetProperty target="l2" propertyName="width" value="150" waitEvent="updateComplete"/>
                <SetProperty target="l2" propertyName="height" value="100" waitEvent="updateComplete"/>
            	<SetProperty target="l1.layout" propertyName="dragScrollInitialDelay" value="0" />
	    	    <SetProperty target="l2.layout" propertyName="dragScrollInitialDelay" value="0" />
            </setup>
            <body>
                <DispatchMouseEvent target="l1"  type="mouseUp"  localX="10" localY="10" />
                <DispatchMouseEvent target="l1"  type="mouseOver" buttonDown="false" localX="10" localY="10" />
        
                <DispatchMouseEvent target="l1"  type="mouseDown" buttonDown="true"  localX="10" localY="10" />
                <DispatchMouseEvent target="l1"  type="mouseMove" buttonDown="true"  localX="145" localY="12" waitEvent="dragStart" />
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="5" localY="10" waitEvent="dragEnter"/>
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="145" localY="30"  waitEvent="dragOver"/>
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="145" localY="99" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="move"/>
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="145" localY="98" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="move"/>
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="145" localY="99" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="move"/>
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="145" localY="98" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="move"/>
                <DispatchMouseEvent target="l2" type="mouseUp" localX="145" localY="99"  waitTarget="l2" waitEvent="dragDrop" />
                <WaitForEffectsToEnd/>
                <WaitForLayoutManager/>
                <CompareBitmap numColorVariances="20" ignoreMaxColorVariance="true" target="hg" url="../events/baselines/$testID.png" />
            </body>
            <cleanup>
                <RunCode code="DragManager.endDrag()" />
            </cleanup>
        </TestCase>

	<TestCase testID="TileListRowsAbcDND1_dragExit" keywords="[DragDrop, List]" description="">
           <setup>
                <ResetComponent target="l1" className="spark.components.List" waitEvent="updateComplete" />
                <SetProperty    target="l1" propertyName="layout"  valueExpression="value=new TileLayout()" />
                <ResetComponent target="l2" className="spark.components.List" waitEvent="updateComplete" />
                <SetProperty    target="l2" propertyName="layout"  valueExpression="value=new TileLayout()" />
                <SetProperty    target="l1.layout" propertyName="orientation" value="rows" />
                <SetProperty    target="l2.layout" propertyName="orientation" value="rows" />
                
                <SetProperty target="l1" propertyName="itemRenderer"  valueExpression ="value= new ClassFactory( comps.ItemWithBorder )"  />
                <SetProperty target="l2" propertyName="itemRenderer"  valueExpression ="value= new ClassFactory( comps.ItemWithBorder )"  />
                <SetProperty target="l1" propertyName="dataProvider" valueExpression="value=application.createAbc()" waitEvent="updateComplete" waitTarget="l1"/>
                <SetProperty target="l2" propertyName="dataProvider" valueExpression="value=application.createAbc()" waitEvent="updateComplete" waitTarget="l2"/>
                <SetProperty target="l1" propertyName="selectedIndex" value="0" />
                <SetProperty target="l1" propertyName="dragEnabled" value="true" />
                <SetProperty target="l1" propertyName="dragMoveEnabled" value="true" />
                <SetProperty target="l2" propertyName="dropEnabled" value="true" />
                <SetProperty target="l1" propertyName="height" value="105" />
                <SetProperty target="l1" propertyName="width" value="150" waitEvent="updateComplete"/>
                <SetProperty target="l1" propertyName="height" value="100" waitEvent="updateComplete"/>
                <SetProperty target="l2" propertyName="width" value="150" waitEvent="updateComplete"/>
                <SetProperty target="l2" propertyName="height" value="100" waitEvent="updateComplete"/>
                <SetProperty target="l1.layout" propertyName="dragScrollInitialDelay" value="0" />
                <SetProperty target="l2.layout" propertyName="dragScrollInitialDelay" value="0" />
            </setup>
            <body>
                <DispatchMouseEvent target="l1"  type="mouseUp"  localX="10" localY="10" />
                <DispatchMouseEvent target="l1"  type="mouseOver" buttonDown="false" localX="10" localY="10" />
                <WaitForLayoutManager/>
                <DispatchMouseEvent target="l1"  type="mouseDown" buttonDown="true"  localX="10" localY="10" />
                <DispatchMouseEvent target="l1"  type="mouseMove" buttonDown="true"  localX="145" localY="12" waitEvent="dragStart" />
                <WaitForLayoutManager/>
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="5" localY="10" waitEvent="dragEnter"/>
                <WaitForLayoutManager/>
                <WaitForEffectsToEnd/>
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="145" localY="30"  waitEvent="dragOver"/>
                <WaitForLayoutManager/>
                <WaitForEffectsToEnd/>
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="145" localY="99" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="move"/>
                <WaitForEffectsToEnd/>
                <WaitForLayoutManager/>
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="145" localY="98" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="move"/>
                <WaitForEffectsToEnd/>
                <WaitForLayoutManager/>
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="145" localY="99" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="move"/>
                <WaitForEffectsToEnd/>
                <WaitForLayoutManager/>
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="5" localY="98" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="move"/>
                <WaitForEffectsToEnd/>
                <WaitForLayoutManager/>
                <DispatchMouseEvent target="l2" type="mouseMove" localX="-2" localY="195"  waitTarget="l2" waitEvent="dragExit" />
                <WaitForLayoutManager/>
                <WaitForEffectsToEnd/>
                <DispatchMouseEvent target="l2" type="mouseUp" localX="-1" localY="90"  waitTarget="l1" waitEvent="dragComplete" />
                <WaitForEffectsToEnd/>
                <WaitForLayoutManager/>
                <CompareBitmap numColorVariances="20" ignoreMaxColorVariance="true" target="hg" url="../events/baselines/$testID.png" />
            </body>
            <cleanup>
                <RunCode code="DragManager.endDrag()" />
            </cleanup>
        </TestCase>

	<TestCase testID="TileListRowsAbcDND1_rejectDrop1" keywords="[DragDrop, List]" description="">
           <setup>
                <ResetComponent target="l1" className="spark.components.List" waitEvent="updateComplete" />
                <SetProperty    target="l1" propertyName="layout"  valueExpression="value=new TileLayout()" />
                <ResetComponent target="l2" className="spark.components.List" waitEvent="updateComplete" />
                <SetProperty    target="l2" propertyName="layout"  valueExpression="value=new TileLayout()" />
                <SetProperty    target="l1.layout" propertyName="orientation" value="rows" />
                <SetProperty    target="l2.layout" propertyName="orientation" value="rows" />
                
                <SetProperty target="l1" propertyName="itemRenderer"  valueExpression ="value= new ClassFactory( comps.ItemWithBorder )"  />
                <SetProperty target="l2" propertyName="itemRenderer"  valueExpression ="value= new ClassFactory( comps.ItemWithBorder )"  />
                <SetProperty target="l1" propertyName="dataProvider" valueExpression="value=application.createAbc()" waitEvent="updateComplete" waitTarget="l1"/>
                <SetProperty target="l2" propertyName="dataProvider" valueExpression="value=application.createAbc()" waitEvent="updateComplete" waitTarget="l2"/>
                <SetProperty target="l1" propertyName="width" value="150" waitEvent="updateComplete"/>
                <SetProperty target="l1" propertyName="height" value="100" waitEvent="updateComplete"/>
                <SetProperty target="l2" propertyName="width" value="150" waitEvent="updateComplete"/>
                <SetProperty target="l2" propertyName="height" value="100" waitEvent="updateComplete"/>
                <SetProperty target="l1" propertyName="selectedIndex" value="0" />
                <SetProperty target="l1" propertyName="dragEnabled" value="true" />
                <SetProperty target="l1" propertyName="dragMoveEnabled" value="true" />
                <SetProperty target="l1.layout" propertyName="dragScrollInitialDelay" value="0" />
                <SetProperty target="l2.layout" propertyName="dragScrollInitialDelay" value="0" />
            </setup>
            <body>
                <DispatchMouseEvent target="l1"  type="mouseUp"  localX="10" localY="10" />
                <DispatchMouseEvent target="l1"  type="mouseOver" buttonDown="false" localX="10" localY="10" />
        
                <DispatchMouseEvent target="l1"  type="mouseDown" buttonDown="true"  localX="10" localY="10" />
                <DispatchMouseEvent target="l1"  type="mouseMove" buttonDown="true"  localX="145" localY="12" waitEvent="dragStart" />
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="5" localY="10" waitEvent="dragEnter"/>
        
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="145" localY="99" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="move"/>
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="145" localY="98" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="move"/>
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="145" localY="99" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="move"/>
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="145" localY="98" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="move"/>
                <WaitForLayoutManager/>
                <CompareBitmap numColorVariances="20" ignoreMaxColorVariance="true" target="hg" url="../events/baselines/$testID.png" />
                <DispatchMouseEvent target="l2" type="mouseUp" localX="145" localY="91"  waitTarget="l1" waitEvent="dragComplete" />
                <WaitForEffectsToEnd/>

            </body>
            <cleanup>
                <RunCode code="DragManager.endDrag()" />
            </cleanup>
        </TestCase>

	<TestCase testID="TileListRowsAbcDND1_dragDropLeft" keywords="[DragDrop, List]" description="">
           <setup>
                <ResetComponent target="l1" className="spark.components.List" waitEvent="updateComplete" />
                <SetProperty    target="l1" propertyName="layout"  valueExpression="value=new TileLayout()" />
                <ResetComponent target="l2" className="spark.components.List" waitEvent="updateComplete" />
                <SetProperty    target="l2" propertyName="layout"  valueExpression="value=new TileLayout()" />
                <SetProperty target="l1" propertyName="itemRenderer"  valueExpression ="value= new ClassFactory( comps.ItemWithBorder )"  />
                <SetProperty target="l2" propertyName="itemRenderer"  valueExpression ="value= new ClassFactory( comps.ItemWithBorder )"  />
                <SetProperty target="l1" propertyName="dataProvider" valueExpression="value=application.createAbc()" waitEvent="updateComplete" waitTarget="l1"/>
                <SetProperty target="l2" propertyName="dataProvider" valueExpression="value=application.createAbc()" waitEvent="updateComplete" waitTarget="l2"/>
                <SetProperty target="l1" propertyName="selectedIndex" value="0" />
                <SetProperty target="l1" propertyName="dragEnabled" value="true" />
                <SetProperty target="l1" propertyName="dragMoveEnabled" value="true" />
                <SetProperty target="l2" propertyName="dropEnabled" value="true" />
                <SetProperty    target="l1.layout" propertyName="orientation" value="rows" />
                <SetProperty    target="l2.layout" propertyName="orientation" value="rows" />
                
                <SetProperty target="l1" propertyName="width" value="150" waitEvent="updateComplete"/>
                <SetProperty target="l1" propertyName="height" value="100" waitEvent="updateComplete"/>
                <SetProperty target="l2" propertyName="width" value="150" waitEvent="updateComplete"/>
                <SetProperty target="l2" propertyName="height" value="100" waitEvent="updateComplete"/>
                <SetProperty target="l1.layout" propertyName="dragScrollInitialDelay" value="0" />
                <SetProperty target="l2.layout" propertyName="dragScrollInitialDelay" value="0" />
            </setup>
            <body>
                <DispatchMouseEvent target="l1"  type="mouseUp"  localX="10" localY="10" />
                <DispatchMouseEvent target="l1"  type="mouseOver" buttonDown="false" localX="10" localY="10" />
                
                <DispatchMouseEvent target="l1"  type="mouseDown" buttonDown="true"  localX="10" localY="10" />
                <DispatchMouseEvent target="l1"  type="mouseMove" buttonDown="true"  localX="145" localY="12" waitEvent="dragStart" />
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="5" localY="10" waitEvent="dragEnter"/>
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="3" localY="30"  waitEvent="dragOver"/>
                <WaitForEffectsToEnd/>
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="5" localY="99" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="move"/>
                <WaitForEffectsToEnd/>
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="3" localY="98" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="move"/>
                <WaitForEffectsToEnd/>
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="1" localY="99" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="move"/>
                <WaitForEffectsToEnd/>
                <DispatchMouseEvent target="l2" type="mouseMove" buttonDown="true" localX="2" localY="98" waitTarget="mx.managers::DragManager.mx_internal:dragProxy" waitEvent="move"/>
                <Pause timeout="100" />
                <DispatchMouseEvent target="l2" type="mouseUp" localX="2" localY="99"  waitTarget="l2" waitEvent="dragDrop" />
                <WaitForEffectsToEnd/>
                <WaitForLayoutManager/>
                <CompareBitmap numColorVariances="20" ignoreMaxColorVariance="true" target="hg" url="../events/baselines/$testID.png" />
            </body>
            <cleanup>
                <RunCode code="DragManager.endDrag()" />
            </cleanup>
        </TestCase>

  </testCases>
</UnitTester>
