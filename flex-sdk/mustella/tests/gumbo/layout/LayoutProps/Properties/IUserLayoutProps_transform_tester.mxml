<?xml version="1.0" encoding="utf-8"?>
<!--

  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.

-->
<UnitTester testDir="gumbo/layout/LayoutProps/Properties/"  xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:mx="library://ns.adobe.com/flex/mx" xmlns:s="library://ns.adobe.com/flex/spark" xmlns="*" testSWF="IUserLayoutProps_main.mxml">

        <!-- this set of lines form a template that must be in each unit test -->
        <fx:Script>
            <![CDATA[
                  public static function init(o:DisplayObject):void {}
            ]]>
        </fx:Script>
        <fx:Metadata>
            <![CDATA[
               [Mixin]
               
            ]]>
        </fx:Metadata>
        <!-- end of set of lines that must be in each unit test -->

	<fx:Script>
            <![CDATA[
	    ]]>
	</fx:Script>
	
	<testCases>
		<!--Transform: scaleX, scaleY, rotate, transformX, transformY-->
		<!--Properties: top, bottom, left, right, x, y-->
		
		<!--Ellipse-->
		<TestCase testID="Ellipse_scaleX_top_layoutProps" keywords="[Ellipse, scaleX, top, layout]" description="Set scaleX top, verify x, y, and width, height are the correct values">
			<setup>
				<ResetComponent target="me" className="comps.MyEllipse" waitEvent="updateComplete" waitTarget="me"/>
				<SetProperty propertyName="scaleX" value="3" target="me" waitEvent="updateComplete" waitTarget="me"/>
				<SetProperty propertyName="top" value="25" target="me" waitEvent="updateComplete" waitTarget="me"/>
			</setup>
			<body>
				<AssertMethodValue method="value=application.me.getLayoutBoundsX()" value="0" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsY()" value="25" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsWidth()" value="150" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsHeight()" value="30" />
				
			</body>
		</TestCase>
		
		<TestCase testID="Ellipse_scaleX_left_layoutProps" keywords="[Ellipse, scaleX, left, layout]" description="Set scaleX left, verify x, y, and width, height are the correct values">
			<setup>
				<ResetComponent target="me" className="comps.MyEllipse" waitEvent="updateComplete" waitTarget="me"/>
				<SetProperty propertyName="scaleX" value="3" target="me" waitEvent="updateComplete" waitTarget="me"/>
				<SetProperty propertyName="left" value="35" target="me" waitEvent="updateComplete" waitTarget="me"/>
			</setup>
			<body>
				<AssertMethodValue method="value=application.me.getLayoutBoundsX()" value="35" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsY()" value="0" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsWidth()" value="150" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsHeight()" value="30" />
				
			</body>
		</TestCase>
		
		<TestCase testID="Ellipse_scaleX_bottom_layoutProps" keywords="[Ellipse, scaleX, top, layout]" description="Set scaleX bottom, verify x, y, and width, height are the correct values">
			<setup>
				<ResetComponent target="me" className="comps.MyEllipse" waitEvent="updateComplete" waitTarget="me"/>
				<SetProperty propertyName="scaleX" value="3" target="me" waitEvent="updateComplete" waitTarget="me"/>
				<SetProperty propertyName="bottom" value="30" target="me" waitEvent="updateComplete" waitTarget="me"/>
			</setup>
			<body>
				<AssertMethodValue method="value=application.me.getLayoutBoundsX()" value="0" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsY()" value="440" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsWidth()" value="150" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsHeight()" value="30" />
				
			</body>
		</TestCase>
			
		<TestCase testID="Ellipse_scaleX_right_layoutProps" keywords="[Ellipse, scaleX, right, layout]" description="Set scaleX right, verify x, y, and width, height are the correct values">
			<setup>
				<ResetComponent target="me" className="comps.MyEllipse" waitEvent="updateComplete" waitTarget="me"/>
				<SetProperty propertyName="scaleX" value="3" target="me" waitEvent="updateComplete" waitTarget="me"/>
				<SetProperty propertyName="right" value="55" target="me" waitEvent="updateComplete" waitTarget="me"/>
			</setup>
			<body>
				<AssertMethodValue method="value=application.me.getLayoutBoundsX()" value="295" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsY()" value="0" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsWidth()" value="150" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsHeight()" value="30" />
				
			</body>
		</TestCase>
		<TestCase testID="Ellipse_scaleX_x_layoutProps" keywords="[Ellipse, scaleX, x, layout]" description="Set x scaleX, verify x, y, and width, height are the correct values">
			<setup>
				<ResetComponent target="me" className="comps.MyEllipse" waitEvent="updateComplete" waitTarget="me"/>
				<SetProperty propertyName="scaleX" value="3" target="me" waitEvent="updateComplete" waitTarget="me"/>
				<SetProperty propertyName="x" value="45" target="me" waitEvent="updateComplete" waitTarget="me"/>
			</setup>
			<body>
				<AssertMethodValue method="value=application.me.getLayoutBoundsX()" value="45" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsY()" value="0" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsWidth()" value="150" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsHeight()" value="30" />
				
			</body>
		</TestCase>
		<TestCase testID="Ellipse_scaleX_y_layoutProps" keywords="[Ellipse, scaleX, y, layout]" description="Set y scaleX, verify x, y, and width, height are the correct values">
			<setup>
				<ResetComponent target="me" className="comps.MyEllipse" waitEvent="updateComplete" waitTarget="me"/>
				<SetProperty propertyName="scaleX" value="3" target="me" waitEvent="updateComplete" waitTarget="me"/>
				<SetProperty propertyName="y" value="80" target="me" waitEvent="updateComplete" waitTarget="me"/>
			</setup>
			<body>
				<AssertMethodValue method="value=application.me.getLayoutBoundsX()" value="0" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsY()" value="80" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsWidth()" value="150" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsHeight()" value="30" />
				
			</body>
		</TestCase>
		
		<TestCase testID="Ellipse_scaleX_horizontalCenter_layoutProps" keywords="[Ellipse, scaleX, horizontalCenter, layout]" description="Set horizontalCenter scaleX, verify x, y, and width, height are the correct values">
			<setup>
				<ResetComponent target="me" className="comps.MyEllipse" waitEvent="updateComplete" waitTarget="me"/>
				<SetProperty propertyName="scaleX" value="3" target="me" waitEvent="updateComplete" waitTarget="me"/>
				<SetProperty propertyName="horizontalCenter" value="10" target="me" waitEvent="updateComplete" waitTarget="me"/>
			</setup>
			<body>
				<AssertMethodValue method="value=application.me.getLayoutBoundsX()" value="185" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsY()" value="0" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsX(false)" value="185" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsY(false)" value="0" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsWidth()" value="150" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsHeight()" value="30" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsWidth(false)" value="50" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsHeight(false)" value="30" />
			</body>
		</TestCase>
		
		<TestCase testID="Ellipse_scaleX_verticalCenter_layoutProps" keywords="[Ellipse, scaleX, verticalCenter, layout]" description="Set verticalCenter scaleX, verify x, y, and width, height are the correct values">
			<setup>
				<ResetComponent target="me" className="comps.MyEllipse" waitEvent="updateComplete" waitTarget="me"/>
				<SetProperty propertyName="verticalCenter" value="3" target="me" waitEvent="updateComplete" waitTarget="me"/>
				<SetProperty propertyName="scaleX" value="3" target="me" waitEvent="updateComplete" waitTarget="me"/>
			</setup>
			<body>
				<AssertMethodValue method="value=application.me.getLayoutBoundsX()" value="0" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsY()" value="238" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsX(false)" value="0" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsY(false)" value="238" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsWidth()" value="150" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsHeight()" value="30" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsWidth(false)" value="50" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsHeight(false)" value="30" />
			</body>
		</TestCase>
		
		<TestCase testID="Ellipse_scaleX_baseline_layoutProps" keywords="[Ellipse, scaleX, baseline, layout]" description="Set baseline scaleX, verify x, y, and width, height are the correct values">
			<setup>
				<ResetComponent target="me" className="comps.MyEllipse" waitEvent="updateComplete" waitTarget="me"/>
				<SetProperty propertyName="baseline" value="10" target="me"/>
				<SetProperty propertyName="scaleX" value="3" target="me" waitEvent="updateComplete" waitTarget="me"/>
			</setup>
			<body>
				<AssertMethodValue method="value=application.me.getLayoutBoundsX()" value="0" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsY()" value="0" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsX(false)" value="0" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsY(false)" value="0" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsWidth()" value="150" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsHeight()" value="30" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsWidth(false)" value="50" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsHeight(false)" value="30" />
			</body>
		</TestCase>
		
		<TestCase testID="Rect_scaleX_top_layoutProps" keywords="[Rect, scaleX, top, layout]" description="Set scaleX top, verify x, y, and width, height are the correct values">
			<setup>
				<ResetComponent target="mr" className="comps.MyRect" waitEvent="updateComplete" waitTarget="mr"/>
				<SetProperty propertyName="scaleX" value="3" target="mr" waitEvent="updateComplete" waitTarget="mr"/>
				<SetProperty propertyName="top" value="25" target="mr" waitEvent="updateComplete" waitTarget="mr"/>
			</setup>
			<body>
				<AssertMethodValue method="value=application.mr.getLayoutBoundsX()" value="0" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsY()" value="25" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsWidth()" value="150" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsHeight()" value="30" />
				
			</body>
		</TestCase>

		<TestCase testID="Rect_scaleX_left_layoutProps" keywords="[Rect, scaleX, left, layout]" description="Set scaleX left, verify x, y, and width, height are the correct values">
			<setup>
				<ResetComponent target="mr" className="comps.MyRect" waitEvent="updateComplete" waitTarget="mr"/>
				<SetProperty propertyName="scaleX" value="3" target="mr" waitEvent="updateComplete" waitTarget="mr"/>
				<SetProperty propertyName="left" value="35" target="mr" waitEvent="updateComplete" waitTarget="mr"/>
			</setup>
			<body>
				<AssertMethodValue method="value=application.mr.getLayoutBoundsX()" value="35" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsY()" value="0" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsWidth()" value="150" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsHeight()" value="30" />
				
			</body>
		</TestCase>

		<TestCase testID="Rect_scaleX_bottom_layoutProps" keywords="[Rect, scaleX, top, layout]" description="Set scaleX bottom, verify x, y, and width, height are the correct values">
			<setup>
				<ResetComponent target="mr" className="comps.MyRect" waitEvent="updateComplete" waitTarget="mr"/>
				<SetProperty propertyName="scaleX" value="3" target="mr" waitEvent="updateComplete" waitTarget="mr"/>
				<SetProperty propertyName="bottom" value="30" target="mr" waitEvent="updateComplete" waitTarget="mr"/>
			</setup>
			<body>
				<AssertMethodValue method="value=application.mr.getLayoutBoundsX()" value="0" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsY()" value="440" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsWidth()" value="150" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsHeight()" value="30" />
				
			</body>
		</TestCase>

		<TestCase testID="Rect_scaleX_right_layoutProps" keywords="[Rect, scaleX, right, layout]" description="Set scaleX right, verify x, y, and width, height are the correct values">
			<setup>
				<ResetComponent target="mr" className="comps.MyRect" waitEvent="updateComplete" waitTarget="mr"/>
				<SetProperty propertyName="scaleX" value="3" target="mr" waitEvent="updateComplete" waitTarget="mr"/>
				<SetProperty propertyName="right" value="55" target="mr" waitEvent="updateComplete" waitTarget="mr"/>
			</setup>
			<body>
				<AssertMethodValue method="value=application.mr.getLayoutBoundsX()" value="295" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsY()" value="0" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsWidth()" value="150" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsHeight()" value="30" />
				
			</body>
		</TestCase>
		
		<TestCase testID="Rect_scaleX_x_layoutProps" keywords="[Rect, scaleX, x, layout]" description="Set scaleX x, verify x, y, and width, height are the correct values">
			<setup>
				<ResetComponent target="mr" className="comps.MyRect" waitEvent="updateComplete" waitTarget="mr"/>
				<SetProperty propertyName="scaleX" value="3" target="mr" waitEvent="updateComplete" waitTarget="mr"/>
				<SetProperty propertyName="x" value="45" target="mr" waitEvent="updateComplete" waitTarget="mr"/>
			</setup>
			<body>
				<AssertMethodValue method="value=application.mr.getLayoutBoundsX()" value="45" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsY()" value="0" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsWidth()" value="150" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsHeight()" value="30" />
				
			</body>
		</TestCase>
		
		<TestCase testID="Rect_scaleX_y_layoutProps" keywords="[Rect, scaleX, y, layout]" description="Set scaleX y, verify x, y, and width, height are the correct values">
			<setup>
				<ResetComponent target="mr" className="comps.MyRect" waitEvent="updateComplete" waitTarget="mr"/>
				<SetProperty propertyName="scaleX" value="3" target="mr" waitEvent="updateComplete" waitTarget="mr"/>
				<SetProperty propertyName="y" value="75" target="mr" waitEvent="updateComplete" waitTarget="mr"/>
			</setup>
			<body>
				<AssertMethodValue method="value=application.mr.getLayoutBoundsX()" value="0" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsY()" value="75" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsWidth()" value="150" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsHeight()" value="30" />
				
			</body>
		</TestCase>
		
		<TestCase testID="Rect_scaleX_horizontalCenter_layoutProps" keywords="[Rect, scaleX, horizontalCenter, layout]" description="Set horizontalCenter scaleX, verify x, y, and width, height are the correct values">
			<setup>
				<ResetComponent target="mr" className="comps.MyRect" waitEvent="updateComplete" waitTarget="mr"/>
				<SetProperty propertyName="scaleX" value="3" target="mr" waitEvent="updateComplete" waitTarget="mr"/>
				<SetProperty propertyName="horizontalCenter" value="10" target="mr" waitEvent="updateComplete" waitTarget="mr"/>
			</setup>
			<body>
				<AssertMethodValue method="value=application.mr.getLayoutBoundsX()" value="185" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsY()" value="0" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsX(false)" value="185" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsY(false)" value="0" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsWidth()" value="150" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsHeight()" value="30" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsWidth(false)" value="50" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsHeight(false)" value="30" />
			</body>
		</TestCase>

		<TestCase testID="Rect_scaleX_verticalCenter_layoutProps" keywords="[Rect, scaleX, verticalCenter, layout]" description="Set verticalCenter scaleX, verify x, y, and width, height are the correct values">
			<setup>
				<ResetComponent target="mr" className="comps.MyRect" waitEvent="updateComplete" waitTarget="mr"/>
				<SetProperty propertyName="verticalCenter" value="3" target="mr" waitEvent="updateComplete" waitTarget="mr"/>
				<SetProperty propertyName="scaleX" value="3" target="mr" waitEvent="updateComplete" waitTarget="mr"/>
			</setup>
			<body>
				<AssertMethodValue method="value=application.mr.getLayoutBoundsX()" value="0" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsY()" value="238" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsX(false)" value="0" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsY(false)" value="238" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsWidth()" value="150" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsHeight()" value="30" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsWidth(false)" value="50" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsHeight(false)" value="30" />
			</body>
		</TestCase>

		<TestCase testID="Rect_scaleX_baseline_layoutProps" keywords="[Rect, scaleX, baseline, layout]" description="Set baseline scaleX, verify x, y, and width, height are the correct values">
			<setup>
				<ResetComponent target="mr" className="comps.MyRect" waitEvent="updateComplete" waitTarget="mr"/>
				<SetProperty propertyName="baseline" value="10" target="mr"/>
				<SetProperty propertyName="scaleX" value="3" target="mr" waitEvent="updateComplete" waitTarget="mr"/>
			</setup>
			<body>
				<AssertMethodValue method="value=application.mr.getLayoutBoundsX()" value="0" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsY()" value="0" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsX(false)" value="0" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsY(false)" value="0" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsWidth()" value="150" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsHeight()" value="30" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsWidth(false)" value="50" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsHeight(false)" value="30" />
			</body>
		</TestCase>
		
		<TestCase testID="mxButton_scaleX_top_layoutProps" keywords="[mxButton, scaleX, top, layout]" description="Set scaleX top, verify x, y, and width, height are the cormxButton values">
			<setup>
				<ResetComponent target="btn" className="mx.controls.Button" waitEvent="updateComplete" waitTarget="btn"/>
				<SetProperty propertyName="scaleX" value="3" target="btn" waitEvent="updateComplete" waitTarget="btn"/>
				<SetProperty propertyName="top" value="25" target="btn" waitEvent="updateComplete" waitTarget="btn"/>
				
			</setup>
			<body>
				<AssertMethodValue method="value=application.btn.getLayoutBoundsX()" value="0" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsY()" value="25" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsWidth()" value="210" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsHeight()" value="21" />
				
			</body>
		</TestCase>
		
		<TestCase testID="mxButton_scaleX_left_layoutProps" keywords="[mxButton, scaleX, left, layout]" description="Set scaleX left, verify x, y, and width, height are the cormxButton values">
			<setup>
				<ResetComponent target="btn" className="mx.controls.Button" waitEvent="updateComplete" waitTarget="btn"/>
				<SetProperty propertyName="scaleX" value="3" target="btn" waitEvent="updateComplete" waitTarget="btn"/>
				<SetProperty propertyName="left" value="35" target="btn" waitEvent="updateComplete" waitTarget="btn"/>
				
			</setup>
			<body>
				<AssertMethodValue method="value=application.btn.getLayoutBoundsX()" value="35" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsY()" value="0" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsWidth()" value="210" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsHeight()" value="21" />
				
			</body>
		</TestCase>
		
		<TestCase testID="mxButton_scaleX_bottom_layoutProps" keywords="[mxButton, scaleX, top, layout]" description="Set scaleX bottom, verify x, y, and width, height are the cormxButton values">
			<setup>
				<ResetComponent target="btn" className="mx.controls.Button" waitEvent="updateComplete" waitTarget="btn"/>
				<SetProperty propertyName="scaleX" value="3" target="btn" waitEvent="updateComplete" waitTarget="btn"/>
				<SetProperty propertyName="bottom" value="30" target="btn" waitEvent="updateComplete" waitTarget="basicGrp"/>
				
			</setup>
			<body>
				<AssertMethodValue method="value=application.btn.getLayoutBoundsX()" value="0" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsY()" value="449" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsWidth()" value="210" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsHeight()" value="21" />
				
			</body>
		</TestCase>
		
		<TestCase testID="mxButton_scaleX_right_layoutProps" keywords="[mxButton, scaleX, right, layout]" description="Set scaleX right, verify x, y, and width, height are the cormxButton values">
			<setup>
				<ResetComponent target="btn" className="mx.controls.Button" waitEvent="updateComplete" waitTarget="btn"/>
				<SetProperty propertyName="scaleX" value="3" target="btn" waitEvent="updateComplete" waitTarget="btn"/>
				<SetProperty propertyName="right" value="55" target="btn" waitEvent="updateComplete" waitTarget="basicGrp"/>
				
			</setup>
			<body>
				<AssertMethodValue method="value=application.btn.getLayoutBoundsX()" value="235" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsY()" value="0" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsWidth()" value="210" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsHeight()" value="21" />
				
			</body>
		</TestCase>
		
		<TestCase testID="mxButton_scaleX_x_layoutProps" keywords="[mxButton, scaleX, x, layout]" description="Set scaleX x, verify x, y, and width, height are the cormxButton values">
			<setup>
				<ResetComponent target="btn" className="mx.controls.Button" waitEvent="updateComplete" waitTarget="btn"/>
				<SetProperty propertyName="x" value="65" target="btn"/>
				<SetProperty propertyName="scaleX" value="3" target="btn" waitEvent="updateComplete" waitTarget="btn"/>
			</setup>
			<body>
				<AssertMethodValue method="value=application.btn.getLayoutBoundsX()" value="65" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsY()" value="0" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsWidth()" value="210" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsHeight()" value="21" />
				
			</body>
		</TestCase>
		
		<TestCase testID="mxButton_scaleX_y_layoutProps" keywords="[mxButton, scaleX, y, layout]" description="Set scaleX y, verify x, y, and width, height are the cormxButton values">
			<setup>
				<ResetComponent target="btn" className="mx.controls.Button" waitEvent="updateComplete" waitTarget="btn"/>
				<SetProperty propertyName="y" value="60" target="btn" />
				<SetProperty propertyName="scaleX" value="3" target="btn" waitEvent="updateComplete" waitTarget="btn"/>
			</setup>
			<body>
				<AssertMethodValue method="value=application.btn.getLayoutBoundsX()" value="0" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsY()" value="60" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsWidth()" value="210" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsHeight()" value="21" />
				
			</body>
		</TestCase>
		
		<TestCase testID="Ellipse_scaleY_top_layoutProps" keywords="[Ellipse, scaleY, top, layout]" description="Set scaleY top, verify x, y, and width, height are the correct values">
			<setup>
				<ResetComponent target="me" className="comps.MyEllipse" waitEvent="updateComplete" waitTarget="me"/>
				<SetProperty propertyName="scaleY" value="3" target="me" waitEvent="updateComplete" waitTarget="me"/>
				<SetProperty propertyName="top" value="25" target="me" waitEvent="updateComplete" waitTarget="me"/>
			</setup>
			<body>
				<AssertMethodValue method="value=application.me.getLayoutBoundsX()" value="0" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsY()" value="25" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsWidth()" value="50" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsHeight()" value="90" />
				
			</body>
		</TestCase>

		<TestCase testID="Ellipse_scaleY_left_layoutProps" keywords="[Ellipse, scaleY, left, layout]" description="Set scaleY left, verify x, y, and width, height are the correct values">
			<setup>
				<ResetComponent target="me" className="comps.MyEllipse" waitEvent="updateComplete" waitTarget="me"/>
				<SetProperty propertyName="scaleY" value="3" target="me" waitEvent="updateComplete" waitTarget="me"/>
				<SetProperty propertyName="left" value="35" target="me" waitEvent="updateComplete" waitTarget="me"/>
			</setup>
			<body>
				<AssertMethodValue method="value=application.me.getLayoutBoundsX()" value="35" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsY()" value="0" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsWidth()" value="50" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsHeight()" value="90" />
				
			</body>
		</TestCase>

		<TestCase testID="Ellipse_scaleY_bottom_layoutProps" keywords="[Ellipse, scaleY, top, layout]" description="Set scaleY bottom, verify x, y, and width, height are the correct values">
			<setup>
				<ResetComponent target="me" className="comps.MyEllipse" waitEvent="updateComplete" waitTarget="me"/>
				<SetProperty propertyName="scaleY" value="3" target="me" waitEvent="updateComplete" waitTarget="me"/>
				<SetProperty propertyName="bottom" value="30" target="me" waitEvent="updateComplete" waitTarget="me"/>
			</setup>
			<body>
				<AssertMethodValue method="value=application.me.getLayoutBoundsX()" value="0" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsY()" value="380" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsWidth()" value="50" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsHeight()" value="90" />
				
			</body>
		</TestCase>

		<TestCase testID="Ellipse_scaleY_right_layoutProps" keywords="[Ellipse, scaleY, right, layout]" description="Set scaleY right, verify x, y, and width, height are the correct values">
			<setup>
				<ResetComponent target="me" className="comps.MyEllipse" waitEvent="updateComplete" waitTarget="me"/>
				<SetProperty propertyName="scaleY" value="3" target="me" waitEvent="updateComplete" waitTarget="me"/>
				<SetProperty propertyName="right" value="55" target="me" waitEvent="updateComplete" waitTarget="me"/>
			</setup>
			<body>
				<AssertMethodValue method="value=application.me.getLayoutBoundsX()" value="395" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsY()" value="0" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsWidth()" value="50" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsHeight()" value="90" />
				
			</body>
		</TestCase>
		
		<TestCase testID="Ellipse_scaleY_x_layoutProps" keywords="[Ellipse, scaleY, x, layout]" description="Set x scaleY, verify x, y, and width, height are the correct values">
			<setup>
				<ResetComponent target="me" className="comps.MyEllipse" waitEvent="updateComplete" waitTarget="me"/>
				<SetProperty propertyName="x" value="45" target="me" />
				<SetProperty propertyName="scaleY" value="3" target="me" waitEvent="updateComplete" waitTarget="me"/>
			</setup>
			<body>
				<AssertMethodValue method="value=application.me.getLayoutBoundsX()" value="45" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsY()" value="0" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsWidth()" value="50" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsHeight()" value="90" />
				
			</body>
		</TestCase>
		<TestCase testID="Ellipse_scaleY_y_layoutProps" keywords="[Ellipse, scaleY, y, layout]" description="Set y scaleY, verify x, y, and width, height are the correct values">
			<setup>
				<ResetComponent target="me" className="comps.MyEllipse" waitEvent="updateComplete" waitTarget="me"/>
				<SetProperty propertyName="y" value="80" target="me" />
				<SetProperty propertyName="scaleY" value="3" target="me" waitEvent="updateComplete" waitTarget="me"/>
			</setup>
			<body>
				<AssertMethodValue method="value=application.me.getLayoutBoundsX()" value="0" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsY()" value="80" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsWidth()" value="50" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsHeight()" value="90" />
				
			</body>
		</TestCase>
		
		<TestCase testID="Ellipse_scaleY_horizontalCenter_layoutProps" keywords="[Ellipse, scaleY, horizontalCenter, layout]" description="Set scaleY horizontalCenter, verify x, y, and width, height are the correct values">
			<setup>
				<ResetComponent target="me" className="comps.MyEllipse" waitEvent="updateComplete" waitTarget="me"/>
				<SetProperty propertyName="scaleY" value="3" target="me" waitEvent="updateComplete" waitTarget="me"/>
				<SetProperty propertyName="horizontalCenter" value="10" target="me" waitEvent="updateComplete" waitTarget="me"/>
			</setup>
			<body>
				<AssertMethodValue method="value=application.me.getLayoutBoundsX()" value="235" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsY()" value="0" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsX(false)" value="235" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsY(false)" value="0" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsWidth()" value="50" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsHeight()" value="90" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsWidth(false)" value="50" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsHeight(false)" value="30" />
			</body>
		</TestCase>

		<TestCase testID="Ellipse_scaleY_verticalCenter_layoutProps" keywords="[Ellipse, scaleY, verticalCenter, layout]" description="Set verticalCenter scaleY, verify x, y, and width, height are the correct values">
			<setup>
				<ResetComponent target="me" className="comps.MyEllipse" waitEvent="updateComplete" waitTarget="me"/>
				<SetProperty propertyName="verticalCenter" value="23" target="me" waitEvent="updateComplete" waitTarget="me"/>
				<SetProperty propertyName="scaleY" value="3" target="me" waitEvent="updateComplete" waitTarget="me"/>
			</setup>
			<body>
				<AssertMethodValue method="value=application.me.getLayoutBoundsX()" value="0" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsY()" value="228" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsX(false)" value="0" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsY(false)" value="228" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsWidth()" value="50" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsHeight()" value="90" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsWidth(false)" value="50" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsHeight(false)" value="30" />
			</body>
		</TestCase>

		<TestCase testID="Ellipse_scaleY_baseline_layoutProps" keywords="[Ellipse, scaleY, baseline, layout]" description="Set scaleY baseline, verify x, y, and width, height are the correct values">
			<setup>
				<ResetComponent target="me" className="comps.MyEllipse" waitEvent="updateComplete" waitTarget="me"/>
				<SetProperty propertyName="baseline" value="10" target="me"/>
				<SetProperty propertyName="scaleY" value="3" target="me" waitEvent="updateComplete" waitTarget="me"/>
			</setup>
			<body>
				<AssertMethodValue method="value=application.me.getLayoutBoundsX()" value="0" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsY()" value="0" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsX(false)" value="0" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsY(false)" value="0" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsWidth()" value="50" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsHeight()" value="90" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsWidth(false)" value="50" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsHeight(false)" value="30" />
			</body>
		</TestCase>
		
		<TestCase testID="Rect_scaleY_top_layoutProps" keywords="[Rect, scaleY, top, layout]" description="Set scaleY top, verify x, y, and width, height are the correct values">
			<setup>
				<ResetComponent target="mr" className="comps.MyRect" waitEvent="updateComplete" waitTarget="mr"/>
				<SetProperty propertyName="scaleY" value="3" target="mr" waitEvent="updateComplete" waitTarget="mr"/>
				<SetProperty propertyName="top" value="25" target="mr" waitEvent="updateComplete" waitTarget="mr"/>
			</setup>
			<body>
				<AssertMethodValue method="value=application.mr.getLayoutBoundsX()" value="0" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsY()" value="25" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsWidth()" value="50" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsHeight()" value="90" />
				
			</body>
		</TestCase>

		<TestCase testID="Rect_scaleY_left_layoutProps" keywords="[Rect, scaleY, left, layout]" description="Set scaleY left, verify x, y, and width, height are the correct values">
			<setup>
				<ResetComponent target="mr" className="comps.MyRect" waitEvent="updateComplete" waitTarget="mr"/>
				<SetProperty propertyName="scaleY" value="3" target="mr" waitEvent="updateComplete" waitTarget="mr"/>
				<SetProperty propertyName="left" value="35" target="mr" waitEvent="updateComplete" waitTarget="mr"/>
			</setup>
			<body>
				<AssertMethodValue method="value=application.mr.getLayoutBoundsX()" value="35" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsY()" value="0" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsWidth()" value="50" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsHeight()" value="90" />
				
			</body>
		</TestCase>

		<TestCase testID="Rect_scaleY_bottom_layoutProps" keywords="[Rect, scaleY, top, layout]" description="Set scaleY bottom, verify x, y, and width, height are the correct values">
			<setup>
				<ResetComponent target="mr" className="comps.MyRect" waitEvent="updateComplete" waitTarget="mr"/>
				<SetProperty propertyName="scaleY" value="3" target="mr" waitEvent="updateComplete" waitTarget="mr"/>
				<SetProperty propertyName="bottom" value="30" target="mr" waitEvent="updateComplete" waitTarget="mr"/>
			</setup>
			<body>
				<AssertMethodValue method="value=application.mr.getLayoutBoundsX()" value="0" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsY()" value="380" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsWidth()" value="50" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsHeight()" value="90" />
				
			</body>
		</TestCase>
		
		<TestCase testID="Rect_scaleY_right_layoutProps" keywords="[Rect, scaleY, right, layout]" description="Set scaleY right, verify x, y, and width, height are the correct values">
			<setup>
				<ResetComponent target="mr" className="comps.MyRect" waitEvent="updateComplete" waitTarget="mr"/>
				<SetProperty propertyName="scaleY" value="3" target="mr" waitEvent="updateComplete" waitTarget="mr"/>
				<SetProperty propertyName="right" value="55" target="mr" waitEvent="updateComplete" waitTarget="mr"/>
			</setup>
			<body>
				<AssertMethodValue method="value=application.mr.getLayoutBoundsX()" value="395" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsY()" value="0" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsWidth()" value="50" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsHeight()" value="90" />
				
			</body>
		</TestCase>

		<TestCase testID="Rect_scaleY_x_layoutProps" keywords="[Rect, scaleY, x, layout]" description="Set scaleY x, verify x, y, and width, height are the correct values">
			<setup>
				<ResetComponent target="mr" className="comps.MyRect" waitEvent="updateComplete" waitTarget="mr"/>
				<SetProperty propertyName="x" value="45" target="mr" />
				<SetProperty propertyName="scaleY" value="3" target="mr" waitEvent="updateComplete" waitTarget="mr"/>
			</setup>
			<body>
				<AssertMethodValue method="value=application.mr.getLayoutBoundsX()" value="45" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsY()" value="0" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsWidth()" value="50" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsHeight()" value="90" />
				
			</body>
		</TestCase>

		<TestCase testID="Rect_scaleY_y_layoutProps" keywords="[Rect, scaleY, y, layout]" description="Set scaleY y, verify x, y, and width, height are the correct values">
			<setup>
				<ResetComponent target="mr" className="comps.MyRect" waitEvent="updateComplete" waitTarget="mr"/>
				<SetProperty propertyName="y" value="75" target="mr" />
				<SetProperty propertyName="scaleY" value="3" target="mr" waitEvent="updateComplete" waitTarget="mr"/>
			</setup>
			<body>
				<AssertMethodValue method="value=application.mr.getLayoutBoundsX()" value="0" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsY()" value="75" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsWidth()" value="50" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsHeight()" value="90" />
				
			</body>
		</TestCase>
		
		<TestCase testID="Rect_scaleY_horizontalCenter_layoutProps" keywords="[Rect, scaleY, horizontalCenter, layout]" description="Set scaleY horizontalCenter, verify x, y, and width, height are the correct values">
			<setup>
				<ResetComponent target="mr" className="comps.MyRect" waitEvent="updateComplete" waitTarget="mr"/>
				<SetProperty propertyName="scaleY" value="3" target="mr" waitEvent="updateComplete" waitTarget="mr"/>
				<SetProperty propertyName="horizontalCenter" value="10" target="mr" waitEvent="updateComplete" waitTarget="mr"/>
			</setup>
			<body>
				<AssertMethodValue method="value=application.mr.getLayoutBoundsX()" value="235" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsY()" value="0" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsX(false)" value="235" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsY(false)" value="0" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsWidth()" value="50" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsHeight()" value="90" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsWidth(false)" value="50" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsHeight(false)" value="30" />
			</body>
		</TestCase>

		<TestCase testID="Rect_scaleY_verticalCenter_layoutProps" keywords="[Rect, scaleY, verticalCenter, layout]" description="Set verticalCenter scaleY, verify x, y, and width, height are the correct values">
			<setup>
				<ResetComponent target="mr" className="comps.MyRect" waitEvent="updateComplete" waitTarget="mr"/>
				<SetProperty propertyName="verticalCenter" value="23" target="mr" waitEvent="updateComplete" waitTarget="mr"/>
				<SetProperty propertyName="scaleY" value="3" target="mr" waitEvent="updateComplete" waitTarget="mr"/>
			</setup>
			<body>
				<AssertMethodValue method="value=application.mr.getLayoutBoundsX()" value="0" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsY()" value="228" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsX(false)" value="0" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsY(false)" value="228" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsWidth()" value="50" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsHeight()" value="90" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsWidth(false)" value="50" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsHeight(false)" value="30" />
			</body>
		</TestCase>

		<TestCase testID="Rect_scaleY_baseline_layoutProps" keywords="[Rect, scaleY, baseline, layout]" description="Set scaleY baseline, verify x, y, and width, height are the correct values">
			<setup>
				<ResetComponent target="mr" className="comps.MyRect" waitEvent="updateComplete" waitTarget="mr"/>
				<SetProperty propertyName="baseline" value="10" target="mr"/>
				<SetProperty propertyName="scaleY" value="3" target="mr" waitEvent="updateComplete" waitTarget="mr"/>
			</setup>
			<body>
				<AssertMethodValue method="value=application.mr.getLayoutBoundsX()" value="0" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsY()" value="0" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsX(false)" value="0" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsY(false)" value="0" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsWidth()" value="50" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsHeight()" value="90" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsWidth(false)" value="50" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsHeight(false)" value="30" />
			</body>
		</TestCase>
		
		<TestCase testID="mxButton_scaleY_top_layoutProps" keywords="[mxButton, scaleY, top, layout]" description="Set scaleY top, verify x, y, and width, height are the cormxButton values">
			<setup>
				<ResetComponent target="btn" className="mx.controls.Button" waitEvent="updateComplete" waitTarget="btn"/>
				<SetProperty propertyName="scaleY" value="3" target="btn" waitEvent="updateComplete" waitTarget="btn"/>
				<SetProperty propertyName="top" value="25" target="btn" waitEvent="updateComplete" waitTarget="btn"/>
				
			</setup>
			<body>
				<AssertMethodValue method="value=application.btn.getLayoutBoundsX()" value="0" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsY()" value="25" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsWidth()" value="70" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsHeight()" value="63" />
				
			</body>
		</TestCase>

		<TestCase testID="mxButton_scaleY_left_layoutProps" keywords="[mxButton, scaleY, left, layout]" description="Set scaleY left, verify x, y, and width, height are the cormxButton values">
			<setup>
				<ResetComponent target="btn" className="mx.controls.Button" waitEvent="updateComplete" waitTarget="btn"/>
				<SetProperty propertyName="scaleY" value="3" target="btn" waitEvent="updateComplete" waitTarget="btn"/>
				<SetProperty propertyName="left" value="35" target="btn" waitEvent="updateComplete" waitTarget="btn"/>
				
			</setup>
			<body>
				<AssertMethodValue method="value=application.btn.getLayoutBoundsX()" value="35" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsY()" value="0" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsWidth()" value="70" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsHeight()" value="63" />
				
			</body>
		</TestCase>

		<TestCase testID="mxButton_scaleY_bottom_layoutProps" keywords="[mxButton, scaleY, top, layout]" description="Set scaleY bottom, verify x, y, and width, height are the cormxButton values">
			<setup>
				<ResetComponent target="btn" className="mx.controls.Button" waitEvent="updateComplete" waitTarget="btn"/>
				<SetProperty propertyName="scaleY" value="3" target="btn" waitEvent="updateComplete" waitTarget="btn"/>
				<SetProperty propertyName="bottom" value="30" target="btn" waitEvent="updateComplete" waitTarget="basicGrp"/>
				
			</setup>
			<body>
				<AssertMethodValue method="value=application.btn.getLayoutBoundsX()" value="0" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsY()" value="407" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsWidth()" value="70" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsHeight()" value="63" />
				
			</body>
		</TestCase>

		<TestCase testID="mxButton_scaleY_right_layoutProps" keywords="[mxButton, scaleY, right, layout]" description="Set scaleY right, verify x, y, and width, height are the cormxButton values">
			<setup>
				<ResetComponent target="btn" className="mx.controls.Button" waitEvent="updateComplete" waitTarget="btn"/>
				<SetProperty propertyName="scaleY" value="3" target="btn" waitEvent="updateComplete" waitTarget="btn"/>
				<SetProperty propertyName="right" value="55" target="btn" waitEvent="updateComplete" waitTarget="basicGrp"/>
				
			</setup>
			<body>
				<AssertMethodValue method="value=application.btn.getLayoutBoundsX()" value="375" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsY()" value="0" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsWidth()" value="70" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsHeight()" value="63" />
				
			</body>
		</TestCase>
		
		<TestCase testID="mxButton_scaleY_x_layoutProps" keywords="[mxButton, scaleY, x, layout]" description="Set scaleY x, verify x, y, and width, height are the cormxButton values">
			<setup>
				<ResetComponent target="btn" className="mx.controls.Button" waitEvent="updateComplete" waitTarget="btn"/>
				<SetProperty propertyName="x" value="65" target="btn"/>
				<SetProperty propertyName="scaleY" value="3" target="btn" waitEvent="updateComplete" waitTarget="btn"/>
			</setup>
			<body>
				<AssertMethodValue method="value=application.btn.getLayoutBoundsX()" value="65" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsY()" value="0" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsWidth()" value="70" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsHeight()" value="63" />
				
			</body>
		</TestCase>

		<TestCase testID="mxButton_scaleY_y_layoutProps" keywords="[mxButton, scaleY, y, layout]" description="Set scaleY y, verify x, y, and width, height are the cormxButton values">
			<setup>
				<ResetComponent target="btn" className="mx.controls.Button" waitEvent="updateComplete" waitTarget="btn"/>
				<SetProperty propertyName="y" value="60" target="btn" />
				<SetProperty propertyName="scaleY" value="3" target="btn" waitEvent="updateComplete" waitTarget="btn"/>
			</setup>
			<body>
				<AssertMethodValue method="value=application.btn.getLayoutBoundsX()" value="0" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsY()" value="60" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsWidth()" value="70" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsHeight()" value="63" />
				
			</body>
		</TestCase>
		
		<TestCase testID="mxButton_scaleY_horizontalCenter_layoutProps" keywords="[mxButton, scaleY, horizontalCenter, layout]" description="Set scaleY horizontalCenter, verify x, y, and width, height are the cormxButton values">
			<setup>
				<ResetComponent target="btn" className="mx.controls.Button" waitEvent="updateComplete" waitTarget="btn"/>
				<SetProperty propertyName="horizontalCenter" value="60" target="btn" />
				<SetProperty propertyName="scaleY" value="3" target="btn" waitEvent="updateComplete" waitTarget="btn"/>
			</setup>
			<body>
				<AssertMethodValue method="value=application.btn.getLayoutBoundsX()" value="275" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsY()" value="0" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsWidth()" value="70" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsHeight()" value="63" />

			</body>
		</TestCase>
		<TestCase testID="mxButton_scaleY_verticalCenter_layoutProps" keywords="[mxButton, scaleY, verticalCenter, layout]" description="Set scaleY verticalCenter, verify x, y, and width, height are the cormxButton values">
			<setup>
				<ResetComponent target="btn" className="mx.controls.Button" waitEvent="updateComplete" waitTarget="btn"/>
				<SetProperty propertyName="verticalCenter" value="60" target="btn" />
				<SetProperty propertyName="scaleY" value="3" target="btn" waitEvent="updateComplete" waitTarget="btn"/>
			</setup>
			<body>
				<AssertMethodValue method="value=application.btn.getLayoutBoundsX()" value="0" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsY()" value="279" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsWidth()" value="70" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsHeight()" value="63" />

			</body>
		</TestCase>
		<TestCase testID="mxButton_scaleY_baseline_layoutProps" keywords="[mxButton, scaleY, baseline, layout]" description="Set scaleY baseline, verify x, y, and width, height are the cormxButton values">
			<setup>
				<ResetComponent target="btn" className="mx.controls.Button" waitEvent="updateComplete" waitTarget="btn"/>
				<SetProperty propertyName="baseline" value="60" target="btn" />
				<SetProperty propertyName="scaleY" value="3" target="btn" waitEvent="updateComplete" waitTarget="btn"/>
			</setup>
			<body>
				<AssertMethodValue method="value=application.btn.getLayoutBoundsX()" value="0" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsY()" value="49" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsWidth()" value="70" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsHeight()" value="63" />

			</body>
		</TestCase>
		<TestCase testID="Ellipse_rotation_top_layoutProps" keywords="[Ellipse, rotation, top, layout]" description="Set rotation top, verify x, y, and width, height are the correct values">
			<setup>
				<ResetComponent target="me" className="comps.MyEllipse" waitEvent="updateComplete" waitTarget="me"/>
				<SetProperty propertyName="rotation" value="120" target="me" waitEvent="updateComplete" waitTarget="me"/>
				<SetProperty propertyName="top" value="25" target="me" waitEvent="updateComplete" waitTarget="me"/>
			</setup>
			<body>
				<AssertMethodValue method="value=application.me.getLayoutBoundsX()" value="-43.518137" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsY().toFixed(0)" value="25.000000" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsWidth()" value="36.055513" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsHeight()" value="45.825757" />
				
			</body>
		</TestCase>

		<TestCase testID="Ellipse_rotation_left_layoutProps" keywords="[Ellipse, rotation, left, layout]" description="Set rotation left, verify x, y, and width, height are the correct values">
			<setup>
				<ResetComponent target="me" className="comps.MyEllipse" waitEvent="updateComplete" waitTarget="me"/>
				<SetProperty propertyName="rotation" value="120" target="me" waitEvent="updateComplete" waitTarget="me"/>
				<SetProperty propertyName="left" value="35" target="me" waitEvent="updateComplete" waitTarget="me"/>
			</setup>
			<body>
				<AssertMethodValue method="value=application.me.getLayoutBoundsX()" value="35" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsY()" value="-8.762243" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsWidth()" value="36.055513" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsHeight()" value="45.825757" />
				
			</body>
		</TestCase>

		<TestCase testID="Ellipse_rotation_bottom_layoutProps" keywords="[Ellipse, rotation, top, layout]" description="Set rotation bottom, verify x, y, and width, height are the correct values">
			<setup>
				<ResetComponent target="me" className="comps.MyEllipse" waitEvent="updateComplete" waitTarget="me"/>
				<SetProperty propertyName="rotation" value="120" target="me" waitEvent="updateComplete" waitTarget="me"/>
				<SetProperty propertyName="bottom" value="30" target="me" waitEvent="updateComplete" waitTarget="me"/>
			</setup>
			<body>
				<AssertMethodValue method="value=application.me.getLayoutBoundsX()" value="-43.518137" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsY()" value="424.174243" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsWidth()" value="36.055513" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsHeight()" value="45.825757" />
				
			</body>
		</TestCase>
		
		<TestCase testID="Ellipse_rotation_bottom30_left30_layoutProps" keywords="[Ellipse, rotation, top, layout]" description="Set rotation bottom, verify x, y, and width, height are the correct values">
			<setup>
				<ResetComponent target="me" className="comps.MyEllipse" waitEvent="updateComplete" waitTarget="me"/>
				<SetProperty propertyName="rotation" value="120" target="me" waitEvent="updateComplete" waitTarget="me"/>
				<SetProperty propertyName="left" value="30" target="me" waitEvent="updateComplete" waitTarget="me"/>
				<SetProperty propertyName="bottom" value="30" target="me" waitEvent="updateComplete" waitTarget="me"/>
			</setup>
			<body>
				<AssertMethodValue method="value=application.me.getLayoutBoundsX().toFixed(0)" value="30.000000" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsY()" value="424.174243" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsWidth()" value="36.055513" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsHeight()" value="45.825757" />
				
			</body>
		</TestCase>
		
		<TestCase testID="Ellipse_rotation_right_layoutProps" keywords="[Ellipse, rotation, right, layout]" description="Set rotation right, verify x, y, and width, height are the correct values">
			<setup>
				<ResetComponent target="me" className="comps.MyEllipse" waitEvent="updateComplete" waitTarget="me"/>
				<SetProperty propertyName="rotation" value="120" target="me" waitEvent="updateComplete" waitTarget="me"/>
				<SetProperty propertyName="right" value="55" target="me" waitEvent="updateComplete" waitTarget="me"/>
			</setup>
			<body>
				<AssertMethodValue method="value=application.me.getLayoutBoundsX()" value="408.944487" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsY()" value="-8.762243" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsWidth()" value="36.055513" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsHeight()" value="45.825757" />
			</body>
		</TestCase>

		<TestCase testID="Ellipse_rotation_x_layoutProps" keywords="[Ellipse, rotation, right, layout]" description="Set rotation x, verify x, y, and width, height are the correct values">
			<setup>
				<ResetComponent target="me" className="comps.MyEllipse" waitEvent="updateComplete" waitTarget="me"/>
				<SetProperty propertyName="x" value="55" target="me" />
				<SetProperty propertyName="rotation" value="120" target="me" waitEvent="updateComplete" waitTarget="me"/>
			</setup>
			<body>
				<AssertMethodValue method="value=application.me.getLayoutBoundsX()" value="11.481863" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsY()" value="-8.762243" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsWidth()" value="36.055513" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsHeight()" value="45.825757" />
			</body>
		</TestCase>
		
		<TestCase testID="Ellipse_rotation_horizontalCenter_layoutProps" keywords="[Ellipse, rotation, y, layout]" description="Set rotation and horizontalCenter verify x, y, and width, height are the correct values">
			<setup>
				<ResetComponent target="me" className="comps.MyEllipse" waitEvent="updateComplete" waitTarget="me"/>
				<SetProperty propertyName="rotation" value="90" target="me" waitEvent="updateComplete" waitTarget="me"/>
				<SetProperty propertyName="horizontalCenter" value="10" target="me" waitEvent="updateComplete" waitTarget="me"/>
			</setup>
			<body>
				<AssertMethodValue method="value=application.me.getLayoutBoundsX()" value="245" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsY()" value="0" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsX(false)" value="275" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsY(false)" value="0" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsWidth()" value="30" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsHeight()" value="50" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsWidth(false)" value="50" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsHeight(false)" value="30" />
			</body>
		</TestCase>

		<TestCase testID="Ellipse_rotation_verticalCenter_layoutProps" keywords="[Ellipse, rotation, y, layout]" description="Set verticalCenter rotation, verify x, y, and width, height are the correct values">
			<setup>
				<ResetComponent target="me" className="comps.MyEllipse" waitEvent="updateComplete" waitTarget="me"/>
				<SetProperty propertyName="verticalCenter" value="3" target="me" waitEvent="updateComplete" waitTarget="me"/>
				<SetProperty propertyName="rotation" value="90" target="me" waitEvent="updateComplete" waitTarget="me"/>
			</setup>
			<body>
				<AssertMethodValue method="value=application.me.getLayoutBoundsX()" value="-30" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsY()" value="228" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsX(false)" value="0" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsY(false)" value="228" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsWidth()" value="30" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsHeight()" value="50" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsWidth(false)" value="50" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsHeight(false)" value="30" />
			</body>
		</TestCase>

		<TestCase testID="Ellipse_rotation_baseline_layoutProps" keywords="[Ellipse, rotation, y, layout]" description="Set baseline rotation, verify x, y, and width, height are the correct values">
			<setup>
				<ResetComponent target="me" className="comps.MyEllipse" waitEvent="updateComplete" waitTarget="me"/>
				<SetProperty propertyName="baseline" value="10" target="me"/>
				<SetProperty propertyName="rotation" value="90" target="me" waitEvent="updateComplete" waitTarget="me"/>
			</setup>
			<body>
				<AssertMethodValue method="value=application.me.getLayoutBoundsX()" value="-30" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsY()" value="0" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsX(false)" value="0" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsY(false)" value="0" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsWidth()" value="30" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsHeight()" value="50" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsWidth(false)" value="50" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsHeight(false)" value="30" />
			</body>
		</TestCase>
		
		<TestCase testID="Ellipse_rotation_y_layoutProps" keywords="[Ellipse, rotation, right, layout]" description="Set rotation y, verify x, y, and width, height are the correct values">
			<setup>
				<ResetComponent target="me" className="comps.MyEllipse" waitEvent="updateComplete" waitTarget="me"/>
				<SetProperty propertyName="y" value="55" target="me" />
				<SetProperty propertyName="rotation" value="120" target="me" waitEvent="updateComplete" waitTarget="me"/>
			</setup>
			<body>
				<AssertMethodValue method="value=application.me.getLayoutBoundsX()" value="-43.518137" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsY()" value="46.237757" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsWidth()" value="36.055513" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsHeight()" value="45.825757" />
			</body>
		</TestCase>
		
		<TestCase testID="Rect_rotation_top_layoutProps" keywords="[Rect, rotation, top, layout]" description="Set rotation top, verify x, y, and width, height are the correct values">
			<setup>
				<ResetComponent target="mr" className="comps.MyRect" waitEvent="updateComplete" waitTarget="mr"/>
				<SetProperty propertyName="rotation" value="120" target="mr" waitEvent="updateComplete" waitTarget="mr"/>
				<SetProperty propertyName="top" value="25" target="mr" waitEvent="updateComplete" waitTarget="mr"/>
			</setup>
			<body>
				<AssertMethodValue method="value=application.mr.getLayoutBoundsWidth()" value="50.980762" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsHeight()" value="58.301270" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsX()" value="-50.980762" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsY()" value="25" />
			</body>
		</TestCase>

		<TestCase testID="Rect_rotation_left_layoutProps" keywords="[Rect, rotation, left, layout]" description="Set rotation left, verify x, y, and width, height are the correct values">
			<setup>
				<ResetComponent target="mr" className="comps.MyRect" waitEvent="updateComplete" waitTarget="mr"/>
				<SetProperty propertyName="rotation" value="120" target="mr" waitEvent="updateComplete" waitTarget="mr"/>
				<SetProperty propertyName="left" value="35" target="mr" waitEvent="updateComplete" waitTarget="mr"/>
			</setup>
			<body>
				<AssertMethodValue method="value=application.mr.getLayoutBoundsWidth()" value="50.980762" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsHeight()" value="58.301270" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsX().toFixed(0)" value="35" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsY().toFixed(0)" value="-15.000000" />
				
			</body>
		</TestCase>

		<TestCase testID="Rect_rotation_bottom_layoutProps" keywords="[Rect, rotation, top, layout]" description="Set rotation bottom, verify x, y, and width, height are the correct values">
			<setup>
				<ResetComponent target="mr" className="comps.MyRect" waitEvent="updateComplete" waitTarget="mr"/>
				<SetProperty propertyName="rotation" value="120" target="mr" waitEvent="updateComplete" waitTarget="mr"/>
				<SetProperty propertyName="bottom" value="30" target="mr" waitEvent="updateComplete" waitTarget="mr"/>
			</setup>
			<body>
				<AssertMethodValue method="value=application.mr.getLayoutBoundsWidth()" value="50.980762" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsHeight()" value="58.301270" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsX()" value="-50.980762" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsY()" value="411.69873" />
				
			</body>
		</TestCase>

		<TestCase testID="Rect_rotation_right_layoutProps" keywords="[Rect, rotation, right, layout]" description="Set rotation right, verify x, y, and width, height are the correct values">
			<setup>
				<ResetComponent target="mr" className="comps.MyRect" waitEvent="updateComplete" waitTarget="mr"/>
				<SetProperty propertyName="rotation" value="120" target="mr" waitEvent="updateComplete" waitTarget="mr"/>
				<SetProperty propertyName="right" value="55" target="mr" waitEvent="updateComplete" waitTarget="mr"/>
			</setup>
			<body>
				<AssertMethodValue method="value=application.mr.getLayoutBoundsWidth()" value="50.980762" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsHeight()" value="58.301270" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsX()" value="394.019238" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsY().toFixed(0)" value="-15.000000" />
				
			</body>
		</TestCase>
		
		<TestCase testID="Rect_rotation_x_layoutProps" keywords="[Rect, rotation, right, layout]" description="Set rotation x, verify x, y, and width, height are the correct values">
			<setup>
				<ResetComponent target="mr" className="comps.MyRect" waitEvent="updateComplete" waitTarget="mr"/>
				<SetProperty propertyName="x" value="55" target="mr" />
				<SetProperty propertyName="rotation" value="120" target="mr" waitEvent="updateComplete" waitTarget="mr"/>
			</setup>
			<body>
				<AssertMethodValue method="value=application.mr.getLayoutBoundsX()" value="4.019238" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsY().toFixed(0)" value="-15.000000" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsWidth()" value="50.980762" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsHeight()" value="58.301270" />				
			</body>
		</TestCase>
		
		<TestCase testID="Rect_rotation_y_layoutProps" keywords="[Rect, rotation, y, layout]" description="Set rotation y, verify x, y, and width, height are the correct values">
			<setup>
				<ResetComponent target="mr" className="comps.MyRect" waitEvent="updateComplete" waitTarget="mr"/>
				<SetProperty propertyName="y" value="55" target="mr" />
				<SetProperty propertyName="rotation" value="120" target="mr" waitEvent="updateComplete" waitTarget="mr"/>
			</setup>
			<body>
				<AssertMethodValue method="value=application.mr.getLayoutBoundsWidth()" value="50.980762" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsHeight()" value="58.301270" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsX()" value="-50.980762" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsY().toFixed(0)" value="40" />

			</body>
		</TestCase>
	
		<TestCase testID="Rect_rotation_horizontalCenter_layoutProps" keywords="[Rect, rotation, y, layout]" description="Set rotation and horizontalCenter verify x, y, and width, height are the correct values">
			<setup>
				<ResetComponent target="mr" className="comps.MyRect" waitEvent="updateComplete" waitTarget="mr"/>
				<SetProperty propertyName="rotation" value="90" target="mr" waitEvent="updateComplete" waitTarget="mr"/>
				<SetProperty propertyName="horizontalCenter" value="10" target="mr" waitEvent="updateComplete" waitTarget="mr"/>
			</setup>
			<body>
				<AssertMethodValue method="value=application.mr.getLayoutBoundsX()" value="245" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsY()" value="0" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsX(false)" value="275" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsY(false)" value="0" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsWidth().toFixed(0)" value="30" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsHeight()" value="50" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsWidth(false)" value="50" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsHeight(false)" value="30" />
			</body>
		</TestCase>

		<TestCase testID="Rect_rotation_verticalCenter_layoutProps" keywords="[Rect, rotation, y, layout]" description="Set verticalCenter rotation, verify x, y, and width, height are the correct values">
			<setup>
				<ResetComponent target="mr" className="comps.MyRect" waitEvent="updateComplete" waitTarget="mr"/>
				<SetProperty propertyName="verticalCenter" value="3" target="mr" waitEvent="updateComplete" waitTarget="mr"/>
				<SetProperty propertyName="rotation" value="90" target="mr" waitEvent="updateComplete" waitTarget="mr"/>
			</setup>
			<body>
				<AssertMethodValue method="value=application.mr.getLayoutBoundsX()" value="-30" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsY()" value="228" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsX(false)" value="0" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsY(false)" value="228" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsWidth().toFixed(0)" value="30" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsHeight()" value="50" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsWidth(false)" value="50" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsHeight(false)" value="30" />
			</body>
		</TestCase>

		<TestCase testID="Rect_rotation_baseline_layoutProps" keywords="[Rect, rotation, y, layout]" description="Set baseline rotation, verify x, y, and width, height are the correct values">
			<setup>
				<ResetComponent target="mr" className="comps.MyRect" waitEvent="updateComplete" waitTarget="mr"/>
				<SetProperty propertyName="baseline" value="10" target="mr"/>
				<SetProperty propertyName="rotation" value="90" target="mr" waitEvent="updateComplete" waitTarget="mr"/>
			</setup>
			<body>
				<AssertMethodValue method="value=application.mr.getLayoutBoundsX()" value="-30" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsY()" value="0" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsX(false)" value="0" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsY(false)" value="0" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsWidth().toFixed(0)" value="30" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsHeight()" value="50" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsWidth(false)" value="50" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsHeight(false)" value="30" />
			</body>
		</TestCase>
		<TestCase testID="mxButton_rotation_top_layoutProps" keywords="[mxButton, rotation, top, layout]" description="Set rotation top, verify x, y, and width, height are the cormxButton values">
			<setup>
				<ResetComponent target="btn" className="mx.controls.Button" waitEvent="updateComplete" waitTarget="btn"/>
				<SetProperty propertyName="rotation" value="120" target="btn" waitEvent="updateComplete" waitTarget="btn"/>
				<SetProperty propertyName="top" value="25" target="btn" waitEvent="updateComplete" waitTarget="btn"/>
				
			</setup>
			<body>
				<AssertMethodValue method="value=application.btn.getLayoutBoundsWidth()" value="53.186584" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsHeight()" value="71.121948" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsX()" value="-53.186584" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsY()" value="25" />
				
			</body>
		</TestCase>

		<TestCase testID="mxButton_rotation60_left_layoutProps" keywords="[mxButton, rotation, left, layout]" description="Set rotation left, verify x, y, and width, height are the cormxButton values">
			<setup>
				<ResetComponent target="btn" className="mx.controls.Button" waitEvent="updateComplete" waitTarget="btn"/>
				<SetProperty propertyName="rotation" value="60" target="btn" waitEvent="updateComplete" waitTarget="btn"/>
				<SetProperty propertyName="left" value="35" target="btn" waitEvent="updateComplete" waitTarget="btn"/>
				
			</setup>
			<body>
				<AssertMethodValue method="value=application.btn.getLayoutBoundsX()" value="34.963416" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsY()" value="0" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsWidth()" value="53.186584" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsHeight()" value="71.121948" />
				
			</body>
		</TestCase>

		<TestCase testID="mxButton_rotation30_left_layoutProps" keywords="[mxButton, rotation, left, layout]" description="Set rotation left, verify x, y, and width, height are the mxButton values">
			<setup>
				<ResetComponent target="btn" className="mx.controls.Button" waitEvent="updateComplete" waitTarget="btn"/>
				<SetProperty propertyName="rotation" value="30" target="btn" waitEvent="updateComplete" waitTarget="btn"/>
				<SetProperty propertyName="left" value="35" target="btn" waitEvent="updateComplete" waitTarget="btn"/>
				
			</setup>
			<body>
				<AssertMethodValue method="value=application.btn.getLayoutBoundsX()" value="35" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsY()" value="0" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsWidth()" value="71.121948" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsHeight()" value="53.186584" />
				
			</body>
		</TestCase>

		<TestCase testID="mxButton_rotation_bottom_layoutProps" keywords="[mxButton, rotation, top, layout]" description="Set rotation bottom, verify x, y, and width, height are the mxButton values">
			<setup>
				<ResetComponent target="btn" className="mx.controls.Button" waitEvent="updateComplete" waitTarget="btn"/>
				<SetProperty propertyName="rotation" value="120" target="btn" waitEvent="updateComplete" waitTarget="btn"/>
				<SetProperty propertyName="bottom" value="30" target="btn" waitEvent="updateComplete" waitTarget="basicGrp"/>
				
			</setup>
			<body>
				<AssertMethodValue method="value=application.btn.getLayoutBoundsWidth()" value="53.186584" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsHeight()" value="71.121948" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsX()" value="-53.186584" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsY()" value="398.850000" />
				
			</body>
		</TestCase>

		<TestCase testID="mxButton_rotation_right_layoutProps" keywords="[mxButton, rotation, right, layout]" description="Set rotation right, verify x, y, and width, height are the cormxButton values">
			<setup>
				<ResetComponent target="btn" className="mx.controls.Button" waitEvent="updateComplete" waitTarget="btn"/>
				<SetProperty propertyName="rotation" value="120" target="btn" waitEvent="updateComplete" waitTarget="btn"/>
				<SetProperty propertyName="right" value="55" target="btn" waitEvent="updateComplete" waitTarget="basicGrp"/>
				
			</setup>
			<body>
				<AssertMethodValue method="value=application.btn.getLayoutBoundsWidth()" value="53.186584" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsHeight()" value="71.121948" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsX()" value="391.813416" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsY()" value="-10.500000" />
				
			</body>
		</TestCase>
		<TestCase testID="mxButton_rotation_x_layoutProps" keywords="[mxButton, rotation, x, layout]" description="Set rotation x, verify x, y, and width, height are the cormxButton values">
			<setup>
				<ResetComponent target="btn" className="mx.controls.Button" waitEvent="updateComplete" waitTarget="btn"/>
				<SetProperty propertyName="x" value="55" target="btn" />
				<SetProperty propertyName="rotation" value="120" target="btn" waitEvent="updateComplete" waitTarget="btn"/>
			</setup>
			<body>
				<AssertMethodValue method="value=application.btn.getLayoutBoundsWidth()" value="53.186584" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsHeight()" value="71.121948" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsX()" value="1.813416" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsY()" value="-10.500000" />
				
			</body>
		</TestCase>
		<TestCase testID="mxButton_rotation_y_layoutProps" keywords="[mxButton, rotation, y, layout]" description="Set rotation y, verify x, y, and width, height are the cormxButton values">
			<setup>
				<ResetComponent target="btn" className="mx.controls.Button" waitEvent="updateComplete" waitTarget="btn"/>
				<SetProperty propertyName="y" value="65" target="btn" />
				<SetProperty propertyName="rotation" value="120" target="btn" waitEvent="updateComplete" waitTarget="btn"/>
			</setup>
			<body>
				<AssertMethodValue method="value=application.btn.getLayoutBoundsWidth()" value="53.186584" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsHeight()" value="71.121948" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsX()" value="-53.186584" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsY()" value="54.5" />
				
			</body>
		</TestCase>
		
		<TestCase testID="mxButton_rotation_horizontalCenter_layoutProps" keywords="[mxButton, rotation, horizontalCenter, layout]" description="Set rotation horizontalCenter, verify x, y, and width, height are the cormxButton values">
			<setup>
				<ResetComponent target="btn" className="mx.controls.Button" waitEvent="updateComplete" waitTarget="btn"/>
				<SetProperty propertyName="horizontalCenter" value="65" target="btn" />
				<SetProperty propertyName="rotation" value="45" target="btn" waitEvent="updateComplete" waitTarget="btn"/>
			</setup>
			<body>
				<AssertMethodValue method="value=application.btn.getLayoutBoundsWidth()" value="64.346786" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsHeight()" value="64.346786" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsX()" value="282.950742" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsY()" value="0" />

			</body>
		</TestCase>
		
		<TestCase testID="mxButton_rotation_verticalCenter_layoutProps" keywords="[mxButton, rotation, verticalCenter, layout]" description="Set rotation verticalCenter, verify x, y, and width, height are the cormxButton values">
			<setup>
				<ResetComponent target="btn" className="mx.controls.Button" waitEvent="updateComplete" waitTarget="btn"/>
				<SetProperty propertyName="verticalCenter" value="65" target="btn" />
				<SetProperty propertyName="rotation" value="45" target="btn" waitEvent="updateComplete" waitTarget="btn"/>
			</setup>
			<body>
				<AssertMethodValue method="value=application.btn.getLayoutBoundsWidth()" value="64.346786" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsHeight()" value="64.346786" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsX()" value="-14.849258" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsY()" value="283" />

			</body>
		</TestCase>
		
		<TestCase testID="mxButton_rotation_baseline_layoutProps" keywords="[mxButton, rotation, baseline, layout]" description="Set rotation baseline, verify x, y, and width, height are the cormxButton values">
			<setup>
				<ResetComponent target="btn" className="mx.controls.Button" waitEvent="updateComplete" waitTarget="btn"/>
				<SetProperty propertyName="baseline" value="65" target="btn" />
				<SetProperty propertyName="rotation" value="120" target="btn" waitEvent="updateComplete" waitTarget="btn"/>
			</setup>
			<body>
				<AssertMethodValue method="value=application.btn.getLayoutBoundsWidth()" value="53.186584" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsHeight()" value="71.121948" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsX()" value="-53.186584" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsY()" value="54" />

			</body>
		</TestCase>
		
		<TestCase testID="Ellipse_transformX_rotation_top_layoutProps" keywords="[Ellipse, transformX, top, layout]" description="Set transformX top, verify x, y, and width, height are the correct values">
			<setup>
				<ResetComponent target="me" className="comps.MyEllipse" waitEvent="updateComplete" waitTarget="me"/>
				<SetProperty propertyName="transformX" value="30" target="me" waitEvent="updateComplete" waitTarget="me"/>
				<SetProperty propertyName="rotation" value="45" target="me" waitEvent="updateComplete" waitTarget="me"/>
				<SetProperty propertyName="top" value="25" target="me" waitEvent="updateComplete" waitTarget="me"/>
			</setup>
			<body>
				<AssertMethodValue method="value=application.me.getLayoutBoundsX()" value="-4.757664" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsY().toFixed(0)" value="25" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsWidth()" value="41.231056" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsHeight()" value="41.231056" />
			</body>
		</TestCase>

		<TestCase testID="Ellipse_transformX_rotation_left_layoutProps" keywords="[Ellipse, transformX, left, layout]" description="Set transformX left, verify x, y, and width, height are the correct values">
			<setup>
				<ResetComponent target="me" className="comps.MyEllipse" waitEvent="updateComplete" waitTarget="me"/>
				<SetProperty propertyName="transformX" value="30" target="me" waitEvent="updateComplete" waitTarget="me"/>
				<SetProperty propertyName="rotation" value="45" target="me" waitEvent="updateComplete" waitTarget="me"/>
				<SetProperty propertyName="left" value="35" target="me" waitEvent="updateComplete" waitTarget="me"/>
			</setup>
			<body>
				<AssertMethodValue method="value=application.me.getLayoutBoundsX()" value="35" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsY()" value="-13.544460" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsWidth()" value="41.231056" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsHeight()" value="41.231056" />
			</body>
		</TestCase>

		<TestCase testID="Ellipse_transformX_rotation_bottom_layoutProps" keywords="[Ellipse, transformX, top, layout]" description="Set transformX bottom, verify x, y, and width, height are the correct values">
			<setup>
				<ResetComponent target="me" className="comps.MyEllipse" waitEvent="updateComplete" waitTarget="me"/>
				<SetProperty propertyName="transformX" value="30" target="me" waitEvent="updateComplete" waitTarget="me"/>
				<SetProperty propertyName="rotation" value="45" target="me" waitEvent="updateComplete" waitTarget="me"/>
				<SetProperty propertyName="bottom" value="30" target="me" waitEvent="updateComplete" waitTarget="me"/>
			</setup>
			<body>
				<AssertMethodValue method="value=application.me.getLayoutBoundsX()" value="-4.757664" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsY()" value="428.768944" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsWidth()" value="41.231056" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsHeight()" value="41.231056" />

			</body>
		</TestCase>

		<TestCase testID="Ellipse_transformX_rotation_right_layoutProps" keywords="[Ellipse, transformX, right, layout]" description="Set transformX right, verify x, y, and width, height are the correct values">
			<setup>
				<ResetComponent target="me" className="comps.MyEllipse" waitEvent="updateComplete" waitTarget="me"/>
				<SetProperty propertyName="transformX" value="30" target="me" waitEvent="updateComplete" waitTarget="me"/>
				<SetProperty propertyName="rotation" value="45" target="me" waitEvent="updateComplete" waitTarget="me"/>
				<SetProperty propertyName="right" value="55" target="me" waitEvent="updateComplete" waitTarget="me"/>
			</setup>
			<body>
				<AssertMethodValue method="value=application.me.getLayoutBoundsX()" value="403.768944" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsY()" value="-13.544460" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsWidth()" value="41.231056" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsHeight()" value="41.231056" />

			</body>
		</TestCase>
		<TestCase testID="Ellipse_transformX_rotation_x_layoutProps" keywords="[Ellipse, transformX, x, layout]" description="Set x transformX, verify x, y, and width, height are the correct values">
			<setup>
				<ResetComponent target="me" className="comps.MyEllipse" waitEvent="updateComplete" waitTarget="me"/>
				<SetProperty propertyName="transformX" value="30" target="me" waitEvent="updateComplete" waitTarget="me"/>
				<SetProperty propertyName="rotation" value="45" target="me" waitEvent="updateComplete" waitTarget="me"/>
				<SetProperty propertyName="x" value="45" target="me" waitEvent="updateComplete" waitTarget="me"/>
			</setup>
			<body>
				<AssertMethodValue method="value=application.me.getLayoutBoundsX()" value="40.242336" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsY()" value="-13.544460" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsWidth()" value="41.231056" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsHeight()" value="41.231056" />

			</body>
		</TestCase>
		<TestCase testID="Ellipse_transformX_rotation_y_layoutProps" keywords="[Ellipse, transformX, y, layout]" description="Set y transformX, verify x, y, and width, height are the correct values">
			<setup>
				<ResetComponent target="me" className="comps.MyEllipse" waitEvent="updateComplete" waitTarget="me"/>
				<SetProperty propertyName="transformX" value="30" target="me" waitEvent="updateComplete" waitTarget="me"/>
				<SetProperty propertyName="rotation" value="45" target="me" waitEvent="updateComplete" waitTarget="me"/>
				<SetProperty propertyName="y" value="80" target="me" waitEvent="updateComplete" waitTarget="me"/>
			</setup>
			<body>
				<AssertMethodValue method="value=application.me.getLayoutBoundsX()" value="-4.757664" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsY()" value="66.455540" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsWidth()" value="41.231056" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsHeight()" value="41.231056" />

			</body>
		</TestCase>
		
		<TestCase testID="Ellipse_transformX_horizontalCenter_layoutProps" keywords="[Ellipse, transformX, horizontalCenter, layout]" description="Set horizontalCenter transformX, verify x, y, and width, height are the correct values">
			<setup>
				<ResetComponent target="me" className="comps.MyEllipse" waitEvent="updateComplete" waitTarget="me"/>
				<SetProperty propertyName="transformX" value="3" target="me" waitEvent="updateComplete" waitTarget="me"/>
				<SetProperty propertyName="horizontalCenter" value="10" target="me" waitEvent="updateComplete" waitTarget="me"/>
			</setup>
			<body>
				<AssertMethodValue method="value=application.me.getLayoutBoundsX()" value="235" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsY()" value="0" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsX(false)" value="235" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsY(false)" value="0" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsWidth()" value="50" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsHeight()" value="30" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsWidth(false)" value="50" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsHeight(false)" value="30" />
			</body>
		</TestCase>

		<TestCase testID="Ellipse_transformX_verticalCenter_layoutProps" keywords="[Ellipse, transformX, verticalCenter, layout]" description="Set verticalCenter transformX, verify x, y, and width, height are the correct values">
			<setup>
				<ResetComponent target="me" className="comps.MyEllipse" waitEvent="updateComplete" waitTarget="me"/>
				<SetProperty propertyName="verticalCenter" value="3" target="me" waitEvent="updateComplete" waitTarget="me"/>
				<SetProperty propertyName="transformX" value="20" target="me" waitEvent="updateComplete" waitTarget="me"/>
			</setup>
			<body>
				<AssertMethodValue method="value=application.me.getLayoutBoundsX()" value="0" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsY()" value="238" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsX(false)" value="0" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsY(false)" value="238" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsWidth()" value="50" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsHeight()" value="30" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsWidth(false)" value="50" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsHeight(false)" value="30" />
			</body>
		</TestCase>

		<TestCase testID="Ellipse_transformX_baseline_layoutProps" keywords="[Ellipse, transformX, baseline, layout]" description="Set baseline transformX, verify x, y, and width, height are the correct values">
			<setup>
				<ResetComponent target="me" className="comps.MyEllipse" waitEvent="updateComplete" waitTarget="me"/>
				<SetProperty propertyName="baseline" value="10" target="me"/>
				<SetProperty propertyName="transformX" value="3" target="me" waitEvent="updateComplete" waitTarget="me"/>
			</setup>
			<body>
				<AssertMethodValue method="value=application.me.getLayoutBoundsX()" value="0" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsY()" value="0" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsX(false)" value="0" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsY(false)" value="0" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsWidth()" value="50" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsHeight()" value="30" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsWidth(false)" value="50" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsHeight(false)" value="30" />
			</body>
		</TestCase>
		
		<TestCase testID="Rect_transformX_rotation_top_layoutProps" keywords="[Rect, transformX, top, layout]" description="Set transformX top, verify x, y, and width, height are the correct values">
			<setup>
				<ResetComponent target="mr" className="comps.MyRect" waitEvent="updateComplete" waitTarget="mr"/>
				<SetProperty propertyName="transformX" value="30" target="mr" waitEvent="updateComplete" waitTarget="mr"/>
				<SetProperty propertyName="rotation" value="45" target="mr" waitEvent="updateComplete" waitTarget="mr"/>
				<SetProperty propertyName="top" value="25" target="mr" waitEvent="updateComplete" waitTarget="mr"/>
			</setup>
			<body>
				<AssertMethodValue method="value=application.mr.getLayoutBoundsX()" value="-12.426407" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsY().toFixed(0)" value="25" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsWidth()" value="56.568542" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsHeight()" value="56.568542" />

			</body>
		</TestCase>

		<TestCase testID="Rect_transformX_rotation_left_layoutProps" keywords="[Rect, transformX, left, layout]" description="Set transformX left, verify x, y, and width, height are the correct values">
			<setup>
				<ResetComponent target="mr" className="comps.MyRect" waitEvent="updateComplete" waitTarget="mr"/>
				<SetProperty propertyName="transformX" value="30" target="mr" waitEvent="updateComplete" waitTarget="mr"/>
				<SetProperty propertyName="rotation" value="45" target="mr" waitEvent="updateComplete" waitTarget="mr"/>
				<SetProperty propertyName="left" value="35" target="mr" waitEvent="updateComplete" waitTarget="mr"/>
			</setup>
			<body>
				<AssertMethodValue method="value=application.mr.getLayoutBoundsX()" value="35" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsY()" value="-21.213203" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsWidth()" value="56.568542" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsHeight()" value="56.568542" />

			</body>
		</TestCase>

		<TestCase testID="Rect_transformX_rotation_bottom_layoutProps" keywords="[Rect, transformX, top, layout]" description="Set transformX bottom, verify x, y, and width, height are the correct values">
			<setup>
				<ResetComponent target="mr" className="comps.MyRect" waitEvent="updateComplete" waitTarget="mr"/>
				<SetProperty propertyName="transformX" value="30" target="mr" waitEvent="updateComplete" waitTarget="mr"/>
				<SetProperty propertyName="rotation" value="45" target="mr" waitEvent="updateComplete" waitTarget="mr"/>
				<SetProperty propertyName="bottom" value="30" target="mr" waitEvent="updateComplete" waitTarget="mr"/>
			</setup>
			<body>
				<AssertMethodValue method="value=application.mr.getLayoutBoundsX()" value="-12.426407" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsY()" value="413.431458" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsWidth()" value="56.568542" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsHeight()" value="56.568542" />

			</body>
		</TestCase>

		<TestCase testID="Rect_transformX_rotation_right_layoutProps" keywords="[Rect, transformX, right, layout]" description="Set transformX right, verify x, y, and width, height are the correct values">
			<setup>
				<ResetComponent target="mr" className="comps.MyRect" waitEvent="updateComplete" waitTarget="mr"/>
				<SetProperty propertyName="transformX" value="30" target="mr" waitEvent="updateComplete" waitTarget="mr"/>
				<SetProperty propertyName="rotation" value="45" target="mr" waitEvent="updateComplete" waitTarget="mr"/>
				<SetProperty propertyName="right" value="55" target="mr" waitEvent="updateComplete" waitTarget="mr"/>
			</setup>
			<body>
				<AssertMethodValue method="value=application.mr.getLayoutBoundsX()" value="388.431458" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsY()" value="-21.213203" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsWidth()" value="56.568542" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsHeight()" value="56.568542" />

			</body>
		</TestCase>

		<TestCase testID="Rect_transformX_rotation_x_layoutProps" keywords="[Rect, transformX, x, layout]" description="Set transformX x, verify x, y, and width, height are the correct values">
			<setup>
				<ResetComponent target="mr" className="comps.MyRect" waitEvent="updateComplete" waitTarget="mr"/>
				<SetProperty propertyName="transformX" value="30" target="mr" waitEvent="updateComplete" waitTarget="mr"/>
				<SetProperty propertyName="rotation" value="45" target="mr" waitEvent="updateComplete" waitTarget="mr"/>
				<SetProperty propertyName="x" value="45" target="mr" waitEvent="updateComplete" waitTarget="mr"/>
			</setup>
			<body>
				<AssertMethodValue method="value=application.mr.getLayoutBoundsX()" value="32.573593" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsY()" value="-21.213203" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsWidth()" value="56.568542" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsHeight()" value="56.568542" />

			</body>
		</TestCase>

		<TestCase testID="Rect_transformX_rotation_y_layoutProps" keywords="[Rect, transformX, y, layout]" description="Set transformX y, verify x, y, and width, height are the correct values">
			<setup>
				<ResetComponent target="mr" className="comps.MyRect" waitEvent="updateComplete" waitTarget="mr"/>
				<SetProperty propertyName="transformX" value="30" target="mr" waitEvent="updateComplete" waitTarget="mr"/>
				<SetProperty propertyName="rotation" value="45" target="mr" waitEvent="updateComplete" waitTarget="mr"/>
				<SetProperty propertyName="y" value="75" target="mr" waitEvent="updateComplete" waitTarget="mr"/>
			</setup>
			<body>
				<AssertMethodValue method="value=application.mr.getLayoutBoundsX()" value="-12.426407" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsY()" value="53.786797" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsWidth()" value="56.568542" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsHeight()" value="56.568542" />

			</body>
		</TestCase>

		<TestCase testID="mxButton_transformX_rotation_top_layoutProps" keywords="[mxButton, transformX, top, layout]" description="Set transformX top, verify x, y, and width, height are the cormxButton values">
			<setup>
				<ResetComponent target="btn" className="mx.controls.Button" waitEvent="updateComplete" waitTarget="btn"/>
				<SetProperty propertyName="transformX" value="30" target="btn" waitEvent="updateComplete" waitTarget="btn"/>
				<SetProperty propertyName="rotation" value="45" target="btn" waitEvent="updateComplete" waitTarget="btn"/>
				<SetProperty propertyName="top" value="25" target="btn" waitEvent="updateComplete" waitTarget="btn"/>
			</setup>
			<body>
				<AssertMethodValue method="value=application.btn.getLayoutBoundsX()" value="-6.062446" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsY().toFixed(0)" value="25" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsWidth()" value="64.346717" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsHeight()" value="64.346717" />

			</body>
		</TestCase>

		<TestCase testID="mxButton_transformX_rotation_left_layoutProps" keywords="[mxButton, transformX, left, layout]" description="Set transformX left, verify x, y, and width, height are the cormxButton values">
			<setup>
				<ResetComponent target="btn" className="mx.controls.Button" waitEvent="updateComplete" waitTarget="btn"/>
				<SetProperty propertyName="transformX" value="30" target="btn" waitEvent="updateComplete" waitTarget="btn"/>
				<SetProperty propertyName="rotation" value="45" target="btn" waitEvent="updateComplete" waitTarget="btn"/>
				<SetProperty propertyName="left" value="35" target="btn" waitEvent="updateComplete" waitTarget="btn"/>
			</setup>
			<body>
				<AssertMethodValue method="value=application.btn.getLayoutBoundsX().toFixed(0)" value="35" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsY()" value="-21.213203" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsWidth()" value="64.346717" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsHeight()" value="64.346717" />

			</body>
		</TestCase>

		<TestCase testID="mxButton_transformX_rotation_bottom_layoutProps" keywords="[mxButton, transformX, top, layout]" description="Set transformX bottom, verify x, y, and width, height are the cormxButton values">
			<setup>
				<ResetComponent target="btn" className="mx.controls.Button" waitEvent="updateComplete" waitTarget="btn"/>
				<SetProperty propertyName="transformX" value="30" target="btn" waitEvent="updateComplete" waitTarget="btn"/>
				<SetProperty propertyName="rotation" value="45" target="btn" waitEvent="updateComplete" waitTarget="btn"/>
				<SetProperty propertyName="bottom" value="30" target="btn" waitEvent="updateComplete" waitTarget="basicGrp"/>
			</setup>
			<body>
				<AssertMethodValue method="value=application.btn.getLayoutBoundsX()" value="-6.062446" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsY()" value="405.653283" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsWidth()" value="64.346717" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsHeight()" value="64.346717" />

			</body>
		</TestCase>

		<TestCase testID="mxButton_transformX_rotation_right_layoutProps" keywords="[mxButton, transformX, right, layout]" description="Set transformX right, verify x, y, and width, height are the cormxButton values">
			<setup>
				<ResetComponent target="btn" className="mx.controls.Button" waitEvent="updateComplete" waitTarget="btn"/>
				<SetProperty propertyName="transformX" value="30" target="btn" waitEvent="updateComplete" waitTarget="btn"/>
				<SetProperty propertyName="rotation" value="45" target="btn" waitEvent="updateComplete" waitTarget="btn"/>
				<SetProperty propertyName="right" value="55" target="btn" waitEvent="updateComplete" waitTarget="basicGrp"/>
			</setup>
			<body>
				<AssertMethodValue method="value=application.btn.getLayoutBoundsX()" value="380.653283" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsY()" value="-21.213203" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsWidth()" value="64.346717" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsHeight()" value="64.346717" />

			</body>
		</TestCase>

		<TestCase testID="mxButton_transformX_rotation_x_layoutProps" keywords="[mxButton, transformX, x, layout]" description="Set transformX x, verify x, y, and width, height are the cormxButton values">
			<setup>
				<ResetComponent target="btn" className="mx.controls.Button" waitEvent="updateComplete" waitTarget="btn"/>
				<SetProperty propertyName="x" value="65" target="btn"/>
				<SetProperty propertyName="rotation" value="45" target="btn" waitEvent="updateComplete" waitTarget="btn"/>
				<SetProperty propertyName="transformX" value="30" target="btn" waitEvent="updateComplete" waitTarget="btn"/>
			</setup>
			<body>
				<AssertMethodValue method="value=application.btn.getLayoutBoundsX()" value="58.937554" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsY()" value="-21.213203" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsWidth()" value="64.346717" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsHeight()" value="64.346717" />

			</body>
		</TestCase>

		<TestCase testID="mxButton_transformX_rotation_y_layoutProps" keywords="[mxButton, transformX, y, layout]" description="Set transformX y, verify x, y, and width, height are the cormxButton values">
			<setup>
				<ResetComponent target="btn" className="mx.controls.Button" waitEvent="updateComplete" waitTarget="btn"/>
				<SetProperty propertyName="y" value="60" target="btn" />
				<SetProperty propertyName="rotation" value="45" target="btn" waitEvent="updateComplete" waitTarget="btn"/>
				<SetProperty propertyName="transformX" value="30" target="btn" waitEvent="updateComplete" waitTarget="btn"/>
			</setup>
			<body>
				<AssertMethodValue method="value=application.btn.getLayoutBoundsX()" value="-6.062446" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsY()" value="38.786797" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsWidth()" value="64.346717" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsHeight()" value="64.346717" />

			</body>
		</TestCase>
		
		<TestCase testID="mxButton_transformX_rotation_horizontalCenter_layoutProps" keywords="[mxButton, transformX, horizontalCenter, layout]" description="Set transformX horizontalCenter, verify x, y, and width, height are the cormxButton values">
			<setup>
				<ResetComponent target="btn" className="mx.controls.Button" waitEvent="updateComplete" waitTarget="btn"/>
				<SetProperty propertyName="horizontalCenter" value="60" target="btn" />
				<SetProperty propertyName="rotation" value="45" target="btn" waitEvent="updateComplete" waitTarget="btn"/>
				<SetProperty propertyName="transformX" value="30" target="btn" waitEvent="updateComplete" waitTarget="btn"/>
			</setup>
			<body>
				<AssertMethodValue method="value=application.btn.getLayoutBoundsX()" value="278" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsY()" value="-21.213203" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsWidth()" value="64.346717" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsHeight()" value="64.346717" />

			</body>
		</TestCase>
		<TestCase testID="mxButton_transformX_rotation_verticalCenter_layoutProps" keywords="[mxButton, transformX, verticalCenter, layout]" description="Set transformX verticalCenter, verify x, y, and width, height are the cormxButton values">
			<setup>
				<ResetComponent target="btn" className="mx.controls.Button" waitEvent="updateComplete" waitTarget="btn"/>
				<SetProperty propertyName="verticalCenter" value="60" target="btn" />
				<SetProperty propertyName="rotation" value="45" target="btn" waitEvent="updateComplete" waitTarget="btn"/>
				<SetProperty propertyName="transformX" value="30" target="btn" waitEvent="updateComplete" waitTarget="btn"/>
			</setup>
			<body>
				<AssertMethodValue method="value=application.btn.getLayoutBoundsX()" value="-6.062446" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsY()" value="278" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsWidth()" value="64.346717" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsHeight()" value="64.346717" />

			</body>
		</TestCase>
		
		<TestCase testID="mxButton_transformX_rotation_baseline_layoutProps" keywords="[mxButton, transformX, baseline, layout]" description="Set transformX baseline, verify x, y, and width, height are the cormxButton values">
			<setup>
				<ResetComponent target="btn" className="mx.controls.Button" waitEvent="updateComplete" waitTarget="btn"/>
				<SetProperty propertyName="baseline" value="60" target="btn" />
				<SetProperty propertyName="rotation" value="45" target="btn" waitEvent="updateComplete" waitTarget="btn"/>
				<SetProperty propertyName="transformX" value="30" target="btn" waitEvent="updateComplete" waitTarget="btn"/>
			</setup>
			<body>
				<AssertMethodValue method="value=application.btn.getLayoutBoundsX()" value="-6.062446" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsY()" value="49" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsWidth()" value="64.346717" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsHeight()" value="64.346717" />

			</body>
		</TestCase>
		
		<TestCase testID="Ellipse_transformY_rotation_top_layoutProps" keywords="[Ellipse, transformY, top, layout]" description="Set transformY top, verify x, y, and width, height are the correct values">
			<setup>
				<ResetComponent target="me" className="comps.MyEllipse" waitEvent="updateComplete" waitTarget="me"/>
				<SetProperty propertyName="transformY" value="30" target="me" waitEvent="updateComplete" waitTarget="me"/>
				<SetProperty propertyName="rotation" value="45" target="me" waitEvent="updateComplete" waitTarget="me"/>
				<SetProperty propertyName="top" value="25" target="me" waitEvent="updateComplete" waitTarget="me"/>
			</setup>
			<body>
				<AssertMethodValue method="value=application.me.getLayoutBoundsX()" value="7.668743" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsY().toFixed(0)" value="25" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsWidth()" value="41.231056" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsHeight()" value="41.231056" />
			</body>
		</TestCase>

		<TestCase testID="Ellipse_transformY_rotation_left_layoutProps" keywords="[Ellipse, transformY, left, layout]" description="Set transformY left, verify x, y, and width, height are the correct values">
			<setup>
				<ResetComponent target="me" className="comps.MyEllipse" waitEvent="updateComplete" waitTarget="me"/>
				<SetProperty propertyName="transformY" value="30" target="me" waitEvent="updateComplete" waitTarget="me"/>
				<SetProperty propertyName="rotation" value="45" target="me" waitEvent="updateComplete" waitTarget="me"/>
				<SetProperty propertyName="left" value="35" target="me" waitEvent="updateComplete" waitTarget="me"/>
			</setup>
			<body>
				<AssertMethodValue method="value=application.me.getLayoutBoundsX()" value="35" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsY()" value="16.455540" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsWidth()" value="41.231056" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsHeight()" value="41.231056" />
			</body>
		</TestCase>

		<TestCase testID="Ellipse_transformY_rotation_bottom_layoutProps" keywords="[Ellipse, transformY, top, layout]" description="Set transformY bottom, verify x, y, and width, height are the correct values">
			<setup>
				<ResetComponent target="me" className="comps.MyEllipse" waitEvent="updateComplete" waitTarget="me"/>
				<SetProperty propertyName="transformY" value="30" target="me" waitEvent="updateComplete" waitTarget="me"/>
				<SetProperty propertyName="rotation" value="45" target="me" waitEvent="updateComplete" waitTarget="me"/>
				<SetProperty propertyName="bottom" value="30" target="me" waitEvent="updateComplete" waitTarget="me"/>
			</setup>
			<body>
				<AssertMethodValue method="value=application.me.getLayoutBoundsX()" value="7.668743" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsY()" value="428.768944" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsWidth()" value="41.231056" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsHeight()" value="41.231056" />

			</body>
		</TestCase>

		<TestCase testID="Ellipse_transformY_rotation_right_layoutProps" keywords="[Ellipse, transformY, right, layout]" description="Set transformY right, verify x, y, and width, height are the correct values">
			<setup>
				<ResetComponent target="me" className="comps.MyEllipse" waitEvent="updateComplete" waitTarget="me"/>
				<SetProperty propertyName="transformY" value="30" target="me" waitEvent="updateComplete" waitTarget="me"/>
				<SetProperty propertyName="rotation" value="45" target="me" waitEvent="updateComplete" waitTarget="me"/>
				<SetProperty propertyName="right" value="55" target="me" waitEvent="updateComplete" waitTarget="me"/>
			</setup>
			<body>
				<AssertMethodValue method="value=application.me.getLayoutBoundsX()" value="403.768944" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsY()" value="16.455540" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsWidth()" value="41.231056" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsHeight()" value="41.231056" />

			</body>
		</TestCase>
		<TestCase testID="Ellipse_transformY_rotation_x_layoutProps" keywords="[Ellipse, transformY, x, layout]" description="Set x transformY, verify x, y, and width, height are the correct values">
			<setup>
				<ResetComponent target="me" className="comps.MyEllipse" waitEvent="updateComplete" waitTarget="me"/>
				<SetProperty propertyName="transformY" value="30" target="me" waitEvent="updateComplete" waitTarget="me"/>
				<SetProperty propertyName="rotation" value="45" target="me" waitEvent="updateComplete" waitTarget="me"/>
				<SetProperty propertyName="x" value="45" target="me" waitEvent="updateComplete" waitTarget="me"/>
			</setup>
			<body>
				<AssertMethodValue method="value=application.me.getLayoutBoundsX()" value="52.668743" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsY()" value="16.455540" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsWidth()" value="41.231056" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsHeight()" value="41.231056" />

			</body>
		</TestCase>
		<TestCase testID="Ellipse_transformY_rotation_y_layoutProps" keywords="[Ellipse, transformY, y, layout]" description="Set y transformY, verify x, y, and width, height are the correct values">
			<setup>
				<ResetComponent target="me" className="comps.MyEllipse" waitEvent="updateComplete" waitTarget="me"/>
				<SetProperty propertyName="transformY" value="30" target="me" waitEvent="updateComplete" waitTarget="me"/>
				<SetProperty propertyName="rotation" value="45" target="me" waitEvent="updateComplete" waitTarget="me"/>
				<SetProperty propertyName="y" value="80" target="me" waitEvent="updateComplete" waitTarget="me"/>
			</setup>
			<body>
				<AssertMethodValue method="value=application.me.getLayoutBoundsX()" value="7.668743" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsY()" value="96.455540" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsWidth()" value="41.231056" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsHeight()" value="41.231056" />

			</body>
		</TestCase>
		
		<TestCase testID="Ellipse_transformY_horizontalCenter_layoutProps" keywords="[Ellipse, transformY, horizontalCenter, layout]" description="Set y transformY, verify x, y, and width, height are the correct values">
			<setup>
				<ResetComponent target="me" className="comps.MyEllipse" waitEvent="updateComplete" waitTarget="me"/>
				<SetProperty propertyName="transformY" value="3" target="me" waitEvent="updateComplete" waitTarget="me"/>
				<SetProperty propertyName="horizontalCenter" value="10" target="me" waitEvent="updateComplete" waitTarget="me"/>
			</setup>
			<body>
				<AssertMethodValue method="value=application.me.getLayoutBoundsX()" value="235" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsY()" value="0" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsX(false)" value="235" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsY(false)" value="0" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsWidth()" value="50" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsHeight()" value="30" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsWidth(false)" value="50" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsHeight(false)" value="30" />
			</body>
		</TestCase>

		<TestCase testID="Ellipse_transformY_verticalCenter_layoutProps" keywords="[Ellipse, transformY, verticalCenter, layout]" description="Set y transformY, verify x, y, and width, height are the correct values">
			<setup>
				<ResetComponent target="me" className="comps.MyEllipse" waitEvent="updateComplete" waitTarget="me"/>
				<SetProperty propertyName="verticalCenter" value="3" target="me" waitEvent="updateComplete" waitTarget="me"/>
				<SetProperty propertyName="transformY" value="80" target="me" waitEvent="updateComplete" waitTarget="me"/>
			</setup>
			<body>
				<AssertMethodValue method="value=application.me.getLayoutBoundsX()" value="0" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsY()" value="238" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsX(false)" value="0" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsY(false)" value="238" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsWidth()" value="50" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsHeight()" value="30" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsWidth(false)" value="50" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsHeight(false)" value="30" />
			</body>
		</TestCase>

		<TestCase testID="Ellipse_transformY_baseline_layoutProps" keywords="[Ellipse, transformY, baseline, layout]" description="Set y transformY, verify x, y, and width, height are the correct values">
			<setup>
				<ResetComponent target="me" className="comps.MyEllipse" waitEvent="updateComplete" waitTarget="me"/>
				<SetProperty propertyName="baseline" value="10" target="me"/>
				<SetProperty propertyName="transformY" value="3" target="me" waitEvent="updateComplete" waitTarget="me"/>
			</setup>
			<body>
				<AssertMethodValue method="value=application.me.getLayoutBoundsX()" value="0" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsY()" value="0" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsX(false)" value="0" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsY(false)" value="0" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsWidth()" value="50" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsHeight()" value="30" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsWidth(false)" value="50" />
				<AssertMethodValue method="value=application.me.getLayoutBoundsHeight(false)" value="30" />
			</body>
		</TestCase>
		
		<TestCase testID="Rect_transformY_rotation_top_layoutProps" keywords="[Rect, transformY, top, layout]" description="Set transformY top, verify x, y, and width, height are the correct values">
			<setup>
				<ResetComponent target="mr" className="comps.MyRect" waitEvent="updateComplete" waitTarget="mr"/>
				<SetProperty propertyName="transformY" value="30" target="mr" waitEvent="updateComplete" waitTarget="mr"/>
				<SetProperty propertyName="rotation" value="45" target="mr" waitEvent="updateComplete" waitTarget="mr"/>
				<SetProperty propertyName="top" value="25" target="mr" waitEvent="updateComplete" waitTarget="mr"/>
			</setup>
			<body>
				<AssertMethodValue method="value=application.mr.getLayoutBoundsX()" value="0" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsY().toFixed(0)" value="25" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsWidth()" value="56.568542" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsHeight()" value="56.568542" />

			</body>
		</TestCase>

		<TestCase testID="Rect_transformY_rotation_left_layoutProps" keywords="[Rect, transformY, left, layout]" description="Set transformY left, verify x, y, and width, height are the correct values">
			<setup>
				<ResetComponent target="mr" className="comps.MyRect" waitEvent="updateComplete" waitTarget="mr"/>
				<SetProperty propertyName="transformY" value="30" target="mr" waitEvent="updateComplete" waitTarget="mr"/>
				<SetProperty propertyName="rotation" value="45" target="mr" waitEvent="updateComplete" waitTarget="mr"/>
				<SetProperty propertyName="left" value="35" target="mr" waitEvent="updateComplete" waitTarget="mr"/>
			</setup>
			<body>
				<AssertMethodValue method="value=application.mr.getLayoutBoundsX()" value="35" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsY()" value="8.786797" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsWidth()" value="56.568542" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsHeight()" value="56.568542" />

			</body>
		</TestCase>

		<TestCase testID="Rect_transformY_rotation_bottom_layoutProps" keywords="[Rect, transformY, top, layout]" description="Set transformY bottom, verify x, y, and width, height are the correct values">
			<setup>
				<ResetComponent target="mr" className="comps.MyRect" waitEvent="updateComplete" waitTarget="mr"/>
				<SetProperty propertyName="transformY" value="30" target="mr" waitEvent="updateComplete" waitTarget="mr"/>
				<SetProperty propertyName="rotation" value="45" target="mr" waitEvent="updateComplete" waitTarget="mr"/>
				<SetProperty propertyName="bottom" value="30" target="mr" waitEvent="updateComplete" waitTarget="mr"/>
			</setup>
			<body>
				<AssertMethodValue method="value=application.mr.getLayoutBoundsX()" value="0" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsY()" value="413.431458" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsWidth()" value="56.568542" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsHeight()" value="56.568542" />

			</body>
		</TestCase>

		<TestCase testID="Rect_transformY_rotation_right_layoutProps" keywords="[Rect, transformY, right, layout]" description="Set transformY right, verify x, y, and width, height are the correct values">
			<setup>
				<ResetComponent target="mr" className="comps.MyRect" waitEvent="updateComplete" waitTarget="mr"/>
				<SetProperty propertyName="transformY" value="30" target="mr" waitEvent="updateComplete" waitTarget="mr"/>
				<SetProperty propertyName="rotation" value="45" target="mr" waitEvent="updateComplete" waitTarget="mr"/>
				<SetProperty propertyName="right" value="55" target="mr" waitEvent="updateComplete" waitTarget="mr"/>
			</setup>
			<body>
				<AssertMethodValue method="value=application.mr.getLayoutBoundsX()" value="388.431458" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsY()" value="8.786797" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsWidth()" value="56.568542" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsHeight()" value="56.568542" />

			</body>
		</TestCase>

		<TestCase testID="Rect_transformY_rotation_x_layoutProps" keywords="[Rect, transformY, x, layout]" description="Set transformY x, verify x, y, and width, height are the correct values">
			<setup>
				<ResetComponent target="mr" className="comps.MyRect" waitEvent="updateComplete" waitTarget="mr"/>
				<SetProperty propertyName="transformY" value="30" target="mr" waitEvent="updateComplete" waitTarget="mr"/>
				<SetProperty propertyName="rotation" value="45" target="mr" waitEvent="updateComplete" waitTarget="mr"/>
				<SetProperty propertyName="x" value="45" target="mr" waitEvent="updateComplete" waitTarget="mr"/>
			</setup>
			<body>
				<AssertMethodValue method="value=application.mr.getLayoutBoundsX()" value="45" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsY()" value="8.786797" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsWidth()" value="56.568542" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsHeight()" value="56.568542" />

			</body>
		</TestCase>

		<TestCase testID="Rect_transformY_rotation_y_layoutProps" keywords="[Rect, transformY, y, layout]" description="Set transformY y, verify x, y, and width, height are the correct values">
			<setup>
				<ResetComponent target="mr" className="comps.MyRect" waitEvent="updateComplete" waitTarget="mr"/>
				<SetProperty propertyName="transformY" value="30" target="mr" waitEvent="updateComplete" waitTarget="mr"/>
				<SetProperty propertyName="rotation" value="45" target="mr" waitEvent="updateComplete" waitTarget="mr"/>
				<SetProperty propertyName="y" value="75" target="mr" waitEvent="updateComplete" waitTarget="mr"/>
			</setup>
			<body>
				<AssertMethodValue method="value=application.mr.getLayoutBoundsX()" value="0" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsY()" value="83.786797" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsWidth()" value="56.568542" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsHeight()" value="56.568542" />

			</body>
		</TestCase>

		<TestCase testID="mxButton_transformY_rotation_top_layoutProps" keywords="[mxButton, transformY, top, layout]" description="Set transformY top, verify x, y, and width, height are the cormxButton values">
			<setup>
				<ResetComponent target="btn" className="mx.controls.Button" waitEvent="updateComplete" waitTarget="btn"/>
				<SetProperty propertyName="transformY" value="30" target="btn" waitEvent="updateComplete" waitTarget="btn"/>
				<SetProperty propertyName="rotation" value="45" target="btn" waitEvent="updateComplete" waitTarget="btn"/>
				<SetProperty propertyName="top" value="25" target="btn" waitEvent="updateComplete" waitTarget="btn"/>
			</setup>
			<body>
				<AssertMethodValue method="value=application.btn.getLayoutBoundsX()" value="6.363961" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsY().toFixed(0)" value="25" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsWidth()" value="64.346717" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsHeight()" value="64.346717" />

			</body>
		</TestCase>

		<TestCase testID="mxButton_transformY_rotation_left_layoutProps" keywords="[mxButton, transformY, left, layout]" description="Set transformY left, verify x, y, and width, height are the cormxButton values">
			<setup>
				<ResetComponent target="btn" className="mx.controls.Button" waitEvent="updateComplete" waitTarget="btn"/>
				<SetProperty propertyName="transformY" value="30" target="btn" waitEvent="updateComplete" waitTarget="btn"/>
				<SetProperty propertyName="rotation" value="45" target="btn" waitEvent="updateComplete" waitTarget="btn"/>
				<SetProperty propertyName="left" value="35" target="btn" waitEvent="updateComplete" waitTarget="btn"/>
			</setup>
			<body>
				<AssertMethodValue method="value=application.btn.getLayoutBoundsX()" value="35" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsY()" value="8.786797" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsWidth()" value="64.346717" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsHeight()" value="64.346717" />

			</body>
		</TestCase>

		<TestCase testID="mxButton_transformY_rotation_bottom_layoutProps" keywords="[mxButton, transformY, top, layout]" description="Set transformY bottom, verify x, y, and width, height are the cormxButton values">
			<setup>
				<ResetComponent target="btn" className="mx.controls.Button" waitEvent="updateComplete" waitTarget="btn"/>
				<SetProperty propertyName="transformY" value="30" target="btn" waitEvent="updateComplete" waitTarget="btn"/>
				<SetProperty propertyName="rotation" value="45" target="btn" waitEvent="updateComplete" waitTarget="btn"/>
				<SetProperty propertyName="bottom" value="30" target="btn" waitEvent="updateComplete" waitTarget="basicGrp"/>
			</setup>
			<body>
				<AssertMethodValue method="value=application.btn.getLayoutBoundsX()" value="6.363961" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsY()" value="405.653283" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsWidth()" value="64.346717" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsHeight()" value="64.346717" />

			</body>
		</TestCase>

		<TestCase testID="mxButton_transformY_rotation_right_layoutProps" keywords="[mxButton, transformY, right, layout]" description="Set transformY right, verify x, y, and width, height are the cormxButton values">
			<setup>
				<ResetComponent target="btn" className="mx.controls.Button" waitEvent="updateComplete" waitTarget="btn"/>
				<SetProperty propertyName="transformY" value="30" target="btn" waitEvent="updateComplete" waitTarget="btn"/>
				<SetProperty propertyName="rotation" value="45" target="btn" waitEvent="updateComplete" waitTarget="btn"/>
				<SetProperty propertyName="right" value="55" target="btn" waitEvent="updateComplete" waitTarget="basicGrp"/>
			</setup>
			<body>
				<AssertMethodValue method="value=application.btn.getLayoutBoundsX()" value="380.653283" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsY()" value="8.786797" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsWidth()" value="64.346717" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsHeight()" value="64.346717" />

			</body>
		</TestCase>

		<TestCase testID="mxButton_transformY_rotation_x_layoutProps" keywords="[mxButton, transformY, x, layout]" description="Set transformY x, verify x, y, and width, height are the cormxButton values">
			<setup>
				<ResetComponent target="btn" className="mx.controls.Button" waitEvent="updateComplete" waitTarget="btn"/>
				<SetProperty propertyName="x" value="65" target="btn"/>
				<SetProperty propertyName="rotation" value="45" target="btn" waitEvent="updateComplete" waitTarget="btn"/>
				<SetProperty propertyName="transformY" value="30" target="btn" waitEvent="updateComplete" waitTarget="btn"/>
			</setup>
			<body>
				<AssertMethodValue method="value=application.btn.getLayoutBoundsX()" value="71.363961" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsY()" value="8.786797" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsWidth()" value="64.346717" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsHeight()" value="64.346717" />

			</body>
		</TestCase>

		<TestCase testID="mxButton_transformY_rotation_y_layoutProps" keywords="[mxButton, transformY, y, layout]" description="Set transformY y, verify x, y, and width, height are the cormxButton values">
			<setup>
				<ResetComponent target="btn" className="mx.controls.Button" waitEvent="updateComplete" waitTarget="btn"/>
				<SetProperty propertyName="y" value="60" target="btn" />
				<SetProperty propertyName="rotation" value="45" target="btn" waitEvent="updateComplete" waitTarget="btn"/>
				<SetProperty propertyName="transformY" value="30" target="btn" waitEvent="updateComplete" waitTarget="btn"/>
			</setup>
			<body>
				<AssertMethodValue method="value=application.btn.getLayoutBoundsX()" value="6.363961" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsY()" value="68.786797" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsWidth()" value="64.346717" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsHeight()" value="64.346717" />

			</body>
		</TestCase>
		
		<TestCase testID="mxButton_transformY_rotation_horizontalCenter_layoutProps" keywords="[mxButton, transformY, horizontalCenter, layout]" description="Set transformY horizontalCenter, verify x, y, and width, height are the cormxButton values">
			<setup>
				<ResetComponent target="btn" className="mx.controls.Button" waitEvent="updateComplete" waitTarget="btn"/>
				<SetProperty propertyName="horizontalCenter" value="5" target="btn" />
				<SetProperty propertyName="rotation" value="45" target="btn" waitEvent="updateComplete" waitTarget="btn"/>
				<SetProperty propertyName="transformY" value="30" target="btn" waitEvent="updateComplete" waitTarget="btn"/>
			</setup>
			<body>
				<AssertMethodValue method="value=application.btn.getLayoutBoundsX()" value="223" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsY()" value="8.786797" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsWidth()" value="64.346717" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsHeight()" value="64.346717" />

			</body>
		</TestCase>
		
		<TestCase testID="mxButton_transformY_rotation_verticalCenter_layoutProps" keywords="[mxButton, transformY, verticalCenter, layout]" description="Set transformY verticalCenter, verify x, y, and width, height are the cormxButton values">
			<setup>
				<ResetComponent target="btn" className="mx.controls.Button" waitEvent="updateComplete" waitTarget="btn"/>
				<SetProperty propertyName="verticalCenter" value="6" target="btn" />
				<SetProperty propertyName="rotation" value="45" target="btn" waitEvent="updateComplete" waitTarget="btn"/>
				<SetProperty propertyName="transformY" value="30" target="btn" waitEvent="updateComplete" waitTarget="btn"/>
			</setup>
			<body>
				<AssertMethodValue method="value=application.btn.getLayoutBoundsX()" value="6.363961" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsY()" value="224" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsWidth()" value="64.346717" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsHeight()" value="64.346717" />

			</body>
		</TestCase>
		
		<TestCase testID="mxButton_transformY_rotation_baseline_layoutProps" keywords="[mxButton, transformY, baseline, layout]" description="Set transformY baseline, verify x, y, and width, height are the cormxButton values">
			<setup>
				<ResetComponent target="btn" className="mx.controls.Button" waitEvent="updateComplete" waitTarget="btn"/>
				<SetProperty propertyName="baseline" value="60" target="btn" />
				<SetProperty propertyName="rotation" value="45" target="btn" waitEvent="updateComplete" waitTarget="btn"/>
				<SetProperty propertyName="transformY" value="30" target="btn" waitEvent="updateComplete" waitTarget="btn"/>
			</setup>
			<body>
				<AssertMethodValue method="value=application.btn.getLayoutBoundsX()" value="6.363961" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsY()" value="49" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsWidth()" value="64.346717" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsHeight()" value="64.346717" />

			</body>
		</TestCase>
		<!-- Flex 4 is now pretransform for width, height, explicitWidth, explicitHeight, explicitMinWidth, explicitMinHeight, explicitMaxWdith, explicitMaxHeight, measuredWidth, measuredHeight, measuredMinWidth, measuredMinHeight-->
		<TestCase testID="Flex4_mxButton_scaleX_layoutProps" keywords="[mxButton, scaleX, top, layout]" description="Verify layout properties are pretransform">
			<setup>
				<ResetComponent target="btn" className="mx.controls.Button" waitEvent="updateComplete" waitTarget="btn"/>
				<SetProperty propertyName="scaleX" value="3" target="btn" waitEvent="updateComplete" waitTarget="btn"/>
				<SetProperty propertyName="minWidth" value="10" target="btn" waitEvent="updateComplete" waitTarget="btn"/>
				<SetProperty propertyName="minHeight" value="10" target="btn" waitEvent="updateComplete" waitTarget="btn"/>
				<SetProperty propertyName="maxWidth" value="1000" target="btn" waitEvent="updateComplete" waitTarget="btn"/>
				<SetProperty propertyName="maxHeight" value="1000" target="btn" waitEvent="updateComplete" waitTarget="btn"/>
			</setup>
			<body>
				<AssertPropertyValue propertyName="width" target="btn" value="70" />
				<AssertPropertyValue propertyName="height" target="btn" value="21" />
				<AssertPropertyValue propertyName="explicitWidth" target="btn" value="NaN" />
				<AssertPropertyValue propertyName="explicitHeight" target="btn" value="NaN" />
				<AssertPropertyValue propertyName="explicitMinWidth" target="btn" value="10" />
				<AssertPropertyValue propertyName="explicitMinHeight" target="btn" value="10" />
				<AssertPropertyValue propertyName="explicitMaxWidth" target="btn" value="1000" />
				<AssertPropertyValue propertyName="explicitMaxHeight" target="btn" value="1000" />
				<AssertPropertyValue propertyName="measuredMinWidth" target="btn" value="70" />
				<AssertPropertyValue propertyName="measuredMinHeight" target="btn" value="21" />
			</body>
		</TestCase>

		<TestCase testID="Flex4_mxButton_scaleY_layoutProps" keywords="[mxButton, scaleY, top, layout]" description="Verify layout properties are pretransform">
			<setup>
				<ResetComponent target="btn" className="mx.controls.Button" waitEvent="updateComplete" waitTarget="btn"/>
				<SetProperty propertyName="scaleY" value="3" target="btn" waitEvent="updateComplete" waitTarget="btn"/>
				<SetProperty propertyName="minWidth" value="10" target="btn" waitEvent="updateComplete" waitTarget="btn"/>
				<SetProperty propertyName="minHeight" value="10" target="btn" waitEvent="updateComplete" waitTarget="btn"/>
				<SetProperty propertyName="maxWidth" value="1000" target="btn" waitEvent="updateComplete" waitTarget="btn"/>
				<SetProperty propertyName="maxHeight" value="1000" target="btn" waitEvent="updateComplete" waitTarget="btn"/>
			</setup>
			<body>
				<AssertPropertyValue propertyName="width" target="btn" value="70" />
				<AssertPropertyValue propertyName="height" target="btn" value="21" />
				<AssertPropertyValue propertyName="explicitWidth" target="btn" value="NaN" />
				<AssertPropertyValue propertyName="explicitHeight" target="btn" value="NaN" />
				<AssertPropertyValue propertyName="explicitMinWidth" target="btn" value="10" />
				<AssertPropertyValue propertyName="explicitMinHeight" target="btn" value="10" />
				<AssertPropertyValue propertyName="explicitMaxWidth" target="btn" value="1000" />
				<AssertPropertyValue propertyName="explicitMaxHeight" target="btn" value="1000" />
				<AssertPropertyValue propertyName="measuredMinWidth" target="btn" value="70" />
				<AssertPropertyValue propertyName="measuredMinHeight" target="btn" value="21" />
			</body>
		</TestCase>
		
		<TestCase testID="Flex4_mxButton_scaleX_scaleY_layoutProps" keywords="[mxButton, scaleX, top, layout]" description="Verify layout properties are pretransform">
			<setup>
				<ResetComponent target="btn" className="mx.controls.Button" waitEvent="updateComplete" waitTarget="btn"/>
				<SetProperty propertyName="scaleX" value="3" target="btn" waitEvent="updateComplete" waitTarget="btn"/>
				<SetProperty propertyName="scaleX" value="5" target="btn" waitEvent="updateComplete" waitTarget="btn"/>
				<SetProperty propertyName="minWidth" value="10" target="btn" waitEvent="updateComplete" waitTarget="btn"/>
				<SetProperty propertyName="minHeight" value="10" target="btn" waitEvent="updateComplete" waitTarget="btn"/>
				<SetProperty propertyName="maxWidth" value="1000" target="btn" waitEvent="updateComplete" waitTarget="btn"/>
				<SetProperty propertyName="maxHeight" value="1000" target="btn" waitEvent="updateComplete" waitTarget="btn"/>
			</setup>
			<body>
				<AssertPropertyValue propertyName="width" target="btn" value="70" />
				<AssertPropertyValue propertyName="height" target="btn" value="21" />
				<AssertPropertyValue propertyName="explicitWidth" target="btn" value="NaN" />
				<AssertPropertyValue propertyName="explicitHeight" target="btn" value="NaN" />
				<AssertPropertyValue propertyName="explicitMinWidth" target="btn" value="10" />
				<AssertPropertyValue propertyName="explicitMinHeight" target="btn" value="10" />
				<AssertPropertyValue propertyName="explicitMaxWidth" target="btn" value="1000" />
				<AssertPropertyValue propertyName="explicitMaxHeight" target="btn" value="1000" />
				<AssertPropertyValue propertyName="measuredMinWidth" target="btn" value="70" />
				<AssertPropertyValue propertyName="measuredMinHeight" target="btn" value="21" />
			</body>
		</TestCase>
			
		<!--Integration for more than one property testcases -->
		<TestCase testID="top_left_transformX_transformY_mxButton" keywords="[mxButton, left, top, transformX, transformY,layout]" description="left, top, transformX, transformY give correct size and x y">
			<setup>
				<ResetComponent target="btn" className="mx.controls.Button" waitEvent="updateComplete" waitTarget="btn"/>
				<SetProperty propertyName="transformX" value="20" target="btn" waitEvent="updateComplete" waitTarget="btn"/>
				<SetProperty propertyName="transformY" value="30" target="btn" waitEvent="updateComplete" waitTarget="btn"/>
				<SetProperty propertyName="top" value="70" target="btn" waitEvent="updateComplete" waitTarget="btn"/>
				<SetProperty propertyName="left" value="55" target="btn" waitEvent="updateComplete" waitTarget="btn"/>
			</setup>
			<body>
				<AssertMethodValue method="value=application.btn.getLayoutBoundsX()" value="55" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsY()" value="70" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsWidth()" value="70" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsHeight()" value="21" />
				<AssertMethodValue method="value=application.btn.getMaxBoundsWidth(true)" value="10000" />				
				<AssertMethodValue method="value=application.btn.getMaxBoundsHeight(true)" value="10000" />
				<AssertMethodValue method="value=application.btn.getMinBoundsWidth(true)" value="70" />				
				<AssertMethodValue method="value=application.btn.getMinBoundsHeight(true)" value="21" />
			</body>
		</TestCase>
		
		<TestCase testID="x_y_transformX_transformY_mxButton" keywords="[mxButton, x, y, transformX, transformY,layout]" description="left, top, transformX, transformY give correct size and x y">
			<setup>
				<ResetComponent target="btn" className="mx.controls.Button" waitEvent="updateComplete" waitTarget="btn"/>
				<SetProperty propertyName="transformX" value="20" target="btn" waitEvent="updateComplete" waitTarget="btn"/>
				<SetProperty propertyName="transformY" value="30" target="btn" waitEvent="updateComplete" waitTarget="btn"/>
				<SetProperty propertyName="x" value="70" target="btn" waitEvent="updateComplete" waitTarget="btn"/>
				<SetProperty propertyName="y" value="55" target="btn" waitEvent="updateComplete" waitTarget="btn"/>
			</setup>
			<body>
				<AssertMethodValue method="value=application.btn.getLayoutBoundsX()" value="70" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsY()" value="55" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsWidth()" value="70" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsHeight()" value="21" />
				<AssertMethodValue method="value=application.btn.getMaxBoundsWidth(true)" value="10000" />				
				<AssertMethodValue method="value=application.btn.getMaxBoundsHeight(true)" value="10000" />
				<AssertMethodValue method="value=application.btn.getMinBoundsWidth(true)" value="70" />				
				<AssertMethodValue method="value=application.btn.getMinBoundsHeight(true)" value="21" />
				<AssertMethodValue method="value=application.btn.getMaxBoundsWidth(false)" value="10000" />				
				<AssertMethodValue method="value=application.btn.getMaxBoundsHeight(false)" value="10000" />
				<AssertMethodValue method="value=application.btn.getMinBoundsWidth(false)" value="70" />				
				<AssertMethodValue method="value=application.btn.getMinBoundsHeight(false)" value="21" />				
			</body>
		</TestCase>
		
		<TestCase testID="top_left_scaleX_mxButton" keywords="[mxButton, left, top, scaleX,layout]" description="left, top, scaleX give correct size and x y">
			<setup>
				<ResetComponent target="btn" className="mx.controls.Button" waitEvent="updateComplete" waitTarget="btn"/>
				<SetProperty propertyName="scaleX" value="3" target="btn" waitEvent="updateComplete" waitTarget="btn"/>
				<SetProperty propertyName="top" value="70" target="btn" waitEvent="updateComplete" waitTarget="btn"/>
				<SetProperty propertyName="left" value="55" target="btn" waitEvent="updateComplete" waitTarget="btn"/>
			</setup>
			<body>
				<AssertMethodValue method="value=application.btn.getLayoutBoundsX()" value="55" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsY()" value="70" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsWidth(true)" value="210" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsHeight(true)" value="21" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsWidth(false)" value="70" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsHeight(false)" value="21" />
				<AssertMethodValue method="value=application.btn.getMaxBoundsWidth(false)" value="10000" />				
				<AssertMethodValue method="value=application.btn.getMaxBoundsHeight(false)" value="10000" />
				<AssertMethodValue method="value=application.btn.getMinBoundsWidth(false)" value="70" />				
				<AssertMethodValue method="value=application.btn.getMinBoundsHeight(false)" value="21" />
				<AssertMethodValue method="value=application.btn.getMaxBoundsWidth(true)" value="30000" />				
				<AssertMethodValue method="value=application.btn.getMaxBoundsHeight(true)" value="10000" />
				<AssertMethodValue method="value=application.btn.getMinBoundsWidth(true)" value="210" />				
				<AssertMethodValue method="value=application.btn.getMinBoundsHeight(true)" value="21" />
			</body>
		</TestCase>
	
		<TestCase testID="top_left_scaleY_mxButton" keywords="[mxButton, left, top, scaleY, layout]" description="left, top, scaleY give correct size and x y">
			<setup>
				<ResetComponent target="btn" className="mx.controls.Button" waitEvent="updateComplete" waitTarget="btn"/>
				<SetProperty propertyName="scaleY" value="3" target="btn" waitEvent="updateComplete" waitTarget="btn"/>
				<SetProperty propertyName="top" value="70" target="btn" waitEvent="updateComplete" waitTarget="btn"/>
				<SetProperty propertyName="left" value="55" target="btn" waitEvent="updateComplete" waitTarget="btn"/>
			</setup>
			<body>
				<AssertMethodValue method="value=application.btn.getLayoutBoundsX()" value="55" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsY()" value="70" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsWidth(true)" value="70" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsHeight(true)" value="63" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsWidth(false)" value="70" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsHeight(false)" value="21" />
				<AssertMethodValue method="value=application.btn.getMaxBoundsWidth(false)" value="10000" />				
				<AssertMethodValue method="value=application.btn.getMaxBoundsHeight(false)" value="10000" />
				<AssertMethodValue method="value=application.btn.getMinBoundsWidth(false)" value="70" />				
				<AssertMethodValue method="value=application.btn.getMinBoundsHeight(false)" value="21" />
				<AssertMethodValue method="value=application.btn.getMaxBoundsWidth(true)" value="10000" />				
				<AssertMethodValue method="value=application.btn.getMaxBoundsHeight(true)" value="30000" />
				<AssertMethodValue method="value=application.btn.getMinBoundsWidth(true)" value="70" />				
				<AssertMethodValue method="value=application.btn.getMinBoundsHeight(true)" value="63" />
			</body>
		</TestCase>
		
		<TestCase testID="bottom_right_scaleX_mxButton" keywords="[mxButton, bottom, right, scaleX, layout]" description="bottom, right, scaleX give correct size and x y">
			<setup>
				<ResetComponent target="btn" className="mx.controls.Button" waitEvent="updateComplete" waitTarget="btn"/>
				<SetProperty propertyName="scaleX" value="3" target="btn" waitEvent="updateComplete" waitTarget="btn"/>
				<SetProperty propertyName="bottom" value="70" target="btn" waitEvent="updateComplete" waitTarget="btn"/>
				<SetProperty propertyName="right" value="55" target="btn" waitEvent="updateComplete" waitTarget="btn"/>
			</setup>
			<body>
				<AssertMethodValue method="value=application.btn.getLayoutBoundsX()" value="235" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsY()" value="409" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsX(false)" value="235" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsY(false)" value="409" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsWidth(true)" value="210" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsHeight(true)" value="21" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsWidth(false)" value="70" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsHeight(false)" value="21" />
				<AssertMethodValue method="value=application.btn.getMaxBoundsWidth(false)" value="10000" />				
				<AssertMethodValue method="value=application.btn.getMaxBoundsHeight(false)" value="10000" />
				<AssertMethodValue method="value=application.btn.getMinBoundsWidth(false)" value="70" />				
				<AssertMethodValue method="value=application.btn.getMinBoundsHeight(false)" value="21" />
				<AssertMethodValue method="value=application.btn.getMaxBoundsWidth(true)" value="30000" />				
				<AssertMethodValue method="value=application.btn.getMaxBoundsHeight(true)" value="10000" />
				<AssertMethodValue method="value=application.btn.getMinBoundsWidth(true)" value="210" />				
				<AssertMethodValue method="value=application.btn.getMinBoundsHeight(true)" value="21" />
			</body>
		</TestCase>
		

		<TestCase testID="bottom_right_scaleY_mxButton" keywords="[mxButton, bottom, right, scaleY, layout]" description="bottom, right, scaleY give correct size and x y">
			<setup>
				<ResetComponent target="btn" className="mx.controls.Button" waitEvent="updateComplete" waitTarget="btn"/>
				<SetProperty propertyName="scaleY" value="6" target="btn" waitEvent="updateComplete" waitTarget="btn"/>
				<SetProperty propertyName="bottom" value="70" target="btn" waitEvent="updateComplete" waitTarget="btn"/>
				<SetProperty propertyName="right" value="55" target="btn" waitEvent="updateComplete" waitTarget="btn"/>
			</setup>
			<body>
				<AssertMethodValue method="value=application.btn.getLayoutBoundsX()" value="375" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsY()" value="304" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsX(false)" value="375" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsY(false)" value="304" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsWidth(true)" value="70" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsHeight(true)" value="126" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsWidth(false)" value="70" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsHeight(false)" value="21" />
				<AssertMethodValue method="value=application.btn.getMaxBoundsWidth(false)" value="10000" />				
				<AssertMethodValue method="value=application.btn.getMaxBoundsHeight(false)" value="10000" />
				<AssertMethodValue method="value=application.btn.getMinBoundsWidth(false)" value="70" />				
				<AssertMethodValue method="value=application.btn.getMinBoundsHeight(false)" value="21" />
				<AssertMethodValue method="value=application.btn.getMaxBoundsWidth(true)" value="10000" />				
				<AssertMethodValue method="value=application.btn.getMaxBoundsHeight(true)" value="60000" />
				<AssertMethodValue method="value=application.btn.getMinBoundsWidth(true)" value="70" />				
				<AssertMethodValue method="value=application.btn.getMinBoundsHeight(true)" value="126" />
			</body>
		</TestCase>
		
		<TestCase testID="top_bottom_scaleX_mxButton" keywords="[mxButton, bottom, top, scaleX,layout]" description="bottom, top, scaleX give correct size and x y">
			<setup>
				<ResetComponent target="btn" className="mx.controls.Button" waitEvent="updateComplete" waitTarget="btn"/>
				<SetProperty propertyName="scaleX" value="3" target="btn" waitEvent="updateComplete" waitTarget="btn"/>
				<SetProperty propertyName="top" value="55" target="btn" waitEvent="updateComplete" waitTarget="btn"/>
				<SetProperty propertyName="bottom" value="70" target="btn" waitEvent="updateComplete" waitTarget="btn"/>
			</setup>
			<body>
				<AssertMethodValue method="value=application.btn.getLayoutBoundsX()" value="0" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsY()" value="55" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsX(false)" value="0" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsY(false)" value="55" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsWidth(true)" value="210" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsHeight(true)" value="375" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsWidth(false)" value="70" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsHeight(false)" value="375" />
				<AssertMethodValue method="value=application.btn.getMaxBoundsWidth(false)" value="10000" />				
				<AssertMethodValue method="value=application.btn.getMaxBoundsHeight(false)" value="10000" />
				<AssertMethodValue method="value=application.btn.getMinBoundsWidth(false)" value="70" />				
				<AssertMethodValue method="value=application.btn.getMinBoundsHeight(false)" value="21" />
				<AssertMethodValue method="value=application.btn.getMaxBoundsWidth(true)" value="30000" />				
				<AssertMethodValue method="value=application.btn.getMaxBoundsHeight(true)" value="10000" />
				<AssertMethodValue method="value=application.btn.getMinBoundsWidth(true)" value="210" />				
				<AssertMethodValue method="value=application.btn.getMinBoundsHeight(true)" value="21" />
			</body>
		</TestCase>

		<TestCase testID="top_bottom_scaleY_mxButton" keywords="[mxButton, bottom, top, scaleY, layout]" description="bottom, top, scaleY give correct size and x y">
			<setup>
				<ResetComponent target="btn" className="mx.controls.Button" waitEvent="updateComplete" waitTarget="btn"/>
				<SetProperty propertyName="scaleY" value="3" target="btn" waitEvent="updateComplete" waitTarget="btn"/>
				<SetProperty propertyName="top" value="55" target="btn" waitEvent="updateComplete" waitTarget="btn"/>
				<SetProperty propertyName="bottom" value="70" target="btn" waitEvent="updateComplete" waitTarget="btn"/>
			</setup>
			<body>
				<AssertMethodValue method="value=application.btn.getLayoutBoundsX()" value="0" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsY()" value="55" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsX(false)" value="0" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsY(false)" value="55" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsWidth(true)" value="70" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsHeight(true)" value="375" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsWidth(false)" value="70" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsHeight(false)" value="125" />
				<AssertMethodValue method="value=application.btn.getMaxBoundsWidth(false)" value="10000" />				
				<AssertMethodValue method="value=application.btn.getMaxBoundsHeight(false)" value="10000" />
				<AssertMethodValue method="value=application.btn.getMinBoundsWidth(false)" value="70" />				
				<AssertMethodValue method="value=application.btn.getMinBoundsHeight(false)" value="21" />
				<AssertMethodValue method="value=application.btn.getMaxBoundsWidth(true)" value="10000" />				
				<AssertMethodValue method="value=application.btn.getMaxBoundsHeight(true)" value="30000" />
				<AssertMethodValue method="value=application.btn.getMinBoundsWidth(true)" value="70" />				
				<AssertMethodValue method="value=application.btn.getMinBoundsHeight(true)" value="63" />
			</body>
		</TestCase>
		
		<TestCase testID="top_bottom_scaleX_scaleY_mxButton" keywords="[mxButton, bottom, top, scaleX, scaleY, layout]" description="scaleX, bottom, top, scaleY give correct size and x y">
			<setup>
				<ResetComponent target="btn" className="mx.controls.Button" waitEvent="updateComplete" waitTarget="btn"/>
				<SetProperty propertyName="scaleX" value="4" target="btn" waitEvent="updateComplete" waitTarget="btn"/>
				<SetProperty propertyName="scaleY" value="3" target="btn" waitEvent="updateComplete" waitTarget="btn"/>
				<SetProperty propertyName="top" value="55" target="btn" waitEvent="updateComplete" waitTarget="btn"/>
				<SetProperty propertyName="bottom" value="70" target="btn" waitEvent="updateComplete" waitTarget="btn"/>
			</setup>
			<body>
				<AssertMethodValue method="value=application.btn.getLayoutBoundsX()" value="0" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsY()" value="55" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsX(false)" value="0" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsY(false)" value="55" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsWidth(true)" value="280" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsHeight(true)" value="375" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsWidth(false)" value="70" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsHeight(false)" value="125" />
				<AssertMethodValue method="value=application.btn.getMaxBoundsWidth(false)" value="10000" />				
				<AssertMethodValue method="value=application.btn.getMaxBoundsHeight(false)" value="10000" />
				<AssertMethodValue method="value=application.btn.getMinBoundsWidth(false)" value="70" />				
				<AssertMethodValue method="value=application.btn.getMinBoundsHeight(false)" value="21" />
				<AssertMethodValue method="value=application.btn.getMaxBoundsWidth(true)" value="40000" />				
				<AssertMethodValue method="value=application.btn.getMaxBoundsHeight(true)" value="30000" />
				<AssertMethodValue method="value=application.btn.getMinBoundsWidth(true)" value="280" />				
				<AssertMethodValue method="value=application.btn.getMinBoundsHeight(true)" value="63" />
			</body>
		</TestCase>
		
		<TestCase testID="left_right_scaleX_mxButton" keywords="[mxButton, left, right, scaleX, layout]" description="left, right, scaleX give correct size and x y">
			<setup>
				<ResetComponent target="btn" className="mx.controls.Button" waitEvent="updateComplete" waitTarget="btn"/>
				<SetProperty propertyName="scaleX" value="4" target="btn" waitEvent="updateComplete" waitTarget="btn"/>
				<SetProperty propertyName="left" value="55" target="btn" waitEvent="updateComplete" waitTarget="btn"/>
				<SetProperty propertyName="right" value="70" target="btn" waitEvent="updateComplete" waitTarget="btn"/>
			</setup>
			<body>
				<AssertMethodValue method="value=application.btn.getLayoutBoundsX()" value="55" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsY()" value="0" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsX(false)" value="55" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsY(false)" value="0" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsWidth(true)" value="375" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsHeight(true)" value="21" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsWidth(false)" value="93.750000" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsHeight(false)" value="21" />
				<AssertMethodValue method="value=application.btn.getMaxBoundsWidth(false)" value="10000" />				
				<AssertMethodValue method="value=application.btn.getMaxBoundsHeight(false)" value="10000" />
				<AssertMethodValue method="value=application.btn.getMinBoundsWidth(false)" value="70" />				
				<AssertMethodValue method="value=application.btn.getMinBoundsHeight(false)" value="21" />
				<AssertMethodValue method="value=application.btn.getMaxBoundsWidth(true)" value="40000" />				
				<AssertMethodValue method="value=application.btn.getMaxBoundsHeight(true)" value="10000" />
				<AssertMethodValue method="value=application.btn.getMinBoundsWidth(true)" value="280" />				
				<AssertMethodValue method="value=application.btn.getMinBoundsHeight(true)" value="21" />
			</body>
		</TestCase>

		<TestCase testID="left_right_scaleY_mxButton" keywords="[mxButton, left, right, scaleY, layout]" description="left, right, scaleY give correct size and x y">
			<setup>
				<ResetComponent target="btn" className="mx.controls.Button" waitEvent="updateComplete" waitTarget="btn"/>
				<SetProperty propertyName="scaleY" value="4" target="btn" waitEvent="updateComplete" waitTarget="btn"/>
				<SetProperty propertyName="left" value="55" target="btn" waitEvent="updateComplete" waitTarget="btn"/>
				<SetProperty propertyName="right" value="70" target="btn" waitEvent="updateComplete" waitTarget="btn"/>
			</setup>
			<body>
				<AssertMethodValue method="value=application.btn.getLayoutBoundsX()" value="55" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsY()" value="0" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsX(false)" value="55" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsY(false)" value="0" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsWidth(true)" value="375" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsHeight(true)" value="84" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsWidth(false)" value="375" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsHeight(false)" value="21" />
				<AssertMethodValue method="value=application.btn.getMaxBoundsWidth(false)" value="10000" />				
				<AssertMethodValue method="value=application.btn.getMaxBoundsHeight(false)" value="10000" />
				<AssertMethodValue method="value=application.btn.getMinBoundsWidth(false)" value="70" />				
				<AssertMethodValue method="value=application.btn.getMinBoundsHeight(false)" value="21" />
				<AssertMethodValue method="value=application.btn.getMaxBoundsWidth(true)" value="10000" />				
				<AssertMethodValue method="value=application.btn.getMaxBoundsHeight(true)" value="40000" />
				<AssertMethodValue method="value=application.btn.getMinBoundsWidth(true)" value="70" />				
				<AssertMethodValue method="value=application.btn.getMinBoundsHeight(true)" value="84" />
			</body>
		</TestCase>
		
		<TestCase testID="left_right_scaleX_scaleY_mxButton" keywords="[mxButton, left, right, scaleX, scaleY, layout]" description="left, right, scaleX, scaleY give correct size and x y">
			<setup>
				<ResetComponent target="btn" className="mx.controls.Button" waitEvent="updateComplete" waitTarget="btn"/>
				<SetProperty propertyName="scaleX" value="4" target="btn" waitEvent="updateComplete" waitTarget="btn"/>
				<SetProperty propertyName="left" value="55" target="btn" waitEvent="updateComplete" waitTarget="btn"/>
				<SetProperty propertyName="right" value="70" target="btn" waitEvent="updateComplete" waitTarget="btn"/>
			</setup>
			<body>
				<AssertMethodValue method="value=application.btn.getLayoutBoundsX()" value="55" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsY()" value="0" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsX(false)" value="55" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsY(false)" value="0" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsWidth(true)" value="375" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsHeight(true)" value="21" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsWidth(false)" value="93.750000" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsHeight(false)" value="21" />
				<AssertMethodValue method="value=application.btn.getMaxBoundsWidth(false)" value="10000" />				
				<AssertMethodValue method="value=application.btn.getMaxBoundsHeight(false)" value="10000" />
				<AssertMethodValue method="value=application.btn.getMinBoundsWidth(false)" value="70" />				
				<AssertMethodValue method="value=application.btn.getMinBoundsHeight(false)" value="21" />
				<AssertMethodValue method="value=application.btn.getMaxBoundsWidth(true)" value="40000" />				
				<AssertMethodValue method="value=application.btn.getMaxBoundsHeight(true)" value="10000" />
				<AssertMethodValue method="value=application.btn.getMinBoundsWidth(true)" value="280" />				
				<AssertMethodValue method="value=application.btn.getMinBoundsHeight(true)" value="21" />
			</body>
		</TestCase>
		
		<TestCase testID="x_y_scaleX_scaleY_mxButton" keywords="[mxButton, x, y, scaleX, scaleY, layout]" description="x, y, scaleX, scaleY give correct size and x y">
			<setup>
				<ResetComponent target="btn" className="mx.controls.Button" waitEvent="updateComplete" waitTarget="btn"/>
				<SetProperty propertyName="scaleX" value="4" target="btn" waitEvent="updateComplete" waitTarget="btn"/>
				<SetProperty propertyName="scaleY" value="3" target="btn" waitEvent="updateComplete" waitTarget="btn"/>
				<SetProperty propertyName="x" value="25" target="btn" waitEvent="updateComplete" waitTarget="btn"/>
				<SetProperty propertyName="y" value="30" target="btn" waitEvent="updateComplete" waitTarget="btn"/>
			</setup>
			<body>
				<AssertMethodValue method="value=application.btn.getLayoutBoundsX()" value="25" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsY()" value="30" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsX(false)" value="25" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsY(false)" value="30" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsWidth(true)" value="280" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsHeight(true)" value="63" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsWidth(false)" value="70" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsHeight(false)" value="21" />
				<AssertMethodValue method="value=application.btn.getMaxBoundsWidth(false)" value="10000" />				
				<AssertMethodValue method="value=application.btn.getMaxBoundsHeight(false)" value="10000" />
				<AssertMethodValue method="value=application.btn.getMinBoundsWidth(false)" value="70" />				
				<AssertMethodValue method="value=application.btn.getMinBoundsHeight(false)" value="21" />
				<AssertMethodValue method="value=application.btn.getMaxBoundsWidth(true)" value="40000" />				
				<AssertMethodValue method="value=application.btn.getMaxBoundsHeight(true)" value="30000" />
				<AssertMethodValue method="value=application.btn.getMinBoundsWidth(true)" value="280" />				
				<AssertMethodValue method="value=application.btn.getMinBoundsHeight(true)" value="63" />
			</body>
		</TestCase>
	
		<TestCase testID="x_y_scaleX_scaleY_rotation_mxButton" keywords="[mxButton, x, y, scaleX, scaleY, layout]" description="x, y, scaleX, scaleY give correct size and x y">
			<setup>
				<ResetComponent target="btn" className="mx.controls.Button" waitEvent="updateComplete" waitTarget="btn"/>
				<SetProperty propertyName="scaleX" value="4" target="btn" waitEvent="updateComplete" waitTarget="btn"/>
				<SetProperty propertyName="scaleY" value="3" target="btn" waitEvent="updateComplete" waitTarget="btn"/>
				<SetProperty propertyName="x" value="25" target="btn" waitEvent="updateComplete" waitTarget="btn"/>
				<SetProperty propertyName="y" value="30" target="btn" waitEvent="updateComplete" waitTarget="btn"/>
				<SetProperty propertyName="rotation" value="45" target="btn" waitEvent="updateComplete" waitTarget="btn"/>
			</setup>
			<body>
				<AssertMethodValue method="value=application.btn.getLayoutBoundsX()" value="-19.547775" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsY()" value="30" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsX(false)" value="25" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsY(false)" value="30" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsWidth(true)" value="242.537888" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsHeight(true)" value="242.537888" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsWidth(false)" value="70" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsHeight(false)" value="21" />
				<AssertMethodValue method="value=application.btn.getMaxBoundsWidth(false)" value="10000" />				
				<AssertMethodValue method="value=application.btn.getMaxBoundsHeight(false)" value="10000" />
				<AssertMethodValue method="value=application.btn.getMinBoundsWidth(false)" value="70" />				
				<AssertMethodValue method="value=application.btn.getMinBoundsHeight(false)" value="21" />
				<AssertMethodValue method="value=application.btn.getMaxBoundsWidth(true)" value="49497.528076" />				
				<AssertMethodValue method="value=application.btn.getMaxBoundsHeight(true)" value="49497.528076" />
				<AssertMethodValue method="value=application.btn.getMinBoundsWidth(true)" value="242.537888" />				
				<AssertMethodValue method="value=application.btn.getMinBoundsHeight(true)" value="242.537888" />
			</body>
		</TestCase>
		<TestCase testID="x_y_scaleX_scaleY_rotation_transformX_transformY_mxButton" keywords="[mxButton, x, y, scaleX, scaleY, layout]" description="x, y, scaleX, scaleY give correct size and x y">
			<setup>
				<ResetComponent target="btn" className="mx.controls.Button" waitEvent="updateComplete" waitTarget="btn"/>
				<SetProperty propertyName="scaleX" value="4" target="btn" waitEvent="updateComplete" waitTarget="btn"/>
				<SetProperty propertyName="scaleY" value="3" target="btn" waitEvent="updateComplete" waitTarget="btn"/>
				<SetProperty propertyName="x" value="25" target="btn" waitEvent="updateComplete" waitTarget="btn"/>
				<SetProperty propertyName="y" value="30" target="btn" waitEvent="updateComplete" waitTarget="btn"/>
				<SetProperty propertyName="transformX" value="5" target="btn" waitEvent="updateComplete" waitTarget="btn"/>
				<SetProperty propertyName="transformY" value="5" target="btn" waitEvent="updateComplete" waitTarget="btn"/>
				<SetProperty propertyName="rotation" value="45" target="btn" waitEvent="updateComplete" waitTarget="btn"/>
			</setup>
			<body>
				<AssertMethodValue method="value=application.btn.getLayoutBoundsX()" value="-18.083261" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsY()" value="10.251263" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsX(false)" value="25" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsY(false)" value="30" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsWidth(true)" value="242.537626" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsHeight(true)" value="242.537626" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsWidth(false)" value="70" />
				<AssertMethodValue method="value=application.btn.getLayoutBoundsHeight(false)" value="21" />
				<AssertMethodValue method="value=application.btn.getMaxBoundsWidth(false)" value="10000" />				
				<AssertMethodValue method="value=application.btn.getMaxBoundsHeight(false)" value="10000" />
				<AssertMethodValue method="value=application.btn.getMinBoundsWidth(false)" value="70" />				
				<AssertMethodValue method="value=application.btn.getMinBoundsHeight(false)" value="21" />
				<AssertMethodValue method="value=application.btn.getMaxBoundsWidth(true)" value="49497.474683" />				
				<AssertMethodValue method="value=application.btn.getMaxBoundsHeight(true)" value="49497.474683" />
				<AssertMethodValue method="value=application.btn.getMinBoundsWidth(true)" value="242.537626" />				
				<AssertMethodValue method="value=application.btn.getMinBoundsHeight(true)" value="242.537626" />
			</body>
		</TestCase>
		
		<TestCase testID="top_left_transformX_transformY_rotation45_Rect" keywords="[Rect, left, top, transformX, transformY,layout]" description="left, top, transformX, transformY give correct size and x y">
			<setup>
				<ResetComponent target="mr" className="comps.MyRect" waitEvent="updateComplete" waitTarget="mr"/>
				<SetProperty propertyName="top" value="42" target="mr" waitEvent="updateComplete" waitTarget="mr"/>
				<SetProperty propertyName="left" value="33" target="mr" waitEvent="updateComplete" waitTarget="mr"/>
				<SetProperty propertyName="transformX" value="5" target="mr" waitEvent="updateComplete" waitTarget="mr"/>
				<SetProperty propertyName="transformY" value="5" target="mr" waitEvent="updateComplete" waitTarget="mr"/>
				<SetProperty propertyName="rotation" value="45" target="mr" waitEvent="updateComplete" waitTarget="mr"/>
			</setup>
			<body>
				<AssertMethodValue method="value=application.mr.getLayoutBoundsX(true)" value="33" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsY(true)" value="42" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsWidth(true)" value="56.568542" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsHeight(true)" value="56.568542" />
				<AssertMethodValue method="value=application.mr.getMaxBoundsWidth(true)" value="14142.135624" />				
				<AssertMethodValue method="value=application.mr.getMaxBoundsHeight(true)" value="14142.135624" />
				<AssertMethodValue method="value=application.mr.getMinBoundsWidth(true)" value="0" />				
				<AssertMethodValue method="value=application.mr.getMinBoundsHeight(true)" value="0" />
				
				<AssertMethodValue method="value=application.mr.getLayoutBoundsX(false)" value="49.213203" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsY(false)" value="44.071068" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsWidth(false)" value="50" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsHeight(false)" value="30" />
				<AssertMethodValue method="value=application.mr.getMaxBoundsWidth(false)" value="10000" />				
				<AssertMethodValue method="value=application.mr.getMaxBoundsHeight(false)" value="10000" />
				<AssertMethodValue method="value=application.mr.getMinBoundsWidth(false)" value="0" />				
				<AssertMethodValue method="value=application.mr.getMinBoundsHeight(false)" value="0" />
			</body>
		</TestCase>

		<TestCase testID="x_y_transformX_transformY_Rect" keywords="[Rect, x, y, transformX, transformY,layout]" description="left, top, transformX, transformY give correct size and x y">
			<setup>
				<ResetComponent target="mr" className="comps.MyRect" waitEvent="updateComplete" waitTarget="mr"/>
				<SetProperty propertyName="x" value="25" target="mr" waitEvent="updateComplete" waitTarget="mr"/>
				<SetProperty propertyName="y" value="30" target="mr" waitEvent="updateComplete" waitTarget="mr"/>
				<SetProperty propertyName="transformX" value="5" target="mr" waitEvent="updateComplete" waitTarget="mr"/>
				<SetProperty propertyName="transformY" value="5" target="mr" waitEvent="updateComplete" waitTarget="mr"/>
			</setup>
			<body>
				<AssertMethodValue method="value=application.mr.getLayoutBoundsX(true)" value="25" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsY(true)" value="30" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsX(false)" value="25" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsY(false)" value="30" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsWidth(true)" value="50" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsHeight(true)" value="30" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsWidth(false)" value="50" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsHeight(false)" value="30" />
				<AssertMethodValue method="value=application.mr.getMaxBoundsWidth(true)" value="10000" />				
				<AssertMethodValue method="value=application.mr.getMaxBoundsHeight(true)" value="10000" />
				<AssertMethodValue method="value=application.mr.getMaxBoundsWidth(false)" value="10000" />				
				<AssertMethodValue method="value=application.mr.getMaxBoundsHeight(false)" value="10000" />
				<AssertMethodValue method="value=application.mr.getMinBoundsWidth(true)" value="0" />				
				<AssertMethodValue method="value=application.mr.getMinBoundsHeight(true)" value="0" />
				<AssertMethodValue method="value=application.mr.getMinBoundsWidth(false)" value="0" />									
				<AssertMethodValue method="value=application.mr.getMinBoundsHeight(false)" value="0" />		
			</body>
		</TestCase>

		<TestCase testID="top_left_scaleX_Rect" keywords="[Rect, left, top, scaleX,layout]" description="left, top, scaleX give correct size and x y">
			<setup>
				<ResetComponent target="mr" className="comps.MyRect" waitEvent="updateComplete" waitTarget="mr"/>
				<SetProperty propertyName="top" value="25" target="mr" waitEvent="updateComplete" waitTarget="mr"/>
				<SetProperty propertyName="left" value="30" target="mr" waitEvent="updateComplete" waitTarget="mr"/>
				<SetProperty propertyName="scaleX" value="5" target="mr" waitEvent="updateComplete" waitTarget="mr"/>
			</setup>
			<body>
				<AssertMethodValue method="value=application.mr.getLayoutBoundsX(true)" value="30" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsY(true)" value="25" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsX(false)" value="30" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsY(false)" value="25" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsWidth(true)" value="250" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsHeight(true)" value="30" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsWidth(false)" value="50" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsHeight(false)" value="30" />
				<AssertMethodValue method="value=application.mr.getMaxBoundsWidth(true)" value="50000" />				
				<AssertMethodValue method="value=application.mr.getMaxBoundsHeight(true)" value="10000" />
				<AssertMethodValue method="value=application.mr.getMaxBoundsWidth(false)" value="10000" />				
				<AssertMethodValue method="value=application.mr.getMaxBoundsHeight(false)" value="10000" />
				<AssertMethodValue method="value=application.mr.getMinBoundsWidth(true)" value="0" />				
				<AssertMethodValue method="value=application.mr.getMinBoundsHeight(true)" value="0" />
				<AssertMethodValue method="value=application.mr.getMinBoundsWidth(false)" value="0" />									
				<AssertMethodValue method="value=application.mr.getMinBoundsHeight(false)" value="0" />		
			</body>
		</TestCase>

		<TestCase testID="top_left_transformX_transformY_Rect" keywords="[Rect, left, top, transformX, transformY,layout]" description="left, top, transformX, transformY give correct size and x y">
			<setup>
				<ResetComponent target="mr" className="comps.MyRect" waitEvent="updateComplete" waitTarget="mr"/>
				<SetProperty propertyName="top" value="25" target="mr" waitEvent="updateComplete" waitTarget="mr"/>
				<SetProperty propertyName="left" value="30" target="mr" waitEvent="updateComplete" waitTarget="mr"/>
				<SetProperty propertyName="transformX" value="5" target="mr" waitEvent="updateComplete" waitTarget="mr"/>
				<SetProperty propertyName="transformY" value="5" target="mr" waitEvent="updateComplete" waitTarget="mr"/>
			</setup>
			<body>
				<AssertMethodValue method="value=application.mr.getLayoutBoundsX(true)" value="30" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsY(true)" value="25" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsX(false)" value="30" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsY(false)" value="25" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsWidth(true)" value="50" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsHeight(true)" value="30" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsWidth(false)" value="50" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsHeight(false)" value="30" />
				<AssertMethodValue method="value=application.mr.getMaxBoundsWidth(true)" value="10000" />				
				<AssertMethodValue method="value=application.mr.getMaxBoundsHeight(true)" value="10000" />
				<AssertMethodValue method="value=application.mr.getMaxBoundsWidth(false)" value="10000" />				
				<AssertMethodValue method="value=application.mr.getMaxBoundsHeight(false)" value="10000" />
				<AssertMethodValue method="value=application.mr.getMinBoundsWidth(true)" value="0" />				
				<AssertMethodValue method="value=application.mr.getMinBoundsHeight(true)" value="0" />
				<AssertMethodValue method="value=application.mr.getMinBoundsWidth(false)" value="0" />									
				<AssertMethodValue method="value=application.mr.getMinBoundsHeight(false)" value="0" />		
			</body>
		</TestCase>
		<TestCase testID="top_left_scaleY_Rect" keywords="[Rect, left, top, scaleY, layout]" description="left, top, scaleY give correct size and x y">
			<setup>
				<ResetComponent target="mr" className="comps.MyRect" waitEvent="updateComplete" waitTarget="mr"/>
				<SetProperty propertyName="top" value="25" target="mr" waitEvent="updateComplete" waitTarget="mr"/>
				<SetProperty propertyName="left" value="30" target="mr" waitEvent="updateComplete" waitTarget="mr"/>
				<SetProperty propertyName="scaleY" value="5" target="mr" waitEvent="updateComplete" waitTarget="mr"/>
			</setup>
			<body>
				<AssertMethodValue method="value=application.mr.getLayoutBoundsX(true)" value="30" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsY(true)" value="25" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsX(false)" value="30" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsY(false)" value="25" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsWidth(true)" value="50" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsHeight(true)" value="150" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsWidth(false)" value="50" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsHeight(false)" value="30" />
				<AssertMethodValue method="value=application.mr.getMaxBoundsWidth(true)" value="10000" />				
				<AssertMethodValue method="value=application.mr.getMaxBoundsHeight(true)" value="50000" />
				<AssertMethodValue method="value=application.mr.getMaxBoundsWidth(false)" value="10000" />				
				<AssertMethodValue method="value=application.mr.getMaxBoundsHeight(false)" value="10000" />
				<AssertMethodValue method="value=application.mr.getMinBoundsWidth(true)" value="0" />				
				<AssertMethodValue method="value=application.mr.getMinBoundsHeight(true)" value="0" />
				<AssertMethodValue method="value=application.mr.getMinBoundsWidth(false)" value="0" />									
				<AssertMethodValue method="value=application.mr.getMinBoundsHeight(false)" value="0" />		
			</body>
		</TestCase>

		<TestCase testID="bottom_right_scaleX_Rect" keywords="[Rect, bottom, right, scaleX, layout]" description="bottom, right, scaleX give correct size and x y">
			<setup>
				<ResetComponent target="mr" className="comps.MyRect" waitEvent="updateComplete" waitTarget="mr"/>
				<SetProperty propertyName="bottom" value="25" target="mr" waitEvent="updateComplete" waitTarget="mr"/>
				<SetProperty propertyName="right" value="32" target="mr" waitEvent="updateComplete" waitTarget="mr"/>
				<SetProperty propertyName="scaleX" value="3" target="mr" waitEvent="updateComplete" waitTarget="mr"/>
			</setup>
			<body>
				<AssertMethodValue method="value=application.mr.getLayoutBoundsX(true)" value="318" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsY(true)" value="445" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsX(false)" value="318" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsY(false)" value="445" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsWidth(true)" value="150" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsHeight(true)" value="30" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsWidth(false)" value="50" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsHeight(false)" value="30" />
				<AssertMethodValue method="value=application.mr.getMaxBoundsWidth(true)" value="30000" />				
				<AssertMethodValue method="value=application.mr.getMaxBoundsHeight(true)" value="10000" />
				<AssertMethodValue method="value=application.mr.getMaxBoundsWidth(false)" value="10000" />				
				<AssertMethodValue method="value=application.mr.getMaxBoundsHeight(false)" value="10000" />
				<AssertMethodValue method="value=application.mr.getMinBoundsWidth(true)" value="0" />				
				<AssertMethodValue method="value=application.mr.getMinBoundsHeight(true)" value="0" />
				<AssertMethodValue method="value=application.mr.getMinBoundsWidth(false)" value="0" />									
				<AssertMethodValue method="value=application.mr.getMinBoundsHeight(false)" value="0" />		
			</body>
		</TestCase>

		<TestCase testID="bottom_right_scaleY_Rect" keywords="[Rect, bottom, right, scaleY, layout]" description="bottom, right, scaleY give correct size and x y">
			<setup>
				<ResetComponent target="mr" className="comps.MyRect" waitEvent="updateComplete" waitTarget="mr"/>
				<SetProperty propertyName="bottom" value="25" target="mr" waitEvent="updateComplete" waitTarget="mr"/>
				<SetProperty propertyName="right" value="32" target="mr" waitEvent="updateComplete" waitTarget="mr"/>
				<SetProperty propertyName="scaleY" value="3" target="mr" waitEvent="updateComplete" waitTarget="mr"/>
			</setup>
			<body>
				<AssertMethodValue method="value=application.mr.getLayoutBoundsX(true)" value="418" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsY(true)" value="385" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsX(false)" value="418" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsY(false)" value="385" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsWidth(true)" value="50" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsHeight(true)" value="90" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsWidth(false)" value="50" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsHeight(false)" value="30" />
				<AssertMethodValue method="value=application.mr.getMaxBoundsWidth(true)" value="10000" />				
				<AssertMethodValue method="value=application.mr.getMaxBoundsHeight(true)" value="30000" />
				<AssertMethodValue method="value=application.mr.getMaxBoundsWidth(false)" value="10000" />				
				<AssertMethodValue method="value=application.mr.getMaxBoundsHeight(false)" value="10000" />
				<AssertMethodValue method="value=application.mr.getMinBoundsWidth(true)" value="0" />				
				<AssertMethodValue method="value=application.mr.getMinBoundsHeight(true)" value="0" />
				<AssertMethodValue method="value=application.mr.getMinBoundsWidth(false)" value="0" />									
				<AssertMethodValue method="value=application.mr.getMinBoundsHeight(false)" value="0" />		
			</body>
		</TestCase>

		<TestCase testID="top_bottom_scaleX_Rect" keywords="[Rect, bottom, top, scaleX,layout]" description="bottom, top, scaleX give correct size and x y">
			<setup>
				<ResetComponent target="mr" className="comps.MyRect" waitEvent="updateComplete" waitTarget="mr"/>
				<SetProperty propertyName="bottom" value="25" target="mr" waitEvent="updateComplete" waitTarget="mr"/>
				<SetProperty propertyName="top" value="32" target="mr" waitEvent="updateComplete" waitTarget="mr"/>
				<SetProperty propertyName="scaleX" value="3" target="mr" waitEvent="updateComplete" waitTarget="mr"/>
			</setup>
			<body>
				<AssertMethodValue method="value=application.mr.getLayoutBoundsX(true)" value="0" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsY(true)" value="32" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsX(false)" value="0" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsY(false)" value="32" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsWidth(true)" value="150" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsHeight(true)" value="443" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsWidth(false)" value="50" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsHeight(false)" value="443" />
				<AssertMethodValue method="value=application.mr.getMaxBoundsWidth(true)" value="30000" />				
				<AssertMethodValue method="value=application.mr.getMaxBoundsHeight(true)" value="10000" />
				<AssertMethodValue method="value=application.mr.getMaxBoundsWidth(false)" value="10000" />				
				<AssertMethodValue method="value=application.mr.getMaxBoundsHeight(false)" value="10000" />
				<AssertMethodValue method="value=application.mr.getMinBoundsWidth(true)" value="0" />				
				<AssertMethodValue method="value=application.mr.getMinBoundsHeight(true)" value="0" />
				<AssertMethodValue method="value=application.mr.getMinBoundsWidth(false)" value="0" />									
				<AssertMethodValue method="value=application.mr.getMinBoundsHeight(false)" value="0" />		
			</body>
		</TestCase>

		<TestCase testID="top_bottom_scaleY_Rect" keywords="[Rect, bottom, top, scaleY, layout]" description="bottom, top, scaleY give correct size and x y">
			<setup>
				<ResetComponent target="mr" className="comps.MyRect" waitEvent="updateComplete" waitTarget="mr"/>
				<SetProperty propertyName="bottom" value="25" target="mr" waitEvent="updateComplete" waitTarget="mr"/>
				<SetProperty propertyName="top" value="32" target="mr" waitEvent="updateComplete" waitTarget="mr"/>
				<SetProperty propertyName="scaleY" value="4" target="mr" waitEvent="updateComplete" waitTarget="mr"/>
			</setup>
			<body>
				<AssertMethodValue method="value=application.mr.getLayoutBoundsX(true)" value="0" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsY(true)" value="32" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsX(false)" value="0" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsY(false)" value="32" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsWidth(true)" value="50" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsHeight(true)" value="443" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsWidth(false)" value="50" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsHeight(false)" value="110.75" />
				<AssertMethodValue method="value=application.mr.getMaxBoundsWidth(true)" value="10000" />				
				<AssertMethodValue method="value=application.mr.getMaxBoundsHeight(true)" value="40000" />
				<AssertMethodValue method="value=application.mr.getMaxBoundsWidth(false)" value="10000" />				
				<AssertMethodValue method="value=application.mr.getMaxBoundsHeight(false)" value="10000" />
				<AssertMethodValue method="value=application.mr.getMinBoundsWidth(true)" value="0" />				
				<AssertMethodValue method="value=application.mr.getMinBoundsHeight(true)" value="0" />
				<AssertMethodValue method="value=application.mr.getMinBoundsWidth(false)" value="0" />									
				<AssertMethodValue method="value=application.mr.getMinBoundsHeight(false)" value="0" />		
			</body>
		</TestCase>

		<TestCase testID="top_bottom_scaleX_scaleY_Rect" keywords="[Rect, bottom, top, scaleX, scaleY, layout]" description="scaleX, bottom, top, scaleY give correct size and x y">
			<setup>
				<ResetComponent target="mr" className="comps.MyRect" waitEvent="updateComplete" waitTarget="mr"/>
				<SetProperty propertyName="bottom" value="25" target="mr" waitEvent="updateComplete" waitTarget="mr"/>
				<SetProperty propertyName="top" value="32" target="mr" waitEvent="updateComplete" waitTarget="mr"/>
				<SetProperty propertyName="scaleX" value="3" target="mr" waitEvent="updateComplete" waitTarget="mr"/>
				<SetProperty propertyName="scaleY" value="4" target="mr" waitEvent="updateComplete" waitTarget="mr"/>
			</setup>
			<body>
				<AssertMethodValue method="value=application.mr.getLayoutBoundsX(true)" value="0" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsY(true)" value="32" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsX(false)" value="0" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsY(false)" value="32" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsWidth(true)" value="150" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsHeight(true)" value="443" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsWidth(false)" value="50" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsHeight(false)" value="110.75" />
				<AssertMethodValue method="value=application.mr.getMaxBoundsWidth(true)" value="30000" />				
				<AssertMethodValue method="value=application.mr.getMaxBoundsHeight(true)" value="40000" />
				<AssertMethodValue method="value=application.mr.getMaxBoundsWidth(false)" value="10000" />				
				<AssertMethodValue method="value=application.mr.getMaxBoundsHeight(false)" value="10000" />
				<AssertMethodValue method="value=application.mr.getMinBoundsWidth(true)" value="0" />				
				<AssertMethodValue method="value=application.mr.getMinBoundsHeight(true)" value="0" />
				<AssertMethodValue method="value=application.mr.getMinBoundsWidth(false)" value="0" />									
				<AssertMethodValue method="value=application.mr.getMinBoundsHeight(false)" value="0" />		
			</body>
		</TestCase>

		<TestCase testID="left_right_scaleX_Rect" keywords="[Rect, left, right, scaleX, layout]" description="left, right, scaleX give correct size and x y">
			<setup>
				<ResetComponent target="mr" className="comps.MyRect" waitEvent="updateComplete" waitTarget="mr"/>
				<SetProperty propertyName="right" value="25" target="mr" waitEvent="updateComplete" waitTarget="mr"/>
				<SetProperty propertyName="left" value="32" target="mr" waitEvent="updateComplete" waitTarget="mr"/>
				<SetProperty propertyName="scaleX" value="4" target="mr" waitEvent="updateComplete" waitTarget="mr"/>
				<SetProperty propertyName="scaleY" value="3" target="mr" waitEvent="updateComplete" waitTarget="mr"/>
			</setup>
			<body>
				<AssertMethodValue method="value=application.mr.getLayoutBoundsX(true)" value="32" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsY(true)" value="0" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsX(false)" value="32" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsY(false)" value="0" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsWidth(true)" value="443" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsHeight(true)" value="90" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsWidth(false)" value="110.75" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsHeight(false)" value="30" />
				<AssertMethodValue method="value=application.mr.getMaxBoundsWidth(true)" value="40000" />				
				<AssertMethodValue method="value=application.mr.getMaxBoundsHeight(true)" value="30000" />
				<AssertMethodValue method="value=application.mr.getMaxBoundsWidth(false)" value="10000" />				
				<AssertMethodValue method="value=application.mr.getMaxBoundsHeight(false)" value="10000" />
				<AssertMethodValue method="value=application.mr.getMinBoundsWidth(true)" value="0" />				
				<AssertMethodValue method="value=application.mr.getMinBoundsHeight(true)" value="0" />
				<AssertMethodValue method="value=application.mr.getMinBoundsWidth(false)" value="0" />									
				<AssertMethodValue method="value=application.mr.getMinBoundsHeight(false)" value="0" />		
			</body>
		</TestCase>

		<TestCase testID="left_right_scaleY_Rect" keywords="[Rect, left, right, scaleY, layout]" description="left, right, scaleY give correct size and x y">
			<setup>
				<ResetComponent target="mr" className="comps.MyRect" waitEvent="updateComplete" waitTarget="mr"/>
				<SetProperty propertyName="right" value="25" target="mr" waitEvent="updateComplete" waitTarget="mr"/>
				<SetProperty propertyName="left" value="32" target="mr" waitEvent="updateComplete" waitTarget="mr"/>
				<SetProperty propertyName="scaleY" value="3" target="mr" waitEvent="updateComplete" waitTarget="mr"/>
			</setup>
			<body>
				<AssertMethodValue method="value=application.mr.getLayoutBoundsX(true)" value="32" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsY(true)" value="0" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsX(false)" value="32" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsY(false)" value="0" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsWidth(true)" value="443" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsHeight(true)" value="90" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsWidth(false)" value="443" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsHeight(false)" value="30" />
				<AssertMethodValue method="value=application.mr.getMaxBoundsWidth(true)" value="10000" />				
				<AssertMethodValue method="value=application.mr.getMaxBoundsHeight(true)" value="30000" />
				<AssertMethodValue method="value=application.mr.getMaxBoundsWidth(false)" value="10000" />				
				<AssertMethodValue method="value=application.mr.getMaxBoundsHeight(false)" value="10000" />
				<AssertMethodValue method="value=application.mr.getMinBoundsWidth(true)" value="0" />				
				<AssertMethodValue method="value=application.mr.getMinBoundsHeight(true)" value="0" />
				<AssertMethodValue method="value=application.mr.getMinBoundsWidth(false)" value="0" />									
				<AssertMethodValue method="value=application.mr.getMinBoundsHeight(false)" value="0" />		
			</body>
		</TestCase>

		<TestCase testID="left_right_scaleX_scaleY_Rect" keywords="[Rect, left, right, scaleX, scaleY, layout]" description="left, right, scaleX, scaleY give correct size and x y">
			<setup>
				<ResetComponent target="mr" className="comps.MyRect" waitEvent="updateComplete" waitTarget="mr"/>
				<SetProperty propertyName="right" value="25" target="mr" waitEvent="updateComplete" waitTarget="mr"/>
				<SetProperty propertyName="left" value="32" target="mr" waitEvent="updateComplete" waitTarget="mr"/>
				<SetProperty propertyName="scaleX" value="4" target="mr" waitEvent="updateComplete" waitTarget="mr"/>
				<SetProperty propertyName="scaleY" value="3" target="mr" waitEvent="updateComplete" waitTarget="mr"/>
			</setup>
			<body>
				<AssertMethodValue method="value=application.mr.getLayoutBoundsX(true)" value="32" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsY(true)" value="0" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsX(false)" value="32" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsY(false)" value="0" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsWidth(true)" value="443" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsHeight(true)" value="90" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsWidth(false)" value="110.75" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsHeight(false)" value="30" />
				<AssertMethodValue method="value=application.mr.getMaxBoundsWidth(true)" value="40000" />				
				<AssertMethodValue method="value=application.mr.getMaxBoundsHeight(true)" value="30000" />
				<AssertMethodValue method="value=application.mr.getMaxBoundsWidth(false)" value="10000" />				
				<AssertMethodValue method="value=application.mr.getMaxBoundsHeight(false)" value="10000" />
				<AssertMethodValue method="value=application.mr.getMinBoundsWidth(true)" value="0" />				
				<AssertMethodValue method="value=application.mr.getMinBoundsHeight(true)" value="0" />
				<AssertMethodValue method="value=application.mr.getMinBoundsWidth(false)" value="0" />									
				<AssertMethodValue method="value=application.mr.getMinBoundsHeight(false)" value="0" />		
			</body>
		</TestCase>

		<TestCase testID="x_y_scaleX_scaleY_Rect" keywords="[Rect, x, y, scaleX, scaleY, layout]" description="x, y, scaleX, scaleY give correct size and x y">
			<setup>
				<ResetComponent target="mr" className="comps.MyRect" waitEvent="updateComplete" waitTarget="mr"/>
				<SetProperty propertyName="x" value="25" target="mr" waitEvent="updateComplete" waitTarget="mr"/>
				<SetProperty propertyName="y" value="32" target="mr" waitEvent="updateComplete" waitTarget="mr"/>
				<SetProperty propertyName="scaleX" value="4" target="mr" waitEvent="updateComplete" waitTarget="mr"/>
				<SetProperty propertyName="scaleY" value="3" target="mr" waitEvent="updateComplete" waitTarget="mr"/>
			</setup>
			<body>
				<AssertMethodValue method="value=application.mr.getLayoutBoundsX(true)" value="25" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsY(true)" value="32" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsX(false)" value="25" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsY(false)" value="32" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsWidth(true)" value="200" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsHeight(true)" value="90" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsWidth(false)" value="50" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsHeight(false)" value="30" />
				<AssertMethodValue method="value=application.mr.getMaxBoundsWidth(true)" value="40000" />				
				<AssertMethodValue method="value=application.mr.getMaxBoundsHeight(true)" value="30000" />
				<AssertMethodValue method="value=application.mr.getMaxBoundsWidth(false)" value="10000" />				
				<AssertMethodValue method="value=application.mr.getMaxBoundsHeight(false)" value="10000" />
				<AssertMethodValue method="value=application.mr.getMinBoundsWidth(true)" value="0" />				
				<AssertMethodValue method="value=application.mr.getMinBoundsHeight(true)" value="0" />
				<AssertMethodValue method="value=application.mr.getMinBoundsWidth(false)" value="0" />									
				<AssertMethodValue method="value=application.mr.getMinBoundsHeight(false)" value="0" />		
			</body>
		</TestCase>

		<TestCase testID="x_y_scaleX_scaleY_rotation_Rect" keywords="[Rect, x, y, scaleX, scaleY, layout]" description="x, y, scaleX, scaleY give correct size and x y">
			<setup>
				<ResetComponent target="mr" className="comps.MyRect" waitEvent="updateComplete" waitTarget="mr"/>
				<SetProperty propertyName="x" value="25" target="mr" waitEvent="updateComplete" waitTarget="mr"/>
				<SetProperty propertyName="y" value="32" target="mr" waitEvent="updateComplete" waitTarget="mr"/>
				<SetProperty propertyName="scaleX" value="4" target="mr" waitEvent="updateComplete" waitTarget="mr"/>
				<SetProperty propertyName="scaleY" value="3" target="mr" waitEvent="updateComplete" waitTarget="mr"/>
				<SetProperty propertyName="rotation" value="45" target="mr" waitEvent="updateComplete" waitTarget="mr"/>
			</setup>
			<body>
				<AssertMethodValue method="value=application.mr.getLayoutBoundsX(true)" value="-38.639610" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsY(true)" value="32" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsX(false)" value="25" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsY(false)" value="32" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsWidth(true)" value="205.060967" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsHeight(true)" value="205.060967" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsWidth(false)" value="50" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsHeight(false)" value="30" />
				<AssertMethodValue method="value=application.mr.getMaxBoundsWidth(true)" value="49497.474683" />				
				<AssertMethodValue method="value=application.mr.getMaxBoundsHeight(true)" value="49497.474683" />
				<AssertMethodValue method="value=application.mr.getMaxBoundsWidth(false)" value="10000" />				
				<AssertMethodValue method="value=application.mr.getMaxBoundsHeight(false)" value="10000" />
				<AssertMethodValue method="value=application.mr.getMinBoundsWidth(true)" value="0" />				
				<AssertMethodValue method="value=application.mr.getMinBoundsHeight(true)" value="0" />
				<AssertMethodValue method="value=application.mr.getMinBoundsWidth(false)" value="0" />									
				<AssertMethodValue method="value=application.mr.getMinBoundsHeight(false)" value="0" />		
			</body>
		</TestCase>
		<TestCase testID="x_y_scaleX_scaleY_rotation_transformX_transformY_Rect" keywords="[Rect, x, y, scaleX, scaleY, layout]" description="x, y, scaleX, scaleY give correct size and x y">
			<setup>
				<ResetComponent target="mr" className="comps.MyRect" waitEvent="updateComplete" waitTarget="mr"/>
				<SetProperty propertyName="x" value="25" target="mr" waitEvent="updateComplete" waitTarget="mr"/>
				<SetProperty propertyName="y" value="32" target="mr" waitEvent="updateComplete" waitTarget="mr"/>
				<SetProperty propertyName="scaleX" value="4" target="mr" waitEvent="updateComplete" waitTarget="mr"/>
				<SetProperty propertyName="scaleY" value="3" target="mr" waitEvent="updateComplete" waitTarget="mr"/>
				<SetProperty propertyName="transformX" value="5" target="mr" waitEvent="updateComplete" waitTarget="mr"/>
				<SetProperty propertyName="transformY" value="5" target="mr" waitEvent="updateComplete" waitTarget="mr"/>
				<SetProperty propertyName="rotation" value="45" target="mr" waitEvent="updateComplete" waitTarget="mr"/>
			</setup>
			<body>
				<AssertMethodValue method="value=application.mr.getLayoutBoundsX(true)" value="-37.175144" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsY(true)" value="12.251263" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsX(false)" value="25" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsY(false)" value="32" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsWidth(true)" value="205.060967" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsHeight(true)" value="205.060967" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsWidth(false)" value="50" />
				<AssertMethodValue method="value=application.mr.getLayoutBoundsHeight(false)" value="30" />
				<AssertMethodValue method="value=application.mr.getMaxBoundsWidth(true)" value="49497.474683" />				
				<AssertMethodValue method="value=application.mr.getMaxBoundsHeight(true)" value="49497.474683" />
				<AssertMethodValue method="value=application.mr.getMaxBoundsWidth(false)" value="10000" />				
				<AssertMethodValue method="value=application.mr.getMaxBoundsHeight(false)" value="10000" />
				<AssertMethodValue method="value=application.mr.getMinBoundsWidth(true)" value="0" />				
				<AssertMethodValue method="value=application.mr.getMinBoundsHeight(true)" value="0" />
				<AssertMethodValue method="value=application.mr.getMinBoundsWidth(false)" value="0" />									
				<AssertMethodValue method="value=application.mr.getMinBoundsHeight(false)" value="0" />		
			</body>
		</TestCase>
	</testCases>
</UnitTester>