<?xml version="1.0" encoding="utf-8"?>
<!--

  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.

-->
<UnitTester testDir="gumbo/layout/GraphicElement/methods/"  xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:mx="library://ns.adobe.com/flex/mx" xmlns:s="library://ns.adobe.com/flex/spark"  xmlns:m="http://ns.adobe.com/mxml/2009" xmlns="*" testSWF="LayoutGraphicElement_main.mxml">
        <!-- this set of lines form a template that must be in each unit test -->
        <fx:Script>
            <![CDATA[
                  public static function init(o:DisplayObject):void {}
            ]]>
        </fx:Script>
        <fx:Metadata>
            <![CDATA[
               [Mixin]
            ]]>
        </fx:Metadata>
        <!-- end of set of lines that must be in each unit test -->
        <fx:Script>
            <![CDATA[
                import mx.geom.Transform;
                
                private var m:Matrix;
                
            ]]>
        </fx:Script>
    <testCases>
    
    	<!--*****************-->
        <!--setLayoutBoundsPosition-->
        <!--*****************-->
	<TestCase testID="Ellipse_transform_translation_setLayoutBoundsPosition" keywords="[transform, methods, layoutGraphicElement]" description="Call actualPosition after setting x and y via transform matrix">
        	<setup> 
           		<ResetComponent target="pan" className="comps.MyGroup" waitEvent="updateComplete" waitTarget="pan"/>
           		<RunCode code="application.pan.e1.setLayoutBoundsPosition(20, 30)"/>
        	</setup>
            	<body>
                	<AssertPropertyValue propertyName="x" target="pan.e1" value="20" />
                	<AssertPropertyValue propertyName="y" target="pan.e1" value="30" />
            	</body>
        </TestCase>
       
	<TestCase testID="Ellipse_transform_scalingX_matrix_setLayoutBoundsPosition" keywords="[transform, methods, layoutGraphicElement]" description="Call actualPosition after scaling the button via transform matrix">
		<setup> 
			<ResetComponent target="pan" className="comps.MyGroup" waitEvent="updateComplete" waitTarget="pan"/>
			<SetProperty propertyName="includeInLayout" value="false" target="pan.e1"/>
			<SetProperty propertyName="scaleX" target="pan.e1" value="5"/>
			<SetProperty propertyName="scaleY" target="pan.e1" value="1" waitEvent="updateComplete" waitTarget="pan"/>
			
			<RunCode code="application.pan.e1.setLayoutBoundsPosition(20,30)"/>
		</setup>
		<body>
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsX()" value="20" />
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsY()" value="30" />
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsX(false)" value="20" />
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsY(false)" value="30" />
		</body>
        </TestCase>
        <TestCase testID="Ellipse_transform_scalingX_matrix_setLayoutBoundsPosition_pretransform" keywords="[transform, methods, layoutGraphicElement]" description="Call actualPosition after scaling the button via transform matrix">
		<setup> 
			<ResetComponent target="pan" className="comps.MyGroup" waitEvent="updateComplete" waitTarget="pan"/>
			<SetProperty propertyName="includeInLayout" value="false" target="pan.e1"/>
			<SetProperty propertyName="scaleX" target="pan.e1" value="5"/>
			<SetProperty propertyName="scaleY" target="pan.e1" value="1" waitEvent="updateComplete" waitTarget="pan"/>

			<RunCode code="application.pan.e1.setLayoutBoundsPosition(20,30, false)"/>
		</setup>
		<body>
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsX()" value="20" />
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsY()" value="30" />
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsX(false)" value="20" />
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsY(false)" value="30" />
		</body>
        </TestCase>
        
	<TestCase testID="Ellipse_transform_scalingY_matrix_setLayoutBoundsPosition" keywords="[transform, methods, layoutGraphicElement]" description="Call actualPosition after scaling the button via transform matrix">
		<setup> 
			<ResetComponent target="pan" className="comps.MyGroup" waitEvent="updateComplete" waitTarget="pan"/>
			<SetProperty propertyName="includeInLayout" value="false" target="pan.e1"/>
			<RunCode code="application.pan.e1.setLayoutBoundsPosition(20,30)"/>
			<SetProperty propertyName="scaleX" target="pan.e1" value="1"/>
			<SetProperty propertyName="scaleY" target="pan.e1" value="3" waitEvent="updateComplete" waitTarget="pan"/>
			
		</setup>
		<body>
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsX()" value="20" />
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsY()" value="30" />
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsX(false)" value="20" />
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsY(false)" value="30" />
		</body>
        </TestCase>
        
        <TestCase testID="Ellipse_transform_scalingY_matrix_setLayoutBoundsPosition_pretransform" keywords="[transform, methods, layoutGraphicElement]" description="Call actualPosition after scaling the button via transform matrix">
		<setup> 
			<ResetComponent target="pan" className="comps.MyGroup" waitEvent="updateComplete" waitTarget="pan"/>
			<SetProperty propertyName="includeInLayout" value="false" target="pan.e1"/>
			<RunCode code="application.pan.e1.setLayoutBoundsPosition(20,30, false)"/>
			<SetProperty propertyName="scaleX" target="pan.e1" value="1"/>
			<SetProperty propertyName="scaleY" target="pan.e1" value="3" waitEvent="updateComplete" waitTarget="pan"/>

		</setup>
		<body>
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsX()" value="20" />
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsY()" value="30" />
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsX(false)" value="20" />
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsY(false)" value="30" />
		</body>
        </TestCase>
	<TestCase testID="Ellipse_transform_scaling_scaleX_setLayoutBoundsPosition" keywords="[transform, setLayoutBoundsPosition, methods, layoutGraphicElement]" description="Call actualPosition after scaling the button via transform matrix">
		<setup> 
			<ResetComponent target="pan" className="comps.MyGroup" waitEvent="updateComplete" waitTarget="pan"/>
			<SetProperty propertyName="includeInLayout" value="false" target="pan.e1"/>
			<RunCode code="application.pan.e1.setLayoutBoundsPosition(20,30)"/>
			<SetProperty propertyName="scaleX" value="5" target="pan.e1" waitEvent="updateComplete" waitTarget="pan.e1"/>
		</setup>
		<body>
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsX()" value="20" />
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsY()" value="30" />
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsX(false)" value="20" />
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsY(false)" value="30" />
		</body>
        </TestCase>
        <TestCase testID="Ellipse_transform_scaling_scaleX_setLayoutBoundsPosition_pretransform" keywords="[transform, setLayoutBoundsPosition, methods, layoutGraphicElement]" description="Call actualPosition after scaling the button via transform matrix">
		<setup> 
			<ResetComponent target="pan" className="comps.MyGroup" waitEvent="updateComplete" waitTarget="pan"/>
			<SetProperty propertyName="includeInLayout" value="false" target="pan.e1"/>
			<RunCode code="application.pan.e1.setLayoutBoundsPosition(20,30)"/>
			<SetProperty propertyName="scaleX" value="5" target="pan.e1" waitEvent="updateComplete" waitTarget="pan.e1"/>
		</setup>
		<body>
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsX()" value="20" />
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsY()" value="30" />
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsX(false)" value="20" />
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsY(false)" value="30" />
		</body>
        </TestCase>
        <TestCase testID="Ellipse_transform_scaling_scaleY_setLayoutBoundsPosition" keywords="[transform, setLayoutBoundsPosition, methods, layoutGraphicElement]" description="Call actualPosition after scaling the button via transform matrix">
		<setup> 
			<ResetComponent target="pan" className="comps.MyGroup" waitEvent="updateComplete" waitTarget="pan"/>
			<SetProperty propertyName="includeInLayout" value="false" target="pan.e1"/>
			<RunCode code="application.pan.e1.setLayoutBoundsPosition(20,30)"/>
			<SetProperty propertyName="scaleY" value="3" target="pan.e1" waitEvent="updateComplete" waitTarget="pan.e1"/>
		</setup>
		<body>
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsX()" value="20" />
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsY()" value="30" />
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsX(false)" value="20" />
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsY(false)" value="30" />
		</body>
        </TestCase>

        <TestCase testID="Ellipse_transform_scaling_scaleY_setLayoutBoundsPosition_pretransform" keywords="[transform, setLayoutBoundsPosition, methods, layoutGraphicElement]" description="Call actualPosition after scaling the button via transform matrix">
		<setup> 
			<ResetComponent target="pan" className="comps.MyGroup" waitEvent="updateComplete" waitTarget="pan"/>
			<SetProperty propertyName="includeInLayout" value="false" target="pan.e1"/>
			<RunCode code="application.pan.e1.setLayoutBoundsPosition(20,30, false)"/>
			<SetProperty propertyName="scaleY" value="3" target="pan.e1" waitEvent="updateComplete" waitTarget="pan.e1"/>
		</setup>
		<body>
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsX()" value="20" />
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsY()" value="30" />
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsX(false)" value="20" />
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsY(false)" value="30" />
		</body>
        </TestCase>
        
	<TestCase testID="Ellipse_transform_rotation_setLayoutBoundsPosition_90degrees" keywords="[transform, setLayoutBoundsPosition, methods, layoutGraphicElement]" description="Call actualPosition after scaling the button via transform matrix">
		<setup> 
			<ResetComponent target="pan" className="comps.MyGroup" waitEvent="updateComplete" waitTarget="pan"/>
			<SetProperty propertyName="includeInLayout" value="false" target="pan.e1"/>
			<RunCode code="application.pan.e1.setLayoutBoundsPosition(20,30)"/>
			<SetProperty propertyName="rotation" value="90" target="pan.e1" waitEvent="updateComplete" waitTarget="pan.e1"/>
		</setup>
		<body>
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsX().toFixed(0)" value="-2" />
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsY()" value="30" />
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsX(false)" value="20" />
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsY(false)" value="30" />
		</body>
        </TestCase>
        
        <TestCase testID="Ellipse_transform_rotation_setLayoutBoundsPosition_90degrees_pretransform" keywords="[transform, setLayoutBoundsPosition, methods, layoutGraphicElement]" description="Call actualPosition after scaling the button via transform matrix">
		<setup> 
			<ResetComponent target="pan" className="comps.MyGroup" waitEvent="updateComplete" waitTarget="pan"/>
			<SetProperty propertyName="includeInLayout" value="false" target="pan.e1"/>
			<RunCode code="application.pan.e1.setLayoutBoundsPosition(20,30, false)"/>
			<SetProperty propertyName="rotation" value="90" target="pan.e1" waitEvent="updateComplete" waitTarget="pan.e1"/>
		</setup>
		<body>
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsX().toFixed(0)" value="-2" />
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsY()" value="30" />
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsX(false)" value="20" />
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsY(false)" value="30" />
		</body>
        </TestCase>
       
        <TestCase testID="Ellipse_transform_rotating_setLayoutBoundsPosition_45degrees" keywords="[transform, setLayoutBoundsPosition, methods, layoutGraphicElement]" description="Call actualPosition after scaling the button via transform matrix">
		<setup> 
			<ResetComponent target="pan" className="comps.MyGroup" waitEvent="updateComplete" waitTarget="pan"/>
			<SetProperty propertyName="includeInLayout" value="false" target="pan.e1"/>
			<RunCode code="application.pan.e1.setLayoutBoundsPosition(20,30)" />
			<SetProperty propertyName="rotation" value="45" target="pan.e1" waitEvent="updateComplete" waitTarget="pan.e1"/>
		</setup>
		<body>
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsX()" value="10.223949" />
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsY()" value="35.780298" />
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsX(false)" value="20" />
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsY(false)" value="30" />
		</body>
        </TestCase>
        
        <TestCase testID="Ellipse_transform_rotating_setLayoutBoundsPosition_45degrees_pretransform" keywords="[transform, setLayoutBoundsPosition, methods, layoutGraphicElement]" description="Call actualPosition after scaling the button via transform matrix">
		<setup> 
			<ResetComponent target="pan" className="comps.MyGroup" waitEvent="updateComplete" waitTarget="pan"/>
			<SetProperty propertyName="includeInLayout" value="false" target="pan.e1"/>
			<RunCode code="application.pan.e1.setLayoutBoundsPosition(20,30, false)" />
			<SetProperty propertyName="rotation" value="45" target="pan.e1" waitEvent="updateComplete" waitTarget="pan.e1"/>
		</setup>
		<body>
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsX()" value="10.223949" />
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsY()" value="35.780298" />
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsX(false)" value="20" />
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsY(false)" value="30" />
		</body>
        </TestCase>
        <TestCase testID="Ellipse_transform_rotating_setLayoutBoundsPosition_45degrees_scale2x" keywords="[transform, setLayoutBoundsPosition, methods, layoutGraphicElement]" description="Call actualPosition after scaling the button via transform matrix">
		<setup> 
			<ResetComponent target="pan" className="comps.MyGroup" waitEvent="updateComplete" waitTarget="pan"/>
			<SetProperty propertyName="includeInLayout" value="false" target="pan.e1"/>
			<RunCode code="application.pan.e1.setLayoutBoundsPosition(20,30)"/>
			<SetProperty propertyName="rotation" value="45" target="pan.e1"/>
			<SetProperty propertyName="scaleX" value="2" target="pan.e1" waitEvent="updateComplete" waitTarget="pan.e1"/>
		</setup>
		<body>
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsX()" value="11.171816" />
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsY()" value="36.728166" />
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsX(false)" value="20" />
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsY(false)" value="30" />
		</body>
        </TestCase>
        <TestCase testID="Ellipse_transform_rotating_setLayoutBoundsPosition_45degrees_scale2x_pretransform" keywords="[transform, setLayoutBoundsPosition, methods, layoutGraphicElement]" description="Call actualPosition after scaling the button via transform matrix">
		<setup> 
			<ResetComponent target="pan" className="comps.MyGroup" waitEvent="updateComplete" waitTarget="pan"/>
			<SetProperty propertyName="includeInLayout" value="false" target="pan.e1"/>
			<RunCode code="application.pan.e1.setLayoutBoundsPosition(20,30, false)"/>
			<SetProperty propertyName="rotation" value="45" target="pan.e1"/>
			<SetProperty propertyName="scaleX" value="2" target="pan.e1" waitEvent="updateComplete" waitTarget="pan.e1"/>
		</setup>
		<body>
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsX()" value="11.171816" />
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsY()" value="36.728166" />
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsX(false)" value="20" />
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsY(false)" value="30" />
		</body>
	</TestCase>
        
         <TestCase testID="Ellipse_transform_rotating_setLayoutBoundsPosition_45degrees_scale2y" keywords="[transform, setLayoutBoundsPosition, methods, layoutGraphicElement]" description="Call actualPosition after scaling the button via transform matrix">
		<setup> 
			<ResetComponent target="pan" className="comps.MyGroup" waitEvent="updateComplete" waitTarget="pan"/>
			<SetProperty propertyName="includeInLayout" value="false" target="pan.e1"/>
			<RunCode code="application.pan.e1.setLayoutBoundsPosition(20,30)"/>
			<SetProperty propertyName="rotation" value="45" target="pan.e1"/>
			<SetProperty propertyName="scaleY" value="2" target="pan.e1" waitEvent="updateComplete" waitTarget="pan.e1"/>
		</setup>
		<body>
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsX()" value="-2.438010" />
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsY()" value="38.674689" />
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsX(false)" value="20" />
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsY(false)" value="30" />
		</body>
        </TestCase>
        <TestCase testID="Ellipse_transform_rotating_setLayoutBoundsPosition_45degrees_scale2y_pretransform" keywords="[transform, setLayoutBoundsPosition, methods, layoutGraphicElement]" description="Call actualPosition after scaling the button via transform matrix">
		<setup> 
			<ResetComponent target="pan" className="comps.MyGroup" waitEvent="updateComplete" waitTarget="pan"/>
			<SetProperty propertyName="includeInLayout" value="false" target="pan.e1"/>
			<RunCode code="application.pan.e1.setLayoutBoundsPosition(20,30, false)"/>
			<SetProperty propertyName="rotation" value="45" target="pan.e1"/>
			<SetProperty propertyName="scaleY" value="2" target="pan.e1" waitEvent="updateComplete" waitTarget="pan.e1"/>
		</setup>
		<body>
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsX()" value="-2.438010" />
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsY()" value="38.674689" />
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsX(false)" value="20" />
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsY(false)" value="30" />
		</body>
        </TestCase>
        <TestCase testID="Ellipse_transform_rotating_setLayoutBoundsPosition_45degrees_scale2x_translatex5" keywords="[transform, setLayoutBoundsPosition, methods, layoutGraphicElement]" description="Call actualPosition after scaling the button via transform matrix">
		<setup> 
			<ResetComponent target="pan" className="comps.MyGroup" waitEvent="updateComplete" waitTarget="pan"/>
			<SetProperty propertyName="includeInLayout" value="false" target="pan.e1"/>
			<RunCode code="application.pan.e1.setLayoutBoundsPosition(20,30)"/>
			<SetProperty propertyName="rotation" value="45" target="pan.e1"/>
			<SetProperty propertyName="scaleX" value="2" target="pan.e1"/>
			<SetProperty propertyName="x" value="5" target="pan.e1" waitEvent="updateComplete" waitTarget="pan.e1"/>
		</setup>
		<body>
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsX()" value="-3.828184" />
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsY()" value="36.728166" />
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsX(false)" value="5" />
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsY(false)" value="30" />
		</body>
	</TestCase>
	<TestCase testID="Ellipse_transform_rotating_setLayoutBoundsPosition_45degrees_scale2x_translatex5_pretransform" keywords="[transform, setLayoutBoundsPosition, methods, layoutGraphicElement]" description="Call actualPosition after scaling the button via transform matrix">
		<setup> 
			<ResetComponent target="pan" className="comps.MyGroup" waitEvent="updateComplete" waitTarget="pan"/>
			<SetProperty propertyName="includeInLayout" value="false" target="pan.e1"/>
			<RunCode code="application.pan.e1.setLayoutBoundsPosition(20,30, false)"/>
			<SetProperty propertyName="rotation" value="45" target="pan.e1"/>
			<SetProperty propertyName="scaleX" value="2" target="pan.e1"/>
			<SetProperty propertyName="x" value="5" target="pan.e1" waitEvent="updateComplete" waitTarget="pan.e1"/>
		</setup>
		<body>
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsX()" value="-3.828184" />
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsY()" value="36.728166" />
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsX(false)" value="5" />
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsY(false)" value="30" />
		</body>
	</TestCase>
	<TestCase testID="Ellipse_transform_rotating_setLayoutBoundsPosition_45degrees_scale2y_translatey5" keywords="[transform, setLayoutBoundsPosition, methods, layoutGraphicElement]" description="Call actualPosition after scaling the button via transform matrix">
		<setup> 
			<ResetComponent target="pan" className="comps.MyGroup" waitEvent="updateComplete" waitTarget="pan"/>
			<SetProperty propertyName="includeInLayout" value="false" target="pan.e1"/>
			<RunCode code="application.pan.e1.setLayoutBoundsPosition(20,30)" />
			<SetProperty propertyName="rotation" value="45" target="pan.e1"/>
			<SetProperty propertyName="y" value="5" target="pan.e1" />
			<SetProperty propertyName="scaleY" value="2" target="pan.e1" waitEvent="updateComplete" waitTarget="pan"/>
		</setup>
		<body>
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsX()" value="-2.438010" />
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsY()" value="13.674689" />
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsX(false)" value="20" />
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsY(false)" value="5" />
		</body>
	</TestCase>       
	<TestCase testID="Ellipse_transform_rotating_setLayoutBoundsPosition_45degrees_scale2y_translatey5_pretransform" keywords="[transform, setLayoutBoundsPosition, methods, layoutGraphicElement]" description="Call actualPosition after scaling the button via transform matrix">
		<setup> 
			<ResetComponent target="pan" className="comps.MyGroup" waitEvent="updateComplete" waitTarget="pan"/>
			<SetProperty propertyName="includeInLayout" value="false" target="pan.e1"/>
			<RunCode code="application.pan.e1.setLayoutBoundsPosition(20,30)" />
			<SetProperty propertyName="rotation" value="45" target="pan.e1"/>
			<SetProperty propertyName="y" value="5" target="pan.e1" />
			<SetProperty propertyName="scaleY" value="2" target="pan.e1" waitEvent="updateComplete" waitTarget="pan"/>
		</setup>
		<body>
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsX()" value="-2.438010" />
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsY()" value="13.674689" />
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsX(false)" value="20" />
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsY(false)" value="5" />
		</body>
	</TestCase>       
        <!--*************-->
	<!--setActualSize-->
        <!--*************-->
        <!--actualPosition-->
        
        <TestCase testID="Ellipse_transform_rotate_setActualSize_actualPosition" keywords="[transform, rotate, setActualSize, methods, layoutGraphicElement]" description="Check actualPosition after calling setActualSize and rotate">
        	<setup>
        		<ResetComponent target="pan" className="comps.MyGroup" waitEvent="updateComplete" waitTarget="pan"/>
			<SetProperty propertyName="includeInLayout" value="false" target="pan.e1"/>
			<RunCode code="application.pan.e1.setLayoutBoundsSize(20,30)"/>
			<SetProperty propertyName="rotation" value="45" target="pan.e1" waitEvent="updateComplete" waitTarget="pan.e1"/>
        	</setup>
        	<body>
        		<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsX()" value="-16.283083"/>
        		<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsY()" value="66.930121"/>
        		<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsX(false)" value="0"/>
        		<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsY(false)" value="62"/>
        	</body>
        </TestCase>
	<TestCase testID="Ellipse_transform_rotate_setActualSize_actualPosition_pretransform" keywords="[transform, rotate, setActualSize, methods, layoutGraphicElement]" description="Check actualPosition after calling setActualSize and rotate">
        	<setup>
        		<ResetComponent target="pan" className="comps.MyGroup" waitEvent="updateComplete" waitTarget="pan"/>
			<SetProperty propertyName="includeInLayout" value="false" target="pan.e1"/>
			<RunCode code="application.pan.e1.setLayoutBoundsSize(20,30,false)"/>
			<SetProperty propertyName="rotation" value="45" target="pan.e1" waitEvent="updateComplete" waitTarget="pan.e1"/>
        	</setup>
        	<body>
        		<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsX()" value="-16.283083"/>
        		<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsY()" value="66.930121"/>
        		<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsX(false)" value="0"/>
        		<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsY(false)" value="62"/>
        	</body>
        </TestCase>        
        <TestCase testID="Ellipse_transform_scaling_setActualSize_actualPosition" keywords="[transform, scale, setActualSize, methods, layoutGraphicElement]" description="Check actualPosition after calling setActualSize and scaling">
        	<setup>
        		<ResetComponent target="pan" className="comps.MyGroup" waitEvent="updateComplete" waitTarget="pan"/>
			<SetProperty propertyName="includeInLayout" value="false" target="pan.e1"/>
			<RunCode code="application.pan.e1.setLayoutBoundsSize(20,30)"/>
			<SetProperty propertyName="scaleX" value="3" target="pan.e1" waitEvent="updateComplete" waitTarget="pan.e1"/>
		</setup>
	        <body>
	        	<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsX()" value="0"/>
        		<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsY()" value="62"/>
        		<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsX(false)" value="0"/>
        		<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsY(false)" value="62"/>
        	</body>
        </TestCase>
        <TestCase testID="Ellipse_transform_scaling_setActualSize_actualPosition_pretransform" keywords="[transform, scale, setActualSize, methods, layoutGraphicElement]" description="Check actualPosition after calling setActualSize and scaling">
        	<setup>
        		<ResetComponent target="pan" className="comps.MyGroup" waitEvent="updateComplete" waitTarget="pan"/>
			<SetProperty propertyName="includeInLayout" value="false" target="pan.e1"/>
			<RunCode code="application.pan.e1.setLayoutBoundsSize(20,30,false)"/>
			<SetProperty propertyName="scaleX" value="3" target="pan.e1" waitEvent="updateComplete" waitTarget="pan.e1"/>
		</setup>
	        <body>
	        	<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsX()" value="0"/>
        		<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsY()" value="62"/>
        		<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsX(false)" value="0"/>
        		<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsY(false)" value="62"/>
        	</body>
        </TestCase>        
        <TestCase testID="Ellipse_transform_translating_setActualSize_actualPosition" keywords="[transform, translate, setActualSize, methods, layoutGraphicElement]" description="Check actualPosition after calling setActualSize and translating">
        	<setup>
        		<ResetComponent target="pan" className="comps.MyGroup" waitEvent="updateComplete" waitTarget="pan"/>
			<SetProperty propertyName="includeInLayout" value="false" target="pan.e1"/>
			<RunCode code="application.pan.e1.setLayoutBoundsSize(20,30)"/>
			<SetProperty propertyName="x" value="3" target="pan.e1" waitEvent="updateComplete" waitTarget="pan.e1"/>
	        </setup>
	        <body>
	        	<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsX()" value="3"/>
        		<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsY()" value="62"/>
        		<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsX(false)" value="3"/>
        		<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsY(false)" value="62"/>
        	</body>
        </TestCase>
        <TestCase testID="Ellipse_transform_translating_setActualSize_actualPosition_pretransform" keywords="[transform, translate, setActualSize, methods, layoutGraphicElement]" description="Check actualPosition after calling setActualSize and translating">
        	<setup>
        		<ResetComponent target="pan" className="comps.MyGroup" waitEvent="updateComplete" waitTarget="pan"/>
			<SetProperty propertyName="includeInLayout" value="false" target="pan.e1"/>
			<RunCode code="application.pan.e1.setLayoutBoundsSize(20,30,false)"/>
			<SetProperty propertyName="x" value="3" target="pan.e1" waitEvent="updateComplete" waitTarget="pan.e1"/>
	        </setup>
	        <body>
	        	<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsX()" value="3"/>
        		<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsY()" value="62"/>
        		<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsX(false)" value="3"/>
        		<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsY(false)" value="62"/>
        	</body>
        </TestCase>

        <TestCase testID="Ellipse_transform_skewing_setActualSize_actualPosition" keywords="[transform, skew, setActualSize, methods, layoutGraphicElement]" description="Check actualPosition after calling setActualSize and skewing">
        	<setup>
        		<ResetComponent target="pan" className="comps.MyGroup" waitEvent="updateComplete" waitTarget="pan"/>
			<SetProperty propertyName="includeInLayout" value="false" target="pan.e1"/>
			<RunCode code="m = new Matrix(); m.c = Math.tan(60*Math.PI/180); var t:mx.geom.Transform = new mx.geom.Transform(); t.matrix = m; application.pan.e1.transform = t;"/>
     			<RunCode code="application.pan.e1.setLayoutBoundsSize(20,30)"/>
	        </setup>
	        <body>
	        	<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsX()" value="0"/>
        		<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsY()" value="0"/>
        		<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsX(false)" value="0"/>
        		<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsY(false)" value="0"/>
        	</body>
        </TestCase>
         <TestCase testID="Ellipse_transform_skewing_setActualSize_actualPosition_pretransform" keywords="[transform, skew, setActualSize, methods, layoutGraphicElement]" description="Check actualPosition after calling setActualSize and skewing">
		<setup>
			<ResetComponent target="pan" className="comps.MyGroup" waitEvent="updateComplete" waitTarget="pan"/>
			<SetProperty propertyName="includeInLayout" value="false" target="pan.e1"/>
			<RunCode code="m = new Matrix(); m.c = Math.tan(60*Math.PI/180); var t:mx.geom.Transform = new mx.geom.Transform(); t.matrix = m; application.pan.e1.transform = t;"/>
			<RunCode code="application.pan.e1.setLayoutBoundsSize(20,30, false)"/>
		</setup>
		<body>
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsX()" value="8.141940"/>
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsY()" value="0"/>
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsX(false)" value="0"/>
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsY(false)" value="0"/>
		</body>
        </TestCase>
        
        <!--actualSize-->
        <TestCase testID="Ellipse_transform_rotate_45_setActualSize_actualSize" keywords="[transform, rotate, setActualSize, methods, layoutGraphicElement]" description="Check actualSize after calling setActualSize and rotate">
		<setup>
			<ResetComponent target="pan" className="comps.MyGroup" waitEvent="updateComplete" waitTarget="pan"/>
			<SetProperty propertyName="includeInLayout" value="false" target="pan.e1"/>
			<RunCode code="application.pan.e1.setLayoutBoundsSize(20,30)"/>
			<SetProperty propertyName="rotation" value="45" target="pan.e1" waitEvent="updateComplete" waitTarget="pan.e1"/>		
		</setup>
		<body>
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsWidth()" value="25.495098"/>
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsHeight()" value="25.495098"/>
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsWidth(false)" value="20"/>
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsHeight(false)" value="30"/>
		</body>
	</TestCase>
        <TestCase testID="Ellipse_transform_rotate_45_setActualSize_actualSize_pretransform" keywords="[transform, rotate, setActualSize, methods, layoutGraphicElement]" description="Check actualSize after calling setActualSize and rotate">
		<setup>
			<ResetComponent target="pan" className="comps.MyGroup" waitEvent="updateComplete" waitTarget="pan"/>
			<SetProperty propertyName="includeInLayout" value="false" target="pan.e1"/>
			<RunCode code="application.pan.e1.setLayoutBoundsSize(20,30,false)"/>
			<SetProperty propertyName="rotation" value="45" target="pan.e1" waitEvent="updateComplete" waitTarget="pan.e1"/>		
		</setup>
		<body>
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsWidth()" value="25.495098"/>
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsHeight()" value="25.495098"/>
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsWidth(false)" value="20"/>
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsHeight(false)" value="30"/>
		</body>
	</TestCase>
	<TestCase testID="Ellipse_transform_rotate_90_setActualSize_actualSize" keywords="[transform, rotate, setActualSize, methods, layoutGraphicElement]" description="Check actualSize after calling setActualSize and rotate">
		<setup>
			<ResetComponent target="pan" className="comps.MyGroup" waitEvent="updateComplete" waitTarget="pan"/>
			<SetProperty propertyName="includeInLayout" value="false" target="pan.e1"/>
			<RunCode code="application.pan.e1.setLayoutBoundsSize(20,30)"/>
			<SetProperty propertyName="rotation" value="90" target="pan.e1" waitEvent="updateComplete" waitTarget="pan.e1"/>		
		</setup>
		<body>
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsWidth().toFixed(0)" value="30"/>
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsHeight().toFixed(0)" value="20"/>
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsWidth(false)" value="20"/>
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsHeight(false)" value="30"/>			
		</body>
	</TestCase>

	<TestCase testID="Ellipse_transform_rotate_90_setActualSize_actualSize_pretransform" keywords="[transform, rotate, setActualSize, methods, layoutGraphicElement]" description="Check actualSize after calling setActualSize and rotate">
		<setup>
			<ResetComponent target="pan" className="comps.MyGroup" waitEvent="updateComplete" waitTarget="pan"/>
			<SetProperty propertyName="includeInLayout" value="false" target="pan.e1"/>
			<RunCode code="application.pan.e1.setLayoutBoundsSize(20,30, false)"/>
			<SetProperty propertyName="rotation" value="90" target="pan.e1" waitEvent="updateComplete" waitTarget="pan.e1"/>		
		</setup>
		<body>
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsWidth().toFixed(0)" value="30"/>
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsHeight().toFixed(0)" value="20"/>
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsWidth(false)" value="20"/>
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsHeight(false)" value="30"/>			
		</body>
	</TestCase>
	<TestCase testID="Ellipse_transform_scaling_setActualSize_actualSize" keywords="[transform, scale, setActualSize, methods, layoutGraphicElement]" description="Check actualSize after calling setActualSize and scaling">
		<setup>
			<ResetComponent target="pan" className="comps.MyGroup" waitEvent="updateComplete" waitTarget="pan"/>
			<SetProperty propertyName="includeInLayout" value="false" target="pan.e1"/>
			<RunCode code="application.pan.e1.setLayoutBoundsSize(20,30)"/>
			<SetProperty propertyName="scaleX" value="3" target="pan.e1" waitEvent="updateComplete" waitTarget="pan.e1"/>
		</setup>
		<body>
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsWidth()" value="60"/>
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsHeight()" value="30"/>
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsWidth(false)" value="20"/>
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsHeight(false)" value="30"/>	
		</body>
	</TestCase>
	<TestCase testID="Ellipse_transform_scaling_setActualSize_actualSize_pretransform" keywords="[transform, scale, setActualSize, methods, layoutGraphicElement]" description="Check actualSize after calling setActualSize and scaling">
		<setup>
			<ResetComponent target="pan" className="comps.MyGroup" waitEvent="updateComplete" waitTarget="pan"/>
			<SetProperty propertyName="includeInLayout" value="false" target="pan.e1"/>
			<RunCode code="application.pan.e1.setLayoutBoundsSize(20,30, false)"/>
			<SetProperty propertyName="scaleX" value="3" target="pan.e1" waitEvent="updateComplete" waitTarget="pan.e1"/>
		</setup>
		<body>
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsWidth()" value="60"/>
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsHeight()" value="30"/>
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsWidth(false)" value="20"/>
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsHeight(false)" value="30"/>	
		</body>
	</TestCase>

	<TestCase testID="Ellipse_transform_translating_setActualSize_actualSize" keywords="[transform, translate, setActualSize, methods, layoutGraphicElement]" description="Check actualSize after calling setActualSize and translating">
		<setup>
			<ResetComponent target="pan" className="comps.MyGroup" waitEvent="updateComplete" waitTarget="pan"/>
			<SetProperty propertyName="includeInLayout" value="false" target="pan.e1"/>
			<RunCode code="application.pan.e1.setLayoutBoundsSize(20,30)"/>
			<SetProperty propertyName="x" value="3" target="pan.e1" waitEvent="updateComplete" waitTarget="pan.e1"/>
		</setup>
		<body>
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsWidth()" value="20"/>
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsHeight()" value="30"/>
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsWidth(false)" value="20"/>
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsHeight(false)" value="30"/>	
		</body>
	</TestCase>
	<TestCase testID="Ellipse_transform_translating_setActualSize_actualSize_pretransform" keywords="[transform, translate, setActualSize, methods, layoutGraphicElement]" description="Check actualSize after calling setActualSize and translating">
		<setup>
			<ResetComponent target="pan" className="comps.MyGroup" waitEvent="updateComplete" waitTarget="pan"/>
			<SetProperty propertyName="includeInLayout" value="false" target="pan.e1"/>
			<RunCode code="application.pan.e1.setLayoutBoundsSize(20,30, false)"/>
			<SetProperty propertyName="x" value="3" target="pan.e1" waitEvent="updateComplete" waitTarget="pan.e1"/>
		</setup>
		<body>
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsWidth()" value="20"/>
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsHeight()" value="30"/>
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsWidth(false)" value="20"/>
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsHeight(false)" value="30"/>	
		</body>
	</TestCase>
	<TestCase testID="Ellipse_transform_skewing_setActualSize_actualSize" keywords="[transform, skew, setActualSize, methods, layoutGraphicElement]" description="Check actualSize after calling setActualSize and skewing">
		<setup>
			<ResetComponent target="pan" className="comps.MyGroup" waitEvent="updateComplete" waitTarget="pan"/>
			<SetProperty propertyName="includeInLayout" value="false" target="pan.e1"/>
			<RunCode code="application.pan.e1.setLayoutBoundsSize(20,30)"/>
			<RunCode code="m = new Matrix(); m.c = Math.tan(60*Math.PI/180); var t:mx.geom.Transform = new mx.geom.Transform(); t.matrix = m; application.pan.e1.transform = t;" waitEvent="updateComplete" waitTarget="pan.e1"/>
     			
		</setup>
		<body>
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsWidth()" value="55.677643"/>
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsHeight()" value="30"/>
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsWidth(false)" value="20"/>
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsHeight(false)" value="30"/>	
		</body>
	</TestCase>
	<TestCase testID="Ellipse_transform_skewing_setActualSize_actualSize_pretransform" keywords="[transform, skew, setActualSize, methods, layoutGraphicElement]" description="Check actualSize after calling setActualSize and skewing">
		<setup>
			<ResetComponent target="pan" className="comps.MyGroup" waitEvent="updateComplete" waitTarget="pan"/>
			<SetProperty propertyName="includeInLayout" value="false" target="pan.e1"/>
			<RunCode code="application.pan.e1.setLayoutBoundsSize(20,30, false)"/>
			<RunCode code="m = new Matrix(); m.c = Math.tan(60*Math.PI/180); var t:mx.geom.Transform = new mx.geom.Transform(); t.matrix = m; application.pan.e1.transform = t;" waitEvent="updateComplete" waitTarget="pan.e1"/>

		</setup>
		<body>
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsWidth()" value="55.677643"/>
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsHeight()" value="30"/>
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsWidth(false)" value="20"/>
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsHeight(false)" value="30"/>	
		</body>
	</TestCase>
	<TestCase testID="Ellipse_transform_scaleX_setActualSize_actualSize" keywords="[transform, scaleX, setActualSize, methods, layoutGraphicElement]" description="Check actualSize after calling setActualSize and scaleX">
		<setup>
			<ResetComponent target="pan" className="comps.MyGroup" waitEvent="updateComplete" waitTarget="pan"/>
			<SetProperty propertyName="includeInLayout" value="false" target="pan.e1"/>
			<RunCode code="application.pan.e1.setLayoutBoundsSize(20,30)"/>
			<SetProperty propertyName="scaleX" value="5" target="pan.e1" waitEvent="updateComplete" waitTarget="pan.e1"/>
			
		</setup>
		<body>
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsWidth()" value="100"/>
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsHeight()" value="30"/>
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsWidth(false)" value="20"/>
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsHeight(false)" value="30"/>
		</body>
	</TestCase>
	<TestCase testID="Ellipse_transform_scaleX_setActualSize_actualSize_pretransform" keywords="[transform, scaleX, setActualSize, methods, layoutGraphicElement]" description="Check actualSize after calling setActualSize and scaleX">
		<setup>
			<ResetComponent target="pan" className="comps.MyGroup" waitEvent="updateComplete" waitTarget="pan"/>
			<SetProperty propertyName="includeInLayout" value="false" target="pan.e1"/>
			<RunCode code="application.pan.e1.setLayoutBoundsSize(20,30, false)"/>
			<SetProperty propertyName="scaleX" value="5" target="pan.e1" waitEvent="updateComplete" waitTarget="pan.e1"/>
		</setup>
		<body>
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsWidth()" value="100"/>
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsHeight()" value="30"/>
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsWidth(false)" value="20"/>
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsHeight(false)" value="30"/>
		</body>
	</TestCase>
	<TestCase testID="Ellipse_transform_scaleX_setActualSize_explicitWidth_actualSize" keywords="[transform, scaleX, setActualSize, methods, layoutGraphicElement]" description="Check actualSize after calling setActualSize and scaleX">
		<setup>
			<ResetComponent target="pan" className="comps.MyGroup" waitEvent="updateComplete" waitTarget="pan"/>
			<SetProperty propertyName="includeInLayout" value="false" target="pan.e1"/>
			<SetProperty propertyName="height" value="10" target="pan.e1"/>
			<SetProperty propertyName="width" value="20" target="pan.e1"/>
			<RunCode code="application.pan.e1.setLayoutBoundsSize(20,30)"/>
			<SetProperty propertyName="scaleX" value="5" target="pan.e1" waitEvent="updateComplete" waitTarget="pan.e1"/>
		</setup>
		<body>
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsWidth()" value="100"/>
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsHeight()" value="30"/>
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsWidth(false)" value="20"/>
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsHeight(false)" value="30"/>
		</body>
	</TestCase>
	<TestCase testID="Ellipse_transform_scaleX_setActualSize_explicitWidth_actualSize_pretransform" keywords="[transform, scaleX, setActualSize, methods, layoutGraphicElement]" description="Check actualSize after calling setActualSize and scaleX">
		<setup>
			<ResetComponent target="pan" className="comps.MyGroup" waitEvent="updateComplete" waitTarget="pan"/>
			<SetProperty propertyName="includeInLayout" value="false" target="pan.e1"/>
			<SetProperty propertyName="height" value="10" target="pan.e1"/>
			<SetProperty propertyName="width" value="20" target="pan.e1"/>
			<RunCode code="application.pan.e1.setLayoutBoundsSize(20,30,false)"/>
			<SetProperty propertyName="scaleX" value="5" target="pan.e1" waitEvent="updateComplete" waitTarget="pan.e1"/>
		</setup>
		<body>
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsWidth()" value="100"/>
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsHeight()" value="30"/>
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsWidth(false)" value="20"/>
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsHeight(false)" value="30"/>
		</body>
	</TestCase>
	<TestCase testID="Ellipse_transform_scaleY_setActualSize_actualSize" keywords="[transform, scaleY, setActualSize, methods, layoutGraphicElement]" description="Check actualSize after calling setActualSize and scaleY">
		<setup>
			<ResetComponent target="pan" className="comps.MyGroup" waitEvent="updateComplete" waitTarget="pan"/>
			<SetProperty propertyName="includeInLayout" value="false" target="pan.e1"/>
			<RunCode code="application.pan.e1.setLayoutBoundsSize(20,30)"/>
			<SetProperty propertyName="scaleY" value="5" target="pan.e1" waitEvent="updateComplete" waitTarget="pan.e1"/>
		</setup>
		<body>
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsWidth()" value="20"/>
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsHeight()" value="150"/>
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsWidth(false)" value="20"/>
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsHeight(false)" value="30"/>
		</body>
	</TestCase>
	<TestCase testID="Ellipse_transform_scaleY_setActualSize_actualSize_pretransform" keywords="[transform, scaleY, setActualSize, methods, layoutGraphicElement]" description="Check actualSize after calling setActualSize and scaleY">
		<setup>
			<ResetComponent target="pan" className="comps.MyGroup" waitEvent="updateComplete" waitTarget="pan"/>
			<SetProperty propertyName="includeInLayout" value="false" target="pan.e1"/>
			<RunCode code="application.pan.e1.setLayoutBoundsSize(20,30,false)"/>
			<SetProperty propertyName="scaleY" value="5" target="pan.e1" waitEvent="updateComplete" waitTarget="pan.e1"/>
		</setup>
		<body>
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsWidth()" value="20"/>
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsHeight()" value="150"/>
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsWidth(false)" value="20"/>
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsHeight(false)" value="30"/>
		</body>
	</TestCase>
	<TestCase testID="Ellipse_transform_rotation_setActualSize_actualSize" keywords="[transform, rotation, setActualSize, methods, layoutGraphicElement]" description="Check actualSize after calling setActualSize and rotation">
		<setup>
			<ResetComponent target="pan" className="comps.MyGroup" waitEvent="updateComplete" waitTarget="pan"/>
			<SetProperty propertyName="includeInLayout" value="false" target="pan.e1"/>
			<RunCode code="application.pan.e1.setLayoutBoundsSize(20,30)"/>
			<SetProperty propertyName="rotation" value="45" target="pan.e1" waitEvent="updateComplete" waitTarget="pan.e1"/>
		</setup>
		<body>
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsWidth()" value="25.495098"/>
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsHeight()" value="25.495098"/> 
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsWidth(false)" value="20"/>
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsHeight(false)" value="30"/>
		</body>
        </TestCase>
        <TestCase testID="Ellipse_transform_rotation_setActualSize_actualSize_pretransform" keywords="[transform, rotation, setActualSize, methods, layoutGraphicElement]" description="Check actualSize after calling setActualSize and rotation">
		<setup>
			<ResetComponent target="pan" className="comps.MyGroup" waitEvent="updateComplete" waitTarget="pan"/>
			<SetProperty propertyName="includeInLayout" value="false" target="pan.e1"/>
			<RunCode code="application.pan.e1.setLayoutBoundsSize(20,30)"/>
			<SetProperty propertyName="rotation" value="45" target="pan.e1" waitEvent="updateComplete" waitTarget="pan.e1"/>
		</setup>
		<body>
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsWidth()" value="25.495098"/>
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsHeight()" value="25.495098"/> 
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsWidth(false)" value="20"/>
			<AssertMethodValue method="value=application.pan.e1.getLayoutBoundsHeight(false)" value="30"/>
		</body>
        </TestCase>
        </testCases>
</UnitTester>     
