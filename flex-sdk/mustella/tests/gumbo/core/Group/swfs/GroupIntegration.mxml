<?xml version="1.0" encoding="utf-8"?>
<!--

  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.

-->
<s:Application 
		xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:mx="library://ns.adobe.com/flex/mx" xmlns:s="library://ns.adobe.com/flex/spark"
		xmlns:comps="comps.*"
		 height="375" width="500"
		backgroundColor="0xFFFFFF" >
	<fx:Style source="assets/myStyles.css" />
<fx:Script>
    <![CDATA[

		import mx.managers.PopUpManager;
		import mx.core.IFlexDisplayObject;
		import comps.GroupPopUp;
		import flash.events.MouseEvent;
		import spark.layouts.VerticalLayout;
		import mx.graphics.SolidColorStroke;
		import mx.graphics.SolidColor;
		import spark.components.Group;
		import mx.graphics.*;
		import spark.primitives.*;
		import mx.controls.PopUpButton;
		import mx.controls.Label;

        public var GraphicPopUp:IFlexDisplayObject;
		
		public function addLine(myGroup:Group):void
		{
			var myLine:Line = new Line();
			myLine.xFrom = 10; myLine.yFrom = 15;
			myLine.xTo=50; myLine.yTo=55;
			var mySolidColorStroke:SolidColorStroke = new SolidColorStroke();
			mySolidColorStroke.color = 0xAB0000;
			myLine.stroke = mySolidColorStroke;
			myGroup.addElement(myLine);
		}
		
		public function addRect(myGroup:Group):void
		{
			var myRect:Rect = new Rect();
			myRect.x = 30; myRect.y = 40;
			myRect.width=15; myRect.height=30;
			var myFill:SolidColor = new SolidColor();
			myFill.color = 0x123456;
			myRect.fill = myFill;
			myGroup.addElement(myRect);
		}
		
		public function addEllipseAt(myGroup:Group, i:int):void
	    {
		    var myEllipse:Ellipse = new Ellipse();
		    //myEllipse.x = 0; myEllipse.y = 0;
		    myEllipse.width=40; myEllipse.height=30;
		    var myFill:SolidColor = new SolidColor();
		    myFill.color = 0x9966FF;
		    myEllipse.fill = myFill;
		    myGroup.addElementAt(myEllipse, i);
        }
	
		public function popUpButtonGroupMix(popUpButton:PopUpButton):void {

			popUpButton.popUp = null;

			var popGroup:Group = new Group();    
			popGroup.layout = new VerticalLayout();
			addRect(popGroup);
			addLine(popGroup);
			addEllipseAt(popGroup, 0);		
			
			popUpButton.popUp = popGroup;
			
		}
		
		public function popUpButtonGroupSubgroups(popUpButton:PopUpButton):void {

			popUpButton.popUp = null;
	
			var popGroup:Group = new Group();    
			popGroup.layout = new VerticalLayout();
			addRect(popGroup);
			addLine(popGroup);
			addRect(popGroup);
			
			var subGroup:Group = new Group();
			var label:Label = new Label();
			label.text = 'subgroup';
			subGroup.addElement(label);
			
			popGroup.addElementAt(subGroup, 0);	
			
			popUpButton.popUp = popGroup;
			
		}

        public function openPopUp(modalSetting:Boolean): void
        {
            GraphicPopUp = PopUpManager.createPopUp(this, comps.GroupPopUp, modalSetting);
        }

        public function closePopUp(): void
        {
            PopUpManager.removePopUp(GraphicPopUp);
        }

  ]]>
</fx:Script>

<mx:PopUpButton visible="false" id="popUpButton" label="Pop Up Button" width="135" />



</s:Application>