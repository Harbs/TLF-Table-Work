<?xml version="1.0" encoding="utf-8"?>
<!--

  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.

-->
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 xmlns:assets="assets.*"
		 width="400" height="300">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import mx.controls.Alert;
			
			import spark.primitives.*;
			public var myButton:Button = new Button();	
			public var myBitmapImage:BitmapImage = new BitmapImage();
			public var myLine:Line = new Line();
			
			public function addButton():Boolean {
				myButton.label = "Dynamic Button!";
				myButton.id = "dynamicButton";
				this.level2.addElement(myButton);
				return true;
			}
			
			public function removeButton():Boolean {
				this.level2.removeElement(myButton);
				return true;
			}
			
			public function removeLabel():Boolean {
				this.level1.removeElement(nestedLabel);
				return true;
			}
			
			public function addBitmapImage():Boolean {
			//	Alert.show("Inside addBitmapImage");
				this.level2.addElement(myBitmapImage);
				myBitmapImage.id = "dynamicBitmapImage";
				myBitmapImage.source = "../../../../../../Assets/Images/smallredrect.jpg"
				return true;
			}
			
			public function removeBitmapImage():Boolean {
				this.level2.removeElement(myBitmapImage);
				return true;
			}
			
			public function addLine():Boolean {
				myLine.xFrom=0;
				myLine.yFrom=0;
				myLine.xTo=200;
				myLine.yTo=100;
				myLine.id = "dynamicLine";
				myLine.visible=true;
				myLine.stroke = new SolidColorStroke();
				this.addElement(myLine);
				return true;
			}
			
			public function removeLine():Boolean {
				this.removeElement(myLine);
				return true;
			}
			
			public function removeFXG():Boolean {
				this.level2.removeElement(nestedFXG);
				return true;
			}
		]]>
	</fx:Script>
	
	<s:layout>
		<s:VerticalLayout />
	</s:layout>
	<s:Button id = "rootButton" label="Button in a Group" click="addLine()"/>
 	<s:BitmapImage id="rootBI" source="@Embed('../../../../../../Assets/Images/smallredrect.jpg')"/>

	<s:Line id="testLine" xFrom="0" xTo="100" yFrom="0" yTo="10">
		<!-- Define the border color of the line. -->
		<s:stroke>
			<s:SolidColorStroke color="0x000000" weight="1" caps="square"/>
		</s:stroke>
	</s:Line>
	
	<s:Group id="level1" >	
		<s:layout>
			<s:VerticalLayout />
		</s:layout>
		<s:Label id="nestedLabel" text="Label in a Group" />
		<s:BitmapImage id="nestedBI" source="@Embed('../../../../../../Assets/Images/smallredrect.jpg')"/>
		<s:Group id="level2" >
			<s:layout>
				<s:VerticalLayout />
			</s:layout>
			<assets:MyFXG id="nestedFXG" />
			<s:List id="nestedList">
				<s:ArrayList source="[One,Two,Three,Four,Five,Six,Seven]"/>
			</s:List>
		</s:Group>	
	</s:Group>
	
</s:Group>
