<?xml version="1.0" encoding="utf-8"?>
<!--

  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.

-->
<s:Application 
		xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:mx="library://ns.adobe.com/flex/mx" xmlns:s="library://ns.adobe.com/flex/spark" 
		xmlns:comps="comps.*"
		height="375" width="500"
		backgroundColor="0xFFFFFF" >
	<fx:Style source="assets/myStyles.css" />
	
	<fx:Script source="variables.as" />
	<fx:Script source="functions.as" />		
		
	<fx:Declarations>
		<s:Resize id="resizeEffect" duration="50" />
		<s:Move id="moveEffect" duration="50" />
	</fx:Declarations>

	<fx:Script>
		<![CDATA[
	
			import mx.managers.PopUpManager;
			import mx.core.IFlexDisplayObject;
			import comps.DataGroupPopUp;
			import flash.events.MouseEvent;
			import spark.layouts.VerticalLayout;
			import mx.graphics.SolidColorStroke;
			import mx.graphics.SolidColor;
			import spark.components.DataGroup;
			import mx.graphics.*;
			import mx.controls.PopUpButton;
			import mx.controls.Label;
			import mx.collections.ArrayCollection;
			import comps.*;
	
			public var GraphicPopUp:IFlexDisplayObject;
			
			public function popUpButtonGroupSubgroups(popUpButton:PopUpButton):void {
	
				popUpButton.popUp = null;
		
				var popDataGroup:DataGroup = new DataGroup();
				
				popDataGroup.dataProvider = new ArrayCollection();
				popDataGroup.itemRendererFunction = dataGroupItemRendererFunction;
				popDataGroup.layout = new VerticalLayout();
				addCustomRect(popDataGroup, 10, 10, 0xFF0000);
				addCustomRect(popDataGroup, 10, 10, 0x00FF00);
				
				var subDataGroup:DataGroup = new DataGroup();
				subDataGroup.dataProvider = new ArrayCollection();
				var label:Label = new Label();
				label.text = 'subgroup';
				subDataGroup.dataProvider.addItem(label);
				
				popDataGroup.dataProvider.addItemAt(subDataGroup, 0);	
				
				popUpButton.popUp = popDataGroup;
				
			}
			
			public function popUpButtonGroupData(popUpButton:PopUpButton):void {
	
				popUpButton.popUp = null;
	
				var popDataGroup:DataGroup = new DataGroup();  
				popDataGroup.itemRendererFunction = dataGroupItemRendererFunction;			
				popDataGroup.dataProvider = new ArrayCollection(['1.01', '2.02', '3.03']);  
				
				popDataGroup.layout = new VerticalLayout();
							
				popUpButton.popUp = popDataGroup;
				
			}
			
			public function popUpButtonGroupDataVirtualized(popUpButton:PopUpButton):void {
	
				popUpButton.popUp = null;
	
				var popDataGroup:DataGroup = new DataGroup();  
				popDataGroup.itemRendererFunction = dataGroupItemRendererFunction;			
				popDataGroup.dataProvider = new ArrayCollection(['1.01', '2.02', '3.03']);  
				
				popDataGroup.typicalItem = "1.01";
				
				popDataGroup.layout = new VerticalLayout();
				popDataGroup.layout.useVirtualLayout = true;
							
				popUpButton.popUp = popDataGroup;
				
			}		
	
			public function openPopUp(modalSetting:Boolean): void
			{
				GraphicPopUp = PopUpManager.createPopUp(this, comps.DataGroupPopUp, modalSetting);
			}
	
			public function closePopUp(): void
			{
				PopUpManager.removePopUp(GraphicPopUp);
			}
	
	  ]]>
	</fx:Script>

	<mx:PopUpButton visible="false" id="popUpButton" label="Pop Up Button" width="135" />

</s:Application>