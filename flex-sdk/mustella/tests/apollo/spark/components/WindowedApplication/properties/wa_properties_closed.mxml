<?xml version="1.0" encoding="utf-8"?>
<!--

  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.

-->
<UnitTester testDir="apollo/spark/components/WindowedApplication/properties/"  xmlns:mx="http://www.adobe.com/2006/mxml" xmlns="*" testSWF="wa_app1_closed.mxml">

	<!-- this set of lines form a template that must be in each unit test -->
	<mx:Script>
	<![CDATA[
	public static function init(o:DisplayObject):void
	{
	}
	]]>
	</mx:Script>
	<mx:Metadata>
	<![CDATA[
		[Mixin]
	]]>
	</mx:Metadata>
	<!-- end of set of lines that must be in each unit test -->

	<mx:Script>
	<![CDATA[

        import mx.core.FlexGlobals;
        import spark.components.*;

	]]>
	</mx:Script>

	<testCases>

<!--
========================================================
closed property
- When "target" parameters are missing, that means the
main app.
- These tests are order dependent because the second
one closes the window.
- We can't use the SWF again because the second test
closes the window.
========================================================
-->
<TestCase testID="closed_test1" keywords="[WindowedApplication,closed]" description="Check prop. when it's open." >
    <body>
        <AssertPropertyValue propertyName="closed" value="false" />
    </body>
</TestCase>

<TestCase testID="closed_test2" keywords="[WindowedApplication,closed]" description="Check prop. after it's closed." >
    <body>
        <SetProperty propertyName="autoExit" value="false" />
        <RunCode code="WindowedApplication(FlexGlobals.topLevelApplication).close()" waitEvent="close" />
        <AssertMethodValue method="value=WindowedApplication(FlexGlobals.topLevelApplication).closed" value="true" />
    </body>
</TestCase>

<TestCase testID="close_test2" keywords="[WindowedApplication,close]" description="Call close() when closed already.  We're already closed, so there's no event." >
    <body>
        <RunCode code="FlexGlobals.topLevelApplication.close()" />
        <Pause timeout="100" />
        <AssertPropertyValue propertyName="closed" value="true" />
    </body>
</TestCase>

	</testCases>
</UnitTester>
