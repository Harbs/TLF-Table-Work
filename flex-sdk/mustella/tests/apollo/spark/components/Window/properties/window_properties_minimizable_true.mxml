<?xml version="1.0" encoding="utf-8"?>
<!--

  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.

-->

<UnitTester testDir="apollo/spark/components/Window/properties/"  xmlns:mx="http://www.adobe.com/2006/mxml" xmlns="*" testSWF="window_basic_flexchrome.mxml">



	<!-- this set of lines form a template that must be in each unit test -->

	<mx:Script>

	<![CDATA[

	public static function init(o:DisplayObject):void

	{

	}

	]]>

	</mx:Script>

	<mx:Metadata>

	<![CDATA[

		[Mixin]

	]]>

	</mx:Metadata>

	<!-- end of set of lines that must be in each unit test -->



	<mx:Script>

	<![CDATA[



        import flash.system.Capabilities;

        import mx.core.FlexGlobals;

        import spark.components.*;

        import spark.skins.spark.*;

        import comps.*;



	]]>

	</mx:Script>



    <testCases>



	<!--

	========================================================

	Test minimizable = true

	- This tests the minimizable property.

	- These are not tests specifically for the minimize

	button or the minimize() method; those are tested

	elsewhere.

	- We cannot compare the height of the app. with the

	height of the screen due to the Mac's toolbar, Windows'

	task bar, stuff like that.  So we just use the width,

	which should be consistent, and the nativeWindow's

	displayState property.

	- These are order dependent!  The last tests are on

	a closed window, so tests on an open window cannot

	be put after them.

	========================================================

	-->

	<TestCase testID="minimizable_true_test1" keywords="[Window,minimizable]" description="Confirm default is true." >

	    <setup>

		<RunCode code="FlexGlobals.topLevelApplication.closeAllChildWindow()"/>

		<RunCode code="FlexGlobals.topLevelApplication.createAWindow()" waitTarget="" waitEvent="myWindowComplete"/>    

	    </setup>

	    <body>

		<AssertPropertyValue target="myWin" propertyName="minimizable" value="true" />

	    </body>

	</TestCase>



	<TestCase testID="minimizable_true_test2_SparkChrome" keywords="[Window,minimizable]" description="Click the minimize button to minimize." >

	    <setup>

		<RunCode code="FlexGlobals.topLevelApplication.closeAllChildWindow()"/>

		<RunCode code="FlexGlobals.topLevelApplication.createAWindow()" waitTarget="" waitEvent="myWindowComplete"/>    

	    </setup>

	    <body>

		<WaitForEvent target="stage" eventName="enterFrame" numExpectedEvents="2"/>

		<DispatchMouseClickEvent target="myWin.skin.titleBar.minimizeButton" localX="2" localY="2" waitTarget="myWin" waitEvent="displayStateChange" />

		<WaitForEvent target="stage" eventName="enterFrame" numExpectedEvents="4"/>

		<AssertPropertyValue target="myWin.nativeWindow" propertyName="displayState" value="minimized" />

	    </body>

	</TestCase>



	<TestCase testID="minimizable_true_test3_SparkChrome" keywords="[Window,minimizable]" description="Call the minimize method to minimize." >

	    <setup>

		<RunCode code="FlexGlobals.topLevelApplication.closeAllChildWindow()"/>

		<WaitForEvent target="stage" eventName="enterFrame" numExpectedEvents="2"/>

		<RunCode code="FlexGlobals.topLevelApplication.createAWindow()" waitTarget="" waitEvent="myWindowComplete"/>    

	    </setup>

	    <body>

		<WaitForEvent target="stage" eventName="enterFrame" numExpectedEvents="2"/>

	       <RunCode code="FlexGlobals.topLevelApplication.myWin.minimize()" waitTarget="myWin" waitEvent="displayStateChange" />

	       <WaitForEffectsToEnd />

	       <!-- 

	       <SetProperty target="myWin" propertyName="height" value="100" waitEvent="resize" />

	       -->

	       <WaitForEvent target="stage" eventName="enterFrame" numExpectedEvents="4"/>

	       <AssertPropertyValue target="myWin.nativeWindow" propertyName="displayState" value="minimized" />

	    </body>

	</TestCase>



	<TestCase testID="minimizable_true_test3dowedApplicationSkin" keywords="[Window,minimizable]" description="Call the minimize method to minimize." >

	    <setup>

		<RunCode code="FlexGlobals.topLevelApplication.closeAllChildWindow()"/>

		<RunCode code="FlexGlobals.topLevelApplication.createAWindow()" waitTarget="" waitEvent="myWindowComplete"/>    

	    </setup>

	    <body>

		<SetStyle target="myWin" styleName="skinClass" valueExpression="value = WindowedApplicationSkin" waitEvent="updateComplete" />

	        <RunCode code="FlexGlobals.topLevelApplication.myWin.activate()" waitEvent="enterFrame" waitTarget="stage"/>

	        <WaitForEvent target="stage" eventName="enterFrame" numExpectedEvents="2"/>

	        <RunCode code="FlexGlobals.topLevelApplication.myWin.minimize()" waitTarget="myWin" waitEvent="displayStateChange" />

	        <WaitForEvent target="stage" eventName="enterFrame" numExpectedEvents="2"/>

	        <WaitForEffectsToEnd />

	        <AssertPropertyValue target="myWin.nativeWindow" propertyName="displayState" value="minimized" />

	    </body>

	</TestCase>





	<TestCase testID="minimizable_true_test4_WindowedAppSkin" keywords="[Window,minimizable]" description="Be sure the minimize button appears enabled." >

	    <setup>

		<RunCode code="FlexGlobals.topLevelApplication.closeAllChildWindow()"/>

		<RunCode code="FlexGlobals.topLevelApplication.createAWindow()" waitTarget="" waitEvent="myWindowComplete"/>    

	    </setup>

	    <body>

		<SetStyle target="myWin" styleName="skinClass" valueExpression="value = WindowedApplicationSkin" waitEvent="updateComplete" />

		<RunCode code="FlexGlobals.topLevelApplication.myWin.minimize()" waitTarget="myWin" waitEvent="displayStateChange" />

		<WaitForEffectsToEnd />

		<WaitForLayoutManager />
		<WaitForEvent target="stage" eventName="enterFrame" numExpectedEvents="2"/>
			
		<MyCompareBitmap url="../Properties/Baselines/$testID.png" mac_url="../Properties/Baselines/$testID_mac.png" target="myWin" />

	    </body>

	</TestCase>



	<TestCase testID="minimizable_true_test4_SparkChrome" keywords="[Window,minimizable]" description="Be sure the minimize button appears enabled." >

	    <setup>

		<RunCode code="FlexGlobals.topLevelApplication.closeAllChildWindow()"/>

		<RunCode code="FlexGlobals.topLevelApplication.createAWindow()" waitTarget="" waitEvent="myWindowComplete"/>    

	    </setup>

	    <body>

		<RunCode code="FlexGlobals.topLevelApplication.myWin.minimize()" waitTarget="myWin" waitEvent="displayStateChange" />

		<WaitForEffectsToEnd />
		<WaitForLayoutManager />
		<WaitForEvent target="stage" eventName="enterFrame" numExpectedEvents="2"/>

		<MyCompareBitmap url="../Properties/Baselines/$testID.png" mac_url="../Properties/Baselines/$testID_mac.png" target="myWin" />



	    </body>

	</TestCase>



    </testCases>

</UnitTester>

