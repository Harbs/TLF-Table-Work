<?xml version="1.0" encoding="UTF-8"?>
<!--

  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.

-->
<apiPackage id="spark.skins.spark"><apiName>spark.skins.spark</apiName><apiDetail/><apiClassifier id="spark.skins.spark:SparkChromeWindowedApplicationSkin"><apiName>SparkChromeWindowedApplicationSkin</apiName><shortdesc>Класс тем оформления для компонента Spark WindowedApplication.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.binding:IBindingClient</apiBaseInterface><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.skins:SparkSkin</apiBaseClassifier></apiClassifierDef><apiDesc>Класс тем оформления для компонента Spark WindowedApplication. Этот класс определяет хром Flex, который используется для границ, строки состояния, кнопки захвата, строки заголовка и кнопок строки заголовка.
      
      <p>Для определения внешнего вида контейнеров WindowedApplication и Window можно использовать либо системный хром (класс FlexChromSkin), либо класс WindowedApplicationSkin. Для использования класса FlexChromSkin с контейнером WindowedApplication следует установить для свойства <codeph>systemChrome</codeph> значение none в файле .xml приложения и задать в качестве стиля <codeph>skinClass</codeph> spark.skins.spark.FlexChromSkin. Для использования класса FlexChromSkin с контейнером Window следует установить для свойства <codeph>Window.systemChrome</codeph> значение none и задать в качестве стиля <codeph>skinClass</codeph> spark.skins.spark.FlexChromSkin.</p>
      </apiDesc></apiClassifierDetail><related-links><link href="spark.components.xml#WindowedApplication"><linktext>spark.components.WindowedApplication</linktext></link></related-links><apiConstructor id="spark.skins.spark:SparkChromeWindowedApplicationSkin:SparkChromeWindowedApplicationSkin"><apiName>SparkChromeWindowedApplicationSkin</apiName><shortdesc>Конструктор.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Конструктор.</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:SparkChromeWindowedApplicationSkin:backgroundRect"><apiName>backgroundRect</apiName><shortdesc>Определяет цвет фона темы оформления.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiType value="spark.primitives:Rect"/></apiValueDef><apiDesc>Определяет цвет фона темы оформления.</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:SparkChromeWindowedApplicationSkin:borderBgFill"><apiName>borderBgFill</apiName><shortdesc>Определяет цвет фона границы.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiType value="spark.components:Group"/></apiValueDef><apiDesc>Определяет цвет фона границы.</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:SparkChromeWindowedApplicationSkin:contentGroup"><apiName>contentGroup</apiName><shortdesc conref="spark.components.SkinnableContainer#contentGroup"/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiType value="spark.components:Group"/></apiValueDef><apiDesc conref="spark.components.SkinnableContainer#contentGroup"/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:SparkChromeWindowedApplicationSkin:gripper"><apiName>gripper</apiName><shortdesc conref="spark.components.WindowedApplication#gripper">По умолчанию для определения темы оформления кнопки захвата используется класс windowChrome.GripperSkin.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiType value="spark.components:Button"/></apiValueDef><apiDesc conref="spark.components.WindowedApplication#gripper">По умолчанию для определения темы оформления кнопки захвата используется класс windowChrome.GripperSkin.
            
        </apiDesc></apiValueDetail><related-links><link href="spark.skins.spark.windowChrome.xml#GripperSkin"><linktext>spark.skins.spark.windowChrome.GripperSkin</linktext></link></related-links></apiValue><apiValue id="spark.skins.spark:SparkChromeWindowedApplicationSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
        </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiType value="Object"/></apiValueDef><apiDesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
        </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:SparkChromeWindowedApplicationSkin:statusBar"><apiName>statusBar</apiName><shortdesc conref="spark.components.WindowedApplication#statusBar"/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiType value="spark.components:Group"/></apiValueDef><apiDesc conref="spark.components.WindowedApplication#statusBar"/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:SparkChromeWindowedApplicationSkin:statusText"><apiName>statusText</apiName><shortdesc conref="spark.components.WindowedApplication#statusText"/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiType value="spark.components:Label"/></apiValueDef><apiDesc conref="spark.components.WindowedApplication#statusText"/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:SparkChromeWindowedApplicationSkin:titleBarBackgroundRect"><apiName>titleBarBackgroundRect</apiName><shortdesc>Определяет цвет фона строки заголовка.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiType value="spark.primitives:Rect"/></apiValueDef><apiDesc>Определяет цвет фона строки заголовка.</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:SparkChromeWindowedApplicationSkin:titleBar"><apiName>titleBar</apiName><shortdesc conref="spark.components.WindowedApplication#titleBar"/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components.windowClasses:TitleBar</apiValueClassifier></apiValueDef><apiDesc conref="spark.components.WindowedApplication#titleBar"/></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:WindowedApplicationSkin"><apiName>WindowedApplicationSkin</apiName><shortdesc>Класс тем оформления для контейнеров Spark WindowedApplication и Window.</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.skins:SparkSkin</apiBaseClassifier></apiClassifierDef><apiDesc>Класс тем оформления для контейнеров Spark WindowedApplication и Window. Этот класс определяет только рамку и строку состояния, но не оказывает влияния на кнопку захвата, строку заголовка или кнопки строки заголовка.
      
      <p>Для определения внешнего вида контейнеров WindowedApplication и Window можно использовать либо системный хром (класс FlexChromSkin), либо класс WindowedApplicationSkin. Для использования класса WindowedApplicationSkin с контейнером WindowedApplication следует установить для <codeph>systemChrome</codeph> значение none в файле .xml приложения, а также установить spark.skins.spark.WindowedApplicationSkin в качестве стиля <codeph>skinClass</codeph>. Для использования класса WindowedApplicationSkin с контейнером Window следует установить для свойства <codeph>Window.systemChrome</codeph> значение none и задать spark.skins.spark.WindowedApplicationSkin в качестве стиля <codeph>skinClass</codeph>.</p>
      </apiDesc></apiClassifierDetail><related-links><link href="spark.components.xml#WindowedApplication"><linktext>spark.components.WindowedApplication</linktext></link></related-links><apiConstructor id="spark.skins.spark:WindowedApplicationSkin:WindowedApplicationSkin"><apiName>WindowedApplicationSkin</apiName><shortdesc>Конструктор.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>Конструктор.</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:WindowedApplicationSkin:backgroundRect"><apiName>backgroundRect</apiName><shortdesc>Определяет цвет фона темы оформления.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiType value="spark.primitives:Rect"/></apiValueDef><apiDesc>Определяет цвет фона темы оформления.</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:WindowedApplicationSkin:contentGroup"><apiName>contentGroup</apiName><shortdesc conref="spark.components.SkinnableContainer#contentGroup"/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiType value="spark.components:Group"/></apiValueDef><apiDesc conref="spark.components.SkinnableContainer#contentGroup"/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:WindowedApplicationSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
        </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiType value="Object"/></apiValueDef><apiDesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
        </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:WindowedApplicationSkin:statusBar"><apiName>statusBar</apiName><shortdesc conref="spark.components.WindowedApplication#statusBar"/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiType value="spark.components:Group"/></apiValueDef><apiDesc conref="spark.components.WindowedApplication#statusBar"/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:WindowedApplicationSkin:statusText"><apiName>statusText</apiName><shortdesc conref="spark.components.WindowedApplication#statusText"/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiType value="spark.components:Label"/></apiValueDef><apiDesc conref="spark.components.WindowedApplication#statusText"/></apiValueDetail></apiValue></apiClassifier></apiPackage>