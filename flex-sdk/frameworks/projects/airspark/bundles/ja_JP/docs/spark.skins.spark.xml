<?xml version="1.0" encoding="UTF-8"?>
<!--

  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.

-->
<apiPackage id="spark.skins.spark"><apiName>spark.skins.spark</apiName><apiDetail/><apiClassifier id="spark.skins.spark:SparkChromeWindowedApplicationSkin"><apiName>SparkChromeWindowedApplicationSkin</apiName><shortdesc>Spark WindowedApplication コンポーネント用のスキンクラスです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.binding:IBindingClient</apiBaseInterface><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.skins:SparkSkin</apiBaseClassifier></apiClassifierDef><apiDesc>Spark WindowedApplication コンポーネント用のスキンクラスです。このクラスは、境界線、ステータスバー、グリッパボタン、タイトルバーおよびタイトルバーのボタンを含む、Flex クロムを定義します。
      
      <p>WindowedApplication および Window コンテナの外観は、システムクロム、FlexChromSkin クラス、または WindowedApplicationSkin クラスを使用して定義できます。WindowedApplication コンテナで FlexChromSkin クラスを使用するには、アプリケーションの .xml ファイルで <codeph>systemChrome</codeph> を "none" に設定し、<codeph>skinClass</codeph> スタイルを spark.skins.spark.FlexChromSkin に設定します。Window コンテナで FlexChromSkin クラスを使用するには、<codeph>Window.systemChrome</codeph> プロパティを "none" に設定し、<codeph>skinClass</codeph> スタイルを spark.skins.spark.FlexChromSkin に設定します。</p>
      </apiDesc></apiClassifierDetail><related-links><link href="spark.components.xml#WindowedApplication"><linktext>spark.components.WindowedApplication</linktext></link></related-links><apiConstructor id="spark.skins.spark:SparkChromeWindowedApplicationSkin:SparkChromeWindowedApplicationSkin"><apiName>SparkChromeWindowedApplicationSkin</apiName><shortdesc>コンストラクターです。</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>コンストラクターです。</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:SparkChromeWindowedApplicationSkin:backgroundRect"><apiName>backgroundRect</apiName><shortdesc>スキンの背景色を定義します。</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiType value="spark.primitives:Rect"/></apiValueDef><apiDesc>スキンの背景色を定義します。</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:SparkChromeWindowedApplicationSkin:borderBgFill"><apiName>borderBgFill</apiName><shortdesc>境界線の背景色を定義します。</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiType value="spark.components:Group"/></apiValueDef><apiDesc>境界線の背景色を定義します。</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:SparkChromeWindowedApplicationSkin:contentGroup"><apiName>contentGroup</apiName><shortdesc conref="spark.components.SkinnableContainer#contentGroup"/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiType value="spark.components:Group"/></apiValueDef><apiDesc conref="spark.components.SkinnableContainer#contentGroup"/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:SparkChromeWindowedApplicationSkin:gripper"><apiName>gripper</apiName><shortdesc conref="spark.components.WindowedApplication#gripper">デフォルトでは、ボタンは spark.skins.spark.windowChrome.GripperSkin クラスを使用して、グリッパボタンのスキンを定義します。</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiType value="spark.components:Button"/></apiValueDef><apiDesc conref="spark.components.WindowedApplication#gripper">デフォルトでは、ボタンは spark.skins.spark.windowChrome.GripperSkin クラスを使用して、グリッパボタンのスキンを定義します。
            
        </apiDesc></apiValueDetail><related-links><link href="spark.skins.spark.windowChrome.xml#GripperSkin"><linktext>spark.skins.spark.windowChrome.GripperSkin</linktext></link></related-links></apiValue><apiValue id="spark.skins.spark:SparkChromeWindowedApplicationSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
        </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiType value="Object"/></apiValueDef><apiDesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
        </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:SparkChromeWindowedApplicationSkin:statusBar"><apiName>statusBar</apiName><shortdesc conref="spark.components.WindowedApplication#statusBar"/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiType value="spark.components:Group"/></apiValueDef><apiDesc conref="spark.components.WindowedApplication#statusBar"/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:SparkChromeWindowedApplicationSkin:statusText"><apiName>statusText</apiName><shortdesc conref="spark.components.WindowedApplication#statusText"/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiType value="spark.components:Label"/></apiValueDef><apiDesc conref="spark.components.WindowedApplication#statusText"/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:SparkChromeWindowedApplicationSkin:titleBarBackgroundRect"><apiName>titleBarBackgroundRect</apiName><shortdesc>タイトルバーの背景色を定義します。</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiType value="spark.primitives:Rect"/></apiValueDef><apiDesc>タイトルバーの背景色を定義します。</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:SparkChromeWindowedApplicationSkin:titleBar"><apiName>titleBar</apiName><shortdesc conref="spark.components.WindowedApplication#titleBar"/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>spark.components.windowClasses:TitleBar</apiValueClassifier></apiValueDef><apiDesc conref="spark.components.WindowedApplication#titleBar"/></apiValueDetail></apiValue></apiClassifier><apiClassifier id="spark.skins.spark:WindowedApplicationSkin"><apiName>WindowedApplicationSkin</apiName><shortdesc>Spark WindowedApplication および Window コンテナ用のスキンクラスです。</shortdesc><prolog><asMetadata><apiVersion><apiLanguage version="3.0"/><apiPlatform description="" name="Flash" version="10"/><apiPlatform description="" name="AIR" version="1.5"/><apiTool description="" name="Flex" version="4"/></apiVersion><DefaultProperty name="mxmlContent"/></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>mx.core:IStateClient2</apiBaseInterface><apiBaseClassifier>spark.skins:SparkSkin</apiBaseClassifier></apiClassifierDef><apiDesc>Spark WindowedApplication および Window コンテナ用のスキンクラスです。このクラスは境界線とステータスバーだけを定義し、グリッパボタン、タイトルバー、またはタイトルバーのボタンは定義しません。
      
      <p>WindowedApplication および Window コンテナの外観は、システムクロム、FlexChromSkin クラス、または WindowedApplicationSkin クラスを使用して定義できます。WindowedApplication コンテナで WindowedApplicationSkin クラスを使用するには、アプリケーションの .xml ファイルで <codeph>systemChrome</codeph> を "none" に設定し、<codeph>skinClass</codeph> スタイルを spark.skins.spark.WindowedApplicationSkin に設定します。Window コンテナで WindowedApplicationSkin クラスを使用するには、<codeph>Window.systemChrome</codeph> プロパティを "none" に設定し、<codeph>skinClass</codeph> スタイルを spark.skins.spark.WindowedApplicationSkin に設定します。</p>
      </apiDesc></apiClassifierDetail><related-links><link href="spark.components.xml#WindowedApplication"><linktext>spark.components.WindowedApplication</linktext></link></related-links><apiConstructor id="spark.skins.spark:WindowedApplicationSkin:WindowedApplicationSkin"><apiName>WindowedApplicationSkin</apiName><shortdesc>コンストラクターです。</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc>コンストラクターです。</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="spark.skins.spark:WindowedApplicationSkin:backgroundRect"><apiName>backgroundRect</apiName><shortdesc>スキンの背景色を定義します。</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiType value="spark.primitives:Rect"/></apiValueDef><apiDesc>スキンの背景色を定義します。</apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:WindowedApplicationSkin:contentGroup"><apiName>contentGroup</apiName><shortdesc conref="spark.components.SkinnableContainer#contentGroup"/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiType value="spark.components:Group"/></apiValueDef><apiDesc conref="spark.components.SkinnableContainer#contentGroup"/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:WindowedApplicationSkin:hostComponent"><apiName>hostComponent</apiName><shortdesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
        </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiType value="Object"/></apiValueDef><apiDesc conref="spark.skins.spark.ApplicationSkin#hostComponent"> 
        </apiDesc></apiValueDetail></apiValue><apiValue id="spark.skins.spark:WindowedApplicationSkin:statusBar"><apiName>statusBar</apiName><shortdesc conref="spark.components.WindowedApplication#statusBar"/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiType value="spark.components:Group"/></apiValueDef><apiDesc conref="spark.components.WindowedApplication#statusBar"/></apiValueDetail></apiValue><apiValue id="spark.skins.spark:WindowedApplicationSkin:statusText"><apiName>statusText</apiName><shortdesc conref="spark.components.WindowedApplication#statusText"/><prolog/><apiValueDetail><apiValueDef><apiProperty isBindable="true" name="Bindable"/><apiAccess value="public"/><apiDynamic/><apiType value="spark.components:Label"/></apiValueDef><apiDesc conref="spark.components.WindowedApplication#statusText"/></apiValueDetail></apiValue></apiClassifier></apiPackage>