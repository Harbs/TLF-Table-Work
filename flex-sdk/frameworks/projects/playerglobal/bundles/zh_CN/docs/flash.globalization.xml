<?xml version="1.0" encoding="UTF-8"?>
<!--

  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.

-->
<apiPackage xmlns:ditaarch="http://dita.oasis-open.org/architecture/2005/" id="flash.globalization" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiPackage/apiPackage "><apiName class="- topic/title reference/title apiRef/apiName ">flash.globalization</apiName><apiDetail class="- topic/body reference/refbody apiRef/apiDetail "/><apiClassifier languages="" id="flash.globalization:DateTimeFormatter" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">DateTimeFormatter</apiName><shortdesc class="- topic/shortdesc ">
	 DateTimeFormatter 类为 Date 对象提供区分区域设置的格式设置并提供对本地化日期字段名的访问权限。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 DateTimeFormatter 类为 Date 对象提供区分区域设置的格式设置并提供对本地化日期字段名的访问权限。此类的方法使用操作系统提供的函数和设置。 
	 
	 <p class="- topic/p ">有两种选择日期时间格式的方法：使用预定义模式或自定模式。对于大多数应用程序，应该使用由 DateTimeStyle 常量 (<codeph class="+ topic/ph pr-d/codeph ">LONG</codeph>、<codeph class="+ topic/ph pr-d/codeph ">MEDIUM</codeph>、<codeph class="+ topic/ph pr-d/codeph ">NONE</codeph> 或 <codeph class="+ topic/ph pr-d/codeph ">SHORT</codeph> 指定的预定义样式。这些常量指定请求的区域设置的默认模式或指定基于用户操作系统设置的默认模式。
	 </p>
	 <p class="- topic/p ">
	 例如，以下代码使用默认短日期格式创建日期字符串：
	 </p>
 	 <codeblock rev="3.0" xml:space="preserve" class="+ topic/pre pr-d/codeblock "> 
	 var df:DateTimeFormatter = new DateTimeFormatter(LocaleID.DEFAULT, DateTimeStyle.SHORT, DateTimeStyle.NONE);
	 var currentDate:Date = new Date();
	 var shortDate:String = df.format(currentDate);
	 </codeblock>
	 
	 <p class="- topic/p ">创建此类的实例后，如果操作系统支持请求的区域设置，则根据请求的区域设置的约定和默认值以及构造函数的 <codeph class="+ topic/ph pr-d/codeph ">dateStyle</codeph> 和 <codeph class="+ topic/ph pr-d/codeph ">timeStyle</codeph> 参数设置该实例的属性。如果请求的区域设置不可用，则根据回退或默认系统区域设置来设置属性，可以使用 <codeph class="+ topic/ph pr-d/codeph ">actualLocaleIDName</codeph> 属性检索默认系统区域设置。
	 </p>
	 <p class="- topic/p ">
	 此类包含其他方法，用于获得月名称和工作日名称的本地化字符串，以及检索可在日历选取器或其他类似应用程序中使用的每周第一天。
	 </p>
	 <p class="- topic/p ">
	 由于使用用户的设置、使用操作系统提供的格式设置模式，并在请求的区域设置不受支持时使用回退区域设置，因此，即便使用相同的区域设置 ID，对不同的用户显示的格式设置结果也可能不同。
	 </p>
	 
	 </apiDesc><example conref="examples\DateTimeFormatter.1.as" class="- topic/example "> 下面的示例说明如何根据区域有区别地设置表示日期和时间值的字符串的格式。此示例中的输出会因操作系统和用户首选项不同而异。
 <p class="- topic/p ">
 此示例使用下列区域设置：英语（美国）、法语（法国）和西班牙语（西班牙）。 
 </p>
 <p class="- topic/p ">
 此示例为该列表中的每个区域设置执行下列操作：
 </p>
 <ol class="- topic/ol "><li class="- topic/li ">使用默认样式（长日期样式和长时间样式）创建 DateTimeFormatter 对象</li><li class="- topic/li ">使用默认的长日期样式设置当前日期和时间的格式。</li><li class="- topic/li ">使用 <codeph class="+ topic/ph pr-d/codeph ">DateTimeStyle.NONE</codeph> 和 <codeph class="+ topic/ph pr-d/codeph ">DateTimeStyle.SHORT</codeph> 常量更改为仅时间的短日期样式。</li><li class="- topic/li ">使用仅时间的短日期样式设置当前日期和时间的格式。</li></ol>
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">

package {
    import flash.display.Sprite;
    import flash.globalization.DateTimeFormatter;
    import flash.globalization.DateTimeStyle;
    
    public class DateTimeFormatterExample extends Sprite
    {    
        private var localeList:Array = new Array("en-US", "fr-FR", "es-ES");
    
        public function DateTimeFormatterExample()
        {
            var date:Date = new Date();
            
            for each (var locale:String in localeList) {
                var dtf:DateTimeFormatter = new DateTimeFormatter(locale);
                trace('\n' + "LocaleID requested=" + dtf.requestedLocaleIDName 
                    + "; actual=" + dtf.actualLocaleIDName);
            
                var longDate:String = dtf.format(date);
                trace(longDate + " (" + dtf.getDateTimePattern() + ")");
            
                dtf.setDateTimeStyles(DateTimeStyle.NONE, DateTimeStyle.SHORT);
                var shortDate:String = dtf.format(date);
                trace(shortDate + " (" + dtf.getDateTimePattern() + ")");
            }        
        }
    }
}
</codeblock></example><example conref="examples\DateTimeFormatter.2.as" class="- topic/example "> 下面的示例说明应用程序如何根据用户选择的模式设置日期格式。此示例中的输出会因操作系统和用户首选项不同而异。
 <p class="- topic/p ">
 此示例为该列表中的每个区域设置执行下列操作：
 </p>
 <ol class="- topic/ol "><li class="- topic/li ">创建 3 个输入和输出文本字段。</li><li class="- topic/li ">使用美国英语区域设置创建 DateTimeFormatter 对象。</li><li class="- topic/li ">调用 <codeph class="+ topic/ph pr-d/codeph ">configureTextField()</codeph> 函数，该函数将设置文本字段的位置和大小，并向 <codeph class="+ topic/ph pr-d/codeph ">patternField</codeph> 对象添加事件侦听器。</li><li class="- topic/li ">用户在 <codeph class="+ topic/ph pr-d/codeph ">patternField</codeph> 文本字段中输入模式后，<codeph class="+ topic/ph pr-d/codeph ">textInputHandler</codeph> 函数将使用该模式设置当前日期和时间的格式，并在输出文本字段中显示结果和 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 值。</li></ol>
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
 
package {  
    import flash.display.Sprite;
    import flash.events.Event;
    import flash.globalization.DateTimeFormatter;
    import flash.text.*;
    
    public class DateTimePatternExample extends Sprite
    {    
        private var patternField:TextField = new TextField();
        private var resultField:TextField = new TextField();
        private var statusField:TextField = new TextField();
           private var date:Date = new Date();
         private var dtf:DateTimeFormatter = new DateTimeFormatter("en-US");           
         
        private function configureTextField():void
        {
            patternField.type = TextFieldType.INPUT;
            patternField.width = 300;
            patternField.height = 20;
            patternField.background = true;
            patternField.border = true;
            
            resultField.y = 40;
            resultField.width = 300;
            resultField.height = 20;
            
            statusField.y = 80;
            statusField.width = 300;
            statusField.height = 20;

            addChild(patternField);
            addChild(resultField);
            addChild(statusField);
            patternField.addEventListener(Event.CHANGE,textInputHandler);
        }

        private function textInputHandler(event:Event):void
        {                 
            dtf.setDateTimePattern(patternField.text);
            statusField.text = dtf.lastOperationStatus;
            resultField.text = dtf.format(date);
        }

        public function DateTimePatternExample()
        {
            configureTextField();    
        }
    }
}
</codeblock></example></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.globalization.xml#DateTimeFormatter/actualLocaleIDName" class="- topic/link "><linktext class="- topic/linktext ">actualLocaleIDName</linktext></link><link href="flash.globalization.xml#DateTimeStyle" class="- topic/link "><linktext class="- topic/linktext ">DateTimeStyle</linktext></link></related-links><apiConstructor id="flash.globalization:DateTimeFormatter:DateTimeFormatter" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">DateTimeFormatter</apiName><shortdesc class="- topic/shortdesc ">
		 构造新 DateTimeFormatter 对象，以根据指定区域设置的约定以及提供的日期和时间格式设置样式来设置日期和时间的格式。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">如果 <codeph class="+ topic/ph pr-d/codeph ">dateStyle</codeph> 或 <codeph class="+ topic/ph pr-d/codeph ">timeStyle</codeph> 参数不是有效的 DateTimeStyle 常量。
		 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">如果 <codeph class="+ topic/ph pr-d/codeph ">dateStyle</codeph> 或 <codeph class="+ topic/ph pr-d/codeph ">timeStyle</codeph> 参数为 null。
		 
  		 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">TypeError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">TypeError</apiOperationClassifier></apiException><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">requestedLocaleIDName</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">确定日期或时间格式时使用的首选区域设置 ID 名称。
		 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">dateStyle</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">long</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">指定设置日期格式时使用的样式。此值对应于由 DateTimeStyle 类枚举的一个值：
		         <ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">DateTimeStyle.LONG</codeph> </li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">DateTimeStyle.MEDIUM</codeph></li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">DateTimeStyle.SHORT</codeph> </li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">DateTimeStyle.NONE</codeph> </li></ul>
		 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">timeStyle</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">long</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">指定设置时间格式时使用的样式。此值对应于由 DateTimeStyle 类枚举的一个值：
		         <ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">DateTimeStyle.LONG</codeph> </li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">DateTimeStyle.MEDIUM</codeph></li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">DateTimeStyle.SHORT</codeph> </li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">DateTimeStyle.NONE</codeph> </li></ul>
		 
		 </apiDesc></apiParam></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 构造新 DateTimeFormatter 对象，以根据指定区域设置的约定以及提供的日期和时间格式设置样式来设置日期和时间的格式。日期和时间样式用于将日期和时间格式设置模式设置为操作系统中预定义的与区域设置相关的模式。
		 
		  <p class="- topic/p ">此构造函数确定当前操作系统是否支持请求的区域设置 ID 名称。如果不支持，则使用回退区域设置。回退区域设置 ID 的名称可通过 <codeph class="+ topic/ph pr-d/codeph ">actualLocaleIDName</codeph> 属性确定。 
		  </p><p class="- topic/p ">
		  如果回退用于任何 <codeph class="+ topic/ph pr-d/codeph ">requestedLocaleIDName</codeph>、<codeph class="+ topic/ph pr-d/codeph ">dateStyle</codeph> 或 <codeph class="+ topic/ph pr-d/codeph ">timeStyle</codeph> 参数，则会设置 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性来表示回退类型。 
		 	</p>
		  <p class="- topic/p ">要根据用户的当前操作系统首选项进行格式设置，请将 <codeph class="+ topic/ph pr-d/codeph ">requestedLocaleIDName</codeph> 参数中的值 <codeph class="+ topic/ph pr-d/codeph ">LocaleID.DEFAULT</codeph> 传递给构造函数。
		  </p>
		 
		 <p class="- topic/p ">调用构造函数并成功完成后，将 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性设置为：</p>
		 <ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">LastOperationStatus.NO_ERROR</codeph></li></ul>
		 <p class="- topic/p ">如果请求的区域设置 ID 名称不可用，则将 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性设置为下列属性之一：</p>
		 <ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">LastOperationStatus.USING_FALLBACK_WARNING</codeph></li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">LastOperationStatus.USING_DEFAULT_WARNING</codeph></li></ul>
		 <p class="- topic/p ">否则，将 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性设置为 LastOperationStatus 类中定义的其中一个常量。</p>
		 
		 <p class="- topic/p ">有关以上列出的警告和 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性其他可能值的详细信息，请参阅 <codeph class="+ topic/ph pr-d/codeph ">LastOperationStatus</codeph> 类中的说明。</p>
		 
		  </apiDesc></apiConstructorDetail><related-links class="- topic/related-links "><link href="flash.globalization.xml#DateTimeFormatter/lastOperationStatus" class="- topic/link "><linktext class="- topic/linktext ">lastOperationStatus</linktext></link><link href="flash.globalization.xml#DateTimeFormatter/requestedLocaleIDName" class="- topic/link "><linktext class="- topic/linktext ">requestedLocaleIDName</linktext></link><link href="flash.globalization.xml#DateTimeFormatter/actualLocaleIDName" class="- topic/link "><linktext class="- topic/linktext ">actualLocaleIDName</linktext></link><link href="flash.globalization.xml#DateTimeStyle" class="- topic/link "><linktext class="- topic/linktext ">DateTimeStyle</linktext></link><link href="flash.globalization.xml#LastOperationStatus" class="- topic/link "><linktext class="- topic/linktext ">LastOperationStatus</linktext></link><link href="flash.globalization.xml#LocaleID" class="- topic/link "><linktext class="- topic/linktext ">LocaleID</linktext></link></related-links></apiConstructor><apiOperation id="flash.globalization:DateTimeFormatter:formatUTC" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">formatUTC</apiName><shortdesc class="- topic/shortdesc ">
		 根据 dateStyle、timeStyle 或日期时间模式，设置解释为以 UTC 时间表示（使用 Date 对象的 UTC 组成组件，如 dateUTC、dayUTC、fullYearUTC、hoursUTC、minutesUTC、monthUTC 和 secondsUTC）的 Date 对象的显示字符串的格式。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">表示日期或时间值的设置了格式的字符串。 
		 
		 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">dateTime</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Date</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">要设置格式的 <codeph class="+ topic/ph pr-d/codeph ">Date</codeph> 值。 
		 </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 根据 dateStyle、timeStyle 或日期时间模式，设置解释为以 UTC 时间表示（使用 Date 对象的 UTC 组成组件，如 dateUTC、dayUTC、fullYearUTC、hoursUTC、minutesUTC、monthUTC 和 secondsUTC）的 Date 对象的显示字符串的格式。将使用为此 DateTimeFormatter 实例指定的区域设置 ID 的约定和日期样式及时间样式或者自定义的日期模式和时间模式来完成格式设置。
		 
		 <p class="- topic/p ">调用此方法并成功完成后，将 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性设置为：</p>
		 <ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">LastOperationStatus.NO_ERROR</codeph></li></ul>
		 <p class="- topic/p ">否则，将 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性设置为 <codeph class="+ topic/ph pr-d/codeph ">LastOperationStatus</codeph> 类中定义的一个常量。</p>
		 
		 </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.globalization.xml#DateTimeFormatter/setDateTimeStyles()" class="- topic/link "><linktext class="- topic/linktext ">setDateTimeStyles()</linktext></link><link href="flash.globalization.xml#DateTimeFormatter/setDateTimePattern()" class="- topic/link "><linktext class="- topic/linktext ">setDateTimePattern()</linktext></link><link href="flash.globalization.xml#DateTimeFormatter/getDateStyle()" class="- topic/link "><linktext class="- topic/linktext ">getDateStyle()</linktext></link><link href="flash.globalization.xml#DateTimeFormatter/getTimeStyle()" class="- topic/link "><linktext class="- topic/linktext ">getTimeStyle()</linktext></link><link href="flash.globalization.xml#DateTimeFormatter/lastOperationStatus" class="- topic/link "><linktext class="- topic/linktext ">lastOperationStatus</linktext></link><link href="flash.globalization.xml#LastOperationStatus" class="- topic/link "><linktext class="- topic/linktext ">LastOperationStatus</linktext></link></related-links></apiOperation><apiOperation id="flash.globalization:DateTimeFormatter:format" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">format</apiName><shortdesc class="- topic/shortdesc ">
		 设置解释为以用户本地时间表示（使用 Date 对象的本地时间组件，如 date、day、fullYear、hours、minutes、month 和 seconds）的 Date 对象的显示字符串的格式。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">表示日期或时间值的设置了格式的字符串。 
		 
		 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">dateTime</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Date</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">要设置格式的 <codeph class="+ topic/ph pr-d/codeph ">Date</codeph> 值。 
		 </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 设置解释为以用户本地时间表示（使用 Date 对象的本地时间组件，如 date、day、fullYear、hours、minutes、month 和 seconds）的 Date 对象的显示字符串的格式。将使用为此 DateTimeFormatter 实例指定的区域设置 ID 的约定和日期样式及时间样式或者自定义的日期模式和时间模式来完成格式设置。
		 
		 <p class="- topic/p ">调用此方法并成功完成后，将 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性设置为：</p>
		 <ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">LastOperationStatus.NO_ERROR</codeph></li></ul>
		 <p class="- topic/p ">否则，将 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性设置为 <codeph class="+ topic/ph pr-d/codeph ">LastOperationStatus</codeph> 类中定义的一个常量。</p>
		 
		 </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.globalization.xml#DateTimeFormatter/setDateTimeStyles()" class="- topic/link "><linktext class="- topic/linktext ">setDateTimeStyles()</linktext></link><link href="flash.globalization.xml#DateTimeFormatter/setDateTimePattern()" class="- topic/link "><linktext class="- topic/linktext ">setDateTimePattern()</linktext></link><link href="flash.globalization.xml#DateTimeFormatter/getDateStyle()" class="- topic/link "><linktext class="- topic/linktext ">getDateStyle()</linktext></link><link href="flash.globalization.xml#DateTimeFormatter/getTimeStyle()" class="- topic/link "><linktext class="- topic/linktext ">getTimeStyle()</linktext></link><link href="flash.globalization.xml#DateTimeFormatter/lastOperationStatus" class="- topic/link "><linktext class="- topic/linktext ">lastOperationStatus</linktext></link><link href="flash.globalization.xml#LastOperationStatus" class="- topic/link "><linktext class="- topic/linktext ">LastOperationStatus</linktext></link></related-links></apiOperation><apiOperation id="flash.globalization:DateTimeFormatter:getAvailableLocaleIDNames" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">getAvailableLocaleIDNames</apiName><shortdesc class="- topic/shortdesc ">
		 列出此类支持的所有区域设置 ID 名称。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">一个字符串矢量，其中包含此类支持的所有区域设置 ID 名称。
		 
  		 </apiDesc><apiType value="Vector$String" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 列出此类支持的所有区域设置 ID 名称。 
		 
		 <p class="- topic/p ">如果当前操作系统不支持此类，此方法返回 null 值。</p>
		 
		 <p class="- topic/p ">调用此方法并成功完成后，将 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性设置为：</p>
		 <ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">LastOperationStatus.NO_ERROR</codeph></li></ul>
		 <p class="- topic/p ">否则，将 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性设置为 <codeph class="+ topic/ph pr-d/codeph ">LastOperationStatus</codeph> 类中定义的一个常量。</p>
		 
		 </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.globalization.xml#DateTimeFormatter/lastOperationStatus" class="- topic/link "><linktext class="- topic/linktext ">lastOperationStatus</linktext></link><link href="flash.globalization.xml#LastOperationStatus" class="- topic/link "><linktext class="- topic/linktext ">LastOperationStatus</linktext></link><link href="flash.globalization.xml#LocaleID" class="- topic/link "><linktext class="- topic/linktext ">LocaleID</linktext></link></related-links></apiOperation><apiOperation id="flash.globalization:DateTimeFormatter:getDateStyle" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">getDateStyle</apiName><shortdesc class="- topic/shortdesc ">
		 获取此实例 DateTimeFormatter 的日期样式。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">此格式程序的日期样式字符串。
		 <p class="- topic/p ">可能的值： </p>
		 <ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">DateTimeStyle.LONG</codeph> </li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">DateTimeStyle.MEDIUM</codeph> </li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">DateTimeStyle.SHORT</codeph></li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">DateTimeStyle.NONE</codeph></li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">DateTimeStyle.CUSTOM</codeph></li></ul>
		 
		 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 获取此实例 DateTimeFormatter 的日期样式。日期样式用于从操作系统检索预定义的日期格式设置模式。可通过 <codeph class="+ topic/ph pr-d/codeph ">DateTimeFormatter()</codeph> 构造函数、<codeph class="+ topic/ph pr-d/codeph ">setDateTimeStyles()</codeph> 方法或 <codeph class="+ topic/ph pr-d/codeph ">setDateTimePattern()</codeph> 方法设置日期样式值。
		 
		 <p class="- topic/p ">调用此方法并成功完成后，将 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性设置为：</p>
		 <ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">LastOperationStatus.NO_ERROR</codeph></li></ul>
		 <p class="- topic/p ">否则，将 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性设置为 <codeph class="+ topic/ph pr-d/codeph ">LastOperationStatus</codeph> 类中定义的一个常量。</p>
		 
		 </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.globalization.xml#DateTimeFormatter/setDateTimeStyles()" class="- topic/link "><linktext class="- topic/linktext ">setDateTimeStyles()</linktext></link><link href="flash.globalization.xml#DateTimeFormatter/setDateTimePattern()" class="- topic/link "><linktext class="- topic/linktext ">setDateTimePattern()</linktext></link><link href="flash.globalization.xml#DateTimeFormatter/lastOperationStatus" class="- topic/link "><linktext class="- topic/linktext ">lastOperationStatus</linktext></link><link href="flash.globalization.xml#DateTimeStyle" class="- topic/link "><linktext class="- topic/linktext ">DateTimeStyle</linktext></link><link href="flash.globalization.xml#DateTimeFormatter" class="- topic/link "><linktext class="- topic/linktext ">DateTimeFormatter</linktext></link><link href="flash.globalization.xml#LastOperationStatus" class="- topic/link "><linktext class="- topic/linktext ">LastOperationStatus</linktext></link></related-links></apiOperation><apiOperation id="flash.globalization:DateTimeFormatter:getDateTimePattern" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">getDateTimePattern</apiName><shortdesc class="- topic/shortdesc ">
		 返回此 DateTimeFormatter 对象设置日期和时间格式所用的模式字符串。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">一个字符串，其中包含此 DateTimeFormatter 对象设置日期和时间格式所用的模式。
		 
		 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 返回此 DateTimeFormatter 对象设置日期和时间格式所用的模式字符串。
		 
		 <p class="- topic/p ">可以使用以下三种方法之一设置此模式：</p>
		 <ol class="- topic/ol "><li class="- topic/li ">通过构造函数中使用的 <codeph class="+ topic/ph pr-d/codeph ">dateStyle</codeph> 和 <codeph class="+ topic/ph pr-d/codeph ">timeStyle</codeph> 参数。</li><li class="- topic/li ">通过 <codeph class="+ topic/ph pr-d/codeph ">setDateTimeStyles()</codeph> 方法。</li><li class="- topic/li ">通过 <codeph class="+ topic/ph pr-d/codeph ">setDateTimePattern()</codeph> 方法。</li></ol>
		 <p class="- topic/p ">有关模式语法的说明，请参阅 <codeph class="+ topic/ph pr-d/codeph ">setDateTimePattern()</codeph> 方法。
		 </p>
		 
		 <p class="- topic/p ">调用此方法并成功完成后，将 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性设置为：</p>
		 <ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">LastOperationStatus.NO_ERROR</codeph></li></ul>
		 <p class="- topic/p ">否则，将 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性设置为 <codeph class="+ topic/ph pr-d/codeph ">LastOperationStatus</codeph> 类中定义的一个常量。</p>
		 
		 </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.globalization.xml#DateTimeFormatter" class="- topic/link "><linktext class="- topic/linktext ">DateTimeFormatter</linktext></link><link href="flash.globalization.xml#DateTimeFormatter/setDateTimeStyles()" class="- topic/link "><linktext class="- topic/linktext ">setDateTimeStyles()</linktext></link><link href="flash.globalization.xml#DateTimeFormatter/setDateTimePattern()" class="- topic/link "><linktext class="- topic/linktext ">setDateTimePattern()</linktext></link><link href="flash.globalization.xml#DateTimeFormatter/lastOperationStatus" class="- topic/link "><linktext class="- topic/linktext ">lastOperationStatus</linktext></link><link href="flash.globalization.xml#LastOperationStatus" class="- topic/link "><linktext class="- topic/linktext ">LastOperationStatus</linktext></link></related-links></apiOperation><apiOperation id="flash.globalization:DateTimeFormatter:getFirstWeekday" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">getFirstWeekday</apiName><shortdesc class="- topic/shortdesc ">
		 返回一个整数，它对应于此区域设置和日历系统的每周第一天。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">一个整数，对应于此区域设置和日历系统的每周第一天。
		 
  		 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 返回一个整数，它对应于此区域设置和日历系统的每周第一天。值 0 对应于星期日，1 对应于星期一，依此类推，6 对应于星期六。
		 
		 <p class="- topic/p ">调用此方法并成功完成后，将 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性设置为：</p>
		 <ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">LastOperationStatus.NO_ERROR</codeph></li></ul>
		 <p class="- topic/p ">否则，将 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性设置为 <codeph class="+ topic/ph pr-d/codeph ">LastOperationStatus</codeph> 类中定义的一个常量。</p>
		 
		 </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.globalization.xml#DateTimeFormatter/lastOperationStatus" class="- topic/link "><linktext class="- topic/linktext ">lastOperationStatus</linktext></link><link href="flash.globalization.xml#LastOperationStatus" class="- topic/link "><linktext class="- topic/linktext ">LastOperationStatus</linktext></link></related-links></apiOperation><apiOperation id="flash.globalization:DateTimeFormatter:getMonthNames" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">getMonthNames</apiName><shortdesc class="- topic/shortdesc ">
		 检索包含当前日历系统的月名称的本地化字符串列表。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">如果 <codeph class="+ topic/ph pr-d/codeph ">nameStyle</codeph> 或 <codeph class="+ topic/ph pr-d/codeph ">context</codeph> 参数为 null。
		 
  		 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">TypeError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">TypeError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">一个本地化字符串矢量，其中包含指定区域设置、名称样式和上下文的月名称。矢量中位于索引 0 处的第一个元素表示一年中第一个月的名称；下一个元素表示一年中第二个月的名称；以此类推。
		 </apiDesc><apiType value="Vector$String" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">nameStyle</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">full</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">表示要使用的名称字符串样式。有效值为：
		        <ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">DateTimeNameStyle.FULL</codeph></li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">DateTimeNameStyle.LONG_ABBREVIATION</codeph></li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">DateTimeNameStyle.SHORT_ABBREVIATION</codeph></li></ul>
		 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">context</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">standalone</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">一个代码，表示在其中使用设置了格式的字符串的上下文。此上下文仅对于某些区域设置不同。有效值为：
		        <ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">DateTimeNameContext.FORMAT</codeph></li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">DateTimeNameContext.STANDALONE</codeph></li></ul>
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 检索包含当前日历系统的月名称的本地化字符串列表。列表中的第一个元素表示一年中第一个月的名称。
		 
		 <p class="- topic/p ">调用此方法并成功完成后，将 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性设置为：</p>
		 <ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">LastOperationStatus.NO_ERROR</codeph></li></ul>
		 <p class="- topic/p ">否则，将 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性设置为 <codeph class="+ topic/ph pr-d/codeph ">LastOperationStatus</codeph> 类中定义的一个常量。</p>
		 
		 </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.globalization.xml#DateTimeFormatter/lastOperationStatus" class="- topic/link "><linktext class="- topic/linktext ">lastOperationStatus</linktext></link><link href="flash.globalization.xml#DateTimeNameContext" class="- topic/link "><linktext class="- topic/linktext ">DateTimeNameContext</linktext></link><link href="flash.globalization.xml#DateTimeNameStyle" class="- topic/link "><linktext class="- topic/linktext ">DateTimeNameStyle</linktext></link><link href="flash.globalization.xml#LastOperationStatus" class="- topic/link "><linktext class="- topic/linktext ">LastOperationStatus</linktext></link></related-links></apiOperation><apiOperation id="flash.globalization:DateTimeFormatter:getTimeStyle" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">getTimeStyle</apiName><shortdesc class="- topic/shortdesc ">
		 获取此实例 DateTimeFormatter 的时间样式。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">此格式程序的时间样式字符串。
		 <p class="- topic/p ">可能的值： </p>
		 <ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">DateTimeStyle.LONG</codeph> </li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">DateTimeStyle.MEDIUM</codeph> </li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">DateTimeStyle.SHORT</codeph></li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">DateTimeStyle.NONE</codeph></li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">DateTimeStyle.CUSTOM</codeph></li></ul>
		 
		 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 获取此实例 DateTimeFormatter 的时间样式。时间样式用于从操作系统检索预定义的时间格式设置模式。可通过 <codeph class="+ topic/ph pr-d/codeph ">DateTimeFormatter()</codeph> 构造函数、<codeph class="+ topic/ph pr-d/codeph ">setDateTimeStyles()</codeph> 方法或 <codeph class="+ topic/ph pr-d/codeph ">setDateTimePattern()</codeph> 方法设置时间样式值。
		 
		 <p class="- topic/p ">调用此方法并成功完成后，将 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性设置为：</p>
		 <ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">LastOperationStatus.NO_ERROR</codeph></li></ul>
		 <p class="- topic/p ">否则，将 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性设置为 <codeph class="+ topic/ph pr-d/codeph ">LastOperationStatus</codeph> 类中定义的一个常量。</p>
		 
		 </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.globalization.xml#DateTimeFormatter/setDateTimeStyles()" class="- topic/link "><linktext class="- topic/linktext ">setDateTimeStyles()</linktext></link><link href="flash.globalization.xml#DateTimeFormatter/setDateTimePattern()" class="- topic/link "><linktext class="- topic/linktext ">setDateTimePattern()</linktext></link><link href="flash.globalization.xml#DateTimeFormatter/lastOperationStatus" class="- topic/link "><linktext class="- topic/linktext ">lastOperationStatus</linktext></link><link href="flash.globalization.xml#DateTimeStyle" class="- topic/link "><linktext class="- topic/linktext ">DateTimeStyle</linktext></link><link href="flash.globalization.xml#DateTimeFormatter" class="- topic/link "><linktext class="- topic/linktext ">DateTimeFormatter</linktext></link><link href="flash.globalization.xml#LastOperationStatus" class="- topic/link "><linktext class="- topic/linktext ">LastOperationStatus</linktext></link></related-links></apiOperation><apiOperation id="flash.globalization:DateTimeFormatter:getWeekdayNames" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">getWeekdayNames</apiName><shortdesc class="- topic/shortdesc ">
		 检索包含当前日历系统的工作日名称的本地化字符串列表。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">如果 <codeph class="+ topic/ph pr-d/codeph ">nameStyle</codeph> 或 <codeph class="+ topic/ph pr-d/codeph ">context</codeph> 参数为 null。
		 
  		 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">TypeError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">TypeError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">一个本地化字符串矢量，其中包含指定区域设置、名称样式和上下文的月名称。矢量中位于索引 0 处的第一个元素是星期日的名称；下一个元素是星期一的名称；依此类推。
		 </apiDesc><apiType value="Vector$String" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">nameStyle</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">full</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">表示要使用的名称字符串样式。有效值为：
		        <ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">DateTimeNameStyle.FULL</codeph></li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">DateTimeNameStyle.LONG_ABBREVIATION</codeph></li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">DateTimeNameStyle.SHORT_ABBREVIATION</codeph></li></ul>
		 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">context</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">standalone</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">一个代码，表示在其中使用设置了格式的字符串的上下文。该上下文仅适用于月份名称随上下文变化的特定区域设置。例如，在希腊语中，月份名称单独显示时同与日一起显示时不同。有效值为：
		        <ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">DateTimeNameContext.FORMAT</codeph></li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">DateTimeNameContext.STANDALONE</codeph></li></ul>
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 检索包含当前日历系统的工作日名称的本地化字符串列表。列表中的第一个元素表示星期日的名称。
		 
		 <p class="- topic/p ">调用此方法并成功完成后，将 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性设置为：</p>
		 <ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">LastOperationStatus.NO_ERROR</codeph></li></ul>
		 <p class="- topic/p ">否则，将 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性设置为 <codeph class="+ topic/ph pr-d/codeph ">LastOperationStatus</codeph> 类中定义的一个常量。</p>
		 
		 </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.globalization.xml#DateTimeFormatter/lastOperationStatus" class="- topic/link "><linktext class="- topic/linktext ">lastOperationStatus</linktext></link><link href="flash.globalization.xml#DateTimeNameContext" class="- topic/link "><linktext class="- topic/linktext ">DateTimeNameContext</linktext></link><link href="flash.globalization.xml#DateTimeNameStyle" class="- topic/link "><linktext class="- topic/linktext ">DateTimeNameStyle</linktext></link><link href="flash.globalization.xml#LastOperationStatus" class="- topic/link "><linktext class="- topic/linktext ">LastOperationStatus</linktext></link></related-links></apiOperation><apiOperation id="flash.globalization:DateTimeFormatter:setDateTimePattern" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">setDateTimePattern</apiName><shortdesc class="- topic/shortdesc ">
		 设置此 DateTimeFormatter 对象设置日期和时间格式所用的模式字符串。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">如果模式参数为 null。
		 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">TypeError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">TypeError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">pattern</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 设置此 DateTimeFormatter 对象设置日期和时间格式所用的模式字符串。
		 
		 <p class="- topic/p ">可通过以下三种方法之一设置用于对日期进行格式设置的模式：</p>
		 <ol class="- topic/ol "><li class="- topic/li ">通过构造函数中使用的 <codeph class="+ topic/ph pr-d/codeph ">dateStyle</codeph> 和 <codeph class="+ topic/ph pr-d/codeph ">timeStyle</codeph> 参数。</li><li class="- topic/li ">通过 <codeph class="+ topic/ph pr-d/codeph ">setDateTimeStyles()</codeph> 方法。</li><li class="- topic/li ">通过 <codeph class="+ topic/ph pr-d/codeph ">setDateTimePattern()</codeph> 方法。</li></ol>
		 <p class="- topic/p ">
		 使用此方法的另一结果是：将覆盖此 DateTimeFormatter 对象的当前时间和日期样式，并将其值设置为 <codeph class="+ topic/ph pr-d/codeph ">DateTimeStyle.CUSTOM</codeph>。
		 </p>
		 <p class="- topic/p ">用于定义如何设置日期和时间格式的模式字符串。模式包含一系列将设置了格式的字符串中的日期和时间值替换的字母。例如，在“yyyy/MM”模式中，字符“yyyy”被四位数字的年份替换，它后面跟“/”字符，字符“MM”被两位数字的月份替换。 
		 </p>
		 <p class="- topic/p ">模式中所用的许多字符都可以重复使用多次以产生不同的输出，如下表所示。
		 </p><p class="- topic/p ">
		 如果序列超过了模式支持的最大字母数，则会将该序列映射回所支持的该模式字母的最长序列。例如： 
		 </p>
		 		<ul class="- topic/ul "><li class="- topic/li "> MMMMMM 被替换为 MMMM</li><li class="- topic/li "> dddd 被替换为 dd</li><li class="- topic/li "> EEEEEEE 被替换为 EEEE</li><li class="- topic/li "> aa 被替换为 a</li><li class="- topic/li "> hhh 被替换为 hh</li><li class="- topic/li "> mmmm 被替换为 mm</li></ul>
		 <p class="- topic/p ">从理论上说，一个模式最多可包含 255 个字符，但某些平台具有更严格的限制。如果模式超过了模式字符限制，则 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性的值将被设置为 <codeph class="+ topic/ph pr-d/codeph ">LastOperationStatus.PATTERN_SYNTAX_ERROR</codeph>。
		 </p>
		 <p class="- topic/p ">并不是每一个操作系统都支持所有可能的模式。如果平台不支持某一种模式，则使用回退模式，并设置 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性表示使用回退模式。如果未提供合理的回退模式，则使用空字符串，并设置 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性表示不支持该模式。 
		 </p>
		 <p class="- topic/p ">下表列出了有效的模式字母以及它们的含义。 
		 </p>
		 
            <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry ">模式字母</entry><entry class="- topic/entry ">说明</entry></row><row class="- topic/row "><entry class="- topic/entry ">G</entry><entry class="- topic/entry ">纪元。由当前日期和日历的纪元字符串替换。并非所有操作系统都支持此模式。在不支持纪元的操作系统上，输入模式的字母被空字符串替换。
                  <p class="- topic/p ">纪元模式中可以包含一到五个字母，具体解释如下：</p>
                  <ul class="- topic/ul "><li class="- topic/li "> 如果有一到三个模式字母，则将使用缩写格式。 </li><li class="- topic/li "> 如果有四个模式字母，则格式将设置为完整形式。 </li><li class="- topic/li "> 如果有五个模式字母，则格式将设置为短缩写形式。 </li></ul>
                  <p class="- topic/p ">有关公历（对于支持此模式的操作系统）的示例：</p>
                  <ul class="- topic/ul "><li class="- topic/li "> G, GG, GGG = AD </li><li class="- topic/li "> GGGG = Anno Domini</li><li class="- topic/li "> GGGGG = A</li></ul></entry></row><row class="- topic/row "><entry class="- topic/entry ">y</entry><entry class="- topic/entry ">年份。如果有两个模式字母，则显示年份的最后两位数字；否则由字母数目确定要显示的数字位数。如果年份值要求显示的数字位数多于字母数目提供的位数，则将提供完整的年份值。如果年份值要求的值少于字母数目，则将用 0 来填充年份值。下面的列表显示了 1 到 2005 年份值的结果。
                  <p class="- topic/p ">示例：</p>
                  <ul class="- topic/ul "><li class="- topic/li "> y = 1</li><li class="- topic/li "> y = 2005 </li><li class="- topic/li "> yy = 01</li><li class="- topic/li "> yy = 05</li><li class="- topic/li "> yyyy = 0001 或 01，具体取决于操作系统。</li><li class="- topic/li "> yyyy = 2005</li><li class="- topic/li "> yyyyy = 01 或 0001，具体取决于操作系统。超过 4 的年份值位数回退到操作系统支持的最大数字位数。</li><li class="- topic/li "> yyyyy = 2005</li></ul></entry></row><row class="- topic/row "><entry class="- topic/entry ">M </entry><entry class="- topic/entry ">一年中的月份。月份模式中可以包含一到五个字母，具体设置如下：
                  <ul class="- topic/ul "><li class="- topic/li "> 如果有一个模式字母，则格式将设置为一位或两位数值。 </li><li class="- topic/li "> 如果有两个模式字母，则格式将设置为两位数值。 </li><li class="- topic/li "> 如果有三个模式字母，则格式将设置为长缩写形式。 </li><li class="- topic/li "> 如果有四个模式字母，则格式将解释为完整名称。 </li><li class="- topic/li "> 如果有五个模式字母，则格式将设置为短缩写形式。并非所有操作系统都支持此格式，将回退到长缩写形式。 </li></ul>
                  <p class="- topic/p ">示例：</p>
                  <ul class="- topic/ul "><li class="- topic/li "> M = 7 </li><li class="- topic/li "> MM = 07</li><li class="- topic/li "> MMM = Jul，7月</li><li class="- topic/li "> MMMM = July，7月</li><li class="- topic/li "> MMMMM = J 或 Jul，7 或 7月，具体取决于操作系统。</li></ul></entry></row><row class="- topic/row "><entry class="- topic/entry ">d </entry><entry class="- topic/entry ">一个月中的某一天。月中某天模式中可以包含一个或两个字母，具体设置如下：
                  <ul class="- topic/ul "><li class="- topic/li "> 如果有一个模式字母，则格式将设置为一位或两位数值。 </li><li class="- topic/li "> 如果有两个模式字母，则格式将设置为两位数值。 </li></ul>
                  <p class="- topic/p ">示例：</p>
                  <ul class="- topic/ul "><li class="- topic/li "> d = 4 </li><li class="- topic/li "> dd = 04</li><li class="- topic/li "> dd = 14</li></ul></entry></row><row class="- topic/row "><entry class="- topic/entry ">E</entry><entry class="- topic/entry ">星期中的天。星期中某天模式中可以包含一到五个字母，具体设置如下：
                  <ul class="- topic/ul "><li class="- topic/li "> 如果有三个模式字母，则格式将设置为长缩写形式。 </li><li class="- topic/li "> 如果有四个模式字母，则格式将解释为完整名称。 </li><li class="- topic/li "> 如果有五个模式字母，则格式将设置为短缩写形式。并非所有操作系统都支持此格式，将回退到长缩写形式。 </li></ul>
                  <p class="- topic/p ">示例：</p>
                  <ul class="- topic/ul "><li class="- topic/li "> E，EE，EEE = Tues</li><li class="- topic/li "> EEEE = Tuesday</li><li class="- topic/li "> EEEEE = T 或 Tues，具体取决于操作系统。</li></ul></entry></row><row class="- topic/row "><entry class="- topic/entry ">Q</entry><entry class="- topic/entry ">季度。某些平台不支持此模式。季度模式中可以包含一到四个字母，具体设置如下：
                  <ul class="- topic/ul "><li class="- topic/li "> 如果有一个模式字母，则格式将设置为一位数值。 </li><li class="- topic/li "> 如果有两个模式字母，则格式将设置为两位数值。 </li><li class="- topic/li "> 如果有三个模式字母，则格式将设置为缩写。 </li><li class="- topic/li "> 如果有四个模式字母，则格式将解释为完整名称。 </li></ul>
                  <p class="- topic/p ">示例（对于支持此模式的操作系统）：</p>
                  <ul class="- topic/ul "><li class="- topic/li "> Q = 2 </li><li class="- topic/li "> QQ = 02</li><li class="- topic/li "> QQQ = Q2</li><li class="- topic/li "> QQQQ = 第二季度</li></ul></entry></row><row class="- topic/row "><entry class="- topic/entry ">w</entry><entry class="- topic/entry ">一年中的某一周。某些平台不支持此模式。此模式中可以包含一到两个字母，具体设置如下所示。
                  <ul class="- topic/ul "><li class="- topic/li "> 如果有一个模式字母，则格式将设置为一位或两位数值。 </li><li class="- topic/li "> 如果有两个模式字母，则格式将设置为两位数值。 </li></ul>
                  <p class="- topic/p ">以一年的第二周为例（对于支持此模式的操作系统）：</p>
                  <ul class="- topic/ul "><li class="- topic/li "> w = 2 </li><li class="- topic/li "> ww = 02</li></ul></entry></row><row class="- topic/row "><entry class="- topic/entry ">W</entry><entry class="- topic/entry ">一个月中的某一周。某些平台不支持此模式。此模式只可包含一个字母。
                  <p class="- topic/p ">以 7 月的第二周为例（对于支持此模式的操作系统）：</p>
                  <ul class="- topic/ul "><li class="- topic/li "> W = 2 </li></ul></entry></row><row class="- topic/row "><entry class="- topic/entry ">D</entry><entry class="- topic/entry ">一年中的某一天。某些平台不支持此模式。此模式中可以包含一到三个字母。
                  <p class="- topic/p ">以一年中的第二天为例（对于支持此模式的操作系统）：</p>
                  <ul class="- topic/ul "><li class="- topic/li "> D = 2 </li><li class="- topic/li "> DD = 02</li><li class="- topic/li "> DDD = 002</li></ul></entry></row><row class="- topic/row "><entry class="- topic/entry ">F</entry><entry class="- topic/entry ">日历月中每周第某天的出现次数。例如，如果用来为 10 月份的第三个星期一设置日期格式，此元素显示“3”。此模式只可包含一个字母。 
                  <p class="- topic/p ">以 7 月份的第二个星期三为例（对于支持此模式的操作系统）：</p>
                  <ul class="- topic/ul "><li class="- topic/li "> F = 2</li></ul></entry></row><row class="- topic/row "><entry class="- topic/entry ">一个</entry><entry class="- topic/entry ">AM/PM 表示器。此模式只可包含一个字母：a 或 p。
                  <p class="- topic/p ">示例：</p>
                  <ul class="- topic/ul "><li class="- topic/li "> a = AM，午前</li><li class="- topic/li "> p = PM，午后</li></ul></entry></row><row class="- topic/row "><entry class="- topic/entry ">h</entry><entry class="- topic/entry ">使用 12 小时制的一天中的某个小时 [1 - 12]。此模式必须包含一个或两个字母。
                  <p class="- topic/p ">示例：</p>
                  <ul class="- topic/ul "><li class="- topic/li "> h = 1</li><li class="- topic/li "> h = 12</li><li class="- topic/li "> hh = 01</li></ul></entry></row><row class="- topic/row "><entry class="- topic/entry ">H</entry><entry class="- topic/entry ">使用 24 小时制的一天中的某个小时 [0 - 23]。此模式必须包含一个或两个字母。
                  <p class="- topic/p ">示例：</p>
                  <ul class="- topic/ul "><li class="- topic/li "> H = 0</li><li class="- topic/li "> H = 23</li><li class="- topic/li "> HH = 00</li></ul></entry></row><row class="- topic/row "><entry class="- topic/entry ">K</entry><entry class="- topic/entry ">使用 12 小时制的一天中的某个小时 [0 - 11]。此模式必须包含一个或两个字母。并非所有操作系统都支持此模式。 
                  <p class="- topic/p ">示例（对于支持此模式的操作系统）：</p>
                  <ul class="- topic/ul "><li class="- topic/li "> K = 0</li><li class="- topic/li "> K = 11</li><li class="- topic/li "> KK = 00</li></ul></entry></row><row class="- topic/row "><entry class="- topic/entry ">k</entry><entry class="- topic/entry ">使用 24 小时制的一天中的某个小时 [1 - 24]。此模式必须包含一个或两个字母。并非所有操作系统都支持此模式。 
                  <p class="- topic/p ">示例（对于支持此模式的操作系统）：</p>
                  <ul class="- topic/ul "><li class="- topic/li "> k = 1</li><li class="- topic/li "> k = 24</li><li class="- topic/li "> kk = 01</li></ul></entry></row><row class="- topic/row "><entry class="- topic/entry ">m</entry><entry class="- topic/entry ">小时内第几分钟 [0 - 59]。此模式必须包含一个或两个字母。
                  <p class="- topic/p ">示例：</p>
                  <ul class="- topic/ul "><li class="- topic/li "> m = 2</li><li class="- topic/li "> m = 59</li><li class="- topic/li "> mm = 02</li></ul></entry></row><row class="- topic/row "><entry class="- topic/entry ">s</entry><entry class="- topic/entry ">分钟内第几秒 [0 - 59]。此模式必须包含一个或两个字母。
                  <p class="- topic/p ">示例：</p>
                  <ul class="- topic/ul "><li class="- topic/li "> s = 2</li><li class="- topic/li "> s = 59</li><li class="- topic/li "> ss = 02</li></ul></entry></row><row class="- topic/row "><entry class="- topic/entry ">S</entry><entry class="- topic/entry ">毫秒。此模式必须包含一到五个字母。根据使用的字母数对此值进行舍入。当使用五个字符 (SSSSS) 时，它表示毫秒小数。
                  <p class="- topic/p ">示例：</p>
                  <ul class="- topic/ul "><li class="- topic/li "> S = 2</li><li class="- topic/li "> SS = 24</li><li class="- topic/li "> SSS = 235</li><li class="- topic/li "> SSSS = 2350</li><li class="- topic/li "> SSSSS = 23500</li></ul></entry></row><row class="- topic/row "><entry class="- topic/entry ">z</entry><entry class="- topic/entry ">时区。将时区表示为相对于标准时间或夏令时（而无需参考特定位置）的字符串。并非所有操作系统都支持此模式。在不支持时区模式的操作系统上，输入模式的字母被空字符串替换。在不支持此模式的操作系统上，并不是所有的区域设置都有定义的字符串。这些区域设置将回退到本地化 GMT 格式，例如 GMT-08:00 或 GW-08:00
                  <p class="- topic/p ">此时区模式必须包含一到四个字母，具体设置如下：</p>
                  <ul class="- topic/ul "><li class="- topic/li "> 如果有一到三个模式字母，则格式将设置为缩写形式。 </li><li class="- topic/li "> 如果有四个模式字母，则格式将解释为完整名称。 </li></ul>
                  <p class="- topic/p ">示例（对于支持此格式的操作系统）：</p>
                  <ul class="- topic/ul "><li class="- topic/li "> z，zz，zzz = PDT</li><li class="- topic/li "> z，zz，zzz = PST</li><li class="- topic/li "> z，zz，zzz = GMT-0800</li><li class="- topic/li "> zzzz = 太平洋夏令时</li><li class="- topic/li "> zzzz = 太平洋标准时间</li></ul></entry></row><row class="- topic/row "><entry class="- topic/entry ">Z</entry><entry class="- topic/entry ">时区。将时区表示为与 GMT 的偏移。并非所有操作系统都支持此模式。在不支持时区模式的操作系统上，输入模式的字母被空字符串替换。
                  <p class="- topic/p ">此时区模式必须包含一到四个字母，具体设置如下：</p>
                  <ul class="- topic/ul "><li class="- topic/li "> 如果有一到三个模式字母，则格式将使用 RFC 822 格式。 </li><li class="- topic/li "> 如果有四个模式字母，则格式将使用本地化的 GMT 格式。对于不具有本地化 GMT 格式的区域设置，此模式回退到的未本地化的 GMT 格式。 </li></ul>
                  <p class="- topic/p ">示例（对于支持此格式的操作系统）：</p>
                  <ul class="- topic/ul "><li class="- topic/li "> Z，ZZ，ZZZ = -0800</li><li class="- topic/li "> ZZZZ = GMT-08:00，GW-08:00</li></ul></entry></row><row class="- topic/row "><entry class="- topic/entry ">v</entry><entry class="- topic/entry ">时区。表示不需要参考特定位置或区分夏令时或标准时间的一般时区的字符串。并非所有操作系统都支持此模式。在不支持时区模式的操作系统上，输入模式的字母被空字符串替换。在支持此模式的操作系统上，如果本地化名称不可用，则提供回退字符串。
                  <p class="- topic/p ">此时区模式必须包含一个或四个字母，具体设置如下：</p>
                  <ul class="- topic/ul "><li class="- topic/li "> 如果有一个模式字母，则格式使用缩写形式。 </li><li class="- topic/li "> 如果有四个模式字母，则格式使用完整形式。 </li></ul>
                  <p class="- topic/p ">示例（对于支持此格式的操作系统）：</p>
                  <ul class="- topic/ul "><li class="- topic/li "> v = PT</li><li class="- topic/li "> vvvv = 太平洋时间</li></ul></entry></row><row class="- topic/row "><entry class="- topic/entry ">“其他文本”</entry><entry class="- topic/entry ">模式字符串中可以包含文本和标点。但是，从 a 到 z 和从 A 到 Z 的字符都被保留为语法字符，要将其包含在设置了格式的字符串中，则必须使用单引号将其引起来。要将单引号包含在结果字符串中，则必须在模式字符串中使用两个单引号。这两个单引号可以出现在模式字符串中带引号部分的内部或外部。不匹配的单引号对在字符串的结尾处被终止。
                  <p class="- topic/p ">示例：</p>
                  <ul class="- topic/ul "><li class="- topic/li "> EEEE, MMM. d, yyyy 'at' h 'o''clock' a= Tuesday, Sept. 8, 2005 at 1 o'clock PM</li><li class="- topic/li "> yyyy年M月d日 = 2005年9月8日</li><li class="- topic/li "> mm''ss'' = 43'01'</li></ul></entry></row></tbody></tgroup></adobetable>
		 
		 <p class="- topic/p ">调用此方法并成功完成后，将 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性设置为：</p>
		 <ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">LastOperationStatus.NO_ERROR</codeph></li></ul>
		 <p class="- topic/p ">否则，将 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性设置为 <codeph class="+ topic/ph pr-d/codeph ">LastOperationStatus</codeph> 类中定义的一个常量。</p>
		 
		 </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.globalization.xml#DateTimeFormatter" class="- topic/link "><linktext class="- topic/linktext ">DateTimeFormatter</linktext></link><link href="flash.globalization.xml#DateTimeFormatter/setDateTimeStyles()" class="- topic/link "><linktext class="- topic/linktext ">setDateTimeStyles()</linktext></link><link href="flash.globalization.xml#DateTimeFormatter/setDateTimePattern()" class="- topic/link "><linktext class="- topic/linktext ">setDateTimePattern()</linktext></link><link href="flash.globalization.xml#DateTimeFormatter/lastOperationStatus" class="- topic/link "><linktext class="- topic/linktext ">lastOperationStatus</linktext></link><link href="flash.globalization.xml#LastOperationStatus" class="- topic/link "><linktext class="- topic/linktext ">LastOperationStatus</linktext></link></related-links></apiOperation><apiOperation id="flash.globalization:DateTimeFormatter:setDateTimeStyles" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">setDateTimeStyles</apiName><shortdesc class="- topic/shortdesc ">
		 设置此 DateTimeFormatter 实例的日期和时间样式。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">如果 <codeph class="+ topic/ph pr-d/codeph ">dateStyle</codeph> 或 <codeph class="+ topic/ph pr-d/codeph ">timeStyle</codeph> 参数不是有效的 DateTimeStyle 常量。
		 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">如果 <codeph class="+ topic/ph pr-d/codeph ">dateStyle</codeph> 或 <codeph class="+ topic/ph pr-d/codeph ">timeStyle</codeph> 参数为 null。
 	     
		 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">TypeError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">TypeError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">dateStyle</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">指定设置日期格式时使用的样式。此值对应于由 DateTimeStyle 类枚举的一个值：
		         <ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">DateTimeStyle.LONG</codeph> </li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">DateTimeStyle.MEDIUM</codeph></li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">DateTimeStyle.SHORT</codeph> </li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">DateTimeStyle.NONE</codeph> </li></ul>
		 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">timeStyle</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">指定设置时间格式时使用的样式。此值对应于由 DateTimeStyle 类枚举的一个值：
		         <ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">DateTimeStyle.LONG</codeph> </li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">DateTimeStyle.MEDIUM</codeph></li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">DateTimeStyle.SHORT</codeph> </li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">DateTimeStyle.NONE</codeph> </li></ul>
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 设置此 DateTimeFormatter 实例的日期和时间样式。日期和时间样式用于将日期和时间格式设置模式设置为操作系统中预定义的、与区域设置相关的模式。此方法可替换使用 <codeph class="+ topic/ph pr-d/codeph ">DateTimeFormatter()</codeph> 构造函数或使用 <codeph class="+ topic/ph pr-d/codeph ">setDateTimePattern()</codeph> 方法设置的样式。日期和时间模式还根据设置的样式更新。
		 
		 <p class="- topic/p ">调用此方法并成功完成后，将 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性设置为：</p>
		 <ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">LastOperationStatus.NO_ERROR</codeph></li></ul>
		 <p class="- topic/p ">否则，将 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性设置为 <codeph class="+ topic/ph pr-d/codeph ">LastOperationStatus</codeph> 类中定义的一个常量。</p>
		 
		 </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.globalization.xml#DateTimeFormatter/DateTimeFormatter()" class="- topic/link "><linktext class="- topic/linktext ">DateTimeFormatter()</linktext></link><link href="flash.globalization.xml#DateTimeFormatter/setDateTimeStyles()" class="- topic/link "><linktext class="- topic/linktext ">setDateTimeStyles()</linktext></link><link href="flash.globalization.xml#DateTimeFormatter/setDateTimePattern()" class="- topic/link "><linktext class="- topic/linktext ">setDateTimePattern()</linktext></link><link href="flash.globalization.xml#DateTimeFormatter/lastOperationStatus" class="- topic/link "><linktext class="- topic/linktext ">lastOperationStatus</linktext></link><link href="flash.globalization.xml#DateTimeStyle" class="- topic/link "><linktext class="- topic/linktext ">DateTimeStyle</linktext></link><link href="flash.globalization.xml#LastOperationStatus" class="- topic/link "><linktext class="- topic/linktext ">LastOperationStatus</linktext></link></related-links></apiOperation><apiValue id="flash.globalization:DateTimeFormatter:actualLocaleIDName:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">actualLocaleIDName</apiName><shortdesc class="- topic/shortdesc ">
		 此 DateTimeFormatter 对象使用的实际区域设置 ID 的名称。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 此 DateTimeFormatter 对象使用的实际区域设置 ID 的名称。
		 
		 <p class="- topic/p ">根据操作系统和传递给 <codeph class="+ topic/ph pr-d/codeph ">Collator()</codeph> 构造函数的 <codeph class="+ topic/ph pr-d/codeph ">requestedLocaleIDName</codeph> 参数的值，该名称有三种可能的值。</p>
		 <ol class="- topic/ol "><li class="- topic/li ">如果请求的区域设置不是 <codeph class="+ topic/ph pr-d/codeph ">LocaleID.DEFAULT</codeph> 且操作系统支持该请求的区域设置，则返回的名称与 <codeph class="+ topic/ph pr-d/codeph ">requestedLocaleIDName</codeph> 属性相同。
		         </li><li class="- topic/li ">如果将 <codeph class="+ topic/ph pr-d/codeph ">LocaleID.DEFAULT</codeph> 用作构造函数的 <codeph class="+ topic/ph pr-d/codeph ">requestedLocaleIDName</codeph> 参数的值，则使用由用户操作系统指定的当前区域设置的名称。<codeph class="+ topic/ph pr-d/codeph ">LocaleID.DEFAULT</codeph> 值保留用户在操作系统中的自定义设置。显式值作为 <codeph class="+ topic/ph pr-d/codeph ">requestedLocaleIDName</codeph> 参数传递与使用 <codeph class="+ topic/ph pr-d/codeph ">LocaleID.DEFAULT</codeph> 所产生的结果不一定相同，即使两个区域设置 ID 名称相同，也是如此。用户可能已在他们的计算机上对区域设置进行了自定义，通过请求显式区域设置 ID 名称（而不是使用 <codeph class="+ topic/ph pr-d/codeph ">LocaleID.DEFAULT</codeph>），您的应用程序将不会检索这些自定义设置。 
		 	   <blockquote>
		         <p class="- topic/p ">例如：</p>
		 <codeblock rev="3.0" xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
		 var fmt:DateTimeFormatter = new DateTimeFormatter(LocaleID.DEFAULT);
		 var aliName:String = fmt.actualLocaleIDName;
		 </codeblock>
		         <p class="- topic/p ">在上面的示例中，<codeph class="+ topic/ph pr-d/codeph ">aliName</codeph> 是与用户当前的操作系统设置对应的区域设置的名称（例如，如果用户的区域设置设为“意大利语-意大利”，则其名称为“it-IT”），而不是“<codeph class="+ topic/ph pr-d/codeph ">i-default</codeph>”（<codeph class="+ topic/ph pr-d/codeph ">LocaleID.DEFAULT</codeph> 区域设置的名称）。</p>
		         </blockquote></li><li class="- topic/li ">如果系统不支持在构造函数中指定的 <codeph class="+ topic/ph pr-d/codeph ">requestedLocaleIDName</codeph>，则会提供回退区域设置 ID 名称。
		         <blockquote>
		         <p class="- topic/p ">例如：</p>
		 <codeblock rev="3.0" xml:space="preserve" class="+ topic/pre pr-d/codeblock "> 	 
		 var fmt:DateTimeFormatter = new DateTimeFormatter("fr-CA"); 	 
		 var aliName:String = fmt.actualLocaleIDName;
		 </codeblock>
		         <p class="- topic/p ">假设以上示例中的操作系统不支持“fr-CA”（法语-加拿大）区域设置 ID，则使用回退。在这种情况下，回退区域设置 ID 是“fr-FR”（法语-法国）。</p>
		         </blockquote></li></ol>
		 
		 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.globalization.xml#LocaleID" class="- topic/link "><linktext class="- topic/linktext ">LocaleID</linktext></link><link href="flash.globalization.xml#DateTimeFormatter/requestedLocaleIDName" class="- topic/link "><linktext class="- topic/linktext ">requestedLocaleIDName</linktext></link><link href="flash.globalization.xml#DateTimeFormatter/DateTimeFormatter()" class="- topic/link "><linktext class="- topic/linktext ">DateTimeFormatter()</linktext></link></related-links></apiValue><apiValue id="flash.globalization:DateTimeFormatter:lastOperationStatus:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">lastOperationStatus</apiName><shortdesc class="- topic/shortdesc ">
		 此 DateTimeFormatter 对象执行的前一操作的状态。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 此 DateTimeFormatter 对象执行的前一操作的状态。只要调用构造函数或此类的方法或设置另一个属性，就会设置 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性。有关可能的值，请参阅每种方法的说明。
		 
         </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.globalization.xml#LastOperationStatus" class="- topic/link "><linktext class="- topic/linktext ">LastOperationStatus</linktext></link></related-links></apiValue><apiValue id="flash.globalization:DateTimeFormatter:requestedLocaleIDName:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">requestedLocaleIDName</apiName><shortdesc class="- topic/shortdesc ">
		 传递到此 DateTimeFormatter 对象的构造函数的请求区域设置 ID 的名称。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 传递到此 DateTimeFormatter 对象的构造函数的请求区域设置 ID 的名称。
		 
		 <p class="- topic/p ">如果使用了 <codeph class="+ topic/ph pr-d/codeph ">LocaleID.DEFAULT</codeph> 值，则返回的名称将是“i-default”。如果应用了回退区域设置，则实际使用的区域设置可能与请求的区域设置不同。可以使用 <codeph class="+ topic/ph pr-d/codeph ">actualLocaleIDName</codeph> 属性检索实际区域设置的名称。
		 </p>
		 
		 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.globalization.xml#LocaleID" class="- topic/link "><linktext class="- topic/linktext ">LocaleID</linktext></link><link href="flash.globalization.xml#DateTimeFormatter/actualLocaleIDName" class="- topic/link "><linktext class="- topic/linktext ">actualLocaleIDName</linktext></link><link href="flash.globalization.xml#DateTimeFormatter/DateTimeFormatter()" class="- topic/link "><linktext class="- topic/linktext ">DateTimeFormatter()</linktext></link></related-links></apiValue></apiClassifier><apiClassifier languages="" id="flash.globalization:LastOperationStatus" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">LastOperationStatus</apiName><shortdesc class="- topic/shortdesc ">
	LastOperationStatus 类枚举那些表示最近的全球化服务操作的状态的常量值。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	LastOperationStatus 类枚举那些表示最近的全球化服务操作的状态的常量值。这些值可通过在大多数全球化类中可用的只读属性 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 检索。
	
	</apiDesc></apiClassifierDetail><apiValue id="flash.globalization:LastOperationStatus:BUFFER_OVERFLOW_ERROR" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">BUFFER_OVERFLOW_ERROR</apiName><shortdesc class="- topic/shortdesc "> 
		表示给定的缓冲区不足以容纳结果。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">bufferOverflowError</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
		表示给定的缓冲区不足以容纳结果。
		
		</apiDesc></apiValueDetail></apiValue><apiValue id="flash.globalization:LastOperationStatus:ERROR_CODE_UNKNOWN" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">ERROR_CODE_UNKNOWN</apiName><shortdesc class="- topic/shortdesc "> 
		表示返回的错误代码未知。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">errorCodeUnknown</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
		表示返回的错误代码未知。当操作失败且返回的错误代码未知时，任何非静态方法或读取/写入属性都可返回此错误。
		
		</apiDesc></apiValueDetail></apiValue><apiValue id="flash.globalization:LastOperationStatus:ILLEGAL_ARGUMENT_ERROR" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">ILLEGAL_ARGUMENT_ERROR</apiName><shortdesc class="- topic/shortdesc "> 
		表示传递给方法的参数是非法的。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">illegalArgumentError</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
		表示传递给方法的参数是非法的。
		
        <p class="- topic/p ">例如，下列代码显示当 <codeph class="+ topic/ph pr-d/codeph ">CurrencyFormatter.grouping</codeph> 属性设置为无效值“3；”时，设置了无效的参数错误状态。 </p>
        
	    <codeblock rev="3.0" xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
	    var cf:CurrencyFormatter = new CurrencyFormatter("en-US");
	    cf.groupingPattern = "3;";
	    trace(cf.lastOperationStatus); // "illegalArgumentError"
        </codeblock>
		
		</apiDesc></apiValueDetail></apiValue><apiValue id="flash.globalization:LastOperationStatus:INDEX_OUT_OF_BOUNDS_ERROR" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">INDEX_OUT_OF_BOUNDS_ERROR</apiName><shortdesc class="- topic/shortdesc "> 
		表示迭代器超出范围或者为月、日或时间指定的参数无效。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">indexOutOfBoundsError</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
		表示迭代器超出范围或者为月、日或时间指定的参数无效。
		
		</apiDesc></apiValueDetail></apiValue><apiValue id="flash.globalization:LastOperationStatus:INVALID_ATTR_VALUE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">INVALID_ATTR_VALUE</apiName><shortdesc class="- topic/shortdesc "> 
		表示给定的属性值超出了预期的范围。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">invalidAttrValue</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
		表示给定的属性值超出了预期的范围。
		
		<p class="- topic/p ">下面的示例显示将 <codeph class="+ topic/ph pr-d/codeph ">NumberFormatter.negativeNumberFormat</codeph> 属性设置为超出范围的值会导致属性值状态无效。
		</p>
	    <codeblock rev="3.0" xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
	    var nf:NumberFormatter = new NumberFormatter(LocaleID.DEFAULT);
	    nf.negativeNumberFormat = 9;
	    nf.lastOperationStatus; // "invalidAttrValue" 
		</codeblock>
		
		</apiDesc></apiValueDetail></apiValue><apiValue id="flash.globalization:LastOperationStatus:INVALID_CHAR_FOUND" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">INVALID_CHAR_FOUND</apiName><shortdesc class="- topic/shortdesc "> 
		表示找到无效的 Unicode 值。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">invalidCharFound</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
		表示找到无效的 Unicode 值。
		
		</apiDesc></apiValueDetail></apiValue><apiValue id="flash.globalization:LastOperationStatus:MEMORY_ALLOCATION_ERROR" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">MEMORY_ALLOCATION_ERROR</apiName><shortdesc class="- topic/shortdesc "> 
		表示内存分配已失败。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">memoryAllocationError</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
		表示内存分配已失败。
		
		</apiDesc></apiValueDetail></apiValue><apiValue id="flash.globalization:LastOperationStatus:NO_ERROR" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">NO_ERROR</apiName><shortdesc class="- topic/shortdesc "> 
        表示上一操作成功，未出现任何错误。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">noError</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
        表示上一操作成功，未出现任何错误。此状态可由所有构造函数、非静态方法、静态方法和读取/写入属性返回。  
		
		</apiDesc></apiValueDetail></apiValue><apiValue id="flash.globalization:LastOperationStatus:NUMBER_OVERFLOW_ERROR" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">NUMBER_OVERFLOW_ERROR</apiName><shortdesc class="- topic/shortdesc "> 
		表示操作产生的值超出指定的数字类型。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">numberOverflowError</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
		表示操作产生的值超出指定的数字类型。
		
		</apiDesc></apiValueDetail></apiValue><apiValue id="flash.globalization:LastOperationStatus:PARSE_ERROR" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">PARSE_ERROR</apiName><shortdesc class="- topic/shortdesc "> 
		表示解析数字失败。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">parseError</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
		表示解析数字失败。此状态可由 formatter 类的解析方法（如 <codeph class="+ topic/ph pr-d/codeph ">CurrencyFormatter.parse()</codeph> 和 <codeph class="+ topic/ph pr-d/codeph ">NumberFormatter.parseNumber()</codeph>）返回。例如，如果值“12abc34”作为参数传递到 <codeph class="+ topic/ph pr-d/codeph ">CurrencyFormatter.parse()</codeph> 方法，此方法返回“NaN”，并将 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 值设置为 <codeph class="+ topic/ph pr-d/codeph ">LastOperationStatus.PARSE_ERROR</codeph>。
		
		</apiDesc></apiValueDetail></apiValue><apiValue id="flash.globalization:LastOperationStatus:PATTERN_SYNTAX_ERROR" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">PATTERN_SYNTAX_ERROR</apiName><shortdesc class="- topic/shortdesc "> 
		表示设置数字、日期或时间格式所用的模式无效。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">patternSyntaxError</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
		表示设置数字、日期或时间格式所用的模式无效。如果用户的操作系统不支持指定的模式，则设置此状态。
		
		<p class="- topic/p ">例如，下列代码显示在使用无效的“xx”模式设置日期格式后 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性的值：</p>
		<codeblock rev="3.0" xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
		var df:DateTimeFormatter = new DateTimeFormatter("en-US");
		df.setDateTimePattern("xx");
	    trace(df.lastOperationStatus); // "patternSyntaxError" 
	    </codeblock>
		
		</apiDesc></apiValueDetail></apiValue><apiValue id="flash.globalization:LastOperationStatus:PLATFORM_API_FAILED" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">PLATFORM_API_FAILED</apiName><shortdesc class="- topic/shortdesc "> 
		表示基础平台 API 执行某操作失败。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">platformAPIFailed</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
		表示基础平台 API 执行某操作失败。
		
		</apiDesc></apiValueDetail></apiValue><apiValue id="flash.globalization:LastOperationStatus:TRUNCATED_CHAR_FOUND" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">TRUNCATED_CHAR_FOUND</apiName><shortdesc class="- topic/shortdesc "> 
		表示找到截断的 Unicode 字符值。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">truncatedCharFound</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
		表示找到截断的 Unicode 字符值。
		
		</apiDesc></apiValueDetail></apiValue><apiValue id="flash.globalization:LastOperationStatus:UNEXPECTED_TOKEN" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">UNEXPECTED_TOKEN</apiName><shortdesc class="- topic/shortdesc "> 
		表示在区域设置 ID 字符串中检测到意外的标记。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">unexpectedToken</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
		表示在区域设置 ID 字符串中检测到意外的标记。
		
		<p class="- topic/p ">例如，以下代码显示在请求区域设置 ID 时使用不完整的字符串后 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性的值。结果，在调用 <codeph class="+ topic/ph pr-d/codeph ">LocaleID.getKeysAndValues()</codeph> 方法后，<codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性设为值 <codeph class="+ topic/ph pr-d/codeph ">UNEXPECTED_TOKEN</codeph>。
		</p>
	    <codeblock rev="3.0" xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
	    var locale:LocaleID = new LocaleID("en-US@Collation");
		var kav:Object = locale.getKeysAndValues();
		trace(locale.lastOperationStatus); // "unexpectedToken"
		</codeblock>
		
		</apiDesc></apiValueDetail></apiValue><apiValue id="flash.globalization:LastOperationStatus:UNSUPPORTED_ERROR" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">UNSUPPORTED_ERROR</apiName><shortdesc class="- topic/shortdesc "> 
		表示不支持请求的操作或选项。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">unsupportedError</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
		表示不支持请求的操作或选项。此状态可由 <codeph class="+ topic/ph pr-d/codeph ">DateTimeFormatter.setDateTimePattern()</codeph> 等方法在检索 <codeph class="+ topic/ph pr-d/codeph ">Collator.ignoreCase</codeph> 等属性时返回。
		
		</apiDesc></apiValueDetail></apiValue><apiValue id="flash.globalization:LastOperationStatus:USING_DEFAULT_WARNING" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">USING_DEFAULT_WARNING</apiName><shortdesc class="- topic/shortdesc "> 
		表示在最近操作期间使用了操作系统默认值。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">usingDefaultWarning</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
		表示在最近操作期间使用了操作系统默认值。Class 构造函数可以返回此状态。
		
		</apiDesc></apiValueDetail></apiValue><apiValue id="flash.globalization:LastOperationStatus:USING_FALLBACK_WARNING" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">USING_FALLBACK_WARNING</apiName><shortdesc class="- topic/shortdesc "> 
		表示在最近操作期间设置了回退值。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">usingFallbackWarning</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
		表示在最近操作期间设置了回退值。此状态可由 <codeph class="+ topic/ph pr-d/codeph ">DateTimeFormatter.setDateTimeStyles()</codeph> 等构造函数和方法在检索 <codeph class="+ topic/ph pr-d/codeph ">CurrencyFormatter.groupingPattern</codeph> 等属性时返回。
		
		</apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.globalization:NationalDigitsType" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">NationalDigitsType</apiName><shortdesc class="- topic/shortdesc ">
	 NationalDigitsType 类枚举表示 NumberFormatter 类所用的数字集的常量。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 NationalDigitsType 类枚举表示 NumberFormatter 类所用的数字集的常量。每个常量的值表示指定的十进制数字集中数字零的 Unicode 值。
	 
  	 </apiDesc></apiClassifierDetail><apiValue id="flash.globalization:NationalDigitsType:ARABIC_INDIC" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">ARABIC_INDIC</apiName><shortdesc class="- topic/shortdesc ">
	     表示阿拉伯-印度文数字集的数字零的 Unicode 值。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">0x0660</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">uint</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	     表示阿拉伯-印度文数字集的数字零的 Unicode 值。
	     
         </apiDesc></apiValueDetail></apiValue><apiValue id="flash.globalization:NationalDigitsType:BALINESE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">BALINESE</apiName><shortdesc class="- topic/shortdesc ">
	     表示巴厘文数字集的数字零的 Unicode 值。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">0x1B50</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">uint</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	     表示巴厘文数字集的数字零的 Unicode 值。
	     
         </apiDesc></apiValueDetail></apiValue><apiValue id="flash.globalization:NationalDigitsType:BENGALI" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">BENGALI</apiName><shortdesc class="- topic/shortdesc ">
	     表示孟加拉文数字集的数字零的 Unicode 值。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">0x09E6</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">uint</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	     表示孟加拉文数字集的数字零的 Unicode 值。
	     
         </apiDesc></apiValueDetail></apiValue><apiValue id="flash.globalization:NationalDigitsType:CHAM" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">CHAM</apiName><shortdesc class="- topic/shortdesc ">
	     表示查姆文数字集的数字零的 Unicode 值。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">0xAA50</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">uint</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	     表示查姆文数字集的数字零的 Unicode 值。
	     
         </apiDesc></apiValueDetail></apiValue><apiValue id="flash.globalization:NationalDigitsType:DEVANAGARI" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">DEVANAGARI</apiName><shortdesc class="- topic/shortdesc ">
	     表示梵文数字集的数字零的 Unicode 值。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">0x0966</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">uint</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	     表示梵文数字集的数字零的 Unicode 值。
	     
         </apiDesc></apiValueDetail></apiValue><apiValue id="flash.globalization:NationalDigitsType:EUROPEAN" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">EUROPEAN</apiName><shortdesc class="- topic/shortdesc ">
	     表示拉丁语-1（欧洲）数字集的数字零的 Unicode 值。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">0x0030</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">uint</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	     表示拉丁语-1（欧洲）数字集的数字零的 Unicode 值。
	     
         </apiDesc></apiValueDetail></apiValue><apiValue id="flash.globalization:NationalDigitsType:EXTENDED_ARABIC_INDIC" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">EXTENDED_ARABIC_INDIC</apiName><shortdesc class="- topic/shortdesc ">
	     表示扩展阿拉伯-印度文数字集的数字零的 Unicode 值。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">0x06F0</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">uint</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	     表示扩展阿拉伯-印度文数字集的数字零的 Unicode 值。
	     
         </apiDesc></apiValueDetail></apiValue><apiValue id="flash.globalization:NationalDigitsType:FULL_WIDTH" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">FULL_WIDTH</apiName><shortdesc class="- topic/shortdesc ">
	     表示全宽数字集的数字零的 Unicode 值。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">0xFF10</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">uint</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	     表示全宽数字集的数字零的 Unicode 值。
	     
         </apiDesc></apiValueDetail></apiValue><apiValue id="flash.globalization:NationalDigitsType:GUJARATI" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">GUJARATI</apiName><shortdesc class="- topic/shortdesc ">
	     表示古吉拉特文数字集的数字零的 Unicode 值。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">0x0AE6</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">uint</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	     表示古吉拉特文数字集的数字零的 Unicode 值。
	     
         </apiDesc></apiValueDetail></apiValue><apiValue id="flash.globalization:NationalDigitsType:GURMUKHI" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">GURMUKHI</apiName><shortdesc class="- topic/shortdesc ">
	     表示果鲁穆奇文数字集的数字零的 Unicode 值。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">0x0A66</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">uint</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	     表示果鲁穆奇文数字集的数字零的 Unicode 值。
	     
         </apiDesc></apiValueDetail></apiValue><apiValue id="flash.globalization:NationalDigitsType:KANNADA" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">KANNADA</apiName><shortdesc class="- topic/shortdesc ">
	     表示卡纳达文数字集的数字零的 Unicode 值。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">0x0CE6</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">uint</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	     表示卡纳达文数字集的数字零的 Unicode 值。
	     
         </apiDesc></apiValueDetail></apiValue><apiValue id="flash.globalization:NationalDigitsType:KAYAH_LI" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">KAYAH_LI</apiName><shortdesc class="- topic/shortdesc ">
	     表示克耶黎文数字集的数字零的 Unicode 值。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">0xA900</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">uint</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	     表示克耶黎文数字集的数字零的 Unicode 值。
	     
         </apiDesc></apiValueDetail></apiValue><apiValue id="flash.globalization:NationalDigitsType:KHMER" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">KHMER</apiName><shortdesc class="- topic/shortdesc ">
	     表示高棉文数字集的数字零的 Unicode 值。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">0x17E0</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">uint</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	     表示高棉文数字集的数字零的 Unicode 值。
	     
         </apiDesc></apiValueDetail></apiValue><apiValue id="flash.globalization:NationalDigitsType:LAO" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">LAO</apiName><shortdesc class="- topic/shortdesc ">
	     表示老挝文数字集的数字零的 Unicode 值。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">0x0ED0</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">uint</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	     表示老挝文数字集的数字零的 Unicode 值。
	     
         </apiDesc></apiValueDetail></apiValue><apiValue id="flash.globalization:NationalDigitsType:LEPCHA" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">LEPCHA</apiName><shortdesc class="- topic/shortdesc ">
	     表示列普查文数字集的数字零的 Unicode 值。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">0x1C40</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">uint</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	     表示列普查文数字集的数字零的 Unicode 值。
	     
         </apiDesc></apiValueDetail></apiValue><apiValue id="flash.globalization:NationalDigitsType:LIMBU" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">LIMBU</apiName><shortdesc class="- topic/shortdesc ">
	     表示林布文数字集的数字零的 Unicode 值。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">0x1946</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">uint</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	     表示林布文数字集的数字零的 Unicode 值。
	     
         </apiDesc></apiValueDetail></apiValue><apiValue id="flash.globalization:NationalDigitsType:MALAYALAM" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">MALAYALAM</apiName><shortdesc class="- topic/shortdesc ">
	     表示马拉亚拉姆文数字集的数字零的 Unicode 值。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">0x0D66</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">uint</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	     表示马拉亚拉姆文数字集的数字零的 Unicode 值。
	     
         </apiDesc></apiValueDetail></apiValue><apiValue id="flash.globalization:NationalDigitsType:MONGOLIAN" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">MONGOLIAN</apiName><shortdesc class="- topic/shortdesc ">
	     表示蒙古文数字集的数字零的 Unicode 值。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">0x1810</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">uint</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	     表示蒙古文数字集的数字零的 Unicode 值。
	     
         </apiDesc></apiValueDetail></apiValue><apiValue id="flash.globalization:NationalDigitsType:MYANMAR_SHAN" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">MYANMAR_SHAN</apiName><shortdesc class="- topic/shortdesc ">
	     表示缅甸掸文数字集的数字零的 Unicode 值。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">0x1090</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">uint</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	     表示缅甸掸文数字集的数字零的 Unicode 值。
	     
         </apiDesc></apiValueDetail></apiValue><apiValue id="flash.globalization:NationalDigitsType:MYANMAR" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">MYANMAR</apiName><shortdesc class="- topic/shortdesc ">
	     表示缅甸文数字集的数字零的 Unicode 值。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">0x1040</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">uint</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	     表示缅甸文数字集的数字零的 Unicode 值。
	     
         </apiDesc></apiValueDetail></apiValue><apiValue id="flash.globalization:NationalDigitsType:NEW_TAI_LUE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">NEW_TAI_LUE</apiName><shortdesc class="- topic/shortdesc ">
	     表示西双版纳新傣文数字集的数字零的 Unicode 值。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">0x19D0</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">uint</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	     表示西双版纳新傣文数字集的数字零的 Unicode 值。
	     
         </apiDesc></apiValueDetail></apiValue><apiValue id="flash.globalization:NationalDigitsType:NKO" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">NKO</apiName><shortdesc class="- topic/shortdesc ">
	     表示 Nko 文数字集的数字零的 Unicode 值。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">0x07C0</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">uint</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	     表示 Nko 文数字集的数字零的 Unicode 值。
	     
         </apiDesc></apiValueDetail></apiValue><apiValue id="flash.globalization:NationalDigitsType:OL_CHIKI" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">OL_CHIKI</apiName><shortdesc class="- topic/shortdesc ">
	     表示桑塔利文数字集的数字零的 Unicode 值。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">0x1C50</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">uint</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	     表示桑塔利文数字集的数字零的 Unicode 值。
	     
         </apiDesc></apiValueDetail></apiValue><apiValue id="flash.globalization:NationalDigitsType:ORIYA" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">ORIYA</apiName><shortdesc class="- topic/shortdesc ">
	     表示奥里雅文数字集的数字零的 Unicode 值。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">0x0B66</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">uint</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	     表示奥里雅文数字集的数字零的 Unicode 值。
	     
         </apiDesc></apiValueDetail></apiValue><apiValue id="flash.globalization:NationalDigitsType:OSMANYA" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">OSMANYA</apiName><shortdesc class="- topic/shortdesc ">
	     表示奥斯曼亚文数字集的数字零的 Unicode 值。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">0x104A0</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">uint</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	     表示奥斯曼亚文数字集的数字零的 Unicode 值。
	     
         </apiDesc></apiValueDetail></apiValue><apiValue id="flash.globalization:NationalDigitsType:SAURASHTRA" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">SAURASHTRA</apiName><shortdesc class="- topic/shortdesc ">
	     表示索拉什特拉文数字集的数字零的 Unicode 值。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">0xA8D0</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">uint</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	     表示索拉什特拉文数字集的数字零的 Unicode 值。
	     
         </apiDesc></apiValueDetail></apiValue><apiValue id="flash.globalization:NationalDigitsType:SUNDANESE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">SUNDANESE</apiName><shortdesc class="- topic/shortdesc ">
	     表示巽他文数字集的数字零的 Unicode 值。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">0x1BB0</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">uint</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	     表示巽他文数字集的数字零的 Unicode 值。
	     
         </apiDesc></apiValueDetail></apiValue><apiValue id="flash.globalization:NationalDigitsType:TAMIL" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">TAMIL</apiName><shortdesc class="- topic/shortdesc ">
	     表示泰米尔文数字集的数字零的 Unicode 值。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">0x0BE6</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">uint</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	     表示泰米尔文数字集的数字零的 Unicode 值。
	     
         </apiDesc></apiValueDetail></apiValue><apiValue id="flash.globalization:NationalDigitsType:TELUGU" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">TELUGU</apiName><shortdesc class="- topic/shortdesc ">
	     表示泰卢固文数字集的数字零的 Unicode 值。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">0x0C66</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">uint</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	     表示泰卢固文数字集的数字零的 Unicode 值。
	     
         </apiDesc></apiValueDetail></apiValue><apiValue id="flash.globalization:NationalDigitsType:THAI" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">THAI</apiName><shortdesc class="- topic/shortdesc ">
	     表示泰文数字集的数字零的 Unicode 值。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">0x0E50</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">uint</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	     表示泰文数字集的数字零的 Unicode 值。
	     
         </apiDesc></apiValueDetail></apiValue><apiValue id="flash.globalization:NationalDigitsType:TIBETAN" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">TIBETAN</apiName><shortdesc class="- topic/shortdesc ">
	     表示藏语数字集的数字零的 Unicode 值。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">0x0F20</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">uint</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	     表示藏语数字集的数字零的 Unicode 值。
	     
         </apiDesc></apiValueDetail></apiValue><apiValue id="flash.globalization:NationalDigitsType:VAI" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">VAI</apiName><shortdesc class="- topic/shortdesc ">
	     表示瓦伊文数字集的数字零的 Unicode 值。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">0xA620</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">uint</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	     表示瓦伊文数字集的数字零的 Unicode 值。
	     
         </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.globalization:CurrencyParseResult" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">CurrencyParseResult</apiName><shortdesc class="- topic/shortdesc ">
	 一种数据结构，用于表示通过解析货币值提取的货币金额和货币符号或字符串。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 一种数据结构，用于表示通过解析货币值提取的货币金额和货币符号或字符串。
	  
	 </apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.globalization.xml#CurrencyFormatter/parse()" class="- topic/link "><linktext class="- topic/linktext ">CurrencyFormatter.parse()</linktext></link></related-links><apiConstructor id="flash.globalization:CurrencyParseResult:CurrencyParseResult" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">CurrencyParseResult</apiName><shortdesc class="- topic/shortdesc ">
		 构造货币解析结果对象。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">value</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">unknown</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">表示货币金额值的数字。
		 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">symbol</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData "/><apiDesc class="- topic/section reference/section apiRef/apiDesc ">表示货币符号的字符串。
    	 
         </apiDesc></apiParam></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 构造货币解析结果对象。
		 
		 </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="flash.globalization:CurrencyParseResult:currencyString:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">currencyString</apiName><shortdesc class="- topic/shortdesc ">
		 输入字符串中对应于货币符号或货币字符串的部分。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 输入字符串中对应于货币符号或货币字符串的部分。
		 
         </apiDesc></apiValueDetail></apiValue><apiValue id="flash.globalization:CurrencyParseResult:value:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">value</apiName><shortdesc class="- topic/shortdesc ">
		 从输入字符串提取的货币金额值。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 从输入字符串提取的货币金额值。 
		 
         </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.globalization:NumberParseResult" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">NumberParseResult</apiName><shortdesc class="- topic/shortdesc ">
	 一种数据结构，具有与通过解析字符串提取的数字相关的信息。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 一种数据结构，具有与通过解析字符串提取的数字相关的信息。
	 
	  <p class="- topic/p ">数字字符串可以在数字周围包含前缀和后缀。在这种情况下，<codeph class="+ topic/ph pr-d/codeph ">startIndex</codeph> 属性设置为数字的第一个字符。而且，<codeph class="+ topic/ph pr-d/codeph ">endIndex</codeph> 属性设置为数字最后一个字符后面的字符索引。 
	  </p>
	 
	 </apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.globalization.xml#NumberFormatter/parse()" class="- topic/link "><linktext class="- topic/linktext ">NumberFormatter.parse()</linktext></link><link href="flash.globalization.xml#NumberFormatter/parseNumber()" class="- topic/link "><linktext class="- topic/linktext ">NumberFormatter.parseNumber()</linktext></link></related-links><apiConstructor id="flash.globalization:NumberParseResult:NumberParseResult" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">NumberParseResult</apiName><shortdesc class="- topic/shortdesc ">
		 构造数字解析结果对象。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">value</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">unknown</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">输入字符串中数字部分的值。
		 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">startIndex</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0x7fffffff</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">输入字符串中数字的第一个字符的索引。
		 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">endIndex</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0x7fffffff</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">输入字符串中位于数字的最后一个字符之后的字符的索引。
		 
    	 </apiDesc></apiParam></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 构造数字解析结果对象。NumberParseResult 对象通常由 <codeph class="+ topic/ph pr-d/codeph ">NumberFormatter.parse()</codeph> 和 <codeph class="+ topic/ph pr-d/codeph ">NumberFormatter.parseNumber()</codeph> 方法创建，而不是通过直接调用此构造函数创建。
		 
		 </apiDesc></apiConstructorDetail><related-links class="- topic/related-links "><link href="flash.globalization.xml#NumberFormatter/parse()" class="- topic/link "><linktext class="- topic/linktext ">NumberFormatter.parse()</linktext></link><link href="flash.globalization.xml#NumberFormatter/parseNumber()" class="- topic/link "><linktext class="- topic/linktext ">NumberFormatter.parseNumber()</linktext></link></related-links></apiConstructor><apiValue id="flash.globalization:NumberParseResult:endIndex:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">endIndex</apiName><shortdesc class="- topic/shortdesc ">
		 输入字符串中位于数字部分的最后一个字符之后的字符的索引。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">int</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 输入字符串中位于数字部分的最后一个字符之后的字符的索引。 
		 
         </apiDesc></apiValueDetail></apiValue><apiValue id="flash.globalization:NumberParseResult:startIndex:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">startIndex</apiName><shortdesc class="- topic/shortdesc ">
		 输入字符串中数字部分的第一个字符的索引。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">int</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 输入字符串中数字部分的第一个字符的索引。 
		 
         </apiDesc></apiValueDetail></apiValue><apiValue id="flash.globalization:NumberParseResult:value:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">value</apiName><shortdesc class="- topic/shortdesc ">
		 输入字符串中数字部分的值。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 输入字符串中数字部分的值。 
		 
         </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.globalization:LocaleID" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">LocaleID</apiName><shortdesc class="- topic/shortdesc ">
	 LocaleID 类提供用于解析和使用区域设置 ID 名称的方法。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 LocaleID 类提供用于解析和使用区域设置 ID 名称的方法。此类支持使用由 Unicode 技术标准 #35 (<xref href="http://unicode.org/reports/tr35/" class="- topic/xref ">http://unicode.org/reports/tr35/</xref>) 定义的语法的区域设置 ID 名称。 
	 
	 </apiDesc><example conref="examples\LocaleID.as" class="- topic/example "> 下面的示例说明如何检索和显示有关不同区域设置的 LocaleID 字符串的信息。
 <p class="- topic/p ">
 此示例使用以下区域设置：阿拉伯语(沙特阿拉伯)、英语（美国）、英语（美国、POSIX 变体）、中文（中国）、中文（台湾）、中文（简化汉字脚本）和中文（中国，具有多个键和值）
 </p>
 <p class="- topic/p ">
 此示例为该列表中的每个区域设置执行下列操作：
 </p>
 <ol class="- topic/ol "><li class="- topic/li ">新建 LocaleID 对象。</li><li class="- topic/li ">显示 LocaleID 的各种属性。显示的值将因操作系统和用户首选项不同而异。</li><li class="- topic/li ">显示该 LocaleID 的键和值的完整集合。</li></ol>
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
package 
{
    import flash.display.Sprite;
    import flash.globalization.LocaleID;
    
    public class LocaleIDExample extends Sprite
    {
        public function LocaleIDExample()
        {
            var localeNames:Array = ["ar-SA", "EN_us", "en-US-POSIX", "zh-CH", "zh-TW", "zh-Hans", "zh-CH@collation=pinyin;calendar=chinese;currency=RMB"];
            
            for ( var i:int = 0; i &lt; localeNames.length; i++ ) 
            {
                var locID:LocaleID = new LocaleID( localeNames[i] as String );
                
                trace('\n\n' + "LocaleID requested: " + locID.requestedLocaleIDName 
                    + "; actual: " + locID.actualLocaleIDName);
                trace( "Last Operation Status after new LocaleID: " + locID.lastOperationStatus);
                
                trace("name:     " + locID.name);
                trace("language: " + locID.getLanguage() + "; status: "  + locID.lastOperationStatus);
                trace("script:   " + locID.getScript()  +  "; status: "  + locID.lastOperationStatus);
                trace("region:   " + locID.getRegion()  +  "; status: "  + locID.lastOperationStatus);
                trace("variant:  " + locID.getVariant()  + "; status: "  + locID.lastOperationStatus);
                trace("isRightToLeft: ", locID.isRightToLeft(), "; status: "  + locID.lastOperationStatus);
                
                var keysAndValues:Object = locID.getKeysAndValues();
                var key:String;
                for (key in keysAndValues)
                {
                    trace("key: ", key + " value: " + keysAndValues[ key ]);
                }
                trace( "Last Operation Status after getKeysAndValues(): " + locID.lastOperationStatus);
            }
        }
    }
}
</codeblock></example></apiClassifierDetail><related-links class="- topic/related-links "><link href="http://unicode.org/reports/tr35/" class="- topic/link "><linktext class="- topic/linktext ">Unicode 技术标准 #35</linktext></link></related-links><apiConstructor id="flash.globalization:LocaleID:LocaleID" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">LocaleID</apiName><shortdesc class="- topic/shortdesc "> 
		 使用给定的区域设置名称构造新的 LocaleID 对象。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">如果名称为 null。
		 
		 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">name</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">区域设置 ID 名称，其中还可包括一个可选的排序字符串。例如，“<codeph class="+ topic/ph pr-d/codeph ">en-US</codeph>”或“<codeph class="+ topic/ph pr-d/codeph ">de-DE@collation=phonebook</codeph>”
		 
		 </apiDesc></apiParam></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
		 使用给定的区域设置名称构造新的 LocaleID 对象。区域设置名称必须符合由 Unicode 技术标准 #35 (<xref href="http://unicode.org/reports/tr35/" class="- topic/xref "> http://unicode.org/reports/tr35/ </xref>) 定义的语法。
		 
		 <p class="- topic/p ">成功完成构造函数后，将 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性设置为：</p>
		 <ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">LastOperationStatus.NO_ERROR</codeph></li></ul>
		 <p class="- topic/p ">如果请求的区域设置 ID 名称不可用，则将 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性设置为下列属性之一：</p>
		 <ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">LastOperationStatus.USING_FALLBACK_WARNING</codeph></li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">LastOperationStatus.USING_DEFAULT_WARNING</codeph></li></ul>
		 <p class="- topic/p ">否则，将 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性设置为 LastOperationStatus 类中定义的其中一个常量。</p> 
		 
		 <p class="- topic/p ">有关以上列出的警告和 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性其他可能值的详细信息，请参阅 <codeph class="+ topic/ph pr-d/codeph ">LastOperationStatus</codeph> 类中的说明。</p>
		 
		 </apiDesc></apiConstructorDetail><related-links class="- topic/related-links "><link href="flash.globalization.xml#LocaleID/lastOperationStatus" class="- topic/link "><linktext class="- topic/linktext ">lastOperationStatus</linktext></link><link href="flash.globalization.xml#LastOperationStatus" class="- topic/link "><linktext class="- topic/linktext ">LastOperationStatus</linktext></link></related-links></apiConstructor><apiOperation id="flash.globalization:LocaleID:determinePreferredLocales" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">determinePreferredLocales</apiName><shortdesc class="- topic/shortdesc ">
		 根据所需的区域设置列表以及现在可用的区域设置列表返回可接受的区域设置列表。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">按用户的首选项排序的可用区域设置的子集。
		 
		 </apiDesc><apiType value="Vector$String" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">want</apiItemName><apiType value="Vector$String" name="type" class="- topic/state reference/state apiRef/apiType "/><apiDesc class="- topic/section reference/section apiRef/apiDesc ">按首选项顺序排序的用户首选区域设置列表。
		 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">have</apiItemName><apiType value="Vector$String" name="type" class="- topic/state reference/state apiRef/apiType "/><apiDesc class="- topic/section reference/section apiRef/apiDesc ">可供此应用程序使用的区域设置的列表。此列表的顺序不重要。
		 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">keyword</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">userinterface</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">用于帮助确定最佳匹配的关键字。
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 根据所需的区域设置列表以及现在可用的区域设置列表返回可接受的区域设置列表。
		 
		 <p class="- topic/p ">结果列表按首选项顺序排列。</p>
		 
		 <p class="- topic/p ">下面是此方法的一个典型用例：</p>
		 <ul class="- topic/ul "><li class="- topic/li ">一个用户指定了他所会语言的列表（存储于用户配置文件、浏览器设置或者 Cookie 中）。用户按照自己对这些语言的掌握程度列出它们，因此列表中的语言顺序与此相对应。这是“期望”列表。</li><li class="- topic/li ">此应用程序将本地化为多种不同的语言。这是“具有”列表。</li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">determinePreferredLocales()</codeph> 方法返回这两个列表的交集，以便最先显示用户的首选语言。</li></ul>
		 
		 <p class="- topic/p ">如果当前操作系统不支持此功能，此方法将返回 null 值。</p>
		 
		 <p class="- topic/p ">调用此方法并成功完成后，将 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性设置为：</p>
		 <ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">LastOperationStatus.NO_ERROR</codeph></li></ul>
		 <p class="- topic/p ">否则，将 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性设置为 <codeph class="+ topic/ph pr-d/codeph ">LastOperationStatus</codeph> 类中定义的一个常量。</p>
		 
		 </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.globalization.xml#LocaleID/lastOperationStatus" class="- topic/link "><linktext class="- topic/linktext ">lastOperationStatus</linktext></link><link href="flash.globalization.xml#LastOperationStatus" class="- topic/link "><linktext class="- topic/linktext ">LastOperationStatus</linktext></link></related-links></apiOperation><apiOperation id="flash.globalization:LocaleID:getKeysAndValues" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">getKeysAndValues</apiName><shortdesc class="- topic/shortdesc ">
		 返回一个对象，其中包含 LocaleID 对象中的所有键和值对。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">一个包含 LocaleID 对象中的所有键和值的对象，被结构化为关联数组或哈希表。
		 
		 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Object</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 返回一个对象，其中包含 LocaleID 对象中的所有键和值对。
		 
		 <p class="- topic/p ">返回对象被结构化为哈希表或关联数组，其中每个属性名表示一个键，而属性的值表示该键的值。例如，以下代码列出使用 <codeph class="+ topic/ph pr-d/codeph ">getKeysAndValues()</codeph> 方法从 LocaleID 对象获取的所有键和值：</p>
		 
		 <codeblock rev="3.0" xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
		 var myLocale:LocaleID = new LocaleID("fr-CA");
		 var localeData:Object = myLocale.getKeysAndValues();
		 for (var propertyName:String in localeData)
		 {
		   trace(propertyName + " = " + localeData[propertyName]);
		 }
		 </codeblock>
		 
		 <p class="- topic/p ">调用此方法并成功完成后，将 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性设置为：</p>
		 <ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">LastOperationStatus.NO_ERROR</codeph></li></ul>
		 <p class="- topic/p ">否则，将 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性设置为 <codeph class="+ topic/ph pr-d/codeph ">LastOperationStatus</codeph> 类中定义的一个常量。</p>
		 
		 </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.globalization.xml#LocaleID/lastOperationStatus" class="- topic/link "><linktext class="- topic/linktext ">lastOperationStatus</linktext></link><link href="flash.globalization.xml#LastOperationStatus" class="- topic/link "><linktext class="- topic/linktext ">LastOperationStatus</linktext></link></related-links></apiOperation><apiOperation id="flash.globalization:LocaleID:getLanguage" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">getLanguage</apiName><shortdesc class="- topic/shortdesc ">
		 返回由区域设置 ID 名称指定的语言代码。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">通过解析区域设置 ID 名称获得的双字符语言代码。
		 
		 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 返回由区域设置 ID 名称指定的语言代码。
         
         <p class="- topic/p ">如果无法正确解析区域设置名称，则语言代码与完整的区域名称相同。</p>
 		 
		 <p class="- topic/p ">调用此方法并成功完成后，将 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性设置为：</p>
		 <ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">LastOperationStatus.NO_ERROR</codeph></li></ul>
		 <p class="- topic/p ">否则，将 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性设置为 <codeph class="+ topic/ph pr-d/codeph ">LastOperationStatus</codeph> 类中定义的一个常量。</p>
		 
		 </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.globalization.xml#LocaleID/lastOperationStatus" class="- topic/link "><linktext class="- topic/linktext ">lastOperationStatus</linktext></link><link href="flash.globalization.xml#LastOperationStatus" class="- topic/link "><linktext class="- topic/linktext ">LastOperationStatus</linktext></link></related-links></apiOperation><apiOperation id="flash.globalization:LocaleID:getRegion" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">getRegion</apiName><shortdesc class="- topic/shortdesc ">
		 返回区域设置 ID 名称指定的地区代码。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">一个双字符地区代码；如果无法解析地区代码或以其他方式根据区域设置名称进行确定，则为空字符串。
		 
		 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 返回区域设置 ID 名称指定的地区代码。
         
         <p class="- topic/p ">如果无法解析或推测地区代码，此方法将返回空字符串。如果使用了未知或类似“xy”这样不完整的区域设置 ID 名称，就可能出现此情况。未根据固定列表对地区代码进行验证。例如，为区域设置 ID 名称“xx-YY”返回的地区代码是“YY”。</p>
		 
		 <p class="- topic/p ">调用此方法并成功完成后，将 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性设置为：</p>
		 <ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">LastOperationStatus.NO_ERROR</codeph></li></ul>
		 
         <p class="- topic/p ">如果地区不是指定的区域设置名称的一部分，则会“推测”区域设置的最可能的地区代码，并将 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性设置为 <codeph class="+ topic/ph pr-d/codeph ">LastOperationStatus.USING_FALLBACK_WARNING</codeph></p>
         
		 <p class="- topic/p ">否则，将 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性设置为 <codeph class="+ topic/ph pr-d/codeph ">LastOperationStatus</codeph> 类中定义的一个常量。</p>
         
		 </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.globalization.xml#LocaleID/lastOperationStatus" class="- topic/link "><linktext class="- topic/linktext ">lastOperationStatus</linktext></link><link href="flash.globalization.xml#LastOperationStatus" class="- topic/link "><linktext class="- topic/linktext ">LastOperationStatus</linktext></link></related-links></apiOperation><apiOperation id="flash.globalization:LocaleID:getScript" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">getScript</apiName><shortdesc class="- topic/shortdesc ">
		 返回由区域设置 ID 名称指定的脚本代码。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">一个四字符脚本代码；如果无法解析脚本代码或以其他方式根据区域设置名称进行确定，则为空字符串。
		 
		 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 返回由区域设置 ID 名称指定的脚本代码。
         
         <p class="- topic/p ">如果无法解析或推测脚本代码，此方法将返回空字符串。如果使用了未知或类似“xy”这样不完整的区域设置 ID 名称，就可能出现此情况。未根据固定列表对脚本代码进行验证。例如，为区域设置 ID 名称“xx-Abcd-YY”返回的脚本代码是“Abcd”。</p>
         
         <p class="- topic/p ">区域和语言也可以影响返回值。例如，“mn-MN”（蒙古语-蒙古）的脚本代码是“Cyrl”（西里尔文），而“mn-CN”（蒙古语-中国）的脚本代码是“Mong”（蒙古语）。</p>
		 
		 <p class="- topic/p ">调用此方法并成功完成后，将 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性设置为：</p>
		 <ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">LastOperationStatus.NO_ERROR</codeph></li></ul>
		 
         <p class="- topic/p ">如果脚本代码不是指定的区域名称的一部分，则会“推测”最可能的脚本代码，并将 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性设置为 <codeph class="+ topic/ph pr-d/codeph ">LastOperationStatus.USING_FALLBACK_WARNING</codeph>。</p>
         
		 <p class="- topic/p ">否则，将 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性设置为 <codeph class="+ topic/ph pr-d/codeph ">LastOperationStatus</codeph> 类中定义的一个常量。</p>
		 
		 </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.globalization.xml#LocaleID/lastOperationStatus" class="- topic/link "><linktext class="- topic/linktext ">lastOperationStatus</linktext></link><link href="flash.globalization.xml#LastOperationStatus" class="- topic/link "><linktext class="- topic/linktext ">LastOperationStatus</linktext></link></related-links></apiOperation><apiOperation id="flash.globalization:LocaleID:getVariant" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">getVariant</apiName><shortdesc class="- topic/shortdesc ">
		 返回由区域设置 ID 名称指定的语言变体代码。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">一个语言变体代码；如果区域设置 ID 名称不包含语言变体代码，则为空字符串。
		 
		 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 返回由区域设置 ID 名称指定的语言变体代码。
         
         <p class="- topic/p ">如果给定的区域设置 ID 名称中不包含语言变体代码，则此方法将返回空字符串。（不需要推测，因为区域设置很少具有或需要语言变体。）</p>
		 
		 <p class="- topic/p ">调用此方法并成功完成后，将 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性设置为：</p>
		 <ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">LastOperationStatus.NO_ERROR</codeph></li></ul>
		 <p class="- topic/p ">否则，将 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性设置为 <codeph class="+ topic/ph pr-d/codeph ">LastOperationStatus</codeph> 类中定义的一个常量。</p>
		 
		 </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.globalization.xml#LocaleID/lastOperationStatus" class="- topic/link "><linktext class="- topic/linktext ">lastOperationStatus</linktext></link><link href="flash.globalization.xml#LastOperationStatus" class="- topic/link "><linktext class="- topic/linktext ">LastOperationStatus</linktext></link></related-links></apiOperation><apiOperation id="flash.globalization:LocaleID:isRightToLeft" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">isRightToLeft</apiName><shortdesc class="- topic/shortdesc ">
		 指定所指定的区域设置的文本方向是否为从右到左。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">如果文本行中常规文本的方向是从右到左，则为 <codeph class="+ topic/ph pr-d/codeph ">true</codeph>；否则为 <codeph class="+ topic/ph pr-d/codeph ">false</codeph>；
		 
		 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 指定所指定的区域设置的文本方向是否为从右到左。
		 
		 <p class="- topic/p ">此结果可用于确定 Flash 文本引擎中的文本方向，以及用于决定是否应镜像用户界面以支持当前文本方向。</p>
		 
		 <p class="- topic/p ">调用此方法并成功完成后，将 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性设置为：</p>
		 <ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">LastOperationStatus.NO_ERROR</codeph></li></ul>
		 <p class="- topic/p ">否则，将 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性设置为 <codeph class="+ topic/ph pr-d/codeph ">LastOperationStatus</codeph> 类中定义的一个常量。</p>
		 
		 </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="" invalidHref="flashx.textLayout.formats.Direction.xml" class="- topic/link "><linktext class="- topic/linktext ">flashx.textLayout.formats.Direction</linktext></link><link href="flash.globalization.xml#LocaleID/lastOperationStatus" class="- topic/link "><linktext class="- topic/linktext ">lastOperationStatus</linktext></link><link href="flash.globalization.xml#LastOperationStatus" class="- topic/link "><linktext class="- topic/linktext ">LastOperationStatus</linktext></link></related-links></apiOperation><apiValue id="flash.globalization:LocaleID:DEFAULT" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">DEFAULT</apiName><shortdesc class="- topic/shortdesc "> 
		 表示应使用的用户默认语言首选项，就像在用户操作系统设置上指定的那样。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">i-default</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
		 表示应使用的用户默认语言首选项，就像在用户操作系统设置上指定的那样。例如，对于 Windows，一般使用“控制面板”设置这些首选项，对于 Mac OS X，通常使用“系统首选项”设置这些首选项。
		 
		 <p class="- topic/p ">通过使用 <codeph class="+ topic/ph pr-d/codeph ">LocaleID.DEFAULT</codeph> 设置，可以为各种不同的操作使用不同的区域设置 ID 名称。例如，可以将一个区域设置用于排序，而将另一个区域设置用于格式设置。这种灵活性与用户首选项相关，根据设计，此类的行为遵守此方式。</p>
		 
		 <p class="- topic/p ">此区域设置标识符不总是最适合使用的那一个。对于在浏览器中运行的应用程序，浏览器的首选区域设置是更好的选择。告知用户更改首选区域设置 ID 名称设置并将首选项保留在用户配置文件、Cookie 或共享对象中，通常是一种很好的做法。</p>
		 
         </apiDesc></apiValueDetail></apiValue><apiValue id="flash.globalization:LocaleID:lastOperationStatus:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">lastOperationStatus</apiName><shortdesc class="- topic/shortdesc ">
		 此 LocaleID 对象执行的最近操作的状态。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 此 LocaleID 对象执行的最近操作的状态。只要调用构造函数或此类的方法或设置另一个属性，就会设置 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性。有关可能的值，请参阅每种方法的说明。
		 
		 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.globalization.xml#LastOperationStatus" class="- topic/link "><linktext class="- topic/linktext ">LastOperationStatus</linktext></link></related-links></apiValue><apiValue id="flash.globalization:LocaleID:name:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">name</apiName><shortdesc class="- topic/shortdesc ">
		 返回一个略微更“规范”的区域设置标识符。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 返回一个略微更“规范”的区域设置标识符。
         
		 <p class="- topic/p ">此方法对区域设置 ID 名称执行以下转换，使其采用更规范的形式。</p>
		 <ul class="- topic/ul "><li class="- topic/li ">对所有组件应用正确的大小写。</li><li class="- topic/li ">将下划线转换为的破折号。</li></ul>
		 
		 <p class="- topic/p ">不执行其他处理。例如，不替换别名、不添加或删除元素。</p>
		 
		 <p class="- topic/p ">调用此方法并成功完成后，将 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性设置为：</p>
		 <ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">LastOperationStatus.NO_ERROR</codeph></li></ul>
		 <p class="- topic/p ">否则，将 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性设置为 <codeph class="+ topic/ph pr-d/codeph ">LastOperationStatus</codeph> 类中定义的一个常量。</p>
		 
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.globalization:DateTimeStyle" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">DateTimeStyle</apiName><shortdesc class="- topic/shortdesc ">
	枚举那些确定区域设置特定的日期和时间格式设置样式的常量。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	枚举那些确定区域设置特定的日期和时间格式设置样式的常量。在构造 DateTimeFormatter 对象时或在调用 <codeph class="+ topic/ph pr-d/codeph ">DateTimeFormatter.setDateTimeStyles()</codeph> 方法时，会使用这些常量。  
	
	<p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">CUSTOM</codeph> 常量不可用于 DateTimeFormatter 构造函数或 <codeph class="+ topic/ph pr-d/codeph ">DateFormatter.setDateTimeStyles()</codeph> 方法。作为调用 <codeph class="+ topic/ph pr-d/codeph ">DateTimeFormatter.setDateTimePattern()</codeph> 方法的另一个结果，此常量将设置为 <codeph class="+ topic/ph pr-d/codeph ">timeStyle</codeph> 和 <codeph class="+ topic/ph pr-d/codeph ">dateStyle</codeph> 属性。
	</p>
	
	</apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.globalization.xml#DateTimeFormatter" class="- topic/link "><linktext class="- topic/linktext ">DateTimeFormatter</linktext></link></related-links><apiValue id="flash.globalization:DateTimeStyle:CUSTOM" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">CUSTOM</apiName><shortdesc class="- topic/shortdesc "> 
		指定使用自定义样式字符串来指定日期或时间样式。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">custom</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
		指定使用自定义样式字符串来指定日期或时间样式。 
		
		</apiDesc></apiValueDetail></apiValue><apiValue id="flash.globalization:DateTimeStyle:LONG" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">LONG</apiName><shortdesc class="- topic/shortdesc "> 
		指定长型样式的日期或时间。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">long</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
		指定长型样式的日期或时间。
		
		</apiDesc></apiValueDetail></apiValue><apiValue id="flash.globalization:DateTimeStyle:MEDIUM" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">MEDIUM</apiName><shortdesc class="- topic/shortdesc "> 
		指定中型样式的日期或时间。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">medium</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
		指定中型样式的日期或时间。
		
		</apiDesc></apiValueDetail></apiValue><apiValue id="flash.globalization:DateTimeStyle:NONE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">NONE</apiName><shortdesc class="- topic/shortdesc "> 
		指定设置了格式的字符串中不应包含日期或时间。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">none</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
		指定设置了格式的字符串中不应包含日期或时间。
		
		</apiDesc></apiValueDetail></apiValue><apiValue id="flash.globalization:DateTimeStyle:SHORT" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">SHORT</apiName><shortdesc class="- topic/shortdesc "> 
		指定短型样式的日期或时间。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">short</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
		指定短型样式的日期或时间。
		
		</apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.globalization:StringTools" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">StringTools</apiName><shortdesc class="- topic/shortdesc ">
	 StringTools 类提供区分区域设置的大小写转换方法。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 StringTools 类提供区分区域设置的大小写转换方法。  
	 
	 <p class="- topic/p ">在某些情况下，大写字母和小写字母之间的转换不是简单地从一个字符转换到另一个字符，而是需要进行语言特定或上下文特定的处理。例如：</p>
	 <ul class="- topic/ul "><li class="- topic/li ">在土耳其语和阿塞拜疆语中，加点的小写字母 <b class="+ topic/ph hi-d/b ">i</b> 的大写形式是加点的大写字母 <b class="+ topic/ph hi-d/b ">İ</b> (U+0130)。与之相似，无点的大写字母 <b class="+ topic/ph hi-d/b ">I</b> 的小写形式是无点的小写字母<b class="+ topic/ph hi-d/b ">ı</b> (U+0131)。 </li><li class="- topic/li ">德语中使用的小写 sharp S <b class="+ topic/ph hi-d/b ">ß</b> (U+00DF) 转换后是大写形式的双 SS。</li><li class="- topic/li ">在希腊语中，小写西格玛有两种形式（<b class="+ topic/ph hi-d/b ">σ</b> (U+03C3) 和 <b class="+ topic/ph hi-d/b ">ς</b> (U+03C2)），都转换成同一种大写形式的西格玛 <b class="+ topic/ph hi-d/b ">Σ</b> (U+03A3)。 </li></ul>
     <p class="- topic/p ">
	 此类的 <codeph class="+ topic/ph pr-d/codeph ">toLowerCase()</codeph> 方法和 <codeph class="+ topic/ph pr-d/codeph ">toUpperCase()</codeph> 方法提供此特殊大小写转换逻辑。
	 </p>
	 <p class="- topic/p ">
	 由于使用用户的设置、使用操作系统提供的大小写转换规则，并在请求的区域设置不受支持时使用回退区域设置，因此，即便使用相同的区域设置 ID，对不同的用户显示的大小写转换结果也可能不同。
	 </p>
	 
	 </apiDesc><example conref="examples\StringToolsExample.as" class="- topic/example "> 此示例说明如何以语言更正的方式将不同的字符串转换为小写和大写。
 
 <p class="- topic/p ">
 此示例执行下列步骤：
 </p>
 <ol class="- topic/ol "><li class="- topic/li ">创建 StringTools 对象。</li><li class="- topic/li ">使用土耳其语、希腊语和德语特有的字符定义 3 个字符串。</li><li class="- topic/li ">将每个字符串转换为大写和小写，并显示结果。本示例显示一些有趣的特定于区域设置的字符行为，如土耳其语“Ä±”和“Ä°”，德语“ÃŸ”和希腊语“Î£Ï‚Ïƒ”。</li></ol>
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
package {
    import flash.display.Sprite;
    import flash.globalization.LocaleID;
    import flash.globalization.StringTools;
    import flash.text.TextField;
    import flash.text.TextFieldAutoSize;

    public class StringToolsExample extends Sprite
    {
        public function StringToolsExample()
        {
            var localeName:String= LocaleID.DEFAULT;
            var strTool:StringTools = new StringTools(localeName);
            
            trace('\n\n' + "LocaleID requested: " + nf.requestedLocaleIDName 
            + "; actual: " + nf.actualLocaleIDName);
            trace( "Last Operation Status:" + nf.lastOperationStatus );  
            
            var turkishStr:String = "iI Ä±Ä°";
            var greekStr:String = "Î£Ï‚ÏƒÎ²Î°Î�Î£";
            var germanStr:String= "ÃŸ";
            
            var tfTurInp:TextField = createTextField(10, 10);
            tfTurInp.text="Turkish Input: \t " + turkishStr;
            
            var tfdash:TextField = createTextField(10, 20);
            tfdash.text="-------------------";
            
            var tf1:TextField = createTextField(10, 30);
            tf1.text="\t Upper case: \t " + strTool.toUpperCase(turkishStr);
            
            var tf2:TextField = createTextField(10, 40);
            tf2.text="\t Lower case: \t " + strTool.toLowerCase(turkishStr);
            
            var tfgreekInp:TextField = createTextField(10, 60);
            tfgreekInp.text="Greek Input: \t " + greekStr;
            
            var tfdash1:TextField = createTextField(10, 70);
            tfdash1.text="-------------------";
            
            var tf3:TextField = createTextField(10, 80);
            tf3.text="\t Upper case: \t " + strTool.toUpperCase(greekStr);
            
            var tf4:TextField = createTextField(10, 90);
            tf4.text="\t Lower case: \t " + strTool.toLowerCase(greekStr);
            
            var tfgermanInp:TextField = createTextField(10, 110);
            tfgermanInp.text="German Input: \t " + germanStr;
            
            var tfdash2:TextField = createTextField(10, 120);
            tfdash2.text="-------------------";
                         
            var tf5:TextField = createTextField(10, 130);
            tf5.text="\t Upper case: \t " + strTool.toUpperCase(germanStr);
            
            var tf6:TextField = createTextField(10, 140);
            tf6.text="\t Lower case: \t " + strTool.toLowerCase(germanStr);
        }
        
        private function createTextField(x:Number, y:Number):TextField 
        {
            var result:TextField = new TextField();
            result.x = x;
            result.y = y;
            result.autoSize=TextFieldAutoSize.LEFT;
            addChild(result);
            return result;
        }
    }
}


</codeblock></example></apiClassifierDetail><apiConstructor id="flash.globalization:StringTools:StringTools" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">StringTools</apiName><shortdesc class="- topic/shortdesc ">
		  构造新的 StringTools 对象，用于根据给定区域设置的约定提供大小写转换和其它实用程序。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">当 <codeph class="+ topic/ph pr-d/codeph ">requestedLocaleIDName</codeph> 参数为 <codeph class="+ topic/ph pr-d/codeph ">null</codeph> 时
		 
		 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">requestedLocaleIDName</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">确定日期或时间格式时使用的首选区域设置 ID 名称。
		 
		 </apiDesc></apiParam></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		  构造新的 StringTools 对象，用于根据给定区域设置的约定提供大小写转换和其它实用程序。
		 
		  <p class="- topic/p ">此构造函数确定当前操作系统是否支持请求的区域设置 ID 名称。如果不支持，则使用回退区域设置。如果使用了回退区域设置，则 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性表示回退类型，并且 <codeph class="+ topic/ph pr-d/codeph ">actualLocaleIDName </codeph> 属性包含回退区域设置 ID 的名称。 </p>
		 
		 <p class="- topic/p ">当此构造函数成功完成时，<codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性设置为：</p>
		 <ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">LastOperationStatus.NO_ERROR</codeph></li></ul>
		 <p class="- topic/p ">如果请求的区域设置 ID 名称不可用，则将 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性设置为下列属性之一：</p>
		 <ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">LastOperationStatus.USING_FALLBACK_WARNING</codeph></li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">LastOperationStatus.USING_DEFAULT_WARNING</codeph></li></ul>
		 <p class="- topic/p ">否则，将 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性设置为 LastOperationStatus 类中定义的其中一个常量。</p>
		 
		 </apiDesc></apiConstructorDetail><related-links class="- topic/related-links "><link href="flash.globalization.xml#LocaleID" class="- topic/link "><linktext class="- topic/linktext ">LocaleID</linktext></link><link href="flash.globalization.xml#StringTools/lastOperationStatus" class="- topic/link "><linktext class="- topic/linktext ">lastOperationStatus</linktext></link><link href="" invalidHref="flash.globalization.requestedLocaleIDName.xml" class="- topic/link "><linktext class="- topic/linktext ">requestedLocaleIDName</linktext></link><link href="" invalidHref="flash.globalization.actualLocaleIDName.xml" class="- topic/link "><linktext class="- topic/linktext ">actualLocaleIDName</linktext></link></related-links></apiConstructor><apiOperation id="flash.globalization:StringTools:getAvailableLocaleIDNames" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">getAvailableLocaleIDNames</apiName><shortdesc class="- topic/shortdesc ">
		 列出此类支持的所有区域设置 ID 名称。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">一个字符串矢量，其中包含此类支持的所有区域设置 ID 名称。
		 
         </apiDesc><apiType value="Vector$String" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 列出此类支持的所有区域设置 ID 名称。 
		 
		 <p class="- topic/p ">如果当前操作系统不支持此类，此方法返回 null 值。</p>
		 
		 <p class="- topic/p ">调用此方法并成功完成后，将 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性设置为：</p>
		 <ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">LastOperationStatus.NO_ERROR</codeph></li></ul>
		 <p class="- topic/p ">否则，将 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性设置为 <codeph class="+ topic/ph pr-d/codeph ">LastOperationStatus</codeph> 类中定义的一个常量。</p>
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.globalization:StringTools:toLowerCase" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">toLowerCase</apiName><shortdesc class="- topic/shortdesc ">
		 根据语言约定将字符串转换为小写形式。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">当 <codeph class="+ topic/ph pr-d/codeph ">s</codeph> 参数为 null 时。
		 
		  </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">转换后的小写形式字符串。
		  </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">s</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">要转换为小写形式的字符串。
		 </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 根据语言约定将字符串转换为小写形式。根据区域设置，输出字符串长度可能与输入字符串长度不同。
		 
		 <p class="- topic/p ">调用此方法并成功完成后，将 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性设置为：</p>
		 <ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">LastOperationStatus.NO_ERROR</codeph></li></ul>
		 <p class="- topic/p ">否则，将 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性设置为 <codeph class="+ topic/ph pr-d/codeph ">LastOperationStatus</codeph> 类中定义的一个常量。</p>
		 
		 </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.globalization.xml#StringTools/lastOperationStatus" class="- topic/link "><linktext class="- topic/linktext ">lastOperationStatus</linktext></link><link href="flash.globalization.xml#LastOperationStatus" class="- topic/link "><linktext class="- topic/linktext ">LastOperationStatus</linktext></link></related-links></apiOperation><apiOperation id="flash.globalization:StringTools:toUpperCase" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">toUpperCase</apiName><shortdesc class="- topic/shortdesc ">
		 根据语言约定将字符串转换为大写形式。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">当 <codeph class="+ topic/ph pr-d/codeph ">s</codeph> 参数为 null 时。
		 
		  </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">转换后的大写形式字符串。
		 
		  </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">s</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">要转换为大写形式的字符串。
		 </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 根据语言约定将字符串转换为大写形式。根据区域设置，输出字符串长度可能与输入字符串长度不同。
		 
		 <p class="- topic/p ">调用此方法并成功完成后，将 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性设置为：</p>
		 <ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">LastOperationStatus.NO_ERROR</codeph></li></ul>
		 <p class="- topic/p ">否则，将 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性设置为 <codeph class="+ topic/ph pr-d/codeph ">LastOperationStatus</codeph> 类中定义的一个常量。</p>
		 
		 </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.globalization.xml#StringTools/lastOperationStatus" class="- topic/link "><linktext class="- topic/linktext ">lastOperationStatus</linktext></link><link href="flash.globalization.xml#LastOperationStatus" class="- topic/link "><linktext class="- topic/linktext ">LastOperationStatus</linktext></link></related-links></apiOperation><apiValue id="flash.globalization:StringTools:actualLocaleIDName:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">actualLocaleIDName</apiName><shortdesc class="- topic/shortdesc ">
		 此 StringTools 对象使用的实际区域设置 ID 的名称。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 此 StringTools 对象使用的实际区域设置 ID 的名称。
		 
		 <p class="- topic/p ">根据操作系统和传递给 <codeph class="+ topic/ph pr-d/codeph ">StringTools()</codeph> 构造函数的 <codeph class="+ topic/ph pr-d/codeph ">requestedLocaleIDName</codeph> 参数的值，该名称有三种可能的值。</p>
		 
		 <ol class="- topic/ol "><li class="- topic/li ">如果请求的区域设置不是 <codeph class="+ topic/ph pr-d/codeph ">LocaleID.DEFAULT</codeph> 且操作系统支持该请求的区域设置，则返回的名称与 <codeph class="+ topic/ph pr-d/codeph ">requestedLocaleIDName</codeph> 属性相同。
		         </li><li class="- topic/li ">如果将 <codeph class="+ topic/ph pr-d/codeph ">LocaleID.DEFAULT</codeph> 用作构造函数的 <codeph class="+ topic/ph pr-d/codeph ">requestedLocaleIDName</codeph> 参数的值，则使用由用户操作系统指定的当前区域设置的名称。<codeph class="+ topic/ph pr-d/codeph ">LocaleID.DEFAULT</codeph> 值保留用户在操作系统中的自定义设置。显式值作为 <codeph class="+ topic/ph pr-d/codeph ">requestedLocaleIDName</codeph> 参数传递与使用 <codeph class="+ topic/ph pr-d/codeph ">LocaleID.DEFAULT</codeph> 所产生的结果不一定相同，即使两个区域设置 ID 名称相同，也是如此。用户可能已在计算机上对区域设置进行了自定义，通过请求显式区域设置 ID 名称（而不是使用 <codeph class="+ topic/ph pr-d/codeph ">LocaleID.DEFAULT</codeph>），您的应用程序将不会检索这些自定义设置。 
		 	   <blockquote>
		         <p class="- topic/p ">例如：</p>
		 
         <codeblock rev="3.0" xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
         var tools:StringTools = new StringTools(LocaleID.DEFAULT);
		 var aliName:String = tools.actualLocaleIDName;
		 </codeblock>
		 
		         <p class="- topic/p ">在上面的示例中，<codeph class="+ topic/ph pr-d/codeph ">aliName</codeph> 是与用户当前的操作系统设置对应的区域设置的名称（例如，如果用户的区域设置设为“意大利语-意大利”，则其名称为“it-IT”），而不是“<codeph class="+ topic/ph pr-d/codeph ">i-default</codeph>”（<codeph class="+ topic/ph pr-d/codeph ">LocaleID.DEFAULT</codeph> 区域设置的名称）。</p>
		         </blockquote></li><li class="- topic/li ">如果系统不支持在构造函数中指定的 <codeph class="+ topic/ph pr-d/codeph ">requestedLocaleIDName</codeph>，则会提供回退区域设置 ID 名称。
		         <blockquote>
		         <p class="- topic/p ">例如：</p>
		 
		 <codeblock rev="3.0" xml:space="preserve" class="+ topic/pre pr-d/codeblock "> 	 
         var tools:StringTools = new StringTools("fr-CA"); 	 
         var aliName:String = tools.actualLocaleIDName;
         </codeblock>
         
		         <p class="- topic/p ">假设以上示例中的操作系统不支持“fr-CA”（法语-加拿大）区域设置 ID，则使用回退。在这种情况下，回退区域设置 ID 是“fr-FR”（法语-法国）。</p>
		         </blockquote></li></ol>
		 
		 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.globalization.xml#LocaleID" class="- topic/link "><linktext class="- topic/linktext ">LocaleID</linktext></link><link href="flash.globalization.xml#StringTools/requestedLocaleIDName" class="- topic/link "><linktext class="- topic/linktext ">requestedLocaleIDName</linktext></link><link href="flash.globalization.xml#StringTools" class="- topic/link "><linktext class="- topic/linktext ">StringTools</linktext></link></related-links></apiValue><apiValue id="flash.globalization:StringTools:lastOperationStatus:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">lastOperationStatus</apiName><shortdesc class="- topic/shortdesc ">
		 此 StringTools 对象执行的最近操作的状态。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 此 StringTools 对象执行的最近操作的状态。只要调用构造函数或此类的方法或设置另一个属性，就会设置 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性。有关可能的值，请参阅每种方法的说明。
         
		 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.globalization.xml#LastOperationStatus" class="- topic/link "><linktext class="- topic/linktext ">LastOperationStatus</linktext></link></related-links></apiValue><apiValue id="flash.globalization:StringTools:requestedLocaleIDName:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">requestedLocaleIDName</apiName><shortdesc class="- topic/shortdesc ">
		 传递给 StringTools 对象的构造函数的请求的区域设置 ID 名称。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 传递给 StringTools 对象的构造函数的请求的区域设置 ID 名称。
		 
		 <p class="- topic/p ">如果使用了 <codeph class="+ topic/ph pr-d/codeph ">LocaleID.DEFAULT</codeph> 值，则返回的名称将是“i-default”。如果应用了回退区域设置，则实际使用的区域设置可能与请求的区域设置不同。可以使用 <codeph class="+ topic/ph pr-d/codeph ">actualLocaleIDName</codeph> 属性检索实际区域设置的名称。
		 </p>
		 
		 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.globalization.xml#LocaleID" class="- topic/link "><linktext class="- topic/linktext ">LocaleID</linktext></link><link href="flash.globalization.xml#StringTools/actualLocaleIDName" class="- topic/link "><linktext class="- topic/linktext ">actualLocaleIDName</linktext></link><link href="flash.globalization.xml#StringTools/StringTools()" class="- topic/link "><linktext class="- topic/linktext ">StringTools()</linktext></link></related-links></apiValue></apiClassifier><apiClassifier languages="" id="flash.globalization:CollatorMode" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">CollatorMode</apiName><shortdesc class="- topic/shortdesc ">
	CollatorMode 类枚举那些控制由 Collator 对象执行的字符串比较行为的常量值。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	CollatorMode 类枚举那些控制由 Collator 对象执行的字符串比较行为的常量值。这些常量表示可在 <codeph class="+ topic/ph pr-d/codeph ">Collator()</codeph> 构造函数的 <codeph class="+ topic/ph pr-d/codeph ">initialMode</codeph> 参数中传递的值。
	
	</apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.globalization.xml#Collator" class="- topic/link "><linktext class="- topic/linktext ">Collator</linktext></link></related-links><apiValue id="flash.globalization:CollatorMode:MATCHING" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">MATCHING</apiName><shortdesc class="- topic/shortdesc ">
		初始化 Collator 对象，以便针对确定两个字符串是否等效而优化比较方法。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">matching</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		初始化 Collator 对象，以便针对确定两个字符串是否等效而优化比较方法。在此模式下，字符串比较会忽略大写和小写字母、重音符号等区别。
		
        </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.globalization.xml#Collator/Collator()" class="- topic/link "><linktext class="- topic/linktext ">Collator() 构造函数</linktext></link></related-links></apiValue><apiValue id="flash.globalization:CollatorMode:SORTING" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">SORTING</apiName><shortdesc class="- topic/shortdesc ">
		初始化 Collator 对象，以便为要向最终用户显示的文本字符串列表排序而优化比较方法。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">sorting</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		初始化 Collator 对象，以便为要向最终用户显示的文本字符串列表排序而优化比较方法。在此模式下，字符串比较根据区域设置所需的语言和排序规则考虑大写和小写字母、重音符号等区别。
		
        </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.globalization.xml#Collator/Collator()" class="- topic/link "><linktext class="- topic/linktext ">Collator() 构造函数</linktext></link></related-links></apiValue></apiClassifier><apiClassifier languages="" id="flash.globalization:NumberFormatter" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">NumberFormatter</apiName><shortdesc class="- topic/shortdesc ">
	 NumberFormatter 类提供数值的区分区域设置的格式设置和解析。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 NumberFormatter 类提供数值的区分区域设置的格式设置和解析。它可以设置 <codeph class="+ topic/ph pr-d/codeph ">int</codeph>、<codeph class="+ topic/ph pr-d/codeph ">uint</codeph> 和 <codeph class="+ topic/ph pr-d/codeph ">Number</codeph> 对象的格式。
	 
	 <p class="- topic/p ">NumberFormatter 类使用操作系统提供的数据和功能，设计用于根据特定区域设置的约定设置数字格式，这都基于用户首选项和用户操作系统支持的功能。数字格式内的负号、小数分隔符、分组分隔符、分组模式及其他元素的位置可能因区域设置而异。</p>
	 
	 <p class="- topic/p ">如果操作系统支持请求的区域设置，则根据约定和请求的区域设置的默认值设置数字格式属性。如果请求的区域设置不可用，则根据回退或默认系统区域设置来设置属性，可以使用 <codeph class="+ topic/ph pr-d/codeph ">actualLocaleIDName</codeph> 属性检索默认系统区域设置。
	 </p>
	 <p class="- topic/p ">
	 由于要使用用户的设置、要使用操作系统提供的格式设置模式，并在请求的区域设置不受支持时使用回退区域设置，因此，即便使用相同的区域设置 ID，对不同的用户显示的格式设置结果也可能不同。
	 </p>
     
	 </apiDesc><example conref="examples\NumberFormatterExample.as" class="- topic/example "> 此示例说明如何根据不同的区域设置有区别地设置数字的格式。 
 
 <p class="- topic/p ">此示例使用以下区域设置：针对数字格式的默认操作系统区域设置、日语（日本）、英语（美国）和法语（法国）。此示例使用静态成员 <codeph class="+ topic/ph pr-d/codeph ">LocaleID.DEFAULT</codeph> 请求默认操作系统区域设置。</p>
 <p class="- topic/p ">
 此示例中的结果可能因操作系统和用户首选项不同而异。
 </p>
 <p class="- topic/p ">
 此示例针对列表中的每个区域设置执行以下操作：
 </p>
 <ol class="- topic/ol "><li class="- topic/li ">创建 NumberFormatter 对象。</li><li class="- topic/li ">将同一个值的格式设置为数字、整数和无符号整数，并显示结果。</li></ol>
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
 
package {
    import flash.globalization.NumberFormatter;
    import flash.globalization.LocaleID;
    
    public class NumberFormatterExample extends Sprite
    {
        public function NumberFormatterExample():void
        {
            var localeNames:Array = [LocaleID.DEFAULT,"ja_JP","en_US","fr_FR"];
            
            for ( var i:int = 0; i &lt; localeNames.length; i++ ) 
            {
                var nf:NumberFormatter = new NumberFormatter( localeNames[i] as String );
                trace('\n\n' + "LocaleID requested: " + nf.requestedLocaleIDName 
                    + "; actual: " + nf.actualLocaleIDName);
                trace( "Last Operation Status:" + nf.lastOperationStatus );   
            
                var numberString:String = nf.formatNumber(123456789.19); 
                trace( "Formatted Number:" + numberString);
                numberString = nf.formatInt(-123456789); 
                trace( "Formatted Int:" + numberString);
                numberString = nf.formatUint(123456789); 
                trace( "Formatted UInt:" + numberString);
            }
        }
    }
}
</codeblock></example><example conref="examples\NumberFormatterParseExample.as" class="- topic/example "> 此示例通过两种不同的方式来分析输入字符串并提取数值。 
 <p class="- topic/p ">
 此示例中的结果可能因操作系统和用户首选项不同而异。
 </p>
 <p class="- topic/p ">
 此示例执行以下操作：
 </p>
 <ol class="- topic/ol "><li class="- topic/li ">创建 NumberFormatter 对象。</li><li class="- topic/li ">调用 <codeph class="+ topic/ph pr-d/codeph ">NumberFormatter.parse()</codeph> 方法以分析字符串并返回 NumberParseResult 对象。</li><li class="- topic/li ">调用 <codeph class="+ topic/ph pr-d/codeph ">NumberFormatter.parseNumber()</codeph> 方法以分析字符串并返回一个 Number 值。</li></ol>
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
 
package {
      import flash.globalization.NumberFormatter;
      import flash.globalization.NumberParseResult;
      import flash.globalization.LastOperationStatus;
      import flash.globalization.LocaleID;

      public class NumberFormatterParseExample
      {
            public function NumberFormatterParseExample():void
            {
                var nf:NumberFormatter = new NumberFormatter( "en_US" );
                trace("LocaleID requested: " + nf.requestedLocaleIDName 
                    + "; actual: " + nf.actualLocaleIDName);
                trace( "Last Operation Status:" + nf.lastOperationStatus );  

                var inputNumberString:String = "123,567,89,0.254";
                var parseResult:NumberParseResult = nf.parse(inputNumberString);
                if ( nf.lastOperationStatus == LastOperationStatus.NO_ERROR ) {
                    trace("Parsed value:" + parseResult.value);
                }
                inputNumberString = "-123,567,89,0.254";
                var parsedNumber:Number = nf.parseNumber(inputNumberString);
                if ( nf.lastOperationStatus == LastOperationStatus.NO_ERROR ) {
                    trace("Parsed value:" + parsedNumber);
                }
            }
      }
}
</codeblock></example></apiClassifierDetail><apiConstructor id="flash.globalization:NumberFormatter:NumberFormatter" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">NumberFormatter</apiName><shortdesc class="- topic/shortdesc ">
		 构造新的 NumberFormatter 对象以根据给定区域设置的约定设置数字的格式。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">如果 <codeph class="+ topic/ph pr-d/codeph ">requestedLocaleIDName</codeph> 为 <codeph class="+ topic/ph pr-d/codeph ">null</codeph>
         
         </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">TypeError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">TypeError</apiOperationClassifier></apiException><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">requestedLocaleIDName</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">确定数字格式时使用的首选区域设置 ID 名称。
		 
		 </apiDesc></apiParam></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 构造新的 NumberFormatter 对象以根据给定区域设置的约定设置数字的格式。
		 
		  <p class="- topic/p ">此构造函数确定当前操作系统是否支持请求的区域设置 ID 名称。如果不支持，则使用回退区域设置。如果使用了回退区域设置，则 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性表示回退类型，并且 <codeph class="+ topic/ph pr-d/codeph "> actualLocaleIDName </codeph> 属性包含回退区域设置 ID 的名称。 </p>
		 
		  <p class="- topic/p ">要根据用户的当前操作系统首选项进行格式设置，请将 <codeph class="+ topic/ph pr-d/codeph ">requestedLocaleIDName</codeph> 参数中的值 <codeph class="+ topic/ph pr-d/codeph ">LocaleID.DEFAULT</codeph> 传递给构造函数。
		  </p>
		 
		 <p class="- topic/p ">当构造函数成功完成后，将 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性将设置为：</p>
		 <ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">LastOperationStatus.NO_ERROR</codeph></li></ul>
		 
		 <p class="- topic/p ">如果请求的区域设置 ID 名称不可用，则将 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性设置为下列属性之一：</p>
		 
		 <ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">LastOperationStatus.USING_FALLBACK_WARNING</codeph></li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">LastOperationStatus.USING_DEFAULT_WARNING</codeph></li></ul>
		 
         <p class="- topic/p ">如果当前操作系统不支持此类，则将 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性将设置为：</p>
         <ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">LastOperationStatus.UNSUPPORTED_ERROR</codeph></li></ul>
         
		 <p class="- topic/p ">否则，将 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性设置为 LastOperationStatus 类中定义的其中一个常量。</p>
		 
		 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">有关以上列出的警告和 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性其他可能值的详细信息，请参阅 <codeph class="+ topic/ph pr-d/codeph ">LastOperationStatus</codeph> 类中的说明。</b></p>
		 
		 </apiDesc></apiConstructorDetail><related-links class="- topic/related-links "><link href="flash.globalization.xml#LocaleID" class="- topic/link "><linktext class="- topic/linktext ">LocaleID</linktext></link><link href="flash.globalization.xml#NumberFormatter/requestedLocaleIDName" class="- topic/link "><linktext class="- topic/linktext ">requestedLocaleIDName</linktext></link><link href="flash.globalization.xml#NumberFormatter/actualLocaleIDName" class="- topic/link "><linktext class="- topic/linktext ">actualLocaleIDName</linktext></link><link href="flash.globalization.xml#NumberFormatter/lastOperationStatus" class="- topic/link "><linktext class="- topic/linktext ">lastOperationStatus</linktext></link><link href="flash.globalization.xml#LastOperationStatus" class="- topic/link "><linktext class="- topic/linktext ">LastOperationStatus</linktext></link></related-links></apiConstructor><apiOperation id="flash.globalization:NumberFormatter:formatInt" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">formatInt</apiName><shortdesc class="- topic/shortdesc ">
		 设置 int 值的格式。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">针对任何内部内存分配问题。
		 
         </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">MemoryError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:MemoryError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">设置了格式的数字字符串。
		 
		 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">value</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">要设置格式的 int 值。
		 </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 设置 int 值的格式。除采用 <codeph class="+ topic/ph pr-d/codeph "> int </codeph> 值外，此函数等效于 <codeph class="+ topic/ph pr-d/codeph ">formatNumber()</codeph> 方法。如果传入的值过大或过小，例如值大于 1.72e308 或小于 1.72e-308，则此函数返回 0。
		  
		 <p class="- topic/p ">调用此方法并成功完成后，将 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性设置为：</p>
		 <ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">LastOperationStatus.NO_ERROR</codeph></li></ul>
		 <p class="- topic/p ">否则，将 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性设置为 <codeph class="+ topic/ph pr-d/codeph ">LastOperationStatus</codeph> 类中定义的一个常量。</p>
		 
		 </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.globalization.xml#NumberFormatter/lastOperationStatus" class="- topic/link "><linktext class="- topic/linktext ">lastOperationStatus</linktext></link><link href="flash.globalization.xml#LastOperationStatus" class="- topic/link "><linktext class="- topic/linktext ">flash.globalization.LastOperationStatus</linktext></link></related-links></apiOperation><apiOperation id="flash.globalization:NumberFormatter:formatNumber" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">formatNumber</apiName><shortdesc class="- topic/shortdesc ">
		 设置 Number 值格式。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">如果存在任何内部内存分配问题。
		 
         </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">MemoryError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:MemoryError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">设置了格式的数字字符串。
		 
		  </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">value</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">要设置格式的 Number 值。
		 </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 设置 Number 值格式。
		 
		 <p class="- topic/p ">此函数根据格式程序的属性值设置数字格式。如果在创建 numberFormatter 对象后没有修改属性，则根据操作系统提供的由 actualLocaleIDName 标识的区域设置的特定于区域设置的约定为数字设置格式。要自定义格式，可以更改属性以控制设置数字格式的特定方面。
		  </p>
		 
		 <p class="- topic/p "> 可以使用此函数设置非常大的数字和非常小的量级的数字的格式。但有效位数不得超过 Number 对象提供的精度。不支持科学计数法。
		 </p>
		  
		 
		 <p class="- topic/p ">调用此方法并成功完成后，将 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性设置为：</p>
		 <ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">LastOperationStatus.NO_ERROR</codeph></li></ul>
		 <p class="- topic/p ">否则，将 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性设置为 <codeph class="+ topic/ph pr-d/codeph ">LastOperationStatus</codeph> 类中定义的一个常量。</p>
		 
		 </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.globalization.xml#NumberFormatter/lastOperationStatus" class="- topic/link "><linktext class="- topic/linktext ">lastOperationStatus</linktext></link><link href="flash.globalization.xml#LastOperationStatus" class="- topic/link "><linktext class="- topic/linktext ">LastOperationStatus</linktext></link></related-links></apiOperation><apiOperation id="flash.globalization:NumberFormatter:formatUint" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">formatUint</apiName><shortdesc class="- topic/shortdesc ">
		 设置 uint 值格式。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">如果存在任何内部内存分配问题。
		 
         </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">MemoryError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:MemoryError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">设置了格式的数字字符串。
		 
		  </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">value</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">uint</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">单位值。
		 </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 设置 uint 值格式。除采用 <codeph class="+ topic/ph pr-d/codeph ">uint</codeph> 之外，此函数等效于 <codeph class="+ topic/ph pr-d/codeph ">formatNumber()</codeph> 方法。如果传入的值过大，例如值大于 1.72e308，则此函数返回 0。
		 
		 <p class="- topic/p ">调用此方法并成功完成后，将 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性设置为：</p>
		 <ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">LastOperationStatus.NO_ERROR</codeph></li></ul>
		 <p class="- topic/p ">否则，将 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性设置为 <codeph class="+ topic/ph pr-d/codeph ">LastOperationStatus</codeph> 类中定义的一个常量。</p>
		 
		 </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.globalization.xml#NumberFormatter/lastOperationStatus" class="- topic/link "><linktext class="- topic/linktext ">lastOperationStatus</linktext></link><link href="flash.globalization.xml#LastOperationStatus" class="- topic/link "><linktext class="- topic/linktext ">LastOperationStatus</linktext></link></related-links></apiOperation><apiOperation id="flash.globalization:NumberFormatter:getAvailableLocaleIDNames" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">getAvailableLocaleIDNames</apiName><shortdesc class="- topic/shortdesc ">
		 列出此类支持的所有区域设置 ID 名称。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">一个字符串矢量，其中包含此类支持的所有区域设置 ID 名称。
		 
         </apiDesc><apiType value="Vector$String" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 列出此类支持的所有区域设置 ID 名称。 
		 
		 <p class="- topic/p ">如果当前操作系统不支持此类，此方法返回 null 值。</p>
		 
		 <p class="- topic/p ">调用此方法并成功完成后，将 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性设置为：</p>
		 <ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">LastOperationStatus.NO_ERROR</codeph></li></ul>
		 <p class="- topic/p ">否则，将 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性设置为 <codeph class="+ topic/ph pr-d/codeph ">LastOperationStatus</codeph> 类中定义的一个常量。</p>
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.globalization:NumberFormatter:parseNumber" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">parseNumber</apiName><shortdesc class="- topic/shortdesc ">
		 解析仅包含数字和可选空白字符的字符串并返回一个数字。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">如果 parseString 为 <codeph class="+ topic/ph pr-d/codeph ">null</codeph>
		 
		 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">TypeError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">TypeError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">parseString</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 解析仅包含数字和可选空白字符的字符串并返回一个数字。如果字符串不以数字开头或包含除空格之外的不属于数字部分的字符，则此方法返回 <codeph class="+ topic/ph pr-d/codeph ">NaN</codeph>。忽略数字前后的空格。空白字符是 Unicode 字符数据库（请参阅 http://www.unicode.org/ucd/）中具有 Space Separator (Zs) 属性的字符。 
		 
		 <p class="- topic/p "> 如果数字位数前面或后面跟着一个加号“+”，这个加号作为非空白字符处理。返回值为 <codeph class="+ topic/ph pr-d/codeph ">NaN</codeph>。
		 </p>
		 
		 <p class="- topic/p "> 有关数字解析和有效数字构成部分的更多信息，请参阅解析功能的说明。
		 </p>
		 
		 <p class="- topic/p ">调用此方法并成功完成后，将 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性设置为：</p>
		 <ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">LastOperationStatus.NO_ERROR</codeph></li></ul>
		 <p class="- topic/p ">否则，将 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性设置为 <codeph class="+ topic/ph pr-d/codeph ">LastOperationStatus</codeph> 类中定义的一个常量。</p>
		 	 
		 </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.globalization.xml#NumberFormatter/lastOperationStatus" class="- topic/link "><linktext class="- topic/linktext ">lastOperationStatus</linktext></link><link href="flash.globalization.xml#LastOperationStatus" class="- topic/link "><linktext class="- topic/linktext ">LastOperationStatus</linktext></link><link href="flash.globalization.xml#NumberFormatter/parse()" class="- topic/link "><linktext class="- topic/linktext ">parse()</linktext></link><link href="" invalidHref="flash.globalization.parseFloat().xml" class="- topic/link "><linktext class="- topic/linktext ">parseFloat()</linktext></link><link href="flash.globalization.xml#NationalDigitsType" class="- topic/link "><linktext class="- topic/linktext ">NationalDigitsType</linktext></link></related-links></apiOperation><apiOperation id="flash.globalization:NumberFormatter:parse" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">parse</apiName><shortdesc class="- topic/shortdesc ">
		 解析字符串并返回包含解析的元素的 NumberParseResult 对象。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">如果 parseString 为 <codeph class="+ topic/ph pr-d/codeph ">null</codeph>
		 
         </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">TypeError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">TypeError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.globalization:NumberParseResult</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">parseString</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 解析字符串并返回包含解析的元素的 NumberParseResult 对象。 
		 
		 <p class="- topic/p ">NumberParseResult 对象包含在输入字符串中找到的第一个数字的值、字符串内数字的起始索引以及字符串中数字之后的第一个字符的索引。</p>
		 
		 <p class="- topic/p "> 如果字符串中不包含数字，NumberParseResult 的属性值设置为 <codeph class="+ topic/ph pr-d/codeph ">NaN</codeph>，<codeph class="+ topic/ph pr-d/codeph ">startIndex</codeph> 和 <codeph class="+ topic/ph pr-d/codeph ">endIndex</codeph> 属性值设置为十六进制值 <codeph class="+ topic/ph pr-d/codeph ">0x7fffffff</codeph>。
		 </p>
		 
		 <p class="- topic/p ">此函数使用 <codeph class="+ topic/ph pr-d/codeph ">decimalSeparator</codeph> 属性的值确定包含小数的数字部分，使用 <codeph class="+ topic/ph pr-d/codeph ">groupingSeparator</codeph> 属性确定数字位数内允许的字符，使用 <codeph class="+ topic/ph pr-d/codeph ">negativeNumberFormat</codeph> 属性控制负值的表示方法。 </p>
		 
		 <p class="- topic/p ">下表标识为不同的 NegativeNumberFormat 值解析的字符串的结果：</p>
		 <adobetable class="innertable"><tgroup cols="3" class="- topic/tgroup "><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry ">NegativeNumberFormat</entry><entry class="- topic/entry ">输入字符串</entry><entry class="- topic/entry ">结果</entry></row><row class="- topic/row "><entry class="- topic/entry ">(n)</entry><entry class="- topic/entry ">“(123)”或“( 123 )”</entry><entry class="- topic/entry ">“-123”</entry></row><row class="- topic/row "><entry class="- topic/entry ">-n</entry><entry class="- topic/entry ">“-123”或“- 123”</entry><entry class="- topic/entry ">“-123”</entry></row><row class="- topic/row "><entry class="- topic/entry ">- n</entry><entry class="- topic/entry ">“-123”或“- 123”</entry><entry class="- topic/entry ">“-123”</entry></row><row class="- topic/row "><entry class="- topic/entry ">n-</entry><entry class="- topic/entry ">“123-”或“123 -”</entry><entry class="- topic/entry ">“-123”</entry></row><row class="- topic/row "><entry class="- topic/entry ">n -</entry><entry class="- topic/entry ">“123-”或“123 -”</entry><entry class="- topic/entry ">“-123”</entry></row></tbody></tgroup></adobetable>
		 
		 <p class="- topic/p ">允许数字和负号或括号之间存有单个空格。</p>
		 
		 <p class="- topic/p ">确定有效的数字时，忽略其它属性。具体来说，忽略 <codeph class="+ topic/ph pr-d/codeph ">digitsType</codeph> 属性的值，并且数字可以来自 NationalDigitsType 类中枚举的任何数字集。<codeph class="+ topic/ph pr-d/codeph ">groupingPattern</codeph> 和 <codeph class="+ topic/ph pr-d/codeph ">useGrouping</codeph> 属性的值不影响数字的解析。
		 </p>
		 
		 <p class="- topic/p "> 如果字符串中数字的前面或后面有加号“+”，加号被视为不属于数字部分的字符。  
		 </p>
		 
		 <p class="- topic/p "> 此函数不解析包含以科学记数法表示的数字（例如，1.23e40）的字符串。</p>
		 
		 <p class="- topic/p ">调用此方法并成功完成后，将 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性设置为：</p>
		 <ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">LastOperationStatus.NO_ERROR</codeph></li></ul>
		 <p class="- topic/p ">否则，将 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性设置为 <codeph class="+ topic/ph pr-d/codeph ">LastOperationStatus</codeph> 类中定义的一个常量。</p>
         
		 </apiDesc><example class="- topic/example ">以下代码解析字符串中的数字并检索前缀和后缀： 
		 <codeblock rev="3.0" xml:space="preserve" class="+ topic/pre pr-d/codeblock "> 
		 var nf:NumberFormatter = new NumberFormatter("fr-FR"); 
		 var str:String = "1,56 mètre"
		 var result:NumberParseResult = nf.parse(str);
		 trace(result.value) // 1.56
		 trace(str.substr(0,result.startIndex));                // ""
		 trace(str.substr(result.startIndex, result.endIndex)); // "1,56"
		 trace(str.substr(result.endIndex));                    // " mètre"
		 </codeblock>
		  
		 </example></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.globalization.xml#NumberFormatter/lastOperationStatus" class="- topic/link "><linktext class="- topic/linktext ">lastOperationStatus</linktext></link><link href="flash.globalization.xml#LastOperationStatus" class="- topic/link "><linktext class="- topic/linktext ">LastOperationStatus</linktext></link><link href="flash.globalization.xml#NumberParseResult" class="- topic/link "><linktext class="- topic/linktext ">NumberParseResult</linktext></link><link href="flash.globalization.xml#NumberFormatter/parseNumber()" class="- topic/link "><linktext class="- topic/linktext ">parseNumber()</linktext></link><link href="" invalidHref="flash.globalization.parseFloat().xml" class="- topic/link "><linktext class="- topic/linktext ">parseFloat()</linktext></link><link href="flash.globalization.xml#NationalDigitsType" class="- topic/link "><linktext class="- topic/linktext ">NationalDigitsType</linktext></link></related-links></apiOperation><apiValue id="flash.globalization:NumberFormatter:actualLocaleIDName:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">actualLocaleIDName</apiName><shortdesc class="- topic/shortdesc ">
		 此 NumberFormatter 对象使用的实际区域设置 ID 的名称。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 此 NumberFormatter 对象使用的实际区域设置 ID 的名称。
		 
		 <p class="- topic/p ">根据操作系统和传递给 <codeph class="+ topic/ph pr-d/codeph ">Collator()</codeph> 构造函数的 <codeph class="+ topic/ph pr-d/codeph ">requestedLocaleIDName</codeph> 参数的值，该名称有三种可能的值。</p>
		 <ol class="- topic/ol "><li class="- topic/li ">如果请求的区域设置不是 <codeph class="+ topic/ph pr-d/codeph ">LocaleID.DEFAULT</codeph> 且操作系统支持该请求的区域设置，则返回的名称与 <codeph class="+ topic/ph pr-d/codeph ">requestedLocaleIDName</codeph> 属性相同。
		         </li><li class="- topic/li ">如果将 <codeph class="+ topic/ph pr-d/codeph ">LocaleID.DEFAULT</codeph> 用作构造函数的 <codeph class="+ topic/ph pr-d/codeph ">requestedLocaleIDName</codeph> 参数的值，则使用由用户操作系统指定的当前区域设置的名称。<codeph class="+ topic/ph pr-d/codeph ">LocaleID.DEFAULT</codeph> 值保留用户在操作系统中的自定义设置。显式值作为 <codeph class="+ topic/ph pr-d/codeph ">requestedLocaleIDName</codeph> 参数传递与使用 <codeph class="+ topic/ph pr-d/codeph ">LocaleID.DEFAULT</codeph> 所产生的结果不一定相同，即使两个区域设置 ID 名称相同，也是如此。用户可能已在他们的计算机上对区域设置进行了自定义，通过请求显式区域设置 ID 名称（而不是使用 <codeph class="+ topic/ph pr-d/codeph ">LocaleID.DEFAULT</codeph>），您的应用程序将不会检索这些自定义设置。 
		 	   <blockquote>
		         <p class="- topic/p ">例如：</p>
		 
         <codeblock rev="3.0" xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
         var fmt:NumberFormatter = new NumberFormatter(LocaleID.DEFAULT);
		 var aliName:String = fmt.actualLocaleIDName;
		 </codeblock>
		 
		         <p class="- topic/p ">在上面的示例中，<codeph class="+ topic/ph pr-d/codeph ">aliName</codeph> 是与用户当前的操作系统设置对应的区域设置的名称（例如，如果用户的区域设置设为“意大利语-意大利”，则其名称为“it-IT”），而不是“<codeph class="+ topic/ph pr-d/codeph ">i-default</codeph>”（<codeph class="+ topic/ph pr-d/codeph ">LocaleID.DEFAULT</codeph> 区域设置的名称）。</p>
		         </blockquote></li><li class="- topic/li ">如果系统不支持在构造函数中指定的 <codeph class="+ topic/ph pr-d/codeph ">requestedLocaleIDName</codeph>，则会提供回退区域设置 ID 名称。
		         <blockquote>
		         <p class="- topic/p ">例如：</p>
		 
		 <codeblock rev="3.0" xml:space="preserve" class="+ topic/pre pr-d/codeblock ">	 	 
         var fmt:NumberFormatter = new NumberFormatter("fr-CA"); 	 
         var aliName:String = fmt.actualLocaleIDName;
         </codeblock>
         
		         <p class="- topic/p ">假设以上示例中的操作系统不支持“fr-CA”（法语-加拿大）区域设置 ID，则使用回退。在这种情况下，回退区域设置 ID 是“fr-FR”（法语-法国）。</p>
		         </blockquote></li></ol>
		 
		 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.globalization.xml#LocaleID" class="- topic/link "><linktext class="- topic/linktext ">LocaleID</linktext></link><link href="flash.globalization.xml#NumberFormatter/requestedLocaleIDName" class="- topic/link "><linktext class="- topic/linktext ">requestedLocaleIDName</linktext></link><link href="flash.globalization.xml#NumberFormatter/NumberFormatter()" class="- topic/link "><linktext class="- topic/linktext ">NumberFormatter()</linktext></link></related-links></apiValue><apiValue id="flash.globalization:NumberFormatter:decimalSeparator:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">decimalSeparator</apiName><shortdesc class="- topic/shortdesc ">
		 为包含小数部分的数字设置格式或对其进行解析时使用的小数分隔符字符。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">如果为此属性分配 null 值。
		 
		 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">TypeError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">TypeError</apiOperationClassifier></apiException><apiDefaultValue>dependent on the locale and operating system.
		 
		 </apiDefaultValue></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 为包含小数部分的数字设置格式或对其进行解析时使用的小数分隔符字符。
		 
		 <p class="- topic/p ">基于在构造格式程序对象时选择的区域设置对此属性进行最初设置。</p>
		 
		 <p class="- topic/p ">为此属性分配了值并且未引发错误或警告时，将 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性设置为：</p>
		 <ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">LastOperationStatus.NO_ERROR</codeph></li></ul>
		 <p class="- topic/p ">否则，将 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性设置为 <codeph class="+ topic/ph pr-d/codeph ">LastOperationStatus</codeph> 类中定义的一个常量。</p>
		 
		 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.globalization.xml#NumberFormatter/formatInt()" class="- topic/link "><linktext class="- topic/linktext ">formatInt()</linktext></link><link href="flash.globalization.xml#NumberFormatter/formatNumber()" class="- topic/link "><linktext class="- topic/linktext ">formatNumber()</linktext></link><link href="flash.globalization.xml#NumberFormatter/formatUInt()" class="- topic/link "><linktext class="- topic/linktext ">formatUInt()</linktext></link><link href="flash.globalization.xml#NumberFormatter/lastOperationStatus" class="- topic/link "><linktext class="- topic/linktext ">lastOperationStatus</linktext></link><link href="flash.globalization.xml#LastOperationStatus" class="- topic/link "><linktext class="- topic/linktext ">LastOperationStatus</linktext></link></related-links></apiValue><apiValue id="flash.globalization:NumberFormatter:digitsType:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">digitsType</apiName><shortdesc class="- topic/shortdesc ">
		 定义为数字设置格式时使用的数字字符集。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">uint</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">如果为此属性分配 null 值。
		 
		 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">TypeError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">TypeError</apiOperationClassifier></apiException><apiDefaultValue>dependent on the locale and operating system.
		 
		 </apiDefaultValue></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 定义为数字设置格式时使用的数字字符集。 
		 
         <p class="- topic/p ">不同语言和区域使用不同的字符集表示数字 0 到 9。此属性定义要使用的数字集。</p>
		 
		 <p class="- topic/p ">此属性值表示十进制数字集中数字 0 的 Unicode 值。在 NationalDigitsType 类中定义此属性的有效值。</p>
		 
		 <p class="- topic/p ">为此属性分配了值并且未引发错误或警告时，将 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性设置为：</p>
		 <ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">LastOperationStatus.NO_ERROR</codeph></li></ul>
		 <p class="- topic/p ">否则，将 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性设置为 <codeph class="+ topic/ph pr-d/codeph ">LastOperationStatus</codeph> 类中定义的一个常量。</p>
		 
		 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.globalization.xml#NumberFormatter/lastOperationStatus" class="- topic/link "><linktext class="- topic/linktext ">lastOperationStatus</linktext></link><link href="flash.globalization.xml#LastOperationStatus" class="- topic/link "><linktext class="- topic/linktext ">LastOperationStatus</linktext></link><link href="flash.globalization.xml#NationalDigitsType" class="- topic/link "><linktext class="- topic/linktext ">NationalDigitsType</linktext></link></related-links></apiValue><apiValue id="flash.globalization:NumberFormatter:fractionalDigits:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">fractionalDigits</apiName><shortdesc class="- topic/shortdesc ">
		 小数分隔符后可以显示的最大位数。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">int</apiValueClassifier><apiDefaultValue>0
		 
		 </apiDefaultValue></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 小数分隔符后可以显示的最大位数。
		 
		 <p class="- topic/p ">数字舍入为由此属性指定的数字位数。<b class="+ topic/ph hi-d/b ">舍入方案根据用户的操作系统不同而有所不同。</b></p>
		 
		  <p class="- topic/p ">当 <codeph class="+ topic/ph pr-d/codeph ">trailingZeros</codeph> 属性设置为 <codeph class="+ topic/ph pr-d/codeph ">true</codeph> 时，用尾随零来填充数字的小数部分（小数点之后），直到数字长度与此 <codeph class="+ topic/ph pr-d/codeph ">fractionalDigits</codeph> 属性的值相匹配。</p>
		 
		 <p class="- topic/p ">为此属性分配了值并且未引发错误或警告时，将 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性设置为：</p>
		 <ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">LastOperationStatus.NO_ERROR</codeph></li></ul>
		 <p class="- topic/p ">否则，将 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性设置为 <codeph class="+ topic/ph pr-d/codeph ">LastOperationStatus</codeph> 类中定义的一个常量。</p>
		 
		 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.globalization.xml#NumberFormatter/trailingZeros" class="- topic/link "><linktext class="- topic/linktext ">trailingZeros</linktext></link><link href="flash.globalization.xml#NumberFormatter/lastOperationStatus" class="- topic/link "><linktext class="- topic/linktext ">lastOperationStatus</linktext></link><link href="flash.globalization.xml#LastOperationStatus" class="- topic/link "><linktext class="- topic/linktext ">flash.globalization.LastOperationStatus</linktext></link></related-links></apiValue><apiValue id="flash.globalization:NumberFormatter:groupingPattern:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">groupingPattern</apiName><shortdesc class="- topic/shortdesc ">
		 描述分组分隔符在设置了格式的数字字符串中的位置。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">如果为此属性分配 null 值。
		 
		 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">TypeError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">TypeError</apiOperationClassifier></apiException></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 描述分组分隔符在设置了格式的数字字符串中的位置。
		 
		  <p class="- topic/p ">将 <codeph class="+ topic/ph pr-d/codeph ">useGrouping</codeph> 属性设置为 true 时，<codeph class="+ topic/ph pr-d/codeph ">groupingPattern</codeph> 属性用于定义分组分隔符所用的位置和模式。</p>
		 
		  <p class="- topic/p ">分组模式定义为包含由分号分隔并可能以星号结尾的数字的字符串。例如：“<codeph class="+ topic/ph pr-d/codeph ">3;2;*</codeph>”。字符串中的每个数字表示组中数字位数。分组分隔符置于每个数字组之前。字符串结尾的星号表示应在设置了格式的字符串的其余部分重复包含这一数字位数的组。如果没有星号，则在设置了格式的字符串的其余部分不会有其他组或分隔符。 </p>
		 
		  <p class="- topic/p ">字符串中的第一个数字对应于小数分隔符左边的第一组数字。随后的数字定义左边随后组中的数字位数。因此字符串“3;2;*”表示分组分隔符置于第一组 3 位数之后，后面跟 2 位数的组。例如：<codeph class="+ topic/ph pr-d/codeph ">98,76,54,321</codeph></p>
		 
		  <p class="- topic/p ">下表提供了使用多种分组模式为数字 123456789.12 设置格式的示例。分组分隔符为逗号，小数分隔符为句点。 
		 </p>
		     <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry ">分组模式</entry><entry class="- topic/entry ">示例格式</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">3;*</codeph></entry><entry class="- topic/entry ">123,456,789.12</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">3;2;*</codeph></entry><entry class="- topic/entry ">12,34,56,789.12</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">3</codeph></entry><entry class="- topic/entry ">123456,789.12</entry></row></tbody></tgroup></adobetable>
		 
		  <p class="- topic/p ">仅可以定义有限的分组数字个数。在某些操作系统上，分组模式只能包含两个数字加一个星号。其他操作系统最多可以支持四个数字加一个星号。对于不含星号的模式，某些操作系统只支持一个数字，而其它操作系统最多支持三个数字。如果超过分组模式元素的最大数，则忽略其他元素，并按如下所述设置 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性。
		  </p>
		 
		 <p class="- topic/p ">为此属性分配了值并且未引发错误或警告时，将 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性设置为：</p>
		 <ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">LastOperationStatus.NO_ERROR</codeph></li></ul>
		 <p class="- topic/p ">否则，将 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性设置为 <codeph class="+ topic/ph pr-d/codeph ">LastOperationStatus</codeph> 类中定义的一个常量。</p>
		 
		 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.globalization.xml#NumberFormatter/groupingSeparator" class="- topic/link "><linktext class="- topic/linktext ">groupingSeparator</linktext></link><link href="flash.globalization.xml#NumberFormatter/useGrouping" class="- topic/link "><linktext class="- topic/linktext ">useGrouping</linktext></link><link href="flash.globalization.xml#NumberFormatter/lastOperationStatus" class="- topic/link "><linktext class="- topic/linktext ">lastOperationStatus</linktext></link><link href="flash.globalization.xml#LastOperationStatus" class="- topic/link "><linktext class="- topic/linktext ">LastOperationStatus</linktext></link></related-links></apiValue><apiValue id="flash.globalization:NumberFormatter:groupingSeparator:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">groupingSeparator</apiName><shortdesc class="- topic/shortdesc ">
		 用于分组分隔符的字符或字符串。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">如果为此属性分配 null 值。
		 
		 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">TypeError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">TypeError</apiOperationClassifier></apiException><apiDefaultValue>dependent on the locale and operating system.
		 
		 </apiDefaultValue></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 用于分组分隔符的字符或字符串。
		 
		 <p class="- topic/p ">当 <codeph class="+ topic/ph pr-d/codeph ">useGrouping</codeph> 属性设置为 <codeph class="+ topic/ph pr-d/codeph ">true</codeph> 时，在设置数字格式时此属性的值用作分组分隔符。基于在构造格式程序对象时选择的区域设置对此属性进行最初设置。</p>
		 
		 <p class="- topic/p ">为此属性分配了值并且未引发错误或警告时，将 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性设置为：</p>
		 <ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">LastOperationStatus.NO_ERROR</codeph></li></ul>
		 <p class="- topic/p ">否则，将 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性设置为 <codeph class="+ topic/ph pr-d/codeph ">LastOperationStatus</codeph> 类中定义的一个常量。</p>
		 
		 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.globalization.xml#NumberFormatter/formatInt()" class="- topic/link "><linktext class="- topic/linktext ">formatInt()</linktext></link><link href="flash.globalization.xml#NumberFormatter/formatNumber()" class="- topic/link "><linktext class="- topic/linktext ">formatNumber()</linktext></link><link href="flash.globalization.xml#NumberFormatter/formatUInt()" class="- topic/link "><linktext class="- topic/linktext ">formatUInt()</linktext></link><link href="flash.globalization.xml#NumberFormatter/useGrouping" class="- topic/link "><linktext class="- topic/linktext ">useGrouping</linktext></link><link href="flash.globalization.xml#NumberFormatter/lastOperationStatus" class="- topic/link "><linktext class="- topic/linktext ">lastOperationStatus</linktext></link><link href="flash.globalization.xml#LastOperationStatus" class="- topic/link "><linktext class="- topic/linktext ">LastOperationStatus</linktext></link></related-links></apiValue><apiValue id="flash.globalization:NumberFormatter:lastOperationStatus:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">lastOperationStatus</apiName><shortdesc class="- topic/shortdesc ">
		 此 NumberFormatter 对象执行的前一操作的状态。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 此 NumberFormatter 对象执行的前一操作的状态。只要调用构造函数或此类的方法或设置另一个属性，就会设置 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性。有关可能的值，请参阅每种方法的说明。
		 
		 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.globalization.xml#LastOperationStatus" class="- topic/link "><linktext class="- topic/linktext ">LastOperationStatus</linktext></link></related-links></apiValue><apiValue id="flash.globalization:NumberFormatter:leadingZero:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">leadingZero</apiName><shortdesc class="- topic/shortdesc ">
		 指定当小数分隔符左侧没有整数位时，设置了格式的数字中是否包括前导零。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">如果为此属性分配 null 值。
		 
		 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">TypeError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">TypeError</apiOperationClassifier></apiException><apiDefaultValue>dependent on the locale and operating system.
		 
		 </apiDefaultValue></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 指定当小数分隔符左侧没有整数位时，设置了格式的数字中是否包括前导零。
		 
		  <p class="- topic/p ">当此属性设置为 <codeph class="+ topic/ph pr-d/codeph ">true</codeph> 时，在设置 -1.0 到 1.0 之间的数值的格式时，小数分隔符左侧包括前导零。当此属性设置为 <codeph class="+ topic/ph pr-d/codeph ">false</codeph> 时，不包括前导零。</p>
		 
		 <p class="- topic/p ">例如，如果数字是 0.321，并且此属性设置为 <codeph class="+ topic/ph pr-d/codeph ">true</codeph>，则在设置了格式的字符串中包括前导零。如果将此属性设置为 <codeph class="+ topic/ph pr-d/codeph ">false</codeph>，则不包括前导零。在这种情况下，字符串将只在十进制数字前包括小数分隔符，如 <codeph class="+ topic/ph pr-d/codeph ">.321</codeph>。 </p>
		 
		  <p class="- topic/p ">下表提供了几个示例，显示如何基于此属性以及相关的 <codeph class="+ topic/ph pr-d/codeph ">fractionalDigits</codeph> 和 <codeph class="+ topic/ph pr-d/codeph ">trailingZeros</codeph> 属性的值来设置数字的格式。
		  </p>
		 
		 <adobetable class="innertable"><tgroup cols="5" class="- topic/tgroup "><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry ">trailingZeros</entry><entry class="- topic/entry "><b class="+ topic/ph hi-d/b ">leadingZero</b></entry><entry class="- topic/entry ">fractionalDigits</entry><entry class="- topic/entry ">0.12</entry><entry class="- topic/entry ">0</entry></row><row class="- topic/row "><entry class="- topic/entry ">true</entry><entry class="- topic/entry ">true</entry><entry class="- topic/entry ">3</entry><entry class="- topic/entry ">0.120</entry><entry class="- topic/entry ">0.000</entry></row><row class="- topic/row "><entry class="- topic/entry ">false</entry><entry class="- topic/entry ">true</entry><entry class="- topic/entry ">3</entry><entry class="- topic/entry ">0.12</entry><entry class="- topic/entry ">0</entry></row><row class="- topic/row "><entry class="- topic/entry ">true</entry><entry class="- topic/entry ">false</entry><entry class="- topic/entry ">3</entry><entry class="- topic/entry ">.120</entry><entry class="- topic/entry ">.000</entry></row><row class="- topic/row "><entry class="- topic/entry ">false</entry><entry class="- topic/entry ">false</entry><entry class="- topic/entry ">3</entry><entry class="- topic/entry ">.12</entry><entry class="- topic/entry ">0</entry></row></tbody></tgroup></adobetable>
		 
		 <p class="- topic/p ">为此属性分配了值并且未引发错误或警告时，将 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性设置为：</p>
		 <ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">LastOperationStatus.NO_ERROR</codeph></li></ul>
		 <p class="- topic/p ">否则，将 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性设置为 <codeph class="+ topic/ph pr-d/codeph ">LastOperationStatus</codeph> 类中定义的一个常量。</p>
		 
		 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.globalization.xml#NumberFormatter/formatInt()" class="- topic/link "><linktext class="- topic/linktext ">formatInt()</linktext></link><link href="flash.globalization.xml#NumberFormatter/formatNumber()" class="- topic/link "><linktext class="- topic/linktext ">formatNumber()</linktext></link><link href="flash.globalization.xml#NumberFormatter/formatUInt()" class="- topic/link "><linktext class="- topic/linktext ">formatUInt()</linktext></link><link href="flash.globalization.xml#NumberFormatter/trailingZeros" class="- topic/link "><linktext class="- topic/linktext ">trailingZeros</linktext></link><link href="flash.globalization.xml#NumberFormatter/lastOperationStatus" class="- topic/link "><linktext class="- topic/linktext ">lastOperationStatus</linktext></link><link href="flash.globalization.xml#LastOperationStatus" class="- topic/link "><linktext class="- topic/linktext ">LastOperationStatus</linktext></link></related-links></apiValue><apiValue id="flash.globalization:NumberFormatter:negativeNumberFormat:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">negativeNumberFormat</apiName><shortdesc class="- topic/shortdesc ">
		 表示负数的格式设置模式的数值。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">uint</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">如果指定的值不介于 0 到 4 之间。
		 
		 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiDefaultValue>dependent on the locale and operating system.
		 
		 </apiDefaultValue></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 表示负数的格式设置模式的数值。此模式定义负号或圆括号相对于设置了格式的数字的数字部分的位置。
		 
		 <p class="- topic/p "> 下表总结了可能的负数格式。当设置负数的格式时，格式中的负号由 <codeph class="+ topic/ph pr-d/codeph ">negativeSymbol</codeph> 属性的值替换，“n”字符由设置了格式的数值替换。</p>
		  
		 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry ">负数格式类型</entry><entry class="- topic/entry ">格式</entry></row><row class="- topic/row "><entry class="- topic/entry ">0</entry><entry class="- topic/entry ">(n)</entry></row><row class="- topic/row "><entry class="- topic/entry ">1</entry><entry class="- topic/entry ">-n</entry></row><row class="- topic/row "><entry class="- topic/entry ">2</entry><entry class="- topic/entry ">- n</entry></row><row class="- topic/row "><entry class="- topic/entry ">3</entry><entry class="- topic/entry ">n-</entry></row><row class="- topic/row "><entry class="- topic/entry ">4</entry><entry class="- topic/entry ">n -</entry></row></tbody></tgroup></adobetable>
		 
		 <p class="- topic/p ">为此属性分配了值并且未引发错误或警告时，将 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性设置为：</p>
		 <ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">LastOperationStatus.NO_ERROR</codeph></li></ul>
		 <p class="- topic/p ">否则，将 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性设置为 <codeph class="+ topic/ph pr-d/codeph ">LastOperationStatus</codeph> 类中定义的一个常量。</p>
		 
		 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.globalization.xml#NumberFormatter/negativeSymbol" class="- topic/link "><linktext class="- topic/linktext ">negativeSymbol</linktext></link><link href="flash.globalization.xml#NumberFormatter/formatInt()" class="- topic/link "><linktext class="- topic/linktext ">formatInt()</linktext></link><link href="flash.globalization.xml#NumberFormatter/formatNumber()" class="- topic/link "><linktext class="- topic/linktext ">formatNumber()</linktext></link><link href="flash.globalization.xml#NumberFormatter/formatUInt()" class="- topic/link "><linktext class="- topic/linktext ">formatUInt()</linktext></link><link href="flash.globalization.xml#NumberFormatter/lastOperationStatus" class="- topic/link "><linktext class="- topic/linktext ">lastOperationStatus</linktext></link><link href="flash.globalization.xml#LastOperationStatus" class="- topic/link "><linktext class="- topic/linktext ">LastOperationStatus</linktext></link></related-links></apiValue><apiValue id="flash.globalization:NumberFormatter:negativeSymbol:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">negativeSymbol</apiName><shortdesc class="- topic/shortdesc ">
		 设置负值的格式时使用的负号。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">如果系统无法分配足够的内部内存。
		 
		 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">MemoryError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:MemoryError</apiOperationClassifier></apiException></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 设置负值的格式时使用的负号。
		 
		 <p class="- topic/p ">为小于零的数字设置格式时，将此符号与负数格式一同使用。在不包括负号的负数格式中不使用它（例如，使用圆括号括起的负数）。 </p>
		 
		 <p class="- topic/p "> 此属性设置为构造此格式程序时选择的实际区域。可以使用某个值设置它以覆盖默认设置。</p>
		 
		 <p class="- topic/p ">为此属性分配了值并且未引发错误或警告时，将 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性设置为：</p>
		 <ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">LastOperationStatus.NO_ERROR</codeph></li></ul>
		 <p class="- topic/p ">否则，将 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性设置为 <codeph class="+ topic/ph pr-d/codeph ">LastOperationStatus</codeph> 类中定义的一个常量。</p>
		 
		 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.globalization.xml#NumberFormatter/negativeNumberFormat" class="- topic/link "><linktext class="- topic/linktext ">negativeNumberFormat</linktext></link><link href="flash.globalization.xml#NumberFormatter/formatInt()" class="- topic/link "><linktext class="- topic/linktext ">formatInt()</linktext></link><link href="flash.globalization.xml#NumberFormatter/formatNumber()" class="- topic/link "><linktext class="- topic/linktext ">formatNumber()</linktext></link><link href="flash.globalization.xml#NumberFormatter/formatUInt()" class="- topic/link "><linktext class="- topic/linktext ">formatUInt()</linktext></link><link href="flash.globalization.xml#NumberFormatter/lastOperationStatus" class="- topic/link "><linktext class="- topic/linktext ">lastOperationStatus</linktext></link><link href="flash.globalization.xml#LastOperationStatus" class="- topic/link "><linktext class="- topic/linktext ">LastOperationStatus</linktext></link></related-links></apiValue><apiValue id="flash.globalization:NumberFormatter:requestedLocaleIDName:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">requestedLocaleIDName</apiName><shortdesc class="- topic/shortdesc ">
		 传递到此 NumberFormatter 对象的构造函数的请求的区域设置 ID 名称。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 传递到此 NumberFormatter 对象的构造函数的请求的区域设置 ID 名称。
		 
		 <p class="- topic/p ">如果使用了 <codeph class="+ topic/ph pr-d/codeph ">LocaleID.DEFAULT</codeph> 值，则返回的名称将是“i-default”。如果应用了回退区域设置，则实际使用的区域设置可能与请求的区域设置不同。可以使用 <codeph class="+ topic/ph pr-d/codeph ">actualLocaleIDName</codeph> 属性检索实际区域设置的名称。
		 </p>
		 
		 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.globalization.xml#LocaleID" class="- topic/link "><linktext class="- topic/linktext ">LocaleID</linktext></link><link href="flash.globalization.xml#NumberFormatter/actualLocaleIDName" class="- topic/link "><linktext class="- topic/linktext ">actualLocaleIDName</linktext></link><link href="flash.globalization.xml#NumberFormatter/NumberFormatter()" class="- topic/link "><linktext class="- topic/linktext ">NumberFormatter()</linktext></link></related-links></apiValue><apiValue id="flash.globalization:NumberFormatter:trailingZeros:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">trailingZeros</apiName><shortdesc class="- topic/shortdesc ">
		 指定设置了格式的数字中是否包括尾随零。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">如果为此属性分配 null 值。
		 
		 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">TypeError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">TypeError</apiOperationClassifier></apiException><apiDefaultValue>dependent on the locale and operating system.
		 
		 </apiDefaultValue></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 指定设置了格式的数字中是否包括尾随零。 
		 
		  <p class="- topic/p ">当此属性设置为 <codeph class="+ topic/ph pr-d/codeph ">true</codeph> 时，设置了格式的数字的小数部分包括尾随零，并且位数限制为 <codeph class="+ topic/ph pr-d/codeph ">fractionalDigits</codeph> 属性指定的值。当此属性设置为 <codeph class="+ topic/ph pr-d/codeph ">false</codeph> 时，则不显示尾随零。</p>
		 
		 <p class="- topic/p ">例如，如果数值是 123.4，并且此属性设置为 true，<codeph class="+ topic/ph pr-d/codeph ">fractionalDigits</codeph> 的属性设置为 3，则此设置了格式的字符串将显示尾随零，形如 <codeph class="+ topic/ph pr-d/codeph ">123.400</codeph>。如果此属性为 <codeph class="+ topic/ph pr-d/codeph ">false</codeph>，则不包括尾随零，并且该字符串仅显示小数分隔符以及后面的非零十进制数，形如 <codeph class="+ topic/ph pr-d/codeph ">123.4</codeph>。</p>
		 
		  <p class="- topic/p ">下表提供了几个示例，显示如何基于此属性以及相关的 <codeph class="+ topic/ph pr-d/codeph ">fractionalDigits</codeph> 和 <codeph class="+ topic/ph pr-d/codeph ">leadingZero</codeph> 属性的值来设置数值的格式。
		  </p>
		 
		 <adobetable class="innertable"><tgroup cols="5" class="- topic/tgroup "><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><b class="+ topic/ph hi-d/b ">trailingZeros</b></entry><entry class="- topic/entry ">leadingZero</entry><entry class="- topic/entry ">fractionalDigits</entry><entry class="- topic/entry ">0.12</entry><entry class="- topic/entry ">0</entry></row><row class="- topic/row "><entry class="- topic/entry ">true</entry><entry class="- topic/entry ">true</entry><entry class="- topic/entry ">3</entry><entry class="- topic/entry ">0.120</entry><entry class="- topic/entry ">0.000</entry></row><row class="- topic/row "><entry class="- topic/entry ">false</entry><entry class="- topic/entry ">true</entry><entry class="- topic/entry ">3</entry><entry class="- topic/entry ">0.12</entry><entry class="- topic/entry ">0</entry></row><row class="- topic/row "><entry class="- topic/entry ">true</entry><entry class="- topic/entry ">false</entry><entry class="- topic/entry ">3</entry><entry class="- topic/entry ">.120</entry><entry class="- topic/entry ">.000</entry></row><row class="- topic/row "><entry class="- topic/entry ">false</entry><entry class="- topic/entry ">false</entry><entry class="- topic/entry ">3</entry><entry class="- topic/entry ">.12</entry><entry class="- topic/entry ">0</entry></row></tbody></tgroup></adobetable>
		 
		 <p class="- topic/p ">为此属性分配了值并且未引发错误或警告时，将 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性设置为：</p>
		 <ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">LastOperationStatus.NO_ERROR</codeph></li></ul>
		 <p class="- topic/p ">否则，将 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性设置为 <codeph class="+ topic/ph pr-d/codeph ">LastOperationStatus</codeph> 类中定义的一个常量。</p>
		 
		 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.globalization.xml#NumberFormatter/leadingZero" class="- topic/link "><linktext class="- topic/linktext ">leadingZero</linktext></link><link href="flash.globalization.xml#NumberFormatter/lastOperationStatus" class="- topic/link "><linktext class="- topic/linktext ">lastOperationStatus</linktext></link><link href="flash.globalization.xml#LastOperationStatus" class="- topic/link "><linktext class="- topic/linktext ">LastOperationStatus</linktext></link></related-links></apiValue><apiValue id="flash.globalization:NumberFormatter:useGrouping:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">useGrouping</apiName><shortdesc class="- topic/shortdesc ">
		 当设置数字格式时，启用分组分隔符。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 当设置数字格式时，启用分组分隔符。
		 
		 <p class="- topic/p ">当 <codeph class="+ topic/ph pr-d/codeph ">useGrouping</codeph> 属性设置为 <codeph class="+ topic/ph pr-d/codeph ">true</codeph> 时，数字进行分组并且使用分组分隔符字符进行分隔。例如：<codeph class="+ topic/ph pr-d/codeph ">123,456,789.22</codeph></p>
		 
		 <p class="- topic/p ">当 <codeph class="+ topic/ph pr-d/codeph ">useGrouping</codeph> 属性设置为 <codeph class="+ topic/ph pr-d/codeph ">false</codeph> 时，数字不进行分组或分隔。例如：<codeph class="+ topic/ph pr-d/codeph ">123456789.22</codeph></p>
		 
		 <p class="- topic/p ">用作组分隔符的符号由 <codeph class="+ topic/ph pr-d/codeph ">groupingSeparator</codeph> 属性定义。分组分隔符之间的数字位数由 <codeph class="+ topic/ph pr-d/codeph ">groupingPattern</codeph> 属性定义。</p>
		 
		 <p class="- topic/p ">为此属性分配了值并且未引发错误或警告时，将 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性设置为：</p>
		 <ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">LastOperationStatus.NO_ERROR</codeph></li></ul>
		 <p class="- topic/p ">否则，将 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性设置为 <codeph class="+ topic/ph pr-d/codeph ">LastOperationStatus</codeph> 类中定义的一个常量。</p>
		 
		 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.globalization.xml#NumberFormatter/groupingPattern" class="- topic/link "><linktext class="- topic/linktext ">groupingPattern</linktext></link><link href="flash.globalization.xml#NumberFormatter/groupingSeparator" class="- topic/link "><linktext class="- topic/linktext ">groupingSeparator</linktext></link><link href="flash.globalization.xml#NumberFormatter/lastOperationStatus" class="- topic/link "><linktext class="- topic/linktext ">lastOperationStatus</linktext></link><link href="flash.globalization.xml#LastOperationStatus" class="- topic/link "><linktext class="- topic/linktext ">LastOperationStatus</linktext></link></related-links></apiValue></apiClassifier><apiClassifier languages="" id="flash.globalization:DateTimeNameContext" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">DateTimeNameContext</apiName><shortdesc class="- topic/shortdesc ">
	DateTimeNameContext 类枚举表示格式上下文（其中使用月份名称或工作日名称）的常量值。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	DateTimeNameContext 类枚举表示格式上下文（其中使用月份名称或工作日名称）的常量值。这些常量用于 DateTimeFormatter 的 <codeph class="+ topic/ph pr-d/codeph ">getMonthNames()</codeph> 和 <codeph class="+ topic/ph pr-d/codeph ">getWeekDayNames()</codeph> 方法的 <codeph class="+ topic/ph pr-d/codeph ">context</codeph> 参数。 
	
	<p class="- topic/p ">该上下文参数只更改这些方法针对特定区域设置和操作系统的结果。对于大多数区域设置，月份名称和工作日名称的列表不会因上下文而不同。</p>
	
	</apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.globalization.xml#DateTimeFormatter/getMonthNames()" class="- topic/link "><linktext class="- topic/linktext ">DateTimeFormatter.getMonthNames()</linktext></link><link href="flash.globalization.xml#DateTimeFormatter/getWeekDayNames()" class="- topic/link "><linktext class="- topic/linktext ">DateTimeFormatter.getWeekDayNames()</linktext></link></related-links><apiValue id="flash.globalization:DateTimeNameContext:FORMAT" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">FORMAT</apiName><shortdesc class="- topic/shortdesc "> 
		表示在日期格式中使用该日期元素名称。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">format</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
		表示在日期格式中使用该日期元素名称。 
		
        </apiDesc></apiValueDetail></apiValue><apiValue id="flash.globalization:DateTimeNameContext:STANDALONE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">STANDALONE</apiName><shortdesc class="- topic/shortdesc "> 
		表示在“独立”上下文（不同于其他格式）中使用该日期元素名称。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">standalone</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
		表示在“独立”上下文（不同于其他格式）中使用该日期元素名称。例如，此名称可能只用于显示日历中的月份名称或日期选择器中的工作日名称。
		
        </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.globalization:DateTimeNameStyle" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">DateTimeNameStyle</apiName><shortdesc class="- topic/shortdesc ">
	DateTimeNameStyle 类枚举那些控制设置日期格式时使用的月份名称和工作日名称的长度的常量。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	DateTimeNameStyle 类枚举那些控制设置日期格式时使用的月份名称和工作日名称的长度的常量。将这些常量用于 DateTimeFormatter <codeph class="+ topic/ph pr-d/codeph ">getMonthNames()</codeph> 和 <codeph class="+ topic/ph pr-d/codeph ">getWeekDayNames()</codeph> 方法的 <codeph class="+ topic/ph pr-d/codeph ">nameStyle</codeph> 参数。 
	
	<p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">LONG_ABBREVIATION</codeph> 和 <codeph class="+ topic/ph pr-d/codeph ">SHORT_ABBREVIATION</codeph> 可能相同，也可能不同，具体取决于操作系统设置。</p>
	
	</apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.globalization.xml#DateTimeFormatter" class="- topic/link "><linktext class="- topic/linktext ">DateTimeFormatter</linktext></link></related-links><apiValue id="flash.globalization:DateTimeNameStyle:FULL" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">FULL</apiName><shortdesc class="- topic/shortdesc "> 
		指定月份名称和工作日名称的完整形式或全名样式。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">full</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
		指定月份名称和工作日名称的完整形式或全名样式。示例：Tuesday，November。
		
        </apiDesc></apiValueDetail></apiValue><apiValue id="flash.globalization:DateTimeNameStyle:LONG_ABBREVIATION" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">LONG_ABBREVIATION</apiName><shortdesc class="- topic/shortdesc "> 
		指定月份名称和工作日名称的长缩写样式。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">longAbbreviation</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
		指定月份名称和工作日名称的长缩写样式。示例：Tues 表示 Tuesday，Nov 表示 November。
		
        </apiDesc></apiValueDetail></apiValue><apiValue id="flash.globalization:DateTimeNameStyle:SHORT_ABBREVIATION" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">SHORT_ABBREVIATION</apiName><shortdesc class="- topic/shortdesc "> 
		指定月份名称和工作日名称的短缩写样式。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">shortAbbreviation</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
		指定月份名称和工作日名称的短缩写样式。示例：T 表示 Tuesday，N 表示 November。
		
        </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.globalization:CurrencyFormatter" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">CurrencyFormatter</apiName><shortdesc class="- topic/shortdesc ">
	 CurrencyFormatter 类提供货币值的区分区域设置的格式设置和解析。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 CurrencyFormatter 类提供货币值的区分区域设置的格式设置和解析。 
	 
	 <p class="- topic/p ">CurrencyFormatter 类使用操作系统提供的数据和功能，设计用于根据特定区域的约定和币种为币值设置格式。货币符号、负号、小数分隔符、分组分隔符、分组模式小数分隔符及其他元素的位置可以视区域设置而定。</p>
	 
	 <p class="- topic/p ">如果操作系统支持请求的区域设置，则根据约定和请求的区域设置的默认值设置属性和货币类型。如果请求的区域设置不可用，则根据回退或默认系统区域设置来设置属性，可以使用 <codeph class="+ topic/ph pr-d/codeph ">actualLocaleIDName</codeph> 属性检索默认系统区域设置。
	 </p>
	 <p class="- topic/p ">
	 由于要使用用户的设置、要使用操作系统提供的格式设置模式，并在请求的区域设置不受支持时使用回退区域设置，因此，即便使用相同的区域设置 ID，对不同的用户显示的格式设置结果也可能不同。
	 </p>
     
	 </apiDesc><example conref="examples\CurrencyFormatterExample.as" class="- topic/example "> 以下示例显示货币金额的格式设置如何随区域设置和币种的不同而变化。此示例中的结果会因操作系统和用户首选项不同而异。
 <p class="- topic/p ">
 此示例使用下列区域设置： 
 </p>
 <ul class="- topic/ul "><li class="- topic/li ">货币格式设置的默认操作系统区域设置 (<codeph class="+ topic/ph pr-d/codeph ">LocaleID.DEFAULT</codeph>)</li><li class="- topic/li ">日语（日本）</li><li class="- topic/li ">英语（美国）</li><li class="- topic/li ">法语（法国）</li></ul>
 
 <p class="- topic/p ">此示例为该列表中的每个区域设置执行下列操作：</p>
 <ol class="- topic/ol "><li class="- topic/li ">创建 CurrencyFormatter 对象</li><li class="- topic/li ">使用 <codeph class="+ topic/ph pr-d/codeph ">formattingWithCurrencySymbolIsSafe()</codeph> 方法检查区域设置的默认货币是否是欧元（“EUR”），如果是，则使用该货币符号设置字符串格式。如果不是，则使用 ISO 代码设置字符串格式。 
      </li></ol>
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
  
package {
    import flash.display.Sprite;
    import flash.globalization.CurrencyFormatter;
    import flash.globalization.LocaleID;
    
    public class CurrencyFormatterExample1 extends Sprite
    {
        public function CurrencyFormatterExample1():void
        {
            var cf:CurrencyFormatter;
            var amountWithSymbol:String;
            var amountWithISOCode:String
            
            var localeNames:Array = [LocaleID.DEFAULT, "ja-JP", "en-US", "fr-FR"];
            
            for each (var localeName:String in localeNames) 
            {
                cf = new CurrencyFormatter(localeName);
                
                trace('\n' + "LocaleID requested=" + cf.requestedLocaleIDName 
                    + "; actual=" + cf.actualLocaleIDName);
                
                trace("Last Operation Status: " + cf.lastOperationStatus );
                
                trace("Currency ISO Code: " + cf.currencyISOCode);
                
                if (cf.formattingWithCurrencySymbolIsSafe("EUR")) 
                {
                    amountWithSymbol = cf.format(123456789.19, true);
                    trace("Format using Symbol: "+ amountWithSymbol);
                }
                else 
                {
                    amountWithISOCode = cf.format(123456789.19); 
                    trace("Format using ISO Code: " + amountWithISOCode);
                }
            }
        }
    }
}
</codeblock></example><example conref="examples\CurrencyFormatterParseExample.as" class="- topic/example "> 以下示例使用给定区域设置的规则解析货币金额。此示例中的结果可能因操作系统和用户首选项不同而异。
 <p class="- topic/p ">此示例执行下列步骤：</p>
 <ol class="- topic/ol "><li class="- topic/li ">针对英语（美国）区域设置创建 CurrencyFormatter 对象。</li><li class="- topic/li ">使用 <codeph class="+ topic/ph pr-d/codeph ">parse()</codeph> 方法解析输入字符串。</li><li class="- topic/li ">显示生成的 CurrencyParseResult 对象的金额和货币字符串值。</li></ol>
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
 
package {
      import flash.display.Sprite;
      import flash.globalization.CurrencyFormatter;
      import flash.globalization.CurrencyParseResult;
      import flash.globalization.LastOperationStatus;
      import flash.globalization.LocaleID;

      public class CurrencyFormatterParseExample extends Sprite
      {
            public function CurrencyFormatterParseExample()
            {
                var cf:CurrencyFormatter = new CurrencyFormatter( "en_US" );
                
                trace("LocaleID requested=" + cf.requestedLocaleIDName 
                    + "; actual=" + cf.actualLocaleIDName);
                trace("Last Operation Status: " + cf.lastOperationStatus );

                var inputString:String = "Dollar 123,567,89,0.254";
                
                var result:CurrencyParseResult = cf.parse(inputString);
                
                if (cf.lastOperationStatus == LastOperationStatus.NO_ERROR ) {
                    trace("Amount value: " + result.value); 
                    trace("Currency string: " + result.currencyString); 
                }
            }
      }
}
</codeblock></example></apiClassifierDetail><apiConstructor id="flash.globalization:CurrencyFormatter:CurrencyFormatter" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">CurrencyFormatter</apiName><shortdesc class="- topic/shortdesc ">
		 构造新的 CurrencyFormatter 对象以根据给定区域设置的约定设置表示货币金额的数字格式。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">如果 <codeph class="+ topic/ph pr-d/codeph ">requestedLocaleIDName</codeph> 参数为 <codeph class="+ topic/ph pr-d/codeph ">null</codeph>。
		 
         </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">TypeError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">TypeError</apiOperationClassifier></apiException><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">requestedLocaleIDName</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">确定日期或时间格式时使用的首选区域设置 ID 名称。
		 
  		 </apiDesc></apiParam></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 构造新的 CurrencyFormatter 对象以根据给定区域设置的约定设置表示货币金额的数字格式。
		 
		  <p class="- topic/p ">此构造函数确定当前操作系统是否支持请求的区域设置 ID 名称。如果不支持，则使用回退区域设置。如果使用了回退区域设置，则 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性表示回退类型，并且 <codeph class="+ topic/ph pr-d/codeph ">actualLocaleIDName </codeph> 属性包含回退区域设置 ID 的名称。 </p>
		 
		  <p class="- topic/p ">某些属性，如 <codeph class="+ topic/ph pr-d/codeph ">currencySymbol</codeph> 和 <codeph class="+ topic/ph pr-d/codeph ">currencyISOCode</codeph>，会根据区域设置自动设置。</p>
		 
		  <p class="- topic/p "><b class="+ topic/ph hi-d/b ">注意：当使用回退区域设置时，货币属性设置为默认值，所以 <codeph class="+ topic/ph pr-d/codeph ">currencySymbol</codeph> 或 <codeph class="+ topic/ph pr-d/codeph ">currencyISOCode</codeph> 属性可能被设为意外的值。在为货币金额设置格式前，最好先检查 <codeph class="+ topic/ph pr-d/codeph ">currencySymbol</codeph> 和 <codeph class="+ topic/ph pr-d/codeph ">currencyISOCode</codeph> 属性值。</b></p>
		 
		  <p class="- topic/p ">要根据用户的当前操作系统首选项进行格式设置，请将 <codeph class="+ topic/ph pr-d/codeph ">requestedLocaleIDName</codeph> 参数中的值 <codeph class="+ topic/ph pr-d/codeph ">LocaleID.DEFAULT</codeph> 传递给构造函数。
		  </p>
		 
		 <p class="- topic/p ">调用构造函数并成功完成后，将 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性设置为：</p>
		 <ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">LastOperationStatus.NO_ERROR</codeph></li></ul>
		 <p class="- topic/p ">如果请求的区域设置 ID 名称不可用，则将 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性设置为下列属性之一：</p>
		 <ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">LastOperationStatus.USING_FALLBACK_WARNING</codeph></li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">LastOperationStatus.USING_DEFAULT_WARNING</codeph></li></ul>
		 <p class="- topic/p ">否则，将 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性设置为 LastOperationStatus 类中定义的其中一个常量。</p>
		 
		 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">有关以上列出的警告和 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性其他可能值的详细信息，请参阅 <codeph class="+ topic/ph pr-d/codeph ">LastOperationStatus</codeph> 类中的说明。</b></p>
		 
		 </apiDesc></apiConstructorDetail><related-links class="- topic/related-links "><link href="flash.globalization.xml#CurrencyFormatter/lastOperationStatus" class="- topic/link "><linktext class="- topic/linktext ">lastOperationStatus</linktext></link><link href="flash.globalization.xml#CurrencyFormatter/requestedLocaleIDName" class="- topic/link "><linktext class="- topic/linktext ">requestedLocaleIDName</linktext></link><link href="flash.globalization.xml#CurrencyFormatter/actualLocaleIDName" class="- topic/link "><linktext class="- topic/linktext ">actualLocaleIDName</linktext></link><link href="flash.globalization.xml#LastOperationStatus" class="- topic/link "><linktext class="- topic/linktext ">LastOperationStatus</linktext></link><link href="flash.globalization.xml#LocaleID" class="- topic/link "><linktext class="- topic/linktext ">LocaleID</linktext></link></related-links></apiConstructor><apiOperation id="flash.globalization:CurrencyFormatter:format" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">format</apiName><shortdesc class="- topic/shortdesc ">
		 创建字符串，该字符串表示根据此 CurrencyFormatter 对象的当前属性（包括区域设置、货币符号和货币 ISO 代码）设置格式的货币金额。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">一个字符串，其中包含设置了格式的货币值。
		 
		 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">value</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">将设置格式以成为货币字符串的数值。
		 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">withCurrencySymbol</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">设置为 false 时，<codeph class="+ topic/ph pr-d/codeph ">currencyISOCode</codeph> 属性确定在输出字符串中使用哪种货币字符串或符号。设置为 true 时，输出字符串中使用 <codeph class="+ topic/ph pr-d/codeph ">currencySymbol</codeph> 属性的当前值。
		 
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 创建字符串，该字符串表示根据此 CurrencyFormatter 对象的当前属性（包括区域设置、货币符号和货币 ISO 代码）设置格式的货币金额。
		 
	 	 <p class="- topic/p ">默认情况下，此方法使用 <codeph class="+ topic/ph pr-d/codeph ">currencyISOCode</codeph> 属性确定设置格式时使用的货币符号和其他设置。</p>
	 	 
	 	 <p class="- topic/p ">许多国家/地区和区域使用同一货币符号来表示不同币种。例如，美国、澳大利亚、新西兰、加拿大和墨西哥使用同一种美元符号 ($) 来本地货币值。当设置格式的货币与用户的本地货币不同时，最好使用 ISO 代码作为货币字符串。可使用 <codeph class="+ topic/ph pr-d/codeph ">formattingWithCurrencySymbolIsSafe()</codeph> 方法测试要设置格式的货币的 ISO 代码是否与格式程序的 <codeph class="+ topic/ph pr-d/codeph ">currencyISOCode</codeph> 属性匹配。 
		 </p>
		 
		 <p class="- topic/p ">此方法可为极大数量级和极小数量级的数字设置格式。但有效位数不得超过 Number 数据类型提供的精度。 
		 </p>
		  
		 </apiDesc><example class="- topic/example ">在此示例中，请求的区域设置是 fr-CA 法语（加拿大）。此示例假设用户的操作系统支持此区域设置，因此不使用回退区域设置。对于 fr-CA，默认货币是 ISO 代码为 CAD 的加拿大元。因此，使用默认值设置货币格式时，使用 CAD 作为货币符号。当 <codeph class="+ topic/ph pr-d/codeph ">withCurrencySymbol</codeph> 参数设置为 true 时，使用 <codeph class="+ topic/ph pr-d/codeph ">currencySymbol</codeph> 属性为货币金额设置格式。
		 
		 <codeblock rev="3.0" xml:space="preserve" class="+ topic/pre pr-d/codeblock "> 
		 var cf:CurrencyFormatter = new CurrencyFormatter("fr-CA");  
		 
		 trace(cf.actualLocaleIDName);   			// "fr-CA"  
		 trace(cf.currencyISOCode);				// "CAD"
		 trace(cf.currencySymbol);				// "$"
		 
		 trace(cf.format(1254.56));				// "1 254,56 CAD"
		 trace(cf.format(1254.56, true));			// "1 254,56 $"
		 </codeblock>
		 
		 <p class="- topic/p ">第二个示例显示使用默认用户的区域设置为以加拿大元表示的货币金额设置格式的方法。<codeph class="+ topic/ph pr-d/codeph ">formattingWithCurrencySymbolIsSafe()</codeph> 方法用于测试用户的默认货币是否为加拿大元，如果是，则使用此格式方法并将 <codeph class="+ topic/ph pr-d/codeph ">withCurrencySymbol</codeph> 参数设置为 true。否则，使用更具说明性的货币符号将货币设置为加拿大元。此示例显示当默认区域设置是法语（加拿大）或英语（美国）时如何为货币设置格式。 </p>
		 
		 <codeblock rev="3.0" xml:space="preserve" class="+ topic/pre pr-d/codeblock "> 
		 var cf:CurrencyFormatter = new CurrencyFormatter(LocaleID.DEFAULT);  
		 
		 if (cf.formattingWithCurrencySymbolIsSafe("CAD")) {
		   trace(cf.actualLocaleIDName);     // "fr-CA French (Canada)"
		   trace(cf.format(1254.56, false)); // "1 254,56 $"
		 }
		 else {
		   trace(cf.actualLocaleIDName);     // "en-US English (USA)"
		   cf.setCurrency("CAD", "C$")
		   trace(cf.format(1254.56, true));  // "C$ 1,254.56"
		 }
		 </codeblock>
		 
		 </example></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.globalization.xml#CurrencyFormatter/currencySymbol" class="- topic/link "><linktext class="- topic/linktext ">currencySymbol</linktext></link><link href="flash.globalization.xml#CurrencyFormatter/currencyISOCode" class="- topic/link "><linktext class="- topic/linktext ">currencyISOCode</linktext></link><link href="flash.globalization.xml#CurrencyFormatter/formattingWithCurrencySymbolIsSafe()" class="- topic/link "><linktext class="- topic/linktext ">formattingWithCurrencySymbolIsSafe()</linktext></link><link href="flash.globalization.xml#CurrencyFormatter/lastOperationStatus" class="- topic/link "><linktext class="- topic/linktext ">lastOperationStatus</linktext></link><link href="flash.globalization.xml#LastOperationStatus" class="- topic/link "><linktext class="- topic/linktext ">LastOperationStatus</linktext></link></related-links></apiOperation><apiOperation id="flash.globalization:CurrencyFormatter:formattingWithCurrencySymbolIsSafe" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">formattingWithCurrencySymbolIsSafe</apiName><shortdesc class="- topic/shortdesc ">
		 确定是否可使用当前指定的货币符号为货币金额设置格式。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">如果 <codeph class="+ topic/ph pr-d/codeph ">requestedISOCode</codeph> 参数为 null。
		 
		 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">TypeError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">TypeError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">如果 <codeph class="+ topic/ph pr-d/codeph ">currencyISOCode</codeph> 属性与 <codeph class="+ topic/ph pr-d/codeph ">requestedISOCode</codeph> 参数相匹配，为 <codeph class="+ topic/ph pr-d/codeph ">true</codeph>；否则为 <codeph class="+ topic/ph pr-d/codeph ">false</codeph>。
		 
		 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">requestedISOCode</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">三个字母的 ISO 4217 币种代码（例如，美元为 USD，欧元为 EUR）。必须包含从 A 到 Z 的三个大写字母。  
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 确定是否可使用当前指定的货币符号为货币金额设置格式。
		 
		 <p class="- topic/p ">许多区域和国家/地区使用同一货币符号。此方法可用于确保避免使用存在歧义的货币符号，或使用由于使用回退区域设置而导致的与预期不同的货币符号或 ISO 代码。</p>
		 
		 <p class="- topic/p ">此方法的一个常见用例是确定显示本地货币符号（如果将金额的格式设置为用户的默认货币）还是显示更加具体的 ISO 代码字符串（如果将金额的格式设置为与用户的默认货币不同的货币）。</p>
		 
		 <p class="- topic/p ">此方法将 <codeph class="+ topic/ph pr-d/codeph ">requestedISOCode</codeph> 参数与当前 <codeph class="+ topic/ph pr-d/codeph ">currencyISOCode</codeph> 属性做比较，当两个字符串相等时返回 <codeph class="+ topic/ph pr-d/codeph ">true</codeph>，否则返回 <codeph class="+ topic/ph pr-d/codeph ">false</codeph>。当两个字符串相等时，使用 <codeph class="+ topic/ph pr-d/codeph ">format()</codeph> 方法并将 <codeph class="+ topic/ph pr-d/codeph ">withCurrencySymbol</codeph> 参数设置为 <codeph class="+ topic/ph pr-d/codeph ">true</codeph> 会导致设置了格式的货币值字符串具有该区域设置的唯一货币符号。如果该方法返回 false，则使用 <codeph class="+ topic/ph pr-d/codeph ">format()</codeph> 方法并将 <codeph class="+ topic/ph pr-d/codeph ">withCurrencySymbol</codeph> 参数设置为 true 会导致使用存在歧义或不正确的货币符号。
		 </p>
		 
		 <p class="- topic/p ">调用此方法并成功完成后，将 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性设置为：</p>
		 <ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">LastOperationStatus.NO_ERROR</codeph></li></ul>
		 <p class="- topic/p ">否则，将 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性设置为 <codeph class="+ topic/ph pr-d/codeph ">LastOperationStatus</codeph> 类中定义的一个常量。</p>
		 
		 </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.globalization.xml#CurrencyFormatter/currencySymbol" class="- topic/link "><linktext class="- topic/linktext ">currencySymbol</linktext></link><link href="flash.globalization.xml#CurrencyFormatter/currencyISOCode" class="- topic/link "><linktext class="- topic/linktext ">currencyISOCode</linktext></link><link href="flash.globalization.xml#CurrencyFormatter/lastOperationStatus" class="- topic/link "><linktext class="- topic/linktext ">lastOperationStatus</linktext></link><link href="flash.globalization.xml#LastOperationStatus" class="- topic/link "><linktext class="- topic/linktext ">LastOperationStatus</linktext></link></related-links></apiOperation><apiOperation id="flash.globalization:CurrencyFormatter:getAvailableLocaleIDNames" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">getAvailableLocaleIDNames</apiName><shortdesc class="- topic/shortdesc ">
		 列出此类支持的所有区域设置 ID 名称。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">一个字符串矢量，其中包含此类支持的所有区域设置 ID 名称。
		 
         </apiDesc><apiType value="Vector$String" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 列出此类支持的所有区域设置 ID 名称。 
		 
		 <p class="- topic/p ">如果当前操作系统不支持此类，此方法返回 null 值。</p>
		 
		 <p class="- topic/p ">调用此方法并成功完成后，将 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性设置为：</p>
		 <ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">LastOperationStatus.NO_ERROR</codeph></li></ul>
		 <p class="- topic/p ">否则，将 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性设置为 <codeph class="+ topic/ph pr-d/codeph ">LastOperationStatus</codeph> 类中定义的一个常量。</p>
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.globalization:CurrencyFormatter:parse" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">parse</apiName><shortdesc class="- topic/shortdesc ">
		 将字符串解析为货币金额和货币符号。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">如果 <codeph class="+ topic/ph pr-d/codeph ">inputString</codeph> 参数为 null。
		 
		 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">TypeError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">TypeError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">一个包含数值和货币符号或字符串的 CurrencyParseResult 对象。
         
		 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.globalization:CurrencyParseResult</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">inputString</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">要解析的输入字符串。 
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 将字符串解析为货币金额和货币符号。 
		 
		 <p class="- topic/p ">此解析算法使用 <codeph class="+ topic/ph pr-d/codeph ">decimalSeparator</codeph> 属性的值确定数值的整数部分和小数部分。它使用 <codeph class="+ topic/ph pr-d/codeph ">negativeCurrencyFormat</codeph> 和 <codeph class="+ topic/ph pr-d/codeph ">positiveCurrencyFormat</codeph> 属性的值确定与货币金额相关的货币符号或字符串的位置。对于负数金额，<codeph class="+ topic/ph pr-d/codeph ">negativeCurrencyFormat</codeph> 属性的值确定负号的位置以及是否使用圆括号。</p>
		 
		 <p class="- topic/p ">如果输入字符串中的货币符号、负号和数字的顺序与 <codeph class="+ topic/ph pr-d/codeph ">negativeCurrencyFormat</codeph> 和 <codeph class="+ topic/ph pr-d/codeph ">positiveCurrencyFormat</codeph> 属性标识的模式不匹配，则：</p>
		 
		 <ol class="- topic/ol "><li class="- topic/li ">返回的 CurrencyParseResult 对象的 <codeph class="+ topic/ph pr-d/codeph ">value</codeph> 属性设置为 <codeph class="+ topic/ph pr-d/codeph ">NaN</codeph>。</li><li class="- topic/li ">返回的 CurrencyParseResult 对象的 <codeph class="+ topic/ph pr-d/codeph ">currencyString</codeph> 属性设置为 <codeph class="+ topic/ph pr-d/codeph ">null</codeph>。</li><li class="- topic/li ">设置 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性以表示解析失败。</li></ol>
		 
		 <p class="- topic/p ">输入字符串中可以包括空格字符，解析期间将忽略空格字符。</p>
		 
		 <p class="- topic/p ">即使没有货币符号解析也可成功。没有验证与货币符号对应的字符串部分。如果没有货币符号或字符串，返回的 CurrencyParseResult 对象中的 <codeph class="+ topic/ph pr-d/codeph ">currencyString</codeph> 属性设置为空字符串。</p>
		 
		 <p class="- topic/p ">调用此方法并成功完成后，将 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性设置为：</p>
		 <ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">LastOperationStatus.NO_ERROR</codeph></li></ul>
		 <p class="- topic/p ">否则，将 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性设置为 <codeph class="+ topic/ph pr-d/codeph ">LastOperationStatus</codeph> 类中定义的一个常量。</p>
		 
		 </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.globalization.xml#CurrencyFormatter/decimalSeparator" class="- topic/link "><linktext class="- topic/linktext ">decimalSeparator</linktext></link><link href="flash.globalization.xml#CurrencyFormatter/negativeCurrencyFormat" class="- topic/link "><linktext class="- topic/linktext ">negativeCurrencyFormat</linktext></link><link href="flash.globalization.xml#CurrencyFormatter/positiveCurrencyFormat" class="- topic/link "><linktext class="- topic/linktext ">positiveCurrencyFormat</linktext></link><link href="flash.globalization.xml#CurrencyParseResult" class="- topic/link "><linktext class="- topic/linktext ">CurrencyParseResult</linktext></link><link href="flash.globalization.xml#CurrencyFormatter/lastOperationStatus" class="- topic/link "><linktext class="- topic/linktext ">lastOperationStatus</linktext></link><link href="flash.globalization.xml#LastOperationStatus" class="- topic/link "><linktext class="- topic/linktext ">LastOperationStatus</linktext></link></related-links></apiOperation><apiOperation id="flash.globalization:CurrencyFormatter:setCurrency" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">setCurrency</apiName><shortdesc class="- topic/shortdesc "> 
		 设置 CurrencyFormatter 对象的 currencyISOCode 和 currencySymbol 属性。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">如果 <codeph class="+ topic/ph pr-d/codeph ">currencyISOCode</codeph> 或 <codeph class="+ topic/ph pr-d/codeph ">currencySymbol</codeph> 参数为 null。
		 
		 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">TypeError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">TypeError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiDefaultValue>dependent on the actual locale and operating system
		 
		 </apiDefaultValue><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">currencyISOCode</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">三个字母的 ISO 4217 币种代码（例如，美元为 USD，欧元为 EUR）。必须包含从 A 到 Z 的三个大写字母。 
		 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">currencySymbol</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 为货币值设置格式时要使用的货币符号或字符串。这可以是空字符串。
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
		 设置 CurrencyFormatter 对象的 <codeph class="+ topic/ph pr-d/codeph ">currencyISOCode</codeph> 和 <codeph class="+ topic/ph pr-d/codeph ">currencySymbol</codeph> 属性。 
		 
		 <p class="- topic/p ">调用此方法并成功完成后，将 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性设置为：</p>
		 <ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">LastOperationStatus.NO_ERROR</codeph></li></ul>
		 <p class="- topic/p ">否则，<codeph class="+ topic/ph pr-d/codeph ">currencyISOCode</codeph> 和 <codeph class="+ topic/ph pr-d/codeph ">currencySymbol</codeph> 属性不会进行修改，并且 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性设置为 <codeph class="+ topic/ph pr-d/codeph ">LastOperationStatus</codeph> 类中定义的一个常量。</p>
		 
		 </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.globalization.xml#CurrencyFormatter/currencyISOCode" class="- topic/link "><linktext class="- topic/linktext ">currencyISOCode</linktext></link><link href="flash.globalization.xml#CurrencyFormatter/currencySymbol" class="- topic/link "><linktext class="- topic/linktext ">currencySymbol</linktext></link><link href="flash.globalization.xml#CurrencyFormatter/lastOperationStatus" class="- topic/link "><linktext class="- topic/linktext ">lastOperationStatus</linktext></link><link href="flash.globalization.xml#LastOperationStatus" class="- topic/link "><linktext class="- topic/linktext ">LastOperationStatus</linktext></link></related-links></apiOperation><apiValue id="flash.globalization:CurrencyFormatter:actualLocaleIDName:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">actualLocaleIDName</apiName><shortdesc class="- topic/shortdesc ">
		 此 CurrencyFormatter 对象使用的实际区域设置 ID 的名称。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 此 CurrencyFormatter 对象使用的实际区域设置 ID 的名称。
		 
		 <p class="- topic/p ">根据操作系统和传递给 <codeph class="+ topic/ph pr-d/codeph ">CurrencyFormatter()</codeph> 构造函数的 <codeph class="+ topic/ph pr-d/codeph ">requestedLocaleIDName</codeph> 参数的值，该名称有三种可能的值。</p>
		 <ol class="- topic/ol "><li class="- topic/li ">如果请求的区域设置不是 <codeph class="+ topic/ph pr-d/codeph ">LocaleID.DEFAULT</codeph> 且操作系统支持该请求的区域设置，则返回的名称与 <codeph class="+ topic/ph pr-d/codeph ">requestedLocaleIDName</codeph> 属性相同。
		         </li><li class="- topic/li ">如果将 <codeph class="+ topic/ph pr-d/codeph ">LocaleID.DEFAULT</codeph> 用作构造函数的 <codeph class="+ topic/ph pr-d/codeph ">requestedLocaleIDName</codeph> 参数的值，则使用由用户操作系统指定的当前区域设置的名称。<codeph class="+ topic/ph pr-d/codeph ">LocaleID.DEFAULT</codeph> 值保留用户在操作系统中的自定义设置。显式值作为 <codeph class="+ topic/ph pr-d/codeph ">requestedLocaleIDName</codeph> 参数传递与使用 <codeph class="+ topic/ph pr-d/codeph ">LocaleID.DEFAULT</codeph> 所产生的结果不一定相同，即使两个区域设置 ID 名称相同，也是如此。用户可能已在他们的计算机上对区域设置进行了自定义，通过请求显式区域设置 ID 名称（而不是使用 <codeph class="+ topic/ph pr-d/codeph ">LocaleID.DEFAULT</codeph>），您的应用程序将不会检索这些自定义设置。 
		 	   <blockquote>
		         <p class="- topic/p ">例如：</p>
		 
         <codeblock rev="3.0" xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
         var fmt:CurrencyFormatter = new CurrencyFormatter(LocaleID.DEFAULT);
		 var aliName:String = fmt.actualLocaleIDName;
		 </codeblock>
		 
		         <p class="- topic/p ">在上面的示例中，<codeph class="+ topic/ph pr-d/codeph ">aliName</codeph> 是与用户当前的操作系统设置对应的区域设置的名称（例如，如果用户的区域设置设为“意大利语-意大利”，则其名称为“it-IT”），而不是 <codeph class="+ topic/ph pr-d/codeph ">"i-default"</codeph>（<codeph class="+ topic/ph pr-d/codeph ">LocaleID.DEFAULT</codeph> 区域设置的名称）。</p>
		         </blockquote></li><li class="- topic/li ">如果系统不支持在构造函数中指定的 <codeph class="+ topic/ph pr-d/codeph ">requestedLocaleIDName</codeph>，则会提供回退区域设置 ID 名称。
		         <blockquote>
		         <p class="- topic/p ">例如：</p>
		 
		 <codeblock rev="3.0" xml:space="preserve" class="+ topic/pre pr-d/codeblock "> 	 
         var fmt:CurrencyFormatter = new CurrencyFormatter("fr-CA"); 	 
         var aliName:String = fmt.actualLocaleIDName;
          </codeblock>
         
		         <p class="- topic/p ">假设以上示例中的操作系统不支持“fr-CA”（法语-加拿大）区域设置 ID，则使用回退。在这种情况下，回退区域设置 ID 是“fr-FR”（法语-法国）。</p>
		         </blockquote></li></ol>
		 
		 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.globalization.xml#LocaleID" class="- topic/link "><linktext class="- topic/linktext ">LocaleID</linktext></link><link href="flash.globalization.xml#CurrencyFormatter/requestedLocaleIDName" class="- topic/link "><linktext class="- topic/linktext ">requestedLocaleIDName</linktext></link><link href="flash.globalization.xml#CurrencyFormatter/CurrencyFormatter()" class="- topic/link "><linktext class="- topic/linktext ">CurrencyFormatter()</linktext></link></related-links></apiValue><apiValue id="flash.globalization:CurrencyFormatter:currencyISOCode:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">currencyISOCode</apiName><shortdesc class="- topic/shortdesc ">
		 正在使用的实际区域设置的三个字母的 ISO 4217 币种代码。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiDefaultValue>dependent on the actual locale and operating system
		 
		 </apiDefaultValue></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 正在使用的实际区域设置的三个字母的 ISO 4217 币种代码。  
		 
		 <p class="- topic/p ">当使用 <codeph class="+ topic/ph pr-d/codeph ">withCurrencySymbol</codeph> 参数设置为 <codeph class="+ topic/ph pr-d/codeph ">false</codeph> 的 <codeph class="+ topic/ph pr-d/codeph ">format()</codeph> 方法设置货币金额格式时，此代码用于确定货币符号或字符串。</p>
		 
		 <p class="- topic/p ">此属性由构造函数基于所使用的实际区域设置进行初始化。当使用回退区域设置时，此属性反映回退区域设置的首选币种代码、默认币种代码。</p>
		 
		 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.globalization.xml#CurrencyFormatter/format()" class="- topic/link "><linktext class="- topic/linktext ">format()</linktext></link><link href="flash.globalization.xml#CurrencyFormatter/setCurrency()" class="- topic/link "><linktext class="- topic/linktext ">setCurrency()</linktext></link><link href="flash.globalization.xml#CurrencyFormatter/currencySymbol" class="- topic/link "><linktext class="- topic/linktext ">currencySymbol</linktext></link></related-links></apiValue><apiValue id="flash.globalization:CurrencyFormatter:currencySymbol:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">currencySymbol</apiName><shortdesc class="- topic/shortdesc ">
		 正在使用的实际区域设置的货币符号或字符串。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiDefaultValue>dependent on the actual locale and operating system
		 
		 </apiDefaultValue></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 正在使用的实际区域设置的货币符号或字符串。
		 
		  <p class="- topic/p ">使用 <codeph class="+ topic/ph pr-d/codeph ">withCurrencySymbol</codeph> 参数设置为 <codeph class="+ topic/ph pr-d/codeph ">true</codeph> 的 <codeph class="+ topic/ph pr-d/codeph ">format()</codeph> 方法设置货币金额格式时，此属性用作货币符号。</p>
		 
		 <p class="- topic/p ">此属性由构造函数基于所使用的实际区域设置进行初始化。当使用回退区域设置时，此属性反映回退区域设置的首选货币符号、默认货币符号。</p>
		 
		 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.globalization.xml#CurrencyFormatter/format()" class="- topic/link "><linktext class="- topic/linktext ">format()</linktext></link><link href="flash.globalization.xml#CurrencyFormatter/setCurrency()" class="- topic/link "><linktext class="- topic/linktext ">setCurrency()</linktext></link><link href="flash.globalization.xml#CurrencyFormatter/formattingWithCurrencySymbolIsSafe()" class="- topic/link "><linktext class="- topic/linktext ">formattingWithCurrencySymbolIsSafe()</linktext></link><link href="flash.globalization.xml#CurrencyFormatter/currencyISOCode" class="- topic/link "><linktext class="- topic/linktext ">currencyISOCode</linktext></link></related-links></apiValue><apiValue id="flash.globalization:CurrencyFormatter:decimalSeparator:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">decimalSeparator</apiName><shortdesc class="- topic/shortdesc ">
		 为包含小数部分的货币金额设置格式或对其进行解析时使用的小数分隔符字符。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">如果为此属性分配 null 值。
		 
		 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">TypeError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">TypeError</apiOperationClassifier></apiException><apiDefaultValue>dependent on the actual locale and operating system
		 
		 </apiDefaultValue></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 为包含小数部分的货币金额设置格式或对其进行解析时使用的小数分隔符字符。
		 
		 <p class="- topic/p ">基于在构造格式程序对象时选择的区域设置对此属性进行最初设置。</p>
		 
		 <p class="- topic/p ">为此属性分配了值并且未引发错误或警告时，将 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性设置为：</p>
		 <ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">LastOperationStatus.NO_ERROR</codeph></li></ul>
		 <p class="- topic/p ">否则，将 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性设置为 <codeph class="+ topic/ph pr-d/codeph ">LastOperationStatus</codeph> 类中定义的一个常量。</p>
		 
		 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.globalization.xml#CurrencyFormatter/format()" class="- topic/link "><linktext class="- topic/linktext ">format()</linktext></link><link href="flash.globalization.xml#CurrencyFormatter/lastOperationStatus" class="- topic/link "><linktext class="- topic/linktext ">lastOperationStatus</linktext></link><link href="flash.globalization.xml#LastOperationStatus" class="- topic/link "><linktext class="- topic/linktext ">LastOperationStatus</linktext></link></related-links></apiValue><apiValue id="flash.globalization:CurrencyFormatter:digitsType:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">digitsType</apiName><shortdesc class="- topic/shortdesc ">
		 定义为货币金额设置格式时使用的数字字符集。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">uint</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">如果为此属性分配 null 值。
		 
		 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">TypeError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">TypeError</apiOperationClassifier></apiException><apiDefaultValue>dependent on the actual locale and operating system
		 
		 </apiDefaultValue></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 定义为货币金额设置格式时使用的数字字符集。 
		 
         <p class="- topic/p ">不同语言和区域使用不同的字符集表示数字 0 到 9。此属性定义要使用的数字集。</p>
		 
		 <p class="- topic/p ">此属性值表示十进制数字集中数字 0 的 Unicode 值。在 NationalDigitsType 类中定义此属性的有效值。</p>
		 
		 <p class="- topic/p ">为此属性分配了值并且未引发错误或警告时，将 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性设置为：</p>
		 <ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">LastOperationStatus.NO_ERROR</codeph></li></ul>
		 <p class="- topic/p ">否则，将 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性设置为 <codeph class="+ topic/ph pr-d/codeph ">LastOperationStatus</codeph> 类中定义的一个常量。</p>
		 
		 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.globalization.xml#CurrencyFormatter/lastOperationStatus" class="- topic/link "><linktext class="- topic/linktext ">lastOperationStatus</linktext></link><link href="flash.globalization.xml#LastOperationStatus" class="- topic/link "><linktext class="- topic/linktext ">LastOperationStatus</linktext></link><link href="flash.globalization.xml#NationalDigitsType" class="- topic/link "><linktext class="- topic/linktext ">NationalDigitsType</linktext></link></related-links></apiValue><apiValue id="flash.globalization:CurrencyFormatter:fractionalDigits:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">fractionalDigits</apiName><shortdesc class="- topic/shortdesc ">
		 小数分隔符后可以显示的最大位数。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">int</apiValueClassifier><apiDefaultValue>0
		 
		 </apiDefaultValue></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 小数分隔符后可以显示的最大位数。
		 
		 <p class="- topic/p ">数字舍入为由此属性指定的数字位数。<b class="+ topic/ph hi-d/b ">舍入方案根据用户的操作系统不同而有所不同。</b></p>
		 
		  <p class="- topic/p ">当 <codeph class="+ topic/ph pr-d/codeph ">trailingZeros</codeph> 属性设置为 <codeph class="+ topic/ph pr-d/codeph ">true</codeph> 时，用尾随零来填充数字的小数部分（小数点之后），直到数字长度与此 <codeph class="+ topic/ph pr-d/codeph ">fractionalDigits</codeph> 属性的值相匹配。</p>
		 
		 <p class="- topic/p ">为此属性分配了值并且未引发错误或警告时，将 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性设置为：</p>
		 <ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">LastOperationStatus.NO_ERROR</codeph></li></ul>
		 <p class="- topic/p ">否则，将 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性设置为 <codeph class="+ topic/ph pr-d/codeph ">LastOperationStatus</codeph> 类中定义的一个常量。</p>
		 
		 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.globalization.xml#CurrencyFormatter/trailingZeros" class="- topic/link "><linktext class="- topic/linktext ">trailingZeros</linktext></link><link href="flash.globalization.xml#CurrencyFormatter/lastOperationStatus" class="- topic/link "><linktext class="- topic/linktext ">lastOperationStatus</linktext></link><link href="flash.globalization.xml#LastOperationStatus" class="- topic/link "><linktext class="- topic/linktext ">LastOperationStatus</linktext></link></related-links></apiValue><apiValue id="flash.globalization:CurrencyFormatter:groupingPattern:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">groupingPattern</apiName><shortdesc class="- topic/shortdesc ">
		 描述分组分隔符在设置了格式的货币金额字符串中的位置。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">如果为此属性分配 null 值。
		 
		 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">TypeError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">TypeError</apiOperationClassifier></apiException></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 描述分组分隔符在设置了格式的货币金额字符串中的位置。
		 
		  <p class="- topic/p ">将 <codeph class="+ topic/ph pr-d/codeph ">useGrouping</codeph> 属性设置为 true 时，<codeph class="+ topic/ph pr-d/codeph ">groupingPattern</codeph> 属性用于定义分组分隔符所用的位置和模式。</p>
		 
		  <p class="- topic/p ">分组模式定义为包含由分号分隔并可能以星号结尾的数字的字符串。例如：“<codeph class="+ topic/ph pr-d/codeph ">3;2;*</codeph>”。字符串中的每个数字表示组中数字位数。分组分隔符置于每个数字组之前。字符串结尾的星号表示应在设置了格式的字符串的其余部分重复包含这一数字位数的组。如果没有星号，则在设置了格式的字符串的其余部分不会有其他组或分隔符。 </p>
		 
		  <p class="- topic/p ">字符串中的第一个数字对应于小数分隔符左边的第一组数字。随后的数字定义左边随后组中的数字位数。因此字符串“3;2;*”表示分组分隔符置于第一组 3 位数之后，后面跟 2 位数的组。例如：<codeph class="+ topic/ph pr-d/codeph ">98,76,54,321</codeph></p>
		 
		  <p class="- topic/p ">下表显示了使用多种分组模式为货币金额 123456789.12 设置格式的示例。分组分隔符为逗号、小数分隔符为句点，美元符号 ($) 是货币符号。 
		 </p>
		     <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry ">分组模式</entry><entry class="- topic/entry ">示例格式</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">3;*</codeph></entry><entry class="- topic/entry "> $123,456,789.12</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">3;2;*</codeph></entry><entry class="- topic/entry ">$12,34,56,789.12</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">3</codeph></entry><entry class="- topic/entry ">$123456,789.12</entry></row></tbody></tgroup></adobetable>
		 
		  <p class="- topic/p ">仅可以定义有限的分组数字个数。在某些操作系统上，分组模式只能包含两个数字加一个星号。其他操作系统最多可以支持四个数字加一个星号。对于不含星号的模式，某些操作系统只支持一个数字，而其它操作系统最多支持三个数字。如果超过分组模式元素的最大数，则忽略其他元素，并按如下所述设置 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性。
		  </p>
		 
		 <p class="- topic/p ">为此属性分配了值并且未引发错误或警告时，将 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性设置为：</p>
		 <ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">LastOperationStatus.NO_ERROR</codeph></li></ul>
		 <p class="- topic/p ">否则，将 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性设置为 <codeph class="+ topic/ph pr-d/codeph ">LastOperationStatus</codeph> 类中定义的一个常量。</p>
		 
		 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.globalization.xml#CurrencyFormatter/groupingSeparator" class="- topic/link "><linktext class="- topic/linktext ">groupingSeparator</linktext></link><link href="flash.globalization.xml#CurrencyFormatter/useGrouping" class="- topic/link "><linktext class="- topic/linktext ">useGrouping</linktext></link><link href="flash.globalization.xml#CurrencyFormatter/lastOperationStatus" class="- topic/link "><linktext class="- topic/linktext ">lastOperationStatus</linktext></link><link href="flash.globalization.xml#LastOperationStatus" class="- topic/link "><linktext class="- topic/linktext ">LastOperationStatus</linktext></link></related-links></apiValue><apiValue id="flash.globalization:CurrencyFormatter:groupingSeparator:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">groupingSeparator</apiName><shortdesc class="- topic/shortdesc ">
		 用于分组分隔符的字符或字符串。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">如果为此属性分配 null 值。
		 
		 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">TypeError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">TypeError</apiOperationClassifier></apiException><apiDefaultValue>dependent on the actual locale and operating system
		 
		 </apiDefaultValue></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 用于分组分隔符的字符或字符串。
		 
		 <p class="- topic/p ">当 <codeph class="+ topic/ph pr-d/codeph ">useGrouping</codeph> 属性设置为 <codeph class="+ topic/ph pr-d/codeph ">true</codeph> 时，在设置货币金额格式时此属性的值用作分组分隔符。基于在构造格式程序对象时选择的区域设置对此属性进行最初设置。</p>
		 
		 <p class="- topic/p ">为此属性分配了值并且未引发错误或警告时，将 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性设置为：</p>
		 <ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">LastOperationStatus.NO_ERROR</codeph></li></ul>
		 <p class="- topic/p ">否则，将 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性设置为 <codeph class="+ topic/ph pr-d/codeph ">LastOperationStatus</codeph> 类中定义的一个常量。</p>
		 
		 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.globalization.xml#CurrencyFormatter/format()" class="- topic/link "><linktext class="- topic/linktext ">format()</linktext></link><link href="flash.globalization.xml#CurrencyFormatter/useGrouping" class="- topic/link "><linktext class="- topic/linktext ">useGrouping</linktext></link><link href="flash.globalization.xml#CurrencyFormatter/lastOperationStatus" class="- topic/link "><linktext class="- topic/linktext ">lastOperationStatus</linktext></link><link href="flash.globalization.xml#LastOperationStatus" class="- topic/link "><linktext class="- topic/linktext ">LastOperationStatus</linktext></link></related-links></apiValue><apiValue id="flash.globalization:CurrencyFormatter:lastOperationStatus:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">lastOperationStatus</apiName><shortdesc class="- topic/shortdesc ">
		 此 CurrencyFormatter 对象执行的最近操作的状态。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 此 CurrencyFormatter 对象执行的最近操作的状态。只要调用构造函数或此类的方法或设置另一个属性，就会设置 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性。有关可能的值，请参阅每种方法的说明。
		 
         </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.globalization.xml#LastOperationStatus" class="- topic/link "><linktext class="- topic/linktext ">LastOperationStatus</linktext></link></related-links></apiValue><apiValue id="flash.globalization:CurrencyFormatter:leadingZero:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">leadingZero</apiName><shortdesc class="- topic/shortdesc ">
		 指定当小数分隔符左侧没有整数位时，设置了格式的货币金额中是否包括前导零。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">如果为此属性分配 null 值。
		 
		 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">TypeError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">TypeError</apiOperationClassifier></apiException><apiDefaultValue>dependent on the actual locale and operating system
		 
		 </apiDefaultValue></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 指定当小数分隔符左侧没有整数位时，设置了格式的货币金额中是否包括前导零。
		 
		  <p class="- topic/p ">当此属性设置为 <codeph class="+ topic/ph pr-d/codeph ">true</codeph> 时，在设置 -1.0 到 1.0 之间的数值的格式时，小数分隔符左侧包括前导零。当此属性设置为 <codeph class="+ topic/ph pr-d/codeph ">false</codeph> 时，不包括前导零。</p>
		 
		 <p class="- topic/p ">例如，如果货币金额是 0.321，并且此属性设置为 <codeph class="+ topic/ph pr-d/codeph ">true</codeph>，则设置了格式的字符串中包括前导零。如果将此属性设置为 <codeph class="+ topic/ph pr-d/codeph ">false</codeph>，则不包括前导零。在这种情况下，字符串中将仅包括小数分隔符及后跟的十进制数字，形如 <codeph class="+ topic/ph pr-d/codeph ">$.321</codeph>。 </p>
		 
		  <p class="- topic/p ">下表提供了几个示例，显示如何基于此属性以及相关的 <codeph class="+ topic/ph pr-d/codeph ">fractionalDigits</codeph> 和 <codeph class="+ topic/ph pr-d/codeph ">trailingZeros</codeph> 属性的值来设置货币金额的格式。
		  </p>
		 <adobetable class="innertable"><tgroup cols="5" class="- topic/tgroup "><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry ">trailingZeros</entry><entry class="- topic/entry "><b class="+ topic/ph hi-d/b ">leadingZero</b></entry><entry class="- topic/entry ">fractionalDigits</entry><entry class="- topic/entry ">0.12</entry><entry class="- topic/entry ">0</entry></row><row class="- topic/row "><entry class="- topic/entry ">true</entry><entry class="- topic/entry ">true</entry><entry class="- topic/entry ">3</entry><entry class="- topic/entry ">$0.120</entry><entry class="- topic/entry ">$0.000</entry></row><row class="- topic/row "><entry class="- topic/entry ">false</entry><entry class="- topic/entry ">true</entry><entry class="- topic/entry ">3</entry><entry class="- topic/entry ">$0.12</entry><entry class="- topic/entry ">$0</entry></row><row class="- topic/row "><entry class="- topic/entry ">true</entry><entry class="- topic/entry ">false</entry><entry class="- topic/entry ">3</entry><entry class="- topic/entry ">$.120</entry><entry class="- topic/entry ">$.000</entry></row><row class="- topic/row "><entry class="- topic/entry ">false</entry><entry class="- topic/entry ">false</entry><entry class="- topic/entry ">3</entry><entry class="- topic/entry ">$.12</entry><entry class="- topic/entry ">$0</entry></row></tbody></tgroup></adobetable>
		 
		 <p class="- topic/p ">为此属性分配了值并且未引发错误或警告时，将 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性设置为：</p>
		 <ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">LastOperationStatus.NO_ERROR</codeph></li></ul>
		 <p class="- topic/p ">否则，将 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性设置为 <codeph class="+ topic/ph pr-d/codeph ">LastOperationStatus</codeph> 类中定义的一个常量。</p>
		 
		 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.globalization.xml#CurrencyFormatter/format()" class="- topic/link "><linktext class="- topic/linktext ">format()</linktext></link><link href="flash.globalization.xml#CurrencyFormatter/lastOperationStatus" class="- topic/link "><linktext class="- topic/linktext ">lastOperationStatus</linktext></link><link href="flash.globalization.xml#LastOperationStatus" class="- topic/link "><linktext class="- topic/linktext ">LastOperationStatus</linktext></link><link href="flash.globalization.xml#CurrencyFormatter/trailingZeros" class="- topic/link "><linktext class="- topic/linktext ">trailingZeros</linktext></link></related-links></apiValue><apiValue id="flash.globalization:CurrencyFormatter:negativeCurrencyFormat:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">negativeCurrencyFormat</apiName><shortdesc class="- topic/shortdesc ">
		 表示负值货币金额的格式设置模式的数值。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">uint</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">如果指定的值不介于 0 到 15 之间。
		 
		 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiDefaultValue>dependent on the actual locale and operating system
		 
		 </apiDefaultValue></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 表示负值货币金额的格式设置模式的数值。此模式定义货币符号和负号或圆括号相对于货币金额的数字部分的位置。
		 
		 <p class="- topic/p ">此属性的值必须是在下表中定义的常量之一。
		  </p>
		 
		 <p class="- topic/p "> 下表总结了负值货币金额的可能的格式设置模式。在使用 <codeph class="+ topic/ph pr-d/codeph ">format()</codeph> 方法为货币金额设置格式时：</p>
		 
		 <ul class="- topic/ul "><li class="- topic/li ">“¤”符号由 <codeph class="+ topic/ph pr-d/codeph ">currencyISOCode</codeph> 或 <codeph class="+ topic/ph pr-d/codeph ">currencySymbol</codeph> 属性的值替换，视传递到 <codeph class="+ topic/ph pr-d/codeph ">format()</codeph> 方法的 <codeph class="+ topic/ph pr-d/codeph ">withCurrencySymbol</codeph> 参数值而定；</li><li class="- topic/li ">“-”字符由 <codeph class="+ topic/ph pr-d/codeph ">negativeNumberSymbol</codeph> 属性的值替换；</li><li class="- topic/li ">“n”字符由传递到 <codeph class="+ topic/ph pr-d/codeph ">format()</codeph> 方法的货币金额值替换。</li></ul>
		 
		 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry ">负值货币格式类型</entry><entry class="- topic/entry ">格式化图案</entry></row><row class="- topic/row "><entry class="- topic/entry ">0</entry><entry class="- topic/entry ">(¤n)</entry></row><row class="- topic/row "><entry class="- topic/entry ">1</entry><entry class="- topic/entry ">-¤n</entry></row><row class="- topic/row "><entry class="- topic/entry ">2</entry><entry class="- topic/entry ">¤-n</entry></row><row class="- topic/row "><entry class="- topic/entry ">3</entry><entry class="- topic/entry ">¤n-</entry></row><row class="- topic/row "><entry class="- topic/entry ">4</entry><entry class="- topic/entry ">(n¤)</entry></row><row class="- topic/row "><entry class="- topic/entry ">5</entry><entry class="- topic/entry ">-n¤</entry></row><row class="- topic/row "><entry class="- topic/entry ">6</entry><entry class="- topic/entry ">n-¤</entry></row><row class="- topic/row "><entry class="- topic/entry ">7</entry><entry class="- topic/entry ">n¤-</entry></row><row class="- topic/row "><entry class="- topic/entry ">8</entry><entry class="- topic/entry ">-n ¤</entry></row><row class="- topic/row "><entry class="- topic/entry ">9</entry><entry class="- topic/entry ">-¤ n</entry></row><row class="- topic/row "><entry class="- topic/entry ">10</entry><entry class="- topic/entry ">n ¤-</entry></row><row class="- topic/row "><entry class="- topic/entry ">11</entry><entry class="- topic/entry ">¤ n-</entry></row><row class="- topic/row "><entry class="- topic/entry ">12</entry><entry class="- topic/entry ">¤ -n</entry></row><row class="- topic/row "><entry class="- topic/entry ">13</entry><entry class="- topic/entry ">n- ¤</entry></row><row class="- topic/row "><entry class="- topic/entry ">14</entry><entry class="- topic/entry ">(¤ n)</entry></row><row class="- topic/row "><entry class="- topic/entry ">15</entry><entry class="- topic/entry ">(n ¤)</entry></row></tbody></tgroup></adobetable>
		 
		 <p class="- topic/p ">为此属性分配了值并且未引发错误或警告时，将 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性设置为：</p>
		 <ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">LastOperationStatus.NO_ERROR</codeph></li></ul>
		 <p class="- topic/p ">否则，将 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性设置为 <codeph class="+ topic/ph pr-d/codeph ">LastOperationStatus</codeph> 类中定义的一个常量。</p>
		 
		 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.globalization.xml#CurrencyFormatter/format()" class="- topic/link "><linktext class="- topic/linktext ">format()</linktext></link><link href="flash.globalization.xml#CurrencyFormatter/currencySymbol" class="- topic/link "><linktext class="- topic/linktext ">currencySymbol</linktext></link><link href="flash.globalization.xml#CurrencyFormatter/negativeSymbol" class="- topic/link "><linktext class="- topic/linktext ">negativeSymbol</linktext></link><link href="flash.globalization.xml#CurrencyFormatter/lastOperationStatus" class="- topic/link "><linktext class="- topic/linktext ">lastOperationStatus</linktext></link><link href="flash.globalization.xml#LastOperationStatus" class="- topic/link "><linktext class="- topic/linktext ">LastOperationStatus</linktext></link></related-links></apiValue><apiValue id="flash.globalization:CurrencyFormatter:negativeSymbol:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">negativeSymbol</apiName><shortdesc class="- topic/shortdesc ">
		 设置负值货币金额的格式时使用的负号。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">如果为此属性分配 null 值。
		 
		 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">TypeError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">TypeError</apiOperationClassifier></apiException><apiDefaultValue>dependent on the actual locale and operating system
		 
		 </apiDefaultValue></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 设置负值货币金额的格式时使用的负号。
		 
		 <p class="- topic/p ">为小于零的货币金额设置格式时，将此符号与负值货币格式一同使用。在不包括负号的负值货币格式中不使用它（例如，使用圆括号括起的负值货币金额）。 </p>
		 
		 <p class="- topic/p ">为此属性分配了值并且未引发错误或警告时，将 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性设置为：</p>
		 <ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">LastOperationStatus.NO_ERROR</codeph></li></ul>
		 <p class="- topic/p ">否则，将 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性设置为 <codeph class="+ topic/ph pr-d/codeph ">LastOperationStatus</codeph> 类中定义的一个常量。</p>
		 
		 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.globalization.xml#CurrencyFormatter/format()" class="- topic/link "><linktext class="- topic/linktext ">format()</linktext></link><link href="flash.globalization.xml#CurrencyFormatter/negativeCurrencyFormat" class="- topic/link "><linktext class="- topic/linktext ">negativeCurrencyFormat</linktext></link><link href="flash.globalization.xml#CurrencyFormatter/lastOperationStatus" class="- topic/link "><linktext class="- topic/linktext ">lastOperationStatus</linktext></link><link href="flash.globalization.xml#LastOperationStatus" class="- topic/link "><linktext class="- topic/linktext ">LastOperationStatus</linktext></link></related-links></apiValue><apiValue id="flash.globalization:CurrencyFormatter:positiveCurrencyFormat:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">positiveCurrencyFormat</apiName><shortdesc class="- topic/shortdesc ">
		 表示正值货币金额的格式设置模式的数值。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">uint</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">如果指定的值不介于 0 到 3 之间。
		 
		 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiDefaultValue>dependent on the actual locale and operating system
		 
		 </apiDefaultValue></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 表示正值货币金额的格式设置模式的数值。此格式定义货币符号相对于货币金额数值部分的位置。
         
		 <p class="- topic/p ">此属性的值必须是在下表中定义的常量之一。
		  </p>
		 
		 <p class="- topic/p "> 下表总结了正值货币金额的可能的格式设置模式。在使用 <codeph class="+ topic/ph pr-d/codeph ">format()</codeph> 方法为货币金额设置格式时：</p>
		 
		 <ul class="- topic/ul "><li class="- topic/li ">“¤”符号由 <codeph class="+ topic/ph pr-d/codeph ">currencyISOCode</codeph> 或 <codeph class="+ topic/ph pr-d/codeph ">currencySymbol</codeph> 属性的值替换，视传递到 <codeph class="+ topic/ph pr-d/codeph ">format()</codeph> 方法的 <codeph class="+ topic/ph pr-d/codeph ">withCurrencySymbol</codeph> 参数值而定；</li><li class="- topic/li ">“n”字符由传递到 <codeph class="+ topic/ph pr-d/codeph ">format()</codeph> 方法的货币金额值替换。</li></ul>		 
		 
		 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry ">正值货币格式类型</entry><entry class="- topic/entry ">格式化图案</entry></row><row class="- topic/row "><entry class="- topic/entry ">0</entry><entry class="- topic/entry ">¤n</entry></row><row class="- topic/row "><entry class="- topic/entry ">1</entry><entry class="- topic/entry ">n¤</entry></row><row class="- topic/row "><entry class="- topic/entry ">2</entry><entry class="- topic/entry ">¤ n</entry></row><row class="- topic/row "><entry class="- topic/entry ">3</entry><entry class="- topic/entry ">n ¤</entry></row></tbody></tgroup></adobetable>
		 
		 <p class="- topic/p ">为此属性分配了值并且未引发错误或警告时，将 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性设置为：</p>
		 <ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">LastOperationStatus.NO_ERROR</codeph></li></ul>
		 <p class="- topic/p ">否则，将 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性设置为 <codeph class="+ topic/ph pr-d/codeph ">LastOperationStatus</codeph> 类中定义的一个常量。</p>
		 
		 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.globalization.xml#CurrencyFormatter/currencySymbol" class="- topic/link "><linktext class="- topic/linktext ">currencySymbol</linktext></link><link href="flash.globalization.xml#CurrencyFormatter/format()" class="- topic/link "><linktext class="- topic/linktext ">format()</linktext></link><link href="flash.globalization.xml#CurrencyFormatter/lastOperationStatus" class="- topic/link "><linktext class="- topic/linktext ">lastOperationStatus</linktext></link><link href="flash.globalization.xml#LastOperationStatus" class="- topic/link "><linktext class="- topic/linktext ">LastOperationStatus</linktext></link></related-links></apiValue><apiValue id="flash.globalization:CurrencyFormatter:requestedLocaleIDName:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">requestedLocaleIDName</apiName><shortdesc class="- topic/shortdesc ">
		 传递到此 CurrencyFormatter 对象的构造函数的请求的区域设置 ID 名称。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 传递到此 CurrencyFormatter 对象的构造函数的请求的区域设置 ID 名称。
		 
		 <p class="- topic/p ">如果使用了 <codeph class="+ topic/ph pr-d/codeph ">LocaleID.DEFAULT</codeph> 值，则返回的名称将是“i-default”。如果应用了回退区域设置，则实际使用的区域设置可能与请求的区域设置不同。可以使用 <codeph class="+ topic/ph pr-d/codeph ">actualLocaleIDName</codeph> 属性检索实际区域设置的名称。
		 </p>
		 
		 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.globalization.xml#LocaleID" class="- topic/link "><linktext class="- topic/linktext ">LocaleID</linktext></link><link href="flash.globalization.xml#CurrencyFormatter/actualLocaleIDName" class="- topic/link "><linktext class="- topic/linktext ">actualLocaleIDName</linktext></link><link href="flash.globalization.xml#CurrencyFormatter/CurrencyFormatter()" class="- topic/link "><linktext class="- topic/linktext ">CurrencyFormatter()</linktext></link></related-links></apiValue><apiValue id="flash.globalization:CurrencyFormatter:trailingZeros:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">trailingZeros</apiName><shortdesc class="- topic/shortdesc ">
		 指定设置了格式的货币金额中是否包括尾随零。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">如果为此属性分配 null 值。
		 
		 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">TypeError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">TypeError</apiOperationClassifier></apiException><apiDefaultValue>dependent on the actual locale and operating system
		 
		 </apiDefaultValue></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 指定设置了格式的货币金额中是否包括尾随零。 
		 
		  <p class="- topic/p ">当此属性设置为 <codeph class="+ topic/ph pr-d/codeph ">true</codeph> 时，设置了格式的数字的小数部分包括尾随零，并且位数限制为 <codeph class="+ topic/ph pr-d/codeph ">fractionalDigits</codeph> 属性指定的值。当此属性设置为 <codeph class="+ topic/ph pr-d/codeph ">false</codeph> 时，则不显示尾随零。</p>
		 
		 <p class="- topic/p ">例如，如果货币金额是 123.4，并且此属性设置为 true，<codeph class="+ topic/ph pr-d/codeph ">fractionalDigits</codeph> 的属性设置为 3，则此设置了格式的字符串中将显示结尾零，形如 <codeph class="+ topic/ph pr-d/codeph ">$123.400</codeph>。如果此属性为 <codeph class="+ topic/ph pr-d/codeph ">false</codeph>，则不包括尾随零，并且该字符串仅显示小数分隔符以及后面的非零十进制数，形如 <codeph class="+ topic/ph pr-d/codeph ">$123.4</codeph>。</p>
		 
		  <p class="- topic/p ">下表提供了几个示例，显示如何基于此属性以及相关的 <codeph class="+ topic/ph pr-d/codeph ">fractionalDigits</codeph> 和 <codeph class="+ topic/ph pr-d/codeph ">leadingZero</codeph> 属性的值来设置货币金额的格式。
		  </p>
		 <adobetable class="innertable"><tgroup cols="5" class="- topic/tgroup "><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><b class="+ topic/ph hi-d/b ">trailingZeros</b></entry><entry class="- topic/entry ">leadingZero</entry><entry class="- topic/entry ">fractionalDigits</entry><entry class="- topic/entry ">0.12</entry><entry class="- topic/entry ">0</entry></row><row class="- topic/row "><entry class="- topic/entry ">true</entry><entry class="- topic/entry ">true</entry><entry class="- topic/entry ">3</entry><entry class="- topic/entry ">$0.120</entry><entry class="- topic/entry ">$0.000</entry></row><row class="- topic/row "><entry class="- topic/entry ">false</entry><entry class="- topic/entry ">true</entry><entry class="- topic/entry ">3</entry><entry class="- topic/entry ">$0.12</entry><entry class="- topic/entry ">$0</entry></row><row class="- topic/row "><entry class="- topic/entry ">true</entry><entry class="- topic/entry ">false</entry><entry class="- topic/entry ">3</entry><entry class="- topic/entry ">$.120</entry><entry class="- topic/entry ">$.000</entry></row><row class="- topic/row "><entry class="- topic/entry ">false</entry><entry class="- topic/entry ">false</entry><entry class="- topic/entry ">3</entry><entry class="- topic/entry ">$.12</entry><entry class="- topic/entry ">$0</entry></row></tbody></tgroup></adobetable>
		 
		 <p class="- topic/p ">为此属性分配了值并且未引发错误或警告时，将 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性设置为：</p>
		 <ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">LastOperationStatus.NO_ERROR</codeph></li></ul>
		 <p class="- topic/p ">否则，将 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性设置为 <codeph class="+ topic/ph pr-d/codeph ">LastOperationStatus</codeph> 类中定义的一个常量。</p>
		 
		 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.globalization.xml#CurrencyFormatter/leadingZero" class="- topic/link "><linktext class="- topic/linktext ">leadingZero</linktext></link><link href="flash.globalization.xml#CurrencyFormatter/lastOperationStatus" class="- topic/link "><linktext class="- topic/linktext ">lastOperationStatus</linktext></link><link href="flash.globalization.xml#LastOperationStatus" class="- topic/link "><linktext class="- topic/linktext ">LastOperationStatus</linktext></link></related-links></apiValue><apiValue id="flash.globalization:CurrencyFormatter:useGrouping:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">useGrouping</apiName><shortdesc class="- topic/shortdesc ">
		 当设置货币金额格式时，启用分组分隔符。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 当设置货币金额格式时，启用分组分隔符。
		 
		 <p class="- topic/p ">当 <codeph class="+ topic/ph pr-d/codeph ">useGrouping</codeph> 属性设置为 <codeph class="+ topic/ph pr-d/codeph ">true</codeph> 时，数字进行分组并且使用分组分隔符字符进行分隔。例如：<codeph class="+ topic/ph pr-d/codeph ">$123,456,789</codeph></p>
		 
		 <p class="- topic/p ">当 <codeph class="+ topic/ph pr-d/codeph ">useGrouping</codeph> 属性设置为 <codeph class="+ topic/ph pr-d/codeph ">false</codeph> 时，数字不进行分组或分隔。例如：<codeph class="+ topic/ph pr-d/codeph ">$123456789</codeph></p>
		 
		 <p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">groupingSeparator</codeph> 属性定义用作分组分隔符的符号。<codeph class="+ topic/ph pr-d/codeph ">groupingPattern</codeph> 属性定义分组分隔符之间的位数。</p>
		 
		 <p class="- topic/p ">为此属性分配了值并且未引发错误或警告时，将 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性设置为：</p>
		 <ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">LastOperationStatus.NO_ERROR</codeph></li></ul>
		 <p class="- topic/p ">否则，将 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性设置为 <codeph class="+ topic/ph pr-d/codeph ">LastOperationStatus</codeph> 类中定义的一个常量。</p>
		 
		 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.globalization.xml#CurrencyFormatter/groupingPattern" class="- topic/link "><linktext class="- topic/linktext ">groupingPattern</linktext></link><link href="flash.globalization.xml#CurrencyFormatter/groupingSeparator" class="- topic/link "><linktext class="- topic/linktext ">groupingSeparator</linktext></link><link href="flash.globalization.xml#CurrencyFormatter/lastOperationStatus" class="- topic/link "><linktext class="- topic/linktext ">lastOperationStatus</linktext></link><link href="flash.globalization.xml#LastOperationStatus" class="- topic/link "><linktext class="- topic/linktext ">LastOperationStatus</linktext></link></related-links></apiValue></apiClassifier><apiClassifier languages="" id="flash.globalization:Collator" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">Collator</apiName><shortdesc class="- topic/shortdesc ">
	 Collator 类提供区分区域设置的字符串比较功能。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Collator 类提供区分区域设置的字符串比较功能。 
	 
	 <p class="- topic/p ">此类使用操作系统提供的字符串比较服务。这些比较随创建类实例时提供的区域设置标识符的不同而不同。ActionScript 使用 Unicode 字符集存储字符串。布尔型字符串比较运算符（==、!=、&lt;、&lt;=、>、>=）使用 Unicode 代码点进行比较。在多数情况下，生成的排序顺序与特定语言和区域的约定不匹配，因此不应该用于对用户界面中显示的字符串进行排序。而此类中的比较方法提供了符合这些约定的顺序。
	 </p>
	 <p class="- topic/p ">以下是一些示例，其中排序顺序随语言的不同而不同：
	 </p>
	 <ul class="- topic/ul "><li class="- topic/li "> 在英语中，小写 a 在大写 A 之前，而大写 A 在小写 b 之前。</li><li class="- topic/li "> 在瑞典语中，ö 在 z 之后，而在德语中，ö 在 o 之后</li><li class="- topic/li "> 在传统西班牙语中，ch 是一个排在 c 和 d 之间的字符</li><li class="- topic/li "> 法语中的重音符号根据最后一个重音符号而不是第一个重音符号排序：例如，cote &lt; côte &lt; coté &lt; côté 而不是 cote &lt; coté &lt; côte &lt; côté</li></ul>
	 <p class="- topic/p ">
	 甚至在同一语言和区域内，排序顺序也可以根据使用情况有所不同。例如，在德语中，电话簿中的姓名与词典中的词的排序顺序不同。在中文和日语中，表意字排序有多种方式：即按读音或按字形中使用的表意字字根和笔画数。在西班牙语和格鲁吉亚语中，现代排序和传统排序之间存在差异。
	 </p>
	 <p class="- topic/p ">
	 此类中的比较方法提供了两种主要使用模式。<codeph class="+ topic/ph pr-d/codeph ">Collator()</codeph> 构造函数的 <codeph class="+ topic/ph pr-d/codeph ">initialMode</codeph> 参数控制这些模式。默认“排序”模式适用于将显示给最终用户的排序项目。在此模式中，比较更为严格，以确保在其他方面相同的项目以一致的方式排序。例如，大写字母和小写字母不作为相同内容进行比较。在“匹配”模式中，比较相对宽松。例如，在此模式中大写和小写字母会被视为相同。以下是一个演示这两种模式的示例：
	 </p>
	 <codeblock rev="3.0" xml:space="preserve" class="+ topic/pre pr-d/codeblock "> 
	 var sortingCollator:Collator = new Collator("en-US", CollatorMode.SORTING);
	 var words:Array = new  Array("Airplane" , "airplane", "boat", "Boat");
	 words.sort(sortingCollator.compare);
	 trace(words);
	 			
	 var matchingCollator:Collator = new Collator("en-US", CollatorMode.MATCHING);
	 if (matchingCollator.equals("Car", "car")) {
	   trace("The words match!");
	 }
	 </codeblock>
	 <p class="- topic/p ">
	 即使如上所示向构造函数提供区域设置 ID 参数，排序行为也可能因用户的操作系统设置而随用户变化，还可能在请求的区域设置不受支持时，随是否使用回退区域设置而不同。
	 </p>
	 
	 </apiDesc><example conref="examples\CollatorExample1.as" class="- topic/example "> 以下示例显示随区域设置而变化的排序结果。此示例执行下列步骤：
 <ol class="- topic/ol "><li class="- topic/li ">循环访问区域设置 ID 名称数组，包括操作系统的默认区域设置 ID（由 <codeph class="+ topic/ph pr-d/codeph ">LocaleID.DEFAULT</codeph> 指定）</li><li class="- topic/li ">使用“排序”模式（默认）为每个区域设置 ID 名称创建 Collator 对象。 </li><li class="- topic/li ">显示请求的和实际的区域设置 ID 名称以及 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性的值，以便能知道是否使用了回退区域设置。</li><li class="- topic/li ">使用每个 collator 对数据数组排序并显示排序结果。各区域设置的排序结果不同。</li></ol>
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">

package {
    import flash.globalization.Collator;
    import flash.globalization.LocaleID;

    public class CollatorExample1
    {
        public var col:Collator;
        
        public function CollatorExample1():void
        {        
            var localeNames:Array = [LocaleID.DEFAULT,
                                     "de-DE", "sv-SE",
                                     "fr-FR", "lt-LT",
                                     "es-ES"];
            
            var testSortData:Array = [
                "y ", "i ", "k ", // Latvian
                "acxa ", "acha ", "adxa ", // es_traditional
                "n ", "ö ", "o ", "z ", "vu ", "wo ", // sw
                "däd ", "daed ", // de
                "öf ", "of ", // de_dictionary
                "côte ", "coté " // fr
            ];
            
            for each (var localeName:String in localeNames) {
            
                col = new Collator(localeName);
                
                trace("LocaleID requested: " + col.requestedLocaleIDName 
                       + "; actual: " + col.actualLocaleIDName);
                       
                trace("Last Operation Status: " + col.lastOperationStatus );
                
                var result:Array = testSortData.sort(col.compare);
                        
                trace ("sorted data: " + result); 
            }
        }      
    }
}
</codeblock></example><example conref="examples\CollatorExample2.as" class="- topic/example "> 以下示例显示了使用 Collator 对象控制字符串比较的行为。此示例执行下列步骤：
 <ol class="- topic/ol "><li class="- topic/li ">使用“匹配”模式为用户的默认区域设置创建 Collator 对象。 </li><li class="- topic/li ">交替将 <codeph class="+ topic/ph pr-d/codeph ">Collator.ignoreDiacritics</codeph> 属性设置为 <codeph class="+ topic/ph pr-d/codeph ">false</codeph> 和 <codeph class="+ topic/ph pr-d/codeph ">true</codeph> </li><li class="- topic/li ">比较多组包含音调符号和大小写字符的字符串。 </li><li class="- topic/li ">显示当 <codeph class="+ topic/ph pr-d/codeph ">Collator.ignoreDiacritics</codeph> 和 <codeph class="+ topic/ph pr-d/codeph ">Collator.ignoreCase</codeph> 属性更改时比较如何变化。</li></ol>
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">

package {
    import flash.display.Sprite;
    import flash.globalization.Collator;
    import flash.globalization.CollatorMode;
    import flash.globalization.LocaleID;
    
    public class CollatorExample2 extends Sprite
    {
        public var col:Collator;
        public var testMatchData:Array = ["cote", "Cote", "cÃ´te", "cotÃ©"];
        public var wordToMatch:String = "Cote";
        
        public function CollatorExample2()
        {
            col = new Collator( LocaleID.DEFAULT, CollatorMode.MATCHING );

            trace("LocaleID requested: " + col.requestedLocaleIDName 
                    + "; actual: " + col.actualLocaleIDName);
                    
            trace("Last Operation Status: " + col.lastOperationStatus );

            trace('\n' + "ignoreCase = " + col.ignoreCase);
            trace("ignoreDiacritics = " + col.ignoreDiacritics);

            compareString(testMatchData, wordToMatch) // All variations of the word cote match

            col.ignoreDiacritics = false;
            trace('\n' + "ignoreDiacritics = false");

            compareString(testMatchData, wordToMatch) // Variations with different diacritics will not match

            col.ignoreCase = false;
            trace('\n' + "ignoreCase = false");

            compareString(testMatchData, wordToMatch) // Variations with different case will not match
        }
    
        private function compareString(stringArray:Array, keyword:String):void
        {
            for each(var s:String in stringArray)
            {
                if(col.equals(s, keyword))    
                {
                    trace(keyword + " = " + s);
                }
            }
        }
    }
}
</codeblock></example></apiClassifierDetail><apiConstructor id="flash.globalization:Collator:Collator" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">Collator</apiName><shortdesc class="- topic/shortdesc ">
		 构造新的 Collator 对象，以根据指定的区域设置的约定提供字符串比较。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">当 <codeph class="+ topic/ph pr-d/codeph ">requestedLocaleIDName</codeph> 参数为 <codeph class="+ topic/ph pr-d/codeph ">null</codeph> 时。
		 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">TypeError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">TypeError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">当 <codeph class="+ topic/ph pr-d/codeph ">requestedLocaleIDName</codeph> 参数包含无效值时。		 
		 
		 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">requestedLocaleIDName</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">此 Collator 对象要使用的 <codeph class="+ topic/ph pr-d/codeph ">String</codeph>。
		 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">initialMode</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">sorting</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">用于指定初始排序模式的字符串值。默认值是 <codeph class="+ topic/ph pr-d/codeph ">CollatorMode.SORTING</codeph>。有关可用模式的列表，请参阅 CollatorMode 类。
		 
		 </apiDesc></apiParam></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 构造新的 Collator 对象，以根据指定的区域设置的约定提供字符串比较。
		 <p class="- topic/p ">
		 如果当前操作系统不支持在 <codeph class="+ topic/ph pr-d/codeph ">requestedLocaleIDName</codeph> 参数中传递到的区域设置 ID，则确定一个回退区域设置。如果使用了回退，则设置 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性以表示回退类型。
		 </p>
		 <p class="- topic/p ">
		 <codeph class="+ topic/ph pr-d/codeph ">initialMode</codeph> 参数设置供常规使用的多种排序选项。它可以设置为下列值之一：
		 </p>
		 <ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">CollatorMode.SORTING</codeph>：设置用于常规语言排序（例如对显示给最终用户的文本字符串列表进行排序）的排序选项。在此模式下，进行字符串比较时考虑大写和小写字母、重音符号及其它特定于区域设置的区别。</li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">CollatorMode.MATCHING</codeph>：设置供常规使用（例如确定两个字符串是否等效）的排序选项。在此模式下，进行字符串比较时忽略大写和小写字母、重音符号等区别。</li></ul>
		 <p class="- topic/p ">
		 以下是使用带有区域设置 ID“en-US”（美国英语）和 <codeph class="+ topic/ph pr-d/codeph ">CollatorMode.SORTING</codeph> 选项的 Collator 创建的排序列表的示例：
		 </p>
		 <adobetable class="innertable"><tgroup cols="1" class="- topic/tgroup "><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry ">A</entry></row><row class="- topic/row "><entry class="- topic/entry ">一个</entry></row><row class="- topic/row "><entry class="- topic/entry ">Ä</entry></row><row class="- topic/row "><entry class="- topic/entry ">ä</entry></row><row class="- topic/row "><entry class="- topic/entry ">Ａ</entry></row><row class="- topic/row "><entry class="- topic/entry ">ａ</entry></row><row class="- topic/row "><entry class="- topic/entry ">AE</entry></row><row class="- topic/row "><entry class="- topic/entry ">ae</entry></row><row class="- topic/row "><entry class="- topic/entry ">Æ</entry></row><row class="- topic/row "><entry class="- topic/entry ">æ</entry></row><row class="- topic/row "><entry class="- topic/entry ">B</entry></row><row class="- topic/row "><entry class="- topic/entry ">b</entry></row><row class="- topic/row "><entry class="- topic/entry ">Ｂ</entry></row><row class="- topic/row "><entry class="- topic/entry ">ｂ</entry></row><row class="- topic/row "><entry class="- topic/entry ">C</entry></row><row class="- topic/row "><entry class="- topic/entry ">c</entry></row><row class="- topic/row "><entry class="- topic/entry ">ç</entry></row><row class="- topic/row "><entry class="- topic/entry ">Ｃ</entry></row><row class="- topic/row "><entry class="- topic/entry ">ｃ</entry></row></tbody></tgroup></adobetable>
		 <p class="- topic/p ">
		 如上所示，所有字符均视为具有不同值，但按语言顺序排序。
		 </p><p class="- topic/p ">
		 以下是使用带有区域设置 ID“en-US”（美国英语）和 <codeph class="+ topic/ph pr-d/codeph ">CollatorMode.MATCHING</codeph> 选项的 Collator 创建的排序列表的示例：
		 </p>
		 <adobetable class="innertable"><tgroup cols="1" class="- topic/tgroup "><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry ">A a Ä ä Ａ ａ</entry></row><row class="- topic/row "><entry class="- topic/entry ">AE ae Æ æ</entry></row><row class="- topic/row "><entry class="- topic/entry ">B b Ｂ ｂ</entry></row><row class="- topic/row "><entry class="- topic/entry ">C c ç Ｃ ｃ</entry></row></tbody></tgroup></adobetable>
		      <p class="- topic/p "><font size="-1">图例：在比较或排序期间，同一行的字符视为等效字符。例如，认为“a”(U+0040 = LATIN SMALL LETTER A) 和“Ä”(U+00C4 = LATIN CAPITAL LETTER A WITH DIAERESIS) 等效。</font>
		 </p><p class="- topic/p ">
		 如上所示，某些字符按语言顺序排序并被视为具有相同字符值。 
		 </p><p class="- topic/p ">
		 要更细致的控制排序顺序，可以更改 <codeph class="+ topic/ph pr-d/codeph ">Collator.ignoreCase</codeph> 或 <codeph class="+ topic/ph pr-d/codeph ">Collator.ignoreDiacritics</codeph> 等 collator 属性。
		 </p><p class="- topic/p ">
		 作为参考，此处提供了一个使用不支持区域设置识别的标准 <codeph class="+ topic/ph pr-d/codeph ">Array.sort()</codeph> 完成排序的相应示例：
		 </p>
		 <adobetable class="innertable"><tgroup cols="1" class="- topic/tgroup "><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry ">A</entry></row><row class="- topic/row "><entry class="- topic/entry ">AE</entry></row><row class="- topic/row "><entry class="- topic/entry ">B</entry></row><row class="- topic/row "><entry class="- topic/entry ">C</entry></row><row class="- topic/row "><entry class="- topic/entry ">一个</entry></row><row class="- topic/row "><entry class="- topic/entry ">ae</entry></row><row class="- topic/row "><entry class="- topic/entry ">b</entry></row><row class="- topic/row "><entry class="- topic/entry ">c</entry></row><row class="- topic/row "><entry class="- topic/entry ">Ä</entry></row><row class="- topic/row "><entry class="- topic/entry ">Æ</entry></row><row class="- topic/row "><entry class="- topic/entry ">ä</entry></row><row class="- topic/row "><entry class="- topic/entry ">æ</entry></row><row class="- topic/row "><entry class="- topic/entry ">ç</entry></row><row class="- topic/row "><entry class="- topic/entry ">Ａ</entry></row><row class="- topic/row "><entry class="- topic/entry ">Ｂ</entry></row><row class="- topic/row "><entry class="- topic/entry ">ａ</entry></row><row class="- topic/row "><entry class="- topic/entry ">ｂ</entry></row></tbody></tgroup></adobetable>
		 <p class="- topic/p ">	
		 如上所示，所有字符均以 Unicode 数值顺序简单排序。在语言方面其意义并不大。
		 </p><p class="- topic/p ">	
		 要使用用户的当前操作系统首选项，请将 <codeph class="+ topic/ph pr-d/codeph ">requestedLocaleIDName</codeph> 参数中的静态值 <codeph class="+ topic/ph pr-d/codeph ">LocaleID.DEFAULT</codeph> 传递到构造函数。
		 </p><p class="- topic/p ">	
		 有些区域设置具有多种排序顺序变体。例如，在德语中，一种排序顺序用于电话号码簿，另一种排序顺序用于词典。中文中，通常对字提供字符音译为拼音的支持。可以通过在 <codeph class="+ topic/ph pr-d/codeph ">requestedLocaleIDName</codeph> 参数中传递给构造函数的字符串中包含“排序”关键字来选择这些不同的排序顺序。
		 </p>
		 
		 <codeblock rev="3.0" xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
		 var germanPhonebook:LocaleID = new LocaleID("de-DE@collation=phonebook");
		 var chinesePinyin:LocaleID = new LocaleID("zh-Hant@collation=pinyin");
		 </codeblock>
		 
		 <p class="- topic/p ">
		 排序字符串的可能值如下所示，括号中显示了所影响的语言：
		 </p>
		 
		 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">排序字符串</entry><entry class="- topic/entry ">说明</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">standard</codeph></entry><entry class="- topic/entry ">每种语言的默认顺序。 </entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">phonebook</codeph></entry><entry class="- topic/entry ">适用于电话簿样式顺序（用于德语）。</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">pinyin</codeph></entry><entry class="- topic/entry ">适用于拉丁字符和 CJK 字符的拼音顺序；也就是基于逐字符音译为拼音的、适用于 CJK 字符的顺序。（用于中文）</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">traditional</codeph></entry><entry class="- topic/entry ">适用于传统样式排序（用于西班牙语） </entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">stroke</codeph></entry><entry class="- topic/entry ">拼音顺序适用于拉丁语，笔顺适用于 CJK 字符（用于中文）</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">direct</codeph></entry><entry class="- topic/entry ">（用于印地语） </entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">big5han</codeph></entry><entry class="- topic/entry ">拼音顺序适用于拉丁语，big5 字符集顺序适用于 CJK 字符。（用于中文） </entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">gb2312han</codeph> </entry><entry class="- topic/entry ">拼音顺序适用于拉丁语，gb2312han 字符集顺序适用于 CJK 字符。（用于中文） </entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">unihan</codeph></entry><entry class="- topic/entry ">拼音顺序适用于拉丁语，Unihan 字根比划顺序适用于 CJK 字符。（用于中文） </entry></row></tbody></tgroup></adobetable>
		 
		 <p class="- topic/p ">
		 如果主机平台不支持请求的排序类型，则使用回退并设置 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性，以表示选择了回退。可以使用 <codeph class="+ topic/ph pr-d/codeph ">actualLocaleIDName</codeph> 属性来确定用作回退的值，如下面的示例所示：
		 </p>
		 <codeblock rev="3.0" xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
         var collator:Collator = new Collator("fr-FR");
         if (collator.lastOperationStatus == LastOperationStatus.USING_FALLBACK_WARNING)
         {
	       trace ("Using fallback locale: " + collator.actualLocaleIDName);
	     }
		 </codeblock>
		 	 
		 <p class="- topic/p ">构造函数成功后，将 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性设置为： </p>
         <ul class="- topic/ul "><li class="- topic/li "> <codeph class="+ topic/ph pr-d/codeph ">LastOperationStatus.NO_ERROR</codeph> </li></ul>
         <p class="- topic/p ">当请求的区域设置 ID 不可用时，则将 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性设置为下列属性值之一：</p>
         <ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">LastOperationStatus.USING_FALLBACK_WARNING</codeph></li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">LastOperationStatus.USING_DEFAULT_WARNING</codeph></li></ul>
         <p class="- topic/p ">否则，将 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性设置为 LastOperationStatus 类中定义的其中一个常量。</p>  
		 
         <p class="- topic/p ">有关上面列出的警告以及 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 的其他可能值的详细信息，请参阅 <codeph class="+ topic/ph pr-d/codeph ">LastOperationStatus</codeph> 类中的说明。</p>
		 
		 </apiDesc></apiConstructorDetail><related-links class="- topic/related-links "><link href="flash.globalization.xml#CollatorMode" class="- topic/link "><linktext class="- topic/linktext ">CollatorMode</linktext></link><link href="flash.globalization.xml#LastOperationStatus" class="- topic/link "><linktext class="- topic/linktext ">LastOperationStatus</linktext></link><link href="flash.globalization.xml#LocaleID" class="- topic/link "><linktext class="- topic/linktext ">LocaleID</linktext></link><link href="flash.globalization.xml#Collator/lastOperationStatus" class="- topic/link "><linktext class="- topic/linktext ">lastOperationStatus</linktext></link><link href="flash.globalization.xml#Collator/requestedLocaleIDName" class="- topic/link "><linktext class="- topic/linktext ">requestedLocaleIDName</linktext></link><link href="flash.globalization.xml#Collator/actualLocaleIDName" class="- topic/link "><linktext class="- topic/linktext ">actualLocaleIDName</linktext></link></related-links></apiConstructor><apiOperation id="flash.globalization:Collator:compare" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">compare</apiName><shortdesc class="- topic/shortdesc ">	
		 比较两个字符串并返回一个整数值，表示第一个字符串是小于、等于还是大于第二个字符串。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">当必需的参数为空时。
		 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">TypeError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">TypeError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">当参数包含无效值时。
		 
		 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">一个整数值，表示第一个字符串是小于、等于或大于第二个字符串。
		         <ul class="- topic/ul "><li class="- topic/li ">如果返回值为负，则表示 <codeph class="+ topic/ph pr-d/codeph ">string1</codeph> 小于 <codeph class="+ topic/ph pr-d/codeph ">string2</codeph>。</li><li class="- topic/li ">如果返回值是零，则表示 <codeph class="+ topic/ph pr-d/codeph ">string1</codeph> 等于 <codeph class="+ topic/ph pr-d/codeph ">string2</codeph>。 </li><li class="- topic/li ">如果返回值为正，则表示 <codeph class="+ topic/ph pr-d/codeph ">string1</codeph> 大于 <codeph class="+ topic/ph pr-d/codeph ">string2</codeph>。 </li></ul>
		 
		 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">string1</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">第一个比较字符串。
		 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">string2</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">第二个比较字符串。
		 </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">	
		 比较两个字符串并返回一个整数值，表示第一个字符串是小于、等于还是大于第二个字符串。比较将使用适用于 <codeph class="+ topic/ph pr-d/codeph ">Collator()</codeph> 构造函数中指定的区域设置 ID 的排序顺序规则。 
         
		 <p class="- topic/p ">调用此方法并成功完成后，将 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性设置为： </p>
         <ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">LastOperationStatus.NO_ERROR</codeph> </li></ul>
         <p class="- topic/p ">否则，将 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性设置为 <codeph class="+ topic/ph pr-d/codeph ">LastOperationStatus</codeph> 类中定义的一个常量。</p>
		 
		 </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.globalization.xml#Collator/equals()" class="- topic/link "><linktext class="- topic/linktext ">equals()</linktext></link><link href="flash.globalization.xml#Collator/lastOperationStatus" class="- topic/link "><linktext class="- topic/linktext ">lastOperationStatus</linktext></link><link href="flash.globalization.xml#LastOperationStatus" class="- topic/link "><linktext class="- topic/linktext ">LastOperationStatus</linktext></link></related-links></apiOperation><apiOperation id="flash.globalization:Collator:equals" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">equals</apiName><shortdesc class="- topic/shortdesc ">
		 比较两个字符串并返回表示字符串是否相等的布尔值。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">当必需的参数为空时。
		 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">TypeError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">TypeError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">当参数包含无效值时。
		 
		 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">一个布尔值，表示字符串相等 (<codeph class="+ topic/ph pr-d/codeph ">true</codeph>) 还是不相等 (<codeph class="+ topic/ph pr-d/codeph ">false</codeph>)。 
		 
		 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">string1</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">第一个比较字符串。
		 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">string2</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">第二个比较字符串。
		 </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 比较两个字符串并返回表示字符串是否相等的布尔值。比较将使用适用于 <codeph class="+ topic/ph pr-d/codeph ">Collator()</codeph> 构造函数中指定的区域设置 ID 的排序顺序规则。  
		 
		 <p class="- topic/p ">调用此方法并成功完成后，将 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性设置为： </p>
         <ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">LastOperationStatus.NO_ERROR</codeph> </li></ul>
         <p class="- topic/p ">否则，将 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性设置为 <codeph class="+ topic/ph pr-d/codeph ">LastOperationStatus</codeph> 类中定义的一个常量。</p>
         
		 </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.globalization.xml#Collator/compare()" class="- topic/link "><linktext class="- topic/linktext ">compare()</linktext></link><link href="flash.globalization.xml#Collator/lastOperationStatus" class="- topic/link "><linktext class="- topic/linktext ">lastOperationStatus</linktext></link><link href="flash.globalization.xml#LastOperationStatus" class="- topic/link "><linktext class="- topic/linktext ">LastOperationStatus</linktext></link></related-links></apiOperation><apiOperation id="flash.globalization:Collator:getAvailableLocaleIDNames" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">getAvailableLocaleIDNames</apiName><shortdesc class="- topic/shortdesc ">
		 列出此类支持的所有区域设置 ID 名称。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">一个字符串矢量，其中包含此类支持的所有区域设置 ID 名称。
		 
		 </apiDesc><apiType value="Vector$String" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 列出此类支持的所有区域设置 ID 名称。 
		 
		 <p class="- topic/p ">如果当前操作系统根本不支持此类，此方法返回 null 值。</p>
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiValue id="flash.globalization:Collator:actualLocaleIDName:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">actualLocaleIDName</apiName><shortdesc class="- topic/shortdesc ">
		 此 Collator 对象使用的实际区域设置 ID 的名称。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 此 Collator 对象使用的实际区域设置 ID 的名称。
		 
		 <p class="- topic/p ">根据操作系统和传递给 <codeph class="+ topic/ph pr-d/codeph ">Collator()</codeph> 构造函数的 <codeph class="+ topic/ph pr-d/codeph ">requestedLocaleIDName</codeph> 参数的值，该名称有三种可能的值。</p>
		 <ol class="- topic/ol "><li class="- topic/li ">如果请求的区域设置不是 <codeph class="+ topic/ph pr-d/codeph ">LocaleID.DEFAULT</codeph> 且操作系统支持该请求的区域设置，则返回的名称与 <codeph class="+ topic/ph pr-d/codeph ">requestedLocaleIDName</codeph> 属性相同。
		         </li><li class="- topic/li ">如果将 <codeph class="+ topic/ph pr-d/codeph ">LocaleID.DEFAULT</codeph> 用作构造函数的 <codeph class="+ topic/ph pr-d/codeph ">requestedLocaleIDName</codeph> 参数的值，则使用由用户操作系统指定的当前区域设置的名称。<codeph class="+ topic/ph pr-d/codeph ">LocaleID.DEFAULT</codeph> 值保留用户在操作系统中的自定义设置。显式值作为 <codeph class="+ topic/ph pr-d/codeph ">requestedLocaleIDName</codeph> 参数传递与使用 <codeph class="+ topic/ph pr-d/codeph ">LocaleID.DEFAULT</codeph> 所产生的结果不一定相同，即使两个区域设置 ID 名称相同，也是如此。用户可能已在他们的计算机上对区域设置进行了自定义，通过请求显式区域设置 ID 名称（而不是使用 <codeph class="+ topic/ph pr-d/codeph ">LocaleID.DEFAULT</codeph>），您的应用程序将不会检索这些自定义设置。 
		 	   <blockquote>
		         <p class="- topic/p ">例如：</p>
         <codeblock rev="3.0" xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
         var fmt:Collator = new Collator(LocaleID.DEFAULT);
		 var aliName:String = fmt.actualLocaleIDName;
		 </codeblock>
		         <p class="- topic/p ">在上面的示例中，<codeph class="+ topic/ph pr-d/codeph ">aliName</codeph> 是与用户当前的操作系统设置对应的区域设置的名称（例如，如果用户的区域设置设为“意大利语-意大利”，则其名称为“it-IT”），而不是“<codeph class="+ topic/ph pr-d/codeph ">i-default</codeph>”（<codeph class="+ topic/ph pr-d/codeph ">LocaleID.DEFAULT</codeph> 区域设置的名称）。</p>
		         </blockquote></li><li class="- topic/li ">如果系统不支持在构造函数中指定的 <codeph class="+ topic/ph pr-d/codeph ">requestedLocaleIDName</codeph>，则会提供回退区域设置 ID 名称。
		         <blockquote>
		         <p class="- topic/p ">例如：</p>
		 <codeblock rev="3.0" xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
         var fmt:Collator = new Collator("fr-CA");	 	 
         var aliName:String = fmt.actualLocaleIDName;
         </codeblock>
		         <p class="- topic/p ">假设以上示例中的操作系统不支持“fr-CA”（法语-加拿大）区域设置 ID，则使用回退。在这种情况下，<codeph class="+ topic/ph pr-d/codeph ">aliName</codeph> 变量包含回退区域设置 ID“fr-FR”（法语-法国）。</p>
		         </blockquote></li></ol>
		 
		 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.globalization.xml#LocaleID" class="- topic/link "><linktext class="- topic/linktext ">LocaleID</linktext></link><link href="flash.globalization.xml#Collator/requestedLocaleIDName" class="- topic/link "><linktext class="- topic/linktext ">requestedLocaleIDName</linktext></link></related-links></apiValue><apiValue id="flash.globalization:Collator:ignoreCase:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">ignoreCase</apiName><shortdesc class="- topic/shortdesc ">
		 当此属性设置为 true 时，完全相同的字符串和仅字母大小写不同的字符串比较结果为相等。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier><apiDefaultValue>&lt;code>true&lt;/code> when the &lt;code>Collator()&lt;/code> constructor's &lt;code>initialMode&lt;/code> parameter 
		          is set to &lt;code>Collator.MATCHING&lt;/code>.
		          &lt;code>false&lt;/code> when the &lt;code>Collator()&lt;/code> constructor's &lt;code>initialMode&lt;/code> parameter 
		          is set to Collator.SORTING.
		 
		 </apiDefaultValue></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 当此属性设置为 true 时，完全相同的字符串和仅字母大小写不同的字符串比较结果为相等。例如，当 <codeph class="+ topic/ph pr-d/codeph ">ignoreCase</codeph> 属性设置为 <codeph class="+ topic/ph pr-d/codeph ">true</codeph> 时，<codeph class="+ topic/ph pr-d/codeph ">compare("ABC", "abc")</codeph> 将返回 <codeph class="+ topic/ph pr-d/codeph ">true</codeph>。  
		 <p class="- topic/p ">
		 字符串的大小写转换遵守指定的区域设置的规则。 
		 </p><p class="- topic/p ">
		 当 <codeph class="+ topic/ph pr-d/codeph ">ignoreCase</codeph> 属性为 false 时，大小写字符不相等。
		 </p><p class="- topic/p ">
		 为此属性分配了值并且未引发错误或警告时，将 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性设置为： </p>
         <ul class="- topic/ul "><li class="- topic/li "> <codeph class="+ topic/ph pr-d/codeph ">LastOperationStatus.NO_ERROR</codeph> </li></ul>
         <p class="- topic/p ">
         否则，将 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性设置为 LastOperationStatus 类中定义的一个常量。</p>
      	 
		 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.globalization.xml#Collator/lastOperationStatus" class="- topic/link "><linktext class="- topic/linktext ">lastOperationStatus</linktext></link><link href="flash.globalization.xml#Collator/compare()" class="- topic/link "><linktext class="- topic/linktext ">compare()</linktext></link><link href="flash.globalization.xml#Collator/equals()" class="- topic/link "><linktext class="- topic/linktext ">equals()</linktext></link><link href="flash.globalization.xml#LastOperationStatus" class="- topic/link "><linktext class="- topic/linktext ">LastOperationStatus</linktext></link></related-links></apiValue><apiValue id="flash.globalization:Collator:ignoreCharacterWidth:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">ignoreCharacterWidth</apiName><shortdesc class="- topic/shortdesc ">
		 当此属性为 true 时，某些全角和半角形式的中文和日文字符比较结果为相等。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier><apiDefaultValue>false
		 </apiDefaultValue></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 当此属性为 true 时，某些全角和半角形式的中文和日文字符比较结果为相等。 
		 
		 <p class="- topic/p ">为与中文和日文字符集的现有标准兼容，Unicode 为某些全角和半角形式的字符提供字符代码。例如，当 <codeph class="+ topic/ph pr-d/codeph ">ignoreCharacterWidth</codeph> 属性设置为 <codeph class="+ topic/ph pr-d/codeph ">true</codeph> 时，<codeph class="+ topic/ph pr-d/codeph ">compare("Ａｱ", "Aア")</codeph> 返回 <codeph class="+ topic/ph pr-d/codeph ">true</codeph>。</p>
		 <p class="- topic/p ">
		 如果将 <codeph class="+ topic/ph pr-d/codeph ">ignoreCharacterWidth</codeph> 属性设置为 <codeph class="+ topic/ph pr-d/codeph ">false</codeph>，则全角和半角形式的字符不相等。 
		 </p>
		 
		 <p class="- topic/p ">为此属性分配了值并且未引发错误或警告时，将 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性设置为： </p>
         <ul class="- topic/ul "><li class="- topic/li "> <codeph class="+ topic/ph pr-d/codeph ">LastOperationStatus.NO_ERROR</codeph> </li></ul>
         <p class="- topic/p ">
         否则，将 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性设置为 LastOperationStatus 类中定义的其中一个常量。</p>
         
		 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.globalization.xml#Collator/lastOperationStatus" class="- topic/link "><linktext class="- topic/linktext ">lastOperationStatus</linktext></link><link href="flash.globalization.xml#Collator/compare()" class="- topic/link "><linktext class="- topic/linktext ">compare()</linktext></link><link href="flash.globalization.xml#Collator/equals()" class="- topic/link "><linktext class="- topic/linktext ">equals()</linktext></link><link href="flash.globalization.xml#LastOperationStatus" class="- topic/link "><linktext class="- topic/linktext ">LastOperationStatus</linktext></link></related-links></apiValue><apiValue id="flash.globalization:Collator:ignoreDiacritics:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">ignoreDiacritics</apiName><shortdesc class="- topic/shortdesc ">
		 当此属性设置为 true 时，使用相同基本字符，但重音符号或其它音调符号不同的字符串，比较结果为相等。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier><apiDefaultValue>false
		 </apiDefaultValue></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 当此属性设置为 true 时，使用相同基本字符，但重音符号或其它音调符号不同的字符串，比较结果为相等。例如，当 <codeph class="+ topic/ph pr-d/codeph ">ignoreDiacritics</codeph> 属性设置为 <codeph class="+ topic/ph pr-d/codeph ">true</codeph> 时，<codeph class="+ topic/ph pr-d/codeph ">compare("coté", "côte")</codeph> 返回 <codeph class="+ topic/ph pr-d/codeph ">true</codeph>。 
		 
		 <p class="- topic/p ">当 <codeph class="+ topic/ph pr-d/codeph ">ignoreDiacritics</codeph> 设置为 <codeph class="+ topic/ph pr-d/codeph ">false</codeph> 时，带有音调符号或重音符号的基本字符被视为不相等。</p>
		 
		 <p class="- topic/p ">为此属性分配了值并且未引发错误或警告时，将 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性设置为： </p>
         <ul class="- topic/ul "><li class="- topic/li "> <codeph class="+ topic/ph pr-d/codeph ">LastOperationStatus.NO_ERROR</codeph> </li></ul>
         <p class="- topic/p ">否则，将 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性设置为 LastOperationStatus 类中定义的其中一个常量。</p>
         
		 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.globalization.xml#Collator/lastOperationStatus" class="- topic/link "><linktext class="- topic/linktext ">lastOperationStatus</linktext></link><link href="flash.globalization.xml#Collator/compare()" class="- topic/link "><linktext class="- topic/linktext ">compare()</linktext></link><link href="flash.globalization.xml#Collator/equals()" class="- topic/link "><linktext class="- topic/linktext ">equals()</linktext></link><link href="flash.globalization.xml#LastOperationStatus" class="- topic/link "><linktext class="- topic/linktext ">LastOperationStatus</linktext></link></related-links></apiValue><apiValue id="flash.globalization:Collator:ignoreKanaType:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">ignoreKanaType</apiName><shortdesc class="- topic/shortdesc ">
		 当此属性设置为 true 时，正在使用的仅 kana 字符类型不同的字符串被视为相等。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier><apiDefaultValue>false
		 </apiDefaultValue></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 当此属性设置为 true 时，会将区别仅在于使用了不同的 kana 字符类型的字符串视为相等。例如，当 <codeph class="+ topic/ph pr-d/codeph ">ignoreKanaType</codeph> 属性设置为 <codeph class="+ topic/ph pr-d/codeph ">true</codeph> 时，<codeph class="+ topic/ph pr-d/codeph ">compare("カナ", "かな")</codeph> 返回 <codeph class="+ topic/ph pr-d/codeph ">true</codeph>。 
		 <p class="- topic/p ">
		 如果将 <codeph class="+ topic/ph pr-d/codeph ">ignoreKanaType</codeph> 设置为 <codeph class="+ topic/ph pr-d/codeph ">false</codeph>，则引用相同音节的平假名和片假名字符不相等。
		 </p>
		 
		 <p class="- topic/p ">为此属性分配了值并且未引发错误或警告时，将 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性设置为： </p>
         <ul class="- topic/ul "><li class="- topic/li "> <codeph class="+ topic/ph pr-d/codeph ">LastOperationStatus.NO_ERROR</codeph> </li></ul>
         <p class="- topic/p ">否则，将 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性设置为 LastOperationStatus 类中定义的其中一个常量。</p>
         
		 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.globalization.xml#Collator/lastOperationStatus" class="- topic/link "><linktext class="- topic/linktext ">lastOperationStatus</linktext></link><link href="flash.globalization.xml#Collator/compare()" class="- topic/link "><linktext class="- topic/linktext ">compare()</linktext></link><link href="flash.globalization.xml#Collator/equals()" class="- topic/link "><linktext class="- topic/linktext ">equals()</linktext></link><link href="flash.globalization.xml#LastOperationStatus" class="- topic/link "><linktext class="- topic/linktext ">LastOperationStatus</linktext></link></related-links></apiValue><apiValue id="flash.globalization:Collator:ignoreSymbols:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">ignoreSymbols</apiName><shortdesc class="- topic/shortdesc ">
		 当此属性设置为 true 时，排序或匹配时将忽略空格、货币符号、数学符号和其它类型符号等符号字符。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier><apiDefaultValue>false
		 </apiDefaultValue></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 当此属性设置为 true 时，排序或匹配时将忽略空格、货币符号、数学符号和其它类型符号等符号字符。例如，当 <codeph class="+ topic/ph pr-d/codeph ">ignoreSymbols</codeph> 属性设置为 <codeph class="+ topic/ph pr-d/codeph ">true</codeph> 时，“OBrian”、“O'Brian”和“O Brian”字符串都被视为相等。 
		 <p class="- topic/p ">
		 如果 <codeph class="+ topic/ph pr-d/codeph ">ignoreSymbols</codeph> 属性为 false，则字符串比较将考虑符号字符。 
		 </p>
		 
		 <p class="- topic/p ">为此属性分配了值并且未引发错误或警告时，将 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性设置为： </p>
         <ul class="- topic/ul "><li class="- topic/li "> <codeph class="+ topic/ph pr-d/codeph ">LastOperationStatus.NO_ERROR</codeph> </li></ul>
         <p class="- topic/p ">
         否则，将 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性设置为 LastOperationStatus 类中定义的其中一个常量。</p>
		 
		 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.globalization.xml#Collator/lastOperationStatus" class="- topic/link "><linktext class="- topic/linktext ">lastOperationStatus</linktext></link><link href="flash.globalization.xml#Collator/compare()" class="- topic/link "><linktext class="- topic/linktext ">compare()</linktext></link><link href="flash.globalization.xml#Collator/equals()" class="- topic/link "><linktext class="- topic/linktext ">equals()</linktext></link><link href="flash.globalization.xml#LastOperationStatus" class="- topic/link "><linktext class="- topic/linktext ">LastOperationStatus</linktext></link></related-links></apiValue><apiValue id="flash.globalization:Collator:lastOperationStatus:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">lastOperationStatus</apiName><shortdesc class="- topic/shortdesc ">
		 此 Collator 对象执行的最近操作的状态。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 此 Collator 对象执行的最近操作的状态。只要调用构造函数或此类的一个方法，或设置一个属性，都会设置 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph>。有关可能值的信息，请参阅每种方法下的说明。
		 
		 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.globalization.xml#LastOperationStatus" class="- topic/link "><linktext class="- topic/linktext ">LastOperationStatus</linktext></link></related-links></apiValue><apiValue id="flash.globalization:Collator:numericComparison:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">numericComparison</apiName><shortdesc class="- topic/shortdesc ">
		 控制如何在进行字符串比较期间处理嵌入到字符串的数值。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier><apiDefaultValue>false
		 
		 </apiDefaultValue></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 控制如何在进行字符串比较期间处理嵌入到字符串的数值。
		 
		 <p class="- topic/p ">当 <codeph class="+ topic/ph pr-d/codeph ">numericComparison</codeph> 属性设置为 <codeph class="+ topic/ph pr-d/codeph ">true</codeph> 时，比较方法将出现在字符串中的数字转换为数值以供比较。</p>
		 
		 <p class="- topic/p ">当此属性设置为 <codeph class="+ topic/ph pr-d/codeph ">false</codeph> 时，比较时将把数字视为字符代码，并根据指定区域设置中对字符排序所用的规则对它们进行排序。</p>
		 
		 <p class="- topic/p ">例如，对于区域设置 ID“en-US”，当此属性为 true 时，字符串“version1”、“version10”和“version2”按以下顺序排序：version1 &lt; version2 &lt; version10。</p>
		 <p class="- topic/p ">对于“en-US”，当此属性为 false 时，上述同样的字符串按以下顺序排序：version1 &lt; version10 &lt; version2。</p>
		 
		 <p class="- topic/p ">为此属性分配了值并且未引发错误或警告时，将 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性设置为： </p>
         <ul class="- topic/ul "><li class="- topic/li "> <codeph class="+ topic/ph pr-d/codeph ">LastOperationStatus.NO_ERROR</codeph> </li></ul>
         <p class="- topic/p ">
         否则，将 <codeph class="+ topic/ph pr-d/codeph ">lastOperationStatus</codeph> 属性设置为 LastOperationStatus 类中定义的其中一个常量。</p>
		 
		 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.globalization.xml#Collator/lastOperationStatus" class="- topic/link "><linktext class="- topic/linktext ">lastOperationStatus</linktext></link><link href="flash.globalization.xml#Collator/compare()" class="- topic/link "><linktext class="- topic/linktext ">compare()</linktext></link><link href="flash.globalization.xml#Collator/equals()" class="- topic/link "><linktext class="- topic/linktext ">equals()</linktext></link><link href="flash.globalization.xml#LastOperationStatus" class="- topic/link "><linktext class="- topic/linktext ">LastOperationStatus</linktext></link></related-links></apiValue><apiValue id="flash.globalization:Collator:requestedLocaleIDName:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">requestedLocaleIDName</apiName><shortdesc class="- topic/shortdesc ">
		 传递到此 Collator 对象的构造函数的请求的区域设置 ID 名称。</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 传递到此 Collator 对象的构造函数的请求的区域设置 ID 名称。
		 
		 <p class="- topic/p ">如果使用了 <codeph class="+ topic/ph pr-d/codeph ">LocaleID.DEFAULT</codeph> 值，则返回的名称将是“i-default”。如果应用了回退区域设置，则实际使用的区域设置可能与请求的区域设置不同。可以使用 <codeph class="+ topic/ph pr-d/codeph ">actualLocaleIDName</codeph> 属性检索实际区域设置的名称。
		 </p>
		 
		 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.globalization.xml#LocaleID" class="- topic/link "><linktext class="- topic/linktext ">LocaleID</linktext></link><link href="flash.globalization.xml#Collator/actualLocaleIDName" class="- topic/link "><linktext class="- topic/linktext ">actualLocaleIDName</linktext></link></related-links></apiValue></apiClassifier></apiPackage>