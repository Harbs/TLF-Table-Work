<?xml version="1.0" encoding="UTF-8"?>
<!--

  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.

-->
<apiPackage xmlns:ditaarch="http://dita.oasis-open.org/architecture/2005/" id="flash.system" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiPackage/apiPackage "><apiName class="- topic/title reference/title apiRef/apiName ">flash.system</apiName><apiDetail class="- topic/body reference/refbody apiRef/apiDetail "/><apiClassifier languages="" id="flash.system:ImageDecodingPolicy" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">ImageDecodingPolicy</apiName><shortdesc class="- topic/shortdesc ">
 La classe ImageDecodingPolicy définit les valeurs de la propriété imageDecodingPolicy de la classe LoaderContext.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2.6" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">La classe ImageDecodingPolicy définit les valeurs de la propriété imageDecodingPolicy de la classe LoaderContext.
 
 </apiTipText></apiTipTexts><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 La classe ImageDecodingPolicy définit les valeurs de la propriété <codeph class="+ topic/ph pr-d/codeph ">imageDecodingPolicy</codeph> de la classe LoaderContext.
 
 </apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.system.xml#LoaderContext/imageDecodingPolicy" class="- topic/link "><linktext class="- topic/linktext ">LoaderContext.imageDecodingPolicy</linktext></link></related-links><apiValue id="flash.system:ImageDecodingPolicy:ON_DEMAND" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">ON_DEMAND</apiName><shortdesc class="- topic/shortdesc ">
	 Indique que l’image en cours de chargement sera décodée tant que cela sera nécessaire.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2.6" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">onDemand</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Indique que l’image en cours de chargement sera décodée tant que cela sera nécessaire.
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.system:ImageDecodingPolicy:ON_LOAD" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">ON_LOAD</apiName><shortdesc class="- topic/shortdesc ">
	 Indique que l’image sera décodée lorsqu’elle sera chargée, avant l’envoi de l’événement complete.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2.6" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">onLoad</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Indique que l’image sera décodée lorsqu’elle sera chargée, avant l’envoi de l’événement complete. 
	 
	 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.system:SystemUpdaterType" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">SystemUpdaterType</apiName><shortdesc class="- topic/shortdesc ">
	 La classe SystemUpdaterType fournit les constantes pour une mise à jour du système.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 La classe SystemUpdaterType fournit les constantes pour une mise à jour du système. Ces constantes sont utilisées dans la fonction <codeph class="+ topic/ph pr-d/codeph ">SystemUpdater.update()</codeph>.
	 
	 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Remarque</b> : l’API de SystemUpdater est prise en charge sur les plates-formes de bureau.</p>
	 </apiDesc></apiClassifierDetail><apiValue id="flash.system:SystemUpdaterType:DRM" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">DRM</apiName><shortdesc class="- topic/shortdesc ">
		Met à jour le module DRM.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">drm</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		Met à jour le module DRM.
		</apiDesc></apiValueDetail></apiValue><apiValue id="flash.system:SystemUpdaterType:SYSTEM" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">SYSTEM</apiName><shortdesc class="- topic/shortdesc ">
		Met à jour le moteur d’exécution du lecteur.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">system</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		Met à jour le moteur d’exécution du lecteur.
		</apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.system:IMEConversionMode" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">IMEConversionMode</apiName><shortdesc class="- topic/shortdesc ">
 Cette classe contient des constantes à utiliser avec la propriété IME.conversionMode.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Cette classe contient des constantes à utiliser avec la propriété <codeph class="+ topic/ph pr-d/codeph ">IME.conversionMode</codeph>. La définition de <codeph class="+ topic/ph pr-d/codeph ">conversionMode</codeph> sur <codeph class="+ topic/ph pr-d/codeph ">ALPHANUMERIC_FULL</codeph> ou <codeph class="+ topic/ph pr-d/codeph ">JAPANESE_KATAKANA_FULL</codeph> force le lecteur à utiliser une police complète, tandis que <codeph class="+ topic/ph pr-d/codeph ">ALPHANUMERIC_HALF</codeph> ou <codeph class="+ topic/ph pr-d/codeph ">JAPANESE_KATAKANA_HALF</codeph> utilise une police de demi-largeur.
 </apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.system.xml#IME/conversionMode" class="- topic/link "><linktext class="- topic/linktext ">flash.system.IME.conversionMode</linktext></link></related-links><apiValue id="flash.system:IMEConversionMode:ALPHANUMERIC_FULL" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">ALPHANUMERIC_FULL</apiName><shortdesc class="- topic/shortdesc ">
	 La chaîne « ALPHANUMERIC_FULL » à utiliser avec la propriété IME.conversionMode.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">ALPHANUMERIC_FULL</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 La chaîne <codeph class="+ topic/ph pr-d/codeph ">"ALPHANUMERIC_FULL"</codeph> à utiliser avec la propriété <codeph class="+ topic/ph pr-d/codeph ">IME.conversionMode</codeph>. Cette constante est utilisée sur tous les IME. Utilisez la syntaxe <codeph class="+ topic/ph pr-d/codeph ">IMEConversionMode.ALPHANUMERIC_FULL</codeph>.
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.system.xml#IME/conversionMode" class="- topic/link "><linktext class="- topic/linktext ">flash.system.IME.conversionMode</linktext></link></related-links></apiValue><apiValue id="flash.system:IMEConversionMode:ALPHANUMERIC_HALF" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">ALPHANUMERIC_HALF</apiName><shortdesc class="- topic/shortdesc ">
	 La chaîne « ALPHANUMERIC_HALF » à utiliser avec la propriété IME.conversionMode.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">ALPHANUMERIC_HALF</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 La chaîne <codeph class="+ topic/ph pr-d/codeph ">"ALPHANUMERIC_HALF"</codeph> à utiliser avec la propriété <codeph class="+ topic/ph pr-d/codeph ">IME.conversionMode</codeph>. Cette constante est utilisée sur tous les IME. Utilisez la syntaxe <codeph class="+ topic/ph pr-d/codeph ">IMEConversionMode.ALPHANUMERIC_HALF</codeph>.
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.system.xml#IME/conversionMode" class="- topic/link "><linktext class="- topic/linktext ">flash.system.IME.conversionMode</linktext></link></related-links></apiValue><apiValue id="flash.system:IMEConversionMode:CHINESE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">CHINESE</apiName><shortdesc class="- topic/shortdesc ">
	 La chaîne « CHINESE » à utiliser avec la propriété IME.conversionMode.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">CHINESE</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 La chaîne <codeph class="+ topic/ph pr-d/codeph ">"CHINESE"</codeph> à utiliser avec la propriété <codeph class="+ topic/ph pr-d/codeph ">IME.conversionMode</codeph>. Cette constante est utilisée sur les IME chinois simplifié et traditionnel. Utilisez la syntaxe <codeph class="+ topic/ph pr-d/codeph ">IMEConversionMode.CHINESE</codeph>.
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.system.xml#IME/conversionMode" class="- topic/link "><linktext class="- topic/linktext ">flash.system.IME.conversionMode</linktext></link></related-links></apiValue><apiValue id="flash.system:IMEConversionMode:JAPANESE_HIRAGANA" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">JAPANESE_HIRAGANA</apiName><shortdesc class="- topic/shortdesc ">
	 La chaîne « JAPANESE_HIRAGANA » à utiliser avec la propriété IME.conversionMode.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">JAPANESE_HIRAGANA</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 La chaîne <codeph class="+ topic/ph pr-d/codeph ">"JAPANESE_HIRAGANA"</codeph> à utiliser avec la propriété <codeph class="+ topic/ph pr-d/codeph ">IME.conversionMode</codeph>. Cette constante est utilisée sur les IME japonais. Utilisez la syntaxe <codeph class="+ topic/ph pr-d/codeph ">IMEConversionMode.JAPANESE_HIRAGANA</codeph>.
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.system.xml#IME/conversionMode" class="- topic/link "><linktext class="- topic/linktext ">flash.system.IME.conversionMode</linktext></link></related-links></apiValue><apiValue id="flash.system:IMEConversionMode:JAPANESE_KATAKANA_FULL" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">JAPANESE_KATAKANA_FULL</apiName><shortdesc class="- topic/shortdesc ">
	 La chaîne « JAPANESE_KATAKANA_FULL » à utiliser avec la propriété IME.conversionMode.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">JAPANESE_KATAKANA_FULL</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 La chaîne <codeph class="+ topic/ph pr-d/codeph ">"JAPANESE_KATAKANA_FULL"</codeph> à utiliser avec la propriété <codeph class="+ topic/ph pr-d/codeph ">IME.conversionMode</codeph>. Cette constante est utilisée sur les IME japonais. Utilisez la syntaxe <codeph class="+ topic/ph pr-d/codeph ">IMEConversionMode.JAPANESE_KATAKANA_FULL</codeph>.
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.system.xml#IME/conversionMode" class="- topic/link "><linktext class="- topic/linktext ">flash.system.IME.conversionMode</linktext></link></related-links></apiValue><apiValue id="flash.system:IMEConversionMode:JAPANESE_KATAKANA_HALF" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">JAPANESE_KATAKANA_HALF</apiName><shortdesc class="- topic/shortdesc ">
	 La chaîne « JAPANESE_KATAKANA_HALF » à utiliser avec la propriété IME.conversionMode.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">JAPANESE_KATAKANA_HALF</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 La chaîne <codeph class="+ topic/ph pr-d/codeph ">"JAPANESE_KATAKANA_HALF"</codeph> à utiliser avec la propriété <codeph class="+ topic/ph pr-d/codeph ">IME.conversionMode</codeph>. Cette constante est utilisée sur les IME japonais. Utilisez la syntaxe <codeph class="+ topic/ph pr-d/codeph ">IMEConversionMode.JAPANESE_KATAKANA_HALF</codeph>.
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.system.xml#IME/conversionMode" class="- topic/link "><linktext class="- topic/linktext ">flash.system.IME.conversionMode</linktext></link></related-links></apiValue><apiValue id="flash.system:IMEConversionMode:KOREAN" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">KOREAN</apiName><shortdesc class="- topic/shortdesc ">
	 La chaîne « KOREAN » à utiliser avec la propriété IME.conversionMode.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">KOREAN</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 La chaîne <codeph class="+ topic/ph pr-d/codeph ">"KOREAN"</codeph> à utiliser avec la propriété <codeph class="+ topic/ph pr-d/codeph ">IME.conversionMode</codeph>. Cette constante est utilisée sur les IME coréens. Utilisez la syntaxe <codeph class="+ topic/ph pr-d/codeph ">IMEConversionMode.KOREAN</codeph>.
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.system.xml#IME/conversionMode" class="- topic/link "><linktext class="- topic/linktext ">flash.system.IME.conversionMode</linktext></link></related-links></apiValue><apiValue id="flash.system:IMEConversionMode:UNKNOWN" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">UNKNOWN</apiName><shortdesc class="- topic/shortdesc ">
	 La chaîne « UNKNOWN » qui peut être renvoyée par un appel à la propriété IME.conversionMode.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">UNKNOWN</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 La chaîne <codeph class="+ topic/ph pr-d/codeph ">"UNKNOWN"</codeph> qui peut être renvoyée par un appel à la propriété <codeph class="+ topic/ph pr-d/codeph ">IME.conversionMode</codeph>. Cette valeur ne peut pas être définie et n’est renvoyée que si le lecteur n’est pas en mesure d’identifier l’IME actif. Utilisez la syntaxe <codeph class="+ topic/ph pr-d/codeph ">IMEConversionMode.UNKNOWN</codeph>.
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.system.xml#IME/conversionMode" class="- topic/link "><linktext class="- topic/linktext ">flash.system.IME.conversionMode</linktext></link></related-links></apiValue></apiClassifier><apiClassifier languages="" id="flash.system:SecurityPanel" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">SecurityPanel</apiName><shortdesc class="- topic/shortdesc ">
 La classe SecurityPanel fournit des valeurs pour spécifier le panneau Paramètres de sécurité à afficher.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 La classe SecurityPanel fournit des valeurs pour spécifier le panneau Paramètres de sécurité à afficher.
 
 <p class="- topic/p ">Cette classe contient des constantes statiques qui sont utilisées avec la méthode <codeph class="+ topic/ph pr-d/codeph ">Security.showSettings()</codeph>. Vous ne pouvez pas créer d’occurrences de la classe SecurityPanel.</p>
 
 </apiDesc><example conref="examples\SecurityExample.as" class="- topic/example "> L’exemple suivant indique comment un événement <codeph class="+ topic/ph pr-d/codeph ">click</codeph> sur un objet Sprite permet d’afficher le panneau des paramètres de stockage local de la boîte de dialogue Paramètres de Flash Player. Un cadre orange est ajouté à la scène à l’aide de la méthode <codeph class="+ topic/ph pr-d/codeph ">draw()</codeph>. Dans <codeph class="+ topic/ph pr-d/codeph ">draw()</codeph>, un écouteur de l’événement <codeph class="+ topic/ph pr-d/codeph ">click</codeph> est ajouté sous le nom <codeph class="+ topic/ph pr-d/codeph ">clickHandler()</codeph>. Il répond aux événements <codeph class="+ topic/ph pr-d/codeph ">click</codeph> en ouvrant le panneau des paramètres de stockage local de Flash Player.
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
package {
    import flash.display.Sprite;
    import flash.text.TextField;
    import flash.events.*;
    import flash.system.Security;
    import flash.system.SecurityPanel;

    public class SecurityExample extends Sprite {
        private var bgColor:uint = 0xFFCC00;
        private var size:uint = 100;

        public function SecurityExample() {
            draw();
        }

        private function draw():void {
            var child:Sprite = new Sprite();
            child.graphics.beginFill(bgColor);
            child.graphics.drawRect(0, 0, size, size);
            child.graphics.endFill();
            child.buttonMode = true;

            var label:TextField = new TextField();
            label.text = "settings";
            label.selectable = false;
            label.mouseEnabled = false;
            child.addChild(label);

            child.addEventListener(MouseEvent.CLICK, clickHandler);
            addChild(child);
        }

        private function clickHandler(event:MouseEvent):void {
            Security.showSettings(SecurityPanel.LOCAL_STORAGE);
        }
    }
}
</codeblock></example></apiClassifierDetail><apiValue id="flash.system:SecurityPanel:CAMERA" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">CAMERA</apiName><shortdesc class="- topic/shortdesc ">
	 Si transmis à Security.showSettings(), affiche le panneau Caméra dans la section Paramètres de Flash Player.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">Security, Security.CAMERA, CAMERA
	  
	  </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">camera</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Si transmis à <codeph class="+ topic/ph pr-d/codeph ">Security.showSettings()</codeph>, affiche le panneau Caméra dans la section Paramètres de Flash Player.
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.system.xml#Security/showSettings()" class="- topic/link "><linktext class="- topic/linktext ">Security.showSettings()</linktext></link></related-links></apiValue><apiValue id="flash.system:SecurityPanel:DEFAULT" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">DEFAULT</apiName><shortdesc class="- topic/shortdesc ">
	 Si transmis à Security.showSettings(), affiche le dernier panneau activé par l’utilisateur avant la fermeture de Paramètres de Flash Player.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">Security, Security.DEFAULT, DEFAULT
	  
	  </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">default</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Si transmis à <codeph class="+ topic/ph pr-d/codeph ">Security.showSettings()</codeph>, affiche le dernier panneau activé par l’utilisateur avant la fermeture de Paramètres de Flash Player.
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.system.xml#Security/showSettings()" class="- topic/link "><linktext class="- topic/linktext ">Security.showSettings()</linktext></link></related-links></apiValue><apiValue id="flash.system:SecurityPanel:DISPLAY" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">DISPLAY</apiName><shortdesc class="- topic/shortdesc ">
	 Si transmis à Security.showSettings(), affiche le panneau d’affichage dans la section Paramètres de Flash Player.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">Security, Security.DISPLAY, DISPLAY
	  
	  </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">display</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Si transmis à <codeph class="+ topic/ph pr-d/codeph ">Security.showSettings()</codeph>, affiche le panneau d’affichage dans la section Paramètres de Flash Player.
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.system.xml#Security/showSettings()" class="- topic/link "><linktext class="- topic/linktext ">Security.showSettings()</linktext></link></related-links></apiValue><apiValue id="flash.system:SecurityPanel:LOCAL_STORAGE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">LOCAL_STORAGE</apiName><shortdesc class="- topic/shortdesc ">
	 Si transmis à Security.showSettings(), affiche le panneau des paramètres de stockage local dans la section Paramètres de Flash Player.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">Security, Security.LOCAL_STORAGE, LOCAL_STORAGE
	  
	  </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">localStorage</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Si transmis à <codeph class="+ topic/ph pr-d/codeph ">Security.showSettings()</codeph>, affiche le panneau des paramètres de stockage local dans la section Paramètres de Flash Player.
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.system.xml#Security/showSettings()" class="- topic/link "><linktext class="- topic/linktext ">Security.showSettings()</linktext></link></related-links></apiValue><apiValue id="flash.system:SecurityPanel:MICROPHONE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">MICROPHONE</apiName><shortdesc class="- topic/shortdesc ">
	 Si transmis à Security.showSettings(), affiche le panneau Microphone dans la section Paramètres de Flash Player.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">Security, Security.MICROPHONE, MICROPHONE
	  
	  </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">microphone</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Si transmis à <codeph class="+ topic/ph pr-d/codeph ">Security.showSettings()</codeph>, affiche le panneau Microphone dans la section Paramètres de Flash Player.
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.system.xml#Security/showSettings()" class="- topic/link "><linktext class="- topic/linktext ">Security.showSettings()</linktext></link></related-links></apiValue><apiValue id="flash.system:SecurityPanel:PRIVACY" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">PRIVACY</apiName><shortdesc class="- topic/shortdesc ">
	 Si transmis à Security.showSettings(), affiche le panneau des paramètres de confidentialité dans la section Paramètres de Flash Player.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">Security, Security.PRIVACY, PRIVACY
	  
	  </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">privacy</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Si transmis à <codeph class="+ topic/ph pr-d/codeph ">Security.showSettings()</codeph>, affiche le panneau des paramètres de confidentialité dans la section Paramètres de Flash Player.
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.system.xml#Security/showSettings()" class="- topic/link "><linktext class="- topic/linktext ">Security.showSettings()</linktext></link></related-links></apiValue><apiValue id="flash.system:SecurityPanel:SETTINGS_MANAGER" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">SETTINGS_MANAGER</apiName><shortdesc class="- topic/shortdesc ">
	 Si transmis à Security.showSettings(), affiche le gestionnaire de paramètres (dans une fenêtre distincte du navigateur).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">Security, Security.SETTINGS_MANAGER, SETTINGS_MANAGER
	  
	  </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">settingsManager</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Si transmis à <codeph class="+ topic/ph pr-d/codeph ">Security.showSettings()</codeph>, affiche le gestionnaire de paramètres (dans une autre fenêtre du navigateur).
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.system.xml#Security/showSettings()" class="- topic/link "><linktext class="- topic/linktext ">Security.showSettings()</linktext></link></related-links></apiValue></apiClassifier><apiClassifier languages="" id="flash.system:TouchscreenType" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">TouchscreenType</apiName><shortdesc class="- topic/shortdesc ">
 La classe TouchscreenType est une classe d’énumération qui fournit des valeurs pour les différents types d’écrans tactiles.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 La classe TouchscreenType est une classe d’énumération qui fournit des valeurs pour les différents types d’écrans tactiles.
 
 <p class="- topic/p ">Utilisez les valeurs définies par la classe TouchscreenType avec la propriété <codeph class="+ topic/ph pr-d/codeph ">Capabilities.touchscreenType</codeph>.</p>
 
 </apiDesc><example conref="examples\KeyboardType.as" class="- topic/example "> L'exemple suivant est un test simple qui indique l'état actuel des touches « Verrouillage numérique » et « Verrouillage majuscules » ainsi que le type de clavier et le type d'écran tactile dans l'environnement en cours d'exécution. Lors du test de cet exemple, cliquez sur la zone de texte pour afficher les valeurs de la propriété :
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
import flash.events.~~;
import flash.display.~~;
import flash.ui.Keyboard;
import flash.system.Capabilities;
import flash.text.TextField;


var keyboardInfoTxt:TextField = new TextField();
keyboardInfoTxt.x = 30;
keyboardInfoTxt.y = 50;
keyboardInfoTxt.width = 300;
keyboardInfoTxt.height = 100;
keyboardInfoTxt.border = true;

addChild(keyboardInfoTxt);

addEventListener (MouseEvent.CLICK, getScreenKeyboardType);

function getScreenKeyboardType(e:MouseEvent):void{
    keyboardInfoTxt.text= "Caps Lock is : " + String(flash.ui.Keyboard.capsLock)+ "\n" + 
    "Num Lock is : " + String(flash.ui.Keyboard.numLock) +"\n" + 
    "Has Virtual Keyboard : " + String(flash.ui.Keyboard.hasVirtualKeyboard) + "\n" + 
    "Physical Keyboard Type : " + flash.ui.Keyboard.physicalKeyboardType + "\n" + 
    "flash.system.Capabilities.touchscreenType is : " + flash.system.Capabilities.touchscreenType;
}
</codeblock></example></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.system.xml#Capabilities/touchscreenType" class="- topic/link "><linktext class="- topic/linktext ">Capabilities.touchscreenType</linktext></link><link href="flash.ui.xml#Mouse/supportsCursor" class="- topic/link "><linktext class="- topic/linktext ">flash.ui.Mouse.supportsCursor</linktext></link></related-links><apiValue id="flash.system:TouchscreenType:FINGER" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">FINGER</apiName><shortdesc class="- topic/shortdesc ">
	 Ecran tactile conçu pour répondre aux appuis avec les doigts. </shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">finger</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Ecran tactile conçu pour répondre aux appuis avec les doigts. 
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.system:TouchscreenType:NONE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">NONE</apiName><shortdesc class="- topic/shortdesc ">
	 L’ordinateur ou le périphérique ne dispose pas d’un tactile tactile pris en charge.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">none</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 L’ordinateur ou le périphérique ne dispose pas d’un tactile tactile pris en charge.
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.system:TouchscreenType:STYLUS" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">STYLUS</apiName><shortdesc class="- topic/shortdesc ">
	 Ecran tactile conçu pour une utilisation avec un stylet.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">stylus</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Ecran tactile conçu pour une utilisation avec un stylet.
	 
	 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.system:ApplicationDomain" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">ApplicationDomain</apiName><shortdesc class="- topic/shortdesc ">
 La classe ApplicationDomain est un conteneur pour les groupes discrets de définitions de classes.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><internal>Security considerations for application domains are discussed in the 
 applicationDomain property entries of URLRequest and LoaderInfo. 
 
 </internal></asCustoms></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 La classe ApplicationDomain est un conteneur pour les groupes discrets de définitions de classes. Les domaines d’application sont utilisés pour créer des partitions entre les classes qui appartiennent au même domaine de sécurité. Ils autorisent des définitions multiples de la même classe et permettent aux enfants de recycler les définitions des parents.
 
 <p class="- topic/p ">Les domaines d’application sont utilisés lorsqu’un fichier SWF externe est chargé à l’aide de la classe Loader. Toutes les définitions ActionScript 3.0 du fichier SWF chargé sont stockées dans le domaine d’application, qui est spécifié par la propriété <codeph class="+ topic/ph pr-d/codeph ">applicationDomain</codeph> de l’objet LoaderContext que vous transmettez en tant que paramètre <codeph class="+ topic/ph pr-d/codeph ">context</codeph> de la méthode <codeph class="+ topic/ph pr-d/codeph ">load()</codeph> ou <codeph class="+ topic/ph pr-d/codeph ">loadBytes()</codeph> de l’objet Loader. L’objet LoaderInfo contient également une propriété <codeph class="+ topic/ph pr-d/codeph ">applicationDomain</codeph> en lecture seule.</p>
 
 <p class="- topic/p ">L’ensemble du code d’un fichier SWF est défini de sorte à exister dans un domaine d’application. Votre application principale s’exécute dans le domaine d’application en cours. Le domaine du système contient tous les domaines d’application, y compris le domaine en cours ; il contient donc toutes les classes Flash Player.</p>
 
 <p class="- topic/p ">A l’exception du domaine du système, tous les domaines d’application sont associés à un domaine du parent. Le domaine parent du domaine d’application de votre application principale est le domaine système. Les classes chargées ne sont définies que si leur parent ne les définit pas encore. Vous ne pouvez pas remplacer une définition de classe chargée par une définition plus récente.</p>
 
 <p class="- topic/p ">Pour obtenir des exemples d’utilisation de domaines d’application, voir le <i class="+ topic/ph hi-d/i ">Guide du développeur d’ActionScript 3.0</i>.</p>
 
 <p class="- topic/p ">La fonction constructeur <codeph class="+ topic/ph pr-d/codeph ">ApplicationDomain()</codeph> permet de créer un objet ApplicationDomain.</p>
 
 </apiDesc><example conref="examples\ApplicationDomainExample.as" class="- topic/example "> L’exemple suivant illustre le chargement de la classe pendant la période d’exécution, ainsi que les différentes façons d’appeler les méthodes publiques d’une classe qui réside dans un autre fichier SWF.
 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Remarques :</b></p>
 <ul class="- topic/ul "><li class="- topic/li ">Dans la mesure où la classe ClassLoader charge un fichier SWF, la sécurité locale doit porter au niveau du système de fichiers.</li><li class="- topic/li ">Pour exécuter cet exemple, vous devez disposer d’un fichier swf appelé RuntimeClasses.swf et présent dans le même dossier que le fichier ApplicationDomainExample.swf.</li></ul>
 
 <p class="- topic/p ">Commencez par créer le fichier RuntimeClasses.swf à partir du code suivant :</p>
 <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
 package {
   import flash.display.Sprite;
   public class RuntimeClasses extends Sprite
   {
     public function RuntimeClasses()
     {}
      
     public function greet():String {
       return("Hello World");
     }
   }
 }
 </codeblock>
 
 <p class="- topic/p ">Mettez ensuite en œuvre le code suivant :</p>
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">

package {
    import flash.display.DisplayObject;
    import flash.display.Sprite;
    import flash.errors.IllegalOperationError;
    import flash.events.Event;
    import flash.text.TextField;

    public class ApplicationDomainExample extends Sprite {
        private var loader:ClassLoader;
        private var tf:TextField = new TextField();

        public function ApplicationDomainExample() {
            addChild(tf);

            loader = new ClassLoader();
            loader.addEventListener(ClassLoader.LOAD_ERROR,loadErrorHandler);
            loader.addEventListener(ClassLoader.CLASS_LOADED,classLoadedHandler);
            loader.load("RuntimeClasses.swf");
        }

        private function loadErrorHandler(e:Event):void {
            tf.text = "Load failed";
            throw new IllegalOperationError("Cannot load the specified file.");
        }

        private function classLoadedHandler(e:Event):void {
            var runtimeClassRef:Class = loader.getClass("RuntimeClasses");
            var greeter:Object = new runtimeClassRef();

            tf.text = greeter.greet();
        }
    }
}

import flash.display.Loader;
import flash.errors.IllegalOperationError;
import flash.events.Event;
import flash.events.EventDispatcher;
import flash.events.IOErrorEvent;
import flash.events.SecurityErrorEvent;
import flash.net.URLRequest;
import flash.system.ApplicationDomain;
import flash.system.LoaderContext;

class ClassLoader extends EventDispatcher {
    public static var CLASS_LOADED:String = "classLoaded";
    public static var LOAD_ERROR:String = "loadError";
    private var loader:Loader;
    private var swfLib:String;
    private var request:URLRequest;
    private var loadedClass:Class;

    public function ClassLoader() {

        loader = new Loader();
        loader.contentLoaderInfo.addEventListener(Event.COMPLETE,completeHandler);
        loader.contentLoaderInfo.addEventListener(IOErrorEvent.IO_ERROR,ioErrorHandler);
        loader.contentLoaderInfo.addEventListener(SecurityErrorEvent.SECURITY_ERROR,securityErrorHandler);
    }

    public function load(lib:String):void {
        swfLib = lib;
        request = new URLRequest(swfLib);
        var context:LoaderContext = new LoaderContext();
        context.applicationDomain=ApplicationDomain.currentDomain;
        loader.load(request,context);
    }

    public function getClass(className:String):Class {
        try {
            return loader.contentLoaderInfo.applicationDomain.getDefinition(className)  as  Class;
        } catch (e:Error) {
            throw new IllegalOperationError(className + " definition not found in " + swfLib);
        }
        return null;
    }

    private function completeHandler(e:Event):void {
        dispatchEvent(new Event(ClassLoader.CLASS_LOADED));
    }

    private function ioErrorHandler(e:Event):void {
        dispatchEvent(new Event(ClassLoader.LOAD_ERROR));
    }

    private function securityErrorHandler(e:Event):void {
        dispatchEvent(new Event(ClassLoader.LOAD_ERROR));
    }
}
</codeblock></example><example conref="examples\ApplicationDomainExample.2.as" class="- topic/example "> Si plusieurs fichiers SWF contiennent des classes compilées sous le même nom, mais avec des mises en œuvre différentes, vous pouvez séparer les classes des fichiers SWF chargés de façon externe, comme l’illustre l’exemple suivant. Précédemment, le fichier SWF enfant devait utiliser <codeph class="+ topic/ph pr-d/codeph ">ApplicationDomain.currentDomain</codeph>. Dans ce cas, un nouvel objet <codeph class="+ topic/ph pr-d/codeph ">ApplicationDomain</codeph> est créé, de façon à ce que les propriétés et les méthodes de la classe <codeph class="+ topic/ph pr-d/codeph ">Greeter</codeph> qui sont chargées en deuxième ne remplacent pas les propriétés et les méthodes de la première classe <codeph class="+ topic/ph pr-d/codeph ">Greeter</codeph>. Vous pouvez tester ceci en modifiant la propriété <codeph class="+ topic/ph pr-d/codeph ">context.applicationDomain</codeph> de la méthode <codeph class="+ topic/ph pr-d/codeph ">load</codeph> de <codeph class="+ topic/ph pr-d/codeph ">ClassLoader</codeph>.
 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Remarques :</b></p>
 <ul class="- topic/ul "><li class="- topic/li ">Dans la mesure où la classe ClassLoader charge un fichier SWF, la sécurité locale doit porter au niveau du système de fichiers.</li><li class="- topic/li ">Pour exécuter cet exemple, vous devez disposer de deux fichiers SWF appelés Greeter.swf et présents dans les dossiers « en » et « es ».</li></ul>
 
 <p class="- topic/p ">Créez un fichier Greeter.as dans le répertoire « en » avec le code suivant :</p>
 <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
 package {
    import flash.display.Sprite;
    public class Greeter extends Sprite
    {
        public function Greeter()
        {
        }
        
        public function greet():String {
            return("Good Morning");
        }
    }
 }
 </codeblock>
 <p class="- topic/p ">Créez ensuite un fichier Greeter.as similaire dans le répertoire « es » :</p>
 
 <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
 package {
    import flash.display.Sprite;
    public class Greeter extends Sprite
    {
        public function Greeter()
        {
        }
        
        public function greet():String {
            return("Buenos Dias");
        }
    }
}
 </codeblock>
 
 <p class="- topic/p ">Compilez les fichiers SWF de ces deux dossiers, puis mettez en œuvre le code suivant :</p>
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
package {
    import flash.display.DisplayObject;
    import flash.display.Sprite;
    import flash.errors.IllegalOperationError;
    import flash.events.Event;
    import flash.text.TextField;
    import flash.text.TextFieldAutoSize;

    public class ApplicationDomainExample2 extends Sprite {
        private var spanishGreeterLoader:ClassLoader;
        private var englishGreeterLoader:ClassLoader;
        private var tf:TextField = new TextField();
        private var greetersLoaded:uint = 0;

        public function ApplicationDomainExample2() {
            tf.autoSize = TextFieldAutoSize.LEFT;
            addChild(tf);

            spanishGreeterLoader = new ClassLoader();
            spanishGreeterLoader.addEventListener(ClassLoader.LOAD_ERROR,loadErrorHandler);
            spanishGreeterLoader.addEventListener(ClassLoader.CLASS_LOADED,classLoadedHandler);
            spanishGreeterLoader.load("es/Greeter.swf");
            
            englishGreeterLoader = new ClassLoader();
            englishGreeterLoader.addEventListener(ClassLoader.LOAD_ERROR,loadErrorHandler);
            englishGreeterLoader.addEventListener(ClassLoader.CLASS_LOADED,classLoadedHandler);
            englishGreeterLoader.load("en/Greeter.swf");
        }

        private function loadErrorHandler(e:Event):void {
            tf.text = "Load failed";
            throw new IllegalOperationError("Cannot load the specified file.");
        }

        private function classLoadedHandler(e:Event):void {
            greetersLoaded++;
            if(greetersLoaded == 2) {
                greet();    
            }
        }
        
        private function greet():void {
            var spanishGreeter:Class = spanishGreeterLoader.getClass("Greeter");
            var englishGreeter:Class = englishGreeterLoader.getClass("Greeter");
            var greeter1 = new spanishGreeter();
            var greeter2 = new englishGreeter();
            
            tf.text = greeter1.greet() + "\n" + greeter2.greet();
        }
    }
}

import flash.display.Loader;
import flash.errors.IllegalOperationError;
import flash.events.Event;
import flash.events.EventDispatcher;
import flash.events.IOErrorEvent;
import flash.events.SecurityErrorEvent;
import flash.net.URLRequest;
import flash.system.ApplicationDomain;
import flash.system.LoaderContext;

class ClassLoader extends EventDispatcher {
    public static var CLASS_LOADED:String = "classLoaded";
    public static var LOAD_ERROR:String = "loadError";
    private var loader:Loader;
    private var swfLib:String;
    private var request:URLRequest;
    private var loadedClass:Class;

    public function ClassLoader() {

        loader = new Loader();
        loader.contentLoaderInfo.addEventListener(Event.COMPLETE,completeHandler);
        loader.contentLoaderInfo.addEventListener(IOErrorEvent.IO_ERROR,ioErrorHandler);
        loader.contentLoaderInfo.addEventListener(SecurityErrorEvent.SECURITY_ERROR,securityErrorHandler);
    }

    public function load(lib:String):void {
        swfLib = lib;
        request = new URLRequest(swfLib);
        var context:LoaderContext = new LoaderContext();
//        context.applicationDomain = ApplicationDomain.currentDomain;
        context.applicationDomain = new ApplicationDomain();
        loader.load(request,context);
    }

    public function getClass(className:String):Class {
        try {
            return loader.contentLoaderInfo.applicationDomain.getDefinition(className)  as  Class;
        } catch (e:Error) {
            throw new IllegalOperationError(className + " definition not found in " + swfLib);
        }
        return null;
    }

    private function completeHandler(e:Event):void {
        dispatchEvent(new Event(ClassLoader.CLASS_LOADED));
    }

    private function ioErrorHandler(e:Event):void {
        dispatchEvent(new Event(ClassLoader.LOAD_ERROR));
    }

    private function securityErrorHandler(e:Event):void {
        dispatchEvent(new Event(ClassLoader.LOAD_ERROR));
    }
}
</codeblock></example></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.display.xml#Loader/load()" class="- topic/link "><linktext class="- topic/linktext ">flash.display.Loader.load()</linktext></link><link href="flash.display.xml#Loader/loadBytes()" class="- topic/link "><linktext class="- topic/linktext ">flash.display.Loader.loadBytes()</linktext></link><link href="flash.display.xml#LoaderInfo" class="- topic/link "><linktext class="- topic/linktext ">flash.display.LoaderInfo</linktext></link><link href="flash.net.xml#URLRequest" class="- topic/link "><linktext class="- topic/linktext ">flash.net.URLRequest</linktext></link><link href="flash.system.xml#LoaderContext" class="- topic/link "><linktext class="- topic/linktext ">flash.system.LoaderContext</linktext></link></related-links><apiConstructor id="flash.system:ApplicationDomain:ApplicationDomain" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">ApplicationDomain</apiName><shortdesc class="- topic/shortdesc ">
     Crée un domaine d’application.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">parentDomain</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.system:ApplicationDomain</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Si aucun domaine parent n’est transmis, ce domaine d’application prend le domaine système en tant que parent.
     
     </apiDesc></apiParam><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">
     </apiTipText></apiTipTexts></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Crée un domaine d’application.
     
     </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="flash.system:ApplicationDomain:getDefinition" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">getDefinition</apiName><shortdesc class="- topic/shortdesc ">
     Extrait une définition publique du domaine d’application spécifié.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><internal>throws SecurityError The definition belongs to a domain to which
     the calling code does not have access.
     
     </internal></asCustoms></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Aucune définition publique n’existe sous le nom spécifié.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ReferenceError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ReferenceError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Objet associé à la définition.
     
     </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Object</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">name</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Le nom de la définition.
     </apiDesc></apiParam><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">
     </apiTipText></apiTipTexts></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Extrait une définition publique du domaine d’application spécifié. La définition peut appartenir à une classe, un nom d’espace ou une fonction.
     
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.system:ApplicationDomain:hasDefinition" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">hasDefinition</apiName><shortdesc class="- topic/shortdesc ">
     Vérifie si une définition publique existe au sein du domaine d’application spécifié.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Valeur <codeph class="+ topic/ph pr-d/codeph ">true</codeph> si la définition spécifiée existe, <codeph class="+ topic/ph pr-d/codeph ">false</codeph> dans le cas contraire.
     
     </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">name</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Le nom de la définition.
     </apiDesc></apiParam><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">
     </apiTipText></apiTipTexts></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Vérifie si une définition publique existe au sein du domaine d’application spécifié. La définition peut appartenir à une classe, un nom d’espace ou une fonction.
     
     </apiDesc></apiOperationDetail></apiOperation><apiValue id="flash.system:ApplicationDomain:MIN_DOMAIN_MEMORY_LENGTH:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">MIN_DOMAIN_MEMORY_LENGTH</apiName><shortdesc class="- topic/shortdesc ">
     Extrait la longueur minimale de l’objet de mémoire qui doit être utilisée comme ApplicationDomain.domainMemory.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">uint</apiValueClassifier><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">
     </apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Extrait la longueur minimale de l’objet de mémoire qui doit être utilisée comme ApplicationDomain.domainMemory.
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.system:ApplicationDomain:currentDomain:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">currentDomain</apiName><shortdesc class="- topic/shortdesc ">
     Extrait le domaine d’application actuel où le code est en cours d’exécution.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><internal>Question: Do you call System.currentDomain? or Loader.currentDomain or request.currentDomain?
     
     </internal></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.system:ApplicationDomain</apiValueClassifier><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">
     </apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Extrait le domaine d’application actuel où le code est en cours d’exécution.
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.system:ApplicationDomain:domainMemory:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">domainMemory</apiName><shortdesc class="- topic/shortdesc ">
     Extrait et définit l’objet sur lequel les opérations de mémoire s’appliquent pour tout le domaine au sein de ce ApplicationDomain.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.utils:ByteArray</apiValueClassifier><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">
     </apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Extrait et définit l’objet sur lequel les opérations de mémoire s’appliquent pour tout le domaine au sein de ce ApplicationDomain.
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.system:ApplicationDomain:parentDomain:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">parentDomain</apiName><shortdesc class="- topic/shortdesc ">
     Définit le domaine parent de ce domaine d’application.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.system:ApplicationDomain</apiValueClassifier><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">
     </apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Définit le domaine parent de ce domaine d’application.
     
     </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.system:Security" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">Security</apiName><shortdesc class="- topic/shortdesc ">
 La classe Security permet de spécifier la façon dont le contenu peut communiquer dans différents domaines.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">Security, XMLNode object, built-in class
  
  </keyword></asCustoms></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 La classe Security permet de spécifier la façon dont le contenu peut communiquer dans différents domaines.
 
 </apiDesc><example conref="examples\SecurityExample.as" class="- topic/example "> L’exemple suivant indique comment un événement <codeph class="+ topic/ph pr-d/codeph ">click</codeph> sur un objet Sprite permet d’afficher le panneau des paramètres de stockage local de la boîte de dialogue Paramètres de Flash Player. Un cadre orange est ajouté à la scène à l’aide de la méthode <codeph class="+ topic/ph pr-d/codeph ">draw()</codeph>. Dans <codeph class="+ topic/ph pr-d/codeph ">draw()</codeph>, un écouteur de l’événement <codeph class="+ topic/ph pr-d/codeph ">click</codeph> est ajouté sous le nom <codeph class="+ topic/ph pr-d/codeph ">clickHandler()</codeph>. Il répond aux événements <codeph class="+ topic/ph pr-d/codeph ">click</codeph> en ouvrant le panneau des paramètres de stockage local de Flash Player.
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
package {
    import flash.display.Sprite;
    import flash.text.TextField;
    import flash.events.*;
    import flash.system.Security;
    import flash.system.SecurityPanel;

    public class SecurityExample extends Sprite {
        private var bgColor:uint = 0xFFCC00;
        private var size:uint = 100;

        public function SecurityExample() {
            draw();
        }

        private function draw():void {
            var child:Sprite = new Sprite();
            child.graphics.beginFill(bgColor);
            child.graphics.drawRect(0, 0, size, size);
            child.graphics.endFill();
            child.buttonMode = true;

            var label:TextField = new TextField();
            label.text = "settings";
            label.selectable = false;
            label.mouseEnabled = false;
            child.addChild(label);

            child.addEventListener(MouseEvent.CLICK, clickHandler);
            addChild(child);
        }

        private function clickHandler(event:MouseEvent):void {
            Security.showSettings(SecurityPanel.LOCAL_STORAGE);
        }
    }
}
</codeblock></example></apiClassifierDetail><apiOperation id="flash.system:Security:allowDomain" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">allowDomain</apiName><shortdesc class="- topic/shortdesc ">
     Permet aux fichiers SWF figurant dans les domaines identifiés d’accéder aux objets et aux variables du fichier SWF qui contient l’appel à allowDomain().</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">Security, Security.allowDomain, allowDomain
      
      </keyword></asCustoms></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">L’appel de cette méthode depuis le code dans le sandbox de sécurité de l’application AIR émet une exception SecurityError. Le contenu situé en dehors du sandbox de sécurité de l’application ne peut pas effectuer la programmation croisée du contenu du sandbox de sécurité de l’application. 
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">SecurityError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">SecurityError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">domains</apiItemName><apiType value="restParam" name="type" class="- topic/state reference/state apiRef/apiType "/><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Une ou plusieurs chaînes ou objets URLRequest qui nomment les domaines à partir desquels vous souhaitez autoriser l’accès. Vous pouvez spécifier le domaine spécial « ~~ » pour autoriser l’accès à partir de tous les domaines.  
     
     <p class="- topic/p ">Dans Flash Professional, la spécification de "~~" constitue l’unique façon d’accéder aux fichiers SWF non locaux à partir des fichiers SWF locaux ayant été publiés à l’aide du paramètre Accès au réseau uniquement de l’option Sécurité de lecture locale dans l’outil de création de Flash.</p>
     <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Remarque :</b> la valeur du caractère générique ne fonctionne pas pour les sous-domaines. Par exemple, vous ne pouvez pas utiliser <codeph class="+ topic/ph pr-d/codeph ">~~.foo.com</codeph> pour les paramètres <codeph class="+ topic/ph pr-d/codeph ">domains</codeph>. Bien que vous puissiez spécifier un sous-domaine avec une valeur de caractère générique pour un fichier de régulation interdomaines (comme dans <codeph class="+ topic/ph pr-d/codeph ">~~.foo.com</codeph>), vous ne pouvez pas utiliser une valeur de caractère générique de cette manière pour la méthode <codeph class="+ topic/ph pr-d/codeph ">allowDomain()</codeph>.</p>
     
     </apiDesc></apiParam><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Permet aux fichiers SWF et HTML d’accéder aux objets et aux variables du fichier SWF qui procède à l’appel.
     
     </apiTipText></apiTipTexts></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     <ph class="- topic/ph ">Permet aux fichiers SWF figurant dans les domaines identifiés d’accéder aux objets et aux variables du fichier SWF qui contient l’appel à <codeph class="+ topic/ph pr-d/codeph ">allowDomain()</codeph>. </ph>
     
     
     
     <p class="- topic/p "><i class="+ topic/ph hi-d/i ">Remarque :</i> l’appel de cette méthode depuis le code dans le sandbox de l’application AIR émet une exception SecurityError. Le contenu situé hors du domaine de sécurité de l’application ne peut pas effectuer la programmation croisée du contenu dans le sandbox de l’application. Toutefois, le contenu situé hors du sandbox de l’application peut communiquer avec le contenu du sandbox de sécurité de l’application par un pont sandbox.</p>
     
     <p class="- topic/p ">Si deux fichiers SWF sont servis à partir du même domaine, par exemple, http://mysite.com/swfA.swf et http://mysite.com/swfB.swf, alors swfA.swf peut alors analyser et modifier les variables, les objets, les propriétés, les méthodes, etc. dans swfB.swf et swfB.swf peut faire la même chose pour swfA.swf. Ceci est appelé <i class="+ topic/ph hi-d/i ">programmation entre plusieurs animations</i> ou <i class="+ topic/ph hi-d/i ">programmation croisée</i>.</p>
     
     <p class="- topic/p ">Si deux fichiers SWF sont servis à partir de domaines différents, par exemple, http://siteA.com/swfA.swf et http://siteB.com/siteB.swf, puis, par défaut, Flash Player n’autorise pas swfA.swf à créer un script pour swfB.swf, mais pas swfB.swf à créer un script pour swfA.swf. Un fichier SWF autorise les fichiers SWF provenant d’autres domaines en appelant <codeph class="+ topic/ph pr-d/codeph ">Security.allowDomain()</codeph>. Ceci s’appelle <i class="+ topic/ph hi-d/i ">programmation de scripts interdomaines</i>. En appelant <codeph class="+ topic/ph pr-d/codeph ">Security.allowDomain("siteA.com")</codeph>, siteB.swf autorise siteA.swf à créer un script le contrôlant.</p>
     
     <p class="- topic/p ">Dans tout contexte interdomaines, il est important d’identifier clairement les parties impliquées. Dans le cadre de cette discussion, le côté procédant à la programmation croisée sera appelé <i class="+ topic/ph hi-d/i ">partie procédant à l’accès</i> (habituellement le fichier SWF procédant à l’accès) et l’autre côté sera appelé <i class="+ topic/ph hi-d/i ">partie cible</i> (généralement le fichier SWF cible). Lorsque siteA.swf crée un script contrôlant siteB.swf, siteA.swf est la partie qui procède à l’accès et siteB.swf la partie réceptrice.</p>
     
     <p class="- topic/p "><adobeimage alt="Diagramme inter-domaines" href="../../images/crossScript_load.jpg" placement="inline" class="+ topic/image adobe-d/adobeimage "/></p>
     
     <p class="- topic/p ">Les autorisations interdomaines établies avec <codeph class="+ topic/ph pr-d/codeph ">allowDomain()</codeph> sont asymétriques. Dans l’exemple précédent, siteA.swf peut créer un script contrôlant siteB.swf, mais siteB.swf ne peut pas créer de script de contrôle de siteA.swf, car siteA.swf n’a pas appelé <codeph class="+ topic/ph pr-d/codeph ">allowDomain()</codeph> pour donner aux fichiers SWF de siteB.com l’autorisation de créer un script de contrôle. Vous pouvez définir des autorisations symétriques en faisant les deux fichiers SWF appeler <codeph class="+ topic/ph pr-d/codeph ">allowDomain()</codeph>.</p>
     
     <p class="- topic/p ">En dehors de la protection des fichiers SWF contre les scripts interdomaines provenant d’autres fichiers SWF, Flash Player protège également les fichiers SWF contre ce type de script provenant des fichiers HTML. La programmation HTML vers SWF peut se produire avec des fonctions anciennes du navigateur telles que <codeph class="+ topic/ph pr-d/codeph ">SetVariable</codeph> ou en appelant des fonctions de rappel établies avec <codeph class="+ topic/ph pr-d/codeph ">ExternalInterface.addCallback()</codeph>. Lorsque la programmation HTML vers SWF franchit les domaines, le SWF cible doit également appeler <codeph class="+ topic/ph pr-d/codeph ">allowDomain()</codeph>, comme s’il avait été appelé par un fichier SWF, faute de quoi l’opération échouera.</p>
     
     <p class="- topic/p ">La spécification de l’adresse IP en tant que paramètre pour <codeph class="+ topic/ph pr-d/codeph ">allowDomain()</codeph> n’autorise pas l’accès de toutes les parties provenant de l’adresse IP spécifiée. Par contre, elle autorise l’accès uniquement par une partie qui contient l’adresse IP spécifiée dans son URL, et non pas un nom de domaine qui renvoie à cette adresse IP.</p> 
     
     <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Différences liées à la version</b></p>
     <p class="- topic/p ">Les règles de sécurité interdomaines de Flash Player ont évolué de version en version. Le tableau suivant récapitule les différences.</p>
     
     <adobetable class="innertable"><tgroup cols="5" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Versions SWF les plus récentes impliquées dans les opérations de programmation croisée</entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">allowDomain()</codeph> nécessaire ?</entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">allowInsecureDomain()</codeph> nécessaire ?</entry><entry class="- topic/entry ">Quel fichier SWF doit appeler <codeph class="+ topic/ph pr-d/codeph ">allowDomain()</codeph> ou <codeph class="+ topic/ph pr-d/codeph ">allowInsecureDomain()</codeph> ?</entry><entry class="- topic/entry ">Qu’est-ce qui peut être spécifié dans <codeph class="+ topic/ph pr-d/codeph ">allowDomain()</codeph> ou <codeph class="+ topic/ph pr-d/codeph ">allowInsecureDomain()</codeph> ?</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry align="center" class="- topic/entry ">5 ou plus récente</entry><entry class="- topic/entry ">Non</entry><entry align="center" class="- topic/entry ">Non</entry><entry align="center" class="- topic/entry ">S/O</entry><entry align="center" class="- topic/entry ">S/O</entry></row><row class="- topic/row "><entry align="center" class="- topic/entry ">6</entry><entry class="- topic/entry ">Oui, si les super-domaines ne concordent pas</entry><entry align="center" class="- topic/entry ">Non</entry><entry class="- topic/entry ">Le fichier SWF en cours d’accès ou tout fichier SWF appartenant au même super-domaine que le fichier SWF en cours d’accès.</entry><entry class="- topic/entry "><ul class="- topic/ul "><li class="- topic/li ">Domaine de type texte (monsite.com)</li><li class="- topic/li ">Adresse IP (192.168.1.1)</li></ul></entry></row><row class="- topic/row "><entry align="center" class="- topic/entry ">7</entry><entry class="- topic/entry ">Oui, si les domaines ne concordent pas exactement</entry><entry class="- topic/entry ">Oui, en cas d’accès HTTP vers HTTPS (même si les domaines correspondent exactement)</entry><entry class="- topic/entry ">Le fichier SWF en cours d’accès ou tout fichier SWF appartenant exactement au même domaine que le fichier SWF en cours d’accès.</entry><entry class="- topic/entry "><ul class="- topic/ul "><li class="- topic/li ">Domaine de type texte (monsite.com)</li><li class="- topic/li ">Adresse IP (192.168.1.1)</li></ul></entry></row><row class="- topic/row "><entry align="center" class="- topic/entry ">8 ou plus récente</entry><entry class="- topic/entry ">Oui, si les domaines ne concordent pas exactement</entry><entry class="- topic/entry ">Oui, en cas d’accès HTTP vers HTTPS (même si les domaines correspondent exactement)</entry><entry class="- topic/entry ">Fichier SWF cible</entry><entry class="- topic/entry "><ul class="- topic/ul "><li class="- topic/li ">Domaine de type texte (monsite.com)</li><li class="- topic/li ">Adresse IP (192.168.1.1)</li><li class="- topic/li ">Caractère générique (~~)</li></ul></entry></row></tbody></tgroup></adobetable>
      
     <p class="- topic/p ">Les versions qui contrôlent le comportement de Flash Player désignent les <i class="+ topic/ph hi-d/i ">versions SWF</i> (la version publiée d’un fichier SWF), non pas la version de Flash Player. Par exemple, lorsque Flash Player 8 lit un fichier SWF publié par la version 7, il applique un comportement compatible à la version 7. Cette pratique permet de garantir que les mises à jour du lecteur ne changent pas le comportement de <codeph class="+ topic/ph pr-d/codeph ">Security.allowDomain()</codeph> dans les fichiers SWF déployés.</p>
     
     <p class="- topic/p ">La colonne Version du tableau précédent indique la version la plus récente des fichiers SWF lors des opérations de programmation croisée. Le comportement de Flash Player dépend de la version du fichier SWF procédant à l’accès ou du fichier SWF cible, en retenant la version supérieure.</p>
     
     <p class="- topic/p ">Les paragraphes suivants fournissent de plus amples informations sur les modifications de sécurité de Flash Player impliquant <codeph class="+ topic/ph pr-d/codeph ">Security.allowDomain()</codeph>.</p>
     
     <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Version 5</b>. Il n’y a aucune restriction de programmation de scripts interdomaines.</p>
     
     <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Version 6</b>. Des fonctions de sécurité contre la programmation interdomaines ont été introduites. Par défaut, Flash Player empêche la programmation interdomaines, tandis que <codeph class="+ topic/ph pr-d/codeph ">Security.allowDomain()</codeph> l’autorise. Pour déterminer si deux fichiers appartiennent au même domaine, Flash Player utilise le super-domaine de chaque fichier, qui correspond au nom d’hôte exact de l’URL du fichier, moins le premier segment, jusqu’à un minimum de deux segments. Par exemple, le super-domaine de www.mysite.com est mysite.com. Les fichiers SWF de www.mysite.com et store.mysite.com ne peuvent pas se contrôler mutuellement par script sans un appel à <codeph class="+ topic/ph pr-d/codeph ">Security.allowDomain()</codeph>.</p>
     
     <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Version 7</b>. Le filtrage de super-domaine est modifié pour obtenir la correspondance exacte des domaines. Deux fichiers ne peuvent se programmer que si les noms d’hôte figurant dans leurs URL sont identiques ; sinon vous devez effectuer un appel à <codeph class="+ topic/ph pr-d/codeph ">Security.allowDomain()</codeph>. Par défaut, les fichiers chargés à partir des URL qui ne sont pas de type HTTPS ne sont plus autorisés à programmer les fichiers chargés à partir des URL HTTPS, même si les fichiers sont chargés à partir d’un domaine rigoureusement identique. Cette restriction permet de protéger les fichiers HTTPS, car un fichier non HTTPS est susceptible d’être modifié sans téléchargement, et tout fichier non HTTPS modifié de façon illicite risque de corrompre un fichier HTTPS, qui serait normalement protégé contre ce type de modification. La méthode <codeph class="+ topic/ph pr-d/codeph ">Security.allowInsecureDomain()</codeph> a été introduite pour permettre aux fichiers SWF HTTPS en cours d’accès de désactiver de façon volontaire cette restriction. Néanmoins, l’utilisation de <codeph class="+ topic/ph pr-d/codeph ">Security.allowInsecureDomain()</codeph> est déconseillée.</p>
     
     <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Version 8</b>. Il existe deux grands domaines de modification :</p>
     
     <ul class="- topic/ul "><li class="- topic/li ">L’appel de <codeph class="+ topic/ph pr-d/codeph ">Security.allowDomain()</codeph> autorise désormais uniquement les opérations de programmation croisée où le fichier SWF cible correspond au fichier SWF qui a appelé <codeph class="+ topic/ph pr-d/codeph ">Security.allowDomain()</codeph>. En d’autres termes, tout fichier SWF qui appelle désormais <codeph class="+ topic/ph pr-d/codeph ">Security.allowDomain()</codeph> n’autorise que l’accès à lui-même. Dans des versions précédentes, l’appel de <codeph class="+ topic/ph pr-d/codeph ">Security.allowDomain()</codeph> autorisait les opérations de programmation croisée lorsque le fichier SWF cible appartenait au même domaine que le fichier SWF qui a appelé <codeph class="+ topic/ph pr-d/codeph ">Security.allowDomain()</codeph>. L’appel de <codeph class="+ topic/ph pr-d/codeph ">Security.allowDomain()</codeph> ouvrait auparavant l’ensemble du domaine du fichier SWF ayant procédé à l’appel.</li><li class="- topic/li ">Une prise en charge a été ajoutée pour les valeurs des caractères génériques avec <codeph class="+ topic/ph pr-d/codeph ">Security.allowDomain("~~")</codeph> et <codeph class="+ topic/ph pr-d/codeph ">Security.allowInsecureDomain("~~")</codeph>. La valeur caractère générique (~~) autorise les opérations de programmation croisée quel que soit le fichier procédant à l’accès et quelle que soit l’origine de ce dernier. Le caractère générique sert alors d’autorisation globale. Des autorisations génériques sont requises pour activer certains types d’opérations respectant les règles de sécurité des fichiers locaux. De façon plus spécifique, pour qu’un fichier SWF local disposant d’autorisations d’accès réseau pour créer un script de contrôle de fichier SWF sur Internet, le fichier Internet SWF en cours d’accès doit appeler <codeph class="+ topic/ph pr-d/codeph ">Security.allowDomain("~~")</codeph>, ce qui indique que l’origine du fichier SWF local est inconnue (si le fichier SWF Internet cible est chargé à partir d’une URL HTTPS, le fichier SWF Internet doit alors appeler <codeph class="+ topic/ph pr-d/codeph ">Security.allowInsecureDomain("~~")</codeph>).</li></ul>
       
     <p class="- topic/p ">De façon exceptionnelle, la situation suivante peut se produire : vous chargez un fichier SWF enfant à partir d’un domaine différent et souhaitez lui permettre de créer un script sur le fichier SWF parent, mais vous ne connaissez pas le domaine final du fichier SWF enfant. Cela peut se produire, par exemple, lorsque vous utilisez des redirections d’équilibrage de charge ou des serveurs tiers.</p>
     
     <p class="- topic/p ">Dans ce cas, vous pouvez utiliser la propriété <codeph class="+ topic/ph pr-d/codeph ">url</codeph> de l’objet URLRequest que vous transmettez à <codeph class="+ topic/ph pr-d/codeph ">Loader.load()</codeph>. Par exemple, si vous chargez un fichier SWF dans un fichier SWF parent, vous pouvez accéder à la propriété <codeph class="+ topic/ph pr-d/codeph ">contentLoaderInfo</codeph> de l’objet Loader pour le fichier SWF parent : </p>
     <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">Security.allowDomain(loader.contentLoaderInfo.url)</codeblock>
     
     <p class="- topic/p ">Vous devez attendre le début du chargement du fichier SWF enfant pour obtenir la valeur correcte de la propriété <codeph class="+ topic/ph pr-d/codeph ">url</codeph>. Pour détecter le début du chargement du fichier SWF, exploite l’événement <codeph class="+ topic/ph pr-d/codeph ">progress</codeph>.</p>
     
     <p class="- topic/p ">La situation opposée peut également se produire ; en effet, vous pouvez créer un fichier SWF enfant sur lequel son fichier parent pourra créer un script, mais qui ignore le domaine de celui-ci. Dans ce cas, vous pouvez accéder à la propriété <codeph class="+ topic/ph pr-d/codeph ">loaderInfo</codeph> de l’objet d’affichage qui correspond à l’objet racine du fichier SWF. Dans le fichier SWF enfant, appelez <codeph class="+ topic/ph pr-d/codeph ">Security.allowDomain( this.root.loaderInfo.loaderURL)</codeph>. Il n’est pas nécessaire d’attendre la fin du chargement du fichier SWF parent ; le parent sera déjà chargé lorsque celui de l’enfant commencera.</p>
     
     <p class="- topic/p ">Si vous procédez à la publication de Flash Player 8 ou une version ultérieure, vous pouvez également traiter ces situations en appelant <codeph class="+ topic/ph pr-d/codeph ">Security.allowDomain("~~")</codeph>. Cependant, il peut parfois s’agir d’un raccourci dangereux, dans la mesure où il autorise tout autre fichier SWF, quel que soit le domaine de ce dernier, à accéder au fichier SWF procédant à l’appel. Il est généralement plus sûr d’utiliser la propriété <codeph class="+ topic/ph pr-d/codeph ">_url</codeph>.</p> 
     
     <p class="- topic/p "> Pour plus d’informations concernant la sécurité, voir la rubrique du Pôle de développement Flash Player : <xref href="http://www.adobe.com/go/devnet_security_fr" scope="external" class="- topic/xref ">Sécurité</xref> (disponible en anglais uniquement).</p>
     
     </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.external.xml#ExternalInterface/addCallback()" class="- topic/link "><linktext class="- topic/linktext ">ExternalInterface.addCallback()</linktext></link><link href="flash.events.xml#Event/COMPLETE" class="- topic/link "><linktext class="- topic/linktext ">flash.events.Event.COMPLETE</linktext></link><link href="flash.display.xml#DisplayObject/parent" class="- topic/link "><linktext class="- topic/linktext ">flash.display.DisplayObject.parent</linktext></link><link href="flash.net.xml#URLRequest/url" class="- topic/link "><linktext class="- topic/linktext ">flash.net.URLRequest.url</linktext></link><link href="flash.system.xml#Security/allowInsecureDomain()" class="- topic/link "><linktext class="- topic/linktext ">allowInsecureDomain()</linktext></link></related-links></apiOperation><apiOperation id="flash.system:Security:allowInsecureDomain" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">allowInsecureDomain</apiName><shortdesc class="- topic/shortdesc ">
     Permet aux fichiers SWF et HTML appartenant aux domaines identifiés d’accéder aux objets et variables du fichier SWF effectuant l’appel, hébergé à l’aide du protocole HTTPS.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">Security, Security.allowInsecureDomain, allowInsecureDomain
      
      </keyword></asCustoms></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">L’appel de cette méthode depuis le code dans le sandbox de sécurité de l’application AIR renvoie une exception SecurityError. Le contenu situé en dehors du sandbox de sécurité de l’application ne peut pas effectuer la programmation croisée du contenu du sandbox de sécurité de l’application. 
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">SecurityError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">SecurityError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">domains</apiItemName><apiType value="restParam" name="type" class="- topic/state reference/state apiRef/apiType "/><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Une ou plusieurs chaînes ou objets URLRequest qui nomment les domaines à partir desquels vous souhaitez autoriser l’accès. Vous pouvez spécifier le domaine spécial « ~~ » pour autoriser l’accès à partir de tous les domaines.  
     
     <p class="flashonly">La spécification de « ~~ » constitue la seule façon d’accéder aux fichiers SWF non locaux à partir des fichiers SWF locaux qui ont été publiés à l’aide du paramètre Accès au réseau uniquement pour l’option Sécurité de lecture locale (Fichier > Paramètres de publication > onglet Flash) dans l’outil de création de Flash.</p>
     
     <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Remarque :</b> la valeur du caractère générique ne fonctionne pas pour les sous-domaines. Par exemple, vous ne pouvez pas utiliser <codeph class="+ topic/ph pr-d/codeph ">~~.foo.com</codeph> pour les paramètres <codeph class="+ topic/ph pr-d/codeph ">domains</codeph>. Bien que vous puissiez spécifier un sous-domaine avec une valeur de caractère générique pour un fichier de régulation interdomaines (comme dans <codeph class="+ topic/ph pr-d/codeph ">~~.foo.com</codeph>), vous ne pouvez pas utiliser une valeur de caractère générique de cette manière pour la méthode <codeph class="+ topic/ph pr-d/codeph ">allowInsecureDomain()</codeph>.</p>
     </apiDesc></apiParam><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Permet aux fichiers SWF et HTML hébergés à l’aide du protocole HTTPS d’accéder aux objets et aux variables du fichier SWF qui procède à l’appel.
     
     </apiTipText></apiTipTexts></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     <ph class="- topic/ph ">Permet aux fichiers SWF et HTML appartenant aux domaines identifiés d’accéder aux objets et variables du fichier SWF appelant, hébergé à l’aide du protocole HTTPS.</ph>
     
     
     
     
     <p class="- topic/p ">Flash Player offre la méthode <codeph class="+ topic/ph pr-d/codeph ">allowInsecureDomain()</codeph> pour plus de souplesse, même si l’appel de cette méthode n’est pas recommandé. La transmission d’un fichier par le protocole HTTPS offre plusieurs protections pour vous et vos utilisateurs. Le fait d’appeler <codeph class="+ topic/ph pr-d/codeph ">allowInsecureDomain</codeph> affaiblit l’une de ces protections.</p>
     
     <p class="- topic/p "><i class="+ topic/ph hi-d/i ">Remarque :</i> l’appel de cette méthode depuis le code dans le sandbox de l’application AIR émet une exception SecurityError. Le contenu situé hors du domaine de sécurité de l’application ne peut pas effectuer la programmation croisée du contenu dans le sandbox de l’application. Toutefois, le contenu situé hors du sandbox de l’application peut communiquer avec le contenu du sandbox de sécurité de l’application par un pont sandbox.</p>
     
     <p class="- topic/p ">Cette méthode fonctionne de la même façon que <codeph class="+ topic/ph pr-d/codeph ">Security.allowDomain()</codeph>, mais elle autorise en outre des opérations où la partie qui procède à l’accès est chargée avec un protocole non HTTPS et la partie cible est chargée avec le protocole HTTPS. A partir de la version 7 de Flash Player, les fichiers non HTTPS ne sont pas autorisés à programmer les fichiers HTTPS. La méthode <codeph class="+ topic/ph pr-d/codeph ">allowInsecureDomain()</codeph> lève cette restriction lorsque le fichier SWF HTTPS cible l’utilise.</p>
     
     <p class="- topic/p ">Utilisez <codeph class="+ topic/ph pr-d/codeph ">allowInsecureDomain()</codeph> uniquement pour activer la programmation des fichiers non HTTPS vers les fichiers HTTPS. Utilisez cette méthode pour activer le script lorsque le fichier non HTTPS qui procède à l’accès et le fichier HTTPS qui est accédé sont servis à partir du même domaine. Par exemple, si un fichier SWF sur http://mysite.com doit contrôler par script un fichier SWF sur https://mysite.com. N’utilisez pas cette méthode pour activer les scripts de contrôle entre des fichiers non HTTPS, entre fichiers HTTPS ou de fichiers HTTPS vers des fichiers non HTTPS. Dans ces situations, recourez plutôt à <codeph class="+ topic/ph pr-d/codeph ">allowDomain()</codeph>.</p>
     
     Le scénario suivant illustre la façon dont la méthode <codeph class="+ topic/ph pr-d/codeph ">allowInsecureDomain()</codeph>, si elle n’est pas utilisée avec prudence, risque de compromettre la sécurité.
     
     <p class="- topic/p ">Tenez compte du fait que les informations suivantes constituent uniquement l’un des scénarios possibles et sont conçues pour vous aider à comprendre <codeph class="+ topic/ph pr-d/codeph ">allowInsecureDomain()</codeph> par l’intermédiaire d’un exemple réaliste de programmation croisée. Cet exemple ne couvre pas tous les problèmes relatifs à l’architecture de sécurité et doit être utilisé uniquement comme référence générale. Le Pôle de développement Flash Player contient des informations détaillées sur Flash Player et la sécurité. Pour plus d’informations, voir la rubrique du Pôle de développement Flash Player : <xref href="http://www.adobe.com/go/devnet_security_fr" scope="external" class="- topic/xref ">Sécurité</xref>.</p>
     
     <p class="- topic/p ">Supposons que vous deviez créer un site de commerce électronique qui comprend deux composants : un catalogue, qui ne doit pas nécessairement être sécurisé, dans la mesure où il contient uniquement des informations publiques ; et un composant panier/règlements, qui doit être sécurisé pour protéger les informations financières et personnelles des utilisateurs. Supposons que vous deviez servir le catalogue à partir de http://mysite.com/catalog.swf et le panier à partir de https://mysite.com/cart.swf. Le cahier des charges de votre site exige qu’aucun tiers ne puisse voler les numéros de carte de crédit de votre utilisateur en profitant des faiblesses de votre architecture de sécurité.</p>
     
     <p class="- topic/p ">Imaginons qu’un intermédiaire malveillant tente d’intervenir entre le serveur et vos utilisateurs pour s’emparer des numéros de carte de crédit que vos utilisateurs pénètrent dans votre application de panier. L’intermédiaire, peut être un FAI peu scrupuleux, par exemple, ou un administrateur malveillant travaillant dans la même entreprise que certains utilisateurs, ou de façon plus générale, toute personne ayant la possibilité d’afficher ou modifier les paquets réseau transmis sans protection sur Internet, entre vos utilisateurs et vos serveurs. Cette situation n’est pas rare.</p> 
     
     <p class="- topic/p ">Si cart.swf utilise HTTPS pour transmettre les informations bancaires aux serveurs, l’intermédiaire ne peut pas voler directement ces informations en détournant les paquets réseau, dans la mesure où la transmission HTTPS est chiffrée. Cependant, l’attaquant utilise une autre technique : modifier le contenu de l’un de vos fichiers SWF pendant sa remise à l’utilisateur, en remplaçant le fichier SWF par une version modifiée qui détourne les informations relatives à l’utilisateur vers un autre serveur.</p>
     
     <p class="- topic/p ">Le protocole HTTPS, entre autres, empêche l’application de cette « modification », dans la mesure où non seulement les transmissions HTTPS sont chiffrées mais encore protégées contre les modifications. Si un intermédiaire tente de modifier un paquet, le récepteur détecte la modification et refuse le paquet. Ainsi, l’attaquant ne peut pas modifier cart.swf, dans la mesure où il est transmis par l’intermédiaire du protocole HTTPS.</p>
     
     <p class="- topic/p ">Supposons maintenant que vous souhaitiez autoriser les boutons dans catalog.swf, servi par le protocole HTTP, pour ajouter des éléments au panier dans cart.swf, servi par le protocole HTTPS. Pour accomplir ceci, cart.swf appelle <codeph class="+ topic/ph pr-d/codeph ">allowInsecureDomain()</codeph>, ce qui autorise catalog.swf à créer un script de contrôle pour cart.swf. Cette action entraîne une conséquence non intentionnelle : un attaquant pourrait modifier catalog.swf lorsqu’il est téléchargé par l’utilisateur, car catalog.swf est transmis avec le protocole HTTP et n’offre aucune protection contre les modifications. Le fichier catalog.swf modifié par l’attaquant peut désormais programmer cart.swf, dans la mesure où cart.swf contient un appel à <codeph class="+ topic/ph pr-d/codeph ">allowInsecureDomain()</codeph>. Le fichier catalog.swf modifié peut utiliser ActionScript pour accéder aux variables de cart.swf et lire ainsi les informations sur les cartes bancaires et autres données sensibles. Le fichier catalog.swf peut ensuite envoyer ces données au serveur d’un attaquant.</p>
     
     <p class="- topic/p ">Naturellement, cette implémentation n’est pas souhaitable, mais vous devez autoriser la programmation croisée entre les deux fichiers SWF de votre site. Voici deux façons de changer la conception de ce site virtuel d’e-commerce afin d’éviter <codeph class="+ topic/ph pr-d/codeph ">allowInsecureDomain()</codeph> :</p>
     
     <ul class="- topic/ul "><li class="- topic/li ">Servez tous les fichiers SWF de l’application avec le protocole HTTPS. Il s’agit de la solution la plus simple et la plus fiable. Dans le scénario décrit, vous pouvez servir les fichiers catalog.swf et cart.swf par l’intermédiaire du protocole HTTPS. Vous risquez de consommer un peu plus de bande passante et d’augmenter la charge du processeur du serveur en faisant basculer un fichier tel que catalog.swf du protocole HTTP au protocole HTTPS, ce qui se traduira par une légère augmentation du temps de chargement des applications au niveau de l’utilisateur. Vous devez faire des essais avec des serveurs réels pour déterminer la gravité de ces effets. De manière générale, elle reste cantonnée entre 10 et 20 % et est parfois totalement absente. Vous pouvez généralement améliorer les résultats avec du matériel et des logiciels d’accélération HTTPS sur vos serveurs. L’un des principaux avantage de l’application du protocole HTTPS aux fichiers SWF qui doivent coopérer est que vous pouvez utiliser une URL HTTPS en tant qu’URL principale dans le navigateur de l’utilisateur sans générer d’avertissements de contenu mixtes à partir du navigateur. En outre, l’icône en forme de cadenas devient visible dans le navigateur, ce qui permet d’offrir aux utilisateurs un indicateur de sécurité reconnu.</li><li class="- topic/li ">Utilisez la programmation HTTPS vers HTTP, et non pas HTTP vers HTTPS. Dans le scénario proposé, vous pouvez stocker le contenu du panier de l’utilisateur dans catalog.swf, puis utiliser cart.swf pour gérer le processus de règlement. Lors du règlement, cart.swf pourrait extraire le contenu du panier à partir des variables ActionScript de catalog.swf. La restriction concernant les scripts HTTP vers HTTPS est asymétrique, bien qu’un fichier catalog.swf livré par le protocole HTTP ne puisse pas être autorisé à contrôler par script un fichier cart.swf livré par HTTPS, le fichier cart.swf HTTPS peut créer un script de contrôle du fichier catalog.swf HTTP. Cette approche est plus délicate que l’approche intégralement HTTPS ; vous ne devez pas faire confiance aux fichiers SWF transmis avec le protocole HTTP, qui n’est pas protégé contre les modifications. Par exemple, lorsque cart.swf extrait la variable ActionScript qui décrit le contenu du panier, le code ActionScript de cart.swf ne peut pas être certain que la valeur de cette variable est au format attendu. Vous devez vous assurer que le panier ne contient pas de données non valides qui risquent d’entraîner une action imprévue de cart.swf. Vous devez également accepter le risque qu’un intermédiaire, en modifiant catalog.swf, fournisse des données valides mais inexactes à cart.swf, par exemple en plaçant des éléments dans le caddie de l’utilisateur. La procédure normale de règlement permet d’atténuer ce risque, sans toutefois l’écarter totalement, en affichant le contenu du caddie et le montant total pour approbation par l’utilisateur.</li></ul>
     
     <p class="- topic/p ">Les navigateurs Web appliquent la séparation des fichiers HTTPS et non HTTPS depuis de nombreuses années et le scénario ci-dessus illustre l’utilité de cette restriction. Flash Player permet de contourner cette restriction de sécurité lorsque c’est strictement nécessaire, mais analysez les conséquences avant d’y procéder.</p>
     
     <p class="- topic/p ">Pour plus d’informations concernant la sécurité, voir la rubrique du Pôle de développement Flash Player : <xref href="http://www.adobe.com/go/devnet_security_fr" scope="external" class="- topic/xref ">Sécurité</xref> (disponible en anglais uniquement).</p>
     
     </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.system.xml#Security/allowDomain()" class="- topic/link "><linktext class="- topic/linktext ">allowDomain()</linktext></link></related-links></apiOperation><apiOperation id="flash.system:Security:loadPolicyFile" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">loadPolicyFile</apiName><shortdesc class="- topic/shortdesc ">  
     Recherche un fichier de régulation à l’emplacement spécifié par le paramètre url.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">url</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Emplacement de l’URL du fichier de régulation à charger.
     </apiDesc></apiParam><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Recherche un fichier de régulation à l’emplacement spécifié par le paramètre url.
     
     </apiTipText></apiTipTexts></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">  
     Recherche un fichier de régulation à l’emplacement spécifié par le paramètre <codeph class="+ topic/ph pr-d/codeph ">url</codeph>. Adobe AIR et Flash Player utilisent des fichiers de régulation pour déterminer s’ils autorisent des applications à charger des données depuis des serveurs autres que celui sur lequel elles se trouvent. Notez que même si la méthode se nomme <codeph class="+ topic/ph pr-d/codeph "> loadPolicyFile()</codeph>, le fichier n’est pas chargé tant qu’une requête réseau impliquant un fichier de régulation n’est pas créée.
     
	 <p class="- topic/p ">Avec <codeph class="+ topic/ph pr-d/codeph ">Security.loadPolicyFile()</codeph>, Flash Player ou AIR peut charger les fichiers de régulation à partir d’emplacements aléatoires, comme l’illustre l’exemple suivant :</p>
     
     <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
     Security.loadPolicyFile("http://www.example.com/sub/dir/pf.xml");
     </codeblock>
     
     
     
     <p class="- topic/p ">De cette manière, Flash Player ou AIR tente de récupérer un fichier de régulation à partir de l’URL spécifiée. Les autorisations accordées par l’intermédiaire du fichier de régulation s’appliquent à l’ensemble du contenu, au même niveau ou à un niveau inférieur dans la hiérarchie virtuelle des répertoires du serveur. </p>
     
     <p class="- topic/p ">Par exemple, selon le code précédent, ces lignes ne renvoient pas d’exception :</p>
     
     <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock "> import flash.net.~~;
     var request:URLRequest = new URLRequest("http://www.example.com/sub/dir/vars.txt");
     var loader:URLLoader = new URLLoader();
     loader.load(request);
     
     var loader2:URLLoader = new URLLoader();
     var request2:URLRequest = new URLRequest("http://www.example.com/sub/dir/deep/vars2.txt");
     loader2.load(request2);
     </codeblock>
     
     <p class="- topic/p ">Par contre, le code suivant renvoie une exception de sécurité :</p>
     
     <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock "> import flash.net.~~;
     var request3:URLRequest = new URLRequest("http://www.example.com/elsewhere/vars3.txt");
     var loader3:URLLoader = new URLLoader();
     loader3.load(request3);
     </codeblock>
     
     <p class="- topic/p ">Vous pouvez utiliser <codeph class="+ topic/ph pr-d/codeph ">loadPolicyFile()</codeph> pour charger un nombre illimité de fichiers de régulation. Dans le cas d’une requête impliquant un fichier de régulation, Flash Player ou AIR attend que le téléchargement des fichiers de régulation soit terminé avant de rejeter une requête. En dernier recours, si aucun des fichiers de régulation spécifiés par <codeph class="+ topic/ph pr-d/codeph ">loadPolicyFile()</codeph> n’autorise la requête, Flash Player ou AIR consulte les emplacements d’origine par défaut.</p>
     
     <p class="- topic/p ">Lorsqu’il recherche un fichier de régulation maître,. Flash Player attend une réponse du serveur pendant trois secondes. En l’absence d’une réponse, l’application considère qu’il n’existe pas de fichier de régulation maître. Toutefois, si aucune valeur de dépassement de délai par défaut est définie pour les appels à <codeph class="+ topic/ph pr-d/codeph ">loadPolicyFile()</codeph>, Flash Player suppose que le fichier appelé existe et attend aussi longtemps que nécessaire pour le charger. Pour avoir la certitude qu’un fichier de régulation maître est chargé, appelez-le donc explicitement par le biais de <codeph class="+ topic/ph pr-d/codeph ">loadPolicyFile()</codeph>.</p>
     
     <p class="- topic/p ">Vous ne pouvez pas vous connecter aux ports généralement réservés. Pour obtenir une liste complète des ports bloqués, voir la rubrique « Restriction des API de réseau » dans le <i class="+ topic/ph hi-d/i ">Guide du développeur d’ActionScript 3.0</i>.</p>
     
     <p class="- topic/p ">L’utilisation du protocole <codeph class="+ topic/ph pr-d/codeph ">xmlsocket</codeph> avec un numéro de port spécifique permet de récupérer directement les fichiers de régulation depuis un serveur XMLSocket, comme l’illustre l’exemple suivant : Les connexions de socket ne sont pas soumises aux restrictions de ports réservés décrites ci-dessus.</p>
     
     <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
     Security.loadPolicyFile("xmlsocket://foo.com:414");
     </codeblock>
     
     
     
     <p class="- topic/p ">De cette manière, Flash Player ou AIR peut récupérer un fichier de régulation au niveau du port et de l’hôte spécifiés. Lors de la connexion au port spécifié, Flash Player ou AIR transmet <codeph class="+ topic/ph pr-d/codeph ">&lt;policy-file-request /></codeph>, suivi d’un octet de terminaison <codeph class="+ topic/ph pr-d/codeph ">null</codeph>. Le serveur doit renvoyer un octet null à la fin du fichier de régulation avant de fermer la connexion. Si le serveur ne ferme pas la connexion, Flash Player ou AIR y met fin après avoir reçu l’octet de terminaison <codeph class="+ topic/ph pr-d/codeph ">null</codeph>.</p>
     
     <p class="- topic/p ">Vous pouvez éviter qu’un fichier SWF utilise cette méthode en définissant le paramètre <codeph class="+ topic/ph pr-d/codeph ">allowNetworking</codeph> des balises <codeph class="+ topic/ph pr-d/codeph ">object</codeph> et <codeph class="+ topic/ph pr-d/codeph ">embed</codeph> dans la page HTML qui héberge le contenu SWF.</p>
     
     <p class="- topic/p ">Pour plus d’informations concernant la sécurité, voir la rubrique du Pôle de développement Flash Player : <xref href="http://www.adobe.com/go/devnet_security_fr" scope="external" class="- topic/xref ">Sécurité</xref> (disponible en anglais uniquement).</p>
     
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.system:Security:showSettings" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">showSettings</apiName><shortdesc class="- topic/shortdesc ">
     Affiche le panneau Paramètres de sécurité de Flash Player.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">Security, Security.showSettings(), showSettings()
      
      </keyword></asCustoms></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">panel</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">default</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Une valeur de la classe SecurityPanel qui permet de spécifier le panneau Paramètres de sécurité à afficher. Si vous omettez ce paramètre, <codeph class="+ topic/ph pr-d/codeph ">SecurityPanel.DEFAULT</codeph> est utilisé. 
     
     </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Affiche le panneau Paramètres de sécurité de Flash Player. Cette méthode ne s’applique pas au contenu dans Adobe AIR ; son appel dans une application AIR n’a aucun effet.
     
     </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.system.xml#SecurityPanel" class="- topic/link "><linktext class="- topic/linktext ">SecurityPanel</linktext></link></related-links></apiOperation><apiValue id="flash.system:Security:APPLICATION" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">APPLICATION</apiName><shortdesc class="- topic/shortdesc ">
	 Le fichier est exécuté dans une application AIR, et a été installé avec le package (le fichier AIR) pour cette application.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">application</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Le fichier est exécuté dans une application AIR, et a été installé avec le package (le fichier AIR) pour cette application. Ce contenu est inclus dans le répertoire des ressources de l’application AIR (où le contenu de l’application est installé).
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.system.xml#Security/sandboxType" class="- topic/link "><linktext class="- topic/linktext ">sandboxType</linktext></link><link href="flash.system.xml#Security/REMOTE" class="- topic/link "><linktext class="- topic/linktext ">REMOTE</linktext></link><link href="flash.system.xml#Security/LOCAL_WITH_FILE" class="- topic/link "><linktext class="- topic/linktext ">LOCAL_WITH_FILE</linktext></link><link href="flash.system.xml#Security/LOCAL_WITH_NETWORK" class="- topic/link "><linktext class="- topic/linktext ">LOCAL_WITH_NETWORK</linktext></link><link href="flash.system.xml#Security/LOCAL_TRUSTED" class="- topic/link "><linktext class="- topic/linktext ">LOCAL_TRUSTED</linktext></link></related-links></apiValue><apiValue id="flash.system:Security:LOCAL_TRUSTED" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">LOCAL_TRUSTED</apiName><shortdesc class="- topic/shortdesc ">
     Ce fichier est un fichier local qui a été approuvé par l’utilisateur en utilisant soit le gestionnaire de paramètres de Flash Player, soit un fichier de configuration FlashPlayerTrust.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><refpath>
      
      </refpath></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">localTrusted</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Ce fichier est un fichier local qui a été approuvé par l’utilisateur en utilisant soit le gestionnaire de paramètres de Flash Player, soit un fichier de configuration FlashPlayerTrust. Ce fichier peut aussi bien lire à partir de sources locales de données que communiquer avec Internet.
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.system.xml#Security/sandboxType" class="- topic/link "><linktext class="- topic/linktext ">sandboxType</linktext></link><link href="flash.system.xml#Security/REMOTE" class="- topic/link "><linktext class="- topic/linktext ">REMOTE</linktext></link><link href="flash.system.xml#Security/LOCAL_WITH_FILE" class="- topic/link "><linktext class="- topic/linktext ">LOCAL_WITH_FILE</linktext></link><link href="flash.system.xml#Security/LOCAL_WITH_NETWORK" class="- topic/link "><linktext class="- topic/linktext ">LOCAL_WITH_NETWORK</linktext></link><link href="flash.system.xml#Security/APPLICATION" class="- topic/link "><linktext class="- topic/linktext ">APPLICATION</linktext></link></related-links></apiValue><apiValue id="flash.system:Security:LOCAL_WITH_FILE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">LOCAL_WITH_FILE</apiName><shortdesc class="- topic/shortdesc ">
     Le fichier est un fichier local qui n’a pas été approuvé par l’utilisateur, et il ne s’agit pas d’un fichier SWF publié avec une désignation de mise en réseau.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><refpath>
      
      </refpath></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">localWithFile</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Le fichier est un fichier local qui n’a pas été approuvé par l’utilisateur, et il ne s’agit pas d’un fichier SWF publié avec une désignation de mise en réseau. Dans Adobe AIR, le fichier local n’est <i class="+ topic/ph hi-d/i ">pas</i> dans le répertoire des ressources de l’application ; ce type de fichier est placé dans le sandbox de sécurité de l’application. Ce fichier peut lire à partir de sources locales de données mais ne peut pas communiquer avec Internet.
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.system.xml#Security/sandboxType" class="- topic/link "><linktext class="- topic/linktext ">sandboxType</linktext></link><link href="flash.system.xml#Security/REMOTE" class="- topic/link "><linktext class="- topic/linktext ">REMOTE</linktext></link><link href="flash.system.xml#Security/LOCAL_WITH_NETWORK" class="- topic/link "><linktext class="- topic/linktext ">LOCAL_WITH_NETWORK</linktext></link><link href="flash.system.xml#Security/LOCAL_TRUSTED" class="- topic/link "><linktext class="- topic/linktext ">LOCAL_TRUSTED</linktext></link><link href="flash.system.xml#Security/APPLICATION" class="- topic/link "><linktext class="- topic/linktext ">APPLICATION</linktext></link></related-links></apiValue><apiValue id="flash.system:Security:LOCAL_WITH_NETWORK" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">LOCAL_WITH_NETWORK</apiName><shortdesc class="- topic/shortdesc ">
	 Le fichier est un fichier local qui n’a pas été approuvé par l’utilisateur, et il s’agit d’un fichier SWF publié avec une désignation de mise en réseau.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><refpath>
      
      </refpath></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">localWithNetwork</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Le fichier est un fichier local qui n’a pas été approuvé par l’utilisateur, et il s’agit d’un fichier SWF publié avec une désignation de mise en réseau. Le fichier peut communiquer sur Internet mais ne peut pas lire à partir de sources de données locales.
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.system.xml#Security/sandboxType" class="- topic/link "><linktext class="- topic/linktext ">sandboxType</linktext></link><link href="flash.system.xml#Security/REMOTE" class="- topic/link "><linktext class="- topic/linktext ">REMOTE</linktext></link><link href="flash.system.xml#Security/LOCAL_WITH_FILE" class="- topic/link "><linktext class="- topic/linktext ">LOCAL_WITH_FILE</linktext></link><link href="flash.system.xml#Security/LOCAL_TRUSTED" class="- topic/link "><linktext class="- topic/linktext ">LOCAL_TRUSTED</linktext></link><link href="flash.system.xml#Security/APPLICATION" class="- topic/link "><linktext class="- topic/linktext ">APPLICATION</linktext></link></related-links></apiValue><apiValue id="flash.system:Security:REMOTE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">REMOTE</apiName><shortdesc class="- topic/shortdesc ">
     Ce fichier provient d’une URL et fonctionne selon les règles basées sur le domaine du sandbox.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><refpath>
      
      </refpath></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">remote</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Ce fichier provient d’une URL et fonctionne selon les règles basées sur le domaine du sandbox.
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.system.xml#Security/sandboxType" class="- topic/link "><linktext class="- topic/linktext ">sandboxType</linktext></link><link href="flash.system.xml#Security/LOCAL_WITH_FILE" class="- topic/link "><linktext class="- topic/linktext ">LOCAL_WITH_FILE</linktext></link><link href="flash.system.xml#Security/LOCAL_WITH_NETWORK" class="- topic/link "><linktext class="- topic/linktext ">LOCAL_WITH_NETWORK</linktext></link><link href="flash.system.xml#Security/LOCAL_TRUSTED" class="- topic/link "><linktext class="- topic/linktext ">LOCAL_TRUSTED</linktext></link><link href="flash.system.xml#Security/APPLICATION" class="- topic/link "><linktext class="- topic/linktext ">APPLICATION</linktext></link></related-links></apiValue><apiValue id="flash.system:Security:exactSettings:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">exactSettings</apiName><shortdesc class="- topic/shortdesc ">
     Détermine la façon dont Flash Player ou AIR sélectionne le domaine à utiliser pour certains paramètres de contenu, ce qui couvre les autorisations relatives à la caméra et au microphone, les quotas de stockage et le stockage d’objets persistants partagés.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">Security, Security.exactSettings, exactSettings
      
      </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Flash Player ou AIR a déjà utilisé la valeur de <codeph class="+ topic/ph pr-d/codeph ">exactSettings</codeph> au moins une fois pour déterminer les paramètres du lecteur.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">SecurityError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">SecurityError</apiOperationClassifier></apiException></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Détermine la façon dont Flash Player ou AIR sélectionne le domaine à utiliser pour certains paramètres de contenu, ce qui couvre les autorisations relatives à la caméra et au microphone, les quotas de stockage et le stockage d’objets persistants partagés. Afin que le fichier SWF utilise les mêmes paramètres que dans Flash Player 6, définissez <codeph class="+ topic/ph pr-d/codeph ">exactSettings</codeph> sur <codeph class="+ topic/ph pr-d/codeph ">false</codeph>.
     
     
     
     <p class="- topic/p ">Dans Flash Player 6, le domaine utilisé pour ces paramètres de lecteur était basé sur la partie finale du domaine du fichier SWF. Lorsque le domaine d’un fichier SWF inclut plus de deux segments, tels que www.exemple.com, le premier segment du domaine (« www ») est supprimé et la partie restante du domaine est utilisée : exemple.com. Ainsi, dans Flash Player 6, www.exemple.com et magasin.exemple.com ont en commun le domaine « example.com » pour ces paramètres. de même, www.exemple.co.fr et magasin.exemple.co.fr ont tous les deux recours au domaine exemple.co.fr pour ces paramètres. A compter de Flash Player 7, les paramètres du lecteur sont choisis par défaut en fonction d’un domaine exact de fichier SWF. Par exemple, le fichier SWF de www.exemple.com applique les paramètres du lecteur pour www.exemple.com, et le fichier SWF de magasin.exemple.com utiliserait des paramètres différents pour magasin.exemple.com.</p>
     
     <p class="- topic/p ">Lorsque la propriété <codeph class="+ topic/ph pr-d/codeph ">Security.exactSettings</codeph> est définie sur <codeph class="+ topic/ph pr-d/codeph ">true</codeph>, Flash Player ou AIR a recours à des domaines exacts pour les paramètres du lecteur. La valeur par défaut de la propriété <codeph class="+ topic/ph pr-d/codeph ">exactSettings</codeph> est <codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Si vous modifiez la valeur par défaut de la propriété <codeph class="+ topic/ph pr-d/codeph ">exactSettings</codeph>, faites-le avant que tout événement impliquant la sélection de paramètres de la part de Flash ou d’AIR ne se produise, tel que l’utilisation d’une caméra ou d’un microphone, ou l’extraction d’un objet partagé persistant.</p>
     
     <p class="- topic/p ">Si vous avez déjà publié un fichier SWF de version 6 et créé des objets persistants à partir de ce dernier, et si vous devez extraire ces objets partagés persistants à partir de ce fichier SWF après l’avoir porté vers la version 7 ou plus récente (ou à partir d’un autre fichier SWF de version 7 ou plus récente), vous devez définir <codeph class="+ topic/ph pr-d/codeph ">Security.exactSettings</codeph> sur <codeph class="+ topic/ph pr-d/codeph ">false</codeph> avant d’appeler <codeph class="+ topic/ph pr-d/codeph ">SharedObject.getLocal()</codeph>.</p>
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.system:Security:pageDomain:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">pageDomain</apiName><shortdesc class="- topic/shortdesc ">
     Obtient le domaine de la page contenant le fichier swf.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.3" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2.7" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Obtient le domaine de la page contenant le fichier swf. Pour des raisons de sécurité, la méthode ne renvoie pas l’adresse URL complète, mais uniquement le domaine de la page, notamment http://www.exemple.com. 
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.system:Security:sandboxType:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">sandboxType</apiName><shortdesc class="- topic/shortdesc ">
     Indique le type de sandbox de sécurité dans lequel fonctionne le fichier appelant.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Indique le type de sandbox de sécurité dans lequel fonctionne le fichier appelant.
     
     <p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">Security.sandboxType</codeph> a l’une des valeurs suivantes :</p>
     
     <ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">remote</codeph> (<codeph class="+ topic/ph pr-d/codeph ">Security.REMOTE</codeph>) —  Ce fichier provient d’une URL Internet et fonctionne selon des règles de sandbox basées sur le domaine.</li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">localWithFile</codeph> (<codeph class="+ topic/ph pr-d/codeph ">Security.LOCAL_WITH_FILE</codeph>) — Ce fichier est un fichier local qui n’a pas été approuvé par l’utilisateur, et il ne s’agit pas d’un fichier SWF publié avec une désignation de mise en réseau. Ce fichier peut lire à partir de sources locales de données mais ne peut pas communiquer avec Internet.</li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">localWithNetwork</codeph> (<codeph class="+ topic/ph pr-d/codeph ">Security.LOCAL_WITH_NETWORK</codeph>) — Ce fichier SWF est un fichier local qui n’a pas été approuvé par l’utilisateur, et a été publié avec la désignation de mise en réseau. Le fichier SWF peut communiquer sur Internet mais ne peut pas lire à partir de sources de données locales.</li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">localTrusted</codeph> (<codeph class="+ topic/ph pr-d/codeph ">Security.LOCAL_TRUSTED</codeph>) — Ce fichier est un fichier local qui a été approuvé par l’utilisateur en utilisant soit le gestionnaire de paramètres de Flash Player, soit un fichier de configuration FlashPlayerTrust. Ce fichier peut aussi bien lire à partir de sources locales de données que communiquer avec Internet.</li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">application</codeph> (<codeph class="+ topic/ph pr-d/codeph ">Security.APPLICATION</codeph>) — Ce fichier est exécuté dans une application AIR, et a été installé avec le package (le fichier AIR) pour cette application. Par défaut, les fichiers dans le sandbox de sécurité de l’application AIR peuvent effectuer la programmation croisée de n’importe quel fichier issu de n’importe quel domaine (alors que les fichiers situés en dehors du sandbox de sécurité de l’application AIR peuvent ne pas être autorisés à effectuer la programmation croisée du fichier AIR). Par défaut, les fichiers du sandbox de sécurité de l’application AIR peuvent charger le contenu et les données de n’importe quel domaine. </li></ul>
     
     <p class="- topic/p ">Pour plus d’informations concernant la sécurité, voir la rubrique du Pôle de développement Flash Player : <xref href="http://www.adobe.com/go/devnet_security_fr" scope="external" class="- topic/xref ">Sécurité</xref> (disponible en anglais uniquement).</p>
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.system.xml#Security/REMOTE" class="- topic/link "><linktext class="- topic/linktext ">REMOTE</linktext></link><link href="flash.system.xml#Security/LOCAL_WITH_FILE" class="- topic/link "><linktext class="- topic/linktext ">LOCAL_WITH_FILE</linktext></link><link href="flash.system.xml#Security/LOCAL_WITH_NETWORK" class="- topic/link "><linktext class="- topic/linktext ">LOCAL_WITH_NETWORK</linktext></link><link href="flash.system.xml#Security/LOCAL_TRUSTED" class="- topic/link "><linktext class="- topic/linktext ">LOCAL_TRUSTED</linktext></link><link href="flash.system.xml#Security/APPLICATION" class="- topic/link "><linktext class="- topic/linktext ">APPLICATION</linktext></link></related-links></apiValue></apiClassifier><apiClassifier languages="" id="flash.system:LoaderContext" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">LoaderContext</apiName><shortdesc class="- topic/shortdesc ">
 La classe LoaderContext fournit des options pour le chargement des fichiers SWF et autres médias à l’aide de la classe Loader.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 La classe LoaderContext fournit des options pour le chargement des fichiers SWF et autres médias à l’aide de la classe Loader. La classe LoaderContext est utilisée en tant que paramètre de <codeph class="+ topic/ph pr-d/codeph ">context</codeph> dans les méthodes <codeph class="+ topic/ph pr-d/codeph ">load()</codeph> et <codeph class="+ topic/ph pr-d/codeph ">loadBytes()</codeph> de la classe Loader.
 
 <p class="- topic/p ">Lors du chargement des fichiers SWF avec la méthode <codeph class="+ topic/ph pr-d/codeph ">Loader.load()</codeph>, vous devez prendre deux décisions : dans quel domaine de sécurité le fichier SWF doit-il être placé et dans quel domaine d’application au sein de ce domaine de sécurité ? Pour plus de détails sur ces choix, voir les sections des propriétés <codeph class="+ topic/ph pr-d/codeph ">applicationDomain</codeph> et <codeph class="+ topic/ph pr-d/codeph ">securityDomain</codeph>.</p>
 
 <p class="- topic/p ">Lors du chargement d’un fichier SWF avec la méthode <codeph class="+ topic/ph pr-d/codeph ">Loader.loadBytes()</codeph>, vous devez effectuer le même choix de domaine d’application comme pour <codeph class="+ topic/ph pr-d/codeph ">Loader.load()</codeph>, mais il n’est pas nécessaire de spécifier un domaine de sécurité, dans la mesure où <codeph class="+ topic/ph pr-d/codeph ">Loader.loadBytes()</codeph> place toujours le fichier SWF qui est chargé dans le domaine de sécurité du fichier SWF en cours de chargement.</p>
 
 <p class="- topic/p ">Lors du chargement des images (JPEG, GIF ou PNG) et non pas de fichiers SWF, il n’est pas nécessaire de spécifier un domaine de sécurité ou un domaine d’application, dans la mesure où ces concepts n’ont de sens que pour les fichiers SWF. Par contre, une seule décision est nécessaire : avez-vous besoin d’un accès programmé aux pixels de l’image chargée ? Dans l’affirmative, voir la propriété <codeph class="+ topic/ph pr-d/codeph ">checkPolicyFile. </codeph> Si vous souhaitez appliquer le dégroupage lors du chargement d’une image, utilisez la classe JPEGLoaderContext plutôt que la classe LoaderContext.</p>
 
 </apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.display.xml#Loader/load()" class="- topic/link "><linktext class="- topic/linktext ">flash.display.Loader.load()</linktext></link><link href="flash.display.xml#Loader/loadBytes()" class="- topic/link "><linktext class="- topic/linktext ">flash.display.Loader.loadBytes()</linktext></link><link href="flash.system.xml#ApplicationDomain" class="- topic/link "><linktext class="- topic/linktext ">flash.system.ApplicationDomain</linktext></link><link href="flash.system.xml#JPEGLoaderContext" class="- topic/link "><linktext class="- topic/linktext ">flash.system.JPEGLoaderContext</linktext></link><link href="flash.system.xml#LoaderContext/applicationDomain" class="- topic/link "><linktext class="- topic/linktext ">flash.system.LoaderContext.applicationDomain</linktext></link><link href="flash.system.xml#LoaderContext/checkPolicyFile" class="- topic/link "><linktext class="- topic/linktext ">flash.system.LoaderContext.checkPolicyFile</linktext></link><link href="flash.system.xml#LoaderContext/securityDomain" class="- topic/link "><linktext class="- topic/linktext ">flash.system.LoaderContext.securityDomain</linktext></link><link href="flash.system.xml#SecurityDomain" class="- topic/link "><linktext class="- topic/linktext ">flash.system.SecurityDomain</linktext></link><link href="flash.system.xml#ImageDecodingPolicy" class="- topic/link "><linktext class="- topic/linktext ">flash.system.ImageDecodingPolicy</linktext></link></related-links><apiConstructor id="flash.system:LoaderContext:LoaderContext" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">LoaderContext</apiName><shortdesc class="- topic/shortdesc ">
     Crée un objet LoaderContext avec les paramètres spécifiés.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">checkPolicyFile</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Spécifie s’il est nécessaire de vérifier l’existence d’un fichier de régulation d’URL avant le chargement de l’objet.
     
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">applicationDomain</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.system:ApplicationDomain</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Spécifie l’objet ApplicationDomain à utiliser pour un objet Loader.
     
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">securityDomain</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.system:SecurityDomain</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Spécifie l’objet SecurityDomain à utiliser pour un objet Loader.
     
     <p class="- topic/p "><i class="+ topic/ph hi-d/i ">Remarque :</i> le contenu du sandbox de sécurité de l’application air ne peut pas charger le contenu d’autres sandboxes dans son SecurityDomain.</p>
     
     </apiDesc></apiParam></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Crée un objet LoaderContext avec les paramètres spécifiés. Pour compléter les détails de ces paramètres, voir les descriptions des propriétés de cette classe.
     
     </apiDesc></apiConstructorDetail><related-links class="- topic/related-links "><link href="flash.display.xml#Loader/load()" class="- topic/link "><linktext class="- topic/linktext ">flash.display.Loader.load()</linktext></link><link href="flash.display.xml#Loader/loadBytes()" class="- topic/link "><linktext class="- topic/linktext ">flash.display.Loader.loadBytes()</linktext></link><link href="flash.system.xml#ApplicationDomain" class="- topic/link "><linktext class="- topic/linktext ">flash.system.ApplicationDomain</linktext></link><link href="flash.system.xml#SecurityDomain" class="- topic/link "><linktext class="- topic/linktext ">flash.system.SecurityDomain</linktext></link></related-links></apiConstructor><apiValue id="flash.system:LoaderContext:allowCodeImport" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">allowCodeImport</apiName><shortdesc class="- topic/shortdesc ">
     Indique si vous pouvez utiliser un objet Loader en vue d’importer du contenu avec du code exécutable, tel qu’un fichier SWF, dans le sandbox de sécurité de l’appelant.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Indique si vous pouvez utiliser un objet <codeph class="+ topic/ph pr-d/codeph ">Loader</codeph> en vue d’importer du contenu avec du code exécutable, tel qu’un fichier SWF, dans le sandbox de sécurité de l’appelant. Il existe deux opérations d’importation : la méthode <codeph class="+ topic/ph pr-d/codeph ">Loader.loadBytes()</codeph> et la méthode <codeph class="+ topic/ph pr-d/codeph ">Loader.load()</codeph> avec <codeph class="+ topic/ph pr-d/codeph ">LoaderContext.securityDomain = SecurityDomain.currentDomain</codeph>. (La dernière opération n’est pas prise en charge dans le sandbox de l’application AIR.) Lorsque la propriété <codeph class="+ topic/ph pr-d/codeph ">allowCodeImport</codeph> est définie sur <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, ces opérations d’importation sont limitées à des opérations sécurisées, telles que le chargement d’images. Le chargement normal de fichiers SWF non importés avec la méthode <codeph class="+ topic/ph pr-d/codeph ">Loader.load()</codeph> n’est pas affecté par la valeur de cette propriété.
     
     <p class="- topic/p ">Cette propriété est utile lorsque vous souhaitez importer le contenu de l’image dans le sandbox, notamment lorsque vous souhaitez répliquer ou traiter une image à partir d’un autre domaine, mais ne souhaitez pas prendre le risque de recevoir un fichier SWF alors que vous n’attendiez qu’un fichier d’image. Etant donné que les fichiers SWF peuvent contenir du code ActionScript, l’importation d’un fichier SWF est une opération beaucoup plus risquée que l’importation d’un fichier image.</p>
     
     <p class="- topic/p ">Dans le contenu AIR dans le sandbox de l’application, la valeur par défaut est <codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Dans le contenu hors application (qui inclut la totalité du contenu dans Flash Player), la valeur par défaut est <codeph class="+ topic/ph pr-d/codeph ">true</codeph>.</p>
     
     <p class="- topic/p ">La propriété <codeph class="+ topic/ph pr-d/codeph ">allowCodeImport</codeph> a été ajoutée à Flash Player 10.1 et AIR 2.0. Toutefois, cette propriété est disponible pour les fichiers SWF et les applications AIR de toutes les versions lorsque le moteur d’exécution de Flash la prend en charge.</p>
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#Loader/loadBytes()" class="- topic/link "><linktext class="- topic/linktext ">flash.display.Loader.loadBytes()</linktext></link><link href="flash.display.xml#Loader/load()" class="- topic/link "><linktext class="- topic/linktext ">flash.display.Loader.load()</linktext></link><link href="flash.system.xml#LoaderContext/securityDomain" class="- topic/link "><linktext class="- topic/linktext ">securityDomain</linktext></link></related-links></apiValue><apiValue id="flash.system:LoaderContext:applicationDomain" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">applicationDomain</apiName><shortdesc class="- topic/shortdesc ">
     Spécifie le domaine d’application à utiliser pour la méthode Loader.load() ou Loader.loadBytes().</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.system:ApplicationDomain</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Spécifie le domaine d’application à utiliser pour la méthode <codeph class="+ topic/ph pr-d/codeph ">Loader.load()</codeph> ou <codeph class="+ topic/ph pr-d/codeph ">Loader.loadBytes()</codeph>. Utilisez cette propriété uniquement lors du chargement d’un fichier SWF écrit dans ActionScript 3.0 (et non pas une image ou un fichier SWF écrit au format ActionScript 1.0 ou ActionScript 2.0).
     
     <p class="- topic/p ">Tout domaine de sécurité est divisé en un ou plusieurs domaines d’application, représentés par les objets ApplicationDomain. Les domaines d’application n’ont pas de rôle de sécurité ; ils servent à gérer les unités de code ActionScript qui doivent coopérer. Si vous chargez un fichier SWF provenant d’un autre domaine, puis autorisez son placement dans un domaine de sécurité distinct, vous ne pouvez pas contrôler le domaine d’application dans lequel le ficher SWF est placé. Si vous avez spécifié un domaine d’application, ce choix sera ignoré. Cependant, si vous chargez un fichier SWF dans votre propre domaine de sécurité, soit parce que le fichier SWF provient de votre domaine, soit parce que vous l’importez dans votre domaine de sécurité, puis vous pouvez contrôler le domaine d’application du fichier SWF chargé.</p>
     
     <p class="- topic/p ">Vous devez transmettre le domaine d’application à partir de votre propre domaine de sécurité dans <codeph class="+ topic/ph pr-d/codeph ">LoaderContext.applicationDomain</codeph>. Toute tentative de transmission d’un domaine d’application à partir de tout autre domaine de sécurité renvoie une exception <codeph class="+ topic/ph pr-d/codeph ">SecurityError</codeph>.</p>
     
     <p class="- topic/p ">Vous disposez de quatre choix concernant le type de propriété <codeph class="+ topic/ph pr-d/codeph ">ApplicationDomain</codeph> à utiliser :</p>
     
     <ul class="- topic/ul "><li class="- topic/li "><b class="+ topic/ph hi-d/b ">Enfant du domaine d’application du chargeur.</b> La valeur par défaut. Vous pouvez représenter de façon explicite ce choix avec la syntaxe <codeph class="+ topic/ph pr-d/codeph ">new ApplicationDomain(ApplicationDomain.currentDomain)</codeph>. Ceci permet au fichier SWF d’utiliser les classes parent de façon directe, par exemple en écrivant <codeph class="+ topic/ph pr-d/codeph ">new MyClassDefinedInParent()</codeph>. Le parent, cependant, ne permet pas d’utiliser cette syntaxe. Si le parent souhaite utiliser les classes de l’enfant, il doit appeler <codeph class="+ topic/ph pr-d/codeph ">ApplicationDomain.getDefinition()</codeph> pour les extraire. L’avantage de ce choix est que, si l’enfant définit une classe du même nom que la classe qui est déjà définie par le parent, aucune erreur ne se produit ; l’enfant hérite simplement de la définition de cette classe à partir de son parent et toute définition de l’enfant qui entraîne un conflit reste inutilisée, sauf si l’enfant ou le parent appelle la méthode <codeph class="+ topic/ph pr-d/codeph ">ApplicationDomain.getDefinition()</codeph> pour l’extraire.</li><li class="- topic/li "><b class="+ topic/ph hi-d/b ">Domaine d’application de la classe loader.</b> Employez ce domaine d’application lorsque vous utilisez <codeph class="+ topic/ph pr-d/codeph ">ApplicationDomain.currentDomain</codeph>. Une fois le chargement terminé, le parent et l’enfant peuvent exploiter leurs classes respectives de façon directe. Si l’enfant tente de définir une classe avec le même nom que celle déjà définie par le parent, la classe du parent est utilisée et celle de l’enfant est ignorée.</li><li class="- topic/li "><b class="+ topic/ph hi-d/b ">Enfant du domaine d’application du système.</b> Utilisez ce domaine d’application lors de l’utilisation de <codeph class="+ topic/ph pr-d/codeph ">new ApplicationDomain(null)</codeph>. Cette opération permet de distinguer les objets de chargement des objets chargés, afin de définir des versions distinctes des classes du même nom, sans conflit ou problèmes de priorité. Seule la méthode <codeph class="+ topic/ph pr-d/codeph ">ApplicationDomain.getDefinition()</codeph> permet aux deux parties de voir les classes de l’autre.</li><li class="- topic/li "><b class="+ topic/ph hi-d/b ">Enfant d’un autre domaine d’application.</b> De façon occasionnelle, vous pouvez avoir à faire à une hiérarchie de domaines d’application plus complexe. Vous pouvez charger un fichier SWF dans un domaine d’application à partir de votre propre domaine de sécurité. Par exemple, <codeph class="+ topic/ph pr-d/codeph ">new ApplicationDomain(ApplicationDomain.currentDomain.parentDomain.parentDomain)</codeph> charge un fichier SWF dans un nouvel enfant du grand-parent du domaine actuel.</li></ul>
     
     <p class="- topic/p ">Une fois le chargement terminé, les deux parties (en cours de chargement ou chargées) peuvent avoir à rechercher leur propre domaine d’application, ou le domaine d’application de l’autre partie, afin d’appeler <codeph class="+ topic/ph pr-d/codeph ">ApplicationDomain.getDefinition()</codeph>. Chaque partie peut extraire une référence vers son propre domaine d’application à l’aide de <codeph class="+ topic/ph pr-d/codeph ">ApplicationDomain.currentDomain</codeph>. Le fichier SWF de chargement peut extraire une référence au domaine d’application du fichier SWF à l’aide de <codeph class="+ topic/ph pr-d/codeph ">Loader.contentLoaderInfo.applicationDomain</codeph>. Si le fichier SWF a identifié son mode de chargement, il peut retrouver l’objet ApplicationDomain du fichier SWF en cours de chargement. Par exemple, si l’enfant a été chargé à l’aide de la méthode par défaut, il peut déterminer le domaine d’application du fichier SWF à l’aide de <codeph class="+ topic/ph pr-d/codeph ">ApplicationDomain.currentDomain.parentDomain</codeph>.</p>
     
     <p class="- topic/p ">Pour plus d’informations, voir la section « Classe ApplicationDomain » du chapitre « Environnement du système client » du <i class="+ topic/ph hi-d/i ">Guide du développeur d’ActionScript 3.0</i>.</p>
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#Loader/load()" class="- topic/link "><linktext class="- topic/linktext ">flash.display.Loader.load()</linktext></link><link href="flash.display.xml#Loader/loadBytes()" class="- topic/link "><linktext class="- topic/linktext ">flash.display.Loader.loadBytes()</linktext></link><link href="flash.system.xml#ApplicationDomain" class="- topic/link "><linktext class="- topic/linktext ">flash.system.ApplicationDomain</linktext></link></related-links></apiValue><apiValue id="flash.system:LoaderContext:checkPolicyFile" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">checkPolicyFile</apiName><shortdesc class="- topic/shortdesc ">
     Spécifie si l’application doit tenter de télécharger un fichier de régulation d’URL à partir du serveur de l’objet chargé avant de commencer à charger ce dernier.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Spécifie si l’application doit tenter de télécharger un fichier de régulation d’URL à partir du serveur de l’objet chargé avant de commencer à charger ce dernier. Cet indicateur s’applique à la méthode <codeph class="+ topic/ph pr-d/codeph ">Loader.load()</codeph>, mais pas à la méthode <codeph class="+ topic/ph pr-d/codeph ">Loader.loadBytes()</codeph>.
     
     <p class="- topic/p ">Définissez cet indicateur sur <codeph class="+ topic/ph pr-d/codeph ">true</codeph> lorsque vous chargez une image (JPEG, GIF ou PNG) en dehors du domaine du fichier SWF qui procède à l’appel et lorsque vous pensez avoir besoin d’accéder au contenu de cette image à partir d’ActionScript. Parmi les exemples d’accès au contenu de l’image, citons le référencement de la propriété <codeph class="+ topic/ph pr-d/codeph ">Loader.content</codeph> pour obtenir un objet Bitmap et l’appel à la méthode <codeph class="+ topic/ph pr-d/codeph ">BitmapData.draw()</codeph> pour obtenir une copie des pixels de l’image chargée. Si vous tentez l’une de ces opérations sans avoir spécifié <codeph class="+ topic/ph pr-d/codeph ">checkPolicyFile</codeph> lors du chargement, vous risquez de subir une exception <codeph class="+ topic/ph pr-d/codeph ">SecurityError</codeph> dans la mesure où le fichier de régulation requis n’a pas encore été téléchargé.</p>
     
     <p class="- topic/p ">Lorsque vous appelez la méthode <codeph class="+ topic/ph pr-d/codeph ">Loader.load()</codeph> avec <codeph class="+ topic/ph pr-d/codeph ">LoaderContext.checkPolicyFile</codeph> défini sur <codeph class="+ topic/ph pr-d/codeph ">true</codeph>, l’application ne commence pas le téléchargement de l’objet spécifié dans <codeph class="+ topic/ph pr-d/codeph ">URLRequest.url</codeph> avant d’avoir téléchargé avec succès un fichier de régulation d’URL adéquat ou déterminé que ce fichier de régulation n’existe pas. Flash Player ou AIR analyse en premier lieu les fichiers de régulation ayant déjà été téléchargés, tente de télécharger tous les fichiers de stratégie en attente spécifiés lors des appels à la méthode <codeph class="+ topic/ph pr-d/codeph ">Security.loadPolicyFile()</codeph>, puis tente de télécharger un fichier de stratégie à l’emplacement par défaut, qui correspond à <codeph class="+ topic/ph pr-d/codeph ">URLRequest.url</codeph>, soit <codeph class="+ topic/ph pr-d/codeph ">/crossdomain.xml</codeph> sur le même serveur que <codeph class="+ topic/ph pr-d/codeph ">URLRequest.url</codeph>. Dans tous les cas, le fichier de régulation donné doit exister à <codeph class="+ topic/ph pr-d/codeph ">URLRequest.url</codeph>, sur la base de l’emplacement du fichier de régulation, et le fichier doit autoriser l’accès par le biais d’une ou plusieurs balises <codeph class="+ topic/ph pr-d/codeph ">&lt;allow-access-from></codeph>.</p>
     
     <p class="- topic/p ">Si vous définissez <codeph class="+ topic/ph pr-d/codeph ">checkPolicyFile</codeph> sur <codeph class="+ topic/ph pr-d/codeph ">true</codeph>, le téléchargement principal spécifié dans la méthode <codeph class="+ topic/ph pr-d/codeph ">Loader.load()</codeph> ne charge pas tant que le traitement du fichier de régulation n’est pas complètement terminé. Par conséquent, tant que le fichier de régulation requis existe, dès la réception des événements <codeph class="+ topic/ph pr-d/codeph ">ProgressEvent.PROGRESS</codeph> ou <codeph class="+ topic/ph pr-d/codeph ">Event.COMPLETE</codeph> à partir de la propriété <codeph class="+ topic/ph pr-d/codeph ">contentLoaderInfo</codeph> de votre objet Loader, le téléchargement du fichier de régulation se termine et vous pouvez procéder de façon sûre aux opérations qui nécessitent ce fichier de régulation.</p>
     
     <p class="- topic/p ">Si vous définissez <codeph class="+ topic/ph pr-d/codeph ">checkPolicyFile</codeph> sur <codeph class="+ topic/ph pr-d/codeph ">true</codeph> et si aucun fichier de régulation n’est trouvé, vous ne recevrez aucune indication d’erreur jusqu’à ce que vous tentiez une opération qui renvoie une exception <codeph class="+ topic/ph pr-d/codeph ">SecurityError</codeph>. Cependant, lorsque l’objet LoaderInfo distribue un événement <codeph class="+ topic/ph pr-d/codeph ">ProgressEvent.PROGRESS</codeph> ou <codeph class="+ topic/ph pr-d/codeph ">Event.COMPLETE</codeph>, vous pouvez déterminer si un fichier de régulation a été détecté en vérifiant la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">LoaderInfo.childAllowsParent</codeph>.</p>
     
     <p class="- topic/p ">Si l’accès au niveau des pixels de l’image en cours de chargement est requis, vous ne pouvez pas définir la propriété <codeph class="+ topic/ph pr-d/codeph ">checkPolicyFile</codeph> sur <codeph class="+ topic/ph pr-d/codeph ">true</codeph>. La vérification d’un fichier de stratégie dans ce cas est contre-productive, dans la mesure où elle risque de retarder le début de votre téléchargement et risque de consommer la bande passante du réseau de façon inutile.</p>
     
     <p class="- topic/p ">Evitez également de définir <codeph class="+ topic/ph pr-d/codeph ">checkPolicyFile</codeph> sur <codeph class="+ topic/ph pr-d/codeph ">true</codeph> si vous utilisez la méthode <codeph class="+ topic/ph pr-d/codeph ">Loader.load()</codeph> pour télécharger un fichier SWF. Ceci est dû au fait que les autorisations SWF vers SWF ne sont pas contrôlées par les fichiers de stratégies, mais par la méthode <codeph class="+ topic/ph pr-d/codeph ">Security.allowDomain()</codeph>, ce qui a pour conséquence que <codeph class="+ topic/ph pr-d/codeph ">checkPolicyFile</codeph> n’a pas d’effet lorsque vous chargez le fichier SWF. La vérification d’un fichier de stratégie dans ce cas est contre-productive, dans la mesure où elle risque de retarder le téléchargement du fichier SWF et risque de consommer la bande passante du réseau de façon inutile (Flash Player ou AIR ne peut pas déterminer si votre téléchargement principal sera un fichier SWF ou une image, dans la mesure où le téléchargement du fichier de régulation a lieu avant le téléchargement principal).</p>
     
     <p class="- topic/p ">Si vous téléchargez un objet à partir d’une URL qui peut utiliser des redirections HTTP côté serveur, servez-vous de <codeph class="+ topic/ph pr-d/codeph ">checkPolicyFile</codeph> avec précaution. Les fichiers de régulation sont toujours récupérés de l’URL initiale correspondante que vous spécifiez dans <codeph class="+ topic/ph pr-d/codeph ">URLRequest.url</codeph>. Si l’objet final provient d’une URL différente en conséquence de redirections HTTP, les fichiers de régulation initialement téléchargés peuvent ne pas être applicables à l’URL finale de l’objet, autrement dit l’URL à prendre en compte dans les décisions relatives à la sécurité. Si vous vous trouvez dans cette situation, le code examine la valeur <codeph class="+ topic/ph pr-d/codeph ">LoaderInfo.url</codeph> après avoir reçu un événement <codeph class="+ topic/ph pr-d/codeph ">ProgressEvent.PROGRESS</codeph> ou <codeph class="+ topic/ph pr-d/codeph ">Event.COMPLETE</codeph>, ce qui permet d’obtenir l’URL finale de l’objet. La méthode <codeph class="+ topic/ph pr-d/codeph ">Security.loadPolicyFile()</codeph> est ensuite appelée avec une URL de fichier de régulation basée sur l’URL finale de l’objet. La valeur de <codeph class="+ topic/ph pr-d/codeph ">LoaderInfo.childAllowsParent</codeph> est ensuite vérifiée régulièrement jusqu’à ce qu’elle ait la valeur <codeph class="+ topic/ph pr-d/codeph ">true</codeph>.</p>
     
         <p class="- topic/p ">Il n’est pas nécessaire que vous définissiez cette propriété pour le contenu AIR s’exécutant dans le sandbox de l’application. Le contenu dans le sandbox de l’application AIR peut appeler la méthode <codeph class="+ topic/ph pr-d/codeph ">BitmapData.draw()</codeph> à l’aide de l’une des images chargées comme source. </p>
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#BitmapData/draw()" class="- topic/link "><linktext class="- topic/linktext ">flash.display.BitmapData.draw()</linktext></link><link href="flash.display.xml#Loader/content" class="- topic/link "><linktext class="- topic/linktext ">flash.display.Loader.content</linktext></link><link href="flash.display.xml#Loader/load()" class="- topic/link "><linktext class="- topic/linktext ">flash.display.Loader.load()</linktext></link><link href="flash.display.xml#LoaderInfo/childAllowsParent" class="- topic/link "><linktext class="- topic/linktext ">flash.display.LoaderInfo.childAllowsParent</linktext></link><link href="flash.display.xml#LoaderInfo/url" class="- topic/link "><linktext class="- topic/linktext ">flash.display.LoaderInfo.url</linktext></link><link href="flash.system.xml#Security/allowDomain()" class="- topic/link "><linktext class="- topic/linktext ">flash.system.Security.allowDomain()</linktext></link><link href="flash.system.xml#Security/loadPolicyFile()" class="- topic/link "><linktext class="- topic/linktext ">flash.system.Security.loadPolicyFile()</linktext></link></related-links></apiValue><apiValue id="flash.system:LoaderContext:imageDecodingPolicy" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">imageDecodingPolicy</apiName><shortdesc class="- topic/shortdesc ">
     Indique s’il convient de décoder les données image lors de leur utilisation ou de leur chargement.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2.6" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Indique s’il convient de décoder les données image lors de leur utilisation ou de leur chargement.
     
     <p class="- topic/p ">Sous la stratégie par défaut, <codeph class="+ topic/ph pr-d/codeph ">ImageDecodingPolicy.ON_DEMAND</codeph>, le moteur d’exécution décode les données image lorsque les données sont nécessaires à des fins d’affichage ou à d’autres fins. Cette stratégie conserve le comportement de décodage utilisé par les versions précédentes du moteur d’exécution.</p>
	 
	 <p class="- topic/p ">Sous la stratégie <codeph class="+ topic/ph pr-d/codeph ">ImageDecodingPolicy.ON_LOAD</codeph>, le moteur d’exécution décode l’image immédiatement après son chargement et avant la distribution de l’événement complete. Décoder les images au chargement et non à la demande peut améliorer les performances de l’animation et de l’interface utilisateur lorsque plusieurs images chargées s’affichent en succession rapide (liste de défilement ou contrôle du flux). Néanmoins, l’utilisation indiscriminée de la stratégie onLoad peut augmenter le niveau de consommation de mémoire de votre application. Un plus grand nombre de données image risque en effet d’être en mémoire au même moment, ce qui n’est pas le cas pour la stratégie onDemand.</p>
	 
     <p class="- topic/p ">Quelle que soit la stratégie choisie, le moteur d’exécution utilise la même mémoire cache et le même comportement de purge une fois l’image décodée. Le moteur d’exécution peut à tout moment abandonner le décodage et redécoder l’image dès que cela est nécessaire.</p>
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.system.xml#ImageDecodingPolicy" class="- topic/link "><linktext class="- topic/linktext ">flash.system.ImageDecodingPolicy</linktext></link></related-links></apiValue><apiValue id="flash.system:LoaderContext:parameters" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">parameters</apiName><shortdesc class="- topic/shortdesc ">
     Objet contenant les paramètres à transmettre à l’objet LoaderInfo du contenu.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2.6" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Object</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Objet contenant les paramètres à transmettre à l’objet LoaderInfo du contenu.
     
     <p class="- topic/p ">Normalement, la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">contentLoaderInfo.parameters</codeph> est obtenue en analysant l’URL de demande. Si la variable <codeph class="+ topic/ph pr-d/codeph ">parameters</codeph> est définie, la propriété <codeph class="+ topic/ph pr-d/codeph ">contentLoaderInfo.parameters</codeph> obtient sa valeur à partir de l’objet LoaderContext, et non à partir de l’URL de demande. La variable <codeph class="+ topic/ph pr-d/codeph ">parameters</codeph> prend en charge uniquement les objets contenant des paires de chaînes nom/valeur similaires aux paramètres de l’URL. Si l’objet ne contient pas de paires de chaînes nom/valeur, une erreur <codeph class="+ topic/ph pr-d/codeph ">IllegalOperationError</codeph> est renvoyée.</p>
     <p class="- topic/p ">Le but de cette API est d’activer le fichier SWF de chargement pour transférer ses paramètres à un fichier SWF chargé. Cette fonctionnalité est particulièrement utile lorsque vous utilisez la méthode <codeph class="+ topic/ph pr-d/codeph ">loadBytes()</codeph>, car <codeph class="+ topic/ph pr-d/codeph ">LoadBytes</codeph> ne permet pas la transmission de paramètres via l’URL. Il est uniquement possible de transmettre correctement les paramètres à un autre fichier SWF AS3 ; un fichier SWF AS1 ou AS2 ne peut pas recevoir les paramètres dans une forme accessible, bien que l’objet loaderInfo.parameters AS3 d’AVM1Movie soit l’objet transféré. </p>
     
     
     <p class="- topic/p ">Considérons par exemple l’URL qui suit : </p>
     <p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">http://yourdomain/users/jdoe/test01/child.swf?foo=bar;</codeph></p>
     <p class="- topic/p ">Le code suivant utilise la propriété LoaderContext.parameters pour reproduire un paramètre transmis à cette URL : </p>
     
     <pre xml:space="preserve" class="- topic/pre ">
      import flash.system.LoaderContext; 
      import flash.display.Loader; 
      var l:Loader = new Loader(); 
      var lc:LoaderContext = new LoaderContext; 
      lc.parameters = { "foo": "bar" }; 
      l.load(new URLRequest("child.swf"), lc);
     </pre>
     
     <p class="- topic/p ">Pour vérifier que le paramètre a été correctement transmis, utilisez l’instruction trace suivante après avoir exécuté ce code :</p>
     <p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">trace(loaderInfo.parameters.foo);</codeph></p>
     <p class="- topic/p ">Si le contenu est chargé correctement, cette trace imprime "bar".</p>
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.system:LoaderContext:requestedContentParent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">requestedContentParent</apiName><shortdesc class="- topic/shortdesc ">
     Parent auquel l’objet Loader va tenter d’ajouter le contenu chargé.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2.6" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.display:DisplayObjectContainer</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Parent auquel l’objet Loader va tenter d’ajouter le contenu chargé. 
     
     <p class="- topic/p ">Lorsque le contenu est entièrement chargé, l’objet Loader devient normalement le parent du contenu. Si la propriété <codeph class="+ topic/ph pr-d/codeph ">requestedContentParent</codeph> est définie, l’objet qu’elle spécifie devient le parent, à moins qu’une erreur d’exécution empêche l’affectation. Il est également possible d’effectuer ce changement de parent après l’événement <codeph class="+ topic/ph pr-d/codeph ">complete</codeph> sans utiliser cette propriété. Indiquer le parent avec <codeph class="+ topic/ph pr-d/codeph ">LoaderContext.requestedContentParent</codeph> permet toutefois d’éliminer les événements supplémentaires. </p>
     <p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">LoaderContext.requestedContentParent</codeph> définit le parent désiré avant l’exécution des scripts de la première image dans le contenu chargé et après l’exécution du constructeur. Si la propriété <codeph class="+ topic/ph pr-d/codeph ">requestedContentParent</codeph> est définie sur null (valeur par défaut), l’objet Loader devient le parent du contenu.</p>
     <p class="- topic/p ">Si le contenu chargé est un objet AVM1Movie, ou si une erreur est renvoyée lorsque <codeph class="+ topic/ph pr-d/codeph ">addChild()</codeph> est appelée sur l’objet <codeph class="+ topic/ph pr-d/codeph ">requestedContentParent</codeph>, les actions suivantes se produisent :
     <ul class="- topic/ul "><li class="- topic/li ">L’objet Loader devient le parent du contenu chargé.</li><li class="- topic/li ">Le moteur d’exécution distribue un événement <codeph class="+ topic/ph pr-d/codeph ">AsyncErrorEvent</codeph>.</li></ul></p>
     <p class="- topic/p ">Si le parent demandé et le contenu chargé se trouvent dans des sandbox de sécurité différents, et si le parent demandé n’a pas accès au contenu chargé, les actions suivantes se produisent :
     <ul class="- topic/ul "><li class="- topic/li ">L’objet Loader devient le parent du contenu chargé.</li><li class="- topic/li ">Le moteur d’exécution distribue un événement <codeph class="+ topic/ph pr-d/codeph ">SecurityErrorEvent</codeph>.</li></ul></p>
     
     <p class="- topic/p ">Le code suivant utilise <codeph class="+ topic/ph pr-d/codeph ">requestedContentParent</codeph> pour placer le contenu chargé dans un objet Sprite :</p>
     <pre xml:space="preserve" class="- topic/pre ">
      import flash.system.LoaderContext; 
      import flash.display.Loader; 
      import flash.display.Sprite; 
     
      var lc:LoaderContext = new LoaderContext(); 
      var l:Loader = new Loader(); 
      var s:Sprite = new Sprite(); 
      lc.requestedContentParent = s; 
      addChild(s); 
      l.load(new URLRequest("child.swf"), lc);
     </pre>
     
     <p class="- topic/p ">Lors de l’exécution de ce code, le fichier SWF enfant s’affiche sur la scène. Ce fait confirme que l’objet Sprite que vous venez d’ajouter à la scène est le parent du fichier child.swf chargé.</p>
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.system:LoaderContext:securityDomain" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">securityDomain</apiName><shortdesc class="- topic/shortdesc ">
     Spécifie le domaine de sécurité à utiliser pour une opération Loader.load().</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.system:SecurityDomain</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Spécifie le domaine de sécurité à utiliser pour une opération <codeph class="+ topic/ph pr-d/codeph ">Loader.load()</codeph>. Utilisez cette propriété uniquement lors du chargement d’un fichier SWF (et non pas une image).
     
     <p class="- topic/p ">Le choix du domaine de sécurité n’a de sens que si vous chargez un fichier SWF pouvant provenir d’un autre domaine (un autre serveur) que le fichier SWF de chargement. Lorsque vous chargez un fichier SWF provenant de votre propre domaine, ce dernier est placé dans votre domaine de sécurité. Cependant, lorsque vous chargez un fichier SWF à partir d’un domaine différent, vous disposez de deux options. Vous pouvez autoriser le placement du fichier SWF chargé dans le domaine de sécurité « naturel », qui est différent de celui du fichier SWF de chargement. Il s’agit de la valeur par défaut. L’autre consiste à spécifier que vous souhaitez placer le fichier SWF chargé dans le même domaine de sécurité que le fichier SWF de chargement, en définissant <codeph class="+ topic/ph pr-d/codeph ">myLoaderContext.securityDomain</codeph> comme égal à <codeph class="+ topic/ph pr-d/codeph ">SecurityDomain.currentDomain</codeph>. Cette opération est appelée <i class="+ topic/ph hi-d/i ">chargement en vue de l’importation</i> et est équivalente, pour des raisons de sécurité, à la copie du fichier SWF chargé sur votre propre serveur et à son chargement à partir de cet endroit. Pour que le chargement en vue de l’importation réussisse, le serveur du fichier SWF doit disposer d’un fichier de régulation pour lequel le domaine de chargement du fichier SWF fait partie des domaines de confiance.</p>
     
     <p class="- topic/p ">Vous pouvez transmettre votre propre domaine de sécurité uniquement dans <codeph class="+ topic/ph pr-d/codeph ">LoaderContext.securityDomain</codeph>. Toute tentative de transmission vers un autre domaine de sécurité renvoie une exception <codeph class="+ topic/ph pr-d/codeph ">SecurityError</codeph>.</p>
     
     <p class="- topic/p ">Le contenu du sandbox de sécurité de l’application AIR ne peut pas charger le contenu d’autres sandbox dans son domaine de sécurité.</p>
     
     <p class="- topic/p ">Pour plus d’informations, voir le chapitre « Sécurité » du <i class="+ topic/ph hi-d/i ">Guide du développeur d’ActionScript 3.0</i>.</p>
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#Loader/load()" class="- topic/link "><linktext class="- topic/linktext ">flash.display.Loader.load()</linktext></link><link href="flash.system.xml#SecurityDomain" class="- topic/link "><linktext class="- topic/linktext ">flash.system.SecurityDomain</linktext></link></related-links></apiValue><apiValue id="flash.system:LoaderContext:allowLoadBytesCodeExecution:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">allowLoadBytesCodeExecution</apiName><shortdesc class="- topic/shortdesc ">
     Propriété héritée, remplacée par allowCodeImport, mais toujours prise en charge pour des raisons de compatibilité.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Propriété héritée, remplacée par <codeph class="+ topic/ph pr-d/codeph ">allowCodeImport</codeph>, mais toujours prise en charge pour des raisons de compatibilité. Auparavant, la seule opération affectée par <codeph class="+ topic/ph pr-d/codeph ">allowLoadBytesCodeExecution</codeph> était la méthode <codeph class="+ topic/ph pr-d/codeph ">Loader.loadBytes()</codeph> ; à partir de Flash Player 10.1 et AIR 2.0, l’opération d’importation/chargement de <codeph class="+ topic/ph pr-d/codeph ">Loader.load()</codeph> avec <codeph class="+ topic/ph pr-d/codeph ">LoaderContext.securityDomain = SecurityDomain.currentDomain</codeph> est également affectée. (La dernière opération n’est pas prise en charge dans le sandbox de l’application AIR.) A cause de ce double effet, le nom de la propriété <codeph class="+ topic/ph pr-d/codeph ">allowLoadBytesCodeExecution</codeph> était trop spécifique. Par conséquent, on lui préfère à présent le nom <codeph class="+ topic/ph pr-d/codeph ">allowCodeImport</codeph>. Que vous définissiez <codeph class="+ topic/ph pr-d/codeph ">allowCodeImport</codeph> ou <codeph class="+ topic/ph pr-d/codeph ">allowLoadBytesCodeExecution</codeph>, les deux valeurs en sont affectées.
     
     <p class="- topic/p ">Indique si vous pouvez utiliser un objet <codeph class="+ topic/ph pr-d/codeph ">Loader</codeph> en vue d’importer du contenu avec du code exécutable, tel qu’un fichier SWF, dans le sandbox de sécurité de l’appelant. Si cette propriété est définie sur <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, ces opérations d’importation sont limitées à des opérations sécurisées, telles que le chargement d’images.</p>
     
     <p class="- topic/p ">Dans le contenu AIR dans le sandbox de l’application, la valeur par défaut est <codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Dans le contenu hors application, la valeur par défaut est <codeph class="+ topic/ph pr-d/codeph ">true</codeph>.</p>
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#Loader/loadBytes()" class="- topic/link "><linktext class="- topic/linktext ">flash.display.Loader.loadBytes()</linktext></link></related-links></apiValue></apiClassifier><apiClassifier languages="" id="flash.system:JPEGLoaderContext" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">JPEGLoaderContext</apiName><shortdesc class="- topic/shortdesc ">
 La classe JPEGLoaderContext comprend une propriété permettant d’activer un filtre de dégroupage lors du chargement d’une image JPEG.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.system:LoaderContext</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 La classe JPEGLoaderContext comprend une propriété permettant d’activer un filtre de dégroupage lors du chargement d’une image JPEG. Le filtre de dégroupage améliore la qualité d’une image avec des paramètres de compression plus élevés en lissant les pixels voisins. Pour appliquer le dégroupage lors du chargement d’une image JPEG, créez un objet JPEGLoaderContext, puis définissez la propriété <codeph class="+ topic/ph pr-d/codeph ">deblockingFilter</codeph>. Utilisez ensuite le nom d’objet JPEGLoaderContext en tant que valeur du paramètre <codeph class="+ topic/ph pr-d/codeph ">context</codeph> de la méthode <codeph class="+ topic/ph pr-d/codeph ">load()</codeph> de l’objet Loader utilisée pour charger l’image.
 
 <p class="- topic/p ">La classe JPEGLoaderContext étend la classe LoaderContext. Définissez la propriété <codeph class="+ topic/ph pr-d/codeph ">checkPolicyFile</codeph> sur <codeph class="+ topic/ph pr-d/codeph ">true</codeph> si vous devez accéder par programmation aux pixels de l’image chargée (par exemple, si vous utilisez la méthode <codeph class="+ topic/ph pr-d/codeph ">BitmapData.draw</codeph>). La définition de la propriété <codeph class="+ topic/ph pr-d/codeph ">checkPolicyFile</codeph> n’est pas nécessaire pour le contenu AIR s’exécutant dans le sandbox de l’application.</p>
 
 </apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.display.xml#Loader/load()" class="- topic/link "><linktext class="- topic/linktext ">flash.display.Loader.load()</linktext></link><link href="flash.display.xml#BitmapData/draw()" class="- topic/link "><linktext class="- topic/linktext ">flash.display.BitmapData.draw()</linktext></link></related-links><apiConstructor id="flash.system:JPEGLoaderContext:JPEGLoaderContext" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">JPEGLoaderContext</apiName><shortdesc class="- topic/shortdesc ">
     Crée un objet JPEGLoaderContext avec les paramètres spécifiés.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">deblockingFilter</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0.0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Spécifie la puissance du filtre de dégroupage. La valeur 1.0 applique un filtre de dégroupage puissant ; la valeur 0.0 désactive le filtre de dégroupage.
     
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">checkPolicyFile</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Indique si Flash Player doit vérifier l’existence d’un fichier de régulation d’URL avant le chargement de l’objet. Ne s’applique pas pour le contenu d’AIR s’exécutant dans le sandbox de l’application.
     
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">applicationDomain</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.system:ApplicationDomain</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Spécifie l’objet ApplicationDomain à utiliser pour un objet Loader.
     
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">securityDomain</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.system:SecurityDomain</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Spécifie l’objet SecurityDomain à utiliser pour un objet Loader.
     
     </apiDesc></apiParam></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Crée un objet JPEGLoaderContext avec les paramètres spécifiés. 
     
     </apiDesc></apiConstructorDetail><related-links class="- topic/related-links "><link href="flash.system.xml#LoaderContext" class="- topic/link "><linktext class="- topic/linktext ">flash.system.LoaderContext</linktext></link><link href="flash.display.xml#Loader/load()" class="- topic/link "><linktext class="- topic/linktext ">flash.display.Loader.load()</linktext></link><link href="flash.display.xml#Loader/loadBytes()" class="- topic/link "><linktext class="- topic/linktext ">flash.display.Loader.loadBytes()</linktext></link><link href="flash.system.xml#ApplicationDomain" class="- topic/link "><linktext class="- topic/linktext ">flash.system.ApplicationDomain</linktext></link><link href="flash.system.xml#SecurityDomain" class="- topic/link "><linktext class="- topic/linktext ">flash.system.SecurityDomain</linktext></link></related-links></apiConstructor><apiValue id="flash.system:JPEGLoaderContext:deblockingFilter" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">deblockingFilter</apiName><shortdesc class="- topic/shortdesc "> 
	 Spécifie la puissance du filtre de dégroupage. </shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">0.0</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	 Spécifie la puissance du filtre de dégroupage. La valeur 1.0 applique un filtre de dégroupage puissant ; la valeur 0.0 désactive le filtre de dégroupage.
	 
	 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.system:Capabilities" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">Capabilities</apiName><shortdesc class="- topic/shortdesc ">
 La classe Capabilities fournit des propriétés qui décrivent le système et le moteur d’exécution qui hébergent l’application.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">Capabilities, Capabilities object, built-in class
  
  </keyword></asCustoms></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 <ph class="- topic/ph "> La classe Capabilities fournit des propriétés qui décrivent le système et le moteur d’exécution qui hébergent l’application. Par exemple, l’écran d’un téléphone portable peut être de 100 pixels carrés et en noir et blanc, alors qu’un écran d’ordinateur peut être de 1 000 pixels carrés et en couleurs. Si vous utilisez la classe Capabilities pour déterminer les fonctionnalités dont dispose le client, vous pouvez fournir le contenu approprié à autant d’utilisateurs que possible. Lorsque vous connaissez les fonctionnalités du périphérique, vous pouvez demander au serveur d’envoyer les fichiers SWF ou demander au fichier SWF de modifier sa présentation.</ph>
 
 
 
 <p class="- topic/p ">Toutefois, certaines fonctionnalités d’Adobe AIR ne sont pas répertoriés comme propriétés de la classe Capabilities. Il s’agit de propriétés d’autres classes : </p>
 
 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Description</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">NativeApplication.supportsDockIcon</codeph></entry><entry class="- topic/entry ">Indique si le système d’exploitation prend en charge les icônes d’application dans le Dock.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">NativeApplication.supportsMenu</codeph></entry><entry class="- topic/entry ">Indique si le système d’exploitation prend en charge une barre de menus d’application globale.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">NativeApplication.supportsSystemTrayIcon</codeph></entry><entry class="- topic/entry ">Indique si le système d’exploitation prend en charge les icônes de la barre d’état système.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">NativeWindow.supportsMenu</codeph></entry><entry class="- topic/entry ">Indique si le système d’exploitation prend en charge les menus de fenêtre. </entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">NativeWindow.supportsTransparency</codeph></entry><entry class="- topic/entry ">Indique si le système d’exploitation prend en charge les fenêtres transparentes. </entry></row></tbody></tgroup></adobetable>
 
 <p class="- topic/p ">N’utilisez <i class="+ topic/ph hi-d/i ">pas</i> les classes <codeph class="+ topic/ph pr-d/codeph ">Capabilities.os</codeph> ou <codeph class="+ topic/ph pr-d/codeph ">Capabilities.manufacturer</codeph> pour déterminer une fonctionnalité en fonction du système d’exploitation. Fonder une fonctionnalité sur le système d’exploitation est une mauvaise idée, car cela peut engendrer des problèmes si une application ne prend pas en compte tous les systèmes d’exploitation cible potentiels. En revanche, vous pouvez utiliser la propriété qui correspond à la fonctionnalité pour laquelle vous effectuez le test. </p>
 
 <p class="- topic/p ">Vous pouvez envoyer des informations sur les capacités, qui sont stockées dans la propriété <codeph class="+ topic/ph pr-d/codeph ">Capabilities.serverString</codeph> en tant que chaîne codée au format URL, à l’aide de la méthode HTTP <codeph class="+ topic/ph pr-d/codeph ">GET</codeph> ou <codeph class="+ topic/ph pr-d/codeph ">POST</codeph>. L’exemple suivant présente une chaîne serveur pour un ordinateur prenant en charge le format MP3 et disposant d’une résolution de 1 600 x 1 200 pixels, qui exécute Windows XP et où un IME est installé :</p>
 
 <pre xml:space="preserve" class="- topic/pre ">A=t&amp;SA=t&amp;SV=t&amp;EV=t&amp;MP3=t&amp;AE=t&amp;VE=t&amp;ACC=f&amp;PR=t&amp;SP=t&amp;
     SB=f&amp;DEB=t&amp;V=WIN%209%2C0%2C0%2C0&amp;M=Adobe%20Windows&amp;
     R=1600x1200&amp;DP=72&amp;COL=color&amp;AR=1.0&amp;OS=Windows%20XP&amp;
     L=en&amp;PT=External&amp;AVD=f&amp;LFD=f&amp;WD=f&amp;IME=t</pre>
 
 <p class="- topic/p ">Le tableau suivant dresse la liste des propriétés de la classe Capabilities et des chaînes serveur correspondantes :
 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry align="left" class="- topic/entry ">Propriété de la classe Capabilities</entry><entry align="left" class="- topic/entry ">Chaîne serveur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">avHardwareDisable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">AVD</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">hasAccessibility</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">ACC</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">hasAudio</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">A</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">hasAudioEncoder</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">AE</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">hasEmbeddedVideo</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">EV</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">hasIME</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">IME</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">hasMP3</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">MP3</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">hasPrinting</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">PR</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">hasScreenBroadcast</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">SB</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">hasScreenPlayback</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">SP</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">hasStreamingAudio</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">SA</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">hasStreamingVideo</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">SV</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">hasTLS</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">TLS</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">hasVideoEncoder</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">VE</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">isDebugger</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">DEB</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">language</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">L</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">localFileReadDisable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">LFD</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">manufacturer</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">M</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">maxLevelIDC</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">ML</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">os</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">OS</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">pixelAspectRatio</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">AR</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">playerType</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">PT</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">screenColor</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">COL</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">screenDPI</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">DP</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">screenResolutionX</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">R</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">screenResolutionY</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">R</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">version</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">V</codeph></entry></row></tbody></tgroup></adobetable>
 </p>
  
 <p class="- topic/p ">Il existe également une chaîne de serveur <codeph class="+ topic/ph pr-d/codeph ">WD</codeph> qui indique si lz mode sans fenêtre est désactivé. Le mode sans fenêtre peut être désactivé dans Flash Player en raison d’incompatibilité avec le navigateur Web ou d’un paramètre utilisateur dans le fichier mms.cfg. Il n’existe pas de propriété Capabilities équivalente. </p>
  
 <p class="- topic/p ">Toutes les propriétés de la classe Capabilities sont accessibles en lecture seule.</p>
 
 </apiDesc><example conref="examples\CapabilitiesExample.as" class="- topic/example "> L’exemple suivant renvoie les valeurs détectées dans l’objet flash.system.Capabilities. Il renvoie tout d’abord les valeurs dans un champ de texte. Ensuite, il renvoie les valeurs au moyen de plusieurs appels de la méthode <codeph class="+ topic/ph pr-d/codeph ">trace()</codeph>.
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">

package {
    import flash.display.Sprite;
    import flash.system.Capabilities;
    import flash.text.TextField;
    import flash.text.TextFieldAutoSize;

    public class CapabilitiesExample extends Sprite {
        
        public function CapabilitiesExample() {
            showCapabilities();
        }
        
        private function showCapabilities():void {
            var tf:TextField = new TextField();
            tf.height = 600;
            tf.width = 400;
            tf.autoSize = TextFieldAutoSize.LEFT;
            tf.wordWrap = true;
            
            tf.text = "avHardwareDisable: " + Capabilities.avHardwareDisable +
                
                "\nhasAccessibility: " + Capabilities.hasAccessibility +
                "\nhasAudio: " + Capabilities.hasAudio +
                "\nhasAudioEncoder: " + Capabilities.hasAudioEncoder +
                "\nhasEmbeddedVideo: " + Capabilities.hasEmbeddedVideo +
                "\nhasIME: " + Capabilities.hasIME +
                "\nhasMP3: " + Capabilities.hasMP3 +
                "\nhasPrinting: " + Capabilities.hasPrinting +
                "\nhasScreenBroadcast: " + Capabilities.hasScreenBroadcast +
                "\nhasScreenPlayback: " + Capabilities.hasScreenPlayback +
                "\nhasStreamingAudio: " + Capabilities.hasStreamingAudio +
                "\nhasStreamingVideo: " + Capabilities.hasStreamingVideo +
                "\nhasTLS: " + Capabilities.hasTLS +
                "\nhasVideoEncoder: " + Capabilities.hasVideoEncoder +
                "\nisDebugger: " + Capabilities.isDebugger +
                "\nisEmbeddedInAcrobat: " + Capabilities.isEmbeddedInAcrobat +
                "\nlanguage: " + Capabilities.language +
                "\nlocalFileReadDisable: " + Capabilities.localFileReadDisable +
                "\nmanufacturer: " + Capabilities.manufacturer +
                "\nmaxLevelIDC: " + Capabilities.maxLevelIDC +
                "\nos: " + Capabilities.os +
                "\npixelAspectRatio: " + Capabilities.pixelAspectRatio +
                "\nplayerType: " + Capabilities.playerType +
                "\nscreenColor: " + Capabilities.screenColor +
                "\nscreenDPI: " + Capabilities.screenDPI +
                "\nscreenResolutionX: " + Capabilities.screenResolutionX +
                "\nscreenResolutionY: " + Capabilities.screenResolutionY +
                "\nserverString: " + Capabilities.serverString +
                "\ntouchscreenType: " + Capabilities.touchscreenType +
                
                // The following capabilities are supported only when publishing for AIR.
                // If you are publishing for AIR, uncomment the following lines.
                //"\nlanguages: " + Capabilities.languages +
                //"\ncpuArchitecture: " + Capabilities.cpuArchitecture +
                //"\nsupports32BitProcesses: " + Capabilities.supports32BitProcesses +
                //"\nsupports64BitProcesses: " + Capabilities.supports64BitProcesses +    
                                
                "\nversion: " + Capabilities.version;
                
            addChild(tf);   
                
            trace("avHardwareDisable: " + Capabilities.avHardwareDisable);
            trace("hasAccessibility: " + Capabilities.hasAccessibility);
            trace("hasAudio: " + Capabilities.hasAudio);
            trace("hasAudioEncoder: " + Capabilities.hasAudioEncoder);
            trace("hasEmbeddedVideo: " + Capabilities.hasEmbeddedVideo);
            trace("hasIME: " + Capabilities.hasIME);
            trace("hasMP3: " + Capabilities.hasMP3);
            trace("hasPrinting: " + Capabilities.hasPrinting);
            trace("hasScreenBroadcast: " + Capabilities.hasScreenBroadcast);
            trace("hasScreenPlayback: " + Capabilities.hasScreenPlayback);
            trace("hasStreamingAudio: " + Capabilities.hasStreamingAudio);
            trace("hasStreamingVideo: " + Capabilities.hasStreamingVideo);
            trace("hasTLS: " + Capabilities.hasTLS);
            trace("hasVideoEncoder: " + Capabilities.hasVideoEncoder);
            trace("isDebugger: " + Capabilities.isDebugger);
            trace("isEmbeddedInAcrobat: " + Capabilities.isEmbeddedInAcrobat);
            trace("language: " + Capabilities.language);
            trace("localFileReadDisable: " + Capabilities.localFileReadDisable);
            trace("manufacturer: " + Capabilities.manufacturer);
            trace("maxLevelIDC: " + Capabilities.maxLevelIDC);
            trace("os: " + Capabilities.os);
            trace("pixelAspectRatio: " + Capabilities.pixelAspectRatio);
            trace("playerType: " + Capabilities.playerType);
            trace("screenColor: " + Capabilities.screenColor);
            trace("screenDPI: " + Capabilities.screenDPI);
            trace("screenResolutionX: " + Capabilities.screenResolutionX);
            trace("screenResolutionY: " + Capabilities.screenResolutionY);
            trace("serverString: " + Capabilities.serverString);
            trace("touchscreenType: " + Capabilities.touchscreenType);
            
            // The following capabilities are supported only when publishing for AIR.
            // If you are publishing for AIR, uncomment the following lines.       
            //trace("cpuArchitecture: " + Capabilities.cpuArchitecture);
            //trace("languages: " + Capabilities.languages);
            //trace("supports32BitProcesses: " + Capabilities.supports32BitProcesses);
            //trace("supports64BitProcesses: " + Capabilities.supports64BitProcesses);        
                        
            trace("version: " + Capabilities.version);
       
        }
    }
}

</codeblock></example></apiClassifierDetail><apiValue id="flash.system:Capabilities:avHardwareDisable:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">avHardwareDisable</apiName><shortdesc class="- topic/shortdesc ">
	 Spécifie si l’accès à la caméra et au microphone de l’utilisateur a été interdit (true) ou autorisé (false) par l’administrateur.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">Capabilities, Capabilities.avHardwareDisable, avHardwareDisable
	  
	  </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Spécifie si l’accès à la caméra et au microphone de l’utilisateur a été interdit (<codeph class="+ topic/ph pr-d/codeph ">true</codeph>) ou autorisé (<codeph class="+ topic/ph pr-d/codeph ">false</codeph>) par l’administrateur. La chaîne serveur est <codeph class="+ topic/ph pr-d/codeph ">AVD</codeph>.
	 
	 <p class="- topic/p ">Pour le contenu dans Adobe AIR™, cette propriété s’applique uniquement au contenu des sandboxes de sécurité autres que le sandbox de sécurité de l’application. Le contenu du sandbox de sécurité de l’application peut toujours accéder au microphone et à la caméra de l’utilisateur.</p>
 	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.media.xml#Camera/getCamera()" class="- topic/link "><linktext class="- topic/linktext ">flash.media.Camera.getCamera()</linktext></link><link href="flash.media.xml#Microphone/getMicrophone()" class="- topic/link "><linktext class="- topic/linktext ">flash.media.Microphone.getMicrophone()</linktext></link><link href="flash.system.xml#Security/showSettings()" class="- topic/link "><linktext class="- topic/linktext ">Security.showSettings()</linktext></link></related-links></apiValue><apiValue id="flash.system:Capabilities:cpuArchitecture:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">cpuArchitecture</apiName><shortdesc class="- topic/shortdesc ">
	 Spécifie l’architecture de l’unité centrale de traitement (CPU) actuelle.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.0.32" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5.1" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><oldexample>The following example traces the value of this read-only property:
	 <pre xml:space="preserve" class="- topic/pre ">
	 trace(Capabilities.cpuArchitecture);
	 </pre>
	  
	 </oldexample></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Spécifie l’architecture de l’unité centrale de traitement (CPU) actuelle. La propriété <codeph class="+ topic/ph pr-d/codeph ">cpuArchitecture</codeph> peut renvoyer les chaînes suivantes : <codeph class="+ topic/ph pr-d/codeph ">PowerPC</codeph>, <codeph class="+ topic/ph pr-d/codeph ">x86</codeph>, <codeph class="+ topic/ph pr-d/codeph ">SPARC</codeph> et <codeph class="+ topic/ph pr-d/codeph ">ARM</codeph>. La chaîne serveur est <codeph class="+ topic/ph pr-d/codeph ">ARCH</codeph>.
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.system:Capabilities:hasAccessibility:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">hasAccessibility</apiName><shortdesc class="- topic/shortdesc ">
	 Spécifie si le système prend en charge (true) ou non (false) la communication avec des aides d’accessibilité.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">Capabilities, Capabilities.hasAccessibility, hasAccessibility,
	 accessibility
	  
	  </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Spécifie si le système prend en charge (<codeph class="+ topic/ph pr-d/codeph ">true</codeph>) ou non (<codeph class="+ topic/ph pr-d/codeph ">false</codeph>) la communication avec des aides d’accessibilité. La chaîne serveur est <codeph class="+ topic/ph pr-d/codeph ">ACC</codeph>. 
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.accessibility.xml#Accessibility/active" class="- topic/link "><linktext class="- topic/linktext ">flash.accessibility.Accessibility.active</linktext></link><link href="flash.accessibility.xml#Accessibility/updateProperties()" class="- topic/link "><linktext class="- topic/linktext ">flash.accessibility.Accessibility.updateProperties()</linktext></link></related-links></apiValue><apiValue id="flash.system:Capabilities:hasAudioEncoder:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">hasAudioEncoder</apiName><shortdesc class="- topic/shortdesc ">
	 Spécifie si le système peut (true) ou ne peut pas (false) coder un flux audio continu, en provenance d’un microphone par exemple.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">Capabilities, Capabilities.hasAudioEncoder, hasAudioEncoder 
	  
	  </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Spécifie si le système peut (<codeph class="+ topic/ph pr-d/codeph ">true</codeph>) ou ne peut pas (<codeph class="+ topic/ph pr-d/codeph ">false</codeph>) coder un flux audio continu, en provenance d’un microphone par exemple. La chaîne serveur est <codeph class="+ topic/ph pr-d/codeph ">AE</codeph>.
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.system:Capabilities:hasAudio:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">hasAudio</apiName><shortdesc class="- topic/shortdesc ">
	 Spécifie si le système est doté de fonctionnalités audio.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">Capabilities, Capabilities.hasAudio, hasAudio
	  
	  </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Spécifie si le système est doté de fonctionnalités audio. Cette propriété est toujours définie sur <codeph class="+ topic/ph pr-d/codeph ">true</codeph>. La chaîne serveur est <codeph class="+ topic/ph pr-d/codeph ">A</codeph>.
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.system:Capabilities:hasEmbeddedVideo:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">hasEmbeddedVideo</apiName><shortdesc class="- topic/shortdesc ">
	 Spécifie si le système prend en charge (true) ou non (false) la vidéo incorporée.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">Capabilities, Capabilities.hasEmbeddedVideo, hasEmbeddedVideo, video
	  
	  </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Spécifie si le système prend en charge (<codeph class="+ topic/ph pr-d/codeph ">true</codeph>) ou non (<codeph class="+ topic/ph pr-d/codeph ">false</codeph>) la vidéo incorporée. La chaîne serveur est <codeph class="+ topic/ph pr-d/codeph ">EV</codeph>. 
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.system:Capabilities:hasIME:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">hasIME</apiName><shortdesc class="- topic/shortdesc ">
	 Spécifie si un IME est installé (true) ou non (false) sur le système.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">Capabilities, Capabilities.hasIME, hasIME, IME 
	  
	  </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Spécifie si un IME est installé (<codeph class="+ topic/ph pr-d/codeph ">true</codeph>) ou non (<codeph class="+ topic/ph pr-d/codeph ">false</codeph>) sur le système. La chaîne serveur est <codeph class="+ topic/ph pr-d/codeph ">IME</codeph>. 
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.system.xml#IME" class="- topic/link "><linktext class="- topic/linktext ">flash.system.IME</linktext></link><link href="flash.system.xml#System/ime" class="- topic/link "><linktext class="- topic/linktext ">flash.system.System.ime</linktext></link></related-links></apiValue><apiValue id="flash.system:Capabilities:hasMP3:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">hasMP3</apiName><shortdesc class="- topic/shortdesc ">
	 Spécifie si le système est équipé (true) ou non (false) d’un décodeur MP3.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">Capabilities, Capabilities.hasMP3, hasMP3, MP3, audio
	  
	  </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Spécifie si le système est équipé (<codeph class="+ topic/ph pr-d/codeph ">true</codeph>) ou non (<codeph class="+ topic/ph pr-d/codeph ">false</codeph>) d’un décodeur MP3. La chaîne serveur est <codeph class="+ topic/ph pr-d/codeph ">MP3</codeph>.
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.system:Capabilities:hasPrinting:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">hasPrinting</apiName><shortdesc class="- topic/shortdesc ">
	 Spécifie si le système prend en charge (true) ou non (false) l’impression.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">Capabilities, Capabilities.hasPrinting, hasPrinting, printing 
	  
	  </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Spécifie si le système prend en charge (<codeph class="+ topic/ph pr-d/codeph ">true</codeph>) ou non (<codeph class="+ topic/ph pr-d/codeph ">false</codeph>) l’impression. La chaîne serveur est <codeph class="+ topic/ph pr-d/codeph ">PR</codeph>. 
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.system:Capabilities:hasScreenBroadcast:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">hasScreenBroadcast</apiName><shortdesc class="- topic/shortdesc ">
	 Spécifie si le système prend en charge (true) ou non (false) le développement d’applications de diffusion à l’écran avec Flash Media Server.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">Capabilities, Capabilities.hasScreenBroadcast, hasScreenBroadcast
	  
	  </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Spécifie si le système prend en charge (<codeph class="+ topic/ph pr-d/codeph ">true</codeph>) ou non (<codeph class="+ topic/ph pr-d/codeph ">false</codeph>) le développement d’applications de diffusion à l’écran avec Flash Media Server. La chaîne serveur est <codeph class="+ topic/ph pr-d/codeph ">SB</codeph>.
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.system:Capabilities:hasScreenPlayback:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">hasScreenPlayback</apiName><shortdesc class="- topic/shortdesc ">
	 Spécifie si le système prend en charge (true) ou non (false) la lecture d’applications de diffusion à l’écran avec Flash Media Server.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">Capabilities, Capabilities.hasScreenPlayback, hasScreenPlayback
	  
	  </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Spécifie si le système prend en charge (<codeph class="+ topic/ph pr-d/codeph ">true</codeph>) ou non (<codeph class="+ topic/ph pr-d/codeph ">false</codeph>) la lecture d’applications de diffusion à l’écran avec Flash Media Server. La chaîne serveur est <codeph class="+ topic/ph pr-d/codeph ">SP</codeph>.
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.system:Capabilities:hasStreamingAudio:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">hasStreamingAudio</apiName><shortdesc class="- topic/shortdesc ">
	 Spécifie si le système peut (true) ou ne peut pas (false) lire des données audio en diffusion continue.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">Capabilities, Capabilities.hasStreamingAudio, hasStreamingAudio, audio
	  
	  </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Spécifie si le système peut (<codeph class="+ topic/ph pr-d/codeph ">true</codeph>) ou ne peut pas (<codeph class="+ topic/ph pr-d/codeph ">false</codeph>) lire des données audio en diffusion continue. La chaîne serveur est <codeph class="+ topic/ph pr-d/codeph ">SA</codeph>.
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.system:Capabilities:hasStreamingVideo:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">hasStreamingVideo</apiName><shortdesc class="- topic/shortdesc ">
	 Spécifie si le système peut (true) ou ne peut pas (false) lire des données vidéo en diffusion continue.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">Capabilities, Capabilities.hasStreamingVideo, hasStreamingVideo, video
	  
	  </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Spécifie si le système peut (<codeph class="+ topic/ph pr-d/codeph ">true</codeph>) ou ne peut pas (<codeph class="+ topic/ph pr-d/codeph ">false</codeph>) lire des données vidéo en diffusion continue. La chaîne serveur est <codeph class="+ topic/ph pr-d/codeph ">SV</codeph>.
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.system:Capabilities:hasTLS:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">hasTLS</apiName><shortdesc class="- topic/shortdesc ">
	 Spécifie si le système prend en charge les sockets SSL natifs via NetConnection (true) ou non (false).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">Capabilities, Capabilities.hasTLS, hasTLS, TLS 
	  
	  </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Spécifie si le système prend en charge les sockets SSL natifs via NetConnection (<codeph class="+ topic/ph pr-d/codeph ">true</codeph>) ou non (<codeph class="+ topic/ph pr-d/codeph ">false</codeph>). La chaîne serveur est <codeph class="+ topic/ph pr-d/codeph ">TLS</codeph>.
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetConnection/connectedProxyType" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetConnection.connectedProxyType</linktext></link><link href="flash.net.xml#NetConnection/proxyType" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetConnection.proxyType</linktext></link><link href="flash.net.xml#NetConnection/usingTLS" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetConnection.usingTLS</linktext></link></related-links></apiValue><apiValue id="flash.system:Capabilities:hasVideoEncoder:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">hasVideoEncoder</apiName><shortdesc class="- topic/shortdesc ">
	 Spécifie si le système peut (true) ou ne peut pas (false) coder un flux vidéo continu, en provenance d’une caméra Web par exemple.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">Capabilities, Capabilities.hasVideoEncoder, hasVideoEncoder
	  
	  </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Spécifie si le système peut (<codeph class="+ topic/ph pr-d/codeph ">true</codeph>) ou ne peut pas (<codeph class="+ topic/ph pr-d/codeph ">false</codeph>) coder un flux vidéo continu, en provenance d’une caméra Web par exemple. La chaîne serveur est <codeph class="+ topic/ph pr-d/codeph ">VE</codeph>.
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.system:Capabilities:isDebugger:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">isDebugger</apiName><shortdesc class="- topic/shortdesc "> 
	 Spécifie si le système est une version débogueur (true) ou une version officielle (false).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">Capabilities, Capabilities.isDebugger, isDebugger, debugging 
	  
	  </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	 Spécifie si le système est une version débogueur (<codeph class="+ topic/ph pr-d/codeph ">true</codeph>) ou une version officielle (<codeph class="+ topic/ph pr-d/codeph ">false</codeph>). La chaîne serveur est <codeph class="+ topic/ph pr-d/codeph ">DEB</codeph>. Cette propriété est définie sur <codeph class="+ topic/ph pr-d/codeph ">true</codeph> lorsqu’elle est exécutée dans <ph class="- topic/ph ">la version débogueur de Flash Player ou </ph>l’application de débogage du lanceur AIR.
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.system:Capabilities:isEmbeddedInAcrobat:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">isEmbeddedInAcrobat</apiName><shortdesc class="- topic/shortdesc ">
	 Indique si le moteur d’exécution de Flash est intégré dans un fichier PDF ouvert dans Acrobat 9.0 ou version ultérieure (true) ou non (false).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9.0.127.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">Capabilities, Capabilities.isEmbeddedInAcrobat, isEmbeddedInAcrobat, Acrobat
	  
	  </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Indique si le moteur d’exécution de Flash est intégré dans un fichier PDF ouvert dans Acrobat 9.0 ou version ultérieure (<codeph class="+ topic/ph pr-d/codeph ">true</codeph>) ou non (<codeph class="+ topic/ph pr-d/codeph ">false</codeph>).
	 
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.system:Capabilities:languages:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">languages</apiName><shortdesc class="- topic/shortdesc ">
		 Tableau de chaînes contenant des informations sur les langues de l’interface utilisateur que l’utilisateur préfère, telles que définies dans le système d’exploitation.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.1" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Array</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 Tableau de chaînes contenant des informations sur les langues de l’interface utilisateur que l’utilisateur préfère, telles que définies dans le système d’exploitation. Les chaînes contiennent des balises de langue (et des informations de zone et de script, le cas échéant) définies par RFC4646 (<xref href="http://www.ietf.org/rfc/rfc4646.txt" scope="external" class="- topic/xref ">http://www.ietf.org/rfc/rfc4646.txt</xref>) et utilisent le tiret comme séparateur (par exemple, <codeph class="+ topic/ph pr-d/codeph ">"en-US"</codeph> ou <codeph class="+ topic/ph pr-d/codeph ">"ja-JP"</codeph>). Les langues apparaissent dans le tableau par ordre de préférence, tel que déterminé par les paramètres du système d’exploitation. 
		 
		 <p class="- topic/p ">Les informations régionales renvoyées dans les chaînes de paramètres régionaux varient en fonction des systèmes d’exploitation. Un système d’exploitation peut renvoyer <codeph class="+ topic/ph pr-d/codeph ">"fr-fr"</codeph>, alors qu’un autre renvoyer simplement <codeph class="+ topic/ph pr-d/codeph ">"fr"</codeph>.</p>
		 
		 <p class="- topic/p ">La première entrée du tableau renvoyé possède généralement le même identifiant de langue principale que la propriété <codeph class="+ topic/ph pr-d/codeph ">Capabilities.language</codeph>. Par exemple, si <codeph class="+ topic/ph pr-d/codeph ">Capabilities.languages[0]</codeph> est définie sur <codeph class="+ topic/ph pr-d/codeph ">"en-US"</codeph>, la propriété <codeph class="+ topic/ph pr-d/codeph ">language</codeph> est définie sur <codeph class="+ topic/ph pr-d/codeph ">"en"</codeph>. Toutefois, si la propriété <codeph class="+ topic/ph pr-d/codeph ">Capabilities.language</codeph> est définie sur <codeph class="+ topic/ph pr-d/codeph ">"xu"</codeph> (spécifiant une langue inconnue), le premier élément de ce tableau diffère. Pour cette raison, la propriété <codeph class="+ topic/ph pr-d/codeph ">Capabilities.languages[0]</codeph> est en général plus précise que la propriété <codeph class="+ topic/ph pr-d/codeph ">Capabilities.language</codeph>.</p>
		 
		 <p class="- topic/p ">La chaîne serveur est <codeph class="+ topic/ph pr-d/codeph ">LS</codeph>.</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.system:Capabilities:language:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">language</apiName><shortdesc class="- topic/shortdesc ">
	 Spécifie le code de langue du système sur lequel s’exécute le contenu.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">Capabilities, Capabilities.language, language
	 
	 </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Spécifie le code de langue du système sur lequel s’exécute le contenu. La langue est spécifiée sous forme de code de langue à deux lettres minuscules conformément à ISO 639-1. Pour le Chinois, un code de pays à deux lettres majuscules, conformément à ISO 3166, permet de faire la distinction entre le Chinois traditionnel et le Chinois simplifié. Les codes de langue reposent sur les noms anglais de langue : par exemple, <codeph class="+ topic/ph pr-d/codeph ">hu</codeph> correspond au Hongrois (Hungarian).
	 
	 <p class="- topic/p ">Sur les systèmes en anglais, cette propriété renvoie uniquement le code de langue (<codeph class="+ topic/ph pr-d/codeph ">en</codeph>) et non pas le code du pays. Sur les systèmes Microsoft Windows, cette propriété renvoie la langue de l’interface utilisateur (UI), qui se rapporte à la langue utilisée pour les menus, boîtes de dialogue, messages d’erreur et fichiers d’aide. Le tableau suivant présente les valeurs possibles :
	 
     <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry align="left" class="- topic/entry ">Langue</entry><entry align="left" class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry ">Tchèque</entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cs</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry ">Danois</entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">da</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry ">Néerlandais</entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">nl</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry ">Anglais</entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">fr</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry ">Finnois</entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">fi</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry ">Français</entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">fr</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry ">Allemand</entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">de</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry ">Hongrois</entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">hu</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry ">Italien</entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">it</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry ">Japonais</entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">ja</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry ">Coréen</entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">ko</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry ">Norvégien</entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">no</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry ">Autre/inconnu</entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">xu</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry ">Polonais</entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">pl</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry ">Portugais</entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">pt</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry ">Russe</entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">ru</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry ">Chinois simplifié</entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">zh-CN</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry ">Espagnol</entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">es</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry ">Suédois</entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">sv</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry ">Chinois traditionnel</entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">zh-TW</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry ">Turc</entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">tr</codeph></entry></row></tbody></tgroup></adobetable>
	 </p>
	 
	 <p class="- topic/p "><i class="+ topic/ph hi-d/i ">Remarque :</i> la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">Capabilities.language</codeph> est limitée aux valeurs possibles de cette liste. Du fait de cette restriction, les applications Adobe AIR doivent utiliser le premier élément du tableau <codeph class="+ topic/ph pr-d/codeph ">Capabilities.languages</codeph> pour connaître la langue d’interface utilisateur principale du système. </p>
	 
	 <p class="- topic/p ">La chaîne serveur est <codeph class="+ topic/ph pr-d/codeph ">L</codeph>.</p>
	 
	 </apiDesc><example conref="examples\Capabilities_languageExample.as" class="- topic/example "> Dans l’exemple suivant, le contenu qui s’affiche dépend de la langue du système d’exploitation de l’utilisateur.
 
 <p class="- topic/p ">La propriété <codeph class="+ topic/ph pr-d/codeph ">Capabilities.language</codeph> renvoie le code de langue ISO 639-1 (dans l’exemple, « en » pour l’anglais). L’instruction <codeph class="+ topic/ph pr-d/codeph ">switch</codeph> vérifie le code de langue et définit le contenu du champ de texte <codeph class="+ topic/ph pr-d/codeph ">myTextField</codeph> sur un message d’accueil propre à la langue. Si le code de langue n’est pas pris en charge par l’exemple, la chaîne d’erreur par défaut est renvoyée.</p>
 
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
package {
    import flash.display.Sprite;
    import flash.text.TextField;
    import flash.text.TextFieldAutoSize;
    import flash.system.Capabilities;

    public class Capabilities_languageExample extends Sprite {

        public function Capabilities_languageExample()  {
            var myTextField:TextField = new TextField();         
            myTextField.x = 10;
            myTextField.y = 10;
            myTextField.background = true;
            myTextField.autoSize = TextFieldAutoSize.LEFT;
            
            var greetingEnglish:String = "Hello World";
            var greetingGerman:String = "Hallo Welt";
            var greetingFrench:String = "Bonjour Monde";
            var greetingSpanish:String = "Hola Mundo";

            var lang:String = Capabilities.language;
                         
            switch (lang) {
                case "en":
                    myTextField.text = greetingEnglish;
                    break;
                case "de":
                    myTextField.text = greetingGerman;
                    break;
                case "fr":
                    myTextField.text = greetingFrench;
                    break;
                case "es":
                    myTextField.text = greetingSpanish;
                    break;
                default:
                    myTextField.text = "Sorry your system's language is not supported at this time.";               
            }
             
            this.addChild(myTextField);
        }
    }
}
</codeblock></example></apiValueDetail><related-links class="- topic/related-links "><link href="flash.system.xml#Capabilities/languages" class="- topic/link "><linktext class="- topic/linktext ">langues</linktext></link></related-links></apiValue><apiValue id="flash.system:Capabilities:localFileReadDisable:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">localFileReadDisable</apiName><shortdesc class="- topic/shortdesc ">
	 Spécifie si l’accès en lecture au disque dur de l’utilisateur a été interdit (true) ou autorisé (false) par l’administrateur.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">Capabilities, Capabilities.localFileReadDisable, localFileReadDisable
	  
	  </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Spécifie si l’accès en lecture au disque dur de l’utilisateur a été interdit (<codeph class="+ topic/ph pr-d/codeph ">true</codeph>) ou autorisé (<codeph class="+ topic/ph pr-d/codeph ">false</codeph>) par l’administrateur. Pour le contenu dans Adobe AIR, cette propriété s’applique uniquement au contenu des sandboxes de sécurité autres que le sandbox de sécurité de l’application (le contenu dans le sandbox de sécurité de l’application peut toujours lire à partir du système de fichiers). <ph class="- topic/ph ">Si la propriété est définie sur <codeph class="+ topic/ph pr-d/codeph ">true</codeph>, Flash Player ne peut pas lire de fichiers (y compris le premier fichier de démarrage de Flash Player) sur le disque dur de l’utilisateur.</ph> Si cette propriété est définie sur <codeph class="+ topic/ph pr-d/codeph ">true</codeph>, le contenu AIR situé en dehors du sandbox de sécurité de l’application ne peut pas lire de fichiers sur le disque dur de l’utilisateur. Par exemple, toute tentative de lecture d’un fichier sur le disque dur de l’utilisateur à l’aide des méthodes de chargement échoue si cette propriété est définie sur <codeph class="+ topic/ph pr-d/codeph ">true</codeph>.
	 
	 <p class="- topic/p ">La lecture de bibliothèques partagées à l’exécution est également bloquée si cette propriété est définie sur <codeph class="+ topic/ph pr-d/codeph ">true</codeph> ; en revanche, la lecture d’objets partagés localement est autorisée, indépendamment de la valeur de cette propriété.</p>
	 
	 <p class="- topic/p ">La chaîne serveur est <codeph class="+ topic/ph pr-d/codeph ">LFD</codeph>.</p>
	 
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#Loader" class="- topic/link "><linktext class="- topic/linktext ">flash.display.Loader</linktext></link></related-links></apiValue><apiValue id="flash.system:Capabilities:manufacturer:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">manufacturer</apiName><shortdesc class="- topic/shortdesc ">
	 Spécifie le fabricant de la version active de Flash Player ou du moteur d’exécution AIR, au format « Adobe OSName ».</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">Capabilities, Capabilities.manufacturer, manufacturer
	  
	  </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Spécifie le fabricant <ph class="- topic/ph ">de la version active de Flash Player ou </ph>du moteur d’exécution AIR, au format <codeph class="+ topic/ph pr-d/codeph ">"Adobe</codeph> <codeph class="+ topic/ph pr-d/codeph "><i class="+ topic/ph hi-d/i ">OSName</i>"</codeph>. La valeur de <codeph class="+ topic/ph pr-d/codeph "><i class="+ topic/ph hi-d/i ">NomSE</i></codeph> peut être "<codeph class="+ topic/ph pr-d/codeph ">Windows</codeph>", "<codeph class="+ topic/ph pr-d/codeph ">Macintosh</codeph>", "<codeph class="+ topic/ph pr-d/codeph ">Linux</codeph>" ou tout autre nom de système d’exploitation. La chaîne serveur est <codeph class="+ topic/ph pr-d/codeph ">M</codeph>.
	 
	 <p class="- topic/p ">N’utilisez <i class="+ topic/ph hi-d/i ">pas</i> la classe <codeph class="+ topic/ph pr-d/codeph ">Capabilities.manufacturer</codeph> pour déterminer une fonctionnalité en fonction du système d’exploitation si une propriété de fonctionnalité plus spécifique existe. Fonder une fonctionnalité sur le système d’exploitation est une mauvaise idée, car cela peut engendrer des problèmes si une application ne prend pas en compte tous les systèmes d’exploitation cible potentiels. En revanche, vous pouvez utiliser la propriété qui correspond à la fonctionnalité pour laquelle vous effectuez le test. Pour plus d’informations, voir la description de la classe Capabilities.</p>
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.system:Capabilities:maxLevelIDC:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">maxLevelIDC</apiName><shortdesc class="- topic/shortdesc ">
     Récupère le plus haut niveau IDC H.264 pris en charge par matériel du client.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">Capabilities, Capabilities.maxLevelIDC, maxLevelIDC
      
      </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Récupère le plus haut niveau IDC H.264 pris en charge par matériel du client. L’exécution des fichiers multimédia à ce niveau est garantie. Toutefois, il est possible que leur qualité ne soit pas optimale s’ils sont exécutés au niveau le plus élevé. Cette propriété est utile pour les serveurs qui tentent de cibler les capacités d’un client. Grâce à cette propriété, un serveur peut déterminer le niveau de vidéo à envoyer au client.
     
     <p class="- topic/p ">La chaîne serveur est <codeph class="+ topic/ph pr-d/codeph ">ML</codeph>.</p>
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.system:Capabilities:os:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">os</apiName><shortdesc class="- topic/shortdesc ">
	 Spécifie le système d’exploitation actuel.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">Capabilities, Capabilities.os, os
	  
	  </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Spécifie le système d’exploitation actuel. La propriété <codeph class="+ topic/ph pr-d/codeph ">os</codeph> peut renvoyer les chaînes suivantes :
	
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Système d’exploitation</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry ">Windows 7</entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"Windows 7"</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry ">Windows Vista</entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"Windows Vista"</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry ">Windows Server 2008 R2</entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"Windows Server 2008 R2"</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry ">Windows Server 2008</entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"Windows Server 2008"</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry ">Windows Home Server</entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"Windows Home Server"</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry ">Windows Server 2003 R2</entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"Windows Server 2003 R2"</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry ">Windows Server 2003</entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"Windows Server 2003"</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry ">Windows XP 64</entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"Windows Server XP 64"</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry ">Windows XP</entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"Windows XP"</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry ">Windows 98</entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"Windows 98"</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry ">Windows 95</entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"Windows 95"</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry ">Windows NT</entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"Windows NT"</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry ">Windows 2000</entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"Windows 2000"</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry ">Windows ME</entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"Windows ME"</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry ">Windows CE</entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"Windows CE"</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry ">Windows SmartPhone</entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"Windows SmartPhone"</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry ">Windows PocketPC</entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"Windows PocketPC"</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry ">Windows CEPC</entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"Windows CEPC"</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry ">Windows Mobile</entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"Windows Mobile"</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry ">Mac OS</entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"Mac OS X.Y.Z"</codeph> (où X.Y.Z correspond au numéro de version, par exemple : <codeph class="+ topic/ph pr-d/codeph ">"Mac OS 10.5.2"</codeph>)</entry></row><row class="- topic/row "><entry class="- topic/entry ">Linux</entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"Linux"</codeph> (Flash Player associe la version Linux, telle que <codeph class="+ topic/ph pr-d/codeph ">"Linux 2.6.15-1.2054_FC5smp"</codeph>.</entry></row><row class="- topic/row "><entry class="- topic/entry ">iPhone OS 4.1</entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"iPhone3,1"</codeph></entry></row></tbody></tgroup></adobetable>
	
	 <p class="- topic/p ">La chaîne serveur est <codeph class="+ topic/ph pr-d/codeph ">OS</codeph>.</p>
	 
	 <p class="- topic/p ">N’utilisez <i class="+ topic/ph hi-d/i ">pas</i> la classe <codeph class="+ topic/ph pr-d/codeph ">Capabilities.os</codeph> pour déterminer une fonctionnalité en fonction du système d’exploitation si une propriété de fonctionnalité plus spécifique existe. Fonder une fonctionnalité sur le système d’exploitation est une mauvaise idée, car cela peut engendrer des problèmes si une application ne prend pas en compte tous les systèmes d’exploitation cible potentiels. En revanche, vous pouvez utiliser la propriété qui correspond à la fonctionnalité pour laquelle vous effectuez le test. Pour plus d’informations, voir la description de la classe Capabilities.</p>
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.system:Capabilities:pixelAspectRatio:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">pixelAspectRatio</apiName><shortdesc class="- topic/shortdesc "> 
	 Indique le format de l’écran, en pixels.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">Capabilities, Capabilities.pixelAspectRatio, pixelAspectRatio
	  
	  </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	 Indique le format de l’écran, en pixels. La chaîne serveur est <codeph class="+ topic/ph pr-d/codeph ">AR</codeph>.
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.system:Capabilities:playerType:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">playerType</apiName><shortdesc class="- topic/shortdesc ">
	 Spécifie le type d’environnement d’exécution.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">Capabilities, Capabilities.playerType, playerType
	  
	  </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Spécifie le type d’environnement d’exécution. Cette propriété peut avoir l’une des valeurs suivantes :
	 
	 <ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">"ActiveX"</codeph> pour le contrôle ActiveX de Flash Player utilisé par Microsoft Internet Explorer</li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">"Desktop"</codeph> pour le moteur d’exécution Adobe AIR (sauf pour le contenu SWF chargé par une page HTML, ayant <codeph class="+ topic/ph pr-d/codeph ">Capabilities.playerType</codeph> réglé sur <codeph class="+ topic/ph pr-d/codeph ">"PlugIn"</codeph>)</li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">"External"</codeph><ph outputclass="flashonly" class="- topic/ph "> pour le lecteur Flash Player autonome ou en mode test</ph></li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">"PlugIn"</codeph> pour le module du navigateur Flash Player (et pour le contenu SWF chargé par une page HTML dans une application AIR)</li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">"StandAlone"</codeph> pour le lecteur Flash Player autonome.</li></ul>
	 <p class="- topic/p ">La chaîne serveur est <codeph class="+ topic/ph pr-d/codeph ">PT</codeph>.</p>
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.system:Capabilities:screenColor:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">screenColor</apiName><shortdesc class="- topic/shortdesc ">
	 Permet de spécifier la couleur de l’écran.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">Capabilities, Capabilities.screenColor, screenColor
	  
	  </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Permet de spécifier la couleur de l’écran. Cette propriété peut avoir la valeur "<codeph class="+ topic/ph pr-d/codeph ">color</codeph>", "<codeph class="+ topic/ph pr-d/codeph ">gray</codeph>" (pour niveaux de gris) ou "<codeph class="+ topic/ph pr-d/codeph ">bw</codeph>" (pour le noir et blanc). La chaîne serveur est <codeph class="+ topic/ph pr-d/codeph ">COL</codeph>.
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.system:Capabilities:screenDPI:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">screenDPI</apiName><shortdesc class="- topic/shortdesc ">
	 Spécifie la résolution en points par pouce (dpi) de l’écran, en pixels.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">Capabilities, Capabilities.screenDPI, screenDPI
	  
	  </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Spécifie la résolution en points par pouce (dpi) de l’écran, en pixels. La chaîne serveur est <codeph class="+ topic/ph pr-d/codeph ">DP</codeph>.
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.system:Capabilities:screenResolutionX:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">screenResolutionX</apiName><shortdesc class="- topic/shortdesc ">
	 Spécifie la résolution horizontale maximale de l’écran.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">Capabilities, Capabilities.screenResolutionX, screenResolutionY
	 </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Spécifie la résolution horizontale maximale de l’écran. La chaîne serveur est <codeph class="+ topic/ph pr-d/codeph ">R</codeph> (qui renvoie la largeur et la hauteur de l’écran). Cette propriété n’est pas mise à jour avec une résolution d’écran utilisateur mais indique uniquement la résolution au moment du démarrage <ph class="- topic/ph ">de Flash Player ou </ph>d’une application Adobe AIR. De plus, la valeur spécifie uniquement l’écran principal.
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.system:Capabilities:screenResolutionY:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">screenResolutionY</apiName><shortdesc class="- topic/shortdesc "> 
	 Spécifie la résolution verticale maximale de l’écran.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">Capabilities, Capabilities.screenResolutionY, screenResolutionY
	 </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	 Spécifie la résolution verticale maximale de l’écran. La chaîne serveur est <codeph class="+ topic/ph pr-d/codeph ">R</codeph> (qui renvoie la largeur et la hauteur de l’écran). Cette propriété n’est pas mise à jour avec une résolution d’écran utilisateur mais indique uniquement la résolution au moment du démarrage <ph class="- topic/ph ">de Flash Player ou </ph>d’une application Adobe AIR. De plus, la valeur spécifie uniquement l’écran principal.
	 
	 </apiDesc><example conref="examples\Capabilities_ScreenRes.as" class="- topic/example "> L'exemple suivant est un test simple qui indique la résolution actuelle de l'écran et la version du système d'exploitation. Lors du test de cet exemple, cliquez sur la zone de texte pour afficher les valeurs de la propriété :
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
import flash.events.~;
import flash.display.~;
import flash.system.Capabilities;
import flash.text.TextField;

var screenInfoTxt:TextField = new TextField();
var screenInfoTxt.x = 30;
var screenInfoTxt.y = 50;
var screenInfoTxt.width = 300;
var screenInfoTxt.height = 100;
var screenInfoTxt.border = true;

addChild(screenInfoTxt);

addEventListener(MouseEvent.CLICK, getScreenNVersion);

function getScreenNVersion(e:MouseEvent):void{
    screenInfoTxt.text= "flash.system.Capabilities.screenResolutionX is : " + String(flash.system.Capabilities.screenResolutionX) + "\n" +
    "flash.system.Capabilities.screenResolutionY is : " + String(flash.system.Capabilities.screenResolutionY) + "\n" +
    "flash.system.Capabilities.version is : " + flash.system.Capabilities.version;
}
</codeblock></example></apiValueDetail></apiValue><apiValue id="flash.system:Capabilities:serverString:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">serverString</apiName><shortdesc class="- topic/shortdesc "> 
	 Chaîne codée au format URL qui spécifie des valeurs pour chaque propriété Capabilities.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">Capabilities, Capabilities.serverString, serverString
	  
	  </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	 Chaîne codée au format URL qui spécifie des valeurs pour chaque propriété Capabilities.
	 
	 <p class="- topic/p ">L’exemple suivant illustre une chaîne de code URL :
	 <pre xml:space="preserve" class="- topic/pre ">A=t&amp;SA=t&amp;SV=t&amp;EV=t&amp;MP3=t&amp;AE=t&amp;VE=t&amp;ACC=f&amp;PR=t&amp;SP=t&amp;
	 SB=f&amp;DEB=t&amp;V=WIN%208%2C5%2C0%2C208&amp;M=Adobe%20Windows&amp;
	 R=1600x1200&amp;DP=72&amp;COL=color&amp;AR=1.0&amp;OS=Windows%20XP&amp;
	 L=en&amp;PT=External&amp;AVD=f&amp;LFD=f&amp;WD=f</pre></p>
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.system:Capabilities:supports32BitProcesses:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">supports32BitProcesses</apiName><shortdesc class="- topic/shortdesc ">
	Indique si le système prend en charge l’exécution des traitements 32 bits. </shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.0.32" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5.2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><oldexample>The following example traces the value of this read-only property:
	<pre xml:space="preserve" class="- topic/pre ">
	trace(Capabilities.supports32BitProcesses);
	</pre>
	 
	</oldexample></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Indique si le système prend en charge l’exécution des traitements 32 bits. La chaîne serveur est <codeph class="+ topic/ph pr-d/codeph ">PR32</codeph>.
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.system:Capabilities:supports64BitProcesses:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">supports64BitProcesses</apiName><shortdesc class="- topic/shortdesc ">
	Indique si le système prend en charge l’exécution des traitements 64 bits.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.0.32" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5.2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><oldexample>The following example traces the value of this read-only property:
	<pre xml:space="preserve" class="- topic/pre ">
	trace(Capabilities.supports64BitProcesses);
	</pre>
	 
	</oldexample></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Indique si le système prend en charge l’exécution des traitements 64 bits. La chaîne serveur est <codeph class="+ topic/ph pr-d/codeph ">PR64</codeph>.
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.system:Capabilities:touchscreenType:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">touchscreenType</apiName><shortdesc class="- topic/shortdesc ">
	 Spécifie le type d’écran tactile pris en charge, le cas échéant.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Spécifie le type d’écran tactile pris en charge, le cas échéant. Les valeurs sont définies dans la classe flash.system.TouchscreenType.
	 
	 </apiDesc><example conref="examples\Capabilities_touchScreenType.as" class="- topic/example "> L'exemple suivant est un test simple qui indique le type actuel de l'écran tactile. Lors du test de cet exemple, cliquez sur une zone de texte pour afficher les valeurs de la propriété :
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
import flash.events.~~;
import flash.display.~~;
import flash.system.Capabilities;
import flash.text.TextField;

var capabilitiesTouchScreenTypeTxt:TextField = new TextField();
capabilitiesTouchScreenTypeTxt.width = 300;
capabilitiesTouchScreenTypeTxt.border = true;

addChild(capabilitiesTouchScreenTypeTxt);

addEventListener(MouseEvent.CLICK, getScreenKeyboardType);

function getScreenKeyboardType(e:MouseEvent):void{
    capabilitiesTouchScreenTypeTxt.text= "flash.system.Capabilities.touchscreenType is : " + flash.system.Capabilities.touchscreenType;
}
</codeblock></example></apiValueDetail><related-links class="- topic/related-links "><link href="flash.system.xml#TouchscreenType" class="- topic/link "><linktext class="- topic/linktext ">Classe TouchscreenType</linktext></link><link href="flash.ui.xml#Mouse/supportsCursor" class="- topic/link "><linktext class="- topic/linktext ">flash.ui.Mouse.supportsCursor</linktext></link></related-links></apiValue><apiValue id="flash.system:Capabilities:version:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">version</apiName><shortdesc class="- topic/shortdesc "> 
	 Indique les informations de version et de plateforme de Flash Player ou Adobe&amp;#xAE; AIR&amp;#xAE;.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">Capabilities, Capabilities.version, version
	  
	  </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	 Indique les informations de version et de plateforme de Flash Player ou Adobe<sup class="+ topic/ph hi-d/sup ">®</sup> AIR<sup class="+ topic/ph hi-d/sup ">®</sup>. Le format du numéro de version est : <i class="+ topic/ph hi-d/i ">platform majorVersion, minorVersion, buildNumber, internalBuildNumber</i>. Les valeurs valides pour la propriété <i class="+ topic/ph hi-d/i ">platform</i> sont les suivantes : <codeph class="+ topic/ph pr-d/codeph ">"WIN"</codeph>, <codeph class="+ topic/ph pr-d/codeph ">"MAC"</codeph>, <codeph class="+ topic/ph pr-d/codeph ">"LNX"</codeph> et <codeph class="+ topic/ph pr-d/codeph ">"AND"</codeph>. Vous trouverez ci-dessous quelques exemples d’informations sur la version :
	 
	 <pre xml:space="preserve" class="- topic/pre ">
	 WIN 9,0,0,0  // Flash Player 9 for Windows
	 MAC 7,0,25,0   // Flash Player 7 for Macintosh
	 LNX 9,0,115,0  // Flash Player 9 for Linux
	 AND 10,2,150,0 // Flash Player 10 for Android
	 </pre>
	 
	 <p class="- topic/p ">N’utilisez <i class="+ topic/ph hi-d/i ">pas</i> la classe <codeph class="+ topic/ph pr-d/codeph ">Capabilities.version</codeph> pour déterminer une fonctionnalité en fonction du système d’exploitation si une propriété de fonctionnalité plus spécifique existe. Fonder une fonctionnalité sur le système d’exploitation est une mauvaise idée, car cela peut engendrer des problèmes si une application ne prend pas en compte tous les systèmes d’exploitation cible potentiels. En revanche, vous pouvez utiliser la propriété qui correspond à la fonctionnalité pour laquelle vous effectuez le test. Pour plus d’informations, voir la description de la classe Capabilities.</p>
	 
	 <p class="- topic/p ">La chaîne serveur est <codeph class="+ topic/ph pr-d/codeph ">V</codeph>.</p>
	 
	 </apiDesc><example conref="examples\Capabilities_ScreenRes.as" class="- topic/example "> L'exemple suivant est un test simple qui indique la résolution actuelle de l'écran et la version du système d'exploitation. Lors du test de cet exemple, cliquez sur la zone de texte pour afficher les valeurs de la propriété :
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
import flash.events.~;
import flash.display.~;
import flash.system.Capabilities;
import flash.text.TextField;

var screenInfoTxt:TextField = new TextField();
var screenInfoTxt.x = 30;
var screenInfoTxt.y = 50;
var screenInfoTxt.width = 300;
var screenInfoTxt.height = 100;
var screenInfoTxt.border = true;

addChild(screenInfoTxt);

addEventListener(MouseEvent.CLICK, getScreenNVersion);

function getScreenNVersion(e:MouseEvent):void{
    screenInfoTxt.text= "flash.system.Capabilities.screenResolutionX is : " + String(flash.system.Capabilities.screenResolutionX) + "\n" +
    "flash.system.Capabilities.screenResolutionY is : " + String(flash.system.Capabilities.screenResolutionY) + "\n" +
    "flash.system.Capabilities.version is : " + flash.system.Capabilities.version;
}
</codeblock></example></apiValueDetail></apiValue></apiClassifier><apiOperation id="globalOperation:flash.system:fscommand" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">fscommand</apiName><shortdesc class="- topic/shortdesc ">
 Permet au fichier SWF de communiquer avec Flash Player ou le programme hébergeant Flash Player, tel qu’un navigateur Web.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><oldexample><p class="- topic/p ">In the following example, the <code>fscommand()</code> function sets Flash Player to 
 scale the SWF file to the full monitor screen size when the <code>fullscreen_btn</code> button or 
 <code>unfullscreen_btn</code> is released:</p>
 
 <pre xml:space="preserve" class="- topic/pre ">this.fullscreen_btn.onRelease = function() {
   fscommand("fullscreen", true);
 };
 this.unfullscreen_btn.onRelease = function() {
   fscommand("fullscreen", false);
 };
 </pre>
 
 <p class="- topic/p ">The following example uses the <code>fscommand()</code> function applied to a button in Flash to 
 open a JavaScript message box in an HTML page. The message itself is sent to JavaScript as the 
 <code>fscommand</code> parameter. </p>
 
 <p class="- topic/p ">You must add a function to the HTML page that contains the SWF file. This function, 
 <code><i class="+ topic/ph hi-d/i ">myDocument</i></code><code>_DoFSCommand</code>, sits in the HTML page and waits for an 
 <code>fscommand()</code> function in Flash. When an <code>fscommand</code> is triggered in Flash 
 (for example, when a user presses the button), the <code>command</code> and <code>args</code> strings 
 are passed to the <code><i class="+ topic/ph hi-d/i ">myDocument</i></code><code>_DoFSCommand </code>function. You can use the 
 passed strings in your JavaScript or VBScript code in any way you like. In this example, the function 
 contains a conditional <code>if</code> statement that checks to see if the command string is 
 "<code>messagebox</code>". If it is, a JavaScript alert box (or "message box") opens 
 and displays the contents of the <code>args</code> string.</p>
 
 <pre xml:space="preserve" class="- topic/pre ">function myDocument_DoFSCommand(command, args) {
   if (command == "messagebox") {
      alert(args);
   }
 
 </pre>
 
 <p class="- topic/p ">In the Flash document, add the <code>fscommand()</code> function to a button:</p>
 
 <pre xml:space="preserve" class="- topic/pre ">fscommand("messagebox", "This is a message box called from within Flash.")
 </pre>
 
 <p class="- topic/p ">You can also use expressions for the <code>fscommand()</code> function and parameters, as in the 
 following example:</p>
 
 <pre xml:space="preserve" class="- topic/pre ">fscommand("messagebox", "Hello, " + name + ", welcome to our website!")
 </pre>
 
 <p class="- topic/p ">To test the SWF file, select File > Publish Preview > HTML.</p>
 
 <p class="- topic/p "><strong>Note: </strong>If you publish your SWF file using the Flash with FSCommand template in the 
 HTML 
 tab of the Publish Settings dialog box, the <code>myDocument_DoFSCommand</code> function is inserted 
 automatically. The SWF file's <code>NAME</code> and <code>ID</code> attributes will be the filename. 
 For example, for the file myDocument.fla, the attributes would be set to <code>myDocument</code>.</p>
 </oldexample></asCustoms></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Si la fonction n’est pas appelée en réponse à l’action d’un utilisateur, notamment à un événement de type clic de souris ou pression de touche.
 
 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">Error</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Error</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">command</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Chaîne transmise à l’application hôte ou commande passée à Flash Player.
 
 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">args</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData "/><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Chaîne transmise à l’application hôte ou valeur passée à Flash Player.
 
 </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Permet au fichier SWF de communiquer avec Flash Player ou le programme hébergeant Flash Player, tel qu’un navigateur Web. La fonction <codeph class="+ topic/ph pr-d/codeph ">fscommand()</codeph> permet également de transmettre des messages à Director ou à Visual Basic (VB), Visual C++ et autres programmes ayant recours aux contrôles ActiveX.
 
  
 <p class="- topic/p ">La fonction <codeph class="+ topic/ph pr-d/codeph ">fscommand()</codeph> permet à un fichier SWF de communiquer avec un script dans une page Web. Cependant, l’accès au script est contrôlé par le paramètre <codeph class="+ topic/ph pr-d/codeph ">allowScriptAccess</codeph> de la page Web (vous définissez cet attribut dans le code HTML intégré au fichier SWF, par exemple dans la balise <codeph class="+ topic/ph pr-d/codeph ">PARAM</codeph> pour Internet Explorer ou dans la balise <codeph class="+ topic/ph pr-d/codeph ">EMBED</codeph> pour Netscape). </p>
  <ul class="- topic/ul "><li class="- topic/li "> Lorsque <codeph class="+ topic/ph pr-d/codeph ">allowScriptAccess</codeph>est défini sur <codeph class="+ topic/ph pr-d/codeph ">"sameDomain"</codeph> (par défaut), les scripts sont uniquement autorisés à partir des fichiers SWF qui se trouvent dans le même domaine que la page Web. </li><li class="- topic/li "> Lorsque <codeph class="+ topic/ph pr-d/codeph ">allowScriptAccess</codeph> est défini sur <codeph class="+ topic/ph pr-d/codeph ">"always"</codeph>, le fichier SWF peut communiquer avec la page HTML dans laquelle il est intégré, même s’il ne provient pas du même domaine que la page HTML. </li><li class="- topic/li ">Lorsque l’attribut <codeph class="+ topic/ph pr-d/codeph ">allowScriptAccess</codeph> est défini sur <codeph class="+ topic/ph pr-d/codeph ">"never"</codeph>, le fichier SWF ne peut communiquer avec aucune page HTML. Notez que l’utilisation de cette valeur est déconseillée, voire inutile si vous n’envoyez pas de fichiers SWF non approuvés depuis votre propre domaine. Si vous devez envoyer des fichiers SWF non approuvés, Adobe vous conseille de créer un sous-domaine distinct et d’y placer l’ensemble du contenu non approuvé. </li></ul>
 
 <p class="- topic/p ">Vous pouvez empêcher un fichier SWF d’utiliser cette méthode en définissant le paramètre <codeph class="+ topic/ph pr-d/codeph ">allowNetworking</codeph> des balises <codeph class="+ topic/ph pr-d/codeph ">object</codeph> et <codeph class="+ topic/ph pr-d/codeph ">embed</codeph> dans la page HTML qui comporte le contenu SWF. </p>
 
 <p class="- topic/p ">La fonction <codeph class="+ topic/ph pr-d/codeph ">fscommand()</codeph> n’est pas autorisée si le fichier SWF appelant se trouve dans le système de fichiers local ou dans le Sandbox du réseau local et si la page HTML contenant ce fichier se trouve dans un Sandbox non approuvé.</p>
 
 <p class="- topic/p ">Pour plus d’informations concernant la sécurité, voir la rubrique du Pôle de développement Flash Player : <xref href="http://www.adobe.com/go/devnet_security_fr" scope="external" class="- topic/xref ">Sécurité</xref> (disponible en anglais uniquement).</p>
 
 <p class="- topic/p ">Usage 1 : pour utiliser <codeph class="+ topic/ph pr-d/codeph ">fscommand()</codeph> afin d’envoyer un message à Flash Player, vous devez utiliser les commandes et les paramètres prédéfinis. Le tableau suivant indique les valeurs que vous pouvez spécifier pour les paramètres <codeph class="+ topic/ph pr-d/codeph ">command</codeph> et <codeph class="+ topic/ph pr-d/codeph ">args</codeph> de la fonction <codeph class="+ topic/ph pr-d/codeph ">fscommand()</codeph>. Ces valeurs contrôlent les fichiers SWF lus par Flash Player, y compris les projections (une <i class="+ topic/ph hi-d/i ">projection</i> est un fichier SWF enregistré sous un format permettant de l’exécuter en tant qu’application autonome, pouvant être lue sans Flash Player).</p>
 
              <adobetable class="innertable"><tgroup cols="3" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Commande</entry><entry class="- topic/entry ">Parameter (args)</entry><entry class="- topic/entry ">Rôle</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">quit</codeph></entry><entry class="- topic/entry ">Aucun</entry><entry class="- topic/entry ">Ferme la projection.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">fullscreen</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> ou <codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry><entry class="- topic/entry ">Spécifiez <codeph class="+ topic/ph pr-d/codeph ">true</codeph> pour exécuter Flash Player en mode plein écran. Spécifiez <codeph class="+ topic/ph pr-d/codeph ">false</codeph> pour rétablir le mode d’affichage normal du menu.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">allowscale</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> ou <codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry><entry class="- topic/entry ">Si vous spécifiez <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, le lecteur affiche toujours la taille d’origine du fichier SWF, sans le redimensionner. Si vous spécifiez <codeph class="+ topic/ph pr-d/codeph ">true</codeph>, le fichier SWF adopte l’échelle 100 % du lecteur.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">showmenu</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> ou <codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry><entry class="- topic/entry ">Spécifiez <codeph class="+ topic/ph pr-d/codeph ">true</codeph> pour activer le jeu complet d’éléments de menu contextuel. Spécifiez <codeph class="+ topic/ph pr-d/codeph ">false</codeph> pour masquer tous les éléments de menu contextuel, à l’exception de A propos de Flash Player et Paramètres.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">exec</codeph></entry><entry class="- topic/entry ">Chemin de l’application </entry><entry class="- topic/entry ">Exécute une application depuis la projection.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">trapallkeys</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> ou <codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry><entry class="- topic/entry ">Spécifiez <codeph class="+ topic/ph pr-d/codeph ">true</codeph> pour envoyer tous les événements de touche, y compris les touches de raccourci, au gestionnaire <codeph class="+ topic/ph pr-d/codeph ">onClipEvent(keyDown/keyUp)</codeph> de Flash Player. </entry></row></tbody></tgroup></adobetable>
 <p class="- topic/p ">Toutes les commandes qui figurent dans le tableau ne sont pas disponibles dans toutes les applications : 
 <ul class="- topic/ul "><li class="- topic/li ">Aucune des commandes n’est disponible dans les lecteurs Web.</li><li class="- topic/li ">Toutes les commandes sont disponibles dans les applications de projecteur autonome.</li><li class="- topic/li ">Les applications AIR doivent utiliser la classe flash.desktop.NativeApplication pour les fonctions similaires telles que <codeph class="+ topic/ph pr-d/codeph ">NativeApplication.nativeApplication.exit()</codeph> au lieu de <codeph class="+ topic/ph pr-d/codeph ">fscommand("quit")</codeph>.</li><li class="- topic/li ">Seuls <codeph class="+ topic/ph pr-d/codeph ">allowscale</codeph> et <codeph class="+ topic/ph pr-d/codeph ">exec</codeph> sont disponibles sur les lecteurs de tests d’animation.</li></ul>
 </p>
 
 <p class="- topic/p ">La commande <codeph class="+ topic/ph pr-d/codeph ">exec</codeph> ne peut contenir que les caractères compris entre A et Z, a et z, 0 et 9, les caractères point (.) et souligné (_). La commande <codeph class="+ topic/ph pr-d/codeph ">exec</codeph> ne s’exécute que dans le sous-répertoire fscommand. En d’autres termes, si vous utilisez la commande <codeph class="+ topic/ph pr-d/codeph ">exec</codeph> pour appeler une application, cette application doit résider dans un sous-répertoire appelé fscommand. La commande <codeph class="+ topic/ph pr-d/codeph ">exec</codeph> ne fonctionne qu’à partir d’un fichier de projection Flash.</p>
 
 <p class="- topic/p ">Usage 2 : pour utiliser <codeph class="+ topic/ph pr-d/codeph ">fscommand()</codeph> pour envoyer un message à un langage de programmation tel que JavaScript dans un navigateur Web, vous pouvez transmettre deux paramètres avec les paramètres <codeph class="+ topic/ph pr-d/codeph ">command</codeph> et <codeph class="+ topic/ph pr-d/codeph ">args</codeph>. Ces paramètres peuvent être des chaînes ou des expressions. Ils sont utilisés dans une fonction JavaScript qui gère ou <i class="+ topic/ph hi-d/i ">intercepte</i> la fonction <codeph class="+ topic/ph pr-d/codeph ">fscommand()</codeph>. </p>
 
 <p class="- topic/p ">Dans un navigateur Web, la fonction <codeph class="+ topic/ph pr-d/codeph ">fscommand()</codeph> appelle la fonction JavaScript <codeph class="+ topic/ph pr-d/codeph ">moviename_DoFScommand</codeph>, résidant dans la page Web qui contient le fichier SWF. Pour <codeph class="+ topic/ph pr-d/codeph ">moviename</codeph>, attribuez le nom de l’objet Flash utilisé pour l’attribut <codeph class="+ topic/ph pr-d/codeph ">NAME</codeph> de la balise <codeph class="+ topic/ph pr-d/codeph ">EMBED</codeph> ou la propriété ID de la balise <codeph class="+ topic/ph pr-d/codeph ">OBJECT</codeph>. Si vous attribuez le nom « myMovie » au fichier SWF, la fonction JavaScript <codeph class="+ topic/ph pr-d/codeph ">myMovie_DoFScommand</codeph> est appelée. </p>
 
 <p class="- topic/p ">Dans la page Web qui contient le fichier SWF, définissez l’attribut <codeph class="+ topic/ph pr-d/codeph ">allowScriptAccess</codeph> de manière à autoriser, ou non, le fichier SWF à accéder à la page Web, selon les descriptions ci-dessus (vous définissez cet attribut dans le code HTML intégré au fichier SWF, par exemple dans la balise <codeph class="+ topic/ph pr-d/codeph ">PARAM</codeph> pour Internet Explorer ou dans la balise <codeph class="+ topic/ph pr-d/codeph ">EMBED</codeph> pour Netscape). </p>
 
 <p class="- topic/p ">Dans Flash Player versions 10 et ultérieures s’exécutant dans un navigateur, il est possible que vous ne puissiez pas utiliser cette méthode par programmation pour ouvrir une fenêtre contextuelle. Certains navigateurs (et configurations de navigateur) peuvent bloquer les fenêtres contextuelles ; il n’est donc pas possible de garantir l’ouverture de toutes les fenêtres contextuelles. Toutefois, pour un résultat optimal, utilisez cette méthode pour ouvrir une fenêtre contextuelle uniquement dans le code qui s’exécute comme conséquence directe de l’action d’un utilisateur (par exemple, un événement de type clic de souris ou pression de touche).</p>
 
 <p class="- topic/p ">Usage 3 : la fonction <codeph class="+ topic/ph pr-d/codeph ">fscommand()</codeph> peut envoyer des messages à Director (Macromedia Director d’Adobe). Ces messages sont interprétés par Lingo (le langage de script de Director) comme des chaînes, des événements ou un code Lingo exécutable. Si le message est une chaîne ou un événement, vous devez écrire le code Lingo devant recevoir le message de la fonction <codeph class="+ topic/ph pr-d/codeph ">fscommand()</codeph> et exécuter une action dans Director. Pour plus d’informations, voir le centre de support de Director à l’adresse <xref href="http://www.adobe.com/support/director/" scope="external" class="- topic/xref ">www.adobe.com/support/director/</xref>.</p>
 
 <p class="- topic/p ">Usage 4 : dans VisualBasic, Visual C++ et dans d’autres programmes ayant recours aux contrôles ActiveX, la fonction <codeph class="+ topic/ph pr-d/codeph ">fscommand()</codeph> envoie un événement VB avec deux chaînes qui peut être traité dans le langage de programmation de l’environnement. Pour plus d’informations, utilisez les mots-clés « méthode Flash » pour effectuer une recherche dans le centre de support de Flash à l’adresse <xref href="http://www.adobe.com/fr/support/flash/" scope="external" class="- topic/xref ">www.adobe.com/fr/support/flash/</xref>.</p>
 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Remarque :</b> la classe ExternalInterface offre de meilleures fonctionnalités de communication entre JavaScript et ActionScript (Utilisation 2), et entre ActionScript et VisualBasic, Visual C++ ou d’autres programmes pouvant héberger des contrôles ActiveX (Utilisation 4). Vous devriez continuer à utiliser la fonction <codeph class="+ topic/ph pr-d/codeph ">fscommand()</codeph> pour envoyer des messages à Flash Player (Utilisation 1) et à Director (Utilisation 3).</p>
 
 </apiDesc><example conref="examples\FSCommandExample.as" class="- topic/example "> L’exemple suivant indique comment <codeph class="+ topic/ph pr-d/codeph ">fscommand()</codeph> peut être utilisé pour forcer Flash Player à activer le mode plein écran et bloquer toute tentative de redimensionnement. Un cadre orange est ensuite ajouté à la scène à l’aide de <codeph class="+ topic/ph pr-d/codeph ">draw()</codeph>. Dans <codeph class="+ topic/ph pr-d/codeph ">draw()</codeph>, un écouteur de l’événement <codeph class="+ topic/ph pr-d/codeph ">click</codeph> est ajouté sous le nom <codeph class="+ topic/ph pr-d/codeph ">clickHandler()</codeph>, qui répond aux événements <codeph class="+ topic/ph pr-d/codeph ">click</codeph> en forçant Flash Player à se fermer en effectuant un autre appel à <codeph class="+ topic/ph pr-d/codeph ">fscommand().</codeph>
 
 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Remarque : </b> cet exemple doit être exécuté avec la version autonome de Flash Player et non pas dans un navigateur Web.</p>
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
package {
    import flash.display.Sprite;
    import flash.text.TextField;
    import flash.system.fscommand;
    import flash.events.MouseEvent;

    public class FSCommandExample extends Sprite {
        private var bgColor:uint = 0xFFCC00;
        private var size:uint = 100;

        public function FSCommandExample() {
            fscommand("fullscreen", "true");
            fscommand("allowscale", "false");
            draw();
        }

        private function clickHandler(event:MouseEvent):void {
            fscommand("quit");
            trace("clickHandler");
        }

        private function draw():void {
            var child:Sprite = new Sprite();
            child.graphics.beginFill(bgColor);
            child.graphics.drawRect(0, 0, size, size);
            child.graphics.endFill();
            child.buttonMode = true;
            addEventListener(MouseEvent.CLICK, clickHandler);

            var label:TextField = new TextField();
            label.text = "quit";
            label.selectable = false;
            label.mouseEnabled = false;
            child.addChild(label);

            addChild(child);
        }
    }
}
</codeblock></example></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.desktop.xml#NativeApplication" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.NativeApplication</linktext></link></related-links></apiOperation><apiClassifier languages="" id="flash.system:IME" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">IME</apiName><shortdesc class="- topic/shortdesc ">
 La classe IME permet de manipuler directement l’éditeur de méthode d’entrée (IME) de l’application d’un moteur d’exécution de Flash qui s’exécute sur un ordinateur client.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Permet de manipuler l’éditeur de méthodes d’entrée (IME) du système d’exploitation.
 
 </apiTipText></apiTipTexts><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:EventDispatcher</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 La classe IME permet de manipuler directement l’éditeur de méthode d’entrée (IME) de l’application d’un moteur d’exécution de Flash qui s’exécute sur un ordinateur client. Vous pouvez déterminer si un IME est installé, qu’il soit activé ou non, et quel IME est activé. Vous pouvez désactiver ou activer l’IME dans l’application et exécuter d’autres fonctions limitées, selon votre système d’exploitation.
 
 
 <p class="- topic/p "><i class="+ topic/ph hi-d/i ">Prise en charge du profil AIR :</i> cette fonctionnalité est prise en charge sur les systèmes d’exploitation de bureau, mais ne l’est pas sur tous les périphériques mobiles. Elle est également prise en charge sur les périphériques AIR pour TV. Vous pouvez tester la prise en charge lors de l’exécution à l’aide de la propriété <codeph class="+ topic/ph pr-d/codeph ">IME.isSupported</codeph>. Voir <xref href="http://help.adobe.com/en_US/air/build/WS144092a96ffef7cc16ddeea2126bb46b82f-8000.html" class="- topic/xref ">Prise en charge du profil AIR</xref> pour plus d’informations sur la prise en charge de l’API dans plusieurs profils.</p>
 
 <p class="- topic/p ">Les IME permettent aux utilisateurs de taper des caractères de texte non ASCII multioctet pour les langues orientales, tels que le Chinois, le Japonais et le Coréen. Pour plus d’informations sur la manipulation des IME, voir la documentation du système d’exploitation pour lequel vous développez des applications. Les sites Web suivants comportent des ressources supplémentaires :
 <ul class="- topic/ul "><li class="- topic/li "><xref href="http://www.microsoft.com/globaldev/default.mspx" scope="external" class="- topic/xref ">http://www.microsoft.com/globaldev/default.mspx</xref></li><li class="- topic/li "><xref href="http://developer.apple.com/documentation/" scope="external" class="- topic/xref ">http://developer.apple.com/documentation/</xref></li><li class="- topic/li "><xref href="http://java.sun.com" scope="external" class="- topic/xref ">http://java.sun.com</xref></li></ul>
  </p>
 
 <p class="- topic/p ">Si aucun IME n’est actif sur l’ordinateur de l’utilisateur, tout appel aux méthodes ou propriétés IME, autres que <codeph class="+ topic/ph pr-d/codeph ">Capabilities.hasIME</codeph>, échoue. Lorsque vous activez manuellement un IME, les appels ActionScript suivants aux méthodes et aux propriétés IME fonctionnent comme prévu. Par exemple, si vous utilisez un IME japonais, ce dernier doit être activé avant tout appel à la méthode ou la propriété IME.</p>
 
 <p class="- topic/p ">Le tableau ci-après, indique les plates-formes prises en charge par cette classe :</p>
 
 
 <adobetable class="innertable"><tgroup cols="4" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Fonction</entry><entry class="- topic/entry ">Windows</entry><entry class="- topic/entry ">Mac OSX</entry><entry class="- topic/entry ">Linux</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry ">Détermine si l’IME est installé : <codeph class="+ topic/ph pr-d/codeph ">Capabilities.hasIME</codeph></entry><entry class="- topic/entry ">Oui</entry><entry class="- topic/entry ">Oui</entry><entry class="- topic/entry ">Oui</entry></row><row class="- topic/row "><entry class="- topic/entry ">Active ou désactive l’IME : <codeph class="+ topic/ph pr-d/codeph ">IME.enabled</codeph></entry><entry class="- topic/entry ">Oui</entry><entry class="- topic/entry ">Oui</entry><entry class="- topic/entry ">Oui</entry></row><row class="- topic/row "><entry class="- topic/entry ">Détermine si l’IME est activé ou désactivé : <codeph class="+ topic/ph pr-d/codeph ">IME.enabled</codeph></entry><entry class="- topic/entry ">Oui</entry><entry class="- topic/entry ">Oui</entry><entry class="- topic/entry ">Oui</entry></row><row class="- topic/row "><entry class="- topic/entry ">Lit ou définit le mode de conversion IME : <codeph class="+ topic/ph pr-d/codeph ">IME.conversionMode</codeph></entry><entry class="- topic/entry ">Oui</entry><entry class="- topic/entry ">Oui ~~~~</entry><entry class="- topic/entry ">Non</entry></row><row class="- topic/row "><entry class="- topic/entry ">Transmet à l’IME la chaîne à convertir : <codeph class="+ topic/ph pr-d/codeph ">IME.setCompositionString()</codeph></entry><entry class="- topic/entry ">Oui ~~</entry><entry class="- topic/entry ">Non</entry><entry class="- topic/entry ">Non</entry></row><row class="- topic/row "><entry class="- topic/entry ">Lit dans l’IME la chaîne d’origine avant sa conversion : <codeph class="+ topic/ph pr-d/codeph ">System.ime.addEventListener()</codeph></entry><entry class="- topic/entry ">Oui ~~</entry><entry class="- topic/entry ">Non</entry><entry class="- topic/entry ">Non</entry></row><row class="- topic/row "><entry class="- topic/entry ">Transmet la requête de conversion à IME : <codeph class="+ topic/ph pr-d/codeph ">IME.doConversion()</codeph></entry><entry class="- topic/entry ">Oui ~~</entry><entry class="- topic/entry ">Non</entry><entry class="- topic/entry ">Non</entry></row></tbody></tgroup></adobetable>
 
 <p class="- topic/p ">~~ Ces opérations ne sont pas toutes prises en charge par tous les IME de Windows. Seul l’IME japonais les prend toutes en charge.</p>
 
 <p class="- topic/p ">~~~~ Sur le Macintosh, seul l’IME japonais prend en charge ces méthodes. Les IME d’éditeurs tiers ne les prennent pas en charge.</p>
 <p class="- topic/p ">La version ActionScript 3.0 de cette classe ne prend pas Macintosh Classic en charge.</p>
 
 </apiDesc></apiClassifierDetail><adobeApiEvent id="flash.system:IME_flash.events.IMEEvent.IME_COMPOSITION_imeComposition" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">imeComposition</apiName><shortdesc class="- topic/shortdesc ">
 Distribué lorsqu’un utilisateur a terminé une composition IME et la chaîne de lecture est disponible.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.IMEEvent.IME_COMPOSITION</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.IMEEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Distribué lorsqu’un utilisateur a terminé une composition IME et la chaîne de lecture est disponible. Les IME sont généralement utilisées pour saisir du texte exprimé sous forme d’idéogrammes et non pas de lettres, comme pare exemple le Japonais, le Chinois et le Coréen.
 </apiDesc></adobeApiEventDetail></adobeApiEvent><apiOperation id="flash.system:IME:compositionAbandoned" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">compositionAbandoned</apiName><shortdesc class="- topic/shortdesc ">
	  Force le moteur d’exécution à abandonner toute composition en cours.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	  Force le moteur d’exécution à abandonner toute composition en cours. Appelez cette méthode lorsque l’utilisateur clique en dehors de la zone de composition, ou lorsque l’objet interactif qui a le focus est en cours de destruction ou de réinitialisation. Le moteur d’exécution valide la composition en appelant la méthode <codeph class="+ topic/ph pr-d/codeph ">confirmComposition()</codeph> dans le client. Par ailleurs, le moteur d’exécution réinitialise l’IME pour informer le système d’exploitation que la composition a été abandonnée. 
	   
	 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.system:IME:compositionSelectionChanged" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">compositionSelectionChanged</apiName><shortdesc class="- topic/shortdesc ">
	  Appelez cette méthode lorsque la sélection au sein de la composition a été mise à jour, soit interactivement soit par programmation.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">start</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Spécifie le décalage du début de la sélection, en octets.
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">end</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Spécifie le décalage de la fin de la sélection, en octets.
	   
	 </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	  Appelez cette méthode lorsque la sélection au sein de la composition a été mise à jour, soit interactivement soit par programmation.
	 
	 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.system:IME:doConversion" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">doConversion</apiName><shortdesc class="- topic/shortdesc ">
	 Demande à l’IME de sélectionner le premier candidat pour la chaîne de composition actuelle.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">L’appel n’a pas réussi.
	 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">Error</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Error</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Demande à l’IME de sélectionner le premier candidat pour la chaîne de composition actuelle.
	 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.system:IME:setCompositionString" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">setCompositionString</apiName><shortdesc class="- topic/shortdesc ">
	 Définit la chaîne de composition IME.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><internal>Need some examples of valid values for the param composition.
	 </internal></asCustoms></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">L’appel n’a pas réussi.
	 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">Error</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Error</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">composition</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">La chaîne à envoyer à l’IME.
	 </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Définit la chaîne de composition IME. Lorsque cette chaîne est définie, l’utilisateur peut sélectionner des candidats IME avant d’enregistrer le résultat dans le champ de texte ayant actuellement le focus.
	 <p class="- topic/p ">Si aucun texte n’a le focus, cette méthode échoue et renvoie une erreur.</p>
	 
	 </apiDesc></apiOperationDetail></apiOperation><apiValue id="flash.system:IME:conversionMode:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">conversionMode</apiName><shortdesc class="- topic/shortdesc ">
	 Mode de conversion de l’IME actuel.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Une tentative de définition a échoué.
	 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">Error</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Error</apiOperationClassifier></apiException></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Mode de conversion de l’IME actuel. Les valeurs possibles sont les constantes de chaîne de mode IME qui spécifient le mode de conversion :
	 <ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">ALPHANUMERIC_FULL</codeph></li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">ALPHANUMERIC_HALF</codeph></li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">CHINESE</codeph></li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">JAPANESE_HIRAGANA</codeph></li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">JAPANESE_KATAKANA_FULL</codeph></li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">JAPANESE_KATAKANA_HALF</codeph></li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">KOREAN</codeph></li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">UNKNOWN</codeph> (valeur en lecture seule, ne peut pas être définie)</li></ul>
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.system.xml#IMEConversionMode/ALPHANUMERIC_FULL" class="- topic/link "><linktext class="- topic/linktext ">flash.system.IMEConversionMode.ALPHANUMERIC_FULL</linktext></link><link href="flash.system.xml#IMEConversionMode/ALPHANUMERIC_HALF" class="- topic/link "><linktext class="- topic/linktext ">flash.system.IMEConversionMode.ALPHANUMERIC_HALF</linktext></link><link href="flash.system.xml#IMEConversionMode/CHINESE" class="- topic/link "><linktext class="- topic/linktext ">flash.system.IMEConversionMode.CHINESE</linktext></link><link href="flash.system.xml#IMEConversionMode/JAPANESE_HIRAGANA" class="- topic/link "><linktext class="- topic/linktext ">flash.system.IMEConversionMode.JAPANESE_HIRAGANA</linktext></link><link href="flash.system.xml#IMEConversionMode/JAPANESE_KATAKANA_FULL" class="- topic/link "><linktext class="- topic/linktext ">flash.system.IMEConversionMode.JAPANESE_KATAKANA_FULL</linktext></link><link href="flash.system.xml#IMEConversionMode/JAPANESE_KATAKANA_HALF" class="- topic/link "><linktext class="- topic/linktext ">flash.system.IMEConversionMode.JAPANESE_KATAKANA_HALF</linktext></link><link href="flash.system.xml#IMEConversionMode/KOREAN" class="- topic/link "><linktext class="- topic/linktext ">flash.system.IMEConversionMode.KOREAN</linktext></link><link href="flash.system.xml#IMEConversionMode/UNKNOWN" class="- topic/link "><linktext class="- topic/linktext ">flash.system.IMEConversionMode.UNKNOWN</linktext></link></related-links></apiValue><apiValue id="flash.system:IME:enabled:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">enabled</apiName><shortdesc class="- topic/shortdesc ">
	 Spécifie si l’IME système est activé (true) ou désactivé (false).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Une tentative de définition a échoué.
	 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">Error</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Error</apiOperationClassifier></apiException></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Spécifie si l’IME système est activé (<codeph class="+ topic/ph pr-d/codeph ">true</codeph>) ou désactivé (<codeph class="+ topic/ph pr-d/codeph ">false</codeph>). Un IME activé effectue une entrée multi-octets ; un IME désactivé effectue une entrée alphanumérique. 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.system:IME:isSupported:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">isSupported</apiName><shortdesc class="- topic/shortdesc ">
    La propriété isSupported est définie sur true si la classe IME est prise en charge sur la plate-forme actuelle ; dans le cas contraire, elle est définie sur false.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    La propriété <codeph class="+ topic/ph pr-d/codeph ">isSupported</codeph> est définie sur <codeph class="+ topic/ph pr-d/codeph ">true</codeph> si la classe IME est prise en charge sur la plate-forme actuelle ; dans le cas contraire, elle est définie sur <codeph class="+ topic/ph pr-d/codeph ">false</codeph>. 
    
    
    </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.system:System" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">System</apiName><shortdesc class="- topic/shortdesc ">
 La classe System contient les propriétés associées aux paramètres régionaux et aux opérations. </shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">System, System object, built-in class
  
  </keyword></asCustoms></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 La classe System contient les propriétés associées aux paramètres régionaux et aux opérations, notamment les <ph class="- topic/ph "> paramètres relatifs aux caméras et aux microphones, les opérations avec les objets partagés et</ph> l’utilisation du Presse-papiers. 
 
 <p class="- topic/p ">Vous trouverez des propriétés et des méthodes supplémentaires dans d’autres classes au sein du package flash.system : les classes Capabilities<ph class="- topic/ph ">, IME</ph> et Security.</p>
 
 <p class="- topic/p ">Cette classe contient uniquement des méthodes et des propriétés statiques. Vous ne pouvez pas créer d’occurrences de la classe Système.</p>
 
 </apiDesc><example conref="examples\SystemExample.as" class="- topic/example "> L’exemple suivant indique comment copier des informations sur la mémoire totale du système dans le Presse-papiers à l’aide d’un appel à <codeph class="+ topic/ph pr-d/codeph ">System.totalMemory</codeph> imbriqué dans un appel à la méthode <codeph class="+ topic/ph pr-d/codeph ">System.setClipboard()</codeph>.
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
package {
    import flash.display.Sprite;
    import flash.system.System;

    public class SystemExample extends Sprite {
        public function SystemExample() {
            System.setClipboard("System.totalMemory: " + System.totalMemory);
        }
    }
}
</codeblock></example></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.system.xml#Security" class="- topic/link "><linktext class="- topic/linktext ">flash.system.Security</linktext></link><link href="flash.events.xml#IMEEvent" class="- topic/link "><linktext class="- topic/linktext ">flash.events.IMEEvent</linktext></link></related-links><apiOperation id="flash.system:System:disposeXML" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">disposeXML</apiName><shortdesc class="- topic/shortdesc ">
	 Rend l’objet XML spécifié immédiatement disponible à des fins de nettoyage. </shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage name="ActionScript" version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5.2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">node</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">XML</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Référence XML qui doit être mise à disposition à des fins de nettoyage. 
	 </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Rend l’objet XML spécifié immédiatement disponible à des fins de nettoyage. Cette méthode supprime les connexions parent et enfant entre tous les nœuds pour le nœud XML spécifié. 
	 
	 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.system:System:exit" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">exit</apiName><shortdesc class="- topic/shortdesc "> 
     Ferme Flash Player.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage name="ActionScript" version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9.0.115.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">System, System.exit(), exit()             
	 
	 </keyword></asCustoms></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">code</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">uint</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Valeur à transmettre au système d’exploitation. Généralement, si le processus se ferme normalement, la valeur est 0.
	 
     </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
     Ferme Flash Player.
	 
     <p class="- topic/p "><i class="+ topic/ph hi-d/i ">Pour la version débogueur de Flash Player autonome uniquement.</i></p> 
	 
     <p class="- topic/p ">Les applications AIR doivent appeler la méthode <codeph class="+ topic/ph pr-d/codeph ">NativeApplication.exit()</codeph> pour quitter l’application.</p> 
	 
     </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.desktop.xml#NativeApplication/exit()" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.NativeApplication.exit()</linktext></link></related-links></apiOperation><apiOperation id="flash.system:System:gc" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">gc</apiName><shortdesc class="- topic/shortdesc ">
     Impose le processus de nettoyage de la mémoire.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage name="ActionScript" version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9.0.115.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Impose le processus de nettoyage de la mémoire.
	 
     <p class="- topic/p "><ph class="- topic/ph "><i class="+ topic/ph hi-d/i ">Pour la version débogueur de Flash Player et des applications AIR uniquement.</i></ph> Dans une application AIR, la méthode <codeph class="+ topic/ph pr-d/codeph ">System.gc()</codeph> est activée uniquement dans le contenu s’exécutant dans l’application de débogage du lanceur AIR (ADL) ou, dans une application installée, dans le contenu du sandbox de sécurité de l’application.</p>
	 
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.system:System:pause" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">pause</apiName><shortdesc class="- topic/shortdesc "> 
     Interrompt Flash Player ou l’application de débogage du lanceur AIR.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage name="ActionScript" version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9.0.115.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">System, System.pause(), pause()   
	 
	 </keyword></asCustoms></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
     Interrompt <ph class="- topic/ph ">Flash Player ou </ph>l’application de débogage du lanceur AIR. Après avoir appelé cette méthode, l’application cesse toute activité, sauf la distribution des événements Socket.
	 
     <p class="- topic/p "><i class="+ topic/ph hi-d/i ">Pour la version débogueur de Flash Player ou l’application de débogage du lanceur AIR.</i></p>
     
     </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.system.xml#System/resume()" class="- topic/link "><linktext class="- topic/linktext ">resume()</linktext></link></related-links></apiOperation><apiOperation id="flash.system:System:resume" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">resume</apiName><shortdesc class="- topic/shortdesc "> 
     Redémarre l’application après avoir appelé System.pause().</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage name="ActionScript" version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9.0.115.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">System, System.resume(), resume()        
	 
	 </keyword></asCustoms></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
     Redémarre l’application après avoir appelé <codeph class="+ topic/ph pr-d/codeph ">System.pause()</codeph>.
	 
     <p class="- topic/p "><i class="+ topic/ph hi-d/i ">Pour la version débogueur de Flash Player ou l’application de débogage du lanceur AIR.</i></p>  
     
     </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.system.xml#System/pause()" class="- topic/link "><linktext class="- topic/linktext ">pause()</linktext></link></related-links></apiOperation><apiOperation id="flash.system:System:setClipboard" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">setClipboard</apiName><shortdesc class="- topic/shortdesc ">
	 Remplace le contenu du presse-papiers par une chaîne de texte spécifiée.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">System.setClipboard, setClipboard
	  
	 </keyword></asCustoms></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">string</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Chaîne au format texte seul à placer dans le Presse-papiers du système, remplaçant son contenu actuel (si ce dernier contient déjà des données).
	 
	 
	 </apiDesc></apiParam><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Remplace le contenu du presse-papiers par une chaîne de texte spécifiée.
	 
	 </apiTipText></apiTipTexts></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Remplace le contenu du presse-papiers par une chaîne de texte spécifiée. Cette méthode fonctionne à partir de n’importe quel contexte de sécurité lorsqu’elle est appelée suite à un événement utilisateur (événement de clavier ou de périphérique de saisie, par exemple).
	 
	 <p class="- topic/p ">Cette méthode est fournie pour le contenu SWF s’exécutant dans Flash Player 9. Elle permet uniquement d’ajouter le contenu de la chaîne au Presse-papiers.</p> 
	 
	 <p class="- topic/p ">Le contenu de Flash Player 10 et le contenu dans le sandbox de sécurité de l’application d’une application AIR peuvent appeler la méthode <codeph class="+ topic/ph pr-d/codeph ">Clipboard.setData()</codeph>.</p>
	 
	 </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.desktop.xml#Clipboard" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.Clipboard</linktext></link></related-links></apiOperation><apiValue id="flash.system:System:freeMemory:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">freeMemory</apiName><shortdesc class="- topic/shortdesc ">
	 Quantité de mémoire (en octets) allouée à Adobe&amp;#xAE; Flash&amp;#xAE; Player ou Adobe&amp;#xAE; AIR&amp;#xAE; et qui n’est pas en cours d’utilisation.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Quantité de mémoire (en octets) qui n’est pas allouée à <ph class="- topic/ph ">Adobe<sup class="+ topic/ph hi-d/sup ">®</sup> Flash<sup class="+ topic/ph hi-d/sup ">®</sup> Player ou</ph> Adobe<sup class="+ topic/ph hi-d/sup ">®</sup> AIR<sup class="+ topic/ph hi-d/sup ">®</sup> et qui n’est pas en cours d’utilisation. Cette portion de mémoire allouée non utilisée (<codeph class="+ topic/ph pr-d/codeph ">System.totalMemory</codeph>) fluctue à chaque nettoyage de la mémoire. Utilisez cette propriété pour gérer le nettoyage de la mémoire.
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.system.xml#System/privateMemory" class="- topic/link "><linktext class="- topic/linktext ">privateMemory</linktext></link><link href="flash.system.xml#System/totalMemory" class="- topic/link "><linktext class="- topic/linktext ">totalMemory</linktext></link><link href="flash.system.xml#System/totalMemoryNumber" class="- topic/link "><linktext class="- topic/linktext ">totalMemoryNumber</linktext></link></related-links></apiValue><apiValue id="flash.system:System:ime:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">ime</apiName><shortdesc class="- topic/shortdesc ">
	 L’IME système installé.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.system:IME</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 L’IME système installé. Pour s’inscrire aux événements imeComposition, appelez <codeph class="+ topic/ph pr-d/codeph ">addEventListener()</codeph> sur cette occurrence.
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.system.xml#IMEConversionMode" class="- topic/link "><linktext class="- topic/linktext ">IMEConversionMode</linktext></link></related-links></apiValue><apiValue id="flash.system:System:privateMemory:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">privateMemory</apiName><shortdesc class="- topic/shortdesc ">
	 Quantité totale de mémoire (en octets) utilisée par une application.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Quantité totale de mémoire (en octets) utilisée par une application. Il s’agit de la quantité de mémoire privée résidente pour l’ensemble du processus.
	 
	 <p class="- topic/p ">Les développeurs AIR doivent utiliser cette propriété pour déterminer la consommation totale de mémoire d’une application.</p>
	 
	 <p class="- topic/p ">Pour Flash Player, cela comprend la mémoire utilisée par l’application conteneur, telle que le navigateur Web.</p>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.system.xml#System/freeMemory" class="- topic/link "><linktext class="- topic/linktext ">freeMemory</linktext></link><link href="flash.system.xml#System/totalMemory" class="- topic/link "><linktext class="- topic/linktext ">totalMemory</linktext></link><link href="flash.system.xml#System/totalMemoryNumber" class="- topic/link "><linktext class="- topic/linktext ">totalMemoryNumber</linktext></link></related-links></apiValue><apiValue id="flash.system:System:totalMemoryNumber:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">totalMemoryNumber</apiName><shortdesc class="- topic/shortdesc ">
	Quantité de mémoire (en octets) actuellement utilisée ayant été directement allouée par Flash Player ou AIR.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Quantité de mémoire (en octets) actuellement utilisée ayant été directement allouée par <ph class="- topic/ph ">Flash Player ou</ph> AIR.  
	
	<p class="- topic/p ">Cette propriété, exprimée sous forme de nombre, prend en charge des valeurs plus élevées que la propriété <codeph class="+ topic/ph pr-d/codeph ">System.totalMemory</codeph>, qui est de type int.</p>
	
	<p class="- topic/p ">Cette propriété ne renvoie pas <i class="+ topic/ph hi-d/i ">toute</i> la mémoire utilisée par une application Adobe AIR <ph class="- topic/ph ">ou par l’application (par exemple, un navigateur) englobant le contenu de Flash Player</ph>. Le <ph class="- topic/ph ">navigateur ou</ph> le système d’exploitation peut utiliser d’autres ressources mémoire. La propriété <codeph class="+ topic/ph pr-d/codeph ">System.privateMemory</codeph> indique <i class="+ topic/ph hi-d/i ">toute</i> la mémoire utilisée par une application.</p>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.system.xml#System/freeMemory" class="- topic/link "><linktext class="- topic/linktext ">freeMemory</linktext></link><link href="flash.system.xml#System/privateMemory" class="- topic/link "><linktext class="- topic/linktext ">privateMemory</linktext></link><link href="flash.system.xml#System/totalMemory" class="- topic/link "><linktext class="- topic/linktext ">totalMemory</linktext></link></related-links></apiValue><apiValue id="flash.system:System:totalMemory:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">totalMemory</apiName><shortdesc class="- topic/shortdesc ">
	Quantité de mémoire (en octets) actuellement utilisée ayant été directement allouée par Flash Player ou AIR.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">uint</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Quantité de mémoire (en octets) actuellement utilisée ayant été directement allouée par <ph class="- topic/ph ">Flash Player ou</ph> AIR.  
	
	<p class="- topic/p ">Cette propriété ne renvoie pas <i class="+ topic/ph hi-d/i ">toute</i> la mémoire utilisée par une application Adobe AIR <ph class="- topic/ph ">ou par l’application (par exemple, un navigateur) englobant le contenu de Flash Player</ph>. Le <ph class="- topic/ph ">navigateur ou</ph> le système d’exploitation peut utiliser d’autres ressources mémoire. La propriété <codeph class="+ topic/ph pr-d/codeph ">System.privateMemory</codeph> indique <i class="+ topic/ph hi-d/i ">toute</i> la mémoire utilisée par une application.</p>
	
	<p class="- topic/p ">Si la quantité de mémoire allouée est supérieure à la valeur maximale d’un objet uint (<codeph class="+ topic/ph pr-d/codeph ">uint.MAX_VALUE</codeph>; soit 4 294 967 295), cette propriété est définie sur 0. La propriété <codeph class="+ topic/ph pr-d/codeph ">System.totalMemoryNumber</codeph> prend en charge des valeurs supérieures.</p>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.system.xml#System/freeMemory" class="- topic/link "><linktext class="- topic/linktext ">freeMemory</linktext></link><link href="flash.system.xml#System/privateMemory" class="- topic/link "><linktext class="- topic/linktext ">privateMemory</linktext></link><link href="flash.system.xml#System/totalMemoryNumber" class="- topic/link "><linktext class="- topic/linktext ">totalMemoryNumber</linktext></link></related-links></apiValue><apiValue id="flash.system:System:useCodePage:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">useCodePage</apiName><shortdesc class="- topic/shortdesc ">
	 Une valeur booléenne qui indique la page de code à utiliser pour interpréter des fichiers texte externes.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">System.useCodepage, useCodepage, Unicode, code page
	  
	  </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Une valeur booléenne qui indique la page de code à utiliser pour interpréter des fichiers texte externes. Lorsque la propriété est définie sur <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, les fichiers texte externes sont interprétés comme de l’Unicode (ces fichiers doivent être codés en Unicode lorsque vous les enregistrez). Lorsque la propriété est définie sur <codeph class="+ topic/ph pr-d/codeph ">true</codeph>, les fichiers texte externes sont interprétés à l’aide de la page de code classique du système d’exploitation exécutant l’application. La valeur par défaut de <codeph class="+ topic/ph pr-d/codeph ">useCodePage</codeph> est <codeph class="+ topic/ph pr-d/codeph ">false</codeph>.
	 
	 <p class="- topic/p ">Le texte que vous chargez comme fichier externe (à l’aide de <codeph class="+ topic/ph pr-d/codeph ">Loader.load()</codeph>, la classe URLLoader ou URLStream) doit avoir été enregistré comme de l’Unicode pour que l’application le reconnaisse comme tel. Pour coder des fichiers externes comme de l’Unicode, enregistrez les fichiers dans une application qui prend en charge l’Unicode, tel que Notepad sous Windows.</p>
	 
	 <p class="- topic/p ">Si vous chargez des fichiers externes qui ne sont pas codés en Unicode, définissez <codeph class="+ topic/ph pr-d/codeph ">useCodePage</codeph> sur <codeph class="+ topic/ph pr-d/codeph ">true</codeph>. Ajoutez le code suivant sur la première ligne de code du fichier qui charge les données (pour Flash Professional, ajoutez-le à la première image) :</p>
	 
	 <pre xml:space="preserve" class="- topic/pre "><codeph class="+ topic/ph pr-d/codeph ">System.useCodePage = true;</codeph></pre>
	 
	 <p class="- topic/p ">Lorsque ce code est présent, l’application interprète le texte externe à l’aide de la page de code classique du système d’exploitation. Par exemple, ce code est généralement CP1252 pour un système d’exploitation Windows anglais et Shift-JIS pour un système d’exploitation japonais.</p> 
	 
	 <p class="- topic/p "><ph class="- topic/ph ">Si vous définissez <codeph class="+ topic/ph pr-d/codeph ">useCodePage</codeph> sur <codeph class="+ topic/ph pr-d/codeph ">true</codeph>, Flash Player 6 et les versions ultérieures traitent le texte comme Flash Player 5 (Flash Player 5 traitait l’ensemble du texte comme s’il se trouvait dans la page de code classique du système d’exploitation exécutant le lecteur).</ph></p>
	 
	 <p class="- topic/p ">Si vous définissez <codeph class="+ topic/ph pr-d/codeph ">useCodePage</codeph> sur <codeph class="+ topic/ph pr-d/codeph ">true</codeph>, souvenez-vous que la page de code classique du système d’exploitation exécutant l’application doit inclure les caractères utilisés dans votre fichier de texte externe afin d’afficher le texte. Par exemple, si vous chargez un fichier texte externe contenant des caractères chinois, ceux-ci ne peuvent s’afficher sur un système utilisant la page de code CP1252 car celle-ci ne comprend pas les caractères chinois.</p>
	 
	 <p class="- topic/p ">Pour que les utilisateurs de toutes les plates-formes puissent afficher les fichiers de texte externes utilisés dans votre application, vous devez coder tous les fichiers de texte externes en Unicode et conserver la propriété <codeph class="+ topic/ph pr-d/codeph ">useCodePage</codeph> définie sur <codeph class="+ topic/ph pr-d/codeph ">false</codeph> par défaut. Ainsi, l’application <ph class="- topic/ph ">(Flash Player 6 et les versions ultérieures ou AIR) </ph>interprète le texte comme Unicode.</p>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#Loader/load()" class="- topic/link "><linktext class="- topic/linktext ">flash.display.Loader.load()</linktext></link></related-links></apiValue></apiClassifier><apiClassifier languages="" id="flash.system:SecurityDomain" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">SecurityDomain</apiName><shortdesc class="- topic/shortdesc ">
	La classe SecurityDomain représente le « sandbox » de sécurité actuel, qui est également appelé domaine de sécurité.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	La classe SecurityDomain représente le « sandbox » de sécurité actuel, qui est également appelé domaine de sécurité. En transmettant une occurrence de cette classe à <codeph class="+ topic/ph pr-d/codeph ">Loader.load()</codeph>, vous pouvez demander que le média chargé soit placé dans un sandbox spécifique.
	</apiDesc></apiClassifierDetail><apiValue id="flash.system:SecurityDomain:currentDomain:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">currentDomain</apiName><shortdesc class="- topic/shortdesc ">
		Définit le domaine de sécurité actuel.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.system:SecurityDomain</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		Définit le domaine de sécurité actuel. 
		
		</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#Loader/load()" class="- topic/link "><linktext class="- topic/linktext ">flash.display.Loader.load()</linktext></link><link href="flash.display.xml#Loader/loadBytes()" class="- topic/link "><linktext class="- topic/linktext ">flash.display.Loader.loadBytes()</linktext></link><link href="flash.system.xml#LoaderContext" class="- topic/link "><linktext class="- topic/linktext ">flash.system.LoaderContext</linktext></link></related-links></apiValue></apiClassifier><apiClassifier languages="" id="flash.system:SystemUpdater" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">SystemUpdater</apiName><shortdesc class="- topic/shortdesc ">
	 
	 La classe SystemUpdater permet de mettre à jour les modules de Flash Player, tels que le module DRM pour Flash Access, ainsi que Flash Player lui-même.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:EventDispatcher</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 
	 La classe SystemUpdater permet de mettre à jour les modules de Flash Player, tels que le module DRM pour Flash Access, ainsi que Flash Player lui-même. Les modules disponibles sont répertoriés dans la classe SystemUpdaterType.
	 
	 <p class="- topic/p ">Flash Player identifie la nécessité de mise à jour d’un module Flash Access en distribuant un événement NetStatusEvent. L’événement possède une propriété <codeph class="+ topic/ph pr-d/codeph ">code</codeph> dont la valeur est <codeph class="+ topic/ph pr-d/codeph ">"DRM.UpdateNeeded"</codeph>. Pour mettre à jour les modules Flash Access, l’autorisation de l’utilisateur n’est pas requise. Ecoutez l’événement et lancez la mise à jour en appelant <codeph class="+ topic/ph pr-d/codeph ">update("DRM")</codeph>.</p>
	 
	 <p class="- topic/p ">Flash Player identifie la nécessité de mise à jour du lecteur en distribuant un événement StatusEvent avec plusieurs valeurs de la propriété <codeph class="+ topic/ph pr-d/codeph ">code</codeph> (voir l’événement <codeph class="+ topic/ph pr-d/codeph ">status</codeph>). Pour mettre à jour le lecteur, l’autorisation de l’utilisateur n’est pas requise. Ecoutez l’événement et présentez à l’utilisateur l’option de mise à jour. L’utilisateur doit accepter et lancer la mise à jour actuelle, par exemple en cliquant sur un bouton dans l’interface utilisateur. Vous pouvez alors lancer la mise à jour du lecteur directement dans ActionScript en appelant <codeph class="+ topic/ph pr-d/codeph ">update("SYSTEM")</codeph>.</p>
	 
	 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Remarque</b> : l’API de SystemUpdater est prise en charge sur toutes les plates-formes de bureau.</p>
	 
	 </apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.system.xml#SystemUpdaterType" class="- topic/link "><linktext class="- topic/linktext ">flash.system.SystemUpdaterType</linktext></link></related-links><adobeApiEvent id="flash.system:SystemUpdater_flash.events.Event.CANCEL_cancel" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">cancel</apiName><shortdesc class="- topic/shortdesc ">
	 Distribué lorsque l’utilisateur annule une mise à jour du lecteur.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.Event.CANCEL</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.Event</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Distribué lorsque l’utilisateur annule une mise à jour du lecteur. Cet événement est distribué uniquement si une mise à jour de type <codeph class="+ topic/ph pr-d/codeph ">SystemUpdaterType.System</codeph> est sollicitée et si l’utilisateur annule la mise à jour.
	 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flash.system:SystemUpdater_flash.events.Event.COMPLETE_complete" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">complete</apiName><shortdesc class="- topic/shortdesc ">
	 Distribué lorsque la mise à jour se termine.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.Event.COMPLETE</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.Event</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Distribué lorsque la mise à jour se termine.
	 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flash.system:SystemUpdater_flash.events.SecurityErrorEvent.SECURITY_ERROR_securityError" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">securityError</apiName><shortdesc class="- topic/shortdesc ">
	 Distribué lorsqu’une erreur de sécurité est détectée.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.SecurityErrorEvent.SECURITY_ERROR</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.SecurityErrorEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Distribué lorsqu’une erreur de sécurité est détectée. Par exemple, une erreur de sécurité peut entraîner cet événement si le lecteur tente d’effectuer une mise à jour alors que la stratégie de sécurité ne le permet pas.
	 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flash.system:SystemUpdater_flash.events.IOErrorEvent.IO_ERROR_ioError" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">ioError</apiName><shortdesc class="- topic/shortdesc ">
	 Distribué lorsqu’une erreur d’E/S se produit.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.IOErrorEvent.IO_ERROR</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.IOErrorEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Distribué lorsqu’une erreur d’E/S se produit. Par exemple, une erreur peut entraîner cet événement en cas de perte de la connexion à Internet.
	 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flash.system:SystemUpdater_flash.events.ProgressEvent.PROGRESS_progress" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">progress</apiName><shortdesc class="- topic/shortdesc ">
	 Distribué pour indiquer la progression du téléchargement.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.ProgressEvent.PROGRESS</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.ProgressEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Distribué pour indiquer la progression du téléchargement. Cet événement est similaire à l’événement <codeph class="+ topic/ph pr-d/codeph ">progress</codeph> dans les classes Loader et URLLoader.
	 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flash.system:SystemUpdater_flash.events.StatusEvent.STATUS_status" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">status</apiName><shortdesc class="- topic/shortdesc ">
	  Distribué lorsque la mise à jour échoue.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.StatusEvent.STATUS</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.StatusEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	  Distribué lorsque la mise à jour échoue. Une mise à jour peut échouer pour l’une des raisons suivantes :
	  <p class="- topic/p "><ul class="- topic/ul "><li class="- topic/li ">L’appelant est exécuté sur une plate-forme ou une architecture non prise en charge. Dans ce cas, la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">code</codeph> est "DRM.UpdateFailedNotSupported" et la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">level</codeph> est "error".</li><li class="- topic/li ">Le package de mises à jour sollicité ne peut pas se trouver sur le serveur. Dans ce cas, la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">code</codeph> est "DRM.UpdateFailedNotCurrentlyAvailable" et la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">level</codeph> est "error".</li><li class="- topic/li ">Le module Flash Access n’est pas installé. Cette erreur est similaire au code "DRM.UpdateNeeded", distribué par NetStatusEvent. Le cas échéant, vous devez cependant télécharger en premier lieu une version plus récente de Flash Player. Dans ce cas, la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">code</codeph> est "DRM.UpdateNeededButIncompatible" et la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">level</codeph> est "error". Pour effectuer une mise à jour de Flash Player, appelez <codeph class="+ topic/ph pr-d/codeph ">SystemUpdater.update(SystemUpdaterType.SYSTEM)</codeph>.</li><li class="- topic/li ">Le téléchargement du nouveau module DRM a échoué. Dans ce cas, la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">code</codeph> est "DRM.UpdateFailed" et la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">level</codeph> est "error".</li></ul></p>
	  
	  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flash.system:SystemUpdater_flash.events.Event.OPEN_open" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">open</apiName><shortdesc class="- topic/shortdesc ">
	 Distribué lorsqu’une mise à jour commence.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.Event.OPEN</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.Event</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Distribué lorsqu’une mise à jour commence. La mise à jour est terminée lorsqu’un événement « complete » est envoyé, ou lorsqu’un événement IOErrorEvent, SecurityErrorEvent ou StatusEvent est envoyé. 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="flash.system:SystemUpdater:SystemUpdater" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">SystemUpdater</apiName><shortdesc class="- topic/shortdesc ">
		 Constructeur.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 Constructeur.
		 </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="flash.system:SystemUpdater:cancel" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">cancel</apiName><shortdesc class="- topic/shortdesc ">
		Annule la mise à jour en cours.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		Annule la mise à jour en cours.
		
		</apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.system:SystemUpdater:update" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">update</apiName><shortdesc class="- topic/shortdesc ">
		Commence la mise à jour d’un type donné.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">type</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		Commence la mise à jour d’un type donné. Les types de mise à jour sont l’une des constantes de chaîne définies dans la classe SystemUpdaterType. Seule une mise à jour à la fois est autorisée sur l’ensemble des navigateurs.
		<p class="- topic/p ">Lorsque la mise à jour commence, écoutez les événements définis dans cette classe. Les événements suivants indiquent la fin d’une mise à jour et permettent de lancer une nouvelle mise à jour ou de poursuivre une tentative de mise à jour, à l’instar d’un appel de la fonction <codeph class="+ topic/ph pr-d/codeph ">update()</codeph> :</p>
		<p class="- topic/p "><ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">complete</codeph></li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">cancel</codeph></li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">securityError</codeph></li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">ioError</codeph></li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">status</codeph></li></ul></p>
		
		</apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.system.xml#SystemUpdaterType" class="- topic/link "><linktext class="- topic/linktext ">flash.system.SystemUpdaterType</linktext></link></related-links></apiOperation></apiClassifier></apiPackage>