<?xml version="1.0" encoding="UTF-8"?>
<!--

  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.

-->
<apiPackage xmlns:ditaarch="http://dita.oasis-open.org/architecture/2005/" id="air.net" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiPackage/apiPackage "><apiName class="- topic/title reference/title apiRef/apiName ">air.net</apiName><apiDetail class="- topic/body reference/refbody apiRef/apiDetail "/><apiClassifier languages="" id="air.net:URLMonitor" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">URLMonitor</apiName><shortdesc class="- topic/shortdesc ">
 La classe URLMonitor surveille la disponibilité d’un service de type HTTP ou HTTPS.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">air.net:ServiceMonitor</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 La classe URLMonitor surveille la disponibilité d’un service de type HTTP ou HTTPS.
 
 <p class="- topic/p ">Cette classe est incluse dans le fichier aircore.swc. Adobe<sup class="+ topic/ph hi-d/sup ">®</sup> Flash<sup class="+ topic/ph hi-d/sup ">™</sup> Builder charge cette classe automatiquement lors de la création d’un projet pour Adobe<sup class="+ topic/ph hi-d/sup ">®</sup> AIR<sup class="+ topic/ph hi-d/sup ">™</sup>. Le kit de développement d’Adobe<sup class="+ topic/ph hi-d/sup ">®</sup> Flex<sup class="+ topic/ph hi-d/sup ">™</sup> comprend également le fichier aircore.swc, que vous devez inclure lors de la compilation de l’application.
 </p>
 
 <p class="- topic/p ">Dans Adobe<sup class="+ topic/ph hi-d/sup ">®</sup> Flash<sup class="+ topic/ph hi-d/sup ">®</sup> CS3 Professional, cette classe est incluse dans le fichier ServiceMonitorShim.swc. Pour utiliser les classes du package air.net, vous devez tout d’abord faire glisser le composant ServiceMonitorShim situé dans le panneau Composants jusqu’à la bibliothèque, puis ajouter l’instruction <codeph class="+ topic/ph pr-d/codeph ">import</codeph> suivante à votre code ActionScript 3.0 :
 </p>
 
 <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">import air.net.~~;</codeblock>
 
 <p class="- topic/p ">Pour utiliser le package air.net dans Adobe<sup class="+ topic/ph hi-d/sup ">®</sup> Flash<sup class="+ topic/ph hi-d/sup ">®</sup> Professional (CS4 ou version ultérieure) : </p>
 
 <ol class="- topic/ol "><li class="- topic/li ">Sélectionnez la commande Fichier > Paramètres de publication.</li><li class="- topic/li ">Dans le panneau Flash, cliquez sur le bouton Paramètres pour ActionScript 3.0, puis sélectionnez Chemin de la bibliothèque.</li><li class="- topic/li ">Cliquez sur le bouton Localiser le fichier SWC. Recherchez le fichier Adobe Flash CS<i class="+ topic/ph hi-d/i ">n</i>/AIK<i class="+ topic/ph hi-d/i ">n.n</i>/frameworks/libs/air/aircore.swc dans le dossier d’installation d’Adobe Flash Professional.</li><li class="- topic/li ">Cliquez sur le bouton OK.</li><li class="- topic/li ">Ajoutez l'instruction <codeph class="+ topic/ph pr-d/codeph ">import</codeph> suivante à votre code ActionScript 3.0 : <codeph class="+ topic/ph pr-d/codeph ">import air.net.~~;</codeph></li></ol>
 
 
 
 
 
 </apiDesc></apiClassifierDetail><apiConstructor id="air.net:URLMonitor:URLMonitor" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">URLMonitor</apiName><shortdesc class="- topic/shortdesc ">
     Crée un objet URLMonitor pour un service HTTP ou HTTPS spécifique.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">urlRequest</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.net:URLRequest</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Objet URLRequest représentant une requête de sondage pour interroger le serveur.
     
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">acceptableStatusCodes</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Array</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Tableau de codes d’état numériques qui répertorie les codes représentant un résultat satisfaisant.
     
     <p class="- topic/p ">Si vous ne spécifiez aucune valeur pour la propriété <codeph class="+ topic/ph pr-d/codeph ">acceptableStatusCodes</codeph>, les codes d’état suivants sont considérés comme réponses satisfaisantes :</p>
     
     <ul class="- topic/ul "><li class="- topic/li ">200 (OK) </li><li class="- topic/li ">202 (Accepté) </li><li class="- topic/li ">204 (Pas de contenu) </li><li class="- topic/li ">205 (Contenu réinitialisé) </li><li class="- topic/li ">206 (Contenu partiel, en réponse à la requête comportant un en-tête Range) </li></ul>
     
     </apiDesc></apiParam></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Crée un objet URLMonitor pour un service HTTP ou HTTPS spécifique.
     
     <p class="- topic/p ">Après avoir créé un objet URLMonitor, l’appelant doit appeler la méthode <codeph class="+ topic/ph pr-d/codeph ">start()</codeph> pour procéder au contrôle de l’état du service.</p>
     
     <p class="- topic/p ">A l’instar de l’objet Timer, l’appelant doit conserver une référence à l’objet URLMonitor. Dans le cas contraire, l’objet pourrait être supprimé à l’exécution, ce qui mettrait fin au contrôle.</p>
     
     <p class="- topic/p ">Un paramètre URLRequest spécifie la requête de sondage permettant d’interroger le serveur. En règle générale, la méthode de requête est soit <codeph class="+ topic/ph pr-d/codeph ">"GET"</codeph>, soit <codeph class="+ topic/ph pr-d/codeph ">"HEAD"</codeph>.</p>
     
     </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="air.net:URLMonitor:protected:checkStatus" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">checkStatus</apiName><shortdesc class="- topic/shortdesc ">
    Il s’est produit une tentative de chargement de contenu dans l’arrière-plan à partir d’une URL en vue de vérifier un code d’état HTTP renvoyé.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="protected" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Il s’est produit une tentative de chargement de contenu dans l’arrière-plan à partir d’une URL en vue de vérifier un code d’état HTTP renvoyé. 
    <p class="- topic/p ">
    Si un code d’état répertorié dans la propriété <codeph class="+ topic/ph pr-d/codeph ">acceptableStatusCodes</codeph> est reçu, la propriété <codeph class="+ topic/ph pr-d/codeph ">available</codeph> est définie sur <codeph class="+ topic/ph pr-d/codeph ">true</codeph>. Si un code d’état ne figurant pas dans la liste des propriétés <codeph class="+ topic/ph pr-d/codeph ">acceptableStatusCodes</codeph> est reçu, ou s’il existe une erreur de sécurité ou d’E/S, la propriété <codeph class="+ topic/ph pr-d/codeph ">available</codeph> est définie sur <codeph class="+ topic/ph pr-d/codeph ">false</codeph>.
    </p>
    
    </apiDesc></apiOperationDetail></apiOperation><apiOperation id="air.net:URLMonitor:toString" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">toString</apiName><shortdesc class="- topic/shortdesc ">
     
     
	 Renvoie la représentation sous forme de chaîne de l’objet spécifié.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Représentation sous forme de chaîne de l’objet.
	 
	 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     
     
	 Renvoie la représentation sous forme de chaîne de l’objet spécifié.
	 
     <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Remarque :</b> les méthodes de la classe Object sont créées dynamiquement sur le prototype correspondant. Pour redéfinir cette méthode dans une sous-classe d’Object, n’utilisez pas le mot-clé <codeph class="+ topic/ph pr-d/codeph ">override</codeph>. Par exemple, une sous-classe d’Object implémente <codeph class="+ topic/ph pr-d/codeph ">function toString():String</codeph> au lieu d’utiliser un remplacement de la classe de base.</p>
     
  	 </apiDesc></apiOperationDetail></apiOperation><apiValue id="air.net:URLMonitor:acceptableStatusCodes:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">acceptableStatusCodes</apiName><shortdesc class="- topic/shortdesc ">
     Codes d’état numériques représentant un résultat satisfaisant.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Array</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Codes d’état numériques représentant un résultat satisfaisant.
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="air.net:URLMonitor:urlRequest:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">urlRequest</apiName><shortdesc class="- topic/shortdesc ">
     Objet URLRequest représentant la requête de sondage.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.net:URLRequest</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Objet URLRequest représentant la requête de sondage.
     
     </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="air.net:ServiceMonitor" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">ServiceMonitor</apiName><shortdesc class="- topic/shortdesc ">
 La classe ServiceMonitor implémente la structure qui permet de surveiller l’état et la disponibilité des services réseau.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:EventDispatcher</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 La classe ServiceMonitor implémente la structure qui permet de surveiller l’état et la disponibilité des services réseau. La classe ServiceMonitor agit en tant que classe de base de tous les autres moniteurs de services.
 
 <p class="- topic/p ">Cette classe est incluse dans le fichier aircore.swc. Adobe<sup class="+ topic/ph hi-d/sup ">®</sup> Flash™ Builder™ charge cette classe automatiquement lors de la création d’un projet pour Adobe <sup class="+ topic/ph hi-d/sup ">®</sup> AIR™. Le kit de développement d’Adobe<sup class="+ topic/ph hi-d/sup ">®</sup> Flex™ comprend également le fichier aircore.swc, que vous devez inclure lors de la compilation de l’application.
 </p>
 
 <p class="- topic/p ">Dans Adobe<sup class="+ topic/ph hi-d/sup ">®</sup> Flash<sup class="+ topic/ph hi-d/sup ">®</sup> CS3 Professional, cette classe est incluse dans le fichier ServiceMonitorShim.swc. Pour utiliser les classes du package air.net, vous devez tout d’abord faire glisser le composant ServiceMonitorShim situé dans le panneau Composants jusqu’à la bibliothèque, puis ajouter l’instruction <codeph class="+ topic/ph pr-d/codeph ">import</codeph> suivante à votre code ActionScript 3.0 :
 </p>
 
 <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">import air.net.~~;</codeblock>
 
 <p class="- topic/p ">Pour utiliser le package air.net dans Adobe<sup class="+ topic/ph hi-d/sup ">®</sup> Flash<sup class="+ topic/ph hi-d/sup ">®</sup> Professional (CS4 ou version ultérieure) : </p>
 
 <ol class="- topic/ol "><li class="- topic/li ">Sélectionnez la commande Fichier > Paramètres de publication.</li><li class="- topic/li ">Dans le panneau Flash, cliquez sur le bouton Paramètres pour ActionScript 3.0, puis sélectionnez Chemin de la bibliothèque.</li><li class="- topic/li ">Cliquez sur le bouton Localiser le fichier SWC. Recherchez le fichier Adobe Flash CS<i class="+ topic/ph hi-d/i ">n</i>/AIK<i class="+ topic/ph hi-d/i ">n.n</i>/frameworks/libs/air/aircore.swc dans le dossier d’installation d’Adobe Flash Professional.</li><li class="- topic/li ">Cliquez sur le bouton OK.</li><li class="- topic/li ">Ajoutez l'instruction <codeph class="+ topic/ph pr-d/codeph ">import</codeph> suivante à votre code ActionScript 3.0 : <codeph class="+ topic/ph pr-d/codeph ">import air.net.~~;</codeph></li></ol>
 
 
 
 
 
 </apiDesc></apiClassifierDetail><adobeApiEvent id="air.net:ServiceMonitor_flash.events.StatusEvent.STATUS_status" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">status</apiName><shortdesc class="- topic/shortdesc ">
 Indique que l’état du service a changé.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.StatusEvent.STATUS</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.StatusEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Indique que l’état du service a changé.
 
 <p class="- topic/p ">La valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">code</codeph> est soit <codeph class="+ topic/ph pr-d/codeph ">"Service.available"</codeph>, soit <codeph class="+ topic/ph pr-d/codeph ">"Service.unavailable"</codeph>, mais il est conseillé de vérifier la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">ServiceMonitor.available</codeph>.</p>
 
 </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="air.net:ServiceMonitor:ServiceMonitor" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">ServiceMonitor</apiName><shortdesc class="- topic/shortdesc ">
     Crée un objet ServiceMonitor.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Crée un objet ServiceMonitor. 
     
     <p class="- topic/p ">Cette classe est généralement sous-classée pour contrôler des types de service spécifiques.</p>
     
     
     
     <p class="- topic/p ">Après avoir créé un objet ServiceMonitor (ou un objet de sous-classe), appelez la méthode <codeph class="+ topic/ph pr-d/codeph ">start()</codeph> pour procéder au contrôle de l’état du service.</p>
     
     <p class="- topic/p ">A l’instar de l’objet Timer, l’appelant doit conserver une référence à l’objet ServiceMonitor. Dans le cas contraire, l’objet est supprimé à l’exécution et le contrôle cesse.</p>
     
     </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="air.net:ServiceMonitor:protected:checkStatus" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">checkStatus</apiName><shortdesc class="- topic/shortdesc ">
     Vérifie l’état du service.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="protected" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Vérifie l’état du service.
     
     <p class="- topic/p ">Méthode d’annulation de sous-classes pour le contrôle de l’état du service.</p>
     
     <p class="- topic/p ">En règle générale, cette méthode lance une opération réseau dont la réussite ou l’échec entraîne la définition de la propriété <codeph class="+ topic/ph pr-d/codeph ">available</codeph>.</p>
     
     <p class="- topic/p ">Le code JavaScript peut spécialiser cette méthode en définissant une méthode <codeph class="+ topic/ph pr-d/codeph ">checkStatus()</codeph> dans l’objet « specializer ».</p>
     
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="air.net:ServiceMonitor:makeJavascriptSubclass" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">makeJavascriptSubclass</apiName><shortdesc class="- topic/shortdesc ">
     Ajoute des méthodes ServiceMonitor publiques à un prototype de la fonction constructeur de JavaScript.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">constructorFunction</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Object</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Propriété <codeph class="+ topic/ph pr-d/codeph ">prototype</codeph> de l’objet JavaScript. Par exemple, si l’objet JavaScript que vous utilisez pour agir comme objet specializer est nommé MyHTTPMonitor, transmettez <codeph class="+ topic/ph pr-d/codeph ">MyHTTPMonitor.prototype</codeph> comme valeur de ce paramètre.
     
     </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Ajoute des méthodes ServiceMonitor publiques à un prototype de la fonction constructeur de JavaScript.
     
     <p class="- topic/p ">Ajoute des fonctions au prototype de la fonction constructeur JavaScript qui transfèrent des fonctions publiques ServiceMonitor à l’objet ServiceMonitor. Elle se rapproche d’une sous-classe JavaScript standard de la classe ActionScript de base.</p>
     
     <p class="- topic/p ">Une classe JavaScript spécialisant une méthode ServiceMonitor pourrait se présenter sous la forme suivante :</p>
     
     <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
     // JavaScript Constructor function
     function MyHTTPMonitor(url, method)
     {
         // "that" variable makes "this" available in closures below
         var that = this;
         // Required initialization of the service monitor, returns the actual ServiceMonitor object.
         this.monitor = this.initServiceMonitor();
         // Initializes URLStream and event handlers.
         this._urlStream = new air.URLStream();
         this._urlRequest = new air.URLRequest(url);
         if (method)
         {
             this._urlRequest.method = method;
         }
         else
         {
             this._urlRequest.method = "GET";
         }
         function onStatus(event) {
             that.monitor.available = Number(event.status) == 200;
             that._urlStream.close();
         }
         function onError(event)
         {
             that.monitor.available = false;
             that._urlStream.close();
         }
         this._urlStream.addEventListener(air.HTTPStatusEvent.HTTP_RESPONSE_STATUS, onStatus);
         this._urlStream.addEventListener(air.SecurityErrorEvent.SECURITY_ERROR, onError);
         this._urlStream.addEventListener(air.IOErrorEvent.IO_ERROR, onError);
     }
     
     // Augment JavaScript prototype with public methods from ServiceMonitor
     air.ServiceMonitor.makeJavascriptSubclass(MyHTTPMonitor);
     
     // Implement specializer functions, just as you would when subclassing a JavaScript class
     MyHTTPMonitor.prototype.checkStatus = function()
     {
         air.trace('OVERRIDDEN checkStatus!', this);
         this._urlStream.load(this._urlRequest);
     }
     </codeblock>
     
     <p class="- topic/p ">Pour utiliser la classe JavaScript :</p>
     
     <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
     var httpMon = new MyHTTPMonitor('http://www.adobe.com')
     </codeblock>
     
     <p class="- topic/p ">Veillez à charger les fichiers AIRAliases.js et aircore.swf avec les balises <codeph class="+ topic/ph pr-d/codeph ">script</codeph>.</p>
     
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="air.net:ServiceMonitor:start" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">start</apiName><shortdesc class="- topic/shortdesc ">
     Démarre le moniteur du service.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Démarre le moniteur du service.
     
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="air.net:ServiceMonitor:stop" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">stop</apiName><shortdesc class="- topic/shortdesc ">
     Interrompt le moniteur du service.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Interrompt le moniteur du service.
     
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="air.net:ServiceMonitor:toString" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">toString</apiName><shortdesc class="- topic/shortdesc ">
     
	 Renvoie la représentation sous forme de chaîne de l’objet spécifié.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Représentation sous forme de chaîne de l’objet.
	 
	 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     
	 Renvoie la représentation sous forme de chaîne de l’objet spécifié.
	 
     <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Remarque :</b> les méthodes de la classe Object sont créées dynamiquement sur le prototype correspondant. Pour redéfinir cette méthode dans une sous-classe d’Object, n’utilisez pas le mot-clé <codeph class="+ topic/ph pr-d/codeph ">override</codeph>. Par exemple, une sous-classe d’Object implémente <codeph class="+ topic/ph pr-d/codeph ">function toString():String</codeph> au lieu d’utiliser un remplacement de la classe de base.</p>
     
  	 </apiDesc></apiOperationDetail></apiOperation><apiValue id="air.net:ServiceMonitor:available:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">available</apiName><shortdesc class="- topic/shortdesc ">
     Indique si le service est actuellement disponible (« available »). La valeur initiale est false jusqu’à ce que la propriété soit définie sur true après une vérification d’état ou jusqu’à ce qu’elle soit définie sur true de façon explicite. En général, cette propriété est définie lorsque la méthode checkStatus() est implémentée dans une sous-classe ou un objet specializer. Toutefois, si l’application possède des informations indépendantes sur la disponibilité d’un service (par exemple, une requête qui vient d’aboutir ou d’échouer), il est possible de définir la propriété de façon explicite.
     
     </shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Indique si le service est actuellement disponible (« available »). 
     
     <p class="- topic/p ">La valeur initiale est <codeph class="+ topic/ph pr-d/codeph ">false</codeph> jusqu’à ce que la propriété soit définie sur <codeph class="+ topic/ph pr-d/codeph ">true</codeph> après une vérification d’état ou jusqu’à ce qu’elle soit définie sur <codeph class="+ topic/ph pr-d/codeph ">true</codeph> de façon explicite.</p>
     
     <p class="- topic/p ">En général, cette propriété est définie lorsque la méthode <codeph class="+ topic/ph pr-d/codeph ">checkStatus()</codeph> est implémentée dans une sous-classe ou un objet specializer ; toutefois, si l’application possède des informations indépendantes sur la disponibilité d’un service (par exemple, une requête qui vient d’aboutir ou d’échouer), il est possible de définir la propriété de façon explicite.</p>
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="air.net:ServiceMonitor:lastStatusUpdate:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">lastStatusUpdate</apiName><shortdesc class="- topic/shortdesc ">
     Heure de la dernière mise à jour de l'état.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Date</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Heure de la dernière mise à jour de l'état.
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="air.net:ServiceMonitor:pollInterval:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">pollInterval</apiName><shortdesc class="- topic/shortdesc ">
     Intervalle d’interrogation du serveur, en millisecondes.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier><apiDefaultValue>0
     
     </apiDefaultValue></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Intervalle d’interrogation du serveur, en millisecondes.
     
     <p class="- topic/p ">Si cet intervalle est de zéro, le serveur n’est pas interrogé régulièrement, mais uniquement après l’appel de la méthode <codeph class="+ topic/ph pr-d/codeph ">start()</codeph> et lorsque l’état du réseau change.</p>
     
     <p class="- topic/p ">L’objet ServiceMonitor ne distribue qu’un événement <codeph class="+ topic/ph pr-d/codeph ">status</codeph> si l’état du service a changé (pas sur tous les intervalles d’interrogation). Cet objet distribue également un événement <codeph class="+ topic/ph pr-d/codeph ">status</codeph> suite à des modifications de connectivité réseau (quel que soit l’intervalle d’interrogation).</p>
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="air.net:ServiceMonitor:running:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">running</apiName><shortdesc class="- topic/shortdesc ">
     Indique si le contrôle a démarré.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Indique si le contrôle a démarré.
     
     </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="air.net:SecureSocketMonitor" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">SecureSocketMonitor</apiName><shortdesc class="- topic/shortdesc ">
 Un objet SecureSocketMonitor gère la disponibilité d’un point de terminaison TCP via les protocoles SSL (Secure Sockets Layer) et TLS (Transport Layer Security).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="2.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">air.net:SocketMonitor</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Un objet SecureSocketMonitor gère la disponibilité d’un point de terminaison TCP via les protocoles SSL (Secure Sockets Layer) et TLS (Transport Layer Security). 
 
 <p class="- topic/p ">Cette classe est incluse dans le fichier aircore.swc. Flash Builder charge cette classe automatiquement lors de la création d’un projet pour AIR. Le kit de développement de Flex comprend également le fichier aircore.swc, que vous devez inclure lors de la compilation de l’application.
 </p>
 
 <p class="- topic/p ">Dans Adobe<sup class="+ topic/ph hi-d/sup ">®</sup> Flash<sup class="+ topic/ph hi-d/sup ">®</sup> CS3 Professional, cette classe est incluse dans le fichier ServiceMonitorShim.swc. Pour utiliser les classes du package air.net, vous devez tout d’abord faire glisser le composant ServiceMonitorShim situé dans le panneau Composants jusqu’à la bibliothèque, puis ajouter l’instruction <codeph class="+ topic/ph pr-d/codeph ">import</codeph> suivante à votre code ActionScript 3.0 :
 </p>
 
 <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">import air.net.~~;</codeblock>
 
 <p class="- topic/p ">Pour utiliser le package air.net dans Adobe<sup class="+ topic/ph hi-d/sup ">®</sup> Flash<sup class="+ topic/ph hi-d/sup ">®</sup> Professional (CS4 ou version ultérieure) : </p>
 
 <ol class="- topic/ol "><li class="- topic/li ">Sélectionnez la commande Fichier > Paramètres de publication.</li><li class="- topic/li ">Dans le panneau Flash, cliquez sur le bouton Paramètres pour ActionScript 3.0, puis sélectionnez Chemin de la bibliothèque.</li><li class="- topic/li ">Cliquez sur le bouton Localiser le fichier SWC. Recherchez le fichier Adobe Flash CS<i class="+ topic/ph hi-d/i ">n</i>/AIK<i class="+ topic/ph hi-d/i ">n.n</i>/frameworks/libs/air/aircore.swc dans le dossier d’installation d’Adobe Flash Professional.</li><li class="- topic/li ">Cliquez sur le bouton OK.</li><li class="- topic/li ">Ajoutez l'instruction <codeph class="+ topic/ph pr-d/codeph ">import</codeph> suivante à votre code ActionScript 3.0 : <codeph class="+ topic/ph pr-d/codeph ">import air.net.~~;</codeph></li></ol>
 
 
 
 
 
 
 </apiDesc></apiClassifierDetail><apiConstructor id="air.net:SecureSocketMonitor:SecureSocketMonitor" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">SecureSocketMonitor</apiName><shortdesc class="- topic/shortdesc ">
	 Crée un objet SecureSocketMonitor pour le point de terminaison TCP spécifié.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="2.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">host</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Hôte à surveiller.
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">port</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Port à surveiller.
	 
	 </apiDesc></apiParam></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Crée un objet SecureSocketMonitor pour le point de terminaison TCP spécifié.
	 
	 <p class="- topic/p ">Après avoir créé un objet SecureSocketMonitor, l’appelant doit appeler la méthode <codeph class="+ topic/ph pr-d/codeph ">start</codeph> pour procéder au contrôle de l’état du service.</p>
	 
	 <p class="- topic/p ">Comme avec l’objet Timer, l’appelant doit conserver une référence à l’objet SecureSocketMonitor. Dans le cas contraire, l’objet est supprimé à l’exécution et le contrôle cesse.</p>
	 
	 </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="air.net:SecureSocketMonitor:protected:createSocket" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">createSocket</apiName><shortdesc class="- topic/shortdesc ">
	Crée un objet SecureSocket.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="2.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="protected" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">SecureSocket L’objet SecureSocket à utiliser par cette classe SocketMonitor ou <codeph class="+ topic/ph pr-d/codeph ">null</codeph> si les sockets sécurisés ne sont pas pris en charge sur le système actuel.
	 
	 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.net:Socket</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Crée un objet SecureSocket.
	
	</apiDesc></apiOperationDetail></apiOperation><apiOperation id="air.net:SecureSocketMonitor:toString" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">toString</apiName><shortdesc class="- topic/shortdesc ">
	 
	 
     
	 Renvoie la représentation sous forme de chaîne de l’objet spécifié.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="2.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Représentation sous forme de chaîne de l’objet.
	 
	 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 
	 
     
	 Renvoie la représentation sous forme de chaîne de l’objet spécifié.
	 
     <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Remarque :</b> les méthodes de la classe Object sont créées dynamiquement sur le prototype correspondant. Pour redéfinir cette méthode dans une sous-classe d’Object, n’utilisez pas le mot-clé <codeph class="+ topic/ph pr-d/codeph ">override</codeph>. Par exemple, une sous-classe d’Object implémente <codeph class="+ topic/ph pr-d/codeph ">function toString():String</codeph> au lieu d’utiliser un remplacement de la classe de base.</p>
     
  	 </apiDesc></apiOperationDetail></apiOperation></apiClassifier><apiClassifier languages="" id="air.net:SocketMonitor" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">SocketMonitor</apiName><shortdesc class="- topic/shortdesc ">
 Un objet SocketMonitor gère la disponibilité d’un point de terminaison TCP.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">air.net:ServiceMonitor</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Un objet SocketMonitor gère la disponibilité d’un point de terminaison TCP.
 
 <p class="- topic/p ">Cette classe est incluse dans le fichier aircore.swc. Flash Builder charge cette classe automatiquement lors de la création d’un projet pour AIR. Le kit de développement de Flex comprend également le fichier aircore.swc, que vous devez inclure lors de la compilation de l’application.
 </p>
 
 <p class="- topic/p ">Dans Adobe<sup class="+ topic/ph hi-d/sup ">®</sup> Flash<sup class="+ topic/ph hi-d/sup ">®</sup> CS3 Professional, cette classe est incluse dans le fichier ServiceMonitorShim.swc. Pour utiliser les classes du package air.net, vous devez tout d’abord faire glisser le composant ServiceMonitorShim situé dans le panneau Composants jusqu’à la bibliothèque, puis ajouter l’instruction <codeph class="+ topic/ph pr-d/codeph ">import</codeph> suivante à votre code ActionScript 3.0 :
 </p>
 
 <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">import air.net.~~;</codeblock>
 
 <p class="- topic/p ">Pour utiliser le package air.net dans Adobe<sup class="+ topic/ph hi-d/sup ">®</sup> Flash<sup class="+ topic/ph hi-d/sup ">®</sup> Professional (CS4 ou version ultérieure) : </p>
 
 <ol class="- topic/ol "><li class="- topic/li ">Sélectionnez la commande Fichier > Paramètres de publication.</li><li class="- topic/li ">Dans le panneau Flash, cliquez sur le bouton Paramètres pour ActionScript 3.0, puis sélectionnez Chemin de la bibliothèque.</li><li class="- topic/li ">Cliquez sur le bouton Localiser le fichier SWC. Recherchez le fichier Adobe Flash CS<i class="+ topic/ph hi-d/i ">n</i>/AIK<i class="+ topic/ph hi-d/i ">n.n</i>/frameworks/libs/air/aircore.swc dans le dossier d’installation d’Adobe Flash Professional.</li><li class="- topic/li ">Cliquez sur le bouton OK.</li><li class="- topic/li ">Ajoutez l'instruction <codeph class="+ topic/ph pr-d/codeph ">import</codeph> suivante à votre code ActionScript 3.0 : <codeph class="+ topic/ph pr-d/codeph ">import air.net.~~;</codeph></li></ol>
 
 
 
 
 
 </apiDesc></apiClassifierDetail><apiConstructor id="air.net:SocketMonitor:SocketMonitor" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">SocketMonitor</apiName><shortdesc class="- topic/shortdesc ">
	 Crée un objet SocketMonitor pour un point de fin TCP spécifique.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">host</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Hôte à surveiller.
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">port</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Port à surveiller.
	 
	 </apiDesc></apiParam></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Crée un objet SocketMonitor pour un point de fin TCP spécifique.
	 
	 <p class="- topic/p ">Après avoir créé un objet SocketMonitor, l’appelant doit appeler la méthode <codeph class="+ topic/ph pr-d/codeph ">start</codeph> pour commencer à surveiller l’état du service.</p>
	 
	 <p class="- topic/p ">A l’instar de l’objet Timer, l’appelant doit conserver une référence à l’objet SocketMonitor. Dans le cas contraire, l’objet est supprimé à l’exécution et le contrôle cesse.</p>
	 
	 </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="air.net:SocketMonitor:protected:checkStatus" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">checkStatus</apiName><shortdesc class="- topic/shortdesc ">
	Lors de l’appel de la méthode checkStatus() d’un objet SocketMonitor, l’application tente de se connecter au socket en vue de détecter un événement connect.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="protected" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Lors de l’appel de la méthode <codeph class="+ topic/ph pr-d/codeph ">checkStatus()</codeph> d’un objet SocketMonitor, l’application tente de se connecter au socket en vue de détecter un événement <codeph class="+ topic/ph pr-d/codeph ">connect</codeph>.
	
	</apiDesc></apiOperationDetail></apiOperation><apiOperation id="air.net:SocketMonitor:protected:createSocket" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">createSocket</apiName><shortdesc class="- topic/shortdesc ">
	Crée un objet Socket.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="protected" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">L’objet Socket à utiliser par cette classe SocketMonitor.
	
	</apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.net:Socket</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Crée un objet Socket. 
	
	</apiDesc></apiOperationDetail></apiOperation><apiOperation id="air.net:SocketMonitor:toString" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">toString</apiName><shortdesc class="- topic/shortdesc ">
	 
     
	 Renvoie la représentation sous forme de chaîne de l’objet spécifié.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Représentation sous forme de chaîne de l’objet.
	 
	 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 
     
	 Renvoie la représentation sous forme de chaîne de l’objet spécifié.
	 
     <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Remarque :</b> les méthodes de la classe Object sont créées dynamiquement sur le prototype correspondant. Pour redéfinir cette méthode dans une sous-classe d’Object, n’utilisez pas le mot-clé <codeph class="+ topic/ph pr-d/codeph ">override</codeph>. Par exemple, une sous-classe d’Object implémente <codeph class="+ topic/ph pr-d/codeph ">function toString():String</codeph> au lieu d’utiliser un remplacement de la classe de base.</p>
     
  	 </apiDesc></apiOperationDetail></apiOperation><apiValue id="air.net:SocketMonitor:host:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">host</apiName><shortdesc class="- topic/shortdesc ">
	 Hôte faisant l’objet d’une surveillance.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Hôte faisant l’objet d’une surveillance.
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="air.net:SocketMonitor:port:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">port</apiName><shortdesc class="- topic/shortdesc ">
	 Port faisant l’objet d’une surveillance.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">int</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Port faisant l’objet d’une surveillance.
	 
	 </apiDesc></apiValueDetail></apiValue></apiClassifier></apiPackage>