<?xml version="1.0" encoding="UTF-8"?>
<!--

  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.

-->
<apiPackage xmlns:ditaarch="http://dita.oasis-open.org/architecture/2005/" id="flash.text.engine" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiPackage/apiPackage "><apiName class="- topic/title reference/title apiRef/apiName ">flash.text.engine</apiName><apiDetail class="- topic/body reference/refbody apiRef/apiDetail "/><apiClassifier languages="" id="flash.text.engine:TextLine" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">TextLine</apiName><shortdesc class="- topic/shortdesc ">
 La classe TextLine est utilisée pour afficher du texte dans la liste d’affichage.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.display:DisplayObjectContainer</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 La classe TextLine est utilisée pour afficher du texte dans la liste d’affichage.
 
 <p class="- topic/p ">Il est impossible de créer un objet TextLine directement à partir du code ActionScript. Si vous appelez <codeph class="+ topic/ph pr-d/codeph ">new TextLine()</codeph>, une exception est renvoyée. Pour créer un objet TextLine, appelez la méthode <codeph class="+ topic/ph pr-d/codeph ">createTextLine()</codeph> d’un TextBlock.</p>
 
 <p class="- topic/p ">TextLine encapsule les informations minimales nécessaires pour effectuer le rendu de son contenu et fournir l’interactivité par l’intermédiaire de méthodes décrivant les propriétés des atomes de la ligne. Le terme atome fait à la fois référence aux éléments graphiques et aux caractères (y compris aux groupes de combinaisons de caractère), entités indivisibles qui composent une ligne de texte.</p>
 
 <p class="- topic/p ">Après un déclenchement normal d’événements pour une ligne de texte, si la ligne est valide, les événements sont reproduits dans les diffuseurs d’événements spécifiés par les propriétés <codeph class="+ topic/ph pr-d/codeph ">eventMirror</codeph> des objets d’éléments de contenu ayant contribué à la ligne de texte. Ces objets sont enregistrés dans la propriété <codeph class="+ topic/ph pr-d/codeph ">TextLine.mirrorRegions</codeph>. Les événements ne sont pas reproduits si la propagation de l’événement a échoué ou a été interrompue, ou si la ligne de texte n’est pas valide.</p>
 
 <p class="- topic/p ">La mise en miroir des événements de souris est un cas à part. Etant donné que les zones miroir ne sont pas des objets d’affichage, les événements <codeph class="+ topic/ph pr-d/codeph ">mouseOver</codeph> et <codeph class="+ topic/ph pr-d/codeph ">mouseOut</codeph> sont simulés à leur place. Les événements <codeph class="+ topic/ph pr-d/codeph ">rollOver</codeph> et <codeph class="+ topic/ph pr-d/codeph ">rollOut</codeph> ne sont pas simulés. Tous les événements <codeph class="+ topic/ph pr-d/codeph ">mouseOver</codeph>, <codeph class="+ topic/ph pr-d/codeph ">mouseOut</codeph>, <codeph class="+ topic/ph pr-d/codeph ">rollOver</codeph> et <codeph class="+ topic/ph pr-d/codeph ">rollOut</codeph> qui se produisent naturellement (ciblés à la ligne de texte ou aux enfants de la ligne de texte) sont ignorés et ne sont donc pas mis en miroir.</p>
 
 <p class="- topic/p ">L’origine d’un objet de ligne de texte est le début de la ligne de base. Si vous ne définissez pas la position verticale (propriété <codeph class="+ topic/ph pr-d/codeph ">y</codeph>) d’une ligne contenant du texte latin sur une ligne de base de caractères romains, seuls les jambages du texte s’affichent sous le haut de l’objet Sprite auquel vous ajoutez la ligne de texte. Examinez le diagramme suivant :</p>
 
 <p class="- topic/p "><adobeimage alt="Lignes de base du texte" href="../../../images/TextLine.gif" placement="inline" class="+ topic/image adobe-d/adobeimage "/></p>
 
 <p class="- topic/p ">La classe TextLine descend de plusieurs autres classes, DisplayObjectContainer, InteractiveObject, DisplayObject et EventDispatcher, dont elle hérite les propriétés et les méthodes. Les propriétés héritées suivantes ne s’appliquent pas aux objets TextLine : </p>
 
 <ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">contextMenu</codeph></li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">focusRect</codeph></li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">tabChildren</codeph></li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">tabEnabled</codeph></li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">tabIndex</codeph></li></ul>
 
 <p class="- topic/p ">Si vous tentez de définir ces propriétés, le moteur de saisie renvoie l’erreur : IllegalOperationError. Vous pouvez lire ces propriétés, mais elles contiennent toujours des valeurs par défaut.</p>
 
 </apiDesc><example conref="examples\TextLineExample.as" class="- topic/example "> Cet exemple affiche les diverses lignes de texte et étapes au travers des atomes d’un bloc de texte, en utilisant <codeph class="+ topic/ph pr-d/codeph ">getAtomBounds()</codeph> pour encadrer chacune d’elles.
    <ol class="- topic/ol "><li class="- topic/li ">Ajoutez le composant NumericStepper dans la bibliothèque.</li><li class="- topic/li ">Enregistrez ce code sous le nom TextLineExample.as dans le même répertoire que votre fichier FLA.</li><li class="- topic/li ">Dans la fenêtre Propriétés du fichier FLA, définissez Class sur TextLineExample.</li></ol>
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
package {
    import flash.display.Sprite;
    import flash.text.engine.TextBlock;
    import flash.text.engine.TextElement;
    import flash.text.engine.TextLine;
    import flash.text.engine.ElementFormat;
    import flash.text.engine.FontDescription;
    import flash.text.engine.FontPosture;
    import flash.text.engine.FontWeight;
    import fl.controls.NumericStepper;
    import flash.events.Event;
    import flash.geom.Rectangle;
    
    public class TextLineExample extends Sprite {
        
        private var atomStepper:NumericStepper = new NumericStepper();
        private var atomDataContainer:Sprite;
        private var fontDescriptionItalic:FontDescription = new FontDescription("Arial", FontWeight.NORMAL, FontPosture.ITALIC);
        private var fontDescriptionNormal:FontDescription = new FontDescription("Arial", FontWeight.NORMAL , FontPosture.NORMAL);
        private var textBlock:TextBlock = new TextBlock();
        private var textLine:TextLine;
        
        public function TextLineExample():void {
            
            var myText:String = "I am a TextElement, created from a String and assigned " +
            "to the content property of a TextBlock. From the text block, " +
            "the createTextLine() method created these lines, 300 pixels wide, "  +
            "for display." ;
            
            atomStepper.minimum = 0;
            atomStepper.value = 0;
            atomStepper.width = 50;
            addChild(atomStepper);
            atomStepper.x = 20;
            atomStepper.y = 120;
            atomStepper.addEventListener(Event.CHANGE, nsChange);
            
            var directions:String = "Click up / down arrows to frame atoms in text block above.";
            
            var formatItalic:ElementFormat = new ElementFormat(fontDescriptionItalic);
            formatItalic.fontSize = 12;
            var textElement1:TextElement = new TextElement(directions, formatItalic);
            textBlock.content = textElement1;
            createLines(textBlock, 15, 160, 400, this);
            
            var formatNormal:ElementFormat = new ElementFormat(fontDescriptionNormal);
            formatNormal.fontSize = 16;
            var textElement2:TextElement = new TextElement(myText, formatNormal);
            textBlock.content = textElement2;
            createLines(textBlock, 15.0, 20.0, 300, this);
            textLine = textBlock.firstLine;
            atomStepper.maximum = textLine.atomCount - 1;
            showAtom(textLine, 0);
        }
            
        private function nsChange(event:Event):void
        {
            removeAtom(textLine);
            if (atomStepper.value == textLine.atomCount - 1)
            {
                if(textLine != textBlock.lastLine)
                {
                    textLine = textLine.nextLine;
                    atomStepper.maximum = textLine.atomCount - 1;
                    atomStepper.value = 0;
                }
            }
            showAtom(textLine, atomStepper.value);
        }
            
        private function createLines(textBlock, startX, startY, width, container)
        {
            var textLine:TextLine = textBlock.createTextLine (null, width);
            while (textLine)
            {
                textLine.x = startX;
                textLine.y = startY;
                startY += textLine.height + 2;
                container.addChild(textLine);
                textLine = textBlock.createTextLine (textLine, width);
            }
        }
            
        private function showAtom(textLine, i):void
        {
            var box:Sprite = new Sprite();
            var mcGraphics = box.graphics;
            var bounds:Rectangle = textLine.getAtomBounds(i);
            mcGraphics.lineStyle(1, 0xFF0000, 1.0);
            mcGraphics.drawRect(bounds.left, bounds.top, bounds.width, bounds.height);
            textLine.userData = textLine.addChild(box);
            displayAtomData(textLine,i);
        }
            
        private function displayAtomData(textLine, i)
        {
            if(atomDataContainer != null)
                removeChild(atomDataContainer);
            atomDataContainer=new Sprite();
            var format = new ElementFormat(fontDescriptionNormal);
            format.color = 0x00000FF;
            var n:int = 0;
            var nxtY:Number = 0;
            var atomInfo:String = "value of getAtomBidiLevel() is: " + textLine.getAtomBidiLevel(i)+"\n"
            +"value of getAtomCenter() is: " + textLine.getAtomCenter(i)+"\n"
            +"value of getAtomIndexAtCharIndex() is: " + textLine.getAtomIndexAtCharIndex(i)+"\n"
            +"value of getAtomTextBlockBeginIndex() is: " + textLine.getAtomTextBlockBeginIndex(i)+"\n"
            +"value of getAtomTextBlockEndIndex() is: " + textLine.getAtomTextBlockEndIndex(i)+"\n"
            +"value of getAtomTextRotation() is: " + textLine.getAtomTextRotation(i)+"\n";
            var atomtextBlock:TextBlock = new TextBlock();
            var textElement3:TextElement = new TextElement(atomInfo, format);
            atomtextBlock.content = textElement3;
            createLines(atomtextBlock,20,200,500, atomDataContainer)
            addChild(atomDataContainer);
        }
            
        private function removeAtom(textLine):void
        {
            textLine.removeChild(textLine.userData);
        }
    }    
}
</codeblock></example></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#ContentElement/eventMirror" class="- topic/link "><linktext class="- topic/linktext ">ContentElement.eventMirror</linktext></link><link href="flash.text.engine.xml#TextBlock/createTextLine()" class="- topic/link "><linktext class="- topic/linktext ">TextBlock.createTextLine()</linktext></link><link href="flash.text.engine.xml#TextLineValidity" class="- topic/link "><linktext class="- topic/linktext ">TextLineValidity</linktext></link></related-links><apiOperation id="flash.text.engine:TextLine:dump" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">dump</apiName><shortdesc class="- topic/shortdesc ">
	 Libère le contenu sous-jacent du TextLine sous forme de chaîne XML.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Libère le contenu sous-jacent du TextLine sous forme de chaîne XML. Cela peut se révéler utile lors de tests automatisés, et comprend le texte, le formatage et les informations de mise en forme.
	 
	 <p class="- topic/p ">Voici le résultat :</p>
	 
	 <pre xml:space="preserve" class="- topic/pre ">
	 [LINE]
	 &lt;line ascent=[Number] descent=[Number] rotation=[int]>
	 	&lt;elements>
	 		[0-N ELEMENT]
	 	&lt;/elements>
	 	&lt;clusters>
	 		[0-N CLUSTER]
	 	&lt;/clusters>
	 &lt;/line>
	 
	 [ELEMENT]
	 &lt;glyph isEmbedded=[Boolean] fontName=[String] isBold=[Boolean] isItalic=[Boolean] gid=[int] pointSize=[Number] x=[Number] y=[Number] rotation=[int]/>
	 or
	 &lt;graphic child=[int] x=[Number] y=[Number] rotation=[int]/>
	 or
	 &lt;embeddedRun x=[Number] y=[Number]>
	 	[LINE]
	 &lt;/embeddedRun>
	 
	 [CLUSTER]
	 &lt;cluster xLeft=[Number] xCenter=[Number] xRight=[Number] cursorOnLeft=[Boolean] cursorOnRight=[Boolean] wordBoundaryOnLeft=[Boolean] wordBoundaryOnRight=[Boolean]/>
	 </pre>
	 
	 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Remarque :</b> il est possible que le contenu et le format du résultat de cette méthode changent dans le futur. Adobe ne garantit pas la compatibilité ascendante de cette méthode.</p>
	 
	 </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#TextBlock/dump()" class="- topic/link "><linktext class="- topic/linktext ">TextBlock.dump()</linktext></link></related-links></apiOperation><apiOperation id="flash.text.engine:TextLine:flushAtomData" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">flushAtomData</apiName><shortdesc class="- topic/shortdesc ">
	 Cette méthode est déconseillée et n’a aucun effet.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiDeprecated sinceVersion="Flash Player 10.1"><apiDesc class="- topic/section reference/section apiRef/apiDesc ">N’a aucun effet</apiDesc></apiDeprecated></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Cette méthode est déconseillée et n’a aucun effet. Les données de l’atome sont compressées et ne permettent pas une gestion efficace de la mémoire.
	 
	 </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#TextBlock/dump()" class="- topic/link "><linktext class="- topic/linktext ">TextBlock.dump()</linktext></link></related-links></apiOperation><apiOperation id="flash.text.engine:TextLine:getAtomBidiLevel" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">getAtomBidiLevel</apiName><shortdesc class="- topic/shortdesc ">
	 Récupère le niveau bidirectionnel de l’atome au niveau de l’index spécifié.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">L’index de l’atome spécifié est hors limites.
	 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">RangeError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">RangeError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">La <codeph class="+ topic/ph pr-d/codeph ">validité</codeph> de la ligne est <codeph class="+ topic/ph pr-d/codeph ">TextLineValidity.STATIC</codeph>.
	 
	 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IllegalOperationError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IllegalOperationError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Niveau bidirectionnel de l’atome au niveau de <codeph class="+ topic/ph pr-d/codeph ">atomIndex</codeph>
	 
	 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">atomIndex</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Valeur d’index de base zéro de l’atome (par exemple, le premier atome est 0, le deuxième est 1, etc.).
	 
	 </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Récupère le niveau bidirectionnel de l’atome au niveau de l’index spécifié. Déterminée par une combinaison de <codeph class="+ topic/ph pr-d/codeph ">TextBlock.bidiLevel</codeph> et des propriétés bidirectionnelles Unicode des caractères qui composent la ligne.
	 
	 <p class="- topic/p ">Par exemple, si vous commencez un bloc de texte par un texte hébreu, vous définissez <codeph class="+ topic/ph pr-d/codeph ">TextBlock.bidiLevel</codeph> sur 1, en définissant droite à gauche par défaut. Si le texte contient une citation en anglais (de gauche à droite), ce texte a un paramètre <codeph class="+ topic/ph pr-d/codeph ">AtomBidiLevel</codeph> de 2. Si le texte anglais contient une section en arabe (de droite à gauche), le paramètre <codeph class="+ topic/ph pr-d/codeph ">AtomBidiLevel</codeph> de ce texte passe à 3. Si le texte arabe contient un nombre (de gauche à droite), le paramètre <codeph class="+ topic/ph pr-d/codeph ">AtomBidiLevel</codeph> du nombre est 4. La ligne dans laquelle les atomes se terminent importe peu ; les atomes hébreux sont <codeph class="+ topic/ph pr-d/codeph ">AtomBidiLevel</codeph> 1, les atomes anglais sont <codeph class="+ topic/ph pr-d/codeph ">AtomBidiLevel</codeph> 2, les atomes arabes sont <codeph class="+ topic/ph pr-d/codeph ">AtomBidiLevel</codeph> 3 et les atomes de nombre sont <codeph class="+ topic/ph pr-d/codeph ">AtomBidiLevel</codeph> 4.</p>
	 
	 </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#TextBlock/bidiLevel" class="- topic/link "><linktext class="- topic/linktext ">TextBlock.bidiLevel</linktext></link></related-links></apiOperation><apiOperation id="flash.text.engine:TextLine:getAtomBounds" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">getAtomBounds</apiName><shortdesc class="- topic/shortdesc ">
	 Récupère les limites de l’atome au niveau de l’index spécifié par rapport à la ligne de texte.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">L’index de l’atome spécifié est hors limites.
	 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">RangeError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">RangeError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">La <codeph class="+ topic/ph pr-d/codeph ">validité</codeph> de la ligne est <codeph class="+ topic/ph pr-d/codeph ">TextLineValidity.STATIC</codeph>.
	  
	  </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IllegalOperationError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IllegalOperationError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Limites de l’atome au niveau de <codeph class="+ topic/ph pr-d/codeph ">atomIndex</codeph>.
	 
	 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.geom:Rectangle</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">atomIndex</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Valeur d’index de base zéro de l’atome (par exemple, le premier atome est 0, le deuxième est 1, etc.).
	 
	 </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Récupère les limites de l’atome au niveau de l’index spécifié par rapport à la ligne de texte. Les limites de l’atome spécifié sont constituées de sa position horizontale (<codeph class="+ topic/ph pr-d/codeph ">x</codeph>) dans la ligne, de sa position verticale (<codeph class="+ topic/ph pr-d/codeph ">y</codeph>) dans la ligne, de sa largeur (<codeph class="+ topic/ph pr-d/codeph ">w</codeph>) et de sa hauteur (<codeph class="+ topic/ph pr-d/codeph ">h</codeph>). Toutes les valeurs sont en pixels. 
	 
	 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.text.engine:TextLine:getAtomCenter" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">getAtomCenter</apiName><shortdesc class="- topic/shortdesc ">
	 Récupère le centre de l’atome tel que mesuré le long de la ligne de base au niveau de l’index spécifié.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">L’index de l’atome spécifié est hors limites.
	 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">RangeError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">RangeError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">La <codeph class="+ topic/ph pr-d/codeph ">validité</codeph> de la ligne est <codeph class="+ topic/ph pr-d/codeph ">TextLineValidity.STATIC</codeph>.
	  
	  </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IllegalOperationError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IllegalOperationError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Centre de l’atome au niveau de <codeph class="+ topic/ph pr-d/codeph ">atomIndex</codeph>
	 
	 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">atomIndex</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Valeur d’index de base zéro de l’atome (par exemple, le premier atome est 0, le deuxième est 1, etc.).
	 
	 </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Récupère le centre de l’atome tel que mesuré le long de la ligne de base au niveau de l’index spécifié.
	 
	 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.text.engine:TextLine:getAtomGraphic" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">getAtomGraphic</apiName><shortdesc class="- topic/shortdesc ">
	 Récupère le graphique de l’atome au niveau de l’index spécifié, ou null si l’atome est un caractère.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">L’index de l’atome spécifié est hors limites.
	 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">RangeError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">RangeError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">La <codeph class="+ topic/ph pr-d/codeph ">validité</codeph> de la ligne est <codeph class="+ topic/ph pr-d/codeph ">TextLineValidity.STATIC</codeph>.
	  
	  </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IllegalOperationError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IllegalOperationError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Graphique de l’atome au niveau de <codeph class="+ topic/ph pr-d/codeph ">atomIndex</codeph>
	 
	 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.display:DisplayObject</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">atomIndex</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Valeur d’index de base zéro de l’atome (par exemple, le premier atome est 0, le deuxième est 1, etc.).
	 
	 </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Récupère le graphique de l’atome au niveau de l’index spécifié, ou <codeph class="+ topic/ph pr-d/codeph ">null</codeph> si l’atome est un caractère.
	 
	 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.text.engine:TextLine:getAtomIndexAtCharIndex" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">getAtomIndexAtCharIndex</apiName><shortdesc class="- topic/shortdesc ">
	 Renvoie l’index de l’atome contenant le caractère spécifié par le paramètre charIndex, ou -1 si le caractère ne contribue à aucun atome dans la ligne.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">La <codeph class="+ topic/ph pr-d/codeph ">validité</codeph> de la ligne est <codeph class="+ topic/ph pr-d/codeph ">TextLineValidity.STATIC</codeph>.
	  
	  </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IllegalOperationError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IllegalOperationError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Index de l’atome contenant le caractère au niveau de <codeph class="+ topic/ph pr-d/codeph ">charIndex</codeph>. Renvoie -1 si le caractère ne contribue à aucun atome dans la ligne.
	 
	 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">charIndex</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Valeur d’index de base zéro du caractère (par exemple, le premier caractère est 0, le deuxième caractère est 1, etc.).
	 
	 </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Renvoie l’index de l’atome contenant le caractère spécifié par le paramètre <codeph class="+ topic/ph pr-d/codeph ">charIndex</codeph> ou -1 si le caractère ne contribue à aucun atome dans la ligne. Le paramètre <codeph class="+ topic/ph pr-d/codeph ">charIndex</codeph> est relatif à l’ensemble du contenu du bloc de texte contenant la ligne.
	 
	 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.text.engine:TextLine:getAtomIndexAtPoint" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">getAtomIndexAtPoint</apiName><shortdesc class="- topic/shortdesc ">
	 Renvoie l’index de l’atome situé au niveau du point spécifié par les paramètres x et y, ou -1 s’il n’y a pas d’atome au niveau de ce point.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">La <codeph class="+ topic/ph pr-d/codeph ">validité</codeph> de la ligne est <codeph class="+ topic/ph pr-d/codeph ">TextLineValidity.STATIC</codeph>.
	  
	  </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IllegalOperationError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IllegalOperationError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Index de l’atome sous le point. Renvoie -1 si le point n’est pas au-dessus d’un atome.
	 
	 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">stageX</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Coordonnée globale <i class="+ topic/ph hi-d/i ">x</i> du point à tester.
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">stageY</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Coordonnée globale <i class="+ topic/ph hi-d/i ">y</i> du point à tester.
	 </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Renvoie l’index de l’atome situé au niveau du point spécifié par les paramètres <codeph class="+ topic/ph pr-d/codeph ">x</codeph> et <codeph class="+ topic/ph pr-d/codeph ">y</codeph> ou -1 s’il n’y a pas d’atome au niveau de ce point.
	 
	 <p class="- topic/p ">Cette méthode prend les coordonnées globales de sorte qu’elles puissent être aisément utilisées avec les propriétés <codeph class="+ topic/ph pr-d/codeph ">MouseEvent.stageX</codeph> et <codeph class="+ topic/ph pr-d/codeph ">MouseEvent.stageY</codeph>.</p>
	 
	 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.text.engine:TextLine:getAtomTextBlockBeginIndex" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">getAtomTextBlockBeginIndex</apiName><shortdesc class="- topic/shortdesc ">
	 Récupère l’index de début du bloc de texte de l’atome au niveau de l’index spécifié.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">L’index de l’atome spécifié est hors limites.
	 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">RangeError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">RangeError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">La <codeph class="+ topic/ph pr-d/codeph ">validité</codeph> de la ligne est <codeph class="+ topic/ph pr-d/codeph ">TextLineValidity.STATIC</codeph>.
	  
	  </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IllegalOperationError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IllegalOperationError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Index de début du bloc de texte de l’atome au niveau de <codeph class="+ topic/ph pr-d/codeph ">atomIndex</codeph>
	 
	 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">atomIndex</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Valeur d’index de base zéro de l’atome (par exemple, le premier atome est 0, le deuxième est 1, etc.).
	 
	 </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Récupère l’index de début du bloc de texte de l’atome au niveau de l’index spécifié.
	 
	 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.text.engine:TextLine:getAtomTextBlockEndIndex" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">getAtomTextBlockEndIndex</apiName><shortdesc class="- topic/shortdesc ">
	 Récupère l’index de fin du bloc de texte de l’atome au niveau de l’index spécifié.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">L’index de l’atome spécifié est hors limites.
	 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">RangeError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">RangeError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">La <codeph class="+ topic/ph pr-d/codeph ">validité</codeph> de la ligne est <codeph class="+ topic/ph pr-d/codeph ">TextLineValidity.STATIC</codeph>.
	  
	  </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IllegalOperationError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IllegalOperationError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Index de fin du bloc de texte de l’atome au niveau de <codeph class="+ topic/ph pr-d/codeph ">atomIndex</codeph>
	 
	 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">atomIndex</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Valeur d’index de base zéro de l’atome (par exemple, le premier atome est 0, le deuxième est 1, etc.).
	 
	 </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Récupère l’index de fin du bloc de texte de l’atome au niveau de l’index spécifié.
	 
	 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.text.engine:TextLine:getAtomTextRotation" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">getAtomTextRotation</apiName><shortdesc class="- topic/shortdesc ">
	 Récupère la rotation de l’atome au niveau de l’index spécifié.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">L’index de l’atome spécifié est hors limites.
	 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">RangeError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">RangeError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">La <codeph class="+ topic/ph pr-d/codeph ">validité</codeph> de la ligne est <codeph class="+ topic/ph pr-d/codeph ">TextLineValidity.STATIC</codeph>.
	 
	 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IllegalOperationError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IllegalOperationError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Rotation de l’atome au niveau de <codeph class="+ topic/ph pr-d/codeph ">atomIndex</codeph>
	 
	 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">atomIndex</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Valeur d’index de base zéro de l’atome (par exemple, le premier atome est 0, le deuxième est 1, etc.).
	 
	 </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Récupère la rotation de l’atome au niveau de l’index spécifié. Des constantes TextRotation sont utilisées pour cette propriété. La rotation de l’atome correspond aux rotations cumulées de l’élément et de la ligne. Il est principalement utilisé pour définir l’orientation du caret (curseur) lors de l’interaction avec le TextLine.
	 
	 </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#ElementFormat/textRotation" class="- topic/link "><linktext class="- topic/linktext ">ElementFormat.textRotation</linktext></link></related-links></apiOperation><apiOperation id="flash.text.engine:TextLine:getAtomWordBoundaryOnLeft" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">getAtomWordBoundaryOnLeft</apiName><shortdesc class="- topic/shortdesc ">
	 Indique s’il existe ou non une limite de mot à gauche de l’atome au niveau de l’index spécifié.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">L’index de l’atome spécifié est hors limites.
	 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">RangeError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">RangeError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">La <codeph class="+ topic/ph pr-d/codeph ">validité</codeph> de la ligne est <codeph class="+ topic/ph pr-d/codeph ">TextLineValidity.STATIC</codeph>.
	  
	  </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IllegalOperationError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IllegalOperationError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Valeur booléenne qui indique s’il existe ou non une limite de mot à gauche de l’atome au niveau de <codeph class="+ topic/ph pr-d/codeph ">atomIndex</codeph>
	 
	 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">atomIndex</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Valeur d’index de base zéro de l’atome (par exemple, le premier atome est 0, le deuxième est 1, etc.).
	 
	 </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Indique s’il existe ou non une limite de mot à gauche de l’atome au niveau de l’index spécifié. Les limites de mot sont déterminées à partir des propriétés Unicode des caractères qui constituent la ligne.
	 
	 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.text.engine:TextLine:getBaselinePosition" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">getBaselinePosition</apiName><shortdesc class="- topic/shortdesc ">
	 Récupère la position de la ligne de base spécifiée par rapport au TextBlock.baselineZero.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Si la <codeph class="+ topic/ph pr-d/codeph ">baseline</codeph> spécifiée n’appartient pas à <codeph class="+ topic/ph pr-d/codeph ">TextBaseline</codeph>.
	  
	  </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Position de la ligne de base spécifiée par rapport à <codeph class="+ topic/ph pr-d/codeph ">TextBlock.baselineZero</codeph>.
	 
	 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">baseline</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ligne de base pour laquelle la position doit être récupérée. Utilisez des valeurs <codeph class="+ topic/ph pr-d/codeph ">TextBaseline</codeph>.
	 
	 </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Récupère la position de la ligne de base spécifiée par rapport au <codeph class="+ topic/ph pr-d/codeph ">TextBlock.baselineZero</codeph>.
	 
	 </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#TextBlock/baselineZero" class="- topic/link "><linktext class="- topic/linktext ">TextBlock.baselineZero</linktext></link><link href="flash.text.engine.xml#TextBaseline" class="- topic/link "><linktext class="- topic/linktext ">TextBaseline</linktext></link></related-links></apiOperation><apiOperation id="flash.text.engine:TextLine:getMirrorRegion" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">getMirrorRegion</apiName><shortdesc class="- topic/shortdesc ">
	 Renvoie le premier TextLineMirrorRegion de la ligne dont la propriété mirror correspond à celle spécifiée par le paramètre mirror, ou null s’il n’y a pas de correspondance.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Premier <codeph class="+ topic/ph pr-d/codeph ">TextLineMirrorRegion</codeph> de la ligne dont la propriété <codeph class="+ topic/ph pr-d/codeph ">mirror</codeph> correspond à la valeur spécifiée, ou <codeph class="+ topic/ph pr-d/codeph ">null</codeph> s’il n’y a pas de correspondance.
	  
	  </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.text.engine:TextLineMirrorRegion</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">mirror</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.events:EventDispatcher</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Objet miroir <codeph class="+ topic/ph pr-d/codeph ">EventDispatcher</codeph> à rechercher.
	 </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Renvoie le premier <codeph class="+ topic/ph pr-d/codeph ">TextLineMirrorRegion</codeph> de la ligne dont la propriété <codeph class="+ topic/ph pr-d/codeph ">mirror</codeph> correspond à celle spécifiée par le paramètre <codeph class="+ topic/ph pr-d/codeph ">mirror</codeph>, ou <codeph class="+ topic/ph pr-d/codeph ">null</codeph> s’il n’y a pas de correspondance.
	 <p class="- topic/p ">Même un seul <codeph class="+ topic/ph pr-d/codeph ">TextElement</codeph> peut produire plusieurs objets <codeph class="+ topic/ph pr-d/codeph ">TextLineMirrorRegion</codeph> sur une ou plusieurs lignes, selon les paramètres bidirectionnel et de saut de ligne. Les propriétés <codeph class="+ topic/ph pr-d/codeph ">nextRegion</codeph> et <codeph class="+ topic/ph pr-d/codeph ">previousRegion</codeph> relient toutes les zones miroir générées par un élément de texte.</p>
	 
	 </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#TextLineMirrorRegion" class="- topic/link "><linktext class="- topic/linktext ">TextLineMirrorRegion</linktext></link><link href="flash.text.engine.xml#ContentElement/eventMirror" class="- topic/link "><linktext class="- topic/linktext ">ContentElement.eventMirror</linktext></link></related-links></apiOperation><apiValue id="flash.text.engine:TextLine:MAX_LINE_WIDTH" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">MAX_LINE_WIDTH</apiName><shortdesc class="- topic/shortdesc "> 
	Largeur maximale requise d’une ligne de texte, en pixels.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">1000000</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">int</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	Largeur maximale requise d’une ligne de texte, en pixels. La méthode <codeph class="+ topic/ph pr-d/codeph ">TextBlock.createTextLine()</codeph> utilise cette constante comme valeur par défaut du paramètre <codeph class="+ topic/ph pr-d/codeph ">width</codeph>, si vous ne spécifiez pas de valeur.
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#TextBlock/createTextLine()" class="- topic/link "><linktext class="- topic/linktext ">TextBlock.createTextLine()</linktext></link></related-links></apiValue><apiValue id="flash.text.engine:TextLine:userData" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">userData</apiName><shortdesc class="- topic/shortdesc ">
	 Permet à l’application d’associer des données arbitraires à la ligne de texte.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiType value="" name="type" class="- topic/state reference/state apiRef/apiType "/></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Permet à l’application d’associer des données arbitraires à la ligne de texte. 
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.text.engine:TextLine:ascent:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">ascent</apiName><shortdesc class="- topic/shortdesc ">
	 Spécifie le nombre de pixels séparant la ligne de base du haut des plus grands caractères de la ligne.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Spécifie le nombre de pixels séparant la ligne de base du haut des plus grands caractères de la ligne. Dans le cas d’un TextLine contenant uniquement un élément graphique, <codeph class="+ topic/ph pr-d/codeph ">ascent</codeph> est défini sur 0.
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.text.engine:TextLine:atomCount:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">atomCount</apiName><shortdesc class="- topic/shortdesc ">
	 Nombre d’atomes dans la ligne, correspondant au nombre d’éléments indivisibles, espaces et éléments graphiques compris.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">int</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">La <codeph class="+ topic/ph pr-d/codeph ">validité</codeph> de la ligne est <codeph class="+ topic/ph pr-d/codeph ">TextLineValidity.STATIC</codeph>.
	  
	  </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IllegalOperationError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IllegalOperationError</apiOperationClassifier></apiException></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Nombre d’atomes dans la ligne, correspondant au nombre d’éléments indivisibles, espaces et éléments graphiques compris.
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.text.engine:TextLine:descent:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">descent</apiName><shortdesc class="- topic/shortdesc ">
	 Spécifie le nombre de pixels séparant la ligne de base du bas des caractères descendants les plus bas de la ligne.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Spécifie le nombre de pixels séparant la ligne de base du bas des caractères descendants les plus bas de la ligne. Dans le cas d’un TextLine contenant uniquement un élément graphique, <codeph class="+ topic/ph pr-d/codeph ">descent</codeph> est défini sur 0.
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.text.engine:TextLine:hasGraphicElement:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">hasGraphicElement</apiName><shortdesc class="- topic/shortdesc ">
	 Indique si la ligne de texte contient des éléments graphiques.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Indique si la ligne de texte contient des éléments graphiques.
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#GraphicElement" class="- topic/link "><linktext class="- topic/linktext ">GraphicElement</linktext></link></related-links></apiValue><apiValue id="flash.text.engine:TextLine:hasTabs:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">hasTabs</apiName><shortdesc class="- topic/shortdesc ">
	 Indique si la ligne de texte contient des tabulations.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Indique si la ligne de texte contient des tabulations.
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.text.engine:TextLine:mirrorRegions:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">mirrorRegions</apiName><shortdesc class="- topic/shortdesc ">
	 Vecteur contenant les objets TextLineMirrorRegion associés à la ligne, ou null lorsqu’il n’y en a pas.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiType value="Vector$flash.text.engine:TextLineMirrorRegion" name="type" class="- topic/state reference/state apiRef/apiType "/></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Vecteur contenant les objets <codeph class="+ topic/ph pr-d/codeph ">TextLineMirrorRegion</codeph> associés à la ligne, ou <codeph class="+ topic/ph pr-d/codeph ">null</codeph> lorsqu’il n’y en a pas.
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#ContentElement/eventMirror" class="- topic/link "><linktext class="- topic/linktext ">ContentElement.eventMirror</linktext></link><link href="flash.text.engine.xml#TextLineMirrorRegion" class="- topic/link "><linktext class="- topic/linktext ">TextLineMirrorRegion</linktext></link></related-links></apiValue><apiValue id="flash.text.engine:TextLine:nextLine:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">nextLine</apiName><shortdesc class="- topic/shortdesc ">
	 Prochain TextLine du TextBlock, ou null si la ligne en cours est la dernière ligne du bloc ou si sa validité est TextLineValidity.STATIC.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.text.engine:TextLine</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Prochain TextLine du TextBlock, ou <codeph class="+ topic/ph pr-d/codeph ">null</codeph> si la ligne en cours est la dernière ligne du bloc ou si sa validité est <codeph class="+ topic/ph pr-d/codeph ">TextLineValidity.STATIC</codeph>.
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#TextLine/previousLine" class="- topic/link "><linktext class="- topic/linktext ">previousLine</linktext></link></related-links></apiValue><apiValue id="flash.text.engine:TextLine:previousLine:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">previousLine</apiName><shortdesc class="- topic/shortdesc ">
	 TextLine précédent du TextBlock, ou null s’il s’agit de la première ligne du bloc ou si la validité de la ligne est TextLineValidity.STATIC.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.text.engine:TextLine</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 TextLine précédent du TextBlock, ou <codeph class="+ topic/ph pr-d/codeph ">null</codeph> s’il s’agit de la première ligne du bloc ou si la validité de la ligne est <codeph class="+ topic/ph pr-d/codeph ">TextLineValidity.STATIC</codeph>.
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#TextLine/nextLine" class="- topic/link "><linktext class="- topic/linktext ">nextLine</linktext></link></related-links></apiValue><apiValue id="flash.text.engine:TextLine:rawTextLength:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">rawTextLength</apiName><shortdesc class="- topic/shortdesc ">
	 Longueur du texte brut dans le bloc de texte devenant la ligne, y compris les caractères U+FDEF représentant des éléments graphiques et tous les espaces à droite faisant partie de la ligne mais non affichés.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">int</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Longueur du texte brut dans le bloc de texte devenant la ligne, y compris les caractères U+FDEF représentant des éléments graphiques et tous les espaces à droite faisant partie de la ligne mais non affichés.
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#TextBlock" class="- topic/link "><linktext class="- topic/linktext ">TextBlock</linktext></link><link href="flash.text.engine.xml#ContentElement/rawText" class="- topic/link "><linktext class="- topic/linktext ">ContentElement.rawText</linktext></link></related-links></apiValue><apiValue id="flash.text.engine:TextLine:specifiedWidth:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">specifiedWidth</apiName><shortdesc class="- topic/shortdesc ">
	 Largeur spécifiée à la méthode TextBlock.createTextLine() lors de la création de la ligne.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Largeur spécifiée à la méthode <codeph class="+ topic/ph pr-d/codeph ">TextBlock.createTextLine()</codeph> lors de la création de la ligne. Cette valeur est très utile lorsque l’on doit décider si une modification nécessite une nouvelle séparation de la ligne.
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#TextBlock/createTextLine()" class="- topic/link "><linktext class="- topic/linktext ">TextBlock.createTextLine()</linktext></link><link href="flash.text.engine.xml#TextLine/textWidth" class="- topic/link "><linktext class="- topic/linktext ">textWidth</linktext></link><link href="flash.text.engine.xml#TextLine/unjustifiedTextWidth" class="- topic/link "><linktext class="- topic/linktext ">unjustifiedTextWidth</linktext></link></related-links></apiValue><apiValue id="flash.text.engine:TextLine:textBlockBeginIndex:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">textBlockBeginIndex</apiName><shortdesc class="- topic/shortdesc ">
	 Index du premier caractère de la ligne dans le texte brut du bloc de texte.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">int</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Index du premier caractère de la ligne dans le texte brut du bloc de texte.
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#TextBlock" class="- topic/link "><linktext class="- topic/linktext ">TextBlock</linktext></link></related-links></apiValue><apiValue id="flash.text.engine:TextLine:textBlock:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">textBlock</apiName><shortdesc class="- topic/shortdesc ">
	 Bloc de texte contenant cette ligne de texte, ou null si la validité de la ligne est TextLineValidity.STATIC, ce qui signifie que la connexion entre la ligne et le bloc de texte a été rompue.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.text.engine:TextBlock</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Bloc de texte contenant cette ligne de texte, ou null si la validité de la ligne est <codeph class="+ topic/ph pr-d/codeph ">TextLineValidity.STATIC</codeph>, ce qui signifie que la connexion entre la ligne et le bloc de texte a été rompue.
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#TextBlock" class="- topic/link "><linktext class="- topic/linktext ">TextBlock</linktext></link><link href="flash.text.engine.xml#TextLineValidity" class="- topic/link "><linktext class="- topic/linktext ">TextLineValidity</linktext></link></related-links></apiValue><apiValue id="flash.text.engine:TextLine:textHeight:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">textHeight</apiName><shortdesc class="- topic/shortdesc ">
	 Hauteur logique de la ligne de texte, égale à ascent + descent.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Hauteur logique de la ligne de texte, égale à <codeph class="+ topic/ph pr-d/codeph ">ascent </codeph> + <codeph class="+ topic/ph pr-d/codeph ">descent</codeph>. Pour obtenir la hauteur encrée, accédez à la propriété <codeph class="+ topic/ph pr-d/codeph ">height</codeph> héritée.
	 
	 <p class="- topic/p ">La valeur est calculée à partir de la différence entre les lignes de base qui limitent la ligne, ideo top/bottom ou ascent/descent, selon si TextBlock.baselineZero est ideo ou non. Les éléments graphiques ne sont pas pris en compte lors du calcul de ces lignes de base.</p>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#DisplayObject/height" class="- topic/link "><linktext class="- topic/linktext ">DisplayObject.height</linktext></link></related-links></apiValue><apiValue id="flash.text.engine:TextLine:textWidth:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">textWidth</apiName><shortdesc class="- topic/shortdesc ">
	 Largeur logique de la ligne de texte, correspondant à la largeur utilisée par le moteur de saisie pour positionner la ligne.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Largeur logique de la ligne de texte, correspondant à la largeur utilisée par le moteur de saisie pour positionner la ligne. Accédez à la propriété héritée <codeph class="+ topic/ph pr-d/codeph ">width</codeph> pour obtenir la largeur réelle du cadre de sélection de tous les pixels dessinés.
	 
	 </apiDesc><example conref="examples\TextLine_textWidthExample.as" class="- topic/example "> Cet exemple affiche une ligne une fois en posture normale et une fois en italique, et suit les valeurs des propriétés <codeph class="+ topic/ph pr-d/codeph ">specifiedWidth</codeph>, <codeph class="+ topic/ph pr-d/codeph ">textWidth</codeph> et <codeph class="+ topic/ph pr-d/codeph ">width</codeph> dans chaque cas. Le résultat du suivi est : 
 <ul class="- topic/ul "><li class="- topic/li ">specifiedWidth : 500</li><li class="- topic/li ">textWidth : 268.9921875</li><li class="- topic/li ">width : 269</li><li class="- topic/li ">specifiedWidth : 500</li><li class="- topic/li ">textWidth : 267.52734375</li><li class="- topic/li ">width : 267.55</li></ul>
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
 
package {
import flash.display.Sprite;
import flash.text.engine.TextBlock;
import flash.text.engine.TextElement;
import flash.text.engine.TextLine;
import flash.text.engine.FontDescription;
import flash.text.engine.ElementFormat;
import flash.text.engine.FontPosture;

    public class TextLine_textWidthExample extends Sprite {
        
        public function TextLine_textWidthExample() {
            
            var str:String = "Lorem ipsum dolor sit amet, consectetur adipisicing elit, ";
            var yPos:Number = 20;
            var fontDescription:FontDescription = new FontDescription();
            var textBlock:TextBlock = new TextBlock();
            fontDescription.fontPosture = FontPosture.NORMAL;
            var format:ElementFormat = new ElementFormat(fontDescription, 12);
            var textElement:TextElement = new TextElement(str, format);
            textBlock.content = textElement;
            createLine(textBlock, yPos);
            var fontDescriptionItalic = fontDescription.clone();
            fontDescriptionItalic.fontPosture = FontPosture.ITALIC;
            var formatItalic = new ElementFormat(fontDescriptionItalic, 12);
            textElement = new TextElement(str, formatItalic);
            textBlock.content = textElement;
            createLine(textBlock, yPos + 20);
        }

        private function createLine(textBlock:TextBlock, yPos:Number):void {
            var textLine:TextLine = textBlock.createTextLine (null, 500);
            trace("specifiedWidth is: " + textLine.specifiedWidth);
            trace("textWidth is: " + textLine.textWidth);
            trace("width is: " + textLine.width);
            addChild(textLine);
            textLine.x = 15;
            textLine.y = yPos;     
        }
    }
}

</codeblock></example></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#TextLine/specifiedWidth" class="- topic/link "><linktext class="- topic/linktext ">specifiedWidth</linktext></link><link href="flash.display.xml#DisplayObject/width" class="- topic/link "><linktext class="- topic/linktext ">DisplayObject.width</linktext></link></related-links></apiValue><apiValue id="flash.text.engine:TextLine:totalAscent:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">totalAscent</apiName><shortdesc class="- topic/shortdesc ">
	 Spécifie le nombre de pixels séparant la ligne de base du haut du caractère descendant (ou de l’image) le plus élevé de la ligne.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Spécifie le nombre de pixels séparant la ligne de base du haut du caractère descendant (ou de l’image) le plus élevé de la ligne.
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.text.engine:TextLine:totalDescent:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">totalDescent</apiName><shortdesc class="- topic/shortdesc ">
	 Spécifie le nombre de pixels séparant la ligne de base du bas du caractère descendant (ou de l’image) le plus bas de la ligne.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Spécifie le nombre de pixels séparant la ligne de base du bas du caractère descendant (ou de l’image) le plus bas de la ligne.
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.text.engine:TextLine:totalHeight:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">totalHeight</apiName><shortdesc class="- topic/shortdesc ">
	 Hauteur logique totale de la ligne de texte, égale à totalAscent + totalDescent.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Hauteur logique totale de la ligne de texte, égale à <codeph class="+ topic/ph pr-d/codeph ">totalAscent</codeph> + <codeph class="+ topic/ph pr-d/codeph ">totalDescent</codeph>.
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.text.engine:TextLine:unjustifiedTextWidth:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">unjustifiedTextWidth</apiName><shortdesc class="- topic/shortdesc ">
	 Largeur de la ligne si elle n’était pas justifiée.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Largeur de la ligne si elle n’était pas justifiée. Dans le cas de texte non justifié, cette valeur est identique à <codeph class="+ topic/ph pr-d/codeph ">textWidth</codeph>. Dans le cas de texte justifié, cette valeur correspond à ce qu’aurait été la longueur sans justification et <codeph class="+ topic/ph pr-d/codeph ">textWidth</codeph> représente la largeur réelle de la ligne. Par exemple, lorsque la chaîne suivante est justifiée et envoyée à <codeph class="+ topic/ph pr-d/codeph ">TextBlock.createTextLine()</codeph> avec une largeur de 500, sa largeur réelle est de 500 mais sa largeur non justifiée de 268.9921875.
	 
	 </apiDesc><example class="- topic/example ">Lorsque la chaîne de l’exemple suivant est justifiée et envoyée à TextBlock.createTextLine() avec une largeur de 500, elle obtient une largeur réelle de 500 mais a une largeur non justifiée de 268.9921875.
	 <codeblock rev="3.0" xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
	 import flash.display.Sprite;
	 import flash.text.engine.TextBlock;
	 import flash.text.engine.TextElement;
	 import flash.text.engine.TextLine;
	 import flash.text.engine.FontDescription;
	 import flash.text.engine.ElementFormat;
	 import flash.text.engine.SpaceJustifier;
	 import flash.text.engine.LineJustification;

	 var str:String = "Lorem ipsum dolor sit amet, consectetur adipisicing elit, ";
	 var fontDescription:FontDescription = new FontDescription();
	 var textBlock:TextBlock = new TextBlock();
	 var format:ElementFormat = new ElementFormat(fontDescription, 12);
	 var textElement:TextElement = new TextElement(str, format);
	 textBlock.content = textElement;
	 var spaceJustifier:SpaceJustifier = new SpaceJustifier("en", LineJustification.ALL_INCLUDING_LAST);
	 textBlock.textJustifier = spaceJustifier;
	 var textLine:TextLine = textBlock.createTextLine(null, 500);
	 textLine.y = 20;

	 addChild(textLine);
	 trace("textWidth value is: " + textLine.textWidth);		// 500.00244140625
	 trace("unjustifiedTextWidth is: " + textLine.unjustifiedTextWidth); // 268.9921875
	 </codeblock>
	 
	 </example></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#EastAsianJustifier" class="- topic/link "><linktext class="- topic/linktext ">EastAsianJustifier</linktext></link><link href="flash.text.engine.xml#LineJustification" class="- topic/link "><linktext class="- topic/linktext ">LineJustification</linktext></link><link href="flash.text.engine.xml#SpaceJustifier" class="- topic/link "><linktext class="- topic/linktext ">SpaceJustifier</linktext></link><link href="flash.text.engine.xml#TextLine/specifiedWidth" class="- topic/link "><linktext class="- topic/linktext ">specifiedWidth</linktext></link><link href="flash.text.engine.xml#TextLine/textWidth" class="- topic/link "><linktext class="- topic/linktext ">textWidth</linktext></link></related-links></apiValue><apiValue id="flash.text.engine:TextLine:validity:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">validity</apiName><shortdesc class="- topic/shortdesc ">
	 Spécifie la validité actuelle de la ligne de texte.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Si la valeur actuelle est <codeph class="+ topic/ph pr-d/codeph ">TextLineValidity.STATIC</codeph>.
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Si la valeur actuelle est <codeph class="+ topic/ph pr-d/codeph ">TextLineValidity.INVALID</codeph> et que la nouvelle valeur est autre que <codeph class="+ topic/ph pr-d/codeph ">TextValidity.STATIC</codeph>.
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Si la valeur actuelle est <codeph class="+ topic/ph pr-d/codeph ">TextLineValidity.POSSIBLY_INVALID</codeph> et que la nouvelle valeur est <codeph class="+ topic/ph pr-d/codeph ">TextLineValidity.VALID</codeph>.
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Si la nouvelle valeur est <codeph class="+ topic/ph pr-d/codeph ">TextLineValidity.POSSIBLY_INVALID</codeph>.
     	 
     	 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Spécifie la validité actuelle de la ligne de texte. Les valeurs valides pour cette propriété sont les membres de la classe <codeph class="+ topic/ph pr-d/codeph ">TextLineValidity</codeph>. Les règles de définition de cette propriété sont les suivantes :
	 
	 <p class="- topic/p ">Une ligne est considérée USER_INVALID si la validité est définie sur une chaîne quelconque, non membre de <codeph class="+ topic/ph pr-d/codeph ">TextLineValidity</codeph>. USER_INVALID est une abstraction utilisée ici pour représenter une telle valeur.</p>
	 
	 <p class="- topic/p ">Lorsque le contenu du TextBlock est modifié, le moteur d’exécution de Flash marque les lignes de texte affectées, la ligne précédente et toutes les lignes suivantes comme INVALID. La ligne précédente doit être désignée comme non valide lorsqu’une modification l’autorise à absorber une partie du contenu auparavant sur la première ligne affectée.</p>
	 
	 <p class="- topic/p ">Les lignes nouvellement séparées sont toujours VALID. Le moteur d’exécution de Flash peut faire passer les lignes suivantes de VALID à POSSIBLY_INVALID ou à INVALID. Il peut transformer les lignes POSSIBLY_INVALID en VALID si les sauts de ligne correspondent ou en INVALID dans le cas contraire.</p>
	 
	 <p class="- topic/p ">Le code de l’application peut marquer les lignes VALID en INVALID ou en USER_INVALID, et les lignes USER_INVALID en VALID. Le code de l’application ne peut pas marquer des lignes comme POSSIBLY_INVALID.</p>
	 
	 <p class="- topic/p ">Le code de l’application peut marquer n’importe quelle ligne comme STATIC. Dans ce cas, le membre du <codeph class="+ topic/ph pr-d/codeph ">bloc</codeph> devient <codeph class="+ topic/ph pr-d/codeph ">null</codeph>. Tous les éléments graphiques d’une ligne de texte STATIC sont supprimés et à nouveau apparentés s’ils font partie d’une nouvelle séparation de ligne de texte du bloc de texte d’où dérive à l’origine la ligne de texte STATIC.</p>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#TextBlock/firstInvalidLine" class="- topic/link "><linktext class="- topic/linktext ">TextBlock.firstInvalidLine</linktext></link><link href="flash.text.engine.xml#TextLineValidity" class="- topic/link "><linktext class="- topic/linktext ">TextLineValidity</linktext></link></related-links></apiValue></apiClassifier><apiClassifier languages="" id="flash.text.engine:TabStop" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">TabStop</apiName><shortdesc class="- topic/shortdesc ">
 La classe TabStop représente les propriétés d’un taquet de tabulation dans un bloc de texte.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 La classe TabStop représente les propriétés d’un taquet de tabulation dans un bloc de texte. Vous affectez les taquets de tabulation en tant que vecteur d’objets TabStop à la propriété <codeph class="+ topic/ph pr-d/codeph ">TextBlock.tabStops</codeph>.
 
 <p class="- topic/p ">La définition des propriétés d’un objet TabStop après son application à un TextBlock n’invalide pas le TextBlock.</p>
 
 </apiDesc><example conref="examples\TabStopExample.as" class="- topic/example "> Cet exemple illustre les effets de quatre paramètres d’alignement des taquets de tabulation - START, CENTER, DECIMAL et END.
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
package {
    
    import flash.text.engine.*;
    import flash.display.Sprite;
    
    public class TabStopExample extends Sprite {
        
        public function TabStopExample():void {
            var container:Sprite = new Sprite(); 
            
            var english:ElementFormat = new ElementFormat(); 
            english.fontDescription = new FontDescription("Arial"); 
            english.fontSize = 16;
            english.locale = "en"; 
            
            var tabStops:Vector.&lt;TabStop> = new Vector.&lt;TabStop>();    
            tabStops.push(
                new TabStop(TabAlignment.START, 20),
                new TabStop(TabAlignment.CENTER, 120),
                new TabStop(TabAlignment.DECIMAL, 220, "."),
                new TabStop(TabAlignment.END, 320)
            ); 
    
            var textBlock:TextBlock = new TextBlock();
            textBlock.content = new TextElement(
                "\tstart\tcenter\tdeci.mal\tend\n" +        
                "\tl\tl\t3.4\tl\n" +
                "\tlm\tlm\t234.56\tlm\n" +
                "\tlmn\tlmn\t12345678.34567\tlmn\n"
                , english); 
            textBlock.tabStops = tabStops;
            var y:Number = 60;
            var previousTextLine:TextLine = null; 
            var textLine:TextLine;
            var i:int;
            var tabOrigin:Number = 100;
            for (i = 0; i &lt; 4; i++) {
                textLine = textBlock.createTextLine(previousTextLine, 1000, 0); 
                textLine.x = 20;
                textLine.y = y; 
                
                container.addChild(textLine);     
                
                y += 25; 
                previousTextLine = textLine; 
            }
            addChild(container);        
        }
    }
}

</codeblock></example></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#TextBlock/tabStops" class="- topic/link "><linktext class="- topic/linktext ">TextBlock.tabStops</linktext></link><link href="flash.text.engine.xml#TabAlignment" class="- topic/link "><linktext class="- topic/linktext ">TabAlignment</linktext></link></related-links><apiConstructor id="flash.text.engine:TabStop:TabStop" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">TabStop</apiName><shortdesc class="- topic/shortdesc ">
	 Crée un nouveau TabStop.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Le paramètre <codeph class="+ topic/ph pr-d/codeph ">alignment</codeph> spécifié n’appartient pas à <codeph class="+ topic/ph pr-d/codeph ">TabAlignment</codeph>.
	  
	  </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">alignment</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">start</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Type d’alignement de tabulation de ce taquet de tabulation. Les valeurs valides de cette propriété sont les membres de la classe <codeph class="+ topic/ph pr-d/codeph ">TabAlignment</codeph>. La valeur par défaut est <codeph class="+ topic/ph pr-d/codeph ">TabAlignment.START</codeph>.
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">position</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0.0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Position de l’arrêt de tabulation, en pixels. La valeur par défaut est <codeph class="+ topic/ph pr-d/codeph ">0.0</codeph>.
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">decimalAlignmentToken</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData "/><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Jeton d’alignement à utiliser si le paramètre <codeph class="+ topic/ph pr-d/codeph ">alignment</codeph> est <codeph class="+ topic/ph pr-d/codeph ">TabAlignment.DECIMAL</codeph>. La valeur par défaut est <codeph class="+ topic/ph pr-d/codeph ">""</codeph>.
     </apiDesc></apiParam></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Crée un nouveau TabStop.
     </apiDesc></apiConstructorDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#TabAlignment" class="- topic/link "><linktext class="- topic/linktext ">TabAlignment</linktext></link></related-links></apiConstructor><apiValue id="flash.text.engine:TabStop:alignment:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">alignment</apiName><shortdesc class="- topic/shortdesc ">
	 Spécifie l’alignement de tabulation de ce taquet de tabulation.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Si la propriété est définie sur une valeur n’appartenant pas à <codeph class="+ topic/ph pr-d/codeph ">TabAlignment</codeph>.
	  
	  </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Spécifie l’alignement de tabulation de ce taquet de tabulation. Utilisez les constantes de la classe TabAlignment pour définir cette propriété.
	 
	 <p class="- topic/p ">La valeur par défaut est <codeph class="+ topic/ph pr-d/codeph ">TabAlignment.START</codeph>.</p>
	 
	 <p class="- topic/p ">Utilisez l’argument <codeph class="+ topic/ph pr-d/codeph ">lineOffset</codeph> sur <codeph class="+ topic/ph pr-d/codeph ">TextBlock.createTextLine()</codeph> pour ajuster les tabulations si l’origine de la ligne ne s’aligne pas sur les autres lignes partageant les mêmes taquets de tabulation.</p>
	 
	 <p class="- topic/p ">Utilisez les constantes suivantes de la classe TabAlignment pour définir la valeur de cette propriété :</p>
	 
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Valeur de chaîne</entry><entry class="- topic/entry ">Description</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">TabAlignment.START</codeph></entry><entry class="- topic/entry ">La propriété <codeph class="+ topic/ph pr-d/codeph ">position</codeph> spécifie le nombre de pixels séparant le <i class="+ topic/ph hi-d/i ">début</i> du texte tabulé du début de la ligne de texte.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">TabAlignment.CENTER</codeph></entry><entry class="- topic/entry ">La propriété <codeph class="+ topic/ph pr-d/codeph ">position</codeph> spécifie le nombre de pixels séparant le <i class="+ topic/ph hi-d/i ">centre</i> du texte tabulé du début de la ligne de texte.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">TabAlignment.END</codeph></entry><entry class="- topic/entry ">La propriété <codeph class="+ topic/ph pr-d/codeph ">position</codeph> spécifie le nombre de pixels séparant la <i class="+ topic/ph hi-d/i ">fin</i> du texte tabulé du début de la ligne de texte.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">TabAlignment.DECIMAL</codeph></entry><entry class="- topic/entry ">La propriété <codeph class="+ topic/ph pr-d/codeph ">position</codeph> spécifie le nombre de pixels séparant le jeton d’alignement du début de la ligne de texte.</entry></row></tbody></tgroup></adobetable>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#TabAlignment" class="- topic/link "><linktext class="- topic/linktext ">TabAlignment</linktext></link><link href="flash.text.engine.xml#TextBlock/createTextLine()" class="- topic/link "><linktext class="- topic/linktext ">TextBlock.createTextLine()</linktext></link></related-links></apiValue><apiValue id="flash.text.engine:TabStop:decimalAlignmentToken:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">decimalAlignmentToken</apiName><shortdesc class="- topic/shortdesc ">
	 Spécifie le jeton d’alignement à utiliser lorsque vous définissez la propriété alignment sur TabAlignment.DECIMAL.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Spécifie le jeton d’alignement à utiliser lorsque vous définissez la propriété <codeph class="+ topic/ph pr-d/codeph ">alignment</codeph> sur <codeph class="+ topic/ph pr-d/codeph ">TabAlignment.DECIMAL</codeph>. La valeur est une chaîne qui apparaît dans la ligne de texte.
	 
	 <p class="- topic/p ">La valeur par défaut est <codeph class="+ topic/ph pr-d/codeph ">""</codeph>.</p>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#TabAlignment/DECIMAL" class="- topic/link "><linktext class="- topic/linktext ">TabAlignment.DECIMAL</linktext></link></related-links></apiValue><apiValue id="flash.text.engine:TabStop:position:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">position</apiName><shortdesc class="- topic/shortdesc ">
	 Position du taquet de tabulation, en pixels, par rapport au début de la ligne de texte.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Si défini sur une valeur inférieure à 0.0.
   	  
   	  </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Position du taquet de tabulation, en pixels, par rapport au début de la ligne de texte.
	 
	 <p class="- topic/p ">La valeur par défaut est 0.0.</p>
	 
	 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.text.engine:FontLookup" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">FontLookup</apiName><shortdesc class="- topic/shortdesc ">
La classe FontLookup est une énumération de valeurs constantes utilisées avec FontDescription.fontLookup.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
La classe FontLookup est une énumération de valeurs constantes utilisées avec <codeph class="+ topic/ph pr-d/codeph ">FontDescription.fontLookup</codeph>. 

</apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#FontDescription/fontLookup" class="- topic/link "><linktext class="- topic/linktext ">FontDescription.fontLookup</linktext></link></related-links><apiValue id="flash.text.engine:FontLookup:DEVICE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">DEVICE</apiName><shortdesc class="- topic/shortdesc "> 
	Utilisé pour indiquer une recherche de police de périphérique.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">device</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	Utilisé pour indiquer une recherche de police de périphérique. Le moteur d’exécution de Flash utilise les polices installées sur le système qui exécute l’application.
	
	<p class="- topic/p ">L’utilisation de polices de périphérique réduit la taille des fichiers d’animation, car les données relatives à la police ne figurent pas dans le fichier.</p>
	
	<p class="- topic/p ">Le texte rendu avec des polices de périphérique ne s’affiche pas toujours de la même façon sur les différents systèmes et les différentes plates-formes, car le moteur d’exécution de Flash utilise les polices installées sur le système.</p>
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.text.engine:FontLookup:EMBEDDED_CFF" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">EMBEDDED_CFF</apiName><shortdesc class="- topic/shortdesc "> 
	Indique une recherche de police CFF (Compact Font Format) incorporée.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">embeddedCFF</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	Indique une recherche de police CFF (Compact Font Format) incorporée. Le moteur d’exécution de Flash utilise des polices vectorielles incorporées dans l’application publiée.
	
	<p class="- topic/p ">Le texte rendu avec des polices incorporées est toujours affiché dans la police choisie, que cette police soit ou non installée sur le système de lecture.</p>
	
	<p class="- topic/p ">L’un des principaux désavantages des polices incorporées est qu’elles augmentent la taille dans l’application.</p>
	
	</apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.text.engine:DigitCase" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">DigitCase</apiName><shortdesc class="- topic/shortdesc ">
La classe DigitCase est une énumération de valeurs constantes utilisées pour définir la propriété digitCase de la classe ElementFormat.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
La classe DigitCase est une énumération de valeurs constantes utilisées pour définir la propriété <codeph class="+ topic/ph pr-d/codeph ">digitCase</codeph> de la classe ElementFormat. 


</apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#ElementFormat/digitCase" class="- topic/link "><linktext class="- topic/linktext ">flash.text.engine.ElementFormat.digitCase</linktext></link></related-links><apiValue id="flash.text.engine:DigitCase:DEFAULT" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">DEFAULT</apiName><shortdesc class="- topic/shortdesc "> 
	Permet de spécifier la casse des chiffres par défaut.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">default</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	Permet de spécifier la casse des chiffres par défaut. Les résultats dépendent de la police ; les caractères utilisent les paramètres spécifiés par le concepteur de polices sans qu’aucune fonction ne soit appliquée. 
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.text.engine:DigitCase:LINING" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">LINING</apiName><shortdesc class="- topic/shortdesc "> 
	Permet de spécifier la casse des chiffres des lignes par défaut.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">lining</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	Permet de spécifier la casse des chiffres des lignes par défaut.
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.text.engine:DigitCase:OLD_STYLE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">OLD_STYLE</apiName><shortdesc class="- topic/shortdesc "> 
	Permet de spécifier l’ancienne casse des chiffres du style.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">oldStyle</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	Permet de spécifier l’ancienne casse des chiffres du style.
	
	</apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.text.engine:TypographicCase" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">TypographicCase</apiName><shortdesc class="- topic/shortdesc ">
La classe TypographicCase est une énumération de valeurs constantes utilisées pour définir la propriété typographicCase de la classe ElementFormat.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
La classe TypographicCase est une énumération de valeurs constantes utilisées pour définir la propriété <codeph class="+ topic/ph pr-d/codeph ">typographicCase</codeph> de la classe ElementFormat. 


</apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#ElementFormat/typographicCase" class="- topic/link "><linktext class="- topic/linktext ">ElementFormat.typographicCase</linktext></link></related-links><apiValue id="flash.text.engine:TypographicCase:CAPS_AND_SMALL_CAPS" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">CAPS_AND_SMALL_CAPS</apiName><shortdesc class="- topic/shortdesc "> 
	Spécifie que tous les caractères minuscules utilisent des glyphes de petites majuscules en sortie.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">capsAndSmallCaps</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	Spécifie que tous les caractères minuscules utilisent des glyphes de petites majuscules en sortie.
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.text.engine:TypographicCase:CAPS" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">CAPS</apiName><shortdesc class="- topic/shortdesc "> 
	Spécifie que l’espacement est ajusté pour les caractères majuscules en sortie.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">caps</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	Spécifie que l’espacement est ajusté pour les caractères majuscules en sortie.
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.text.engine:TypographicCase:DEFAULT" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">DEFAULT</apiName><shortdesc class="- topic/shortdesc "> 
	Spécifie la casse typographique par défaut.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">default</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	Spécifie la casse typographique par défaut. Les résultats dépendent de la police ; les caractères utilisent les paramètres spécifiés par le concepteur de polices sans qu’aucune fonction ne soit appliquée. 
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.text.engine:TypographicCase:LOWERCASE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">LOWERCASE</apiName><shortdesc class="- topic/shortdesc "> 
	Spécifie que tous les caractères utilisent des glyphes minuscules en sortie.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">lowercase</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	Spécifie que tous les caractères utilisent des glyphes minuscules en sortie.
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.text.engine:TypographicCase:SMALL_CAPS" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">SMALL_CAPS</apiName><shortdesc class="- topic/shortdesc "> 
	Spécifie que les caractères majuscules utilisent des glyphes de petites majuscules en sortie.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">smallCaps</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	Spécifie que les caractères majuscules utilisent des glyphes de petites majuscules en sortie.
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.text.engine:TypographicCase:TITLE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">TITLE</apiName><shortdesc class="- topic/shortdesc "> 
	Spécifie que les caractères majuscules utilisent des glyphes de titre en sortie.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">title</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	Spécifie que les caractères majuscules utilisent des glyphes de titre en sortie.
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.text.engine:TypographicCase:UPPERCASE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">UPPERCASE</apiName><shortdesc class="- topic/shortdesc "> 
	Spécifie que tous les caractères utilisent des glyphes majuscules en sortie.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">uppercase</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	Spécifie que tous les caractères utilisent des glyphes majuscules en sortie.
	
	</apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.text.engine:TextElement" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">TextElement</apiName><shortdesc class="- topic/shortdesc ">
 La classe TextElement représente une chaîne de texte mis en forme.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.text.engine:ContentElement</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 La classe TextElement représente une chaîne de texte mis en forme. Affectez un objet TextElement à la propriété <codeph class="+ topic/ph pr-d/codeph ">content</codeph> d’un objet TextBlock pour créer un bloc de texte. Affectez-le à un objet GroupElement pour le combiner avec d’autres éléments de texte et graphiques en une seule unité. Utilisez la classe ElementFormat pour mettre le texte en forme.
 
 </apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#ContentElement" class="- topic/link "><linktext class="- topic/linktext ">ContentElement</linktext></link><link href="flash.text.engine.xml#ElementFormat" class="- topic/link "><linktext class="- topic/linktext ">ElementFormat</linktext></link><link href="flash.text.engine.xml#TextBlock" class="- topic/link "><linktext class="- topic/linktext ">TextBlock</linktext></link></related-links><apiConstructor id="flash.text.engine:TextElement:TextElement" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">TextElement</apiName><shortdesc class="- topic/shortdesc ">
	 Crée une nouvelle occurrence de TextElement.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">text</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Texte de l’élément. La valeur par défaut est <codeph class="+ topic/ph pr-d/codeph ">null</codeph>.
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">elementFormat</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.text.engine:ElementFormat</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Format de l’élément pour le texte dans l’élément. La valeur par défaut est <codeph class="+ topic/ph pr-d/codeph ">null</codeph>.
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">eventMirror</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.events:EventDispatcher</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Objet <codeph class="+ topic/ph pr-d/codeph ">EventDispatcher</codeph> qui reçoit des copies de chaque événement déclenché vers les lignes de texte créées en fonction de cet élément de contenu. La valeur par défaut est <codeph class="+ topic/ph pr-d/codeph ">null</codeph>.
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">textRotation</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">rotate0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Rotation appliquée à l’élément en tant qu’unité. Utilisez les constantes <codeph class="+ topic/ph pr-d/codeph ">TextRotation</codeph> pour cette propriété. La valeur par défaut est <codeph class="+ topic/ph pr-d/codeph ">TextRotation.ROTATE_0</codeph>.
   	 </apiDesc></apiParam></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Crée une nouvelle occurrence de TextElement. 
	 
	 </apiDesc><example conref="examples\TextElementExample.as" class="- topic/example "> L’exemple suivant crée un objet TextElement à partir d’une chaîne de texte, le met en forme à l’aide d’une taille de police de 12 et la couleur rouge (0xCC0000) et l’affecte à la propriété <codeph class="+ topic/ph pr-d/codeph ">content</codeph> d’un TextBlock. Il appelle la fonction createLines() pour couper le bloc de texte en lignes de 150 pixels chacune.
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">

package {
    import flash.display.Sprite;
    import flash.text.engine.TextBlock;
    import flash.text.engine.TextElement;
    import flash.text.engine.TextLine;
    import flash.text.engine.ElementFormat;
    
    public class TextElementExample extends Sprite {
        
        public function TextElementExample():void {
            
            var str:String = "Lorem ipsum dolor sit amet, consectetur adipisicing elit, " +
            "sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut " +
            "enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut " +
            "aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit " +
            "in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur " +
            "sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt " +
            "mollit anim id est laborum.";
            
            var format:ElementFormat = new ElementFormat(null, 12, 0xCC0000);
            var textElement:TextElement = new TextElement(str, format); 
            var textBlock:TextBlock = new TextBlock();
            textBlock.content = textElement; 
            createLines(textBlock);
        }
        
        private function createLines(textBlock:TextBlock):void {
        
            var yPos = 20;
            var textLine:TextLine = textBlock.createTextLine (null, 150);
 
            while (textLine)
            {
                addChild(textLine);
                textLine.x = 15;
                yPos += textLine.textHeight+2;
                textLine.y = yPos;
                textLine = textBlock.createTextLine(textLine, 150);
            }        
        }
    }
}
</codeblock></example></apiConstructorDetail></apiConstructor><apiOperation id="flash.text.engine:TextElement:replaceText" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">replaceText</apiName><shortdesc class="- topic/shortdesc ">
	 Remplace la plage de caractères que les paramètres beginIndex et endIndex spécifient par le contenu du paramètre newText.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">La valeur <codeph class="+ topic/ph pr-d/codeph ">beginIndex</codeph> ou <codeph class="+ topic/ph pr-d/codeph ">endIndex</codeph> est hors limite.
     	 
	 
	 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">RangeError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">RangeError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">beginIndex</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Valeur d’index de base zéro pour la position de début de la plage de remplacement.
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">endIndex</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Valeur d’index de base zéro suivant la position de fin de la plage de remplacement.
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">newText</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Texte à utiliser pour remplacer la plage de caractères spécifiée.
	  
     	 </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Remplace la plage de caractères que les paramètres <codeph class="+ topic/ph pr-d/codeph ">beginIndex</codeph> et <codeph class="+ topic/ph pr-d/codeph ">endIndex</codeph> spécifient par le contenu du paramètre <codeph class="+ topic/ph pr-d/codeph ">newText</codeph>. Les valeurs <codeph class="+ topic/ph pr-d/codeph ">beginIndex</codeph> et <codeph class="+ topic/ph pr-d/codeph ">endIndex</codeph> font référence au contenu en cours de <codeph class="+ topic/ph pr-d/codeph ">text</codeph>.
	 <p class="- topic/p ">Pour supprimer le texte, transmettez <codeph class="+ topic/ph pr-d/codeph ">null</codeph> pour <codeph class="+ topic/ph pr-d/codeph ">newText</codeph>.</p>
	 <p class="- topic/p ">Pour insérer du texte, transmettez la même valeur pour <codeph class="+ topic/ph pr-d/codeph ">beginIndex</codeph> et <codeph class="+ topic/ph pr-d/codeph ">endIndex</codeph>. Le nouveau texte est inséré avant l’index spécifié.</p>
	 <p class="- topic/p ">Pour ajouter du texte, transmettez <codeph class="+ topic/ph pr-d/codeph ">text.length</codeph> pour <codeph class="+ topic/ph pr-d/codeph ">beginIndex</codeph> et <codeph class="+ topic/ph pr-d/codeph ">endIndex</codeph>.</p>
	 <p class="- topic/p ">Pour définir tout le texte, transmettez 0 pour <codeph class="+ topic/ph pr-d/codeph ">beginIndex</codeph> et <codeph class="+ topic/ph pr-d/codeph ">text.length</codeph> pour <codeph class="+ topic/ph pr-d/codeph ">endIndex</codeph>.</p>
	 
	 </apiDesc><example conref="examples\TextElement_replaceTextExample.as" class="- topic/example "> Cet exemple appelle plusieurs fois <codeph class="+ topic/ph pr-d/codeph ">replaceText()</codeph> pour effectuer les opérations suivantes :
     <ul class="- topic/ul "><li class="- topic/li "> Insérer une chaîne au début du texte</li><li class="- topic/li "> Ajouter une chaîne à la fin du texte</li><li class="- topic/li "> Insérer une chaîne au milieu du texte</li><li class="- topic/li "> Remplacer l’ensemble du texte par un nouveau texte</li></ul>
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">

package {
    import flash.display.Sprite;
    import flash.text.engine.FontDescription;
    import flash.text.engine.ElementFormat;
    import flash.text.engine.TextElement;
    import flash.text.engine.TextBlock;
    import flash.text.engine.TextLine;
    
    
    public class TextElement_replaceTextExample extends Sprite {
        public function TextElement_replaceTextExample():void {
            
            var str:String = "0123456";
            var fontDescription:FontDescription = new FontDescription("Arial");
            var format:ElementFormat = new ElementFormat(fontDescription);
            format.fontSize = 14;
            var textElement:TextElement = new TextElement(str, format);
            var textBlock:TextBlock = new TextBlock();
            textBlock.content = textElement;
            textElement.replaceText(0, 0, "abc");  
            createLine(textBlock, 20);           //"abc0123456"
            textElement.replaceText(10, 10, "abc");   
            createLine(textBlock, 40);            // "abc0123456abc"
            textElement.replaceText(5, 8, "abc");
            createLine(textBlock, 60);         // "abc01abc56abc"
            textElement.replaceText(0, 13, "abc");
            createLine(textBlock, 80);            // "abc"
            textElement.replaceText(0, 3, "That's all she wrote!");
            createLine(textBlock, 100);        // "That's all she wrote" */
        }
            
        private function createLine(textBlock:TextBlock, y:Number):void {
            var textLine:TextLine = textBlock.createTextLine(null, 150);
            textLine.x = 10;
            textLine.y = y;
            addChild(textLine);
        }
    }
}
</codeblock></example></apiOperationDetail></apiOperation><apiValue id="flash.text.engine:TextElement:text:set" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">text</apiName><shortdesc class="- topic/shortdesc ">
	 Reçoit le texte correspondant au contenu de l’élément.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Reçoit le texte correspondant au contenu de l’élément.
	 
	 <p class="- topic/p ">La valeur par défaut est <codeph class="+ topic/ph pr-d/codeph ">null</codeph>.</p>
	 
	 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.text.engine:TextLineValidity" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">TextLineValidity</apiName><shortdesc class="- topic/shortdesc ">
La classe TextLineValidity énumère les valeurs constantes utilisées lors de la définition de la propriété validity de la classe TextLine.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
La classe TextLineValidity énumère les valeurs constantes utilisées lors de la définition de la propriété <codeph class="+ topic/ph pr-d/codeph ">validity</codeph> de la classe TextLine. 

</apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#TextBlock/firstInvalidLine" class="- topic/link "><linktext class="- topic/linktext ">TextBlock.firstInvalidLine</linktext></link><link href="flash.text.engine.xml#TextLine/validity" class="- topic/link "><linktext class="- topic/linktext ">TextLine.validity</linktext></link></related-links><apiValue id="flash.text.engine:TextLineValidity:INVALID" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">INVALID</apiName><shortdesc class="- topic/shortdesc "> 
	Spécifie que la ligne n’est pas valide.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">invalid</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	Spécifie que la ligne n’est pas valide.
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.text.engine:TextLineValidity:POSSIBLY_INVALID" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">POSSIBLY_INVALID</apiName><shortdesc class="- topic/shortdesc "> 
	Spécifie que la ligne de texte n’est peut-être pas valide.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">possiblyInvalid</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	Spécifie que la ligne de texte n’est peut-être pas valide. Le moteur d’exécution de Flash utilise cette validité lorsqu’il refait les sauts de ligne d’un bloc de texte précédemment coupé dont le contenu n’a pas changé. Vous ne pouvez pas définir cette valeur.
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.text.engine:TextLineValidity:STATIC" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">STATIC</apiName><shortdesc class="- topic/shortdesc "> 
	Indique que la ligne est statique, et que la connexion entre la ligne et le bloc de texte a été rompue.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">static</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	Indique que la ligne est statique, et que la connexion entre la ligne et le bloc de texte a été rompue.
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.text.engine:TextLineValidity:VALID" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">VALID</apiName><shortdesc class="- topic/shortdesc "> 
	Spécifie que la ligne de texte est valide.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">valid</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	Spécifie que la ligne de texte est valide.
	
	</apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.text.engine:FontPosture" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">FontPosture</apiName><shortdesc class="- topic/shortdesc ">
La classe FontPosture est une énumération des valeurs constantes utilisées avec FontDescription.fontPosture pour définir le texte sur un style en italique ou sur un style normal.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
La classe FontPosture est une énumération des valeurs constantes utilisées avec <codeph class="+ topic/ph pr-d/codeph ">FontDescription.fontPosture</codeph> pour définir le texte sur un style en italique ou sur un style normal. 

</apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#FontDescription/fontPosture" class="- topic/link "><linktext class="- topic/linktext ">FontDescription.fontPosture</linktext></link></related-links><apiValue id="flash.text.engine:FontPosture:ITALIC" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">ITALIC</apiName><shortdesc class="- topic/shortdesc "> 
	Utilisé pour indiquer une police italique.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">italic</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	Utilisé pour indiquer une police italique.
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.text.engine:FontPosture:NORMAL" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">NORMAL</apiName><shortdesc class="- topic/shortdesc "> 
	Utilisé pour indiquer une police normale.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">normal</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	Utilisé pour indiquer une police normale.
	
	</apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.text.engine:JustificationStyle" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">JustificationStyle</apiName><shortdesc class="- topic/shortdesc ">
La classe JustificationStyle énumère les valeurs constantes utilisées lors de la définition de la propriété justificationStyle de la classe EastAsianJustifier.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
La classe JustificationStyle énumère les valeurs constantes utilisées lors de la définition de la propriété <codeph class="+ topic/ph pr-d/codeph ">justificationStyle</codeph> de la classe EastAsianJustifier. Ces constantes spécifient les options de gestion des caractères kinsoku, c’est-à-dire des caractères japonais qui ne peuvent pas s’afficher au début ou à la fin d’une ligne.

</apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#EastAsianJustifier/justificationStyle" class="- topic/link "><linktext class="- topic/linktext ">EastAsianJustifier.justificationStyle</linktext></link></related-links><apiValue id="flash.text.engine:JustificationStyle:PRIORITIZE_LEAST_ADJUSTMENT" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">PRIORITIZE_LEAST_ADJUSTMENT</apiName><shortdesc class="- topic/shortdesc "> 
	Base la justification sur le développement ou la compression de la ligne, selon le résultat se rapprochant le plus de la largeur désirée.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">prioritizeLeastAdjustment</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	Base la justification sur le développement ou la compression de la ligne, selon le résultat se rapprochant le plus de la largeur désirée.
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.text.engine:JustificationStyle:PUSH_IN_KINSOKU" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">PUSH_IN_KINSOKU</apiName><shortdesc class="- topic/shortdesc "> 
	Base la justification sur la compression kinsoku à la fin de la ligne, ou avec un développement s’il n’y a pas de kinsoku ou si cet espace n’est pas suffisant.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">pushInKinsoku</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	Base la justification sur la compression kinsoku à la fin de la ligne, ou avec un développement s’il n’y a pas de kinsoku ou si cet espace n’est pas suffisant.
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.text.engine:JustificationStyle:PUSH_OUT_ONLY" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">PUSH_OUT_ONLY</apiName><shortdesc class="- topic/shortdesc "> 
	Base la justification sur le développement de la ligne.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">pushOutOnly</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	Base la justification sur le développement de la ligne.
	
	</apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.text.engine:EastAsianJustifier" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">EastAsianJustifier</apiName><shortdesc class="- topic/shortdesc ">
 La classe EastAsianJustifier dispose de propriétés pour contrôler les options de justification des lignes de texte dont le contenu est essentiellement du texte d’Extrême-Orient.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.text.engine:TextJustifier</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 La classe EastAsianJustifier dispose de propriétés pour contrôler les options de justification des lignes de texte dont le contenu est essentiellement du texte d’Extrême-Orient. 
 
 <p class="- topic/p "> Utilisez le constructeur <codeph class="+ topic/ph pr-d/codeph ">new EastAsianJustifier()</codeph> pour créer un objet EastAsianJustifier avant de définir ses propriétés. La définition des propriétés d’un objet EastAsianJustifier après son application à un TextBlock n’invalide pas le TextBlock.</p>
 
 </apiDesc><example conref="examples\EastAsianJustifierExample.as" class="- topic/example "> Cet exemple affiche un bloc de texte japonais verticalement, en utilisant les propriétés EastAsianJustifier pour justifier le texte.
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
 
package {
    import flash.text.engine.TextBlock;
    import flash.text.engine.TextLine;
    import flash.text.engine.TextElement;
    import flash.text.engine.TextBaseline;
    import flash.text.engine.EastAsianJustifier;
    import flash.text.engine.LineJustification;
    import flash.text.engine.TextRotation;
    import flash.text.engine.FontDescription;
    import flash.text.engine.ElementFormat;
    import flash.display.Stage;
    import flash.display.Sprite;
    import flash.system.Capabilities;
    
    public class EastAsianJustifierExample extends Sprite {
        
        public function EastAsianJustifierExample():void {
            
            var Japanese_txt:String = String.fromCharCode(
                0x5185, 0x95A3, 0x5E9C, 0x304C, 0x300C, 0x653F, 0x5E9C, 0x30A4,
                0x30F3, 0x30BF, 0x30FC, 0x30CD, 0x30C3, 0x30C8, 0x30C6, 0x30EC, 
                0x30D3, 0x300D, 0x306E, 0x52D5, 0x753B, 0x914D, 0x4FE1, 0x5411, 
                0x3051, 0x306B, 0x30A2, 0x30C9, 0x30D3, 0x30B7, 0x30B9, 0x30C6, 
                0x30E0, 0x30BA, 0x793E, 0x306E
            ) +
            "FMS 2" +
            String.fromCharCode(0x3092, 0x63A1, 0x7528, 0x3059, 0x308B, 0x3068, 
                0x767a, 0x8868, 0x3057, 0x307e, 0x3057, 0x305F, 0x3002);
            
            var textBlock:TextBlock = new TextBlock();
            var font:FontDescription = new FontDescription();
            var format:ElementFormat = new ElementFormat();
            format.fontSize = 12;
            format.locale = "ja";
            format.color = 0xCC0000;
            textBlock.baselineZero = TextBaseline.IDEOGRAPHIC_CENTER;
            textBlock.textJustifier = new EastAsianJustifier("ja", LineJustification.ALL_INCLUDING_LAST);
            textBlock.lineRotation = TextRotation.ROTATE_90;
            var linePosition:Number = this.stage.stageWidth - 75;
            if (Capabilities.os.search("Mac OS") > -1) 
                // set fontName: Kozuka Mincho Pro R
                font.fontName = String.fromCharCode(0x5C0F, 0x585A, 0x660E, 0x671D) + " Pro R";                     
            else 
                font.fontName = "Kozuka Mincho Pro R";
            textBlock.content = new TextElement(Japanese_txt, format);
            var previousLine:TextLine = null;
                
            while (true) 
            {
                var textLine:TextLine = textBlock.createTextLine(previousLine, 320);
                if (textLine == null) 
                    break;
                textLine.y = 20;
                textLine.x = linePosition;
                linePosition -= 25;
                addChild(textLine);                
                previousLine = textLine;
            }
        }
    }
}


</codeblock></example></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#JustificationStyle" class="- topic/link "><linktext class="- topic/linktext ">JustificationStyle</linktext></link><link href="flash.text.engine.xml#LineJustification" class="- topic/link "><linktext class="- topic/linktext ">LineJustification</linktext></link><link href="flash.text.engine.xml#TextBlock/textJustifier" class="- topic/link "><linktext class="- topic/linktext ">TextBlock.textJustifier</linktext></link></related-links><apiConstructor id="flash.text.engine:EastAsianJustifier:EastAsianJustifier" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">EastAsianJustifier</apiName><shortdesc class="- topic/shortdesc ">
     Crée un objet EastAsianJustifier.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">La variable <codeph class="+ topic/ph pr-d/codeph ">locale</codeph> spécifiée est <codeph class="+ topic/ph pr-d/codeph ">null</codeph> ou trop courte pour représenter une variable locale valide.
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Le paramètre <codeph class="+ topic/ph pr-d/codeph ">lineJustification</codeph> spécifié n’appartient pas à <codeph class="+ topic/ph pr-d/codeph ">LineJustification</codeph>.
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Le paramètre <codeph class="+ topic/ph pr-d/codeph ">justificationStyle</codeph> spécifié n’appartient pas à <codeph class="+ topic/ph pr-d/codeph ">JustificationStyle</codeph>.
      
      </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">locale</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">ja</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Variable locale permettant de déterminer les règles de justification. La valeur par défaut est <codeph class="+ topic/ph pr-d/codeph ">"ja"</codeph>.
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">lineJustification</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">allButLast</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Type de justification des lignes du paragraphe. Utilisez les constantes <codeph class="+ topic/ph pr-d/codeph ">LineJustification</codeph> pour cette propriété. La valeur par défaut est <codeph class="+ topic/ph pr-d/codeph ">LineJustification.ALL_BUT_LAST</codeph>.
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">justificationStyle</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">pushInKinsoku</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Style de justification du texte dans un bloc de texte utilisant un justificateur d’Extrême-Orient. Utilisez les constantes <codeph class="+ topic/ph pr-d/codeph ">JustificationStyle</codeph> pour cette propriété. La valeur par défaut est <codeph class="+ topic/ph pr-d/codeph ">JustificationStyle.PUSH_IN_KINSOKU</codeph>.
     </apiDesc></apiParam></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Crée un objet EastAsianJustifier.
     
	 </apiDesc></apiConstructorDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#JustificationStyle" class="- topic/link "><linktext class="- topic/linktext ">JustificationStyle</linktext></link><link href="flash.text.engine.xml#LineJustification" class="- topic/link "><linktext class="- topic/linktext ">LineJustification</linktext></link></related-links></apiConstructor><apiOperation id="flash.text.engine:EastAsianJustifier:clone" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">clone</apiName><shortdesc class="- topic/shortdesc ">
	 Crée une copie clonée de l’objet EastAsianJustifier.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><internal>In the Flash Player 10 release, this method is for internal use. In future releases,
	 users will be able to subclass this class and will then need to use this method. This class is 
	 currently stored as a live reference, but there is no way to track when its properties change.  
	 This means that when changes are made, text blocks are not invalidated, which in the current 
	 implementation can lead to player crashes.  Even from the API perspective its wrong, as the affected 
	 text lines should be marked INVALID when format changes are made, but they�re not. The solution is 
	 to use a copy-on-set model.  When the object is passed in, the player copies it, so later changes to 
	 the object that was passed in have no effect. The setter makes an internal copy of the array; the 
	 getter returns a copy of the internal copy. Operations like 
         myBlock.textJustifier.justificationStyle = JustificationStyle.PUSH_IN_KINSOKU will have no effect. 
         Users who subclass this class in the future will need to use the clone() method to 
	 implement this technique of 'locking' the format once it has been set.
	 
	 </internal></asCustoms></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Une copie de l’objet <codeph class="+ topic/ph pr-d/codeph ">EastAsianJustifier</codeph>.
	  
	  </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.text.engine:TextJustifier</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Crée une copie clonée de l’objet EastAsianJustifier.
	 
	 </apiDesc></apiOperationDetail></apiOperation><apiValue id="flash.text.engine:EastAsianJustifier:justificationStyle:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">justificationStyle</apiName><shortdesc class="- topic/shortdesc ">
     Spécifie le style de justification du texte dans un bloc de texte.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Spécifie le style de justification du texte dans un bloc de texte.
     
     <p class="- topic/p ">La valeur par défaut est <codeph class="+ topic/ph pr-d/codeph ">JustificationStyle.PUSH_IN_KINSOKU</codeph>.</p>
     
	 <p class="- topic/p ">Utilisez l’une des constantes de la classe JustificationStyle pour définir la valeur de cette propriété. Le tableau suivant présente les valeurs possibles :</p>
	 
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Valeur de chaîne</entry><entry class="- topic/entry ">Description</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">JustificationStyle.PUSH_IN_KINSOKU</codeph></entry><entry class="- topic/entry ">Spécifie la justification vers l’avant.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">JustificationStyle.PUSH_OUT_ONLY</codeph></entry><entry class="- topic/entry ">Spécifie la justification vers l’arrière.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">JustificationStyle.PRIORITIZE_LEAST_ADJUSTMENT</codeph></entry><entry class="- topic/entry ">Spécifie la justification là où le plus petit ajustement est prioritaire.</entry></row></tbody></tgroup></adobetable>
	 
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#JustificationStyle" class="- topic/link "><linktext class="- topic/linktext ">JustificationStyle</linktext></link></related-links></apiValue></apiClassifier><apiClassifier languages="" id="flash.text.engine:RenderingMode" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">RenderingMode</apiName><shortdesc class="- topic/shortdesc ">
La classe RenderingMode fournit les valeurs du mode de rendu dans la classe FontDescription.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
La classe RenderingMode fournit les valeurs du mode de rendu dans la classe FontDescription.
</apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#FontDescription" class="- topic/link "><linktext class="- topic/linktext ">FontDescription</linktext></link></related-links><apiValue id="flash.text.engine:RenderingMode:CFF" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">CFF</apiName><shortdesc class="- topic/shortdesc ">
	Définit le mode de rendu sur CFF (Compact Font Format).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">cff</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Définit le mode de rendu sur CFF (Compact Font Format). Le rendu CFF améliore la lisibilité d’un texte à l’écran. Ce paramètre est recommandé pour les applications qui comportent beaucoup de petits textes. Cette constante s’applique à la propriété <codeph class="+ topic/ph pr-d/codeph ">renderingMode</codeph> de la classe FontDescription. Utilisez la syntaxe <codeph class="+ topic/ph pr-d/codeph ">RenderingMode.CFF</codeph>.
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#FontDescription/renderingMode" class="- topic/link "><linktext class="- topic/linktext ">flash.text.engine.FontDescription.renderingMode</linktext></link></related-links></apiValue><apiValue id="flash.text.engine:RenderingMode:NORMAL" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">NORMAL</apiName><shortdesc class="- topic/shortdesc ">
	Définit le mode rendu sur celui qui est appliqué par Flash Player 7 et les versions antérieures.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">normal</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Définit le mode rendu sur celui qui est appliqué par Flash Player 7 et les versions antérieures. Ce paramètre est conseillé pour le texte animé. Cette constante s’applique à la propriété <codeph class="+ topic/ph pr-d/codeph ">renderingMode</codeph> de la classe FontDescription. Utilisez la syntaxe <codeph class="+ topic/ph pr-d/codeph ">RenderingMode.NORMAL</codeph>.
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#FontDescription/renderingMode" class="- topic/link "><linktext class="- topic/linktext ">flash.text.engine.FontDescription.renderingMode</linktext></link></related-links></apiValue></apiClassifier><apiClassifier languages="" id="flash.text.engine:FontMetrics" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">FontMetrics</apiName><shortdesc class="- topic/shortdesc ">
 La classe FontMetrics contient les informations de mesure et de décalage concernant une police.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 La classe FontMetrics contient les informations de mesure et de décalage concernant une police. La méthode <codeph class="+ topic/ph pr-d/codeph ">ElementFormat.getFontMetrics()</codeph> renvoie les objets de cette classe.
 
 </apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#ElementFormat/getFontMetrics()" class="- topic/link "><linktext class="- topic/linktext ">ElementFormat.getFontMetrics()</linktext></link></related-links><apiConstructor id="flash.text.engine:FontMetrics:FontMetrics" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">FontMetrics</apiName><shortdesc class="- topic/shortdesc ">
	 Crée un objet FontMetrics.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">emBox</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.geom:Rectangle</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Valeur emBox de la police en pixels.
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">strikethroughOffset</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Décalage d’un barré, en pixels.
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">strikethroughThickness</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Epaisseur d’un barré, en pixels.
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">underlineOffset</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Décalage d’un soulignement, en pixels.
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">underlineThickness</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Epaisseur d’un soulignement, en pixels.
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">subscriptOffset</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Décalage d’un index, en pixels.
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">subscriptScale</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Echelle à appliquer à la taille d’un index, en points.
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">superscriptOffset</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Décalage d’un exposant, en pixels.
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">superscriptScale</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Echelle à appliquer à la taille d’un exposant, en points.
	 
	 </apiDesc></apiParam></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Crée un objet FontMetrics. L’objet FontMetrics contient des informations sur les mesures d’une police dans un format d’élément. La méthode <codeph class="+ topic/ph pr-d/codeph ">flash.text.engine.ElementFormat.getFontMetrics()</codeph> renvoie les objets de cette classe.
	 
	 </apiDesc></apiConstructorDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#ElementFormat/getFontMetrics()" class="- topic/link "><linktext class="- topic/linktext ">ElementFormat.getFontMetrics()</linktext></link></related-links></apiConstructor><apiValue id="flash.text.engine:FontMetrics:emBox" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">emBox</apiName><shortdesc class="- topic/shortdesc ">
	 La valeur emBox représente l’espace de conception de la police et est utilisée pour placer des glyphes chinoises, coréennes ou japonaises par rapport à la ligne de base des caractères romains.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.geom:Rectangle</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 La valeur emBox représente l’espace de conception de la police et est utilisée pour placer des glyphes chinoises, coréennes ou japonaises par rapport à la ligne de base des caractères romains. Généralement un carré, dont les dimensions correspondent à la taille de la police, en points. L’origine (coordonnée 0,0) de la valeur emBox est définie sur le bord gauche et sur la ligne de base des caractères romains du rectangle. Par exemple, pour une police de 10 points, la valeur emBox peut être un rectangle [G,H,D,B] de [0, -8.8, 10, 1.2].
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.text.engine:FontMetrics:strikethroughOffset" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">strikethroughOffset</apiName><shortdesc class="- topic/shortdesc ">
	 La valeur strikethroughOffset est un décalage vertical suggéré à partir de la ligne de base des caractères romains pour un barré.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 La valeur strikethroughOffset est un décalage vertical suggéré à partir de la ligne de base des caractères romains pour un barré.
	 
	 <p class="- topic/p ">Notez que, selon la rotation de la ligne, cette valeur est ajoutée ou soustraite à la position de la ligne pour trouver la position du barré. Dans une ligne avec <codeph class="+ topic/ph pr-d/codeph ">TextRotation.ROTATE_0</codeph>, <codeph class="+ topic/ph pr-d/codeph ">strikethrough.y = line.y + strikethroughOffset</codeph>. Dans une ligne avec <codeph class="+ topic/ph pr-d/codeph ">TextRotation.ROTATE_90</codeph>, <codeph class="+ topic/ph pr-d/codeph ">strikethrough.x = line.x - strikethroughOffset</codeph>.</p>
	 
	 <p class="- topic/p ">Lors de l’application de décorations, telles que des styles barrés, à un objet <codeph class="+ topic/ph pr-d/codeph ">TextLine</codeph>, la procédure conseillée consiste à spécifier un <codeph class="+ topic/ph pr-d/codeph ">eventMirror</codeph> sur le <codeph class="+ topic/ph pr-d/codeph ">ContentElement</codeph> devant recevoir la décoration. En réponse à l’événement <codeph class="+ topic/ph pr-d/codeph ">Event.ADDED</codeph>, les <codeph class="+ topic/ph pr-d/codeph ">limites</codeph> de la <codeph class="+ topic/ph pr-d/codeph ">TextLineMirrorRegion</codeph> peuvent être utilisées en combinaison avec <codeph class="+ topic/ph pr-d/codeph ">strikethroughOffset</codeph> pour placer le barré.</p>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#ContentElement/eventMirror" class="- topic/link "><linktext class="- topic/linktext ">ContentElement.eventMirror</linktext></link><link href="flash.text.engine.xml#TextLineMirrorRegion" class="- topic/link "><linktext class="- topic/linktext ">TextLineMirrorRegion</linktext></link></related-links></apiValue><apiValue id="flash.text.engine:FontMetrics:strikethroughThickness" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">strikethroughThickness</apiName><shortdesc class="- topic/shortdesc ">
	 La valeur strikethroughThickness est l’épaisseur suggérée d’un barré.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 La valeur strikethroughThickness est l’épaisseur suggérée d’un barré.
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.text.engine:FontMetrics:subscriptOffset" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">subscriptOffset</apiName><shortdesc class="- topic/shortdesc ">
	 La valeur subscriptOffset est le décalage vertical suggéré à partir de la ligne de base des caractères romains pour un index.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 La valeur subscriptOffset est le décalage vertical suggéré à partir de la ligne de base des caractères romains pour un index.
	 
	 <p class="- topic/p ">La valeur subscriptOffset est utilisée avec <codeph class="+ topic/ph pr-d/codeph ">ElementFormat.baselineShift</codeph> pour positionner l’index.</p>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#ElementFormat/baselineShift" class="- topic/link "><linktext class="- topic/linktext ">ElementFormat.baselineShift</linktext></link></related-links></apiValue><apiValue id="flash.text.engine:FontMetrics:subscriptScale" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">subscriptScale</apiName><shortdesc class="- topic/shortdesc ">
	 La valeur subscriptScale est le facteur de mise à l’échelle suggéré à appliquer à la taille d’un index en points.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 La valeur subscriptScale est le facteur de mise à l’échelle suggéré à appliquer à la taille d’un index en points. Un facteur d’échelle de 1.0 signifie qu’il n’y a pas de mise à l’échelle.
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.text.engine:FontMetrics:superscriptOffset" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">superscriptOffset</apiName><shortdesc class="- topic/shortdesc ">
	 La valeur superscriptOffset est le décalage vertical suggéré à partir de la ligne de base des caractères romains pour un exposant.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 La valeur superscriptOffset est le décalage vertical suggéré à partir de la ligne de base des caractères romains pour un exposant.
	 
	 <p class="- topic/p ">La valeur superscriptOffset est utilisée avec <codeph class="+ topic/ph pr-d/codeph ">ElementFormat.baselineShift</codeph> pour positionner l’exposant.</p>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#ElementFormat/baselineShift" class="- topic/link "><linktext class="- topic/linktext ">ElementFormat.baselineShift</linktext></link></related-links></apiValue><apiValue id="flash.text.engine:FontMetrics:superscriptScale" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">superscriptScale</apiName><shortdesc class="- topic/shortdesc ">
	 La valeur superscriptScale est le facteur de mise à l’échelle suggéré à appliquer à la taille d’un exposant en points.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 La valeur superscriptScale est le facteur de mise à l’échelle suggéré à appliquer à la taille d’un exposant en points. Un facteur d’échelle de 1.0 signifie qu’il n’y a pas de mise à l’échelle.
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.text.engine:FontMetrics:underlineOffset" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">underlineOffset</apiName><shortdesc class="- topic/shortdesc ">
	 La valeur underlineOffset est le décalage vertical suggéré à partir de la ligne de base des caractères romains d’un soulignement.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 La valeur underlineOffset est le décalage vertical suggéré à partir de la ligne de base des caractères romains d’un soulignement.
	 
	 <p class="- topic/p ">Notez que, selon la rotation de la ligne, cette valeur est ajoutée ou soustraite à la position de la ligne pour trouver la position du soulignement. Dans une ligne avec <codeph class="+ topic/ph pr-d/codeph ">TextRotation.ROTATE_0</codeph>, <codeph class="+ topic/ph pr-d/codeph ">underline.y = line.y + underlineOffset</codeph>. Dans une ligne avec <codeph class="+ topic/ph pr-d/codeph ">TextRotation.ROTATE_90</codeph>, <codeph class="+ topic/ph pr-d/codeph ">underline.x = line.x - underlineOffset</codeph>.</p>
	 
	 <p class="- topic/p ">Lors de l’application de décorations, telles que des soulignements, à un objet <codeph class="+ topic/ph pr-d/codeph ">TextLine</codeph>, la procédure conseillée consiste à spécifier un <codeph class="+ topic/ph pr-d/codeph ">eventMirror</codeph> sur le <codeph class="+ topic/ph pr-d/codeph ">ContentElement</codeph> devant recevoir la décoration. En réponse à l’événement <codeph class="+ topic/ph pr-d/codeph ">Event.ADDED</codeph>, les <codeph class="+ topic/ph pr-d/codeph ">limites</codeph> de la <codeph class="+ topic/ph pr-d/codeph ">TextLineMirrorRegion</codeph> peuvent être utilisées en combinaison avec <codeph class="+ topic/ph pr-d/codeph ">underlineOffset</codeph> pour placer le soulignement.</p>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#ContentElement/eventMirror" class="- topic/link "><linktext class="- topic/linktext ">ContentElement.eventMirror</linktext></link><link href="flash.events.xml#Event" class="- topic/link "><linktext class="- topic/linktext ">Evénement</linktext></link><link href="flash.text.engine.xml#TextLineMirrorRegion" class="- topic/link "><linktext class="- topic/linktext ">TextLineMirrorRegion</linktext></link><link href="flash.text.engine.xml#TextRotation" class="- topic/link "><linktext class="- topic/linktext ">TextRotation</linktext></link></related-links></apiValue><apiValue id="flash.text.engine:FontMetrics:underlineThickness" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">underlineThickness</apiName><shortdesc class="- topic/shortdesc ">
	 La valeur underlineThickness est l’épaisseur suggérée d’un soulignement.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 La valeur underlineThickness est l’épaisseur suggérée d’un soulignement.
	 
	 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.text.engine:ElementFormat" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">ElementFormat</apiName><shortdesc class="- topic/shortdesc ">
 La classe ElementFormat représente les informations de mise en forme pouvant être appliquées à un ContentElement.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 La classe ElementFormat représente les informations de formatage pouvant être appliquées à un objet ContentElement. Utilisez la classe ElementFormat pour créer une mise en forme de texte spécifique pour les différentes sous-classes de ContentElement. Les propriétés de la classe ElementFormat s’appliquent aux polices de périphérique et intégrées. 
 
 <p class="- topic/p ">Un objet ElementFormat appliqué à un ContentElement dans un TextBlock n’invalide pas le TextBlock. Après avoir appliqué un objet ElementFormat à un ContentElement, sa propriété <codeph class="+ topic/ph pr-d/codeph ">locked</codeph> est définie sur <codeph class="+ topic/ph pr-d/codeph ">true</codeph>. Les propriétés d’un objet ElementFormat bloqué ne peuvent pas être modifiées. Utilisez plutôt la méthode <codeph class="+ topic/ph pr-d/codeph ">clone()</codeph> pour créer une copie non verrouillée de l’objet, qu’il est possible de modifier et d’affecter au ContentElement.</p>
 
 </apiDesc><example conref="examples\ElementFormatExample.as" class="- topic/example "> <p class="- topic/p ">Cet exemple crée deux objets <codeph class="+ topic/ph pr-d/codeph ">ElementFormat</codeph> et définit plusieurs de leurs propriétés. Il affecte ensuite le nouvel ElementFormats à un objet <codeph class="+ topic/ph pr-d/codeph ">TextElement</codeph>, qui a été affecté en tant que contenu d’un <codeph class="+ topic/ph pr-d/codeph ">TextBlock</codeph>. Notez que la modification du <codeph class="+ topic/ph pr-d/codeph ">ElementFormat</codeph> d’un <codeph class="+ topic/ph pr-d/codeph ">TextElement</codeph> n’affecte pas les TextLines créés précédemment par le TextBlock parent.</p>
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">

package {

    import flash.display.Sprite;
    import flash.text.engine.*;

    
    public class ElementFormatExample extends Sprite {
        
        public function ElementFormatExample():void {
            var fd:FontDescription = new FontDescription();
            fd.fontName = "Garamond";
            fd.fontWeight = flash.text.engine.FontWeight.BOLD;

            var ef1:ElementFormat = new ElementFormat(fd);
            ef1.fontSize = 30;
            ef1.color = 0xFF0000;
            ef1.alpha = 100;
            ef1.kerning = flash.text.engine.Kerning.ON;
            ef1.trackingRight = 2;
            ef1.typographicCase = flash.text.engine.TypographicCase.UPPERCASE;
            ef1.alignmentBaseline = flash.text.engine.TextBaseline.DESCENT;
            ef1.ligatureLevel = flash.text.engine.LigatureLevel.EXOTIC;
            
            var ef2:ElementFormat = new ElementFormat(fd);
            ef2.fontSize = 30;
            ef2.color = 0xFF0000;
            ef2.alpha = 0.3;
            ef2.kerning = flash.text.engine.Kerning.OFF;
            ef2.typographicCase = flash.text.engine.TypographicCase.LOWERCASE;
            ef2.digitCase = flash.text.engine.DigitCase.OLD_STYLE;
            ef2.textRotation = flash.text.engine.TextRotation.ROTATE_180;
            
            var str:String = "This is flash text 0123456789";
            var tb:TextBlock = new TextBlock();
            var te1:TextElement = new TextElement(str, ef1);
            tb.content = te1;
            var line1:TextLine = tb.createTextLine(null, 600);
            addChild(line1);
            line1.x = 15;
            line1.y = 30;

            tb.content.elementFormat = ef2;
            var line2:TextLine = tb.createTextLine(null, 600);
            addChild(line2);
            line2.x = 15;
            line2.y = 60;
            
        }
    }    
}
</codeblock></example></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#ContentElement/elementFormat" class="- topic/link "><linktext class="- topic/linktext ">ContentElement.elementFormat</linktext></link></related-links><apiConstructor id="flash.text.engine:ElementFormat:ElementFormat" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">ElementFormat</apiName><shortdesc class="- topic/shortdesc ">
 	 Crée un objet ElementFormat.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Le paramètre <codeph class="+ topic/ph pr-d/codeph ">fontSize</codeph> spécifié est inférieur à 0.
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Le paramètre <codeph class="+ topic/ph pr-d/codeph ">textRotation</codeph> spécifié n’appartient pas à <codeph class="+ topic/ph pr-d/codeph ">TextRotation</codeph>.
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Le paramètre <codeph class="+ topic/ph pr-d/codeph ">dominantBaseline</codeph> spécifié n’appartient pas à<codeph class="+ topic/ph pr-d/codeph ">TextBaseline</codeph>.
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Le paramètre <codeph class="+ topic/ph pr-d/codeph ">alignmentBaseline</codeph> spécifié n’appartient pas à<codeph class="+ topic/ph pr-d/codeph ">TextBaseline</codeph>.
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Le paramètre <codeph class="+ topic/ph pr-d/codeph ">kerning</codeph> spécifié n’appartient pas à <codeph class="+ topic/ph pr-d/codeph ">Kerning</codeph>.
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Le paramètre <codeph class="+ topic/ph pr-d/codeph ">breakOpportunity</codeph> spécifié n’appartient pas à <codeph class="+ topic/ph pr-d/codeph ">BreakOpportunity</codeph>.
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Le paramètre <codeph class="+ topic/ph pr-d/codeph ">digitCase</codeph> spécifié n’appartient pas à <codeph class="+ topic/ph pr-d/codeph ">DigitCase</codeph>.
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Le paramètre <codeph class="+ topic/ph pr-d/codeph ">digitWidth</codeph> spécifié n’appartient pas à <codeph class="+ topic/ph pr-d/codeph ">DigitWidth</codeph>.
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Le paramètre <codeph class="+ topic/ph pr-d/codeph ">ligatureLevel</codeph> spécifié n’appartient pas à <codeph class="+ topic/ph pr-d/codeph ">LigatureLevel</codeph>.
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Le paramètre <codeph class="+ topic/ph pr-d/codeph ">typographicCase</codeph> spécifié n’appartient pas à <codeph class="+ topic/ph pr-d/codeph ">TypographicCase</codeph>.
      
      </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">fontDescription</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.text.engine:FontDescription</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Objet FontDescription identifiant la police utilisée avec cette mise en forme d’élément. La valeur par défaut est <codeph class="+ topic/ph pr-d/codeph ">null</codeph>. Lorsque aucune description de police n’est fournie, une description de police par défaut est construite.
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">fontSize</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">12.0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">La taille du texte, en pixels.
 	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">color</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">uint</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0x000000</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Couleur du texte. Nombre hexadécimal contenant trois composants RVB 8 bits ; par exemple, 0xFF0000 correspond au rouge et 0x00FF00 au vert.
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">alpha</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">1.0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Propriété <codeph class="+ topic/ph pr-d/codeph ">alpha</codeph> appliquée à tous les atomes de ligne sur la base de la mise en forme des éléments.
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">textRotation</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">auto</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">rotation appliquée aux glyphes individuelles. Utilisez les constantes TextRotation pour cette propriété.
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">dominantBaseline</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">roman</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ligne de base à laquelle les glyphes du texte s’accrochent. Utilisez les constantes TextBaseline pour cette propriété.
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">alignmentBaseline</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">useDominantBaseline</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ligne de base sur la ligne conteneur à laquelle la ligne de base dominante s’accroche. Utilisez les constantes TextBaseline pour cette propriété.
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">baselineShift</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0.0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Décalage de la ligne de base pour le texte, en pixels em.
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">kerning</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">on</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Crénage utilisé pour ce texte. Utilisez les constantes définies dans la classe Kerning.
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">trackingRight</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0.0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Interlettrage ou crénage manuel à appliquer à droite de chaque glyphe, en pixels.
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">trackingLeft</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0.0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Interlettrage ou crénage manuel à appliquer à gauche de chaque glyphe, en pixels.
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">locale</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">en</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Variable locale du texte.
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">breakOpportunity</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">auto</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Opportunité de saut de ligne appliquée à ce texte. Utilisez les constantes BreakOpportunity pour cette propriété.
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">digitCase</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">default</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Casse numérique utilisée pour ce texte. Utilisez les constantes DigitCase pour cette propriété.
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">digitWidth</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">default</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Largeur de chiffres utilisée pour ce texte. Utilisez les constantes DigitWidth pour cette propriété.
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ligatureLevel</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">common</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Niveau de ligature utilisé pour ce texte. Utilisez les constantes LigatureLevel pour cette propriété.
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">typographicCase</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">default</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Casse typographique utilisée pour ce texte. Utilisez les constantes TypographicCase pour cette propriété.
     
     </apiDesc></apiParam></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 	 Crée un objet ElementFormat.
	 
     </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="flash.text.engine:ElementFormat:clone" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">clone</apiName><shortdesc class="- topic/shortdesc ">
	 Crée une copie non verrouillée et clonée de l’objet ElementFormat.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Une copie non verrouillée de l’objet <codeph class="+ topic/ph pr-d/codeph ">ElementFormat</codeph>.
	  
	  </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.text.engine:ElementFormat</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Crée une copie non verrouillée et clonée de l’objet ElementFormat.
	 
     </apiDesc><example conref="examples\ElementFormat_cloneExample.as" class="- topic/example "> <p class="- topic/p ">Cet exemple crée un objet <codeph class="+ topic/ph pr-d/codeph ">ElementFormat</codeph> et définit la propriété <codeph class="+ topic/ph pr-d/codeph ">FontSize</codeph>. Un nouvel objet <codeph class="+ topic/ph pr-d/codeph ">TextElement</codeph> est créé (et bloqué), à l’aide d’<codeph class="+ topic/ph pr-d/codeph ">ElementFormat</codeph> et <codeph class="+ topic/ph pr-d/codeph ">TextElement</codeph> est utilisé comme contenu pour un <codeph class="+ topic/ph pr-d/codeph ">TextBlock</codeph>. Une ligne de texte est créée à partir du <codeph class="+ topic/ph pr-d/codeph ">TextBlock</codeph>.</p>
 <p class="- topic/p ">Pour modifier l’objet <codeph class="+ topic/ph pr-d/codeph ">ElementFormat</codeph>, vous devez tout d’abord vérifier sa propriété <codeph class="+ topic/ph pr-d/codeph ">locked</codeph>. Si elle est définie sur true, utilisez la méthode <codeph class="+ topic/ph pr-d/codeph ">clone()</codeph> pour créer une copie non verrouillée de l’objet <codeph class="+ topic/ph pr-d/codeph ">ElementFormat</codeph>, modifiez ses propriétés, puis associez à nouveau le nouvel objet <codeph class="+ topic/ph pr-d/codeph ">ElementFormat</codeph> au <codeph class="+ topic/ph pr-d/codeph ">TextBlock</codeph>. Lorsque les lignes sont de nouveau scindées, les nouvelles récupèrent les nouveaux paramètres de police.</p>
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">

package {

    import flash.display.Sprite;
    import flash.text.engine.*;

    
    public class ElementFormat_cloneExample extends Sprite {
        private var ef1:ElementFormat;
        private var ef2:ElementFormat;
        
        public function ElementFormat_cloneExample():void {
            var fd:FontDescription = new FontDescription();
            fd.fontLookup = flash.text.engine.FontLookup.DEVICE;
            fd.fontName = "Palatino";

            var ef1:ElementFormat = new ElementFormat(fd);
            ef1.fontSize=20;
            
            var str:String = "This is flash text 0123456789";
            var tb:TextBlock = new TextBlock();
            var te1:TextElement = new TextElement(str, ef1);
            tb.content = te1;
            var line1:TextLine = tb.createTextLine(null, 600);
            addChild(line1);
            
            ef2 = (ef1.locked) ? ef1.clone() : ef1;    
            ef2.fontSize = 32;

            tb.content.elementFormat=ef2;
            var line2:TextLine = tb.createTextLine(null, 600);
            addChild(line2);
            
        }
    }    
}
</codeblock></example></apiOperationDetail></apiOperation><apiOperation id="flash.text.engine:ElementFormat:getFontMetrics" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">getFontMetrics</apiName><shortdesc class="- topic/shortdesc ">
	 Renvoie un objet FontMetrics avec des propriétés qui décrivent la valeur emBox, la position et l’épaisseur du barré et du soulignement pour la police spécifiée par fontDescription et fontSize.
	 
	 </shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Objet <codeph class="+ topic/ph pr-d/codeph ">FontMetrics</codeph> décrivant les propriétés de la police spécifiée par <codeph class="+ topic/ph pr-d/codeph ">fontDescription</codeph>.
	  
	  </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.text.engine:FontMetrics</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 <p class="- topic/p ">Renvoie un objet <codeph class="+ topic/ph pr-d/codeph ">FontMetrics</codeph> avec des propriétés qui décrivent la valeur emBox, la position et l’épaisseur du barré et du soulignement pour la police spécifiée par <codeph class="+ topic/ph pr-d/codeph ">fontDescription</codeph> et <codeph class="+ topic/ph pr-d/codeph ">fontSize</codeph>.</p>
	 
	 </apiDesc><example conref="examples\FontMetricsExample.as" class="- topic/example "> Cet exemple crée un objet <codeph class="+ topic/ph pr-d/codeph ">ElementFormat</codeph> avec un <codeph class="+ topic/ph pr-d/codeph ">FontDescription</codeph> affecté et utilise la méthode <codeph class="+ topic/ph pr-d/codeph ">getFontMetrics</codeph> pour afficher les mesures de la police choisie (24 points).
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">

package {

    import flash.display.Sprite;
    import flash.text.engine.*;

    
    public class FontMetricsExample extends Sprite {
        
        public function FontMetricsExample():void {
            var fd:FontDescription = new FontDescription();
            fd.fontName = "Garamond";
            fd.fontWeight = flash.text.engine.FontWeight.BOLD;

            var ef1:ElementFormat = new ElementFormat(fd);
            ef1.fontSize = 24;            
            var fm1:FontMetrics = ef1.getFontMetrics();

            trace(fm1.emBox);
            trace(fm1.strikethroughOffset);
            trace(fm1.strikethroughThickness);
            trace(fm1.subscriptScale);
            trace(fm1.subscriptOffset);
            trace(fm1.superscriptScale);
            trace(fm1.superscriptOffset);
            trace(fm1.underlineOffset);
            trace(fm1.underlineThickness);
            
            
        }
    }    
}
</codeblock></example></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#FontDescription" class="- topic/link "><linktext class="- topic/linktext ">FontDescription</linktext></link><link href="flash.text.engine.xml#FontMetrics" class="- topic/link "><linktext class="- topic/linktext ">FontMetrics</linktext></link></related-links></apiOperation><apiValue id="flash.text.engine:ElementFormat:alignmentBaseline:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">alignmentBaseline</apiName><shortdesc class="- topic/shortdesc ">
	 Spécifie le type de ligne de base dans l’élément contenant avec lequel sont alignées les lignes de base des éléments possédant ce format.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Si la propriété est définie sur une valeur n’appartenant pas à <codeph class="+ topic/ph pr-d/codeph ">TextBaseline</codeph>.
	 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Si elle est définie une fois l’objet ElementFormat bloqué (la propriété <codeph class="+ topic/ph pr-d/codeph ">locked</codeph> est définie sur <codeph class="+ topic/ph pr-d/codeph ">true</codeph>).
	  
	  </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IllegalOperationError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IllegalOperationError</apiOperationClassifier></apiException></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Spécifie le type de ligne de base dans l’élément contenant avec lequel sont alignées les lignes de base des éléments possédant ce format. Utilisez les constantes<codeph class="+ topic/ph pr-d/codeph ">TextBaseline</codeph> pour cette propriété.
	 
	 <p class="- topic/p ">Le plus grand élément vertical de la ligne détermine l’alignement des lignes de base, sauf si <codeph class="+ topic/ph pr-d/codeph ">TextBlock.baselineFontDescription</codeph> et <codeph class="+ topic/ph pr-d/codeph ">TextBlock.baselineFontSize</codeph> sont définis pour un autre comportement.</p>
	 
	 <p class="- topic/p ">La valeur par défaut est <codeph class="+ topic/ph pr-d/codeph ">TextBaseline.USE_DOMINANT_BASELINE</codeph>.</p>
	 
	 <p class="- topic/p ">Pour définir les valeurs pour cette propriété, utilisez les valeurs de chaîne suivantes :</p>
	 
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Valeur de chaîne</entry><entry class="- topic/entry ">Description</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">TextBaseline.ROMAN</codeph></entry><entry class="- topic/entry ">La <codeph class="+ topic/ph pr-d/codeph ">dominantBaseline</codeph> s’aligne sur la ligne de base des caractères romains de la ligne.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">TextBaseline.ASCENT</codeph></entry><entry class="- topic/entry ">La <codeph class="+ topic/ph pr-d/codeph ">dominantBaseline</codeph> s’aligne sur la ligne de base des caractères ascendants de la ligne.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">TextBaseline.DESCENT</codeph></entry><entry class="- topic/entry ">La <codeph class="+ topic/ph pr-d/codeph ">dominantBaseline</codeph> s’aligne sur la ligne de base des caractères descendants de la ligne.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">TextBaseline.IDEOGRAPHIC_TOP</codeph></entry><entry class="- topic/entry ">La <codeph class="+ topic/ph pr-d/codeph ">dominantBaseline</codeph> s’aligne sur la ligne de base du haut des caractères idéographiques de la ligne.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">TextBaseline.IDEOGRAPHIC_CENTER</codeph></entry><entry class="- topic/entry ">La <codeph class="+ topic/ph pr-d/codeph ">dominantBaseline</codeph> s’aligne sur la ligne de base du centre des caractères idéographiques de la ligne.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">TextBaseline.IDEOGRAPHIC_BOTTOM</codeph></entry><entry class="- topic/entry ">La <codeph class="+ topic/ph pr-d/codeph ">dominantBaseline</codeph> s’aligne sur la ligne de base du bas des caractères idéographiques de la ligne.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">TextBaseline.USE_DOMINANT_BASELINE</codeph></entry><entry class="- topic/entry ">La <codeph class="+ topic/ph pr-d/codeph ">dominantBaseline</codeph> s’aligne sur la même ligne de base de la ligne.</entry></row></tbody></tgroup></adobetable>
	 <p class="- topic/p "/>
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Sous-classe</entry><entry class="- topic/entry ">Effet de la définition des propriétés</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">GraphicElement</codeph></entry><entry class="- topic/entry ">Définit la ligne de base de l’alignement de la ligne sur celle sur laquelle s’aligne la <codeph class="+ topic/ph pr-d/codeph ">dominantBaseline</codeph> de l’élément graphique.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">GroupElement</codeph></entry><entry class="- topic/entry ">N’a aucun effet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">TextElement</codeph></entry><entry class="- topic/entry ">Définit la ligne de base de l’alignement de la ligne sur celle sur laquelle s’aligne la <codeph class="+ topic/ph pr-d/codeph ">dominantBaseline</codeph> de l’élément de texte.</entry></row></tbody></tgroup></adobetable>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#TextBaseline" class="- topic/link "><linktext class="- topic/linktext ">TextBaseline</linktext></link><link href="flash.text.engine.xml#ElementFormat/dominantBaseline" class="- topic/link "><linktext class="- topic/linktext ">ElementFormat.dominantBaseline</linktext></link></related-links></apiValue><apiValue id="flash.text.engine:ElementFormat:alpha:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">alpha</apiName><shortdesc class="- topic/shortdesc ">
	 Spécifie la transparence des éléments de ligne affectés par cet objet.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Si elle est définie une fois l’objet ElementFormat bloqué (la propriété <codeph class="+ topic/ph pr-d/codeph ">locked</codeph> est définie sur <codeph class="+ topic/ph pr-d/codeph ">true</codeph>).
	  
	  </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IllegalOperationError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IllegalOperationError</apiOperationClassifier></apiException></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Spécifie la transparence des éléments de ligne affectés par cet objet. Les valeurs disponibles sont comprises entre 0 (entièrement transparent) et 1 (entièrement opaque). Les objets d’affichage où <codeph class="+ topic/ph pr-d/codeph ">alpha</codeph> est défini sur 0 sont actifs, même s’ils sont invisibles.
	 
	 <p class="- topic/p ">La valeur par défaut est <codeph class="+ topic/ph pr-d/codeph ">1</codeph>.</p>
	 
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Sous-classe</entry><entry class="- topic/entry ">Effet de la définition des propriétés</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">GraphicElement</codeph></entry><entry class="- topic/entry ">Applique l’alpha spécifié à l’élément graphique. Fait une combinaison par multiplication avec tout alpha défini sur le graphique <codeph class="+ topic/ph pr-d/codeph ">DisplayObject</codeph> lui-même ou sur la <codeph class="+ topic/ph pr-d/codeph ">TextLine</codeph>.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">GroupElement</codeph></entry><entry class="- topic/entry ">N’a aucun effet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">TextElement</codeph></entry><entry class="- topic/entry ">Applique l’alpha spécifié à l’élément de texte. Fait une combinaison par multiplication avec tout alpha défini sur la <codeph class="+ topic/ph pr-d/codeph ">TextLine</codeph>.</entry></row></tbody></tgroup></adobetable>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#DisplayObject/alpha" class="- topic/link "><linktext class="- topic/linktext ">DisplayObject.alpha</linktext></link></related-links></apiValue><apiValue id="flash.text.engine:ElementFormat:baselineShift:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">baselineShift</apiName><shortdesc class="- topic/shortdesc ">
	 Indique le décalage de la ligne de base pour l’élément, en pixels.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Si elle est définie une fois l’objet ElementFormat bloqué (la propriété <codeph class="+ topic/ph pr-d/codeph ">locked</codeph> est définie sur <codeph class="+ topic/ph pr-d/codeph ">true</codeph>).
	  
	  </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IllegalOperationError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IllegalOperationError</apiOperationClassifier></apiException></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Indique le décalage de la ligne de base pour l’élément, en pixels.
	 <p class="- topic/p ">L’élément est éloigné d’autant de la <codeph class="+ topic/ph pr-d/codeph ">dominantBaseline</codeph>. Le décalage étant ajouté à la position y des membres de l’élément, dans un texte qui ne pivote pas, un décalage de ligne de base positif déplace l’élément vers le bas et un décalage de ligne de base négatif déplace l’élément vers le haut.</p>
	 
	 <p class="- topic/p ">La valeur par défaut est <codeph class="+ topic/ph pr-d/codeph ">0.0</codeph>, ce qui signifie aucun décalage.</p>
	 
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Sous-classe</entry><entry class="- topic/entry ">Effet de la définition des propriétés</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">GraphicElement</codeph></entry><entry class="- topic/entry ">Eloigne le graphique de la ligne de base.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">GroupElement</codeph></entry><entry class="- topic/entry ">N’a aucun effet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">TextElement</codeph></entry><entry class="- topic/entry ">Eloigne le texte de la ligne de base.</entry></row></tbody></tgroup></adobetable>
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.text.engine:ElementFormat:breakOpportunity:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">breakOpportunity</apiName><shortdesc class="- topic/shortdesc ">
	 Opportunité de saut de ligne appliquée à ce texte. </shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Si la propriété est définie sur une valeur n’appartenant pas à <codeph class="+ topic/ph pr-d/codeph ">BreakOpportunity</codeph>.
	 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Si elle est définie une fois l’objet ElementFormat bloqué (la propriété <codeph class="+ topic/ph pr-d/codeph ">locked</codeph> est définie sur <codeph class="+ topic/ph pr-d/codeph ">true</codeph>).
	  
	  </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IllegalOperationError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IllegalOperationError</apiOperationClassifier></apiException></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Opportunité de saut de ligne appliquée à ce texte. Cette propriété détermine quels caractères peuvent être utilisés pour effectuer un saut de ligne lorsque le texte est scindé en plusieurs lignes. Utilisez les constantes <codeph class="+ topic/ph pr-d/codeph ">BreakOpportunity</codeph> pour cette propriété.
	 
	 <p class="- topic/p ">La valeur par défaut est <codeph class="+ topic/ph pr-d/codeph ">BreakOpportunity.AUTO</codeph>.</p>
	 
	 <p class="- topic/p ">Pour définir les valeurs pour cette propriété, utilisez les valeurs de chaîne suivantes :</p>
	 
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Valeur de chaîne</entry><entry class="- topic/entry ">Description</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">BreakOpportunity.AUTO</codeph></entry><entry class="- topic/entry ">Les possibilités de saut de ligne sont basées sur les propriétés des caractères Unicode standard, par exemple les séparations de mots et les tirets.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">BreakOpportunity.ANY</codeph></entry><entry class="- topic/entry ">Tout caractère de l’objet <codeph class="+ topic/ph pr-d/codeph ">ContentElement</codeph> est traité comme une possibilité de saut de ligne. Cette valeur est généralement utilisée lorsque du texte Romain est intégré dans du texte asiatique et qu’il est préférable que les sauts de ligne interviennent au milieu des mots.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">BreakOpportunity.NONE</codeph></entry><entry class="- topic/entry ">Aucun caractère de la plage n’est traité comme une possibilité de saut de ligne.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">BreakOpportunity.ALL</codeph></entry><entry class="- topic/entry ">Tous les caractères de la plage sont traités comme des possibilités de saut de ligne, ce qui signifie qu’un saut de ligne se produit après chaque caractère. Cela est utile pour la création d’effets tels qu’un texte sur un tracé.</entry></row></tbody></tgroup></adobetable>
	 <p class="- topic/p "/>
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Sous-classe</entry><entry class="- topic/entry ">Effet de la définition des propriétés</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">GraphicElement</codeph></entry><entry class="- topic/entry ">N’a aucun effet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">GroupElement</codeph></entry><entry class="- topic/entry ">Détermine la possibilité de séparation entre les éléments de texte adjacents du groupe. Si l’elementFormat du groupe est <codeph class="+ topic/ph pr-d/codeph ">null</codeph>, le format du premier des éléments adjacents est utilisé.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">TextElement</codeph></entry><entry class="- topic/entry ">Détermine la possibilité de séparation entre les caractères de l’élément de texte.</entry></row></tbody></tgroup></adobetable>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#BreakOpportunity" class="- topic/link "><linktext class="- topic/linktext ">BreakOpportunity</linktext></link></related-links></apiValue><apiValue id="flash.text.engine:ElementFormat:color:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">color</apiName><shortdesc class="- topic/shortdesc ">
	 Indique la couleur du texte.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">uint</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Si elle est définie une fois l’objet ElementFormat bloqué (la propriété <codeph class="+ topic/ph pr-d/codeph ">locked</codeph> est définie sur <codeph class="+ topic/ph pr-d/codeph ">true</codeph>).
	  
	  </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IllegalOperationError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IllegalOperationError</apiOperationClassifier></apiException></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Indique la couleur du texte. Nombre entier contenant trois composants RVB 8 bits ; par exemple, 0xFF0000 correspond au rouge et 0x00FF00 au vert. 
	 
	 <p class="- topic/p ">La valeur par défaut est <codeph class="+ topic/ph pr-d/codeph ">0x000000</codeph> (noir).</p>
	 
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Sous-classe</entry><entry class="- topic/entry ">Effet de la définition des propriétés</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">GraphicElement</codeph></entry><entry class="- topic/entry ">N’a aucun effet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">GroupElement</codeph></entry><entry class="- topic/entry ">N’a aucun effet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">TextElement</codeph></entry><entry class="- topic/entry ">Définit la couleur du texte.</entry></row></tbody></tgroup></adobetable>
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.text.engine:ElementFormat:digitCase:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">digitCase</apiName><shortdesc class="- topic/shortdesc ">
	 Casse de chiffres utilisée pour ce texte. </shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Si la propriété est définie sur une valeur n’appartenant pas à <codeph class="+ topic/ph pr-d/codeph ">DigitCase</codeph>.
	 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Si elle est définie une fois l’objet ElementFormat bloqué (la propriété <codeph class="+ topic/ph pr-d/codeph ">locked</codeph> est définie sur <codeph class="+ topic/ph pr-d/codeph ">true</codeph>).
	  
	  </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IllegalOperationError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IllegalOperationError</apiOperationClassifier></apiException></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Casse numérique utilisée pour ce texte. La casse des chiffres affecte le style et le positionnement des groupes de caractères numériques. Utilisez les constantes <codeph class="+ topic/ph pr-d/codeph ">DigitCase</codeph> pour cette propriété.
	 
	 <p class="- topic/p ">La valeur par défaut est <codeph class="+ topic/ph pr-d/codeph ">DigitCase.DEFAULT</codeph>.</p>
	 
	 <p class="- topic/p ">Pour définir les valeurs pour cette propriété, utilisez les valeurs de chaîne suivantes :</p>
	 
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Valeur de chaîne</entry><entry class="- topic/entry ">Description</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">DigitCase.DEFAULT</codeph></entry><entry class="- topic/entry ">Applique une casse de chiffres par défaut au texte.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">DigitCase.LINING</codeph></entry><entry class="- topic/entry ">Applique la casse de chiffres des lignes au texte.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">DigitCase.OLD_STYLE</codeph></entry><entry class="- topic/entry ">Applique l’ancienne casse de chiffres de style au texte.</entry></row></tbody></tgroup></adobetable>
	 <p class="- topic/p "/>
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Sous-classe</entry><entry class="- topic/entry ">Effet de la définition des propriétés</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">GraphicElement</codeph></entry><entry class="- topic/entry ">N’a aucun effet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">GroupElement</codeph></entry><entry class="- topic/entry ">N’a aucun effet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">TextElement</codeph></entry><entry class="- topic/entry ">Détermine le casse des chiffres utilisée pour le texte dans l’élément.</entry></row></tbody></tgroup></adobetable>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#DigitCase" class="- topic/link "><linktext class="- topic/linktext ">DigitCase</linktext></link></related-links></apiValue><apiValue id="flash.text.engine:ElementFormat:digitWidth:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">digitWidth</apiName><shortdesc class="- topic/shortdesc ">
	 Largeur de chiffres utilisée pour ce texte.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Si la propriété est définie sur une valeur n’appartenant pas à <codeph class="+ topic/ph pr-d/codeph ">DigitWidth</codeph>.
	 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Si elle est définie une fois l’objet ElementFormat bloqué (la propriété <codeph class="+ topic/ph pr-d/codeph ">locked</codeph> est définie sur <codeph class="+ topic/ph pr-d/codeph ">true</codeph>).
	  
	  </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IllegalOperationError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IllegalOperationError</apiOperationClassifier></apiException></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Largeur de chiffres utilisée pour ce texte. Utilisez les constantes <codeph class="+ topic/ph pr-d/codeph ">DigitWidth</codeph> pour cette propriété.
	 
	 <p class="- topic/p ">La valeur par défaut est <codeph class="+ topic/ph pr-d/codeph ">DigitWidth.DEFAULT</codeph>.</p>
	 
	 <p class="- topic/p ">Pour définir les valeurs pour cette propriété, utilisez les valeurs de chaîne suivantes :</p>
	 
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Valeur de chaîne</entry><entry class="- topic/entry ">Description</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">DigitWidth.DEFAULT</codeph></entry><entry class="- topic/entry ">Applique une largeur de chiffres par défaut au texte.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">DigitWidth.PROPORTIONAL</codeph></entry><entry class="- topic/entry ">Applique une largeur de chiffres proportionnelle au texte.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">DigitWidth.TABULAR</codeph></entry><entry class="- topic/entry ">Applique une largeur de chiffres tabulaire au texte.</entry></row></tbody></tgroup></adobetable>
	 <p class="- topic/p "/>
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Sous-classe</entry><entry class="- topic/entry ">Effet de la définition des propriétés</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">GraphicElement</codeph></entry><entry class="- topic/entry ">N’a aucun effet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">GroupElement</codeph></entry><entry class="- topic/entry ">N’a aucun effet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">TextElement</codeph></entry><entry class="- topic/entry ">Détermine l’épaisseur des chiffres utilisée pour le texte dans l’élément.</entry></row></tbody></tgroup></adobetable>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#DigitWidth" class="- topic/link "><linktext class="- topic/linktext ">DigitWidth</linktext></link></related-links></apiValue><apiValue id="flash.text.engine:ElementFormat:dominantBaseline:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">dominantBaseline</apiName><shortdesc class="- topic/shortdesc ">
	 Spécifie le type de ligne de base à utiliser comme ligne de base dominante.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Si la propriété est définie sur une valeur n’appartenant pas à <codeph class="+ topic/ph pr-d/codeph ">TextBaseline</codeph>.
	 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Si elle est définie une fois l’objet ElementFormat bloqué (la propriété <codeph class="+ topic/ph pr-d/codeph ">locked</codeph> est définie sur <codeph class="+ topic/ph pr-d/codeph ">true</codeph>).
	  
	  </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IllegalOperationError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IllegalOperationError</apiOperationClassifier></apiException></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Spécifie le type de ligne de base à utiliser comme ligne de base dominante. La ligne de base dominante est alignée sur la ligne de base d’alignement pour déterminer la position verticale de l’élément sur la ligne. Utilisez les constantes<codeph class="+ topic/ph pr-d/codeph ">TextBaseline</codeph> pour cette propriété.
	 
	 <p class="- topic/p ">Le contenu de l’élément détermine les lignes de base. Dans le cas d’un <codeph class="+ topic/ph pr-d/codeph ">TextElement</codeph>, la police et la taille de la police déterminent les lignes de base. Dans le cas d’un <codeph class="+ topic/ph pr-d/codeph ">ForeignElement</codeph>, la hauteur de l’élément détermine les lignes de base.</p>
	 
	 <p class="- topic/p ">La valeur par défaut est <codeph class="+ topic/ph pr-d/codeph ">TextBaseline.ROMAN</codeph>.</p>
	 
	 <p class="- topic/p ">Pour définir les valeurs pour cette propriété, utilisez les valeurs de chaîne suivantes :</p>
	 
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Valeur de chaîne</entry><entry class="- topic/entry ">Description</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">TextBaseline.ROMAN</codeph></entry><entry class="- topic/entry ">La ligne de base des caractères romains de l’élément s’aligne avec <codeph class="+ topic/ph pr-d/codeph ">alignmentBaseline</codeph>.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">TextBaseline.ASCENT</codeph></entry><entry class="- topic/entry ">La ligne de base des caractères ascendants de l’élément s’aligne avec <codeph class="+ topic/ph pr-d/codeph ">alignmentBaseline</codeph>.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">TextBaseline.DESCENT</codeph></entry><entry class="- topic/entry ">La ligne de base des caractères descendants de l’élément s’aligne avec <codeph class="+ topic/ph pr-d/codeph ">alignmentBaseline</codeph>.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">TextBaseline.IDEOGRAPHIC_TOP</codeph></entry><entry class="- topic/entry ">La ligne de base du haut des caractères idéographiques de l’élément s’aligne avec <codeph class="+ topic/ph pr-d/codeph ">alignmentBaseline</codeph>.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">TextBaseline.IDEOGRAPHIC_CENTER</codeph></entry><entry class="- topic/entry ">La ligne de base du centre des caractères idéographiques de l’élément s’aligne avec <codeph class="+ topic/ph pr-d/codeph ">alignmentBaseline</codeph>.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">TextBaseline.IDEOGRAPHIC_BOTTOM</codeph></entry><entry class="- topic/entry ">La ligne de base du bas des caractères idéographiques de l’élément s’aligne avec <codeph class="+ topic/ph pr-d/codeph ">alignmentBaseline</codeph>.</entry></row></tbody></tgroup></adobetable>
	 <p class="- topic/p "/>
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Sous-classe</entry><entry class="- topic/entry ">Effet de la définition des propriétés</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">GraphicElement</codeph></entry><entry class="- topic/entry ">Détermine quelles lignes de base de l’élément graphique s’alignent sur le <codeph class="+ topic/ph pr-d/codeph ">alignmentBaseline</codeph>.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">GroupElement</codeph></entry><entry class="- topic/entry ">N’a aucun effet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">TextElement</codeph></entry><entry class="- topic/entry ">Détermine quelles lignes de base de l’élément de texte s’alignent sur le <codeph class="+ topic/ph pr-d/codeph ">alignmentBaseline</codeph>.</entry></row></tbody></tgroup></adobetable>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#TextBaseline" class="- topic/link "><linktext class="- topic/linktext ">TextBaseline</linktext></link><link href="flash.text.engine.xml#ElementFormat/alignmentBaseline" class="- topic/link "><linktext class="- topic/linktext ">ElementFormat.alignmentBaseline</linktext></link></related-links></apiValue><apiValue id="flash.text.engine:ElementFormat:fontDescription:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">fontDescription</apiName><shortdesc class="- topic/shortdesc ">
	 Objet dont les propriétés décrivent une police.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.text.engine:FontDescription</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Si elle est définie une fois l’objet ElementFormat bloqué (la propriété <codeph class="+ topic/ph pr-d/codeph ">locked</codeph> est définie sur <codeph class="+ topic/ph pr-d/codeph ">true</codeph>).
	  
	  </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IllegalOperationError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IllegalOperationError</apiOperationClassifier></apiException></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Objet dont les propriétés décrivent une police.
	 
	 <p class="- topic/p ">La valeur par défaut est un objet FontDescription créé par défaut.</p>
     
	 <p class="- topic/p ">Lorsque la propriété fontDescription est définie, l’objet FontDescription fourni est bloqué : sa propriété <codeph class="+ topic/ph pr-d/codeph ">locked</codeph> est définie sur <codeph class="+ topic/ph pr-d/codeph ">true</codeph>. Il est impossible de modifier un objet FontDescription bloqué.</p>
	 
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Sous-classe</entry><entry class="- topic/entry ">Effet de la définition des propriétés</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">GraphicElement</codeph></entry><entry class="- topic/entry ">N’a aucun effet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">GroupElement</codeph></entry><entry class="- topic/entry ">N’a aucun effet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">TextElement</codeph></entry><entry class="- topic/entry ">Détermine la police utilisée pour le texte dans l’élément.</entry></row></tbody></tgroup></adobetable>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#FontDescription" class="- topic/link "><linktext class="- topic/linktext ">FontDescription</linktext></link></related-links></apiValue><apiValue id="flash.text.engine:ElementFormat:fontSize:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">fontSize</apiName><shortdesc class="- topic/shortdesc ">
	 La taille du texte, en pixels.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Si défini sur une valeur inférieure à zéro.
	 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Si elle est définie une fois l’objet ElementFormat bloqué (la propriété <codeph class="+ topic/ph pr-d/codeph ">locked</codeph> est définie sur <codeph class="+ topic/ph pr-d/codeph ">true</codeph>).
	  
	  </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IllegalOperationError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IllegalOperationError</apiOperationClassifier></apiException></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 La taille du texte, en pixels. 
	 
	 <p class="- topic/p ">La valeur par défaut est <codeph class="+ topic/ph pr-d/codeph ">12.0</codeph>.</p>
	 
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Sous-classe</entry><entry class="- topic/entry ">Effet de la définition des propriétés</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">GraphicElement</codeph></entry><entry class="- topic/entry ">N’a aucun effet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">GroupElement</codeph></entry><entry class="- topic/entry ">N’a aucun effet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">TextElement</codeph></entry><entry class="- topic/entry ">Détermine la taille pour le texte de l’élément, en pixels.</entry></row></tbody></tgroup></adobetable>
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.text.engine:ElementFormat:kerning:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">kerning</apiName><shortdesc class="- topic/shortdesc ">
	 Le crènage ajuste les pixels entre certaines paires de caractères pour améliorer la lisibilité.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Si elle est définie une fois l’objet ElementFormat bloqué (la propriété <codeph class="+ topic/ph pr-d/codeph ">locked</codeph> est définie sur <codeph class="+ topic/ph pr-d/codeph ">true</codeph>).
	 
	 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IllegalOperationError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IllegalOperationError</apiOperationClassifier></apiException></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Le crénage ajuste les pixels entre certaines paires de caractères pour améliorer la lisibilité. Le crénage est pris en charge pour toutes les polices qui disposent de tables de crénage.
	 
	 <p class="- topic/p ">La valeur par défaut est <codeph class="+ topic/ph pr-d/codeph ">Kerning.ON</codeph>.</p>
	 
	 <p class="- topic/p ">Pour définir les valeurs pour cette propriété, utilisez les constantes suivantes dans la classe Kerning :</p>
	 
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Valeur de chaîne</entry><entry class="- topic/entry ">Description</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">Kerning.ON</codeph></entry><entry class="- topic/entry ">Le crénage est activé.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">Kerning.OFF</codeph></entry><entry class="- topic/entry ">Le crénage est désactivé.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">Kerning.AUTO</codeph></entry><entry class="- topic/entry ">Le crènage est activé, sauf lorsque cela n’est pas nécessaire dans la typographie asiatique. Le crénage est appliqué entre deux caractères lorsque aucun d’eux n’est un caractère Kanji, Hiragana ou Katakana.</entry></row></tbody></tgroup></adobetable>
	 <p class="- topic/p "/>
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Sous-classe</entry><entry class="- topic/entry ">Effet de la définition des propriétés</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">GraphicElement</codeph></entry><entry class="- topic/entry ">N’a aucun effet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">GroupElement</codeph></entry><entry class="- topic/entry ">Détermine si le crénage est appliqué entre les éléments de texte adjacents du groupe. Si l’elementFormat du groupe est <codeph class="+ topic/ph pr-d/codeph ">null</codeph>, le format du premier des éléments adjacents est utilisé.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">TextElement</codeph></entry><entry class="- topic/entry ">Détermine si le crénage est appliqué entre les caractères dans l’élément de texte.</entry></row></tbody></tgroup></adobetable>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#Kerning" class="- topic/link "><linktext class="- topic/linktext ">Kerning</linktext></link></related-links></apiValue><apiValue id="flash.text.engine:ElementFormat:ligatureLevel:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">ligatureLevel</apiName><shortdesc class="- topic/shortdesc ">
	 Niveau de ligature utilisé pour ce texte.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Si la propriété est définie sur une valeur n’appartenant pas à <codeph class="+ topic/ph pr-d/codeph ">LigatureLevel</codeph>.
	 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Si elle est définie une fois l’objet ElementFormat bloqué (la propriété <codeph class="+ topic/ph pr-d/codeph ">locked</codeph> est définie sur <codeph class="+ topic/ph pr-d/codeph ">true</codeph>).
	  
	  </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IllegalOperationError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IllegalOperationError</apiOperationClassifier></apiException></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Niveau de ligature utilisé pour ce texte. Une ligature se produit lorsque plusieurs formes de lettres sont unies dans un seul glyphe. Les ligatures remplacent généralement des caractères consécutifs partageant des composants communs, par exemple les paires de lettres ’fi’, ’fl’ ou ’ae’. Elles sont utilisées avec les jeux de caractères latins et non latins. Utilisez les constantes <codeph class="+ topic/ph pr-d/codeph ">LigatureLevel</codeph> pour cette propriété.
	 
	 <p class="- topic/p ">La valeur par défaut est <codeph class="+ topic/ph pr-d/codeph ">LigatureLevel.COMMON</codeph>.</p>
	 
	 <p class="- topic/p ">Pour définir les valeurs pour cette propriété, utilisez les valeurs de chaîne suivantes :</p>
	 
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Valeur de chaîne</entry><entry class="- topic/entry ">Description</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">LigatureLevel.NONE</codeph></entry><entry class="- topic/entry ">Aucune ligature n’est créée.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">LigatureLevel.MINIMUM</codeph></entry><entry class="- topic/entry ">Des ligatures minimales sont créées.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">LigatureLevel.COMMON</codeph></entry><entry class="- topic/entry ">Des ligatures courantes sont créées.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">LigatureLevel.UNCOMMON</codeph></entry><entry class="- topic/entry ">Des ligatures rares sont créées.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">LigatureLevel.EXOTIC</codeph></entry><entry class="- topic/entry ">Des ligatures exotiques sont créées.</entry></row></tbody></tgroup></adobetable>
	 <p class="- topic/p "/>
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Sous-classe</entry><entry class="- topic/entry ">Effet de la définition des propriétés</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">GraphicElement</codeph></entry><entry class="- topic/entry ">N’a aucun effet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">GroupElement</codeph></entry><entry class="- topic/entry ">Détermine le niveau de ligature entre les éléments de texte adjacents du groupe. Si l’elementFormat du groupe est <codeph class="+ topic/ph pr-d/codeph ">null</codeph>, le format du premier des éléments adjacents est utilisé.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">TextElement</codeph></entry><entry class="- topic/entry ">Détermine le niveau de ligature entre les caractères de l’élément de texte.</entry></row></tbody></tgroup></adobetable>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#LigatureLevel" class="- topic/link "><linktext class="- topic/linktext ">LigatureLevel</linktext></link></related-links></apiValue><apiValue id="flash.text.engine:ElementFormat:locale:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">locale</apiName><shortdesc class="- topic/shortdesc ">
	 Variable locale du texte.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Si elle est définie une fois l’objet ElementFormat bloqué (la propriété <codeph class="+ topic/ph pr-d/codeph ">locked</codeph> est définie sur <codeph class="+ topic/ph pr-d/codeph ">true</codeph>).
	 
	  
	  </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IllegalOperationError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IllegalOperationError</apiOperationClassifier></apiException></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Variable locale du texte. Contrôle les transformations de casse et de forme. Les identifiants locaux standards sont utilisés. Par exemple « en », « en_US » et « en-US » pour l’anglais, « ja » pour le japonais. (Voir la <xref href="http://www.loc.gov/standards/iso639-2/php/code_list.php" scope="external" class="- topic/xref ">liste des codes ISO 639-2</xref> pour obtenir la liste des codes de paramètres régionaux.
	 
     <p class="- topic/p ">La valeur par défaut est <codeph class="+ topic/ph pr-d/codeph ">"en"</codeph>.</p>
	 
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Sous-classe</entry><entry class="- topic/entry ">Effet de la définition des propriétés</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">GraphicElement</codeph></entry><entry class="- topic/entry ">N’a aucun effet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">GroupElement</codeph></entry><entry class="- topic/entry ">N’a aucun effet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">TextElement</codeph></entry><entry class="- topic/entry ">Détermine les transformations et les formes du texte dans l’élément.</entry></row></tbody></tgroup></adobetable>
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.text.engine:ElementFormat:locked:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">locked</apiName><shortdesc class="- topic/shortdesc ">
	 Indique si l’objet ElementFormat est bloqué.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5." class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Si elle est définie une fois l’objet ElementFormat bloqué (la propriété <codeph class="+ topic/ph pr-d/codeph ">locked</codeph> est définie sur <codeph class="+ topic/ph pr-d/codeph ">true</codeph>).
	  
	  </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IllegalOperationError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IllegalOperationError</apiOperationClassifier></apiException></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Indique si l’objet ElementFormat est bloqué. Si la propriété est définie sur <codeph class="+ topic/ph pr-d/codeph ">true</codeph>, l’objet ElementFormat ne peut pas être modifié. Appelez <codeph class="+ topic/ph pr-d/codeph ">ElementFormat.clone()</codeph> pour obtenir une copie non verrouillée de l’objet ElementFormat.
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.text.engine:ElementFormat:textRotation:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">textRotation</apiName><shortdesc class="- topic/shortdesc ">
	 Définit la rotation appliquée aux glyphes individuelles.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Si la propriété est définie sur une valeur n’appartenant pas à <codeph class="+ topic/ph pr-d/codeph ">TextRotation</codeph>.
	 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Si elle est définie une fois l’objet ElementFormat bloqué (la propriété <codeph class="+ topic/ph pr-d/codeph ">locked</codeph> est définie sur <codeph class="+ topic/ph pr-d/codeph ">true</codeph>).
	  
	  </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IllegalOperationError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IllegalOperationError</apiOperationClassifier></apiException></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Définit la rotation appliquée aux glyphes individuelles. Utilisez les constantes définies dans la classe TextRotation pour cette propriété. 
	 
	 <p class="- topic/p ">La valeur par défaut est <codeph class="+ topic/ph pr-d/codeph ">TextRotation.AUTO</codeph>.</p>
	 
	 <p class="- topic/p ">La rotation finale des glyphes est la somme de <codeph class="+ topic/ph pr-d/codeph ">, ElementFormat.textRotation</codeph>, <codeph class="+ topic/ph pr-d/codeph ">ContentElement.textRotation</codeph> et <codeph class="+ topic/ph pr-d/codeph ">TextBlock.lineRotation</codeph>.</p>
	 
	 <p class="- topic/p ">Vous devez normalement utiliser cette propriété pour le texte asiatique, dont les caractères doivent pivoter pour s’afficher verticalement. Pour ce faire, utilisez <codeph class="+ topic/ph pr-d/codeph ">TextRotation.AUTO</codeph> avec <codeph class="+ topic/ph pr-d/codeph ">TextBlock.lineRotation = TextRotation.ROTATE_90</codeph>.</p>
	 
	 <p class="- topic/p ">La définition de cette propriété sur des polices qui ne contiennent pas d’informations de disposition verticale risque de donner des résultats inattendus. Les polices qui contiennent une table vmtx ou VORG, telles que la police japonaise « MS Mincho », fonctionnent correctement. En effet, ces tables fournissent les données dont le moteur de disposition a besoin pour effectuer une mise en forme appropriée. Les polices comme Verdana, qui ne contiennent pas les informations nécessaires, ne fonctionnent pas correctement.</p>
	 
	 <p class="- topic/p ">Pour définir les valeurs pour cette propriété, utilisez les valeurs de chaîne suivantes :</p>
	 
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Valeur de chaîne</entry><entry class="- topic/entry ">Description</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">TextRotation.ROTATE_0</codeph></entry><entry class="- topic/entry ">Les glyphes ne pivotent pas.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">TextRotation.ROTATE_90</codeph></entry><entry class="- topic/entry ">Les glyphes pivotent de 90 degrés vers la droite.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">TextRotation.ROTATE_180</codeph></entry><entry class="- topic/entry ">Les glyphes pivotent de 180 degrés.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">TextRotation.ROTATE_270</codeph></entry><entry class="- topic/entry ">Les glyphes pivotent de 270 degrés vers la droite.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">TextRotation.AUTO</codeph></entry><entry class="- topic/entry ">Spécifie une rotation de 90 degrés vers la gauche pour les glyphes larges et de pleine épaisseur uniquement, tels que déterminés par les propriétés Unicode du glyphe. Cette valeur est généralement utilisée avec du texte asiatique pour ne faire pivoter que les glyphes requérant une rotation. Cette rotation est uniquement appliquée au texte vertical pour orienter verticalement les caractères larges et de pleine épaisseur sans affecter les autres caractères.</entry></row></tbody></tgroup></adobetable>
	 <p class="- topic/p "/>
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Sous-classe</entry><entry class="- topic/entry ">Effet de la définition des propriétés</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">GraphicElement</codeph></entry><entry class="- topic/entry ">N’a aucun effet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">GroupElement</codeph></entry><entry class="- topic/entry ">N’a aucun effet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">TextElement</codeph></entry><entry class="- topic/entry ">Détermine la rotation des glyphes dans l’élément de texte.</entry></row></tbody></tgroup></adobetable>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#TextRotation" class="- topic/link "><linktext class="- topic/linktext ">TextRotation</linktext></link><link href="flash.text.engine.xml#ContentElement/textRotation" class="- topic/link "><linktext class="- topic/linktext ">ContentElement.textRotation</linktext></link><link href="flash.text.engine.xml#TextBlock/lineRotation" class="- topic/link "><linktext class="- topic/linktext ">TextBlock.lineRotation</linktext></link></related-links></apiValue><apiValue id="flash.text.engine:ElementFormat:trackingLeft:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">trackingLeft</apiName><shortdesc class="- topic/shortdesc ">
	 Interlettrage ou crénage manuel à appliquer à gauche de chaque glyphe, en pixels.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5." class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Si elle est définie une fois l’objet ElementFormat bloqué (la propriété <codeph class="+ topic/ph pr-d/codeph ">locked</codeph> est définie sur <codeph class="+ topic/ph pr-d/codeph ">true</codeph>).
	  
	  </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IllegalOperationError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IllegalOperationError</apiOperationClassifier></apiException></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Interlettrage ou crénage manuel à appliquer à gauche de chaque glyphe, en pixels. Si <codeph class="+ topic/ph pr-d/codeph ">kerning</codeph> est activé, la valeur <codeph class="+ topic/ph pr-d/codeph ">trackingLeft</codeph> est ajoutée aux valeurs dans la table de crénage de la police. Si <codeph class="+ topic/ph pr-d/codeph ">kerning</codeph> est désactivé, la valeur <codeph class="+ topic/ph pr-d/codeph ">trackingLeft</codeph> est utilisée comme valeur de crénage manuel. Prend en charge les valeurs positives et négatives.
	 
	 <p class="- topic/p ">De façon générale, la valeur de suivi désirée est divisée entre <codeph class="+ topic/ph pr-d/codeph ">trackingRight</codeph> et <codeph class="+ topic/ph pr-d/codeph ">trackingLeft</codeph>. Autrement, dans le cas de texte combinant plusieurs directions, le suivi est double au niveau d’une limite bidirectionnelle et nul pour l’autre.</p>
	 
	 <p class="- topic/p ">La valeur par défaut est <codeph class="+ topic/ph pr-d/codeph ">0.0</codeph>.</p>
	 
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Sous-classe</entry><entry class="- topic/entry ">Effet de la définition des propriétés</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">GraphicElement</codeph></entry><entry class="- topic/entry ">Détermine le suivi appliqué à gauche du graphique.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">GroupElement</codeph></entry><entry class="- topic/entry ">N’a aucun effet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">TextElement</codeph></entry><entry class="- topic/entry ">Détermine le suivi appliqué à gauche des caractères dans l’élément de texte.</entry></row></tbody></tgroup></adobetable>
	 
	 <p class="- topic/p ">Exemple :</p>
	 
	 <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
	      //positive tracking added to kerning
	      var ef1:ElementFormat = new ElementFormat();
	      ef1.kerning = flash.text.engine.Kerning.ON;
	      ef1.trackingLeft = 0.5;
	 
	      //negative manual kerning
	      var ef2:ElementFormat = new ElementFormat();
	      ef2.kerning = flash.text.engine.Kerning.OFF;
	      ef2.trackingLeft = -1.0;
	 </codeblock> 
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.text.engine:ElementFormat:trackingRight:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">trackingRight</apiName><shortdesc class="- topic/shortdesc ">
	 Interlettrage ou crénage manuel à appliquer à droite de chaque glyphe, en pixels.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5." class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Si elle est définie une fois l’objet ElementFormat bloqué (la propriété <codeph class="+ topic/ph pr-d/codeph ">locked</codeph> est définie sur <codeph class="+ topic/ph pr-d/codeph ">true</codeph>).
	  
	  </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IllegalOperationError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IllegalOperationError</apiOperationClassifier></apiException></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Interlettrage ou crénage manuel à appliquer à droite de chaque glyphe, en pixels. Si <codeph class="+ topic/ph pr-d/codeph ">kerning</codeph> est activé, la valeur <codeph class="+ topic/ph pr-d/codeph ">trackingRight</codeph> est ajoutée aux valeurs dans la table de crénage de la police. Si <codeph class="+ topic/ph pr-d/codeph ">kerning</codeph> est désactivé, la valeur <codeph class="+ topic/ph pr-d/codeph ">trackingRight</codeph> est utilisée comme valeur de crénage manuel. Prend en charge les valeurs positives et négatives.
	 
	 <p class="- topic/p ">De façon générale, la valeur de suivi désirée est divisée entre <codeph class="+ topic/ph pr-d/codeph ">trackingRight</codeph> et <codeph class="+ topic/ph pr-d/codeph ">trackingLeft</codeph>. Autrement, dans le cas de texte combinant plusieurs directions, le suivi est double au niveau d’une limite bidirectionnelle et nul pour l’autre.</p>
	 
	 
	 <p class="- topic/p ">La valeur par défaut est <codeph class="+ topic/ph pr-d/codeph ">0.0</codeph>.</p>
	 
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Sous-classe</entry><entry class="- topic/entry ">Effet de la définition des propriétés</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">GraphicElement</codeph></entry><entry class="- topic/entry ">Détermine le suivi appliqué à droite du graphique.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">GroupElement</codeph></entry><entry class="- topic/entry ">N’a aucun effet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">TextElement</codeph></entry><entry class="- topic/entry ">Détermine le suivi appliqué à droite des caractères dans l’élément de texte.</entry></row></tbody></tgroup></adobetable>
	 
	 <p class="- topic/p ">Exemple :</p>
	 
	 <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
	      //positive tracking added to kerning
	      var ef1:ElementFormat = new ElementFormat();
	      ef1.kerning = flash.text.engine.Kerning.ON;
	      ef1.trackingRight = 0.5;
	 
	      //negative manual kerning
	      var ef2:ElementFormat = new ElementFormat();
	      ef2.kerning = flash.text.engine.Kerning.OFF;
	      ef2.trackingRight = -1.0;
	 </codeblock> 
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.text.engine:ElementFormat:typographicCase:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">typographicCase</apiName><shortdesc class="- topic/shortdesc ">
	 Casse typographique utilisée pour ce texte. </shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Si la propriété est définie sur une valeur n’appartenant pas à <codeph class="+ topic/ph pr-d/codeph ">TypographicCase</codeph>.
	 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Si elle est définie une fois l’objet ElementFormat bloqué (la propriété <codeph class="+ topic/ph pr-d/codeph ">locked</codeph> est définie sur <codeph class="+ topic/ph pr-d/codeph ">true</codeph>).
	  
	  </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IllegalOperationError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IllegalOperationError</apiOperationClassifier></apiException></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Casse typographique utilisée pour ce texte. Utilisez les constantes définies dans la classe TypographicCase pour cette propriété.
	 
	 <p class="- topic/p ">La valeur par défaut est <codeph class="+ topic/ph pr-d/codeph ">TypographicCase.DEFAULT</codeph>.</p>
	 
	 <p class="- topic/p ">Pour définir les valeurs pour cette propriété, utilisez les valeurs de chaîne suivantes :</p>
	 
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Valeur de chaîne</entry><entry class="- topic/entry ">Description</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">TypographicCase.DEFAULT</codeph></entry><entry class="- topic/entry ">Indique que le style de casse normal est utilisé pour tous les caractères.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">TypographicCase.TITLE</codeph></entry><entry class="- topic/entry ">Spécifie que les caractères majuscules utilisent des glyphes de titre en sortie.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">TypographicCase.CAPS</codeph></entry><entry class="- topic/entry ">Spécifie que l’espacement est ajusté pour les caractères majuscules en sortie.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">TypographicCase.SMALL_CAPS</codeph></entry><entry class="- topic/entry ">Spécifie que les caractères majuscules utilisent des glyphes de petites majuscules en sortie.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">TypographicCase.UPPERCASE</codeph></entry><entry class="- topic/entry ">Spécifie que tous les caractères utilisent des glyphes majuscules en sortie.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">TypographicCase.LOWERCASE</codeph></entry><entry class="- topic/entry ">Spécifie que tous les caractères utilisent des glyphes minuscules en sortie.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">TypographicCase.CAPS_AND_SMALL_CAPS</codeph></entry><entry class="- topic/entry ">Spécifie que les caractères minuscules utilisent des glyphes de petites majuscules en sortie.</entry></row></tbody></tgroup></adobetable>
	 <p class="- topic/p "/>
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Sous-classe</entry><entry class="- topic/entry ">Effet de la définition des propriétés</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">GraphicElement</codeph></entry><entry class="- topic/entry ">N’a aucun effet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">GroupElement</codeph></entry><entry class="- topic/entry ">N’a aucun effet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">TextElement</codeph></entry><entry class="- topic/entry ">Détermine la casse typographique utilisée pour le texte dans l’élément.</entry></row></tbody></tgroup></adobetable>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#TypographicCase" class="- topic/link "><linktext class="- topic/linktext ">TypographicCase</linktext></link></related-links></apiValue></apiClassifier><apiClassifier languages="" id="flash.text.engine:TextJustifier" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">TextJustifier</apiName><shortdesc class="- topic/shortdesc ">
 La classe TextJustifier est une base abstraite de types de justificateurs que vous pouvez appliquer à un TextBlock, en particulier pour les classes EastAsianJustifier et SpaceJustifier.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 La classe TextJustifier est une base abstraite de types de justificateurs que vous pouvez appliquer à un TextBlock, en particulier pour les classes EastAsianJustifier et SpaceJustifier.
 
 <p class="- topic/p ">Il est impossible d’instancier directement la classe TextJustifier. L’appel de <codeph class="+ topic/ph pr-d/codeph ">new TextJustifier()</codeph> renvoie une exception <codeph class="+ topic/ph pr-d/codeph ">ArgumentError</codeph>. La définition des propriétés d’un objet EastAsianJustifier ou SpaceJustifier après son application à un TextBlock n’invalide pas le TextBlock.</p>
 
 </apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#EastAsianJustifier" class="- topic/link "><linktext class="- topic/linktext ">EastAsianJustifier</linktext></link><link href="flash.text.engine.xml#SpaceJustifier" class="- topic/link "><linktext class="- topic/linktext ">SpaceJustifier</linktext></link><link href="flash.text.engine.xml#TextBlock/textJustifier" class="- topic/link "><linktext class="- topic/linktext ">TextBlock.textJustifier</linktext></link></related-links><apiConstructor id="flash.text.engine:TextJustifier:TextJustifier" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">TextJustifier</apiName><shortdesc class="- topic/shortdesc ">
	 L’appel du constructeur TextJustifier() renvoie une exception ArgumentError.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">La variable <codeph class="+ topic/ph pr-d/codeph ">locale</codeph> spécifiée est <codeph class="+ topic/ph pr-d/codeph ">null</codeph> ou trop courte pour représenter une variable locale valide.
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Le paramètre <codeph class="+ topic/ph pr-d/codeph ">lineJustification</codeph> spécifié n’appartient pas à <codeph class="+ topic/ph pr-d/codeph ">LineJustification</codeph>.
	  
	  </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">locale</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Variable locale permettant de déterminer les règles de justification. 
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">lineJustification</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Type de justification des lignes du paragraphe. Utilisez les constantes <codeph class="+ topic/ph pr-d/codeph ">LineJustification</codeph> pour cette propriété. 
   	 </apiDesc></apiParam></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 L’appel du constructeur <codeph class="+ topic/ph pr-d/codeph ">TextJustifier()</codeph> renvoie une exception <codeph class="+ topic/ph pr-d/codeph ">ArgumentError</codeph>. Vous <i class="+ topic/ph hi-d/i ">pouvez</i> cependant appeler des constructeurs pour les sous-classes suivantes de TextJustifier :
	 
	 <ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">new SpaceJustifier()</codeph></li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">new EastAsianJustifier()</codeph></li></ul>
	 
	 </apiDesc></apiConstructorDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#EastAsianJustifier" class="- topic/link "><linktext class="- topic/linktext ">EastAsianJustifier</linktext></link><link href="flash.text.engine.xml#LineJustification" class="- topic/link "><linktext class="- topic/linktext ">LineJustification</linktext></link><link href="flash.text.engine.xml#SpaceJustifier" class="- topic/link "><linktext class="- topic/linktext ">SpaceJustifier</linktext></link></related-links></apiConstructor><apiOperation id="flash.text.engine:TextJustifier:clone" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">clone</apiName><shortdesc class="- topic/shortdesc ">
	 Crée une copie clonée de l’objet TextJustifier.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Une copie de l’objet <codeph class="+ topic/ph pr-d/codeph ">TextJustifier</codeph>.
	  
	  </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.text.engine:TextJustifier</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Crée une copie clonée de l’objet TextJustifier.
	 
	 <p class="- topic/p ">Les sous-classes de TextJustifier doivent remplacer cette méthode.</p>
     
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.text.engine:TextJustifier:getJustifierForLocale" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">getJustifierForLocale</apiName><shortdesc class="- topic/shortdesc ">
	 Construit une sous-classe TextJustifier par défaut appropriée à la variable locale spécifiée.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">La variable <codeph class="+ topic/ph pr-d/codeph ">locale</codeph> spécifiée est <codeph class="+ topic/ph pr-d/codeph ">null</codeph> ou trop courte pour représenter une variable locale valide.
	  
	  </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Référence à un objet <codeph class="+ topic/ph pr-d/codeph ">TextJustifier</codeph>.
     
     </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.text.engine:TextJustifier</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">locale</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Variable locale permettant de déterminer le justificateur créé.
     </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Construit une sous-classe TextJustifier par défaut appropriée à la variable locale spécifiée.
	 
	 <p class="- topic/p ">Si la variable locale est le chinois, le coréen ou le japonais, la méthode construit un objet EastAsianJustifier par défaut. Si ce n’est pas le cas, le moteur de saisie construit un objet SpaceJustifier par défaut.</p>
     
     </apiDesc></apiOperationDetail></apiOperation><apiValue id="flash.text.engine:TextJustifier:lineJustification:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">lineJustification</apiName><shortdesc class="- topic/shortdesc ">
     Spécifie la justification des lignes pour le texte d’un bloc de texte.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Spécifie la justification des lignes pour le texte d’un bloc de texte. 
     
     <p class="- topic/p ">Utilise les constantes suivantes définies par <codeph class="+ topic/ph pr-d/codeph ">LineJustification</codeph> comme valeurs valides de cette propriété :</p>
     
	 
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Valeur de chaîne</entry><entry class="- topic/entry ">Description</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">LineJustification.UNJUSTIFIED</codeph></entry><entry class="- topic/entry ">Génère des lignes non justifiées.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">LineJustification.ALL_BUT_LAST</codeph></entry><entry class="- topic/entry ">Génère des lignes toutes justifiées sauf la dernière.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">LineJustification.ALL_INCLUDING_LAST</codeph></entry><entry class="- topic/entry ">Génère des lignes toutes justifiées.</entry></row></tbody></tgroup></adobetable>
	 
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#LineJustification" class="- topic/link "><linktext class="- topic/linktext ">LineJustification</linktext></link></related-links></apiValue><apiValue id="flash.text.engine:TextJustifier:locale:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">locale</apiName><shortdesc class="- topic/shortdesc ">
     Spécifie la variable locale permettant de déterminer les règles de justification du texte dans un bloc de texte.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">La variable <codeph class="+ topic/ph pr-d/codeph ">locale</codeph> spécifiée est <codeph class="+ topic/ph pr-d/codeph ">null</codeph> ou trop courte pour représenter une variable locale valide.
      
      </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Spécifie la variable locale permettant de déterminer les règles de justification du texte dans un bloc de texte. Les identifiants locaux standards sont utilisés. Par exemple « en », « en_US » et « en-US » pour l’anglais, « ja » pour le japonais.
     
     </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.text.engine:FontDescription" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">FontDescription</apiName><shortdesc class="- topic/shortdesc ">
 La classe FontDescription représente les informations requises pour décrire une police.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 La classe FontDescription représente les informations requises pour décrire une police. 
 
 <p class="- topic/p ">Un objet FontDescription est appliqué à un ElementFormat, qui à son tour est appliqué à un ContentElement dans un TextBlock. Après avoir appliqué un objet FontDescription à un ElementFormat, sa propriété <codeph class="+ topic/ph pr-d/codeph ">locked</codeph> est définie sur <codeph class="+ topic/ph pr-d/codeph ">true</codeph>. Les propriétés d’un objet FontDescription bloqué ne peuvent pas être modifiées. Utilisez plutôt la méthode <codeph class="+ topic/ph pr-d/codeph ">clone()</codeph> pour créer une copie non verrouillée de l’objet, qu’il est possible de modifier et d’affecter à ElementFormat.</p>
 
 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Remarque :</b> FTE (Flash Text Engine) ne prend pas en charge les polices Type 1 ou les polices bitmap, telles que Type 3, ATC, CID ou CID basées sur SFNT.</p>
 
 </apiDesc><example conref="examples\FontDescriptionExample.as" class="- topic/example "> <p class="- topic/p ">Cet exemple crée un objet <codeph class="+ topic/ph pr-d/codeph ">FontDescription</codeph>, lui affecte une police de périphérique, définit diverses propriétés de police et affecte le nouvel objet à un objet <codeph class="+ topic/ph pr-d/codeph ">ElementFormat</codeph>. D’autres mises en forme de police sont effectuées dans <codeph class="+ topic/ph pr-d/codeph ">ElementFormat</codeph>. Un nouvel objet <codeph class="+ topic/ph pr-d/codeph ">TextElement</codeph> est créé, à l’aide d’<codeph class="+ topic/ph pr-d/codeph ">ElementFormat</codeph> et <codeph class="+ topic/ph pr-d/codeph ">TextElement</codeph> est utilisé comme contenu pour un <codeph class="+ topic/ph pr-d/codeph ">TextBlock</codeph>. Une ligne de texte est créée à partir du <codeph class="+ topic/ph pr-d/codeph ">TextBlock</codeph>.</p>
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">

package {

    import flash.display.Sprite;
    import flash.text.engine.*;

    
    public class FontDescriptionExample extends Sprite {
        
        public function FontDescriptionExample():void {
            var fd:FontDescription = new FontDescription();
            fd.fontLookup = flash.text.engine.FontLookup.DEVICE;
            fd.fontName = "Palatino";
            fd.fontWeight = flash.text.engine.FontWeight.BOLD;
            fd.fontPosture = flash.text.engine.FontPosture.ITALIC;

            var ef1:ElementFormat = new ElementFormat(fd);
            ef1.fontSize = 30;
            ef1.color = 0xFF0000;
            
            var str:String = "This is flash text 0123456789";
            var tb:TextBlock = new TextBlock();
            var te1:TextElement = new TextElement(str, ef1);
            tb.content = te1;
            var line1:TextLine = tb.createTextLine(null, 600);
            addChild(line1);
            
        }
    }    
}
</codeblock></example></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#ElementFormat/fontDescription" class="- topic/link "><linktext class="- topic/linktext ">ElementFormat.fontDescription</linktext></link></related-links><apiConstructor id="flash.text.engine:FontDescription:FontDescription" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">FontDescription</apiName><shortdesc class="- topic/shortdesc ">
 	 Crée un objet FontDescription.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Le paramètre <codeph class="+ topic/ph pr-d/codeph ">fontWeight</codeph> spécifié n’appartient pas à <codeph class="+ topic/ph pr-d/codeph ">FontWeight</codeph>.
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Le paramètre <codeph class="+ topic/ph pr-d/codeph ">fontPosture</codeph> spécifié n’appartient pas à <codeph class="+ topic/ph pr-d/codeph ">FontPosture</codeph>.
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Le paramètre <codeph class="+ topic/ph pr-d/codeph ">fontLookup</codeph> spécifié n’appartient pas à <codeph class="+ topic/ph pr-d/codeph ">FontLookup</codeph>.
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Le paramètre <codeph class="+ topic/ph pr-d/codeph ">renderingMode</codeph> spécifié n’appartient pas à <codeph class="+ topic/ph pr-d/codeph ">RenderingMode</codeph>.
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Le paramètre <codeph class="+ topic/ph pr-d/codeph ">cffHinting</codeph> spécifié n’appartient pas à <codeph class="+ topic/ph pr-d/codeph ">CFFHinting</codeph>.
 	  
 	  </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">fontName</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">_serif</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Nom de la police à utiliser, ou liste de noms de police séparés par une virgule.
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">fontWeight</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">normal</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Spécifie l’épaisseur de la police.
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">fontPosture</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">normal</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Spécifie la posture de la police.
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">fontLookup</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">device</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Spécifie comment rechercher la police.
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">renderingMode</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">cff</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Mode de rendu utilisé pour ce texte. Utilisez les constantes <codeph class="+ topic/ph pr-d/codeph ">RenderingMode</codeph> pour cette propriété.
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">cffHinting</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">horizontalStem</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Type de repère CFF (Compact Font Format) utilisé pour ce texte. Utilisez les constantes <codeph class="+ topic/ph pr-d/codeph ">CFFHinting</codeph> pour cette propriété.
   	 </apiDesc></apiParam></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 	 Crée un objet FontDescription.
	 
	 </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="flash.text.engine:FontDescription:clone" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">clone</apiName><shortdesc class="- topic/shortdesc ">
	 Crée une copie non verrouillée et clonée de l’objet FontDescription.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Une copie non verrouillée de l’objet <codeph class="+ topic/ph pr-d/codeph ">FontDescription</codeph>.
	  
	  </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.text.engine:FontDescription</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Crée une copie non verrouillée et clonée de l’objet FontDescription.
	 
     </apiDesc><example conref="examples\FontDescription_cloneExample.as" class="- topic/example "> <p class="- topic/p ">Cet exemple crée un objet <codeph class="+ topic/ph pr-d/codeph ">FontDescription</codeph>, lui affecte une police de périphérique, définit diverses propriétés de police et affecte le nouvel objet à un objet <codeph class="+ topic/ph pr-d/codeph ">ElementFormat</codeph> tout en le bloquant. Un nouvel objet <codeph class="+ topic/ph pr-d/codeph ">TextElement</codeph> est créé, à l’aide d’<codeph class="+ topic/ph pr-d/codeph ">ElementFormat</codeph> et <codeph class="+ topic/ph pr-d/codeph ">TextElement</codeph> est utilisé comme contenu pour un <codeph class="+ topic/ph pr-d/codeph ">TextBlock</codeph>. Une ligne de texte est créée à partir du <codeph class="+ topic/ph pr-d/codeph ">TextBlock</codeph>.</p>
 <p class="- topic/p ">Pour modifier l’objet <codeph class="+ topic/ph pr-d/codeph ">FontDescription</codeph>, vous devez tout d’abord vérifier sa propriété <codeph class="+ topic/ph pr-d/codeph ">locked</codeph>. Si elle est définie sur true, utilisez la méthode <codeph class="+ topic/ph pr-d/codeph ">clone()</codeph> pour créer une copie non verrouillée de <codeph class="+ topic/ph pr-d/codeph ">FontDescription</codeph>, modifiez ses propriétés, puis affectez-la à un nouvel objet ElementFormat. Ensuite, associez à nouveau le nouvel objet <codeph class="+ topic/ph pr-d/codeph ">ElementFormat</codeph> au <codeph class="+ topic/ph pr-d/codeph ">TextBlock</codeph>. Lorsque les lignes sont de nouveau scindées, les nouvelles récupèrent les nouveaux paramètres de police.</p>
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">

package {

    import flash.display.Sprite;
    import flash.text.engine.*;

    
    public class FontDescription_cloneExample extends Sprite {
        private var fd:FontDescription;
        private var fd2:FontDescription;
        
        public function FontDescription_cloneExample():void {
            fd = new FontDescription();
            fd.fontLookup = flash.text.engine.FontLookup.DEVICE;
            fd.fontName = "Palatino";
            fd.fontWeight = flash.text.engine.FontWeight.BOLD;
            fd.fontPosture = flash.text.engine.FontPosture.ITALIC;

            var ef1:ElementFormat = new ElementFormat(fd);
            
            var str:String = "This is flash text 0123456789";
            var tb:TextBlock = new TextBlock();
            var te1:TextElement = new TextElement(str, ef1);
            tb.content = te1;
            var line1:TextLine = tb.createTextLine(null, 600);
            addChild(line1);
            
            fd2 = (fd.locked) ? fd.clone() : fd;    
            fd2.fontWeight = flash.text.engine.FontWeight.NORMAL;
            var ef2:ElementFormat = new ElementFormat(fd2);

            tb.content.elementFormat=ef2;
            var line2:TextLine = tb.createTextLine(null, 600);
            addChild(line2);
            
        }
    }    
}
</codeblock></example></apiOperationDetail></apiOperation><apiOperation id="flash.text.engine:FontDescription:isDeviceFontCompatible" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">isDeviceFontCompatible</apiName><shortdesc class="- topic/shortdesc ">
	 Renvoie la valeur true si une police de périphérique utilisable est disponible avec les classes fontName, fontWeight et fontPosture spécifiées.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Le paramètre <codeph class="+ topic/ph pr-d/codeph ">fontWeight</codeph> spécifié n’appartient pas à <codeph class="+ topic/ph pr-d/codeph ">FontWeight</codeph>.
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Le paramètre <codeph class="+ topic/ph pr-d/codeph ">fontPosture</codeph> spécifié n’appartient pas à <codeph class="+ topic/ph pr-d/codeph ">FontPosture</codeph>.
	  
	 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> si une police de périphérique compatible est disponible, <codeph class="+ topic/ph pr-d/codeph ">false</codeph> dans le cas contraire.
	 
     </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">fontName</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Nom de la police de périphérique à vérifier.
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">fontWeight</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Spécifie l’épaisseur de la police. Utilisez <codeph class="+ topic/ph pr-d/codeph ">FontWeight</codeph>.
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">fontPosture</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Spécifie la posture de la police. Utilisez <codeph class="+ topic/ph pr-d/codeph ">FontPosture</codeph>.
	 </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Renvoie la valeur true si une police de périphérique utilisable est disponible avec <codeph class="+ topic/ph pr-d/codeph ">fontName</codeph>, <codeph class="+ topic/ph pr-d/codeph ">fontWeight</codeph> et <codeph class="+ topic/ph pr-d/codeph ">fontPosture</codeph>.
	 
	 <p class="- topic/p ">Les classes flash.text.engine ne peuvent utiliser que des polices de périphérique OpenType et TrueType. Si vous utilisez une police basée sur une ancienne technologie de polices, le moteur d’exécution revient à des polices de périphériques en restituant le texte glyphe par glyphe.</p>
	 
	 </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#FontDescription/fontLookup" class="- topic/link "><linktext class="- topic/linktext ">fontLookup</linktext></link><link href="flash.text.engine.xml#TextBlock/createTextLine()" class="- topic/link "><linktext class="- topic/linktext ">TextBlock.createTextLine()</linktext></link><link href="flash.text.engine.xml#FontPosture" class="- topic/link "><linktext class="- topic/linktext ">FontPosture</linktext></link><link href="flash.text.engine.xml#FontWeight" class="- topic/link "><linktext class="- topic/linktext ">FontWeight</linktext></link></related-links></apiOperation><apiOperation id="flash.text.engine:FontDescription:isFontCompatible" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">isFontCompatible</apiName><shortdesc class="- topic/shortdesc ">
	 Renvoie true si une police incorporée est disponible avec les paramètres fontName, fontWeight et fontPosture spécifiés, où Font.fontType correspond à flash.text.FontType.EMBEDDED_CFF.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Le paramètre <codeph class="+ topic/ph pr-d/codeph ">fontWeight</codeph> spécifié n’appartient pas à <codeph class="+ topic/ph pr-d/codeph ">FontWeight</codeph>.
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Le paramètre <codeph class="+ topic/ph pr-d/codeph ">fontPosture</codeph> spécifié n’appartient pas à <codeph class="+ topic/ph pr-d/codeph ">FontPosture</codeph>.
	  
	  </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> si une police incorporée compatible est disponible, sinon <codeph class="+ topic/ph pr-d/codeph ">false</codeph>.
	 
     </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">fontName</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Nom de la police incorporée à vérifier.
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">fontWeight</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Spécifie l’épaisseur de la police. Utilisez <codeph class="+ topic/ph pr-d/codeph ">FontWeight</codeph>.
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">fontPosture</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Spécifie la posture de la police. Utilisez <codeph class="+ topic/ph pr-d/codeph ">FontPosture</codeph>.
	 </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Renvoie true si une police incorporée est disponible avec les paramètres <codeph class="+ topic/ph pr-d/codeph ">fontName</codeph>, <codeph class="+ topic/ph pr-d/codeph ">fontWeight</codeph> et <codeph class="+ topic/ph pr-d/codeph ">fontPosture </codeph> spécifiés, où <codeph class="+ topic/ph pr-d/codeph ">Font.fontType</codeph> correspond à <codeph class="+ topic/ph pr-d/codeph ">flash.text.FontType.EMBEDDED_CFF</codeph>. Depuis Flash Player 10, le contenu d’une application peut disposer de deux sortes de polices incorporées. Les polices incorporées normales ne sont utilisées que par les objets TextField. Les polices CFF intégrées ne sont utilisées que par les classes flash.text.engine. Les deux types sont différenciés par la propriété <codeph class="+ topic/ph pr-d/codeph ">fontType</codeph> de la classe <codeph class="+ topic/ph pr-d/codeph ">Font</codeph>, telle que renvoyée par la fonction <codeph class="+ topic/ph pr-d/codeph ">enumerateFonts()</codeph>.
	 
	 <p class="- topic/p ">Les classes flash.text.engine ne peuvent pas utiliser une police de type <codeph class="+ topic/ph pr-d/codeph ">EMBEDDED</codeph>. Si <codeph class="+ topic/ph pr-d/codeph ">fontLookup</codeph> est défini sur <codeph class="+ topic/ph pr-d/codeph ">FontLookup.EMBEDDED_CFF</codeph> et que l’unique police disponible au moment de l’exécution avec le nom, l’épaisseur et la posture spécifiés est de type <codeph class="+ topic/ph pr-d/codeph ">EMBEDDED</codeph>, le moteur d’exécution de Flash revient à des polices de périphériques en restituant le texte glyphe par glyphe, comme si aucune police incorporée ne correspondait au nom et au style spécifiés.</p>
	 
	 <p class="- topic/p ">Si des polices <codeph class="+ topic/ph pr-d/codeph ">EMBEDDED</codeph> et <codeph class="+ topic/ph pr-d/codeph ">EMBEDDED_CFF</codeph> sont disponibles avec le même nom, la même épaisseur et la même posture, la police <codeph class="+ topic/ph pr-d/codeph ">EMBEDDED_CFF</codeph> est sélectionnée et le texte est restitué avec la police <codeph class="+ topic/ph pr-d/codeph ">EMBEDDED_CFF</codeph>.</p>
	 
	 </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#FontDescription/fontLookup" class="- topic/link "><linktext class="- topic/linktext ">fontLookup</linktext></link><link href="flash.text.engine.xml#TextBlock/createTextLine()" class="- topic/link "><linktext class="- topic/linktext ">TextBlock.createTextLine()</linktext></link><link href="flash.text.xml#FontType/EMBEDDED_CFF" class="- topic/link "><linktext class="- topic/linktext ">FontType.EMBEDDED_CFF</linktext></link><link href="flash.text.engine.xml#FontPosture" class="- topic/link "><linktext class="- topic/linktext ">FontPosture</linktext></link><link href="flash.text.engine.xml#FontWeight" class="- topic/link "><linktext class="- topic/linktext ">FontWeight</linktext></link></related-links></apiOperation><apiValue id="flash.text.engine:FontDescription:cffHinting:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">cffHinting</apiName><shortdesc class="- topic/shortdesc ">
	 Type de repère CFF utilisé pour ce texte.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Si la propriété est définie sur une valeur n’appartenant pas à <codeph class="+ topic/ph pr-d/codeph ">CFFHinting</codeph>.
	 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Si elle est définie une fois l’objet FontDescription bloqué (la propriété <codeph class="+ topic/ph pr-d/codeph ">locked</codeph> est définie sur <codeph class="+ topic/ph pr-d/codeph ">true</codeph>).
	  
	  </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IllegalOperationError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IllegalOperationError</apiOperationClassifier></apiException></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Type de repère CFF utilisé pour ce texte. Utilisez les constantes <codeph class="+ topic/ph pr-d/codeph ">CFFHinting</codeph> pour cette propriété. Cette propriété s’applique uniquement si la propriété <codeph class="+ topic/ph pr-d/codeph ">RenderingMode</codeph> du texte est définie sur <codeph class="+ topic/ph pr-d/codeph ">RenderingMode.CFF</codeph>.
	 
	 <p class="- topic/p ">Le type de repère CFF (Compact Font Format) utilisé détermine si le moteur d’exécution de Flash force les épaisseurs horizontales fortes à s’aligner sur une grille de sous-pixels ou non.</p>
	 
	 <p class="- topic/p ">S’applique uniquement aux polices incorporées.</p>
	 
	 <p class="- topic/p ">La valeur par défaut est <codeph class="+ topic/ph pr-d/codeph ">CFFHinting.HORIZONTAL_STEM</codeph>.</p>
	 
	 <p class="- topic/p ">Pour la propriété <codeph class="+ topic/ph pr-d/codeph ">CFFHinting</codeph>, vous pouvez utiliser les constantes suivantes de la classe CFFHinting :</p>
	 
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Valeur de chaîne</entry><entry class="- topic/entry ">Description</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">CFFHinting.NONE</codeph></entry><entry class="- topic/entry ">Spécifie aucun repère CFF Les épaisseurs horizontales des glyphes ne sont pas alignées sur la grille de sous-pixels. Ce paramètre convient aux animations ou aux grandes polices.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">CFFHinting.HORIZONTAL_STEM</codeph></entry><entry class="- topic/entry ">Spécifie un repère CFF. Les épaisseurs horizontales fortes sont adaptées à la grille de sous-pixels sur un écran. Pour utiliser ce paramètre, la propriété <codeph class="+ topic/ph pr-d/codeph ">RenderingMode</codeph> doit être définie sur <codeph class="+ topic/ph pr-d/codeph ">RenderingMode.CFF</codeph>.</entry></row></tbody></tgroup></adobetable>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#CFFHinting" class="- topic/link "><linktext class="- topic/linktext ">CFFHinting</linktext></link><link href="flash.text.engine.xml#FontDescription/renderingMode" class="- topic/link "><linktext class="- topic/linktext ">FontDescription.renderingMode</linktext></link><link href="flash.text.engine.xml#RenderingMode" class="- topic/link "><linktext class="- topic/linktext ">RenderingMode</linktext></link></related-links></apiValue><apiValue id="flash.text.engine:FontDescription:fontLookup:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">fontLookup</apiName><shortdesc class="- topic/shortdesc ">
	 Spécifie comment la police doit être recherchée.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Si elle est définie une fois l’objet FontDescription bloqué (la propriété <codeph class="+ topic/ph pr-d/codeph ">locked</codeph> est définie sur <codeph class="+ topic/ph pr-d/codeph ">true</codeph>).
	 
	 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IllegalOperationError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IllegalOperationError</apiOperationClassifier></apiException></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Spécifie comment la police doit être recherchée.
	 
	 <p class="- topic/p ">La valeur par défaut est <codeph class="+ topic/ph pr-d/codeph ">FontLookup.DEVICE</codeph>.</p>
	 
	 <p class="- topic/p ">Pour définir les valeurs pour cette propriété, utilisez les valeurs de chaîne suivantes :</p>
	 
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Valeur de chaîne</entry><entry class="- topic/entry ">Description</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">FontLookup.DEVICE</codeph></entry><entry class="- topic/entry ">Le moteur d’exécution recherche une police de périphérique portant le <codeph class="+ topic/ph pr-d/codeph ">nom</codeph> spécifié sur le système local et l’utilise pour restituer le texte.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">FontLookup.EMBEDDED_CFF</codeph></entry><entry class="- topic/entry ">Le moteur d’exécution recherche une police CFF incorporée portant le <codeph class="+ topic/ph pr-d/codeph ">nom</codeph> à utiliser pour restituer le texte. Seules les polices de type <codeph class="+ topic/ph pr-d/codeph ">flash.text.Font.fontType.EMBEDDED_CFF</codeph> sont prises en compte. Si la police CFF spécifiée n’est pas incorporée à l’application, le moteur d’exécution tente d’utiliser une police de périphérique par défaut pour chaque glyphe. Cette méthode est moins efficace que la sélection directe d’une police de périphérique.</entry></row></tbody></tgroup></adobetable>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#CFFHinting" class="- topic/link "><linktext class="- topic/linktext ">CFFHinting</linktext></link><link href="flash.text.engine.xml#FontLookup" class="- topic/link "><linktext class="- topic/linktext ">FontLookup</linktext></link></related-links></apiValue><apiValue id="flash.text.engine:FontDescription:fontName:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">fontName</apiName><shortdesc class="- topic/shortdesc ">
	 Nom de la police à utiliser, ou liste de noms de police séparés par une virgule.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Si elle est définie une fois l’objet FontDescription bloqué (la propriété <codeph class="+ topic/ph pr-d/codeph ">locked</codeph> est définie sur <codeph class="+ topic/ph pr-d/codeph ">true</codeph>).
	 
	 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IllegalOperationError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IllegalOperationError</apiOperationClassifier></apiException></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Nom de la police à utiliser, ou liste de noms de police séparés par une virgule. Pour le rendu de l’élément, le moteur d’exécution sélectionne la première police disponible dans la liste. Par exemple "Arial, Helvetica, _sans" envoie le lecteur chercher Arial, puis Helvetica s’il ne trouve pas Arial, puis _sans si aucune des deux n’est trouvée.
	 
	 <p class="- topic/p ">Les moteurs d’exécution de Flash prennent en charge trois noms de polices de périphérique génériques : _sans (pour les polices sans serif), _serif (pour les polices serif) et _typewriter (pour les polices à espacement fixe). Ces noms sont associés aux polices de périphérique propres à la plateforme.</p>
	 
	 <p class="- topic/p ">La valeur par défaut est <codeph class="+ topic/ph pr-d/codeph ">"_serif"</codeph>.</p>
	 
	 <p class="- topic/p ">Les moteurs d’exécution de Flash fournissent des polices par défaut pour les glyphes introuvables dans la police sélectionnée. Que la police utilisée soit incorporée ou de périphérique, lorsque le glyphe à restituer y est introuvable, le moteur d’exécution tente de le restituer à l’aide d’une autre police de périphérique susceptible de le contenir.</p>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#FontLookup" class="- topic/link "><linktext class="- topic/linktext ">FontLookup</linktext></link></related-links></apiValue><apiValue id="flash.text.engine:FontDescription:fontPosture:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">fontPosture</apiName><shortdesc class="- topic/shortdesc ">
	 Spécifie la posture de la police.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Si la propriété est définie sur une valeur n’appartenant pas à <codeph class="+ topic/ph pr-d/codeph ">FontPosture</codeph>.
	 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Si elle est définie une fois l’objet FontDescription bloqué (la propriété <codeph class="+ topic/ph pr-d/codeph ">locked</codeph> est définie sur <codeph class="+ topic/ph pr-d/codeph ">true</codeph>).
	 
	 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IllegalOperationError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IllegalOperationError</apiOperationClassifier></apiException></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Spécifie la posture de la police.
	 
	 
	 <p class="- topic/p ">La valeur par défaut est <codeph class="+ topic/ph pr-d/codeph ">FontPosture.NORMAL</codeph>.</p>
	 
	 <p class="- topic/p ">Pour définir les valeurs pour cette propriété, utilisez les constantes suivantes de la classe FontPosture :</p>
	 
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Valeur</entry><entry class="- topic/entry ">Description</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">FontPosture.NORMAL</codeph></entry><entry class="- topic/entry ">Posture de police normale.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">FontPosture.ITALIC</codeph></entry><entry class="- topic/entry ">Posture de police italique.</entry></row></tbody></tgroup></adobetable>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#FontPosture" class="- topic/link "><linktext class="- topic/linktext ">FontPosture</linktext></link></related-links></apiValue><apiValue id="flash.text.engine:FontDescription:fontWeight:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">fontWeight</apiName><shortdesc class="- topic/shortdesc ">
	 Spécifie l’épaisseur de la police.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Si la propriété est définie sur une valeur n’appartenant pas à <codeph class="+ topic/ph pr-d/codeph ">FontWeight</codeph>.
	 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Si elle est définie une fois l’objet FontDescription bloqué (la propriété <codeph class="+ topic/ph pr-d/codeph ">locked</codeph> est définie sur <codeph class="+ topic/ph pr-d/codeph ">true</codeph>).
	  
	  </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IllegalOperationError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IllegalOperationError</apiOperationClassifier></apiException></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Spécifie l’épaisseur de la police.
	 
	 
	 <p class="- topic/p ">La valeur par défaut est <codeph class="+ topic/ph pr-d/codeph ">FontWeight.NORMAL</codeph>.</p>
	 
	 <p class="- topic/p ">Pour définir les valeurs pour cette propriété, utilisez les constantes suivantes de la classe FontWeight :</p>
	 
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Valeur de chaîne</entry><entry class="- topic/entry ">Description</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">FontWeight.NORMAL</codeph></entry><entry class="- topic/entry ">Epaisseur de police normale.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">FontWeight.BOLD</codeph></entry><entry class="- topic/entry ">Epaisseur de police gras.</entry></row></tbody></tgroup></adobetable>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#FontWeight" class="- topic/link "><linktext class="- topic/linktext ">FontWeight</linktext></link></related-links></apiValue><apiValue id="flash.text.engine:FontDescription:locked:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">locked</apiName><shortdesc class="- topic/shortdesc ">
	 Indique si l’objet FontDescription est bloqué ou non.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5." class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Si elle est définie une fois l’objet FontDescription bloqué (la propriété <codeph class="+ topic/ph pr-d/codeph ">locked</codeph> est définie sur <codeph class="+ topic/ph pr-d/codeph ">true</codeph>).
	  
	  </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IllegalOperationError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IllegalOperationError</apiOperationClassifier></apiException></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Indique si l’objet FontDescription est bloqué ou non. Si la propriété est définie sur <codeph class="+ topic/ph pr-d/codeph ">true</codeph>, l’objet FontDescription ne peut pas être modifié. Appelez <codeph class="+ topic/ph pr-d/codeph ">FontDescription.clone()</codeph> pour obtenir une copie non verrouillée de l’objet FontDescription.
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.text.engine:FontDescription:renderingMode:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">renderingMode</apiName><shortdesc class="- topic/shortdesc ">
	 Mode de rendu utilisé pour ce texte. </shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Si la propriété est définie sur une valeur n’appartenant pas à <codeph class="+ topic/ph pr-d/codeph ">RenderingMode</codeph>.
	 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Si elle est définie une fois l’objet FontDescription bloqué (la propriété <codeph class="+ topic/ph pr-d/codeph ">locked</codeph> est définie sur <codeph class="+ topic/ph pr-d/codeph ">true</codeph>).
	  
	  </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IllegalOperationError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IllegalOperationError</apiOperationClassifier></apiException></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Mode de rendu utilisé pour ce texte. Utilisez les constantes <codeph class="+ topic/ph pr-d/codeph ">RenderingMode</codeph> pour cette propriété. 
	 
	 <p class="- topic/p ">S’applique uniquement aux polices incorporées.</p>
	 
	 <p class="- topic/p ">La valeur par défaut est <codeph class="+ topic/ph pr-d/codeph ">RenderingMode.CFF</codeph>.</p>
	 
	 <p class="- topic/p ">Pour définir les valeurs de cette propriété, utilisez les constantes suivantes de la classe RenderingMode :</p>
	 
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Valeur de chaîne</entry><entry class="- topic/entry ">Description</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">RenderingMode.NORMAL</codeph></entry><entry class="- topic/entry ">Applique un rendu de texte normal, correspondant au type de rendu utilisé par Flash Player 7 et les versions précédentes.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">RenderingMode.CFF</codeph></entry><entry class="- topic/entry ">Applique le rendu CFF (Compact Font Format) qui rend le texte plus lisible. (cette fonctionnalité est disponible depuis Flash Player 10). Le rendu CFF permet d’obtenir la qualité du rendu des polices de petite taille.</entry></row></tbody></tgroup></adobetable>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#RenderingMode" class="- topic/link "><linktext class="- topic/linktext ">RenderingMode</linktext></link></related-links></apiValue></apiClassifier><apiClassifier languages="" id="flash.text.engine:GroupElement" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">GroupElement</apiName><shortdesc class="- topic/shortdesc ">
 Un objet GroupElement regroupe un ensemble d’objets TextElement, GraphicElement et d’autres objets GroupElement que vous pouvez affecter comme un tout à la propriété content d’un objet TextBlock.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.text.engine:ContentElement</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Un objet GroupElement regroupe un ensemble d’objets TextElement, GraphicElement et d’autres objets GroupElement que vous pouvez affecter comme un tout à la propriété <codeph class="+ topic/ph pr-d/codeph ">content</codeph> d’un objet TextBlock. Un objet GroupElement peut aussi partager simplement une mise en forme commune au sein d’un autre objet GroupElement. 
 
 <p class="- topic/p ">Lorsqu’un objet GroupElement contient un autre objet GroupElement, l’objet interne conserve sa propre mise en forme (paramètres ElementFormat). Il n’hérite pas de le formatage de l’objet GroupElement externe.</p>
 
 <p class="- topic/p ">La plupart des propriétés de mise en forme n’affectent pas un objet GroupElement. De ce fait, il est possible de créer une ligne de texte pour un objet GroupElement avec un paramètre <codeph class="+ topic/ph pr-d/codeph ">elementFormat</codeph> nul. Quelques propriétés de mise en forme telles que <codeph class="+ topic/ph pr-d/codeph ">kerning</codeph> et <codeph class="+ topic/ph pr-d/codeph ">ligature</codeph> affectent le formatage lorsque des intersections apparaissent entre les membres du groupe. Si le groupe à un format null, le format de l’élément précédent détermine le formatage en présence de telles intersections.</p>
  
 </apiDesc><example conref="examples\GroupElementExample.as" class="- topic/example "> Cet exemple crée une case rouge sous la forme d’un objet GraphicElement et la combine à deux objets TextElement pour créer un objet GroupElement. Il affecte l’objet GroupElement à la propriété <codeph class="+ topic/ph pr-d/codeph ">content</codeph> d’un TextBlock, à partir duquel il crée trois lignes.
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">

package {

    import flash.display.Sprite;
    import flash.display.MovieClip;
    import flash.text.engine.ContentElement;
    import flash.text.engine.TextBlock;
    import flash.text.engine.TextElement;
    import flash.text.engine.GraphicElement;
    import flash.text.engine.GroupElement;
    import flash.text.engine.TextLine;
    import flash.text.engine.ElementFormat;
    import flash.text.engine.FontDescription;
    
    public class GroupElementExample extends Sprite {
        
        public function GroupElementExample():void {
            
            var redBox:MovieClip = new MovieClip();
            redBox.graphics.beginFill(0xCC0000, 1.0);
            redBox.graphics.drawRect(0, 0, 20, 20);
            redBox.graphics.endFill(); 
            
            var format:ElementFormat = new ElementFormat();
            var fontDescription:FontDescription = new FontDescription("Arial");
            format.fontSize = 16;
            format.fontDescription = fontDescription;
            
            var str1:String = "This red box is a GraphicElement ";
            var str2:String = " in the middle of two TextElements, " +
            " which together make " +
            "up a GroupElement in a TextBlock that is broken into three lines.";
            
            var textElement1:TextElement = new TextElement(str1,format);
            var graphicElement:GraphicElement = new GraphicElement(redBox,redBox.width,redBox.height, format);
            var textElement2:TextElement = new TextElement(str2, format);
            var groupVector:Vector.&lt;ContentElement> = new Vector.&lt;ContentElement>();
            groupVector.push(textElement1, graphicElement, textElement2);
            var groupElement = new GroupElement(groupVector);
            var textBlock:TextBlock = new TextBlock();
            textBlock.content = groupElement;
            createTextLines(textBlock);
        }
        
        private function createTextLines(textBlock:TextBlock):void 
        {
        
            var yPos = 20;
            var line_length:Number = 450;
            var textLine:TextLine = textBlock.createTextLine (null, line_length);
 
            while (textLine)
            {
                addChild(textLine);
                textLine.x = 15;
                yPos += textLine.height+8;
                textLine.y = yPos;
                textLine = textBlock.createTextLine(textLine, line_length);
            }
        }
    }    
}


</codeblock></example></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#ContentElement" class="- topic/link "><linktext class="- topic/linktext ">ContentElement</linktext></link><link href="flash.text.engine.xml#GraphicElement" class="- topic/link "><linktext class="- topic/linktext ">GraphicElement</linktext></link><link href="flash.text.engine.xml#TextBlock" class="- topic/link "><linktext class="- topic/linktext ">TextBlock</linktext></link><link href="flash.text.engine.xml#TextElement" class="- topic/link "><linktext class="- topic/linktext ">TextElement</linktext></link></related-links><apiConstructor id="flash.text.engine:GroupElement:GroupElement" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">GroupElement</apiName><shortdesc class="- topic/shortdesc ">
	 Crée une nouvelle occurrence de GroupElement.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">L’<codeph class="+ topic/ph pr-d/codeph ">élément</codeph> spécifié contient des éléments <codeph class="+ topic/ph pr-d/codeph ">null</codeph>.
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">L’<codeph class="+ topic/ph pr-d/codeph ">élément</codeph> spécifié contient un élément qui ne correspond à aucune sous-classe connue de <codeph class="+ topic/ph pr-d/codeph ">ContentElement</codeph>.
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">L’<codeph class="+ topic/ph pr-d/codeph ">élément</codeph> spécifié contient des éléments définis en tant que <codeph class="+ topic/ph pr-d/codeph ">content</codeph> d’un <codeph class="+ topic/ph pr-d/codeph ">TextBlock</codeph>. 
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">L’<codeph class="+ topic/ph pr-d/codeph ">élément</codeph> spécifié contient des éléments appartenant déjà à un groupe, ou qui apparaissent plusieurs fois dans les <codeph class="+ topic/ph pr-d/codeph ">éléments</codeph>.
     	 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">elements</apiItemName><apiType value="Vector$flash.text.engine:ContentElement" name="type" class="- topic/state reference/state apiRef/apiType "/><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Vecteur d’objets ContentElement devant être contenus dans le GroupElement. Le vecteur peut être vide. La valeur par défaut est <codeph class="+ topic/ph pr-d/codeph ">null</codeph>.
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">elementFormat</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.text.engine:ElementFormat</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Format des éléments du groupe. La valeur par défaut est <codeph class="+ topic/ph pr-d/codeph ">null</codeph>. Ce format s’applique aux intersections placées entre les éléments du groupe ; ces éléments n’héritent pas du format.
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">eventMirror</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.events:EventDispatcher</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Objet <codeph class="+ topic/ph pr-d/codeph ">EventDispatcher</codeph> qui reçoit des copies de chaque événement déclenché vers les lignes de texte créées en fonction de cet élément de contenu. La valeur par défaut est <codeph class="+ topic/ph pr-d/codeph ">null</codeph>.
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">textRotation</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">rotate0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Rotation appliquée à l’élément en tant qu’unité. Utilisez les constantes <codeph class="+ topic/ph pr-d/codeph ">TextRotation</codeph> pour cette propriété. La valeur par défaut est <codeph class="+ topic/ph pr-d/codeph ">TextRotation.ROTATE_0</codeph>. 
   	 </apiDesc></apiParam></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Crée une nouvelle occurrence de GroupElement.
	 
	 </apiDesc></apiConstructorDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#ContentElement" class="- topic/link "><linktext class="- topic/linktext ">ContentElement</linktext></link><link href="flash.text.engine.xml#ElementFormat" class="- topic/link "><linktext class="- topic/linktext ">ElementFormat</linktext></link><link href="flash.events.xml#EventDispatcher" class="- topic/link "><linktext class="- topic/linktext ">flash.events.EventDispatcher</linktext></link><link href="flash.text.engine.xml#TextLineMirrorRegion" class="- topic/link "><linktext class="- topic/linktext ">TextLineMirrorRegion</linktext></link><link href="flash.text.engine.xml#TextRotation" class="- topic/link "><linktext class="- topic/linktext ">TextRotation</linktext></link></related-links></apiConstructor><apiOperation id="flash.text.engine:GroupElement:getElementAtCharIndex" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">getElementAtCharIndex</apiName><shortdesc class="- topic/shortdesc ">
	 Renvoie l’élément contenant le caractère spécifié par le paramètre charIndex.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Si <codeph class="+ topic/ph pr-d/codeph ">charIndex</codeph> n’appartient pas à la plage <codeph class="+ topic/ph pr-d/codeph ">0 - rawText.length</codeph>.
	  
	  </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">RangeError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">RangeError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Elément contenant le caractère au niveau de <codeph class="+ topic/ph pr-d/codeph ">charIndex</codeph>
	 
	 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.text.engine:ContentElement</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">charIndex</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Valeur d’index de base zéro du caractère dont vous recherchez l’élément. Une valeur 0 correspond au premier caractère du groupe, pas au premier caractère du TextBlock.
	 
	 </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Renvoie l’élément contenant le caractère spécifié par le paramètre <codeph class="+ topic/ph pr-d/codeph ">charIndex</codeph>.
	 
	 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.text.engine:GroupElement:getElementAt" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">getElementAt</apiName><shortdesc class="- topic/shortdesc ">
	 Récupère un élément dans le groupe.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">si <codeph class="+ topic/ph pr-d/codeph ">index</codeph> est hors limites.
	  
	  </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">RangeError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">RangeError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.text.engine:ContentElement</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">index</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Index de l’élément à récupérer.
	 
	 </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Récupère un élément dans le groupe.
	 
	 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.text.engine:GroupElement:getElementIndex" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">getElementIndex</apiName><shortdesc class="- topic/shortdesc ">
	 Renvoie l’index de l’élément spécifié par le paramètre element.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Index de l’élément spécifié par <codeph class="+ topic/ph pr-d/codeph ">element</codeph> ou -1 si l’élément n’appartient pas au groupe.
	  
	  </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">element</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.text.engine:ContentElement</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Elément du groupe dont vous souhaitez récupérer l’index.
	 
	 </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Renvoie l’index de l’élément spécifié par le paramètre <codeph class="+ topic/ph pr-d/codeph ">element</codeph>.
	 
	 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.text.engine:GroupElement:groupElements" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">groupElements</apiName><shortdesc class="- topic/shortdesc ">
	 Remplace la plage d’éléments que les paramètres beginIndex et endIndex spécifient par un nouveau GroupElement contenant ces éléments.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Si <codeph class="+ topic/ph pr-d/codeph ">beginIndex</codeph> ou <codeph class="+ topic/ph pr-d/codeph ">endIndex</codeph> est hors limites.
	  
	  </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">RangeError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">RangeError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Nouveau groupe.
	 
	 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.text.engine:GroupElement</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">beginIndex</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Valeur d’index de base zéro de la position de départ de la plage à regrouper.
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">endIndex</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Valeur d’index de base zéro suivant la position de fin de la plage à regrouper.
	 </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Remplace la plage d’éléments que les paramètres <codeph class="+ topic/ph pr-d/codeph ">beginIndex</codeph> et <codeph class="+ topic/ph pr-d/codeph ">endIndex</codeph> spécifient par un nouveau <codeph class="+ topic/ph pr-d/codeph ">GroupElement</codeph> contenant ces éléments. Comme prévu, les éléments situés entre beginIndex et endIndex-1 sont remplacés.
	 
	 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.text.engine:GroupElement:mergeTextElements" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">mergeTextElements</apiName><shortdesc class="- topic/shortdesc ">
	 Fusionne le texte de la plage d’éléments spécifiés par les paramètres beginIndex et endIndex dans l’élément défini par beginIndex, sans affecter le formatage de cet élément.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Si <codeph class="+ topic/ph pr-d/codeph ">beginIndex</codeph> ou <codeph class="+ topic/ph pr-d/codeph ">endIndex</codeph> est hors limites.
	 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">RangeError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">RangeError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Si l’un des éléments de la plage spécifiée n’est pas un TextElement.
	 
	 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Premier élément de texte de la plage, contenant à présent l’ensemble du texte de la plage.
	 
	 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.text.engine:TextElement</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">beginIndex</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Valeur d’index de base zéro de la position de départ de la plage à fusionner.
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">endIndex</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Valeur d’index de base zéro suivant la position de fin de la plage à fusionner.
	 </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Fusionne le texte de la plage d’éléments spécifiés par les paramètres <codeph class="+ topic/ph pr-d/codeph ">beginIndex</codeph> et <codeph class="+ topic/ph pr-d/codeph ">endIndex</codeph> dans l’élément défini par <codeph class="+ topic/ph pr-d/codeph ">beginIndex</codeph>, sans affecter le formatage de cet élément. Comme prévu, les éléments situés entre beginIndex et endIndex-1 sont fusionnés. Après la fusion de leur texte, les éléments compris entre beginIndex+1 et endIndex-1 son supprimés du groupe et deviennent orphelins, avec les propriétés <codeph class="+ topic/ph pr-d/codeph ">group</codeph> <codeph class="+ topic/ph pr-d/codeph ">null</codeph>.
	 
	 </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#TextElement" class="- topic/link "><linktext class="- topic/linktext ">TextElement</linktext></link></related-links></apiOperation><apiOperation id="flash.text.engine:GroupElement:replaceElements" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">replaceElements</apiName><shortdesc class="- topic/shortdesc ">
	 Remplace la plage d’éléments que les paramètres beginIndex et endIndex spécifient par le contenu du paramètre newElements.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">La valeur <codeph class="+ topic/ph pr-d/codeph ">beginIndex</codeph> ou <codeph class="+ topic/ph pr-d/codeph ">endIndex</codeph> est hors limite.
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">RangeError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">RangeError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Les <codeph class="+ topic/ph pr-d/codeph ">newElements</codeph> spécifiés contiennent des éléments <codeph class="+ topic/ph pr-d/codeph ">null</codeph>.
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Les <codeph class="+ topic/ph pr-d/codeph ">newElements</codeph> spécifiés contiennent <codeph class="+ topic/ph pr-d/codeph ">this</codeph>.
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Les <codeph class="+ topic/ph pr-d/codeph ">newElements</codeph> spécifiés contiennent des éléments qui ne correspondent pas à une sous-classe connue de <codeph class="+ topic/ph pr-d/codeph ">ContentElement</codeph>.
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Les <codeph class="+ topic/ph pr-d/codeph ">newElements</codeph> spécifiés contiennent des éléments définis en tant que <codeph class="+ topic/ph pr-d/codeph ">content</codeph> d’un <codeph class="+ topic/ph pr-d/codeph ">TextBlock</codeph>. 
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Les <codeph class="+ topic/ph pr-d/codeph ">newElements</codeph> spécifiés contiennent des éléments appartenant déjà à un groupe, ou qui apparaissent plusieurs fois dans les <codeph class="+ topic/ph pr-d/codeph ">éléments</codeph>.
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Si l’opération résulte en rotations imbriquées dans <codeph class="+ topic/ph pr-d/codeph ">GroupElement</codeph>.
	 
	 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Vecteur contenant les éléments qui ont été remplacés.
	  
     </apiDesc><apiType value="Vector$flash.text.engine:ContentElement" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">beginIndex</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Valeur d’index de base zéro pour la position de début de la plage de remplacement.
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">endIndex</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Valeur d’index de base zéro suivant la position de fin de la plage de remplacement.
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">newElements</apiItemName><apiType value="Vector$flash.text.engine:ContentElement" name="type" class="- topic/state reference/state apiRef/apiType "/><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Eléments à utiliser pour remplacer la plage d’éléments spécifiée.
	 </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Remplace la plage d’éléments que les paramètres <codeph class="+ topic/ph pr-d/codeph ">beginIndex</codeph> et <codeph class="+ topic/ph pr-d/codeph ">endIndex</codeph> spécifient par le contenu du paramètre <codeph class="+ topic/ph pr-d/codeph ">newElements. </codeph> Les éléments situés entre beginIndex et endIndex-1 sont remplacés.
	 <p class="- topic/p ">Pour supprimer des éléments, transmettez <codeph class="+ topic/ph pr-d/codeph ">null</codeph> pour <codeph class="+ topic/ph pr-d/codeph ">newElements</codeph>. Pour insérer un élément, transmettez la même valeur pour <codeph class="+ topic/ph pr-d/codeph ">beginIndex</codeph> et <codeph class="+ topic/ph pr-d/codeph ">endIndex</codeph>. Le nouvel élément est inséré avant l’index spécifié. Pour ajouter un élément, transmettez <codeph class="+ topic/ph pr-d/codeph ">elementCount</codeph> pour <codeph class="+ topic/ph pr-d/codeph ">beginIndex</codeph> et <codeph class="+ topic/ph pr-d/codeph ">endIndex</codeph>.</p>
	 <p class="- topic/p ">Après l’opération, les éléments remplacés sont orphelins, avec des propriétés <codeph class="+ topic/ph pr-d/codeph ">group</codeph> <codeph class="+ topic/ph pr-d/codeph ">null</codeph>, puis sont renvoyés.</p>
	 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.text.engine:GroupElement:setElements" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">setElements</apiName><shortdesc class="- topic/shortdesc ">
	 Définit les éléments du groupe sur le contenu du vecteur.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">La <codeph class="+ topic/ph pr-d/codeph ">valeur</codeph> spécifiée contient des éléments <codeph class="+ topic/ph pr-d/codeph ">null</codeph>.
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">La <codeph class="+ topic/ph pr-d/codeph ">valeur</codeph> spécifiée contient <codeph class="+ topic/ph pr-d/codeph ">this</codeph>.
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">La <codeph class="+ topic/ph pr-d/codeph ">valeur</codeph> spécifiée contient des éléments qui ne correspondent pas à une sous-classe connue de <codeph class="+ topic/ph pr-d/codeph ">ContentElement</codeph>.
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">La <codeph class="+ topic/ph pr-d/codeph ">valeur</codeph> spécifiée contient des éléments spécifiés en tant que <codeph class="+ topic/ph pr-d/codeph ">content</codeph> d’un <codeph class="+ topic/ph pr-d/codeph ">TextBlock</codeph>. 
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">La <codeph class="+ topic/ph pr-d/codeph ">valeur</codeph> spécifiée contient des éléments appartenant déjà à un groupe, ou qui apparaissent plusieurs fois dans la <codeph class="+ topic/ph pr-d/codeph ">valeur</codeph>.
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Si l’opération résulte en rotations imbriquées dans <codeph class="+ topic/ph pr-d/codeph ">GroupElement</codeph>.
	  
	  </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">value</apiItemName><apiType value="Vector$flash.text.engine:ContentElement" name="type" class="- topic/state reference/state apiRef/apiType "/></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Définit les éléments du groupe sur le contenu du vecteur.
	 
	 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.text.engine:GroupElement:splitTextElement" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">splitTextElement</apiName><shortdesc class="- topic/shortdesc ">
	 Scinde un objet TextElement en deux et crée un nouvel objet TextElement à la position spécifiée.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Si <codeph class="+ topic/ph pr-d/codeph ">elementIndex</codeph> ou <codeph class="+ topic/ph pr-d/codeph ">charIndex</codeph> est hors limites.
	 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">RangeError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">RangeError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Si l’élément au niveau de <codeph class="+ topic/ph pr-d/codeph ">elementIndex</codeph> n’est pas un TextElement.
	 
	 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Nouvel élément de texte contenant la dernière partie de l’élément de texte d’origine.
	 
	 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.text.engine:TextElement</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">elementIndex</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Valeur d’index de base zéro de la position de l’élément dans le groupe.
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">splitIndex</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Valeur d’index de base zéro du caractère dans le TextElement où se produit la division. Le caractère spécifié est le premier caractère du nouveau TextElement.
	 </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Scinde un objet TextElement en deux et crée un nouvel objet TextElement à la position spécifiée.
	 
	 </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#TextElement" class="- topic/link "><linktext class="- topic/linktext ">TextElement</linktext></link></related-links></apiOperation><apiOperation id="flash.text.engine:GroupElement:ungroupElements" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">ungroupElements</apiName><shortdesc class="- topic/shortdesc ">
	 Annule le regroupement des éléments d’un GroupElement imbriqué que groupIndex spécifie au sein d’un objet GroupElement externe.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Si <codeph class="+ topic/ph pr-d/codeph ">groupIndex</codeph> est hors limites.
	 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">RangeError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">RangeError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Si l’élément au niveau de <codeph class="+ topic/ph pr-d/codeph ">groupIndex</codeph> n’est pas un objet GroupElement.
	  
	  </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">groupIndex</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Valeur d’index de base zéro de la position du groupe à diviser.
	 
	 </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Annule le regroupement des éléments d’un GroupElement imbriqué que <codeph class="+ topic/ph pr-d/codeph ">groupIndex</codeph> spécifie au sein d’un objet GroupElement externe. Après l’opération, les éléments dégroupés remplacent le GroupElement imbriqué, qui devient un orphelin avec une propriété <codeph class="+ topic/ph pr-d/codeph ">group</codeph> <codeph class="+ topic/ph pr-d/codeph ">null</codeph>.
	 
	 </apiDesc></apiOperationDetail></apiOperation><apiValue id="flash.text.engine:GroupElement:elementCount:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">elementCount</apiName><shortdesc class="- topic/shortdesc ">
	 Nombre d’éléments dans le groupe.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">int</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Nombre d’éléments dans le groupe.
	 
	 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.text.engine:ContentElement" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">ContentElement</apiName><shortdesc class="- topic/shortdesc ">
 La classe ContentElement sert de classe de base pour les types d’éléments susceptibles d’apparaître dans un GroupElement, c’est-à-dire un GraphicElement, un autre GroupElement ou un TextElement.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 La classe ContentElement sert de classe de base pour les types d’éléments susceptibles d’apparaître dans un GroupElement, c’est-à-dire un GraphicElement, un autre GroupElement ou un TextElement.
 
 <p class="- topic/p ">ContentElement est une classe de base abstraite. De ce fait, il est impossible de l’instancier directement. Appeler <codeph class="+ topic/ph pr-d/codeph ">new ContentElement()</codeph> renvoie une exception <codeph class="+ topic/ph pr-d/codeph ">ArgumentError</codeph>. </p>
 
 <p class="- topic/p ">Vous pouvez affecter un élément ContentElement à un <codeph class="+ topic/ph pr-d/codeph ">GroupElement</codeph> précisément ou à la propriété <codeph class="+ topic/ph pr-d/codeph ">content</codeph> d’un seul bloc de texte.</p>
 
 </apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#ElementFormat" class="- topic/link "><linktext class="- topic/linktext ">ElementFormat</linktext></link><link href="flash.text.engine.xml#GraphicElement" class="- topic/link "><linktext class="- topic/linktext ">GraphicElement</linktext></link><link href="flash.text.engine.xml#GroupElement" class="- topic/link "><linktext class="- topic/linktext ">GroupElement</linktext></link><link href="flash.text.engine.xml#TextBlock/content" class="- topic/link "><linktext class="- topic/linktext ">TextBlock.content</linktext></link><link href="flash.text.engine.xml#TextElement" class="- topic/link "><linktext class="- topic/linktext ">TextElement</linktext></link><link href="flash.text.engine.xml#TextLineMirrorRegion" class="- topic/link "><linktext class="- topic/linktext ">TextLineMirrorRegion</linktext></link><link href="flash.text.engine.xml#TextRotation" class="- topic/link "><linktext class="- topic/linktext ">TextRotation</linktext></link></related-links><apiConstructor id="flash.text.engine:ContentElement:ContentElement" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">ContentElement</apiName><shortdesc class="- topic/shortdesc ">
	L’appel du constructeur new ContentElement() renvoie une exception ArgumentError.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">elementFormat</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.text.engine:ElementFormat</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Format de l’élément pour le texte dans l’élément. La valeur par défaut est <codeph class="+ topic/ph pr-d/codeph ">null</codeph>.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">eventMirror</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.events:EventDispatcher</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Objet <codeph class="+ topic/ph pr-d/codeph ">EventDispatcher</codeph> qui reçoit des copies de chaque événement déclenché pour valider les lignes de texte créées en fonction de cet élément de contenu. La valeur par défaut est <codeph class="+ topic/ph pr-d/codeph ">null</codeph>.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">textRotation</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">rotate0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Rotation appliquée à l’élément en tant qu’unité. Utilisez les constantes <codeph class="+ topic/ph pr-d/codeph ">TextRotation</codeph> pour cette propriété. La valeur par défaut est <codeph class="+ topic/ph pr-d/codeph ">TextRotation.ROTATE_0</codeph>.
   	</apiDesc></apiParam></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	L’appel du constructeur <codeph class="+ topic/ph pr-d/codeph ">new ContentElement()</codeph> renvoie une exception <codeph class="+ topic/ph pr-d/codeph ">ArgumentError</codeph>. Vous <i class="+ topic/ph hi-d/i ">pouvez</i> cependant appeler des constructeurs pour les sous-classes suivantes de ContentElement :
	
	<ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">new GraphicElement()</codeph></li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">new GroupElement()</codeph></li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">new TextElement()</codeph></li></ul>
	
 	</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="flash.text.engine:ContentElement:GRAPHIC_ELEMENT" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">GRAPHIC_ELEMENT</apiName><shortdesc class="- topic/shortdesc "> 
	Indique la présence d’un élément graphique dans le texte.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">0xFDEF</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">uint</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	Indique la présence d’un élément graphique dans le texte.
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#ContentElement/rawText" class="- topic/link "><linktext class="- topic/linktext ">rawText</linktext></link></related-links></apiValue><apiValue id="flash.text.engine:ContentElement:userData" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">userData</apiName><shortdesc class="- topic/shortdesc ">
	 Permet à une application d’associer des données arbitraires à l’élément.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiType value="" name="type" class="- topic/state reference/state apiRef/apiType "/></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Permet à une application d’associer des données arbitraires à l’élément.
	 
	 <p class="- topic/p ">La valeur par défaut est <codeph class="+ topic/ph pr-d/codeph ">null</codeph>.</p>
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.text.engine:ContentElement:elementFormat:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">elementFormat</apiName><shortdesc class="- topic/shortdesc ">
	 Objet ElementFormat utilisé pour l’élément.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.text.engine:ElementFormat</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Objet ElementFormat utilisé pour l’élément.
	 
	 <p class="- topic/p ">La valeur par défaut est <codeph class="+ topic/ph pr-d/codeph ">null</codeph>.</p>
	 
	 <p class="- topic/p ">Lorsque la propriété <codeph class="+ topic/ph pr-d/codeph ">elementFormat</codeph> est définie, l’objet ElementFormat fourni est bloqué : sa propriété <codeph class="+ topic/ph pr-d/codeph ">locked</codeph> est définie sur <codeph class="+ topic/ph pr-d/codeph ">true</codeph>. Il est impossible de modifier un objet ElementFormat bloqué.</p>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#ElementFormat" class="- topic/link "><linktext class="- topic/linktext ">ElementFormat</linktext></link><link href="flash.text.engine.xml#TextBlock" class="- topic/link "><linktext class="- topic/linktext ">TextBlock</linktext></link><link href="flash.text.engine.xml#TextElement" class="- topic/link "><linktext class="- topic/linktext ">TextElement</linktext></link></related-links></apiValue><apiValue id="flash.text.engine:ContentElement:eventMirror:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">eventMirror</apiName><shortdesc class="- topic/shortdesc ">
	 Objet EventDispatcher qui reçoit des copies de chaque événement distribué pour valider les lignes de texte créées en fonction de cet élément de contenu.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.events:EventDispatcher</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Objet <codeph class="+ topic/ph pr-d/codeph ">EventDispatcher</codeph> qui reçoit des copies de chaque événement distribué pour valider les lignes de texte créées en fonction de cet élément de contenu. L’objet spécifié peut être utilisé pour configurer des écouteurs pour un lien texte ou un autre morceau de texte interactif. En effet, il peut s’avérer difficile de déterminer au moment de l’exécution quelles parties des lignes résultent de tels ou tels éléments de contenu. Vous pouvez également utiliser des écouteurs pour appliquer des décorations, telles que des soulignements, dont vous ne pouvez pas déterminer les mesures après la disposition du texte. La valeur par défaut est <codeph class="+ topic/ph pr-d/codeph ">null</codeph>, c’est-à-dire que aucun des événements mis en miroir n’est déclenché.
	 
	 <p class="- topic/p ">Les miroirs d’événements se manifestent dans les lignes de texte sous forme d’occurrence de la classe <codeph class="+ topic/ph pr-d/codeph ">TextLineMirrorRegion</codeph>. Selon le traitement bidirectionnel et les sauts de ligne, une ou plusieurs zones miroir peuvent être produites.</p>
	 
	 <p class="- topic/p ">La valeur par défaut est <codeph class="+ topic/ph pr-d/codeph ">null</codeph>.</p>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.events.xml#EventDispatcher" class="- topic/link "><linktext class="- topic/linktext ">flash.events.EventDispatcher</linktext></link><link href="flash.text.engine.xml#TextLineMirrorRegion" class="- topic/link "><linktext class="- topic/linktext ">TextLineMirrorRegion</linktext></link></related-links></apiValue><apiValue id="flash.text.engine:ContentElement:groupElement:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">groupElement</apiName><shortdesc class="- topic/shortdesc ">
	 Objet GroupElement contenant cet élément, ou null s’il ne fait pas partie d’un groupe.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.text.engine:GroupElement</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Objet GroupElement contenant cet élément, ou <codeph class="+ topic/ph pr-d/codeph ">null</codeph> s’il ne fait pas partie d’un groupe.
	 
	 <p class="- topic/p ">La valeur par défaut est <codeph class="+ topic/ph pr-d/codeph ">null</codeph>.</p>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#GroupElement" class="- topic/link "><linktext class="- topic/linktext ">GroupElement</linktext></link></related-links></apiValue><apiValue id="flash.text.engine:ContentElement:rawText:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">rawText</apiName><shortdesc class="- topic/shortdesc ">
	 Copie du texte dans l’élément, y compris les caractères U+FDEF.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Copie du texte dans l’élément, y compris les caractères U+FDEF. Le caractère Unicode U+FDEF marque l’emplacement d’un élément graphique dans la chaîne.
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.text.engine:ContentElement:textBlockBeginIndex:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">textBlockBeginIndex</apiName><shortdesc class="- topic/shortdesc ">
	 Index du premier caractère de cet élément dans le bloc de texte.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">int</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Index du premier caractère de cet élément dans le bloc de texte. Cette valeur n’est pas mise en cache mais calculée à chaque appel de cette méthode.
	 
	 <p class="- topic/p ">La valeur par défaut est -1.</p>
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.text.engine:ContentElement:textBlock:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">textBlock</apiName><shortdesc class="- topic/shortdesc ">
	 TextBlock auquel appartient l’élément.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.text.engine:TextBlock</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 TextBlock auquel appartient l’élément.
	 
	 <p class="- topic/p ">La valeur par défaut est <codeph class="+ topic/ph pr-d/codeph ">null</codeph>.</p>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#TextBlock" class="- topic/link "><linktext class="- topic/linktext ">TextBlock</linktext></link></related-links></apiValue><apiValue id="flash.text.engine:ContentElement:textRotation:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">textRotation</apiName><shortdesc class="- topic/shortdesc ">
	 Rotation à appliquer à l’élément en tant qu’unité.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Si la propriété est définie sur une valeur n’appartenant pas à TextRotation.
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Si la propriété est définie sur <codeph class="+ topic/ph pr-d/codeph ">TextRotation.AUTO</codeph>.
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Si l’opération résulte en rotations imbriquées dans un GroupElement.
	  
	  </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Rotation à appliquer à l’élément en tant qu’unité. Utilisez les constantes <codeph class="+ topic/ph pr-d/codeph ">TextRotation</codeph> pour cette propriété. 
	 
	 <p class="- topic/p ">La valeur par défaut est <codeph class="+ topic/ph pr-d/codeph ">TextRotation.ROTATE_0</codeph>.</p>
	 
	 <p class="- topic/p ">La rotation finale des glyphes est la somme de <codeph class="+ topic/ph pr-d/codeph ">, ElementFormat.textRotation</codeph>, <codeph class="+ topic/ph pr-d/codeph ">ContentElement.textRotation</codeph> et <codeph class="+ topic/ph pr-d/codeph ">TextBlock.lineRotation</codeph>.</p>
	 
	 <p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">ContentElement.textRotation</codeph> est généralement utilisé pour créer une brève exécution de texte dont la rotation diffère de la ligne conteneur. Les exécutions TCY du texte japonais en sont un exemple. TCY est l’acronyme de Tate-Chu-Yoko et fait référence à une petite séquence de texte horizontale (généralement un nombre) dans un texte japonais vertical. Pour créer un paragraphe de texte japonais vertical contenant une séquence TCY, procédez comme suit :</p>
	 <ol class="- topic/ol "><li class="- topic/li ">Définissez <codeph class="+ topic/ph pr-d/codeph ">TextBlock.lineRotation=TextRotation.ROTATE_90</codeph></li><li class="- topic/li ">Définissez <codeph class="+ topic/ph pr-d/codeph ">TextBlock.content</codeph> sur un GroupElement, composé de trois objets TextElement. Le premier de ces éléments est le texte japonais avant l’exécution TCY, le second est le texte latin de l’exécution TCY et le troisième est le texte japonais après l’exécution TCY.</li><li class="- topic/li ">Définissez la propriété <codeph class="+ topic/ph pr-d/codeph ">textRotation</codeph> du TextElement TCY sur <codeph class="+ topic/ph pr-d/codeph ">TextRotation.ROTATE_270</codeph>. L’élément de texte TCY pivote en tant qu’unité. Il commence par une rotation de 90 degrés héritée de la ligne. Une nouvelle rotation de 270 degrés le ramène à l’horizontale.</li></ol>
	 
	 <p class="- topic/p ">Les éléments de contenu qui ont subi une rotation ne peuvent pas être imbriqués. Dans toute hiérarchie d’éléments de contenu, quelle que soit la complexité, il n’est possible de définir la propriété <codeph class="+ topic/ph pr-d/codeph ">textRotation</codeph> que d’un seul élément de contenu. Les méthodes et définitions de propriétés suivantes renvoient une erreur d’argument si des rotations imbriquées sont détectées :</p>
	 <ol class="- topic/ol "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">ContentElement.textRotation</codeph></li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">GroupElement.setElements</codeph></li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">GroupElement.replaceElements</codeph></li></ol>
	 
	 <p class="- topic/p ">Pour définir les valeurs pour cette propriété, utilisez les valeurs de chaîne suivantes :</p>
	 
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Valeur de chaîne</entry><entry class="- topic/entry ">Description</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">TextRotation.ROTATE_0</codeph></entry><entry class="- topic/entry ">L’élément ne pivote pas.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">TextRotation.ROTATE_90</codeph></entry><entry class="- topic/entry ">L’élément pivote de 90 degrés vers la droite.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">TextRotation.ROTATE_180</codeph></entry><entry class="- topic/entry ">L’élément pivote de 180 degrés.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">TextRotation.ROTATE_270</codeph></entry><entry class="- topic/entry ">L’élément pivote de 270 degrés vers la droite.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">TextRotation.AUTO</codeph></entry><entry class="- topic/entry ">Non pris en charge.</entry></row></tbody></tgroup></adobetable>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#TextRotation" class="- topic/link "><linktext class="- topic/linktext ">TextRotation</linktext></link><link href="flash.text.engine.xml#ElementFormat/textRotation" class="- topic/link "><linktext class="- topic/linktext ">ElementFormat.textRotation</linktext></link><link href="flash.text.engine.xml#TextBlock/lineRotation" class="- topic/link "><linktext class="- topic/linktext ">TextBlock.lineRotation</linktext></link></related-links></apiValue><apiValue id="flash.text.engine:ContentElement:text:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">text</apiName><shortdesc class="- topic/shortdesc ">
	 Copie du texte dans l’élément, à l’exception des caractères U+FDEF représentant les éléments graphiques dans la chaîne.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Copie du texte dans l’élément, à l’exception des caractères U+FDEF représentant les éléments graphiques dans la chaîne.
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#TextElement/text" class="- topic/link "><linktext class="- topic/linktext ">TextElement.text</linktext></link></related-links></apiValue></apiClassifier><apiClassifier languages="" id="flash.text.engine:TextBlock" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">TextBlock</apiName><shortdesc class="- topic/shortdesc ">
 La classe TextBlock est une usine de création d’objets TextLine, que vous pouvez restituer en les plaçant dans la liste d’affichage.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 La classe TextBlock est une usine de création d’objets TextLine, que vous pouvez restituer en les plaçant dans la liste d’affichage.
 
 <p class="- topic/p ">La classe TextBlock est destinée à contenir un seul paragraphe car les algorithmes bidirectionnels Unicode et de saut de ligne fonctionnent sur un paragraphe à la fois. Pour les applications composées de plusieurs paragraphes de texte, utilisez un langage de balisage, ou une analyse de texte, pour diviser le texte en paragraphes et créer un seul TextBlock par paragraphe.</p>
 
 <p class="- topic/p ">L’objet TextBlock stocke son contenu dans la propriété <codeph class="+ topic/ph pr-d/codeph ">content</codeph>, une occurrence de la classe ContentElement. Comme vous ne pouvez pas créer d’occurrence de la classe ContentElement, définissez <codeph class="+ topic/ph pr-d/codeph ">content</codeph> sur une occurrence de l’une de ses sous-classes : TextElement, GraphicElement ou GroupElement. Utilisez TextElement pour du contenu texte seulement, GraphicElement pour une image ou du contenu graphique et GroupElement pour du contenu combinant des objets TextElement, GraphicElement et d’autres objets GroupElement. Pour plus d’informations sur la gestion des séquences de texte formatées, des sous-séquences intégrées et des éléments graphiques, reportez-vous à la classe ContentElement et à ses sous-classes.</p>
 
 <p class="- topic/p ">Après avoir créé l’occurrence de TextBlock et défini la propriété <codeph class="+ topic/ph pr-d/codeph ">content</codeph>, appelez la méthode <codeph class="+ topic/ph pr-d/codeph ">createTextLine()</codeph> pour créer des lignes de texte, correspondant à des occurrences de la classe <codeph class="+ topic/ph pr-d/codeph ">TextLine</codeph>. </p>
 
 </apiDesc><example conref="examples\TextBlockExample.as" class="- topic/example "> Cet exemple affiche trois paragraphes TextBlock de texte japonais et anglais. Le texte japonais est converti en chaînes à partir de codes de caractères Unicode. Lorsque vous cliquez sur le bouton, l’exemple fait pivoter le texte de horizontal à vertical, ou inversement.
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
package { 
    import fl.controls.Button;
     import flash.text.engine.TextBlock;
    import flash.text.engine.TextLine;
    import flash.text.engine.TextElement;
    import flash.text.engine.ElementFormat;
    import flash.text.engine.TextRotation;
    import flash.text.engine.TextBaseline;
    import flash.text.engine.LineJustification;
    import flash.text.engine.FontDescription;
    import flash.text.engine.EastAsianJustifier; 
    import flash.display.Loader;
    import flash.display.Sprite;
    import flash.display.Stage;
    import flash.events.MouseEvent;
    import flash.system.Capabilities;
    
    public class TextBlockExample extends Sprite {
        
        var vertical:Boolean;    
        var container:Sprite;
        var textBlocks:Vector.&lt;TextBlock>;
        var loader:Loader = new Loader();
        var directionButton:Button = new Button();
        
        public function TextBlockExample():void {
            addChild(directionButton);
            directionButton.width = 30;
            directionButton.move(50, 350);
            directionButton.addEventListener(MouseEvent.CLICK, clickHandler);
            createContent();
            createLines();
        }

        private function createEmptyBlock():TextBlock {
        
            var textBlock:TextBlock = new TextBlock();
            textBlock.baselineZero = TextBaseline.IDEOGRAPHIC_CENTER;
            textBlock.textJustifier = new EastAsianJustifier("ja", LineJustification.ALL_BUT_LAST);
            textBlock.lineRotation = vertical? TextRotation.ROTATE_90: TextRotation.ROTATE_0;
            return textBlock;    
        }
        
        private function paragraph1(format:ElementFormat):TextBlock {
        
            var textBlock:TextBlock = createEmptyBlock();
            textBlock.content = new TextElement(
            String.fromCharCode(
                0x5185, 0x95A3, 0x5E9C, 0x304C, 0x300C, 0x653F, 0x5E9C, 0x30A4,
                0x30F3, 0x30BF, 0x30FC, 0x30CD, 0x30C3, 0x30C8, 0x30C6, 0x30EC, 
                0x30D3, 0x300D, 0x306E, 0x52D5, 0x753B, 0x914D, 0x4FE1, 0x5411, 
                0x3051, 0x306B, 0x30A2, 0x30C9, 0x30D3, 0x30B7, 0x30B9, 0x30C6, 
                0x30E0, 0x30BA, 0x793E, 0x306E
            ) +
            "FMS 2" +
            String.fromCharCode(0x3092, 0x63A1, 0x7528, 0x3059, 0x308B, 0x3068, 
                0x767a, 0x8868, 0x3057, 0x307e, 0x3057, 0x305F, 0x3002), format);
            return textBlock;
        }

        private function paragraph2(format:ElementFormat):TextBlock {
            
            var textBlock:TextBlock = createEmptyBlock();
            textBlock.content = new TextElement(
            String.fromCharCode(
                0x30AF, 0x30ED, 0x30B9, 0x30D7, 0x30E9, 0x30C3, 0x30C8, 0x30D5, 
                0x30A9, 0x30FC, 0x30E0, 0x4E0A, 0x3067, 0x518D, 0x751F, 0x53EF, 
                0x80FD, 0x306A
            ) + 
            "Flash Video" +
            String.fromCharCode(
                0x3092, 0x914D, 0x4FE1, 0x3001, 0x653F, 0x5E9C, 0x6700, 0x65B0, 
                0x60C5, 0x5831, 0x3092, 0x3088, 0x308A, 0x591A, 0x304F, 0x306E, 
                0x56FD, 0x6C11, 0x306B, 0x9AD8, 0x54C1, 0x8CEA, 0x306A, 0x753B, 
                0x50CF, 0x3067, 0x7C21, 0x5358, 0x304B, 0x3064, 0x30EA, 0x30A2, 
                0x30EB, 0x30BF, 0x30A4, 0x30E0, 0x306B, 0x63D0, 0x4F9B, 0x3059, 
                0x308B, 0x3053, 0x3068, 0x304C, 0x53EF, 0x80FD, 0x306B, 0x306A, 
                0x308A, 0x307e, 0x3057, 0x305F, 0x3002), format);
            return textBlock;    
        }

        private function paragraph3(format:ElementFormat):TextBlock {
            
            var textBlock:TextBlock = createEmptyBlock();
            textBlock.content = new TextElement(
            String.fromCharCode(0x3010) +
            "2007" +
            String.fromCharCode(0x5E74) + "2" + String.fromCharCode(0x6708) +
            "21" +
            String.fromCharCode(0x65E5, 0x3011),
            format);
            return textBlock;    
        }

        private function createContent():void {
            
            var font:FontDescription = new FontDescription();
            if (Capabilities.os.search("Mac OS") > -1) 
                font.fontName = String.fromCharCode(0x5C0F, 0x585A, 0x660E, 0x671D) + " Pro R"; // "Kozuka Mincho Pro R"                    koFont.fontName = "Adobe " + String.fromCharCode(0xBA85, 0xC870) + " Std M"; // "Adobe Myungjo Std M"
            else 
                font.fontName = "Kozuka Mincho Pro R";        
            var format:ElementFormat = new ElementFormat();
            format.fontDescription = font;
            format.fontSize = 12;
            format.locale = "ja";
            format.color = 0x000000;
            if (!vertical) 
                format.textRotation = TextRotation.ROTATE_0; 
            textBlocks = new Vector.&lt;TextBlock>();
            textBlocks.push(
                paragraph1(format),
                paragraph2(format),
                paragraph3(format)//,
            );
        }

        private function createLines():void {    
        
            if (container != null) {
                removeChild(container);
            }            
            container = new Sprite();
            container.y = 45;
            container.x = 40;
            addChild(container);
            var linePosition:Number = vertical? this.stage.stageWidth - 120: 12;
        
            for (var i:uint = 0; i &lt; textBlocks.length; i++) {
                var textBlock:TextBlock = textBlocks[i];
                var previousLine:TextLine = null;
        
                while (true) {
                    var textLine:TextLine = textBlock.createTextLine(
                        previousLine, 
                        300);
                    if (textLine == null) 
                        break;
                    if (vertical) 
                    {
                        textLine.x = linePosition;
                        linePosition -= 24;
                        directionButton.label = " -- ";
                    }
                    else 
                    {
                        textLine.y = linePosition+50;
                        linePosition += 24;
                        directionButton.label = " | ";
                    }
                    container.addChild(textLine);                
                    previousLine = textLine;
                }
                if (vertical) 
                    linePosition -= 16;
                else 
                    linePosition += 16; 
            }
        }

        private function clickHandler(event:MouseEvent):void {
            
            vertical = !vertical;
            createContent();
            createLines();
        }
    }
}
</codeblock></example></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#ContentElement" class="- topic/link "><linktext class="- topic/linktext ">ContentElement</linktext></link><link href="flash.text.engine.xml#GraphicElement" class="- topic/link "><linktext class="- topic/linktext ">GraphicElement</linktext></link><link href="flash.text.engine.xml#GroupElement" class="- topic/link "><linktext class="- topic/linktext ">GroupElement</linktext></link><link href="flash.text.engine.xml#TextBaseline" class="- topic/link "><linktext class="- topic/linktext ">TextBaseline</linktext></link><link href="flash.text.engine.xml#TextElement" class="- topic/link "><linktext class="- topic/linktext ">TextElement</linktext></link><link href="flash.text.engine.xml#TextJustifier" class="- topic/link "><linktext class="- topic/linktext ">TextJustifier</linktext></link><link href="flash.text.engine.xml#TextLine" class="- topic/link "><linktext class="- topic/linktext ">TextLine</linktext></link><link href="flash.text.engine.xml#TextRotation" class="- topic/link "><linktext class="- topic/linktext ">TextRotation</linktext></link><link href="flash.text.engine.xml#TabStop" class="- topic/link "><linktext class="- topic/linktext ">TabStop</linktext></link></related-links><apiConstructor id="flash.text.engine:TextBlock:TextBlock" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">TextBlock</apiName><shortdesc class="- topic/shortdesc ">
 	 Crée un objet TextBlock
	 
	 </shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Le <codeph class="+ topic/ph pr-d/codeph ">contenu</codeph> spécifié n’est pas une sous-classe connue de <codeph class="+ topic/ph pr-d/codeph ">ContentElement</codeph>.
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Le <codeph class="+ topic/ph pr-d/codeph ">contenu</codeph> spécifié est déjà membre d’un groupe.
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Le paramètre <codeph class="+ topic/ph pr-d/codeph ">lineRotation</codeph> spécifié n’appartient pas à <codeph class="+ topic/ph pr-d/codeph ">TextRotation</codeph>.
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Le paramètre <codeph class="+ topic/ph pr-d/codeph ">baselineZero</codeph> spécifié n’appartient pas à<codeph class="+ topic/ph pr-d/codeph ">TextBaseline</codeph>.
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Le paramètre <codeph class="+ topic/ph pr-d/codeph ">bidiLevel</codeph> spécifié est inférieur à 0.
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Les <codeph class="+ topic/ph pr-d/codeph ">tabStops</codeph> spécifiés contiennent des éléments <codeph class="+ topic/ph pr-d/codeph ">null</codeph>.
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Les <codeph class="+ topic/ph pr-d/codeph ">tabStops</codeph> spécifiés ne sont pas stockés par position croissante.
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">La <codeph class="+ topic/ph pr-d/codeph ">baselineFontSize</codeph> spécifiée est inférieure à 0.
 	  
 	  </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">content</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.text.engine:ContentElement</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Contenu du bloc de texte.
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">tabStops</apiItemName><apiType value="Vector$flash.text.engine:TabStop" name="type" class="- topic/state reference/state apiRef/apiType "/><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Arrêts de tabulation du texte dans le bloc de texte.
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">textJustifier</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.text.engine:TextJustifier</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Objet TextJustifier à utiliser lors de la création de la ligne pour ce bloc. Lorsque aucun justificateur n’est fourni, un justificateur par défaut est construit à partir des paramètres régionaux anglais.
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">lineRotation</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">rotate0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Rotation appliquée aux lignes de texte générées à partir du bloc de texte en tant qu’unités.
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">baselineZero</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">roman</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Spécifie quelle ligne de base est à y=0 pour toutes les lignes du bloc.
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">bidiLevel</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Niveau d’intégration bidirectionnelle par défaut du texte dans le bloc de texte.
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">applyNonLinearFontScaling</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">true</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Indique que vous souhaitez améliorer l’aspect de l’écran au détriment de la fidélité d’impression WYSIWYG.
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">baselineFontDescription</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.text.engine:FontDescription</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Spécifie la description d’une police à partir de laquelle les lignes de base des lignes doivent dériver pour toutes les lignes du bloc.
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">baselineFontSize</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">12.0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Spécifie la taille à utiliser avec le baselineFontDescription. Ce paramètre est ignoré si <codeph class="+ topic/ph pr-d/codeph ">baselineFontDescription</codeph> est <codeph class="+ topic/ph pr-d/codeph ">null</codeph>.
   	 </apiDesc></apiParam></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 	 Crée un objet TextBlock
	 
	 </apiDesc></apiConstructorDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#TextBlock/applyNonLinearFontScaling" class="- topic/link "><linktext class="- topic/linktext ">applyNonLinearFontScaling</linktext></link><link href="flash.text.engine.xml#TextBlock/baselineFontDescription" class="- topic/link "><linktext class="- topic/linktext ">baselineFontDescription</linktext></link><link href="flash.text.engine.xml#TextBlock/baselineFontSize" class="- topic/link "><linktext class="- topic/linktext ">baselineFontSize</linktext></link><link href="flash.text.engine.xml#TextBlock/baselineZero" class="- topic/link "><linktext class="- topic/linktext ">baselineZero</linktext></link><link href="flash.text.engine.xml#TextBlock/bidiLevel" class="- topic/link "><linktext class="- topic/linktext ">bidiLevel</linktext></link><link href="flash.text.engine.xml#TextBlock/lineRotation" class="- topic/link "><linktext class="- topic/linktext ">lineRotation</linktext></link><link href="flash.text.engine.xml#TextBlock/tabStops" class="- topic/link "><linktext class="- topic/linktext ">tabStops</linktext></link><link href="flash.text.engine.xml#TextJustifier" class="- topic/link "><linktext class="- topic/linktext ">TextJustifier</linktext></link></related-links></apiConstructor><apiOperation id="flash.text.engine:TextBlock:createTextLine" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">createTextLine</apiName><shortdesc class="- topic/shortdesc ">
	 Indique au bloc de texte de créer une ligne de texte à partir de son contenu, en commençant au point spécifié par le paramètre previousLine et en faisant un saut de ligne au point spécifié par le paramètre width.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Si le TextLine spécifié par <codeph class="+ topic/ph pr-d/codeph ">previousLine</codeph> n’est pas valide.
     	 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Si le TextLine spécifié par <codeph class="+ topic/ph pr-d/codeph ">previousLine</codeph> est administré par un autre TextBlock.
     	 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Si <codeph class="+ topic/ph pr-d/codeph ">width</codeph> est inférieur à zéro, sauf si <codeph class="+ topic/ph pr-d/codeph ">fitSomething</codeph> est true.
     	 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Si <codeph class="+ topic/ph pr-d/codeph ">width</codeph> est supérieur à <codeph class="+ topic/ph pr-d/codeph ">TextLine.MAX_LINE_WIDTH</codeph>.
     	 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Si un ou plusieurs éléments du contenu du bloc de texte possèdent un <codeph class="+ topic/ph pr-d/codeph ">ElementFormat null</codeph>.
     	 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IllegalOperationError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IllegalOperationError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ligne de texte ou <codeph class="+ topic/ph pr-d/codeph ">null</codeph> si le bloc de texte est vide ou si la largeur spécifiée est inférieure à celle de l’élément suivant. Pour différencier les deux cas, vérifiez la propriété <codeph class="+ topic/ph pr-d/codeph ">textLineCreationResult</codeph> du bloc de texte.
     	 
     	 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.text.engine:TextLine</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">previousLine</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.text.engine:TextLine</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Spécifie la ligne précédemment coupée en deux après laquelle la séparation doit commencer. Peut être <codeph class="+ topic/ph pr-d/codeph ">null</codeph> lorsque la séparation est au niveau de la première ligne.
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">width</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">1000000</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Spécifie la largeur désirée de la ligne, en pixels. La largeur réelle peut être inférieure.
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">lineOffset</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0.0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Paramètre facultatif qui spécifie la différence, en pixels, entre l’origine de la ligne et l’origine des taquets de tabulation. Ce paramètre peut être utilisé lorsque les lignes ne sont pas alignées mais, pour leurs tabulations, il est préférable qu’elles le soient. La valeur par défaut de ce paramètre est <codeph class="+ topic/ph pr-d/codeph ">0.0</codeph>.
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">fitSomething</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Paramètre facultatif qui indique à Flash Player d’ajuster au moins un caractère dans la ligne de texte, quelle que soit la largeur spécifiée (même si la largeur est nulle ou négative, ce qui autrement entraîne le renvoi d’une exception).
	 
	 </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Indique au bloc de texte de créer une ligne de texte à partir de son contenu, en commençant au point spécifié par le paramètre <codeph class="+ topic/ph pr-d/codeph ">previousLine</codeph> et en faisant un saut de ligne au point spécifié par le paramètre <codeph class="+ topic/ph pr-d/codeph ">width</codeph>. La ligne de texte est un objet TextLine, que vous pouvez ajouter à la liste d’affichage.
	 
	 <p class="- topic/p ">Insérer des sauts de ligne dans une plage de blocs de texte dans laquelle une séparation existe déjà peut modifier la validité des lignes dans et au-delà de la zone où sont situés les sauts de ligne. L’état des lignes peut passer de VALID à INVALID ou à POSSIBLY_INVALID. Si un nouveau saut de ligne s’aligne parfaitement avec un saut de ligne précédent dont l’état est POSSIBLY_INVALID, cette dernière ligne et toutes les lignes POSSIBLY_INVALID reprennent un état VALID. La validité des lignes définies sur des valeurs n’appartenant pas à <codeph class="+ topic/ph pr-d/codeph ">TextLineValidity</codeph> ne devient pas VALID, mais peut devenir INVALID. Vérifiez la propriété <codeph class="+ topic/ph pr-d/codeph ">firstInvalidLine</codeph> après chaque modification du bloc de texte pour savoir où commencer ou poursuivre les sauts de lignes de texte.</p>
	 
	 <p class="- topic/p ">Vous pouvez créer des séparations de mots artificielles en incluant le caractère Unicode ZWSP (Zero Width Space), ou espace sans chasse, dans le texte. Cela peut se révéler utile pour les langues telles que le Thaïlandais, qui requiert un dictionnaire pour les sauts de ligne corrects. Le moteur d’exécution de Flash ne dispose pas d’un tel dictionnaire.</p>
	 
	 <p class="- topic/p ">Pour réduire les ressources supplémentaires de mémoire requises, l’utilisateur doit appeler la méthode <codeph class="+ topic/ph pr-d/codeph ">releaseLineCreationData()</codeph> afin que le bloc de texte puisse supprimer les données temporaires associées aux sauts de ligne lorsque toutes les lignes souhaitées ont été créées, à moins qu’il soit nécessaire de recréer plusieurs fois les lignes, notamment suite au redimensionnement du conteneur.</p>
	 
	 </apiDesc><example conref="examples\TextBlock_createTextLineExample.as" class="- topic/example "> Cet exemple appelle la méthode <codeph class="+ topic/ph pr-d/codeph ">createTextLine()</codeph> pour créer des lignes de texte dans un bloc de texte. Pour ce faire, il effectue les tâches suivantes :
  <ul class="- topic/ul "><li class="- topic/li ">Il crée un objet TextElement à partir d’une chaîne et lui donne une taille de police de 20.</li><li class="- topic/li ">Il crée un objet TextBlock et lui affecte l’objet TextElement.</li><li class="- topic/li ">Il appelle la méthode <codeph class="+ topic/ph pr-d/codeph ">createTextLine()</codeph> pour créer des lignes de 300 pixels à partir du bloc de texte.</li><li class="- topic/li ">Il place chaque ligne sur la scène (<codeph class="+ topic/ph pr-d/codeph ">addChild()</codeph>) et définit sa position (<codeph class="+ topic/ph pr-d/codeph ">x</codeph> et <codeph class="+ topic/ph pr-d/codeph ">y</codeph>).</li></ul>
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">

package {
    import flash.display.Sprite;
    import flash.text.engine.TextBlock;
    import flash.text.engine.TextElement;
    import flash.text.engine.TextLine;
    import flash.text.engine.ElementFormat;
    import flash.text.engine.FontDescription;
    
    public class TextBlock_createTextLineExample extends Sprite {
        
        public function TextBlock_createTextLineExample():void {
            
            var str:String = "I am a TextElement, created from a String and assigned " +
            "to the content property of a TextBlock. The createTextLine() method " +
            "then created these lines, 300 pixels wide, for display." ;
            
            var fontDescription:FontDescription = new FontDescription("Arial");
            var format:ElementFormat = new ElementFormat(fontDescription);
            format.fontSize = 16;
            var textElement:TextElement = new TextElement(str, format); 
            var textBlock:TextBlock = new TextBlock();
            textBlock.content = textElement; 
            createLines(textBlock); 
        }
        
        private function createLines(textBlock:TextBlock):void 
        {            
            var lineWidth:Number = 300;
            var xPos:Number = 15.0;
            var yPos:Number = 20.0;
            
            var textLine:TextLine = textBlock.createTextLine (null, lineWidth);
            while (textLine)
            {
                textLine.x = xPos;
                textLine.y = yPos;
                yPos += textLine.height + 2;
                addChild (textLine);
                textLine = textBlock.createTextLine (textLine, lineWidth);
            }
        }
    }
}
</codeblock></example></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#TextLine" class="- topic/link "><linktext class="- topic/linktext ">TextLine</linktext></link><link href="flash.text.engine.xml#TextLine/validity" class="- topic/link "><linktext class="- topic/linktext ">TextLine.validity</linktext></link><link href="flash.text.engine.xml#TextLineValidity" class="- topic/link "><linktext class="- topic/linktext ">TextLineValidity</linktext></link><link href="flash.text.engine.xml#TextBlock/releaseLineCreationData()" class="- topic/link "><linktext class="- topic/linktext ">TextBlock.releaseLineCreationData()</linktext></link></related-links></apiOperation><apiOperation id="flash.text.engine:TextBlock:dump" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">dump</apiName><shortdesc class="- topic/shortdesc ">
	 Libère le contenu sous-jacent du TextBlock sous forme de chaîne XML.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Libère le contenu sous-jacent du TextBlock sous forme de chaîne XML. Cela peut se révéler utile lors de tests automatisés, et comprend le texte, le formatage et les informations de mise en forme.
	 
	 <p class="- topic/p ">Voici le résultat :</p>
	 
	 <pre xml:space="preserve" class="- topic/pre ">
	 >block&lt;
	 	[0-N LINE]
	 >/block&lt;
	 </pre>
	 
	 <p class="- topic/p ">Pour obtenir une description du résultat pour chaque ligne, voir la méthode TextLine.dump().</p>
	 
	 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Remarque :</b> le contenu et le format du résultat peuvent changer dans le futur. Adobe ne garantie pas la compatibilité ascendante pour cette méthode.</p>
	 
	 </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#TextLine/dump()" class="- topic/link "><linktext class="- topic/linktext ">TextLine.dump()</linktext></link></related-links></apiOperation><apiOperation id="flash.text.engine:TextBlock:findNextAtomBoundary" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">findNextAtomBoundary</apiName><shortdesc class="- topic/shortdesc ">
	 Recherche l’index de la prochaine limite d’atome à partir de l’index de caractère spécifié, sans inclure le caractère situé au niveau de l’index spécifié.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Le caractère <codeph class="+ topic/ph pr-d/codeph ">index</codeph> spécifié est hors limites.
	 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">RangeError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">RangeError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Le TextLine auquel le caractère indexé appartient n’est pas valide.
	 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IllegalOperationError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IllegalOperationError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Index de la prochaine limite d’atome à partir de l’index de caractère spécifié.
	 
	 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">afterCharIndex</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Spécifie l’index de caractère à partir duquel la prochaine limite d’atome doit être recherchée.
	 </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Recherche l’index de la prochaine limite d’atome à partir de l’index de caractère spécifié, sans inclure le caractère situé au niveau de l’index spécifié. Les caractères situés entre les limites des atomes se combinent pour former un seul atome dans un <codeph class="+ topic/ph pr-d/codeph ">TextLine</codeph>, par exemple un ’e’ et un accent aigu.
	 
	 </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#TextLine/atomCount" class="- topic/link "><linktext class="- topic/linktext ">TextLine.atomCount</linktext></link></related-links></apiOperation><apiOperation id="flash.text.engine:TextBlock:findNextWordBoundary" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">findNextWordBoundary</apiName><shortdesc class="- topic/shortdesc ">
	 Recherche l’index de la prochaine limite de mot à partir de l’index de caractère spécifié, sans comprendre le caractère situé au niveau de l’index spécifié.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Le caractère <codeph class="+ topic/ph pr-d/codeph ">index</codeph> spécifié est hors limites.
	 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">RangeError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">RangeError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Le TextLine auquel le caractère indexé appartient n’est pas valide.
	 
	  
	  </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IllegalOperationError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IllegalOperationError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Index de la prochaine limite de mot à partir de l’index de caractère spécifié.
	 
	 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">afterCharIndex</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Spécifie l’index de caractère à partir duquel la prochaine limite de mot doit être recherchée.
	 </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Recherche l’index de la prochaine limite de mot à partir de l’index de caractère spécifié, sans comprendre le caractère situé au niveau de l’index spécifié. Les limites de mot sont déterminées à partir des propriétés Unicode des caractères.
	 
	 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.text.engine:TextBlock:findPreviousAtomBoundary" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">findPreviousAtomBoundary</apiName><shortdesc class="- topic/shortdesc ">
	 Recherche l’index de la limite d’atome précédente jusqu’à l’index de caractère spécifié, sans inclure le caractère situé au niveau de l’index spécifié.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Le caractère <codeph class="+ topic/ph pr-d/codeph ">index</codeph> spécifié est hors limites.
	 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">RangeError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">RangeError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Le TextLine auquel le caractère indexé appartient n’est pas valide.
	 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IllegalOperationError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IllegalOperationError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Index de la limite d’atome précédente jusqu’à l’index de caractère spécifié.
	 
	 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">beforeCharIndex</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Spécifie l’index de caractère à partir duquel la limite d’atome précédente doit être recherchée.
	 </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Recherche l’index de la limite d’atome précédente jusqu’à l’index de caractère spécifié, sans inclure le caractère situé au niveau de l’index spécifié. Les caractères situés entre les limites des atomes se combinent pour former un seul atome dans un <codeph class="+ topic/ph pr-d/codeph ">TextLine</codeph>, par exemple un ’e’ et un accent aigu.
	 
	 </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#TextLine/atomCount" class="- topic/link "><linktext class="- topic/linktext ">TextLine.atomCount</linktext></link></related-links></apiOperation><apiOperation id="flash.text.engine:TextBlock:findPreviousWordBoundary" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">findPreviousWordBoundary</apiName><shortdesc class="- topic/shortdesc ">
	 Recherche l’index de la précédente limite de mot jusqu’à l’index de caractère spécifié, sans comprendre le caractère situé au niveau de l’index spécifié.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Le caractère <codeph class="+ topic/ph pr-d/codeph ">index</codeph> spécifié est hors limites.
	 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">RangeError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">RangeError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Le TextLine auquel le caractère indexé appartient n’est pas valide.
	  
	  </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IllegalOperationError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IllegalOperationError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Index de la précédente limite de mot jusqu’à l’index de caractère spécifié.
	 
	 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">beforeCharIndex</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Spécifie l’index de caractère à partir duquel la limite de mot précédente doit être recherchée.
	 </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Recherche l’index de la précédente limite de mot jusqu’à l’index de caractère spécifié, sans comprendre le caractère situé au niveau de l’index spécifié. Les limites de mot sont déterminées à partir des propriétés Unicode des caractères.
	 
	 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.text.engine:TextBlock:getTextLineAtCharIndex" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">getTextLineAtCharIndex</apiName><shortdesc class="- topic/shortdesc ">
	 Renvoie le TextLine contenant le caractère spécifié par le paramètre charIndex.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Le caractère d’index spécifié est hors limites.
	  
	  </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">RangeError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">RangeError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">TextLine contenant le caractère au niveau de <codeph class="+ topic/ph pr-d/codeph ">charIndex</codeph>.
	 
	 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.text.engine:TextLine</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">charIndex</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Valeur d’index de base zéro du caractère (par exemple, le premier caractère est 0, le deuxième caractère est 1, etc.).
	 
	 </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Renvoie le TextLine contenant le caractère spécifié par le paramètre <codeph class="+ topic/ph pr-d/codeph ">charIndex</codeph>.
	 
	 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.text.engine:TextBlock:recreateTextLine" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">recreateTextLine</apiName><shortdesc class="- topic/shortdesc ">
	 Indique au bloc de texte de réutiliser une ligne de texte existante pour créer une ligne de texte à partir de son contenu, en commençant au point spécifié par le paramètre previousLine et en faisant un saut de ligne au point spécifié par le paramètre width.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Si <codeph class="+ topic/ph pr-d/codeph ">textLine</codeph> est null.
     	 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Si le TextLine spécifié par <codeph class="+ topic/ph pr-d/codeph ">previousLine</codeph> n’est pas valide.
     	 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Si le TextLine spécifié par <codeph class="+ topic/ph pr-d/codeph ">previousLine</codeph> est administré par un autre TextBlock.
     	 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Si le TextLine spécifié par <codeph class="+ topic/ph pr-d/codeph ">previousLine </codeph> est également spécifié par <codeph class="+ topic/ph pr-d/codeph ">textLine</codeph>.
     	 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Si <codeph class="+ topic/ph pr-d/codeph ">width</codeph> est inférieur à zéro, sauf si <codeph class="+ topic/ph pr-d/codeph ">fitSomething</codeph> est true.
     	 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Si <codeph class="+ topic/ph pr-d/codeph ">width</codeph> est supérieur à <codeph class="+ topic/ph pr-d/codeph ">TextLine.MAX_LINE_WIDTH</codeph>.
     	 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Si un ou plusieurs éléments du contenu du bloc de texte possèdent un <codeph class="+ topic/ph pr-d/codeph ">ElementFormat null</codeph>.
     	 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IllegalOperationError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IllegalOperationError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ligne de texte ou <codeph class="+ topic/ph pr-d/codeph ">null</codeph> si le bloc de texte est vide ou si la largeur spécifiée est inférieure à celle de l’élément suivant. Pour différencier les deux cas, vérifiez la propriété <codeph class="+ topic/ph pr-d/codeph ">textLineCreationResult</codeph> du bloc de texte.
     	 
     	 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.text.engine:TextLine</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">textLine</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.text.engine:TextLine</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Indique qu’un objet TextLine précédemment créé doit être réutilisé.
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">previousLine</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.text.engine:TextLine</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Spécifie la ligne précédemment coupée en deux après laquelle la séparation doit commencer. Peut être <codeph class="+ topic/ph pr-d/codeph ">null</codeph> lorsque la séparation est au niveau de la première ligne.
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">width</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">1000000</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Spécifie la largeur désirée de la ligne, en pixels. La largeur réelle peut être inférieure.
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">lineOffset</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0.0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Paramètre facultatif qui spécifie la différence, en pixels, entre l’origine de la ligne et l’origine des taquets de tabulation. Ce paramètre peut être utilisé lorsque les lignes ne sont pas alignées mais, pour leurs tabulations, il est préférable qu’elles le soient. La valeur par défaut de ce paramètre est <codeph class="+ topic/ph pr-d/codeph ">0.0</codeph>.
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">fitSomething</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Paramètre facultatif qui indique à Flash Player d’ajuster au moins un caractère dans la ligne de texte, quelle que soit la largeur spécifiée (même si la largeur est nulle ou négative, ce qui autrement entraîne le renvoi d’une exception).
	 
	 </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Indique au bloc de texte de réutiliser une ligne de texte existante pour créer une ligne de texte à partir de son contenu, en commençant au point spécifié par le paramètre <codeph class="+ topic/ph pr-d/codeph ">previousLine</codeph> et en faisant un saut de ligne au point spécifié par le paramètre <codeph class="+ topic/ph pr-d/codeph ">width</codeph>. La ligne de texte est un objet TextLine, que vous pouvez ajouter à la liste d’affichage. La réutilisation d’une ligne de texte existante améliore les performances, car moins d’objets sont créés.
	 
     <p class="- topic/p ">L’objet <codeph class="+ topic/ph pr-d/codeph ">textLine</codeph> recréé est dégagé du bloc de texte dans lequel il se trouve, le cas échéant. Par ailleurs, toutes les propriétés, notamment les propriétés héritées de <codeph class="+ topic/ph pr-d/codeph ">DisplayObjectContainer</codeph>, <codeph class="+ topic/ph pr-d/codeph ">InteractiveObject</codeph> et <codeph class="+ topic/ph pr-d/codeph ">DisplayObject</codeph>, sont réinitialisées à leurs valeurs par défaut. Enfin, tous les enfants de la ligne sont supprimés, notamment les éléments graphiques et autres décorations ; tous les écouteurs d’événement dans la ligne sont également supprimés. Pour améliorer les performances, la seule exception à cette réinitialisation est que la ligne elle-même n’est pas supprimée de son parent.</p>
	 
	 <p class="- topic/p ">Insérer des sauts de ligne dans une plage de blocs de texte dans laquelle une séparation existe déjà peut modifier la validité des lignes dans et au-delà de la zone où sont situés les sauts de ligne. L’état des lignes peut passer de VALID à INVALID ou à POSSIBLY_INVALID. Si un nouveau saut de ligne s’aligne parfaitement avec un saut de ligne précédent dont l’état est POSSIBLY_INVALID, cette dernière ligne et toutes les lignes POSSIBLY_INVALID reprennent un état VALID. La validité des lignes définies sur des valeurs n’appartenant pas à <codeph class="+ topic/ph pr-d/codeph ">TextLineValidity</codeph> ne devient pas VALID, mais peut devenir INVALID. Vérifiez la propriété <codeph class="+ topic/ph pr-d/codeph ">firstInvalidLine</codeph> après chaque modification du bloc de texte pour savoir où commencer ou poursuivre les sauts de lignes de texte.</p>
	 
	 <p class="- topic/p ">Vous pouvez créer des séparations de mots artificielles en incluant le caractère Unicode ZWSP (Zero Width Space), ou espace sans chasse, dans le texte. Cela peut se révéler utile pour les langues telles que le Thaïlandais, qui requiert un dictionnaire pour les sauts de ligne corrects. Le moteur d’exécution de Flash ne dispose pas d’un tel dictionnaire.</p>
	 
	 <p class="- topic/p ">Pour réduire les ressources supplémentaires de mémoire requises, l’utilisateur doit appeler la méthode <codeph class="+ topic/ph pr-d/codeph ">releaseLineCreationData()</codeph> afin que le bloc de texte puisse supprimer les données temporaires associées aux sauts de ligne lorsque toutes les lignes souhaitées ont été créées, à moins qu’il soit nécessaire de recréer plusieurs fois les lignes, notamment suite au redimensionnement du conteneur.</p>
	 
	 </apiDesc><example conref="examples\TextBlock_recreateTextLineExample.as" class="- topic/example "> Cet exemple réutilise l’objet TextLine <codeph class="+ topic/ph pr-d/codeph ">textLine</codeph> :
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
var elementFormat:ElementFormat = new ElementFormat();
elementFormat.fontDescription = new FontDescription("Arial");
elementFormat.fontSize = 48;

var textElement:TextElement = new TextElement("Text you'll never see", elementFormat)
var textBlock:TextBlock = new TextBlock(textElement);
var textLine:TextLine = textBlock.createTextLine();
textLine.x = 50;
textLine.y = 50;
addChild(textLine);

// Reuse the element format to preserve the text formatting
var elementTwo:TextElement = new TextElement("Text you see", elementFormat);  
textBlock.content = elementTwo;
textBlock.recreateTextLine(textLine);

// Set the position (and any other display object properties like alpha, children, etc.)
// otherwise, they're all set to default properties.
textLine.x = 50;  
textLine.y = 50;
</codeblock></example></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#TextBaseline" class="- topic/link "><linktext class="- topic/linktext ">TextBaseline</linktext></link><link href="flash.text.engine.xml#TextLine" class="- topic/link "><linktext class="- topic/linktext ">TextLine</linktext></link><link href="flash.text.engine.xml#TextLine/validity" class="- topic/link "><linktext class="- topic/linktext ">TextLine.validity</linktext></link><link href="flash.text.engine.xml#TextLineValidity" class="- topic/link "><linktext class="- topic/linktext ">TextLineValidity</linktext></link><link href="flash.text.engine.xml#TextBlock/releaseLineCreationData()" class="- topic/link "><linktext class="- topic/linktext ">TextBlock.releaseLineCreationData()</linktext></link></related-links></apiOperation><apiOperation id="flash.text.engine:TextBlock:releaseLineCreationData" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">releaseLineCreationData</apiName><shortdesc class="- topic/shortdesc ">
	 Indique au bloc de texte de libérer toutes les données temporaires associées à la création de lignes de texte.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Indique au bloc de texte de libérer toutes les données temporaires associées à la création de lignes de texte. Pour minimiser l’encombrement mémoire de l’application, nous vous conseillons d’appeler la méthode <codeph class="+ topic/ph pr-d/codeph ">releaseLineCreationData()</codeph> lorsque vous avez terminé la création de lignes de texte à partir d’un bloc de texte. Cependant, pour optimiser les performances de nouveaux sauts de lignes (notamment lorsque le conteneur est redimensionné), vous devez éviter d’appeler la méthode <codeph class="+ topic/ph pr-d/codeph ">releaseLineCreationData()</codeph>. C’est à l’application de trouver un juste équilibre entre mémoire et performances.
	 
	 <p class="- topic/p ">La procédure recommandée pour du texte qui ne subira aucune modification est la suivante : initialisez un bloc de texte, appelez la méthode <codeph class="+ topic/ph pr-d/codeph ">createTextLine()</codeph> aussi souvent que nécessaire pour obtenir le résultat souhaité, puis appelez la méthode <codeph class="+ topic/ph pr-d/codeph ">releaseLineCreationData()</codeph>.</p>
	 
	 </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#TextBlock/createTextLine()" class="- topic/link "><linktext class="- topic/linktext ">TextBlock.createTextLine()</linktext></link></related-links></apiOperation><apiOperation id="flash.text.engine:TextBlock:releaseLines" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">releaseLines</apiName><shortdesc class="- topic/shortdesc ">
	 Supprime une plage de lignes de texte de la liste des lignes conservées par le TextBlock.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Si le TextLine spécifié par <codeph class="+ topic/ph pr-d/codeph ">firstLine</codeph> ou <codeph class="+ topic/ph pr-d/codeph ">lastLine</codeph> n’est pas dans la liste des lignes de texte conservées par le bloc de texte.
     	 
     	 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">firstLine</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.text.engine:TextLine</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Spécifie la première ligne à libérer.
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">lastLine</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.text.engine:TextLine</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Spécifie la dernière ligne à libérer.
     
     </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Supprime une plage de lignes de texte de la liste des lignes conservées par le TextBlock. Les lignes peuvent ainsi être nettoyées lorsque aucune autre référence n’existe.
	 
	 <p class="- topic/p ">Définissez sur <codeph class="+ topic/ph pr-d/codeph ">null</codeph> les <codeph class="+ topic/ph pr-d/codeph ">textBlock</codeph>, <codeph class="+ topic/ph pr-d/codeph ">nextLine</codeph> et <codeph class="+ topic/ph pr-d/codeph ">previousLine</codeph> appartenant aux lignes supprimées. Définissez sur <codeph class="+ topic/ph pr-d/codeph ">TextLineValidity.INVALID</codeph> la <codeph class="+ topic/ph pr-d/codeph ">validity</codeph> des lignes supprimées et de toutes les lignes qui les suivent dans le TextBlock.</p>
	 
	 </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#TextLine" class="- topic/link "><linktext class="- topic/linktext ">TextLine</linktext></link></related-links></apiOperation><apiValue id="flash.text.engine:TextBlock:userData" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">userData</apiName><shortdesc class="- topic/shortdesc ">
	 Permet à l’application d’associer des données arbitraires au bloc de texte.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiType value="" name="type" class="- topic/state reference/state apiRef/apiType "/></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Permet à l’application d’associer des données arbitraires au bloc de texte. Les données peuvent être des informations faisant référence au contenu, par exemple, une date de révision ou le nom de l’auteur, ou peuvent être des données mises en cache et requises lors du traitement.
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.text.engine:TextBlock:applyNonLinearFontScaling:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">applyNonLinearFontScaling</apiName><shortdesc class="- topic/shortdesc ">
	 Indique que vous souhaitez améliorer l’aspect de l’écran au détriment de la fidélité d’impression WYSIWYG.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Indique que vous souhaitez améliorer l’aspect de l’écran au détriment de la fidélité d’impression WYSIWYG. Dans le cas des plates-formes et des polices qui ne prennent pas en charge le positionnement de glyphes de sous-pixels lors du rendu des polices de périphérique, mais qui prennent en charge la mise à l’échelle non linéaire, le fait de définir cette propriété sur <codeph class="+ topic/ph pr-d/codeph ">true</codeph> permet d’utiliser ces mesures, au détriment de la fidélité d’impression WYSIWYG, en particulier pour les petites tailles de point. La mise à l’échelle non linéaire des polices consiste à mettre à l’échelle la largeur de glyphes individuelles en vue de dissimuler les écarts disgracieux provoqués par l’accrochage aux pixels.
	 
	 <p class="- topic/p ">Sur les plates-formes qui prennent en charge le positionnement de glyphes de sous-pixels, cet indicateur est ignoré.</p>  
	 
	 <p class="- topic/p ">Cet indicateur n’a aucun effet sur le rendu des polices incorporées.</p>
	 
	 <p class="- topic/p ">La valeur par défaut est <codeph class="+ topic/ph pr-d/codeph ">true</codeph>.</p>
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.text.engine:TextBlock:baselineFontDescription:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">baselineFontDescription</apiName><shortdesc class="- topic/shortdesc ">
	 Police utilisée pour déterminer les lignes de base de toutes les lignes créées à partir du bloc, quel que soit leur contenu.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.text.engine:FontDescription</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Police utilisée pour déterminer les lignes de base de toutes les lignes créées à partir du bloc, quel que soit leur contenu. Les lignes de base dépendent de la police et de sa taille.
	 
	 <p class="- topic/p ">La valeur par défaut est <codeph class="+ topic/ph pr-d/codeph ">null</codeph>. Lorsque la police de la ligne de base est <codeph class="+ topic/ph pr-d/codeph ">null</codeph>, la taille de police de la ligne de base est ignorée et la ligne de base de toutes les lignes est basée sur la police et la taille du texte le plus large de la ligne. Lorsque vous spécifiez à la fois <codeph class="+ topic/ph pr-d/codeph ">baselineFontDescription</codeph> et <codeph class="+ topic/ph pr-d/codeph ">baselineFontSize</codeph>, ces paramètres déterminent les lignes de base de toutes les lignes du bloc de texte, indépendamment de leur contenu. Cette combinaison est plus généralement utilisée dans la typographie asiatique.</p>
     
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#TextBlock/baselineFontSize" class="- topic/link "><linktext class="- topic/linktext ">baselineFontSize</linktext></link><link href="flash.text.engine.xml#FontDescription" class="- topic/link "><linktext class="- topic/linktext ">FontDescription</linktext></link></related-links></apiValue><apiValue id="flash.text.engine:TextBlock:baselineFontSize:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">baselineFontSize</apiName><shortdesc class="- topic/shortdesc ">
	 Taille de police utilisée pour calculer les lignes de base des lignes créées à partir du bloc.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">La <codeph class="+ topic/ph pr-d/codeph ">baselineFontSize</codeph> spécifiée est inférieure à 0.
	  
	  </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Taille de police utilisée pour calculer les lignes de base des lignes créées à partir du bloc. Les lignes de base dépendent de la police et de sa taille.
	 
	 <p class="- topic/p ">La valeur par défaut est <codeph class="+ topic/ph pr-d/codeph ">12</codeph>. Lorsque la police de la ligne de base est <codeph class="+ topic/ph pr-d/codeph ">null</codeph>, la taille de police de la ligne de base est ignorée et la ligne de base de toutes les lignes est basée sur la police et la taille du texte le plus large de la ligne. </p>
     
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#TextBlock/baselineFontDescription" class="- topic/link "><linktext class="- topic/linktext ">baselineFontDescription</linktext></link><link href="flash.text.engine.xml#FontDescription" class="- topic/link "><linktext class="- topic/linktext ">FontDescription</linktext></link></related-links></apiValue><apiValue id="flash.text.engine:TextBlock:baselineZero:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">baselineZero</apiName><shortdesc class="- topic/shortdesc ">
	 Spécifie quelle ligne de base est au niveau y=0 pour les lignes créées à partir de ce bloc.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Si la propriété est définie sur une valeur n’appartenant pas à <codeph class="+ topic/ph pr-d/codeph ">TextBaseline</codeph>.
     
	 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Spécifie quelle ligne de base est au niveau y=0 pour les lignes créées à partir de ce bloc. Les valeurs valides de cette propriété sont les membres de la classe <codeph class="+ topic/ph pr-d/codeph ">TextBaseline</codeph>. 
	 
	 <p class="- topic/p ">La valeur par défaut est <codeph class="+ topic/ph pr-d/codeph ">TextBaseline.ROMAN</codeph>.</p>
	 
	 <p class="- topic/p ">Pour définir les valeurs pour cette propriété, utilisez les valeurs de chaîne suivantes :</p>
	 
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Valeur de chaîne</entry><entry class="- topic/entry ">Description</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">TextBaseline.ROMAN</codeph></entry><entry class="- topic/entry ">La ligne de base des lignes à caractères romains est située à y=0.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">TextBaseline.ASCENT</codeph></entry><entry class="- topic/entry ">La ligne de base des lignes à caractères ascendants est située à y=0.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">TextBaseline.DESCENT</codeph></entry><entry class="- topic/entry ">La ligne de base des lignes à caractères descendants est située à y=0.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">TextBaseline.IDEOGRAPHIC_TOP</codeph></entry><entry class="- topic/entry ">La ligne de base des lignes avec haut des caractères idéographiques est située à y=0.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">TextBaseline.IDEOGRAPHIC_CENTER</codeph></entry><entry class="- topic/entry ">La ligne de base des lignes avec centre des caractères idéographiques est située à y=0.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">TextBaseline.IDEOGRAPHIC_BOTTOM</codeph></entry><entry class="- topic/entry ">La ligne de base des lignes avec bas des caractères idéographiques est située à y=0.</entry></row></tbody></tgroup></adobetable>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#TextBaseline" class="- topic/link "><linktext class="- topic/linktext ">TextBaseline</linktext></link></related-links></apiValue><apiValue id="flash.text.engine:TextBlock:bidiLevel:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">bidiLevel</apiName><shortdesc class="- topic/shortdesc ">
	 Spécifie le niveau d’intégration bidirectionnelle par défaut du texte dans le bloc de texte.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">int</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Si défini sur une valeur inférieure à 0.
	 
	 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Spécifie le niveau d’intégration bidirectionnelle par défaut du texte dans le bloc de texte. Une valeur paire signifie de gauche à droite et une valeur impaire de droite à gauche. Vous pouvez incrémenter <codeph class="+ topic/ph pr-d/codeph ">bidiLevel</codeph> pour indiquer le nombre de niveaux selon lequel un texte particulier est intégré par rapport aux valeurs gauche à droite ou droite à gauche.
	 
	 <p class="- topic/p ">La valeur par défaut est 0.</p>
	 
	 <p class="- topic/p ">Le fait de modifier <codeph class="+ topic/ph pr-d/codeph ">bidiLevel</codeph> définit la validité de toutes les lignes précédemment coupées en deux sur TextLineValidity.INVALID. Après la modification de <codeph class="+ topic/ph pr-d/codeph ">bidiLevel</codeph>, la propriété <codeph class="+ topic/ph pr-d/codeph ">firstInvalidLine</codeph> est égale à la propriété <codeph class="+ topic/ph pr-d/codeph ">firstLine</codeph> et vous devez créer à nouveau les sauts de toutes les lignes du TextBlock.</p>
	 
     </apiDesc><example conref="examples\TextBlock_bidiLevelExample.as" class="- topic/example "> Cet exemple montre la même chaîne de texte (ordre logique : a, b, c, alef, bet, gimel) restituée dans un premier temps alors que <codeph class="+ topic/ph pr-d/codeph ">bidiLevel</codeph> est pair et ensuite alors que <codeph class="+ topic/ph pr-d/codeph ">bidiLevel</codeph> est impair.
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">

package {
    
    import flash.display.Sprite;
    import flash.text.engine.TextBlock;
    import flash.text.engine.TextElement;
    import flash.text.engine.TextLine;
    import flash.text.engine.ElementFormat;
    import flash.text.engine.FontDescription;
    
    public class TextBlock_bidiLevelExample extends Sprite {
        
        public function TextBlock_bidiLevelExample():void {             
            var fontSize:Number = 36;

            var format:ElementFormat = new ElementFormat();        
            format.fontDescription = new FontDescription("Adobe Hebrew");
            format.fontSize = fontSize;
            var y:Number = 0;
            var leading:Number = fontSize * 0.2;
            var text:String = "abc" + String.fromCharCode(0x05D0, 0x05D1, 0x05D2);

            var textBlock:TextBlock = new TextBlock();
            textBlock.content = new TextElement(text, format);
                        
            // bidiLevel even
            textBlock.bidiLevel = 0;
            var textLine = textBlock.createTextLine(null, 400);
            y += leading + textLine.ascent;
            textLine.y = y;
            y += textLine.descent;
            addChild(textLine);      
            
            // bidiLevel odd
            textBlock.content = new TextElement(text, format);
            textBlock.bidiLevel = 1;
            textLine = textBlock.createTextLine(null, 400);
            y += leading + textLine.ascent;          
            textLine.y = y;
            addChild(textLine);   
        }
    }
}
</codeblock></example></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#TextBlock/createTextLine()" class="- topic/link "><linktext class="- topic/linktext ">createTextLine()</linktext></link></related-links></apiValue><apiValue id="flash.text.engine:TextBlock:content:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">content</apiName><shortdesc class="- topic/shortdesc ">
	 Détient le contenu du bloc de texte.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.text.engine:ContentElement</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Si défini sur une valeur ne correspondant pas à une sous-classe connue de <codeph class="+ topic/ph pr-d/codeph ">ContentElement</codeph>.
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Le <codeph class="+ topic/ph pr-d/codeph ">contenu</codeph> spécifié est déjà membre d’un groupe.
	  
	  </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Détient le contenu du bloc de texte. ContentElement étant une classe de base, affectez <codeph class="+ topic/ph pr-d/codeph ">content</codeph> à une occurrence d’une sous-classe ContentElement : TextElement, GraphicElement ou GroupElement. Un objet TextElement contient une chaîne, un objet GraphicElement contient un objet DisplayObject et un objet GroupElement contient un objet Vector contenant un ou plusieurs objets TextElement ou GraphicElement ou d’autres objets GroupElement. Utilisez un TextElement pour un paragraphe de texte homogène, un GraphicElement pour un élément graphique et un GroupElement pour une combinaison de texte et d’éléments graphiques ou pour plusieurs occurrences de ces éléments, ainsi que d’autres objets GroupElement.
	 
	 <p class="- topic/p ">La valeur par défaut est <codeph class="+ topic/ph pr-d/codeph ">null</codeph>.</p>
	 
	 <p class="- topic/p ">La modification de la propriété <codeph class="+ topic/ph pr-d/codeph ">content</codeph> change la validité de toute ligne créée précédemment en <codeph class="+ topic/ph pr-d/codeph ">TextLineValidity.INVALID</codeph>. Après la modification de <codeph class="+ topic/ph pr-d/codeph ">content</codeph>, la propriété <codeph class="+ topic/ph pr-d/codeph ">firstInvalidLine</codeph> est égale à la propriété <codeph class="+ topic/ph pr-d/codeph ">firstLine</codeph> et vous devez recréer les sauts de toutes les lignes du TextBlock.</p>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#ContentElement" class="- topic/link "><linktext class="- topic/linktext ">ContentElement</linktext></link><link href="flash.text.engine.xml#GraphicElement" class="- topic/link "><linktext class="- topic/linktext ">GraphicElement</linktext></link><link href="flash.text.engine.xml#GroupElement" class="- topic/link "><linktext class="- topic/linktext ">GroupElement</linktext></link><link href="flash.text.engine.xml#TextElement" class="- topic/link "><linktext class="- topic/linktext ">TextElement</linktext></link><link href="flash.text.engine.xml#TextBlock/createTextLine()" class="- topic/link "><linktext class="- topic/linktext ">createTextLine()</linktext></link></related-links></apiValue><apiValue id="flash.text.engine:TextBlock:firstInvalidLine:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">firstInvalidLine</apiName><shortdesc class="- topic/shortdesc ">
	 Identifie la première ligne du bloc de texte dans laquelle TextLine.validity n’est pas égale à TextLineValidity.VALID.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.text.engine:TextLine</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Identifie la première ligne du bloc de texte dans laquelle <codeph class="+ topic/ph pr-d/codeph ">TextLine.validity</codeph> n’est pas égal à <codeph class="+ topic/ph pr-d/codeph ">TextLineValidity.VALID</codeph>.
	 
	 <p class="- topic/p ">La valeur par défaut est <codeph class="+ topic/ph pr-d/codeph ">null</codeph>.</p>
	 
	 
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#TextLine/validity" class="- topic/link "><linktext class="- topic/linktext ">TextLine.validity</linktext></link><link href="flash.text.engine.xml#TextLineValidity" class="- topic/link "><linktext class="- topic/linktext ">TextLineValidity</linktext></link></related-links></apiValue><apiValue id="flash.text.engine:TextBlock:firstLine:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">firstLine</apiName><shortdesc class="- topic/shortdesc ">
	 Premier TextLine du TextBlock, le cas échéant.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.text.engine:TextLine</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Premier TextLine du TextBlock, le cas échéant.
	 
	 <p class="- topic/p ">La valeur par défaut est <codeph class="+ topic/ph pr-d/codeph ">null</codeph>.</p>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#TextLine" class="- topic/link "><linktext class="- topic/linktext ">TextLine</linktext></link></related-links></apiValue><apiValue id="flash.text.engine:TextBlock:lastLine:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">lastLine</apiName><shortdesc class="- topic/shortdesc ">
	 Dernier TextLine du TextBlock, le cas échéant.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.text.engine:TextLine</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Dernier TextLine du TextBlock, le cas échéant.
	 
	 <p class="- topic/p ">La valeur par défaut est <codeph class="+ topic/ph pr-d/codeph ">null</codeph>.</p>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#TextLine" class="- topic/link "><linktext class="- topic/linktext ">TextLine</linktext></link></related-links></apiValue><apiValue id="flash.text.engine:TextBlock:lineRotation:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">lineRotation</apiName><shortdesc class="- topic/shortdesc ">
	 Fait pivoter les lignes de texte du bloc de texte en une seule unité.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Si la propriété est définie sur une valeur n’appartenant pas à <codeph class="+ topic/ph pr-d/codeph ">TextRotation</codeph>.
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Si la propriété est définie sur <codeph class="+ topic/ph pr-d/codeph ">TextRotation.AUTO</codeph>.
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Fait pivoter les lignes de texte du bloc de texte en une seule unité. Appelez la méthode <codeph class="+ topic/ph pr-d/codeph ">createTextLine()</codeph> <i class="+ topic/ph hi-d/i ">après</i> avoir défini <codeph class="+ topic/ph pr-d/codeph ">lineRotation</codeph> pour qu’elle prenne effet. La valeur par défaut est <codeph class="+ topic/ph pr-d/codeph ">TextRotation.ROTATE_0</codeph>.
	 
	 <p class="- topic/p ">La rotation finale d’un glyphe dépend des valeurs de <codeph class="+ topic/ph pr-d/codeph ">, de ElementFormat.textRotation</codeph>, de <codeph class="+ topic/ph pr-d/codeph ">ContentElement.textRotation</codeph> et de <codeph class="+ topic/ph pr-d/codeph ">TextBlock.lineRotation</codeph>.</p>
	 
	 <p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">TextBlock.lineRotation</codeph> est généralement utilisé pour le texte asiatique. Pour créer un paragraphe de texte japonais vertical, procédez comme suit :</p>
     <ol class="- topic/ol "><li class="- topic/li ">Définissez la propriété <codeph class="+ topic/ph pr-d/codeph ">TextBlock.lineRotation</codeph> sur <codeph class="+ topic/ph pr-d/codeph ">TextRotation.ROTATE_90</codeph>.</li><li class="- topic/li ">Conservez la propriété <codeph class="+ topic/ph pr-d/codeph ">ElementFormat.textRotation</codeph> du contenu par défaut, <codeph class="+ topic/ph pr-d/codeph ">TextRotation.AUTO</codeph>.</li></ol>
	 
	 <p class="- topic/p ">Utilisez les constantes suivantes, définies dans la classe <codeph class="+ topic/ph pr-d/codeph ">TextRotation</codeph>, pour définir la valeur de cette propriété :</p>
	 
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Valeur de chaîne</entry><entry class="- topic/entry ">Description</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">TextRotation.ROTATE_0</codeph></entry><entry class="- topic/entry ">Les lignes ne pivotent pas.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">TextRotation.ROTATE_90</codeph></entry><entry class="- topic/entry ">Les lignes pivotent de 90 degrés vers la droite.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">TextRotation.ROTATE_180</codeph></entry><entry class="- topic/entry ">Les lignes pivotent de 180 degrés.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">TextRotation.ROTATE_270</codeph></entry><entry class="- topic/entry ">Les lignes pivotent de 270 degrés vers la droite.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">TextRotation.AUTO</codeph></entry><entry class="- topic/entry ">Non pris en charge.</entry></row></tbody></tgroup></adobetable>
	 
	 </apiDesc><example conref="examples\TextBlock_lineRotationExample.as" class="- topic/example "> Cet exemple ajoute un texte japonais dans un TextBlock et définit la propriété <codeph class="+ topic/ph pr-d/codeph ">lineRotation</codeph> sur TextRotation.ROTATE_90 pour afficher la ligne verticalement. 
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">

package {
    import flash.display.Sprite;
    import flash.text.engine.FontDescription;
    import flash.text.engine.TextBlock;
    import flash.text.engine.TextElement;
    import flash.text.engine.TextLine;
    import flash.text.engine.TextRotation;
    import flash.text.engine.ElementFormat;
    
    public class TextBlock_lineRotationExample extends Sprite {
        
        public function TextBlock_lineRotationExample():void {
            var Japanese:String = String.fromCharCode(
                0x5185, 0x95A3, 0x5E9C, 0x304C, 0x300C, 0x653F, 0x5E9C, 0x30A4,
                0x30F3, 0x30BF, 0x30FC, 0x30CD, 0x30C3, 0x30C8, 0x30C6, 0x30EC, 
                0x30D3, 0x300D, 0x306E, 0x52D5, 0x753B, 0x914D, 0x4FE1, 0x5411, 
                0x3051, 0x306B, 0x30A2, 0x30C9, 0x30D3, 0x30B7, 0x30B9, 0x30C6, 
                0x30E0, 0x30BA, 0x793E, 0x306E
            ) +
            "FMS 2" +
            String.fromCharCode(0x3092, 0x63A1, 0x7528, 0x3059, 0x308B, 0x3068, 
                0x767a, 0x8868, 0x3057, 0x307e, 0x3057, 0x305F, 0x3002);

            var fontDescription:FontDescription = new FontDescription("MS Mincho");
            var format:ElementFormat = new ElementFormat();
            format.fontSize = 15;
            format.fontDescription = fontDescription;
                        
            var textElement:TextElement = new TextElement(Japanese, format); 
            var textBlock:TextBlock = new TextBlock();
            textBlock.content = textElement;
            textBlock.lineRotation = TextRotation.ROTATE_90;

            var linePosition:Number = this.stage.stageWidth - 120;
            var previousLine:TextLine = null;
        
            while (true) {
                var textLine:TextLine = textBlock.createTextLine(
                    previousLine, 
                    300);
                if (textLine == null) 
                    break;
                textLine.y = 30;    
                textLine.x = linePosition;
                linePosition -= 24;
                addChild(textLine);                
                previousLine = textLine;
            }        
        }
    }
}
</codeblock></example></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#ContentElement/textRotation" class="- topic/link "><linktext class="- topic/linktext ">ContentElement.textRotation</linktext></link><link href="flash.text.engine.xml#ElementFormat/textRotation" class="- topic/link "><linktext class="- topic/linktext ">ElementFormat.textRotation</linktext></link><link href="flash.text.engine.xml#TextLine" class="- topic/link "><linktext class="- topic/linktext ">TextLine</linktext></link><link href="flash.text.engine.xml#TextRotation" class="- topic/link "><linktext class="- topic/linktext ">TextRotation</linktext></link></related-links></apiValue><apiValue id="flash.text.engine:TextBlock:tabStops:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">tabStops</apiName><shortdesc class="- topic/shortdesc ">
	 Spécifie les arrêts de tabulation du texte du bloc de texte, sous la forme d’un vecteur d’objets TabStop.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiType value="Vector$flash.text.engine:TabStop" name="type" class="- topic/state reference/state apiRef/apiType "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Les <codeph class="+ topic/ph pr-d/codeph ">tabStops</codeph> spécifiés contiennent des éléments <codeph class="+ topic/ph pr-d/codeph ">null</codeph>.
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Les <codeph class="+ topic/ph pr-d/codeph ">tabStops</codeph> spécifiés ne sont pas stockés par position croissante.
	  
	  </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Spécifie les arrêts de tabulation du texte du bloc de texte, sous la forme d’un vecteur d’objets <codeph class="+ topic/ph pr-d/codeph ">TabStop</codeph>.
	 
	 <p class="- topic/p ">La valeur par défaut est <codeph class="+ topic/ph pr-d/codeph ">null</codeph>, c’est-à-dire qu’aucun taquet de tabulation n’est spécifié. Si aucun taquet de tabulation n’est spécifié (ou si le point d’insertion se trouve au-delà du dernier taquet de tabulation spécifié), le moteur d’exécution crée des tabulations demi-pouce par défaut.</p>
	 
	 <p class="- topic/p ">Lorsque la propriété <codeph class="+ topic/ph pr-d/codeph ">tabStops</codeph> est définie, le TextBlock effectue une copie du vecteur pour usage interne. La modification du vecteur original ou de son contenu n’a aucune incidence sur le TextBlock. Lorsque la propriété <codeph class="+ topic/ph pr-d/codeph ">tabStops</codeph> est interrogée, une copie du vecteur interne est renvoyée. La modification du vecteur renvoyé ou de son contenu n’a aucune incidence sur le TextBlock.</p>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#TabStop" class="- topic/link "><linktext class="- topic/linktext ">TabStop</linktext></link></related-links></apiValue><apiValue id="flash.text.engine:TextBlock:textJustifier:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">textJustifier</apiName><shortdesc class="- topic/shortdesc ">
	 Spécifie le TextJustifier à utiliser lors de la création de ligne.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.text.engine:TextJustifier</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Si défini sur une valeur ne correspondant pas à une sous-classe connue de <codeph class="+ topic/ph pr-d/codeph ">TextJustifier</codeph>.
	 
	 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Spécifie le TextJustifier à utiliser lors de la création de ligne.
	 
	 <p class="- topic/p ">La valeur par défaut est un objet TextJustifier créé par défaut.</p>
	 
	 <p class="- topic/p ">Lorsque la propriété <codeph class="+ topic/ph pr-d/codeph ">textJustifier</codeph> est définie, le TextBlock effectue une copie de l’objet pour usage interne. La modification de l’objet original n’a aucune incidence sur le TextBlock. Lorsque la propriété <codeph class="+ topic/ph pr-d/codeph ">textJustifier</codeph> est interrogée, une copie de l’objet interne est renvoyée. Nous vous rappelons que la modification de cet objet renvoyé n’a aucune incidence sur le TextBlock.</p>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#EastAsianJustifier" class="- topic/link "><linktext class="- topic/linktext ">EastAsianJustifier</linktext></link><link href="flash.text.engine.xml#SpaceJustifier" class="- topic/link "><linktext class="- topic/linktext ">SpaceJustifier</linktext></link><link href="flash.text.engine.xml#TextJustifier" class="- topic/link "><linktext class="- topic/linktext ">TextJustifier</linktext></link></related-links></apiValue><apiValue id="flash.text.engine:TextBlock:textLineCreationResult:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">textLineCreationResult</apiName><shortdesc class="- topic/shortdesc ">
	 Indique le résultat d’une opération createTextLine().</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Indique le résultat d’une opération <codeph class="+ topic/ph pr-d/codeph ">createTextLine()</codeph>. La modification du contenu du bloc invalide les sauts de ligne précédents et réinitialise cette propriété sur <codeph class="+ topic/ph pr-d/codeph ">null</codeph>.
	 
	 <p class="- topic/p ">La valeur par défaut est <codeph class="+ topic/ph pr-d/codeph ">null</codeph>.</p>
	 
	 <p class="- topic/p ">Les valeurs de cette propriété sont les membres de <codeph class="+ topic/ph pr-d/codeph ">TextLineCreationResult</codeph>.</p>
	 
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Valeur de chaîne</entry><entry class="- topic/entry ">Description</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">TextLineCreationResult.SUCCESS</codeph></entry><entry class="- topic/entry ">La ligne a bien été séparée.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">TextLineCreationResult.COMPLETE</codeph></entry><entry class="- topic/entry ">Soit la nouvelle ligne créée s’alignait parfaitement avec les lignes suivantes qui sont passées de POSSIBLY_INVALID à VALID, soit aucune ligne n’a été créée car l’ensemble du texte du bloc a déjà été séparé.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">TextLineCreationResult.INSUFFICIENT_WIDTH</codeph></entry><entry class="- topic/entry ">Aucune ligne n’a été créée car le texte n’entrait pas dans la largeur spécifiée.</entry></row></tbody></tgroup></adobetable>
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#TextLineCreationResult" class="- topic/link "><linktext class="- topic/linktext ">TextLineCreationResult</linktext></link></related-links></apiValue></apiClassifier><apiClassifier languages="" id="flash.text.engine:TextLineCreationResult" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">TextLineCreationResult</apiName><shortdesc class="- topic/shortdesc ">
La classe TextLineCreationResult est une énumération de valeurs constantes utilisées avec TextBlock.textLineCreationResult.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
La classe TextLineCreationResult est une énumération des valeurs constantes utilisées avec <codeph class="+ topic/ph pr-d/codeph ">TextBlock.textLineCreationResult</codeph>. 

</apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#TextBlock/createTextLine()" class="- topic/link "><linktext class="- topic/linktext ">TextBlock.createTextLine()</linktext></link><link href="flash.text.engine.xml#TextBlock/textLineCreationResult" class="- topic/link "><linktext class="- topic/linktext ">TextBlock.textLineCreationResult</linktext></link></related-links><apiValue id="flash.text.engine:TextLineCreationResult:COMPLETE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">COMPLETE</apiName><shortdesc class="- topic/shortdesc "> 
	Indique qu’aucune ligne n’a été créée car l’ensemble du texte du bloc a déjà été scindé.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">complete</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	Indique qu’aucune ligne n’a été créée car l’ensemble du texte du bloc a déjà été scindé.
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.text.engine:TextLineCreationResult:EMERGENCY" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">EMERGENCY</apiName><shortdesc class="- topic/shortdesc "> 
	Indique que la ligne a été créée avec une séparation d’urgence car aucune possibilité de saut n’était disponible dans la largeur spécifiée.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">emergency</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	Indique que la ligne a été créée avec une séparation d’urgence car aucune possibilité de saut n’était disponible dans la largeur spécifiée.
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.text.engine:TextLineCreationResult:INSUFFICIENT_WIDTH" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">INSUFFICIENT_WIDTH</apiName><shortdesc class="- topic/shortdesc "> 
	Indique qu’aucune ligne n’a été créée car le texte n’entrait pas dans la largeur spécifiée et fitSomething n’était pas spécifié dans l’appel à createTextLine().</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">insufficientWidth</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	Indique qu’aucune ligne n’a été créée car le texte n’entrait pas dans la largeur spécifiée et <codeph class="+ topic/ph pr-d/codeph ">fitSomething</codeph> n’était pas spécifié dans l’appel à <codeph class="+ topic/ph pr-d/codeph ">createTextLine()</codeph>.
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.text.engine:TextLineCreationResult:SUCCESS" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">SUCCESS</apiName><shortdesc class="- topic/shortdesc "> 
	Indique que la ligne a bien été scindée.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">success</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	Indique que la ligne a bien été scindée.
	
	</apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.text.engine:LigatureLevel" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">LigatureLevel</apiName><shortdesc class="- topic/shortdesc ">
La classe LigatureLevel est une énumération des valeurs constantes utilisées pour définir la propriété ligatureLevel de la classe ElementFormat.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
La classe LigatureLevel est une énumération des valeurs constantes utilisées pour définir la propriété <codeph class="+ topic/ph pr-d/codeph ">ligatureLevel</codeph> de la classe ElementFormat. Une ligature se produit lorsque plusieurs formes de lettres sont unies dans un seul glyphe. Les ligatures remplacent généralement des caractères consécutifs partageant des composants communs, par exemple les paires de lettres ’fi’, ’fl’ ou ’ae’. Elles sont utilisées avec les jeux de caractères latins et non latins. 
<p class="- topic/p "><b class="+ topic/ph hi-d/b ">Remarque :</b> lorsque vous utilisez les polices Arabic ou Syriac, <codeph class="+ topic/ph pr-d/codeph ">ligatureLevel</codeph> doit être défini sur MINIMUM ou une valeur supérieure.</p>

</apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#ElementFormat/ligatureLevel" class="- topic/link "><linktext class="- topic/linktext ">ElementFormat.ligatureLevel</linktext></link></related-links><apiValue id="flash.text.engine:LigatureLevel:COMMON" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">COMMON</apiName><shortdesc class="- topic/shortdesc "> 
	Permet de spécifier des ligatures courantes.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">common</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	Permet de spécifier des ligatures courantes.
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.text.engine:LigatureLevel:EXOTIC" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">EXOTIC</apiName><shortdesc class="- topic/shortdesc "> 
	Permet de spécifier des ligatures exotiques.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">exotic</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	Permet de spécifier des ligatures exotiques.
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.text.engine:LigatureLevel:MINIMUM" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">MINIMUM</apiName><shortdesc class="- topic/shortdesc "> 
	Permet de spécifier des ligatures minimales.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">minimum</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	Permet de spécifier des ligatures minimales.
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.text.engine:LigatureLevel:NONE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">NONE</apiName><shortdesc class="- topic/shortdesc "> 
	Permet de ne spécifier aucune ligature.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">none</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	Permet de ne spécifier aucune ligature.
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.text.engine:LigatureLevel:UNCOMMON" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">UNCOMMON</apiName><shortdesc class="- topic/shortdesc "> 
	Permet de spécifier des ligatures rares.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">uncommon</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	Permet de spécifier des ligatures rares.
	
	</apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.text.engine:TextRotation" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">TextRotation</apiName><shortdesc class="- topic/shortdesc ">
La classe TextRotation énumère les valeurs constantes utilisées avec les propriétés suivantes : ElementFormat.textRotation, ContentElement.textRotation, TextBlock.lineRotation et TextLine.getAtomTextRotation().</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
La classe TextRotation énumère les valeurs constantes utilisées avec les propriétés suivantes : <codeph class="+ topic/ph pr-d/codeph ">ElementFormat.textRotation</codeph>, <codeph class="+ topic/ph pr-d/codeph ">ContentElement.textRotation</codeph>, <codeph class="+ topic/ph pr-d/codeph ">TextBlock.lineRotation</codeph> et <codeph class="+ topic/ph pr-d/codeph ">TextLine.getAtomTextRotation()</codeph>. 

<p class="- topic/p ">La rotation finale des glyphes est la somme de <codeph class="+ topic/ph pr-d/codeph "> TextBlock.lineRotation</codeph>, <codeph class="+ topic/ph pr-d/codeph ">ElementFormat.textRotation</codeph> et <codeph class="+ topic/ph pr-d/codeph ">ContentElement.textRotation</codeph>.</p>

</apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#ElementFormat/textRotation" class="- topic/link "><linktext class="- topic/linktext ">ElementFormat.textRotation</linktext></link><link href="flash.text.engine.xml#ContentElement/textRotation" class="- topic/link "><linktext class="- topic/linktext ">ContentElement.textRotation</linktext></link><link href="flash.text.engine.xml#TextBlock/lineRotation" class="- topic/link "><linktext class="- topic/linktext ">TextBlock.lineRotation</linktext></link><link href="flash.text.engine.xml#TextLine/getAtomTextRotation()" class="- topic/link "><linktext class="- topic/linktext ">TextLine.getAtomTextRotation()</linktext></link></related-links><apiValue id="flash.text.engine:TextRotation:AUTO" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">AUTO</apiName><shortdesc class="- topic/shortdesc "> 
	Spécifie une rotation de 90 degrés vers la gauche pour les glyphes larges et de pleine épaisseur uniquement, tels que déterminés par les propriétés Unicode du glyphe.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">auto</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	Spécifie une rotation de 90 degrés vers la gauche pour les glyphes larges et de pleine épaisseur uniquement, tels que déterminés par les propriétés Unicode du glyphe. Cette valeur est généralement utilisée avec du texte asiatique pour ne faire pivoter que les glyphes requérant une rotation. Cette rotation est uniquement appliquée au texte vertical pour orienter verticalement les caractères larges et de pleine épaisseur sans affecter les autres caractères.
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.text.engine:TextRotation:ROTATE_0" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">ROTATE_0</apiName><shortdesc class="- topic/shortdesc "> 
	Spécifie aucune rotation.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">rotate0</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	Spécifie aucune rotation.
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.text.engine:TextRotation:ROTATE_180" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">ROTATE_180</apiName><shortdesc class="- topic/shortdesc "> 
	Spécifie une rotation de 180 degrés.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">rotate180</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	Spécifie une rotation de 180 degrés.
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.text.engine:TextRotation:ROTATE_270" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">ROTATE_270</apiName><shortdesc class="- topic/shortdesc "> 
	Spécifie une rotation vers la droite de 270 degrés.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">rotate270</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	Spécifie une rotation vers la droite de 270 degrés.
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.text.engine:TextRotation:ROTATE_90" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">ROTATE_90</apiName><shortdesc class="- topic/shortdesc "> 
	Spécifie une rotation vers la droite de 90 degrés.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">rotate90</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	Spécifie une rotation vers la droite de 90 degrés.
	
	</apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.text.engine:TabAlignment" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">TabAlignment</apiName><shortdesc class="- topic/shortdesc ">
La classe TabAlignment est une énumération de valeurs constantes que vous pouvez utiliser pour définir la propriété tabAlignment de la classe TabStop.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
La classe TabAlignment est une énumération de valeurs constantes que vous pouvez utiliser pour définir la propriété <codeph class="+ topic/ph pr-d/codeph ">tabAlignment</codeph> de la classe <codeph class="+ topic/ph pr-d/codeph ">TabStop</codeph>. 


</apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#TabStop/alignment" class="- topic/link "><linktext class="- topic/linktext ">TabStop.alignment</linktext></link><link href="flash.text.engine.xml#TextBlock/tabStops" class="- topic/link "><linktext class="- topic/linktext ">TextBlock.tabStops</linktext></link></related-links><apiValue id="flash.text.engine:TabAlignment:CENTER" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">CENTER</apiName><shortdesc class="- topic/shortdesc "> 
	Positionne le centre du texte tabulé au niveau du taquet de tabulation.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">center</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	Positionne le centre du texte tabulé au niveau du taquet de tabulation.
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.text.engine:TabAlignment:DECIMAL" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">DECIMAL</apiName><shortdesc class="- topic/shortdesc "> 
	Positionne le jeton d’alignement du texte tabulé au niveau du taquet de tabulation.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">decimal</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	Positionne le jeton d’alignement du texte tabulé au niveau du taquet de tabulation.
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#TabStop/decimalAlignmentToken" class="- topic/link "><linktext class="- topic/linktext ">TabStop.decimalAlignmentToken</linktext></link></related-links></apiValue><apiValue id="flash.text.engine:TabAlignment:END" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">END</apiName><shortdesc class="- topic/shortdesc "> 
	Positionne la fin du texte tabulé au niveau du taquet de tabulation.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">end</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	Positionne la fin du texte tabulé au niveau du taquet de tabulation.
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.text.engine:TabAlignment:START" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">START</apiName><shortdesc class="- topic/shortdesc "> 
	Positionne le début du texte tabulé au niveau du taquet de tabulation.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">start</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	Positionne le début du texte tabulé au niveau du taquet de tabulation.
	
	</apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.text.engine:GraphicElement" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">GraphicElement</apiName><shortdesc class="- topic/shortdesc ">
 La classe GraphicElement représente un élément graphique dans un objet TextBlock ou GroupElement.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.text.engine:ContentElement</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 La classe GraphicElement représente un élément graphique dans un objet TextBlock ou GroupElement. Affectez un objet GraphicElement à la propriété <codeph class="+ topic/ph pr-d/codeph ">content</codeph> d’un objet TextBlock pour afficher un graphique ou une image avec <codeph class="+ topic/ph pr-d/codeph ">TextBlock.createTextLine()</codeph>. Puis, affectez-le à un objet GroupElement pour le combiner avec d’autres éléments graphiques et de texte.
 
 </apiDesc><example conref="examples\GraphicElementExample.as" class="- topic/example "> L’exemple suivant crée un TextBlock avec un GraphicElement (case rouge) et l’affiche en ajoutant un second TextBlock contenant une légende au-dessous.
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">

package {

    import flash.display.Sprite;
    import flash.display.MovieClip;
    import flash.text.engine.TextBlock;
    import flash.text.engine.TextElement;
    import flash.text.engine.GraphicElement;
    import flash.text.engine.TextLine;
    import flash.text.engine.ElementFormat;
    import flash.text.engine.FontDescription;
    
    public class GraphicElementExample extends Sprite {
        
        public function GraphicElementExample():void {
            
            var format:ElementFormat = new ElementFormat();
            format.fontSize = 14;
            var redBox:MovieClip = new MovieClip();
            redBox.graphics.beginFill(0xCC0000, 1.0);
            redBox.graphics.drawRect(0,0, 200, 200);
            redBox.graphics.endFill();   
            var graphicElement:GraphicElement = new GraphicElement(redBox,redBox.width,redBox.height, format);
            var textBlock:TextBlock = new TextBlock();
            textBlock.content = graphicElement;
            var textLine1:TextLine = textBlock.createTextLine(null,redBox.width);
            addChild(textLine1);
            textLine1.x = 15
            textLine1.y = 215
            var str:String = "Your picture here ...";
            var textElement:TextElement = new TextElement(str, format);
            textBlock = new TextBlock();
            textBlock.content = textElement;
            var textLine2 = textBlock.createTextLine(null, 300);
            addChild(textLine2);
            textLine2.x = textLine1.x;
            textLine2.y += textLine1.y + format.fontSize;        
        }
    }    
}
</codeblock></example></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#ContentElement" class="- topic/link "><linktext class="- topic/linktext ">ContentElement</linktext></link><link href="flash.text.engine.xml#GroupElement" class="- topic/link "><linktext class="- topic/linktext ">GroupElement</linktext></link><link href="flash.text.engine.xml#TextBlock" class="- topic/link "><linktext class="- topic/linktext ">TextBlock</linktext></link></related-links><apiConstructor id="flash.text.engine:GraphicElement:GraphicElement" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">GraphicElement</apiName><shortdesc class="- topic/shortdesc ">
	 Crée une occurrence de GraphicElement.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">graphic</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.display:DisplayObject</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Objet DisplayObject qui permet de renseigner GraphicElement. La valeur par défaut est <codeph class="+ topic/ph pr-d/codeph ">null</codeph>.
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">elementWidth</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">15.0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Largeur de la zone réservée à l’élément, en pixels. La valeur par défaut est 15.
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">elementHeight</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">15.0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Hauteur de la zone réservée à l’élément, en pixels. La valeur par défaut est 15.
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">elementFormat</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.text.engine:ElementFormat</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Format d’élément de l’élément. La valeur par défaut est <codeph class="+ topic/ph pr-d/codeph ">null</codeph>.
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">eventMirror</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.events:EventDispatcher</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Objet <codeph class="+ topic/ph pr-d/codeph ">EventDispatcher</codeph> qui reçoit des copies de chaque événement déclenché vers les lignes de texte créées en fonction de cet élément de contenu. La valeur par défaut est <codeph class="+ topic/ph pr-d/codeph ">null</codeph>.
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">textRotation</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">rotate0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Rotation appliquée à l’élément en tant qu’unité. Utilisez les constantes <codeph class="+ topic/ph pr-d/codeph ">flash.text.engine.TextRotation</codeph> pour cette propriété. La valeur par défaut est <codeph class="+ topic/ph pr-d/codeph ">flash.text.engine.TextRotation.ROTATE_0</codeph>.
   	 </apiDesc></apiParam></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Crée une occurrence de GraphicElement.
	 
	 <p class="- topic/p ">Le point d’alignement du graphique s’aligne sur le coin supérieur gauche de la zone définie par <codeph class="+ topic/ph pr-d/codeph ">elementHeight</codeph>, <codeph class="+ topic/ph pr-d/codeph ">elementWidth</codeph> et <codeph class="+ topic/ph pr-d/codeph ">elementFormat.baselineShift</codeph>. Le graphique n’est pas mis à l’échelle en fonction de la taille de la zone. Si GraphicElement possède un <codeph class="+ topic/ph pr-d/codeph ">eventMirror</codeph>, les propriétés <codeph class="+ topic/ph pr-d/codeph ">elementWidth</codeph> et <codeph class="+ topic/ph pr-d/codeph ">elementHeight</codeph>, et non le graphique, déterminent la taille et la position de la zone miroir obtenue. Si un objet Loader est utilisé, il est possible que le graphique ne soit pas chargé lors de la création de la ligne de texte et des zones miroir.</p>
	 
	 </apiDesc></apiConstructorDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#GroupElement" class="- topic/link "><linktext class="- topic/linktext ">GroupElement</linktext></link></related-links></apiConstructor><apiValue id="flash.text.engine:GraphicElement:elementHeight:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">elementHeight</apiName><shortdesc class="- topic/shortdesc ">
	 Hauteur en pixels à réserver au graphique dans la ligne.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Hauteur en pixels à réserver au graphique dans la ligne. C’est l’appelant qui effectue la mise à l’échelle du graphique.
	 
	 <p class="- topic/p ">La valeur par défaut est 15.0.</p>
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.text.engine:GraphicElement:elementWidth:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">elementWidth</apiName><shortdesc class="- topic/shortdesc ">
	 Largeur en pixels à réserver au graphique dans la ligne.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Largeur en pixels à réserver au graphique dans la ligne. C’est l’appelant qui effectue la mise à l’échelle du graphique.
	 
	 <p class="- topic/p ">La valeur par défaut est 15.0.</p>
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.text.engine:GraphicElement:graphic:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">graphic</apiName><shortdesc class="- topic/shortdesc ">
	 Objet DisplayObject à utiliser en tant que graphique du GraphicElement.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.display:DisplayObject</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Objet DisplayObject à utiliser en tant que graphique du GraphicElement.
	 
	 <p class="- topic/p ">La valeur par défaut est <codeph class="+ topic/ph pr-d/codeph ">null</codeph>.</p>
	 
	 <p class="- topic/p ">Lorsque le GraphicElement devient une partie d’une ligne de texte, le graphique est ajouté en tant qu’enfant de la ligne. La définition du graphique supprime l’ancien graphique de la ligne et ajoute le nouveau.</p>
	 
	 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.text.engine:FontWeight" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">FontWeight</apiName><shortdesc class="- topic/shortdesc ">
La classe FontWeight est une énumération de valeurs constantes utilisées avec FontDescription.fontWeight.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
La classe FontWeight est une énumération de valeurs constantes utilisées avec <codeph class="+ topic/ph pr-d/codeph ">FontDescription.fontWeight</codeph>. 

</apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#FontDescription/fontWeight" class="- topic/link "><linktext class="- topic/linktext ">flash.text.engine.FontDescription.fontWeight</linktext></link></related-links><apiValue id="flash.text.engine:FontWeight:BOLD" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">BOLD</apiName><shortdesc class="- topic/shortdesc "> 
	Utilisé pour indiquer une épaisseur de police gras.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">bold</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	Utilisé pour indiquer une épaisseur de police gras.
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.text.engine:FontWeight:NORMAL" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">NORMAL</apiName><shortdesc class="- topic/shortdesc "> 
	Utilisé pour indiquer une épaisseur de police normale.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">normal</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	Utilisé pour indiquer une épaisseur de police normale.
	
	</apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.text.engine:TextBaseline" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">TextBaseline</apiName><shortdesc class="- topic/shortdesc ">
La classe TextBaseline est une énumération de valeurs constantes utilisées pour définir les propriétés dominantBaseline et alignmentBaseline de la classe ElementFormat.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
La classe TextBaseline est une énumération de valeurs constantes utilisées pour définir les propriétés <codeph class="+ topic/ph pr-d/codeph ">dominantBaseline</codeph> et <codeph class="+ topic/ph pr-d/codeph ">alignmentBaseline</codeph> de la classe ElementFormat. Vous pouvez également l’utiliser dans la propriété <codeph class="+ topic/ph pr-d/codeph ">baselineZero</codeph> de la classe TextBlock. Examinez le cas suivant :
<p class="- topic/p "><adobeimage alt="Alignement de la ligne de base du texte" href="../../../images/textBaselines.gif" placement="inline" class="+ topic/image adobe-d/adobeimage "/></p>
<p class="- topic/p ">La ligne se compose de quatre objets <codeph class="+ topic/ph pr-d/codeph ">TextElement</codeph>, contenant respectivement ’a’, ’b’, ’cccccccc’ et ’X’. L’élément contenant ’X’ détermine les lignes de base des lignes car il s’agit du plus grand élément de la ligne. La ligne de base des caractères romains de l’élément ’X’ est alignée sur la ligne de base des caractères romains de la ligne. Le haut idéographique de l’élément ’a’ est aligné sur le haut idéographique de la ligne. Le bas idéographique de l’élément ’b’ est aligné sur le bas idéographique de la ligne. Le centre idéographique de l’élément ’cccccccc’ est aligné sur le centre idéographique de la ligne.</p>

</apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#ElementFormat/dominantBaseline" class="- topic/link "><linktext class="- topic/linktext ">ElementFormat.dominantBaseline</linktext></link><link href="flash.text.engine.xml#ElementFormat/alignmentBaseline" class="- topic/link "><linktext class="- topic/linktext ">ElementFormat.alignmentBaseline</linktext></link><link href="flash.text.engine.xml#TextBlock/baselineZero" class="- topic/link "><linktext class="- topic/linktext ">TextBlock.baselineZero</linktext></link></related-links><apiValue id="flash.text.engine:TextBaseline:ASCENT" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">ASCENT</apiName><shortdesc class="- topic/shortdesc "> 
	Spécifie une ligne de base ascendante.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">ascent</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	Spécifie une ligne de base ascendante. Dans le cas d’un élément de texte, cette valeur est déterminée par la police et sa taille en points. Dans le cas d’un élément graphique, le moteur de saisie utilise le haut géométrique de l’élément.
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#ElementFormat/dominantBaseline" class="- topic/link "><linktext class="- topic/linktext ">ElementFormat.dominantBaseline</linktext></link><link href="flash.text.engine.xml#ElementFormat/alignmentBaseline" class="- topic/link "><linktext class="- topic/linktext ">ElementFormat.alignmentBaseline</linktext></link><link href="flash.text.engine.xml#TextBlock/baselineZero" class="- topic/link "><linktext class="- topic/linktext ">TextBlock.baselineZero</linktext></link></related-links></apiValue><apiValue id="flash.text.engine:TextBaseline:DESCENT" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">DESCENT</apiName><shortdesc class="- topic/shortdesc "> 
	Spécifie une ligne de base descendante.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">descent</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	Spécifie une ligne de base descendante. Dans le cas d’un élément de texte, cette valeur est déterminée par la police et sa taille en points. Dans le cas d’un élément graphique, l’élément de texte utilise le bas géométrique de l’élément.
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#ElementFormat/dominantBaseline" class="- topic/link "><linktext class="- topic/linktext ">ElementFormat.dominantBaseline</linktext></link><link href="flash.text.engine.xml#ElementFormat/alignmentBaseline" class="- topic/link "><linktext class="- topic/linktext ">ElementFormat.alignmentBaseline</linktext></link><link href="flash.text.engine.xml#TextBlock/baselineZero" class="- topic/link "><linktext class="- topic/linktext ">TextBlock.baselineZero</linktext></link></related-links></apiValue><apiValue id="flash.text.engine:TextBaseline:IDEOGRAPHIC_BOTTOM" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">IDEOGRAPHIC_BOTTOM</apiName><shortdesc class="- topic/shortdesc "> 
	Spécifie une ligne de base de bas idéographique.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">ideographicBottom</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	Spécifie une ligne de base de bas idéographique. Dans le cas d’un élément de texte, cette valeur est déterminée par la police et sa taille en points. Dans le cas d’un élément graphique, le moteur de saisie utilise le bas géométrique de l’élément.
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#ElementFormat/dominantBaseline" class="- topic/link "><linktext class="- topic/linktext ">ElementFormat.dominantBaseline</linktext></link><link href="flash.text.engine.xml#ElementFormat/alignmentBaseline" class="- topic/link "><linktext class="- topic/linktext ">ElementFormat.alignmentBaseline</linktext></link><link href="flash.text.engine.xml#TextBlock/baselineZero" class="- topic/link "><linktext class="- topic/linktext ">TextBlock.baselineZero</linktext></link></related-links></apiValue><apiValue id="flash.text.engine:TextBaseline:IDEOGRAPHIC_CENTER" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">IDEOGRAPHIC_CENTER</apiName><shortdesc class="- topic/shortdesc "> 
	Spécifie une ligne de base de centre idéographique.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">ideographicCenter</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	Spécifie une ligne de base de centre idéographique. Dans le cas d’un élément de texte, cette valeur est déterminée par la police et sa taille en points. Dans le cas d’un élément graphique, le moteur de saisie utilise le centre géométrique de l’élément.
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#ElementFormat/dominantBaseline" class="- topic/link "><linktext class="- topic/linktext ">ElementFormat.dominantBaseline</linktext></link><link href="flash.text.engine.xml#ElementFormat/alignmentBaseline" class="- topic/link "><linktext class="- topic/linktext ">ElementFormat.alignmentBaseline</linktext></link><link href="flash.text.engine.xml#TextBlock/baselineZero" class="- topic/link "><linktext class="- topic/linktext ">TextBlock.baselineZero</linktext></link></related-links></apiValue><apiValue id="flash.text.engine:TextBaseline:IDEOGRAPHIC_TOP" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">IDEOGRAPHIC_TOP</apiName><shortdesc class="- topic/shortdesc "> 
	Spécifie une ligne de base idéographique.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">ideographicTop</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	Spécifie une ligne de base idéographique. Dans le cas d’un élément de texte, cette valeur est déterminée par la police et sa taille en points. Dans le cas d’un élément graphique, le moteur de saisie utilise le haut géométrique de l’élément.
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#ElementFormat/dominantBaseline" class="- topic/link "><linktext class="- topic/linktext ">ElementFormat.dominantBaseline</linktext></link><link href="flash.text.engine.xml#ElementFormat/alignmentBaseline" class="- topic/link "><linktext class="- topic/linktext ">ElementFormat.alignmentBaseline</linktext></link><link href="flash.text.engine.xml#TextBlock/baselineZero" class="- topic/link "><linktext class="- topic/linktext ">TextBlock.baselineZero</linktext></link></related-links></apiValue><apiValue id="flash.text.engine:TextBaseline:ROMAN" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">ROMAN</apiName><shortdesc class="- topic/shortdesc "> 
	Spécifie une ligne de base de caractères romains.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">roman</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	Spécifie une ligne de base de caractères romains. Dans le cas d’un élément de texte, cette valeur est déterminée par la police et sa taille en points. Dans le cas d’un élément graphique, le moteur de saisie utilise le bas géométrique de l’élément.
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#ElementFormat/dominantBaseline" class="- topic/link "><linktext class="- topic/linktext ">ElementFormat.dominantBaseline</linktext></link><link href="flash.text.engine.xml#ElementFormat/alignmentBaseline" class="- topic/link "><linktext class="- topic/linktext ">ElementFormat.alignmentBaseline</linktext></link><link href="flash.text.engine.xml#TextBlock/baselineZero" class="- topic/link "><linktext class="- topic/linktext ">TextBlock.baselineZero</linktext></link></related-links></apiValue><apiValue id="flash.text.engine:TextBaseline:USE_DOMINANT_BASELINE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">USE_DOMINANT_BASELINE</apiName><shortdesc class="- topic/shortdesc "> 
	Spécifie qu’alignmentBaseline correspond à dominantBaseline.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">useDominantBaseline</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	Spécifie qu’alignmentBaseline correspond à dominantBaseline. Utilisez cette valeur uniquement pour définir <codeph class="+ topic/ph pr-d/codeph ">ElementFormat.alignmentBaseline</codeph>.
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#ElementFormat/alignmentBaseline" class="- topic/link "><linktext class="- topic/linktext ">ElementFormat.alignmentBaseline</linktext></link></related-links></apiValue></apiClassifier><apiClassifier languages="" id="flash.text.engine:BreakOpportunity" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">BreakOpportunity</apiName><shortdesc class="- topic/shortdesc ">
La classe BreakOpportunity énumère les valeurs constantes que vous pouvez utiliser pour définir la propriété breakOpportunity de la classe ElementFormat.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
La classe BreakOpportunity énumère les valeurs constantes que vous pouvez utiliser pour définir la propriété <codeph class="+ topic/ph pr-d/codeph ">breakOpportunity</codeph> de la classe ElementFormat. Cette propriété détermine quels caractères peuvent être utilisés pour effectuer un saut de ligne lorsque le texte est scindé en plusieurs lignes. 


</apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#ElementFormat/breakOpportunity" class="- topic/link "><linktext class="- topic/linktext ">ElementFormat.breakOpportunity</linktext></link></related-links><apiValue id="flash.text.engine:BreakOpportunity:ALL" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">ALL</apiName><shortdesc class="- topic/shortdesc "> 
	Considère tous les caractères de l’objet ContentElement comme opportunités de sauts de ligne ; en d’autres termes, un saut de ligne se produit après chaque caractère.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">all</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	Considère tous les caractères de l’objet ContentElement comme opportunités de sauts de ligne ; en d’autres termes, un saut de ligne se produit après chaque caractère. Vous pouvez utiliser cette option pour générer des lignes les plus courtes possibles, que vous pouvez utiliser pour créer du texte sur une ligne ou des effets semblables.
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.text.engine:BreakOpportunity:ANY" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">ANY</apiName><shortdesc class="- topic/shortdesc "> 
	Traite tous les caractères de l’objet ContentElement comme des opportunités de saut de ligne.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">any</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	Traite tous les caractères de l’objet ContentElement comme des opportunités de saut de ligne. Cette valeur est généralement utilisée lorsque du texte Romain est intégré dans du texte asiatique et qu’il est préférable que les sauts de ligne interviennent au milieu des mots.
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.text.engine:BreakOpportunity:AUTO" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">AUTO</apiName><shortdesc class="- topic/shortdesc "> 
	Base les possibilités de saut de ligne sur les propriétés des caractères Unicode.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">auto</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	Base les possibilités de saut de ligne sur les propriétés des caractères Unicode. Ce paramètre implémente les propriétés de saut de ligne Unicode définies par la norme Unicode Annexe #14. 
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="http://unicode.org/reports/tr14/tr14-12.html" class="- topic/link "><linktext class="- topic/linktext ">Article sur les propriétés des sauts de ligne Unicode.</linktext></link></related-links></apiValue><apiValue id="flash.text.engine:BreakOpportunity:NONE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">NONE</apiName><shortdesc class="- topic/shortdesc "> 
	Ne traite aucun caractère de l’objet ContentElement comme une opportunité de saut de ligne.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">none</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	Ne traite aucun caractère de l’objet ContentElement comme une opportunité de saut de ligne.
	
	</apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.text.engine:DigitWidth" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">DigitWidth</apiName><shortdesc class="- topic/shortdesc ">
La classe DigitWidth est une énumération de valeurs constantes utilisées pour définir la propriété digitWidth de la classe ElementFormat.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
La classe DigitWidth est une énumération de valeurs constantes utilisées pour définir la propriété digitWidth de la classe <codeph class="+ topic/ph pr-d/codeph ">ElementFormat</codeph>. 


</apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#ElementFormat/digitWidth" class="- topic/link "><linktext class="- topic/linktext ">flash.text.engine.ElementFormat.digitWidth</linktext></link></related-links><apiValue id="flash.text.engine:DigitWidth:DEFAULT" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">DEFAULT</apiName><shortdesc class="- topic/shortdesc "> 
	Permet de spécifier la largeur par défaut des chiffres.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">default</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	Permet de spécifier la largeur par défaut des chiffres. Les résultats dépendent de la police ; les caractères utilisent les paramètres spécifiés par le concepteur de polices sans qu’aucune fonction ne soit appliquée. 
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.text.engine:DigitWidth:PROPORTIONAL" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">PROPORTIONAL</apiName><shortdesc class="- topic/shortdesc "> 
	Permet de spécifier la largeur proportionnelle des chiffres.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">proportional</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	Permet de spécifier la largeur proportionnelle des chiffres.
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.text.engine:DigitWidth:TABULAR" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">TABULAR</apiName><shortdesc class="- topic/shortdesc "> 
	Permet de spécifier la largeur tabulaire des chiffres.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">tabular</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	Permet de spécifier la largeur tabulaire des chiffres.
	
	</apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.text.engine:CFFHinting" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">CFFHinting</apiName><shortdesc class="- topic/shortdesc ">
La classe CFFHinting définit des valeurs pour les repères CFF dans la classe FontDescription.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
La classe CFFHinting définit des valeurs pour les repères CFF dans la classe FontDescription.

<p class="- topic/p ">Les repères ajustent l’affichage d’une police de contour de sorte qu’elle s’aligne sur la grille de pixels. Sur des écrans de petite taille, les repères produisent un texte clair et lisible pour les lecteurs humains.
</p>

</apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#FontDescription" class="- topic/link "><linktext class="- topic/linktext ">flash.text.engine.FontDescription</linktext></link></related-links><apiValue id="flash.text.engine:CFFHinting:HORIZONTAL_STEM" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">HORIZONTAL_STEM</apiName><shortdesc class="- topic/shortdesc ">
	Adapte les épaisseurs horizontales fortes à la grille de pixels pour améliorer la lisibilité.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">horizontalStem</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Adapte les épaisseurs horizontales fortes à la grille de pixels pour améliorer la lisibilité. Cette constante permet de définir la propriété <codeph class="+ topic/ph pr-d/codeph ">cffHinting</codeph> de la classe FontDescription. Utilisez la syntaxe <codeph class="+ topic/ph pr-d/codeph ">CFFHinting.HORIZONTAL_STEM</codeph>.
	
	<p class="- topic/p "><b class="+ topic/ph hi-d/b ">Remarque :</b> non recommandée pour l’animation.</p>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#FontDescription/cffHinting" class="- topic/link "><linktext class="- topic/linktext ">flash.text.engine.FontDescription.cffHinting</linktext></link></related-links></apiValue><apiValue id="flash.text.engine:CFFHinting:NONE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">NONE</apiName><shortdesc class="- topic/shortdesc "> 
	Aucun repère n’est appliqué.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">none</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	Aucun repère n’est appliqué. Les épaisseurs horizontales des glyphes ne sont pas alignées sur la grille de pixels. Cette constante permet de définir la propriété <codeph class="+ topic/ph pr-d/codeph ">cffHinting</codeph> de la classe FontDescription. Ce paramètre est conseillé pour les animations ou les grandes polices. Utilisez la syntaxe <codeph class="+ topic/ph pr-d/codeph ">CFFHinting.NONE</codeph>.
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#FontDescription/cffHinting" class="- topic/link "><linktext class="- topic/linktext ">flash.text.engine.FontDescription.cffHinting</linktext></link></related-links></apiValue></apiClassifier><apiClassifier languages="" id="flash.text.engine:Kerning" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">Kerning</apiName><shortdesc class="- topic/shortdesc ">
La classe Kerning est une énumération de valeurs constantes utilisées avec ElementFormat.kerning.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
La classe Kerning est une énumération de valeurs constantes utilisées avec <codeph class="+ topic/ph pr-d/codeph ">ElementFormat.kerning</codeph>. 

</apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#ElementFormat/kerning" class="- topic/link "><linktext class="- topic/linktext ">ElementFormat.kerning</linktext></link></related-links><apiValue id="flash.text.engine:Kerning:AUTO" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">AUTO</apiName><shortdesc class="- topic/shortdesc "> 
	Indique que le crènage est activé, sauf lorsque la typographie asiatique ne le permet pas.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">auto</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	Indique que le crènage est activé, sauf lorsque la typographie asiatique ne le permet pas. Le crénage est appliqué entre deux caractères lorsque aucun d’eux n’est un caractère Kanji, Hiragana ou Katakana.
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.text.engine:Kerning:OFF" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">OFF</apiName><shortdesc class="- topic/shortdesc "> 
	Utilisé pour indiquer que le crénage est désactivé.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">off</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	Utilisé pour indiquer que le crénage est désactivé.
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.text.engine:Kerning:ON" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">ON</apiName><shortdesc class="- topic/shortdesc "> 
	Utilisé pour indiquer que le crénage est activé.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">on</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	Utilisé pour indiquer que le crénage est activé.
	
	</apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.text.engine:TextLineMirrorRegion" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">TextLineMirrorRegion</apiName><shortdesc class="- topic/shortdesc ">
 La classe TextLineMirrorRegion représente une portion de ligne de texte dans laquelle des événements sont mis en miroir vers un autre diffuseur d’événements.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 La classe TextLineMirrorRegion représente une portion de ligne de texte dans laquelle des événements sont mis en miroir vers un autre diffuseur d’événements.
 
 <p class="- topic/p ">Après un déclenchement normal d’événements pour une ligne de texte, si la ligne est valide et si la propagation d’événements n’a pas été interrompue, les événements sont redistribués aux zones miroir de la ligne.</p>
 
 <p class="- topic/p ">La mise en miroir des événements de souris est un cas à part. Etant donné que les zones miroir ne sont pas des objets d’affichage, les événements <codeph class="+ topic/ph pr-d/codeph ">mouseOver</codeph> et <codeph class="+ topic/ph pr-d/codeph ">mouseOut</codeph> sont simulés à leur place. Les événements <codeph class="+ topic/ph pr-d/codeph ">rollOver</codeph> et <codeph class="+ topic/ph pr-d/codeph ">rollOut</codeph> ne sont pas simulés. Tous les événements <codeph class="+ topic/ph pr-d/codeph ">mouseOver</codeph>, <codeph class="+ topic/ph pr-d/codeph ">mouseOut</codeph>, <codeph class="+ topic/ph pr-d/codeph ">rollOver</codeph> et <codeph class="+ topic/ph pr-d/codeph ">rollOut</codeph> qui se produisent naturellement (ciblés à la ligne de texte ou aux enfants de la ligne de texte) sont ignorés et ne sont donc pas mis en miroir.</p>
 
 <p class="- topic/p ">Il est impossible de créer un objet TextLineMirrorRegion directement à partir du code ActionScript. Si vous appelez <codeph class="+ topic/ph pr-d/codeph ">new TextLineMirrorRegion()</codeph>, une exception est renvoyée. Un objet TextLineMirrorRegion est créé, puis associé à une ligne de texte lorsque cette dernière est créée à partir d’un objet ContentElement ayant défini un miroir d’événement.</p>
 
 <p class="- topic/p ">La classe TextLineMirrorRegion ne gère pas les sous-classes.</p>
 
 </apiDesc><example conref="examples\TextLineMirrorRegionExample.as" class="- topic/example "> Cet exemple affiche un bloc de texte avec zones miroir qui deviennent rouges lorsque vous cliquez sur leur entrée.
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">

package {

    import flash.display.Sprite;
    import flash.text.engine.TextBlock;
    import flash.text.engine.TextLine;
    import flash.text.engine.TextElement;
    import flash.text.engine.ElementFormat;
    import flash.text.engine.FontDescription;
    import flash.text.engine.ContentElement;
    import flash.text.engine.GroupElement;
    import flash.text.engine.TextLineMirrorRegion;
    import flash.events.MouseEvent;
    import flash.events.EventDispatcher;
    import flash.ui.Mouse;

    public class TextLineMirrorRegionExample extends Sprite {
        
        var myEvent:EventDispatcher = new EventDispatcher();
        var fontDescription:FontDescription = new FontDescription();
        var textBlock:TextBlock = new TextBlock();

        public function TextLineMirrorRegionExample():void {
            
            fontDescription.fontWeight = "bold";
            var blackFormat:ElementFormat = new ElementFormat();
            blackFormat.fontSize = 18;
            blackFormat.color = 0x000000;
            blackFormat.fontDescription = fontDescription;
            
            var textElement1 = new TextElement("Click on different parts of me to find the ", blackFormat);
            var textElement2 = new TextElement("mirror regions",blackFormat);
            var textElement3 = new TextElement(". If I am a mirror region, I'll ",blackFormat);
            var textElement4 = new TextElement("turn red",blackFormat);
            var textElement5 = new TextElement(".",blackFormat);
            
            myEvent.addEventListener("click", clickHandler);
            myEvent.addEventListener("mouseOut", mouseOutHandler);
            myEvent.addEventListener("mouseOver", mouseOverHandler);
            
            var groupVector:Vector.&lt;ContentElement> = new Vector.&lt;ContentElement>;
            groupVector.push(textElement1, textElement2, textElement3, textElement4, textElement5);
            var groupElement:GroupElement = new GroupElement(groupVector);
            
            textElement2.eventMirror=myEvent;
            textElement4.eventMirror=myEvent;
            
            textBlock.content = groupElement;
            createLines(textBlock);
        }
    
        private function clickHandler(event:MouseEvent):void
        {
            var redFormat:ElementFormat = new ElementFormat();
            redFormat.color = 0xCC0000;
            redFormat.fontSize = 18;
            redFormat.fontDescription = fontDescription;
            var line:TextLine = event.target as TextLine;
            var region:TextLineMirrorRegion = line.getMirrorRegion(myEvent);
            region.element.elementFormat = redFormat;
            createLines(textBlock);
        }
        
        private function mouseOverHandler(event:MouseEvent):void
        {
            Mouse.cursor = "button";
        }
        
        private function mouseOutHandler(event:MouseEvent):void
        {
            Mouse.cursor = "arrow";
        }
            
        private function createLines(textBlock:TextBlock):void 
        {
            var purgeLine:TextLine = textBlock.firstLine;
                
            while (purgeLine)
            {
                removeChild (purgeLine);
                purgeLine = purgeLine.nextLine;
            }
            var lineWidth:Number = 150;
            var xPos:Number = 15.0;
            var yPos:Number = 20.0;
            var textLine:TextLine = textBlock.createTextLine (null, lineWidth);
                
            while (textLine)
            {
                textLine.x = xPos;
                textLine.y = yPos;
                yPos += textLine.height + 2;
                addChild (textLine);
                textLine = textBlock.createTextLine (textLine, lineWidth);
            }
        }
    }
}
</codeblock></example></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#ContentElement/eventMirror" class="- topic/link "><linktext class="- topic/linktext ">ContentElement.eventMirror</linktext></link><link href="flash.text.engine.xml#TextBlock/createTextLine()" class="- topic/link "><linktext class="- topic/linktext ">TextBlock.createTextLine()</linktext></link><link href="flash.text.engine.xml#TextLine/mirrorRegions" class="- topic/link "><linktext class="- topic/linktext ">TextLine.mirrorRegions</linktext></link></related-links><apiValue id="flash.text.engine:TextLineMirrorRegion:bounds:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">bounds</apiName><shortdesc class="- topic/shortdesc ">
	 Limites de la zone miroir, par rapport à la ligne de texte.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.geom:Rectangle</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Limites de la zone miroir, par rapport à la ligne de texte.
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.text.engine:TextLineMirrorRegion:element:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">element</apiName><shortdesc class="- topic/shortdesc ">
	 Objet ContentElement à partir duquel la zone miroir est dérivée.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.text.engine:ContentElement</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Le TextLine auquel cet élément appartient n’est pas valide.
	  
	  </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IllegalOperationError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IllegalOperationError</apiOperationClassifier></apiException></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Objet <codeph class="+ topic/ph pr-d/codeph ">ContentElement</codeph> à partir duquel la zone miroir est dérivée.
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.text.engine:TextLineMirrorRegion:mirror:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">mirror</apiName><shortdesc class="- topic/shortdesc ">
	 Objet EventDispatcher vers lequel les événements affectant la zone miroir sont mis en miroir.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.events:EventDispatcher</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Objet <codeph class="+ topic/ph pr-d/codeph ">EventDispatcher</codeph> vers lequel les événements affectant la zone miroir sont mis en miroir. Cela comprend les événements de souris qui surviennent spécifiquement dans la zone miroir, et tous les autres événements ayant pour cible la ligne de texte.
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.text.engine:TextLineMirrorRegion:nextRegion:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">nextRegion</apiName><shortdesc class="- topic/shortdesc ">
	 TextLineMirrorRegion suivant dans l’ensemble dérivé de l’élément de texte, ou null si la zone actuelle est la dernière zone miroir de l’ensemble.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.text.engine:TextLineMirrorRegion</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 TextLineMirrorRegion suivant dans l’ensemble dérivé de l’élément de texte, ou <codeph class="+ topic/ph pr-d/codeph ">null</codeph> si la zone actuelle est la dernière zone miroir de l’ensemble. Peut être sur la même ligne ou sur une autre ligne de texte.
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.text.engine:TextLineMirrorRegion:previousRegion:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">previousRegion</apiName><shortdesc class="- topic/shortdesc ">
	 TextLineMirrorRegion précédent dans l’ensemble dérivé de l’élément de texte, ou null si la zone actuelle est la première zone miroir de l’ensemble.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.text.engine:TextLineMirrorRegion</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 TextLineMirrorRegion précédent dans l’ensemble dérivé de l’élément de texte, ou <codeph class="+ topic/ph pr-d/codeph ">null</codeph> si la zone actuelle est la première zone miroir de l’ensemble. Peut être sur la même ligne ou sur une autre ligne de texte.
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.text.engine:TextLineMirrorRegion:textLine:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">textLine</apiName><shortdesc class="- topic/shortdesc ">
	 TextLine contenant cette zone miroir.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.text.engine:TextLine</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 TextLine contenant cette zone miroir.
	 
	 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.text.engine:LineJustification" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">LineJustification</apiName><shortdesc class="- topic/shortdesc ">
La classe LineJustification énumère les valeurs constantes utilisées lors de la définition de la propriété lineJustfication des sous-classes TextJustifier.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
La classe LineJustification énumère les valeurs constantes utilisées lors de la définition de la propriété <codeph class="+ topic/ph pr-d/codeph ">lineJustfication</codeph> des sous-classes TextJustifier. 

</apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#TextJustifier/lineJustification" class="- topic/link "><linktext class="- topic/linktext ">TextJustifier.lineJustification</linktext></link></related-links><apiValue id="flash.text.engine:LineJustification:ALL_BUT_LAST" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">ALL_BUT_LAST</apiName><shortdesc class="- topic/shortdesc "> 
	Procède à la justification de toutes les lignes, sauf la dernière.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">allButLast</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	Procède à la justification de toutes les lignes, sauf la dernière.
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.text.engine:LineJustification:ALL_INCLUDING_LAST" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">ALL_INCLUDING_LAST</apiName><shortdesc class="- topic/shortdesc "> 
	Procède à la justification de toutes les lignes.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">allIncludingLast</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	Procède à la justification de toutes les lignes.
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.text.engine:LineJustification:UNJUSTIFIED" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">UNJUSTIFIED</apiName><shortdesc class="- topic/shortdesc "> 
	Ne procède pas à la justification des lignes.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">unjustified</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	Ne procède pas à la justification des lignes.
	
	</apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.text.engine:SpaceJustifier" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">SpaceJustifier</apiName><shortdesc class="- topic/shortdesc ">
 La classe SpaceJustifier représente les propriétés qui contrôlent les options de justification des lignes de texte d’un bloc de texte.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.text.engine:TextJustifier</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 La classe SpaceJustifier représente les propriétés qui contrôlent les options de justification des lignes de texte d’un bloc de texte. 
 
 <p class="- topic/p "> Utilisez le constructeur <codeph class="+ topic/ph pr-d/codeph ">new SpaceJustifier()</codeph> pour créer un objet SpaceJustifier avant de définir ses propriétés. La définition des propriétés d’un objet SpaceJustifier après son application à un TextBlock n’invalide pas le TextBlock.</p>
 
 </apiDesc><example conref="examples\SpaceJustifierExample.as" class="- topic/example "> L’exemple suivant utilise l’espacement des lettres et justifie tout le bloc de texte à l’exception de la dernière ligne.
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">

package {
    import flash.display.Sprite;
    import flash.text.engine.TextBlock;
    import flash.text.engine.TextElement;
    import flash.text.engine.TextLine;
    import flash.text.engine.ElementFormat;
    import flash.text.engine.SpaceJustifier;
    import flash.text.engine.LineJustification;
    
    public class SpaceJustifierExample extends Sprite {
        
        public function SpaceJustifierExample():void {
            var str:String = "Lorem ipsum dolor sit amet, consectetur adipisicing elit, " +
            "sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut " +
            "enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut " +
            "aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit " +
            "in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur " +
            "sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt " +
            "mollit anim id est laborum.";
            
            var format:ElementFormat = new ElementFormat(null, 12, 0xCC0000);
            var textElement:TextElement = new TextElement(str, format);
            var spaceJustifier:SpaceJustifier = new SpaceJustifier("en", LineJustification.ALL_BUT_LAST);
            spaceJustifier.letterSpacing = true;
            var textBlock:TextBlock = new TextBlock();
            textBlock.content = textElement;
            textBlock.textJustifier = spaceJustifier;
            createLines(textBlock);
        }
        
        private function createLines(textBlock:TextBlock):void {
        
            var yPos = 20;
            var textLine:TextLine = textBlock.createTextLine (null, 150);
 
            while (textLine)
            {
                addChild(textLine);
                textLine.x = 15;
                yPos += textLine.textHeight+2;
                textLine.y = yPos;
                textLine = textBlock.createTextLine(textLine, 150);
            }        
        }
    }
}
</codeblock></example></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#LineJustification" class="- topic/link "><linktext class="- topic/linktext ">LineJustification</linktext></link><link href="flash.text.engine.xml#TextBlock/textJustifier" class="- topic/link "><linktext class="- topic/linktext ">TextBlock.textJustifier</linktext></link><link href="flash.text.engine.xml#TextJustifier" class="- topic/link "><linktext class="- topic/linktext ">TextJustifier</linktext></link></related-links><apiConstructor id="flash.text.engine:SpaceJustifier:SpaceJustifier" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">SpaceJustifier</apiName><shortdesc class="- topic/shortdesc ">
     Crée un objet SpaceJustifier.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><internal>
     </internal></asCustoms></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">La variable <codeph class="+ topic/ph pr-d/codeph ">locale</codeph> spécifiée est <codeph class="+ topic/ph pr-d/codeph ">null</codeph> ou trop courte pour représenter une variable locale valide.
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Le paramètre <codeph class="+ topic/ph pr-d/codeph ">lineJustification</codeph> spécifié n’appartient pas à <codeph class="+ topic/ph pr-d/codeph ">LineJustification</codeph>.
      
      </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">locale</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">en</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Variable locale permettant de déterminer les règles de justification. La valeur par défaut est <codeph class="+ topic/ph pr-d/codeph ">"en"</codeph>.
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">lineJustification</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">unjustified</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Type de justification des lignes du paragraphe. Utilisez les constantes <codeph class="+ topic/ph pr-d/codeph ">LineJustification</codeph> pour cette propriété. La valeur par défaut est <codeph class="+ topic/ph pr-d/codeph ">LineJustification.UNJUSTIFIED</codeph>.
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">letterSpacing</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Indique si l’espacement des lettres doit être utilisé lors de la justification. La valeur par défaut est <codeph class="+ topic/ph pr-d/codeph ">false</codeph>.
     </apiDesc></apiParam></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Crée un objet SpaceJustifier. La classe LineJustification contient les constantes qui spécifient les types de justification de ligne que vous pouvez appliquer.
     
	 </apiDesc></apiConstructorDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#LineJustification" class="- topic/link "><linktext class="- topic/linktext ">LineJustification</linktext></link></related-links></apiConstructor><apiOperation id="flash.text.engine:SpaceJustifier:clone" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">clone</apiName><shortdesc class="- topic/shortdesc ">
	 Crée une copie clonée de l’objet SpaceJustifier.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><internal>This class is currently stored as a live reference, but there is no way to track when its 
	 properties change.  This means that when changes are made, text blocks are not invalidated, which in 
	 the current implementation can lead to player crashes.  Even from the API perspective its wrong, as 
	 the affected text lines should be marked INVALID when format changes are made, but they�re not. The 
	 solution is to use a copy-on-set model.  When the object is passed in, the player copies it, so later
	 changes to the object that was passed in have no effect. The setter makes an internal copy of the 
	 array; the getter returns a copy of the internal copy. Operations like 
	 myBlock.textJustifier.spaceJustifier.letterSpacing = true will have no effect. Users who subclass 
	 this class in the future will need to use the clone() method to implement this technique of 
	 'locking' the format once it has been set.  
	 
     </internal></asCustoms></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Une copie de l’objet <codeph class="+ topic/ph pr-d/codeph ">SpaceJustifier</codeph>.
	  
	  </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.text.engine:TextJustifier</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Crée une copie clonée de l’objet SpaceJustifier.
	 
	 </apiDesc></apiOperationDetail></apiOperation><apiValue id="flash.text.engine:SpaceJustifier:letterSpacing:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">letterSpacing</apiName><shortdesc class="- topic/shortdesc ">
     Indique si l’espacement des lettres doit être utilisé lors de la justification. </shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Indique si l’espacement des lettres doit être utilisé lors de la justification. 
     
     <p class="- topic/p ">La valeur par défaut est <codeph class="+ topic/ph pr-d/codeph ">false</codeph>.</p>
	 
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.text.engine:SpaceJustifier:maximumSpacing:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">maximumSpacing</apiName><shortdesc class="- topic/shortdesc ">
     Spécifie l’espacement maximal (comme multiplicateur de la largeur d’un espace normal) entres les mots à utiliser lors de la justification.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Le paramètre <codeph class="+ topic/ph pr-d/codeph ">value</codeph> spécifié est inférieur à <codeph class="+ topic/ph pr-d/codeph ">optimumSpacing</codeph>.
      
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Spécifie l’espacement maximal (comme multiplicateur de la largeur d’un espace normal) entres les mots à utiliser lors de la justification. Si la propriété <codeph class="+ topic/ph pr-d/codeph ">letterSpacing</codeph> est définie sur <codeph class="+ topic/ph pr-d/codeph ">true</codeph>, l’espacement des lettres est utilisé après que les espaces entre les mots atteignent la valeur maximale. Si la propriété <codeph class="+ topic/ph pr-d/codeph ">letterSpacing</codeph> est définie sur <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, les espaces entre les mots sont étendus au-delà de la valeur maximale.
     
     <p class="- topic/p ">La valeur par défaut est <codeph class="+ topic/ph pr-d/codeph ">1.5</codeph>.</p>
	 
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.text.engine:SpaceJustifier:minimumSpacing:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">minimumSpacing</apiName><shortdesc class="- topic/shortdesc ">
     Spécifie l’espacement minimal (comme multiplicateur de la largeur d’un espace normal) entres les mots à utiliser lors de la justification.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Le paramètre <codeph class="+ topic/ph pr-d/codeph ">value</codeph> spécifié est inférieur à zéro ou supérieur à <codeph class="+ topic/ph pr-d/codeph ">optimumSpacing</codeph>.
      
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Spécifie l’espacement minimal (comme multiplicateur de la largeur d’un espace normal) entres les mots à utiliser lors de la justification.
     
     <p class="- topic/p ">La valeur par défaut est <codeph class="+ topic/ph pr-d/codeph ">0.5</codeph>.</p>
	 
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.text.engine:SpaceJustifier:optimumSpacing:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">optimumSpacing</apiName><shortdesc class="- topic/shortdesc ">
     Spécifie l’espacement optimal (comme multiplicateur de la largeur d’un espace normal) entres les mots à utiliser lors de la justification.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Le paramètre <codeph class="+ topic/ph pr-d/codeph ">value</codeph> spécifié est inférieur à <codeph class="+ topic/ph pr-d/codeph ">minimumSpacing</codeph> ou supérieur à <codeph class="+ topic/ph pr-d/codeph ">maximumSpacing</codeph>.
      
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Spécifie l’espacement optimal (comme multiplicateur de la largeur d’un espace normal) entres les mots à utiliser lors de la justification.
     
     <p class="- topic/p ">La valeur par défaut est <codeph class="+ topic/ph pr-d/codeph ">1.0</codeph>.</p>
	 
     </apiDesc></apiValueDetail></apiValue></apiClassifier></apiPackage>