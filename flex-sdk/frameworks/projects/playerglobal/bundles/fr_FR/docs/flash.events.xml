<?xml version="1.0" encoding="UTF-8"?>
<!--

  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.

-->
<apiPackage xmlns:ditaarch="http://dita.oasis-open.org/architecture/2005/" id="flash.events" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiPackage/apiPackage "><apiName class="- topic/title reference/title apiRef/apiName ">flash.events</apiName><apiDetail class="- topic/body reference/refbody apiRef/apiDetail "/><apiClassifier languages="" id="flash.events:NetMonitorEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">NetMonitorEvent</apiName><shortdesc class="- topic/shortdesc ">
 Un objet NetMonitor distribue des objets NetMonitorEvent lors de la création d’un objet NetStream.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage name="ActionScript" version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.3" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2.7" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Un objet NetMonitor distribue des objets NetMonitorEvent lors de la création d’un objet NetStream.
 
 </apiDesc></apiClassifierDetail><adobeApiEvent id="flash.events:NetMonitorEvent:NET_STREAM_CREATE_netStreamCreate" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">netStreamCreate</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:NetMonitorEvent:NET_STREAM_CREATE</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:NetMonitorEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="flash.events:NetMonitorEvent:NetMonitorEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">NetMonitorEvent</apiName><shortdesc class="- topic/shortdesc ">
	 Crée un objet d’événement contenant des informations sur les événements netStreamCreate.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage name="ActionScript" version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.3" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2.7" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">type</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Type de l’événement. Les écouteurs d’événement peuvent accéder à cette information par le biais de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> héritée. Il n’existe qu’un seul type d’événement : <codeph class="+ topic/ph pr-d/codeph ">NetMonitorEvent.NET_STREAM_CREATE</codeph>.
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">bubbles</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Détermine si l’objet Event prend part à la phase de propagation du flux d’événements. Les écouteurs d’événement peuvent accéder à cette information par le biais de la propriété <codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph> héritée.  
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">cancelable</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Détermine si l’objet Event peut être annulé. Les écouteurs d’événement peuvent accéder à cette information par le biais de la propriété <codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph> héritée. 
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">netStream</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.net:NetStream</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Nouvel objet NetStream ayant été créé. Les écouteurs d’événement peuvent accéder à cette information par le biais de la propriété <codeph class="+ topic/ph pr-d/codeph ">netStream</codeph>.
	 
	 </apiDesc></apiParam><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Constructeur associé aux objets NetMonitorEvent.
	 </apiTipText></apiTipTexts></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Crée un objet d’événement contenant des informations sur les événements netStreamCreate. Les objets Event sont transmis en tant que paramètres aux écouteurs d’événement.
	 
	 </apiDesc></apiConstructorDetail><related-links class="- topic/related-links "><link href="flash.events.xml#NetMonitorEvent/NET_STREAM_CREATE" class="- topic/link "><linktext class="- topic/linktext ">NetMonitorEvent.NET_STREAM_CREATE</linktext></link></related-links></apiConstructor><apiOperation id="flash.events:NetMonitorEvent:clone" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">clone</apiName><shortdesc class="- topic/shortdesc ">
 	 Créer une copie de l’objet NetMonitorEvent et définit la valeur de chaque propriété de sorte qu’elle corresponde à la valeur d’origine.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.3" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2.7" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Nouvel objet NetMonitorEvent dont les propriétés ont la même valeur que celles de l’objet d’origine.
	 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.events:Event</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 	 Créer une copie de l’objet NetMonitorEvent et définit la valeur de chaque propriété de sorte qu’elle corresponde à la valeur d’origine. 
	 
	 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.events:NetMonitorEvent:toString" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">toString</apiName><shortdesc class="- topic/shortdesc ">
	 Renvoie une chaîne répertoriant toutes les propriétés de l’objet NetMonitorEvent.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage name="ActionScript" version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.3" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2.7" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Chaîne contenant toutes les propriétés de l’objet NetMonitorEvent.
	</apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Renvoie une chaîne répertoriant toutes les propriétés de l’objet NetMonitorEvent. Le format utilisé est le suivant :
	 <p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">[NetMonitorEvent type=<i class="+ topic/ph hi-d/i ">valeur</i> bubbles=<i class="+ topic/ph hi-d/i ">valeur</i> cancelable=<i class="+ topic/ph hi-d/i ">valeur</i> netStream=<i class="+ topic/ph hi-d/i ">valeur</i>]</codeph></p>
	 
	 </apiDesc></apiOperationDetail></apiOperation><apiValue id="flash.events:NetMonitorEvent:NET_STREAM_CREATE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">NET_STREAM_CREATE</apiName><shortdesc class="- topic/shortdesc ">
	 La constante NetMonitorEvent.NET_STREAM_CREATE définit la valeur de la propriété type d’un objet d’événement netStreamCreate.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage name="ActionScript" version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.3" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2.7" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">netStreamCreate</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 La constante <codeph class="+ topic/ph pr-d/codeph ">NetMonitorEvent.NET_STREAM_CREATE</codeph> définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet d’événement <codeph class="+ topic/ph pr-d/codeph ">netStreamCreate</codeph>. 
	 <p class="- topic/p ">Les propriétés de l’événement <codeph class="+ topic/ph pr-d/codeph ">netStreamCreate</codeph> sont les suivantes :</p>
	  <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">netStream</codeph></entry><entry class="- topic/entry ">Objet NetStream ayant été créé.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">L’objet qui traite activement l’objet Event avec un écouteur d’événements.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Objet commençant ou terminant une session.</entry></row></tbody></tgroup></adobetable>
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:NetMonitorEvent:netStream:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">netStream</apiName><shortdesc class="- topic/shortdesc ">
 	 Nouvel objet NetStream.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage name="ActionScript" version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.3" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2.7" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.net:NetStream</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 	 Nouvel objet NetStream.
	 
	 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.events:TimerEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">TimerEvent</apiName><shortdesc class="- topic/shortdesc ">
 Un objet Timer distribue des objets TimerEvent chaque fois que l’objet Timer atteint l’intervalle spécifié par la propriété Timer.delay.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Objets Event associés aux événements Timer.
 </apiTipText></apiTipTexts><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Un objet Timer distribue des objets TimerEvent chaque fois que l’objet Timer atteint l’intervalle spécifié par la propriété <codeph class="+ topic/ph pr-d/codeph ">Timer.delay</codeph>.
 
 </apiDesc><example conref="examples\TimerEventExample.as" class="- topic/example "> L’exemple suivant utilise la classe TimerExample pour montrer comment une méthode d’écouteur <codeph class="+ topic/ph pr-d/codeph ">timerHandler()</codeph> peut être instanciée et définie pour écouter la distribution d’un nouveau TimerEvent, celle-ci survenant lorsque la méthode <codeph class="+ topic/ph pr-d/codeph ">start()</codeph> de Timer est appelée.  
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
package {
    import flash.utils.Timer;
    import flash.events.TimerEvent;
    import flash.display.Sprite;

    public class TimerEventExample extends Sprite {

        public function TimerEventExample() {
            var myTimer:Timer = new Timer(1000, 2);
            myTimer.addEventListener(TimerEvent.TIMER, timerHandler);
            myTimer.start();
        }

        public function timerHandler(event:TimerEvent):void {
            trace("timerHandler: " + event);
        }
    }
}
</codeblock></example></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.utils.xml#Timer" class="- topic/link "><linktext class="- topic/linktext ">flash.utils.Timer</linktext></link></related-links><adobeApiEvent id="flash.events:TimerEvent:TIMER_COMPLETE_timerComplete" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">timerComplete</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:TimerEvent:TIMER_COMPLETE</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:TimerEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.utils.xml#Timer/event:timerComplete" class="- topic/link "><linktext class="- topic/linktext ">flash.utils.Timer.timerComplete</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:TimerEvent:TIMER_timer" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">timer</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:TimerEvent:TIMER</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:TimerEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.utils.xml#Timer/event:timer" class="- topic/link "><linktext class="- topic/linktext ">flash.utils.Timer.timer</linktext></link></related-links></adobeApiEvent><apiConstructor id="flash.events:TimerEvent:TimerEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">TimerEvent</apiName><shortdesc class="- topic/shortdesc ">
	Crée un objet Event à l’aide d’informations spécifiques relatives aux événements timer.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">type</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc "> Type de l’événement. Les écouteurs d’événement peuvent accéder à cette information par le biais de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> héritée.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">bubbles</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Détermine si l’objet Event se propage vers le haut. Les écouteurs d’événement peuvent accéder à cette information par le biais de la propriété <codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph> héritée.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">cancelable</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Détermine si l’objet Event peut être annulé. Les écouteurs d’événement peuvent accéder à cette information par le biais de la propriété <codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph> héritée.
	
	</apiDesc></apiParam><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Constructeur associé aux objets TimerEvent.
	</apiTipText></apiTipTexts></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Crée un objet Event à l’aide d’informations spécifiques relatives aux événements <codeph class="+ topic/ph pr-d/codeph ">timer</codeph>. Les objets Event sont transmis en tant que paramètres aux écouteurs d’événements.
	
	</apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="flash.events:TimerEvent:clone" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">clone</apiName><shortdesc class="- topic/shortdesc ">
	Crée une copie de l’objet TimerEvent et définit la valeur de chaque propriété de sorte qu’elle corresponde à la valeur d’origine.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Nouvel objet TimerEvent dont les propriétés ont la même valeur que celles de l’objet d’origine.
	</apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.events:Event</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Crée une copie de l’objet TimerEvent et définit la valeur de chaque propriété de sorte qu’elle corresponde à la valeur d’origine.
	</apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.events:TimerEvent:toString" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">toString</apiName><shortdesc class="- topic/shortdesc ">
	Renvoie une chaîne répertoriant toutes les propriétés de l’objet TimerEvent.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Chaîne répertoriant toutes les propriétés de l’objet TimerEvent.
	</apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Renvoie une chaîne répertoriant toutes les propriétés de l’objet TimerEvent. La chaîne est écrite au format suivant :
	<p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">[TimerEvent type=<i class="+ topic/ph hi-d/i ">valeur</i> bubbles=<i class="+ topic/ph hi-d/i ">valeur</i> cancelable=<i class="+ topic/ph hi-d/i ">valeur</i>]</codeph></p>
	</apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.events:TimerEvent:updateAfterEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">updateAfterEvent</apiName><shortdesc class="- topic/shortdesc ">
	Demande à Flash Player ou au moteur d’exécution AIR d’effectuer un rendu à la fin du traitement de cet événement, si la liste d’affichage a été modifiée.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Demande à <ph class="- topic/ph ">Flash Player ou</ph> au moteur d’exécution AIR d’effectuer un rendu à la fin du traitement de cet événement, si la liste d’affichage a été modifiée.
 	
 	</apiDesc><example conref="examples\TimerEvent.updateAfterEventExample.as" class="- topic/example "> L’exemple suivant illustre la méthode <codeph class="+ topic/ph pr-d/codeph ">TimerEvent.updateAfterEvent()</codeph>.   
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
function onTimer(event:TimerEvent):void {
    if (40 &lt; my_mc.x &amp;&amp; my_mc.x &lt; 375) {
        my_mc.x-= 50;
    } else {
        my_mc.x=374;
    }
    event.updateAfterEvent();
}

var moveTimer:Timer=new Timer(50,250);
moveTimer.addEventListener(TimerEvent.TIMER,onTimer);
moveTimer.start();
</codeblock></example></apiOperationDetail></apiOperation><apiValue id="flash.events:TimerEvent:TIMER_COMPLETE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">TIMER_COMPLETE</apiName><shortdesc class="- topic/shortdesc ">
    Définit la valeur de la propriété type d’un objet d’événement timerComplete.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">timerComplete</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet d’événement <codeph class="+ topic/ph pr-d/codeph ">timerComplete</codeph>.
	<p class="- topic/p ">Les propriétés de cet événement sont les suivantes :</p>
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">L’objet qui traite activement l’objet Event avec un écouteur d’événements.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">L’objet Timer qui a terminé ses requêtes.</entry></row></tbody></tgroup></adobetable>
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.utils.xml#Timer/event:timerComplete" class="- topic/link "><linktext class="- topic/linktext ">flash.utils.Timer.timerComplete</linktext></link></related-links></apiValue><apiValue id="flash.events:TimerEvent:TIMER" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">TIMER</apiName><shortdesc class="- topic/shortdesc ">
    Définit la valeur de la propriété type d’un objet d’événement timer.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">timer</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet d’événement <codeph class="+ topic/ph pr-d/codeph ">timer</codeph>.
	<p class="- topic/p ">Les propriétés de cet événement sont les suivantes :</p>
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">L’objet qui traite activement l’objet Event avec un écouteur d’événements.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Objet Timer dont le délai imparti s’est écoulé.</entry></row></tbody></tgroup></adobetable>
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.utils.xml#Timer/event:timer" class="- topic/link "><linktext class="- topic/linktext ">flash.utils.Timer.timer</linktext></link></related-links></apiValue></apiClassifier><apiClassifier languages="" id="flash.events:IOErrorEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">IOErrorEvent</apiName><shortdesc class="- topic/shortdesc ">
Un objet IOErrorEvent est distribué lorsqu’une erreur entraîne l’échec des opérations d’entrée ou de sortie.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Objets event associés aux événements IOErrorEvent.
</apiTipText></apiTipTexts><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:ErrorEvent</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
Un objet IOErrorEvent est distribué lorsqu’une erreur entraîne l’échec des opérations d’entrée ou de sortie.

<p class="- topic/p ">Vous pouvez rechercher des événements d’erreur qui n’ont pas d’écouteurs en utilisant la version de débogage de Flash Player ou l’application de débogage du lanceur AIR (ADL). La chaîne définie par le paramètre <codeph class="+ topic/ph pr-d/codeph ">text</codeph> du constructeur IOErrorEvent s’affiche.</p>

</apiDesc><example conref="examples\IOErrorEventExample.as" class="- topic/example "> L’exemple suivant utilise la classe <codeph class="+ topic/ph pr-d/codeph ">IOErrorEventExample</codeph> pour montrer comment l’objet d’événement error est distribué en cas de tentative de chargement d’un fichier non existant. L’exemple exécute les tâches suivantes :
 <ol class="- topic/ol "><li class="- topic/li ">Le constructeur de classe crée une nouvelle occurrence de l’objet URLLoader et l’affecte à la variable <codeph class="+ topic/ph pr-d/codeph ">loader</codeph>.</li><li class="- topic/li ">L’occurrence URLLoader instancie un écouteur d’événements de type <codeph class="+ topic/ph pr-d/codeph ">ioError</codeph>, associé à une méthode d’abonné <codeph class="+ topic/ph pr-d/codeph ">ioErrorHandler()</codeph>, qui imprime simplement des informations sur l’événement à l’aide de l’instruction <codeph class="+ topic/ph pr-d/codeph ">trace()</codeph>.</li><li class="- topic/li ">Le constructeur crée ensuite une nouvelle occurrence d’objet URLRequest, <codeph class="+ topic/ph pr-d/codeph ">request</codeph>, en transmettant <codeph class="+ topic/ph pr-d/codeph ">MissingFile.xml</codeph> de manière à faire connaître le nom et l’emplacement du fichier manquant.</li><li class="- topic/li ">La variable <codeph class="+ topic/ph pr-d/codeph ">request</codeph> est ensuite transmis à <codeph class="+ topic/ph pr-d/codeph ">loader.load()</codeph>, qui tente de charger le fichier manquant. Le fichier n’existant pas, le gestionnaire d’événements distribue un événement <codeph class="+ topic/ph pr-d/codeph ">ioError</codeph>.</li></ol>
 
 <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Remarques :</b>
 <ul class="- topic/ul "><li class="- topic/li ">Vous devrez compiler le fichier SWF en définissant « Sécurité de lecture locale » sur « Accès aux fichiers locaux uniquement ».</li><li class="- topic/li ">Assurez-vous que aucun fichier nommé « MissingFile.xml » ne se situe au même niveau que votre fichier SWF. </li></ul>
 </p>
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
package {
    import flash.display.Sprite;
    import flash.events.IOErrorEvent;
    import flash.net.URLLoader;
    import flash.net.URLRequest;

    public class IOErrorEventExample extends Sprite {
        public function IOErrorEventExample() {
            var loader:URLLoader = new URLLoader();
            loader.addEventListener(IOErrorEvent.IO_ERROR, ioErrorHandler);

            var request:URLRequest = new URLRequest("MissingFile.xml");
            loader.load(request);
        }

        private function ioErrorHandler(event:IOErrorEvent):void {
            trace("ioErrorHandler: " + event);
        }
    }
}
</codeblock></example></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.events.xml#IOErrorEvent/IO_ERROR" class="- topic/link "><linktext class="- topic/linktext ">IO_ERROR</linktext></link></related-links><adobeApiEvent id="flash.events:IOErrorEvent:IO_ERROR_ioError" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">ioError</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:IOErrorEvent:IO_ERROR</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:IOErrorEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#LoaderInfo/event:ioError" class="- topic/link "><linktext class="- topic/linktext ">flash.display.LoaderInfo.ioError</linktext></link><link href="flash.media.xml#Sound/event:ioError" class="- topic/link "><linktext class="- topic/linktext ">flash.media.Sound.ioError</linktext></link><link href="flash.net.xml#SecureSocket/event:ioError" class="- topic/link "><linktext class="- topic/linktext ">flash.net.SecureSocket.ioError</linktext></link><link href="flash.net.xml#Socket/event:ioError" class="- topic/link "><linktext class="- topic/linktext ">flash.net.Socket.ioError</linktext></link><link href="flash.net.xml#FileReference/event:ioError" class="- topic/link "><linktext class="- topic/linktext ">flash.net.FileReference.ioError</linktext></link><link href="flash.net.xml#NetConnection/event:ioError" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetConnection.ioError</linktext></link><link href="flash.net.xml#NetStream/event:ioError" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetStream.ioError</linktext></link><link href="flash.net.xml#URLLoader/event:ioError" class="- topic/link "><linktext class="- topic/linktext ">flash.net.URLLoader.ioError</linktext></link><link href="flash.net.xml#URLStream/event:ioError" class="- topic/link "><linktext class="- topic/linktext ">flash.net.URLStream.ioError</linktext></link><link href="flash.net.xml#XMLSocket/event:ioError" class="- topic/link "><linktext class="- topic/linktext ">flash.net.XMLSocket.ioError</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:IOErrorEvent:STANDARD_ERROR_IO_ERROR_IOErrorEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">IOErrorEvent</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:IOErrorEvent:STANDARD_ERROR_IO_ERROR</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:IOErrorEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flash.events:IOErrorEvent:STANDARD_INPUT_IO_ERROR_IOErrorEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">IOErrorEvent</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:IOErrorEvent:STANDARD_INPUT_IO_ERROR</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:IOErrorEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flash.events:IOErrorEvent:STANDARD_OUTPUT_IO_ERROR_IOErrorEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">IOErrorEvent</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:IOErrorEvent:STANDARD_OUTPUT_IO_ERROR</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:IOErrorEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="flash.events:IOErrorEvent:IOErrorEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">IOErrorEvent</apiName><shortdesc class="- topic/shortdesc ">
	Crée un objet Event contenant des informations spécifiques sur les événements ioError.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">type</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc "> Type de l’événement. Les écouteurs d’événement peuvent accéder à cette information par le biais de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> héritée. Il n’existe qu’un seul type d’événement d’erreur d’entrée/sortie : <codeph class="+ topic/ph pr-d/codeph ">IOErrorEvent.IO_ERROR</codeph>.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">bubbles</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Détermine si l’objet Event prend part à la phase de propagation du flux d’événements. Les écouteurs d’événement peuvent accéder à cette information par le biais de la propriété <codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph> héritée.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">cancelable</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Détermine si l’objet Event peut être annulé. Les écouteurs d’événement peuvent accéder à cette information par le biais de la propriété <codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph> héritée.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">text</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData "/><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Texte à afficher en tant que message d’erreur. Les écouteurs d’événement peuvent accéder à cette information par le biais de la propriété <codeph class="+ topic/ph pr-d/codeph ">text</codeph>.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">id</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Un numéro de référence à associer à l’erreur spécifique (pris en charge uniquement par Adobe AIR). 
	
	</apiDesc></apiParam><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Constructeur associé aux objets IOErrorEvent.
	</apiTipText></apiTipTexts></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Crée un objet d’événement contenant des informations spécifiques sur les événements <codeph class="+ topic/ph pr-d/codeph ">ioError</codeph>. Les objets Event sont transmis en tant que paramètres aux écouteurs d’événement.
	
	</apiDesc></apiConstructorDetail><related-links class="- topic/related-links "><link href="flash.events.xml#IOErrorEvent/IO_ERROR" class="- topic/link "><linktext class="- topic/linktext ">IO_ERROR</linktext></link></related-links></apiConstructor><apiOperation id="flash.events:IOErrorEvent:clone" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">clone</apiName><shortdesc class="- topic/shortdesc ">
	Crée une copie de l’objet IOErrorEvent et définit la valeur de chaque propriété de sorte qu’elle corresponde à la valeur d’origine.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Nouvel objet IOErrorEvent dont les propriétés ont la même valeur que celles de l’objet d’origine.
	 
	 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.events:Event</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Crée une copie de l’objet IOErrorEvent et définit la valeur de chaque propriété de sorte qu’elle corresponde à la valeur d’origine.
	
	</apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.events:IOErrorEvent:toString" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">toString</apiName><shortdesc class="- topic/shortdesc ">
	Renvoie une chaîne répertoriant toutes les propriétés de l’objet IOErrorEvent.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Chaîne répertoriant toutes les propriétés de l’objet IOErrorEvent.
	 
	 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Renvoie une chaîne répertoriant toutes les propriétés de l’objet IOErrorEvent. La chaîne est écrite au format suivant :
	<p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">[IOErrorEvent type=<i class="+ topic/ph hi-d/i ">valeur</i> bubbles=<i class="+ topic/ph hi-d/i ">valeur</i> cancelable=<i class="+ topic/ph hi-d/i ">valeur</i> text=<i class="+ topic/ph hi-d/i ">valeur</i> errorID=<i class="+ topic/ph hi-d/i ">valeur</i>]</codeph> La valeur <codeph class="+ topic/ph pr-d/codeph ">errorId</codeph> est uniquement disponible dans Adobe AIR.</p>
	
	</apiDesc></apiOperationDetail></apiOperation><apiValue id="flash.events:IOErrorEvent:IO_ERROR" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">IO_ERROR</apiName><shortdesc class="- topic/shortdesc ">
	Définit la valeur de la propriété type d’un objet d’événement ioError.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">ioError</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet d’événement <codeph class="+ topic/ph pr-d/codeph ">ioError</codeph>.
	<p class="- topic/p ">Les propriétés de cet événement sont les suivantes :</p>
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">L’objet qui traite activement l’objet Event avec un écouteur d’événements.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">errorID</codeph></entry><entry class="- topic/entry ">Un numéro de référence associé à l’erreur spécifique (AIR uniquement).</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Objet réseau sur lequel l’erreur d’entrée/sortie s’est produite.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">text</codeph></entry><entry class="- topic/entry ">Texte à afficher en tant que message d’erreur. </entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#LoaderInfo/event:ioError" class="- topic/link "><linktext class="- topic/linktext ">flash.display.LoaderInfo.ioError</linktext></link><link href="flash.media.xml#Sound/event:ioError" class="- topic/link "><linktext class="- topic/linktext ">flash.media.Sound.ioError</linktext></link><link href="flash.net.xml#SecureSocket/event:ioError" class="- topic/link "><linktext class="- topic/linktext ">flash.net.SecureSocket.ioError</linktext></link><link href="flash.net.xml#Socket/event:ioError" class="- topic/link "><linktext class="- topic/linktext ">flash.net.Socket.ioError</linktext></link><link href="flash.net.xml#FileReference/event:ioError" class="- topic/link "><linktext class="- topic/linktext ">flash.net.FileReference.ioError</linktext></link><link href="flash.net.xml#NetConnection/event:ioError" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetConnection.ioError</linktext></link><link href="flash.net.xml#NetStream/event:ioError" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetStream.ioError</linktext></link><link href="flash.net.xml#URLLoader/event:ioError" class="- topic/link "><linktext class="- topic/linktext ">flash.net.URLLoader.ioError</linktext></link><link href="flash.net.xml#URLStream/event:ioError" class="- topic/link "><linktext class="- topic/linktext ">flash.net.URLStream.ioError</linktext></link><link href="flash.net.xml#XMLSocket/event:ioError" class="- topic/link "><linktext class="- topic/linktext ">flash.net.XMLSocket.ioError</linktext></link></related-links></apiValue><apiValue id="flash.events:IOErrorEvent:STANDARD_ERROR_IO_ERROR" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">STANDARD_ERROR_IO_ERROR</apiName><shortdesc class="- topic/shortdesc ">
	 L’événement standardErrorIoError est distribué lorsqu’une erreur se produit pendant la lecture des données du flux d’erreurs standard d’un l’objet NativeProcess.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">standardErrorIoError</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 L’événement <codeph class="+ topic/ph pr-d/codeph ">standardErrorIoError</codeph> est distribué lorsqu’une erreur se produit pendant la lecture des données du flux d’erreurs standard d’un l’objet NativeProcess.
	 <p class="- topic/p ">Les propriétés de cet événement sont les suivantes :</p>
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry ">N°</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry ">No. Il n’existe aucun comportement par défaut à annuler.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">errorID</codeph></entry><entry class="- topic/entry ">Numéro de référence associé à l’erreur spécifique.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Objet sur lequel l’erreur est survenue.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">text</codeph></entry><entry class="- topic/entry ">Texte à afficher en tant que message d’erreur. </entry></row></tbody></tgroup></adobetable>
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:IOErrorEvent:STANDARD_INPUT_IO_ERROR" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">STANDARD_INPUT_IO_ERROR</apiName><shortdesc class="- topic/shortdesc ">
	 L’événement standardInputIoError est distribué lorsqu’une erreur se produit pendant l’écriture des données dans la propriété standardInput d’un objet NativeProcess.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">standardInputIoError</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 L’événement <codeph class="+ topic/ph pr-d/codeph ">standardInputIoError</codeph> est distribué lorsqu’une erreur se produit pendant l’écriture des données dans la propriété standardInput d’un objet NativeProcess.
	 <p class="- topic/p ">Les propriétés de cet événement sont les suivantes :</p>
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry ">N°</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry ">No. Il n’existe aucun comportement par défaut à annuler.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">errorID</codeph></entry><entry class="- topic/entry ">Numéro de référence associé à l’erreur spécifique.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Objet sur lequel l’erreur est survenue.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">text</codeph></entry><entry class="- topic/entry ">Texte à afficher en tant que message d’erreur. </entry></row></tbody></tgroup></adobetable>
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:IOErrorEvent:STANDARD_OUTPUT_IO_ERROR" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">STANDARD_OUTPUT_IO_ERROR</apiName><shortdesc class="- topic/shortdesc ">
	 L’événement standardOutputIoError est distribué lorsqu’une erreur se produit pendant la lecture des données du flux de sortie standard d’un l’objet NativeProcess.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">standardOutputIoError</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 L’événement <codeph class="+ topic/ph pr-d/codeph ">standardOutputIoError</codeph> est distribué lorsqu’une erreur se produit pendant la lecture des données du flux de sortie standard d’un l’objet NativeProcess.
	 <p class="- topic/p ">Les propriétés de cet événement sont les suivantes :</p>
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry ">N°</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry ">No. Il n’existe aucun comportement par défaut à annuler.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">errorID</codeph></entry><entry class="- topic/entry ">Numéro de référence associé à l’erreur spécifique.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Objet sur lequel l’erreur est survenue.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">text</codeph></entry><entry class="- topic/entry ">Texte à afficher en tant que message d’erreur. </entry></row></tbody></tgroup></adobetable>
	 
	 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.events:NetStatusEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">NetStatusEvent</apiName><shortdesc class="- topic/shortdesc ">
Un objet NetConnection, NetStream ou SharedObject distribue des objets NetStatusEvent lorsqu’il signale son état.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Objets event associés aux événements NetStatusEvent.
</apiTipText></apiTipTexts><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
Un objet NetConnection, NetStream ou SharedObject distribue des objets NetStatusEvent lorsqu’il signale son état. Il n’existe qu’un seul type d’événement status : <codeph class="+ topic/ph pr-d/codeph ">NetStatusEvent.NET_STATUS</codeph>.

</apiDesc><example conref="examples\NetStatusEventExample.as" class="- topic/example "> L’exemple suivant utilise un objet Video avec les classes NetConnection et NetStream pour charger et lire un fichier FLV.
 <p class="- topic/p ">Dans cet exemple, la méthode <codeph class="+ topic/ph pr-d/codeph ">netStatusHandler</codeph> est enregistrée en tant qu’écouteur de l’événement NetStatusEvent <codeph class="+ topic/ph pr-d/codeph ">NetConnection.netStatus</codeph>. Lorsque l’état (réussite ou échec) de la tentative de <codeph class="+ topic/ph pr-d/codeph ">NetConnection.connect()</codeph> est connu, l’événement <codeph class="+ topic/ph pr-d/codeph ">netStatus</codeph> déclenche cette méthode. Si la tentative de connexion à l’objet NetConnection aboutit (en d’autres termes, si la propriété <codeph class="+ topic/ph pr-d/codeph ">info</codeph> de l’objet NetStatusEvent distribué par l’événement <codeph class="+ topic/ph pr-d/codeph ">netStatus</codeph> possède une propriété <codeph class="+ topic/ph pr-d/codeph ">code</codeph> indiquant un succès), le code crée les objets Video et NetStream et appelle les méthodes <codeph class="+ topic/ph pr-d/codeph ">Video.attachNetStream()</codeph> et <codeph class="+ topic/ph pr-d/codeph ">NetStream.play()</codeph>.</p>
 
 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Remarque :</b> pour exécuter cet exemple, vous devez disposer d’un fichier FLV dont le nom et l’emplacement correspondent à la variable transmise à <codeph class="+ topic/ph pr-d/codeph ">videoURL</codeph> ; dans ce cas, un fichier FLV nommé Video.flv et situé dans le même répertoire que le fichier SWF.</p>
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">

 package {
    import flash.display.Sprite;
    import flash.events.*;
    import flash.media.Video;
    import flash.net.NetConnection;
    import flash.net.NetStream;

    public class NetStatusEventExample extends Sprite {
        private var videoURL:String = "Video.flv";
        private var connection:NetConnection;
        private var stream:NetStream;

        public function NetStatusEventExample() {
            connection = new NetConnection();
            connection.addEventListener(NetStatusEvent.NET_STATUS, netStatusHandler);
            connection.addEventListener(SecurityErrorEvent.SECURITY_ERROR, securityErrorHandler);
            connection.connect(null);
        }

        private function netStatusHandler(event:NetStatusEvent):void {
            switch (event.info.code) {
                case "NetConnection.Connect.Success":
                    connectStream();
                    break;
                case "NetStream.Play.StreamNotFound":
                    trace("Unable to locate video: " + videoURL);
                    break;
            }
        }

        private function connectStream():void {
            var stream:NetStream = new NetStream(connection);
            stream.addEventListener(NetStatusEvent.NET_STATUS, netStatusHandler);
            stream.addEventListener(AsyncErrorEvent.ASYNC_ERROR, asyncErrorHandler);
            var video:Video = new Video();
            video.attachNetStream(stream);
            stream.play(videoURL);
            addChild(video);
        }

        private function securityErrorHandler(event:SecurityErrorEvent):void {
            trace("securityErrorHandler: " + event);
        }
        
        private function asyncErrorHandler(event:AsyncErrorEvent):void {
            // ignore AsyncErrorEvent events.
        }

    }
 }
</codeblock></example></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetConnection" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetConnection</linktext></link><link href="flash.net.xml#NetStream" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetStream</linktext></link><link href="flash.net.xml#SharedObject" class="- topic/link "><linktext class="- topic/linktext ">flash.net.SharedObject</linktext></link><link href="flash.events.xml#NetStatusEvent/NET_STATUS" class="- topic/link "><linktext class="- topic/linktext ">NetStatusEvent.NET_STATUS</linktext></link></related-links><adobeApiEvent id="flash.events:NetStatusEvent:NET_STATUS_netStatus" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">netStatus</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:NetStatusEvent:NET_STATUS</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:NetStatusEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.events.xml#NetStatusEvent/info" class="- topic/link "><linktext class="- topic/linktext ">flash.events.NetStatusEvent.info</linktext></link><link href="flash.net.xml#NetConnection/event:netStatus" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetConnection.netStatus</linktext></link><link href="flash.net.xml#NetStream/event:netStatus" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetStream.netStatus</linktext></link><link href="flash.net.xml#SharedObject/event:netStatus" class="- topic/link "><linktext class="- topic/linktext ">flash.net.SharedObject.netStatus</linktext></link></related-links></adobeApiEvent><apiConstructor id="flash.events:NetStatusEvent:NetStatusEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">NetStatusEvent</apiName><shortdesc class="- topic/shortdesc ">
    Crée un objet d’événement contenant des informations sur les événements netStatus.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">type</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc "> Type de l’événement. Les écouteurs d’événement peuvent accéder à cette information par le biais de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> héritée. Il n’existe qu’un seul type d’événement status : <codeph class="+ topic/ph pr-d/codeph ">NetStatusEvent.NET_STATUS</codeph>.
    </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">bubbles</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Détermine si l’objet Event prend part à la phase de propagation du flux d’événements. Les écouteurs d’événement peuvent accéder à cette information par le biais de la propriété <codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph> héritée.
    </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">cancelable</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Détermine si l’objet Event peut être annulé. Les écouteurs d’événement peuvent accéder à cette information par le biais de la propriété <codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph> héritée.
    </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">info</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Object</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Objet contenant des propriétés décrivant son état. Les écouteurs d’événement peuvent accéder à cet objet par le biais de la propriété <codeph class="+ topic/ph pr-d/codeph ">info</codeph>.
    
    </apiDesc></apiParam><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Constructeur associé aux objets NetStatusEvent.
    </apiTipText></apiTipTexts></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Crée un objet d’événement contenant des informations sur les événements <codeph class="+ topic/ph pr-d/codeph ">netStatus</codeph>. Les objets Event sont transmis en tant que paramètres aux écouteurs d’événements.
    
    </apiDesc></apiConstructorDetail><related-links class="- topic/related-links "><link href="flash.events.xml#NetStatusEvent/NET_STATUS" class="- topic/link "><linktext class="- topic/linktext ">flash.events.NetStatusEvent.NET_STATUS</linktext></link></related-links></apiConstructor><apiOperation id="flash.events:NetStatusEvent:clone" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">clone</apiName><shortdesc class="- topic/shortdesc ">
    Crée une copie de l’objet NetStatusEvent et définit la valeur de chaque propriété de sorte qu’elle corresponde à la valeur d’origine.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Nouvel objet NetStatusEvent dont les propriétés ont la même valeur que celles de l’objet d’origine.
     
     </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.events:Event</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Crée une copie de l’objet NetStatusEvent et définit la valeur de chaque propriété de sorte qu’elle corresponde à la valeur d’origine.
    
    </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.events:NetStatusEvent:toString" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">toString</apiName><shortdesc class="- topic/shortdesc ">
    Renvoie une chaîne répertoriant toutes les propriétés de l’objet NetStatusEvent.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Chaîne répertoriant toutes les propriétés de l’objet NetStatusEvent.
     
     </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Renvoie une chaîne répertoriant toutes les propriétés de l’objet NetStatusEvent. La chaîne est écrite au format suivant :
    <p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">[NetStatusEvent type=<i class="+ topic/ph hi-d/i ">valeur</i> bubbles=<i class="+ topic/ph hi-d/i ">valeur</i> cancelable=<i class="+ topic/ph hi-d/i ">valeur</i> info=<i class="+ topic/ph hi-d/i ">valeur</i>]</codeph></p>
    
    </apiDesc></apiOperationDetail></apiOperation><apiValue id="flash.events:NetStatusEvent:NET_STATUS" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">NET_STATUS</apiName><shortdesc class="- topic/shortdesc ">
    Définit la valeur de la propriété type d’un objet d’événement netStatus.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">netStatus</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet d’événement <codeph class="+ topic/ph pr-d/codeph ">netStatus</codeph>.
    <p class="- topic/p ">Les propriétés de cet événement sont les suivantes :</p>
    <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">L’objet qui traite activement l’objet Event avec un écouteur d’événements.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">info</codeph></entry><entry class="- topic/entry ">Objet associé à des propriétés décrivant son état ou indiquant une erreur.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Objet NetConnection ou NetStream publiant son état. </entry></row></tbody></tgroup></adobetable>
    
    </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.events.xml#NetStatusEvent/info" class="- topic/link "><linktext class="- topic/linktext ">flash.events.NetStatusEvent.info</linktext></link><link href="flash.net.xml#NetConnection/event:netStatus" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetConnection.netStatus</linktext></link><link href="flash.net.xml#NetStream/event:netStatus" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetStream.netStatus</linktext></link><link href="flash.net.xml#SharedObject/event:netStatus" class="- topic/link "><linktext class="- topic/linktext ">flash.net.SharedObject.netStatus</linktext></link></related-links></apiValue><apiValue id="flash.events:NetStatusEvent:info:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">info</apiName><shortdesc class="- topic/shortdesc ">
     Objet associé à des propriétés décrivant son état ou indiquant une erreur.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Object</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Objet associé à des propriétés décrivant son état ou indiquant une erreur.
     
     <p class="- topic/p ">L’objet d’informations peut avoir une propriété <codeph class="+ topic/ph pr-d/codeph ">code</codeph> contenant une chaîne représentant un événement spécifique ou une propriété <codeph class="+ topic/ph pr-d/codeph ">level</codeph> contenant une chaîne <codeph class="+ topic/ph pr-d/codeph ">"status"</codeph> ou <codeph class="+ topic/ph pr-d/codeph ">"error"</codeph>. </p>
     
     <p class="- topic/p ">L’objet d’informations peut également être différent. Les propriétés <codeph class="+ topic/ph pr-d/codeph ">code</codeph> et <codeph class="+ topic/ph pr-d/codeph ">level</codeph> peuvent ne pas fonctionner pour certaines implémentations et certains serveurs peuvent envoyer des objets différents. </p>
     
     <p class="- topic/p ">Les connexions P2P envoient des messages à un objet <codeph class="+ topic/ph pr-d/codeph ">NetConnection</codeph> avec un paramètre <codeph class="+ topic/ph pr-d/codeph ">stream</codeph> dans l’objet d’informations désignant l’objet <codeph class="+ topic/ph pr-d/codeph ">NetStream</codeph> auquel le message appartient. </p>
     
     <p class="- topic/p ">Par exemple, Flex Data Services envoie des objets Message qui provoquent des erreurs de forçage de type si vous tentez d’accéder au <codeph class="+ topic/ph pr-d/codeph ">code</codeph> ou à la propriété <codeph class="+ topic/ph pr-d/codeph ">level</codeph>.</p>
     
     <p class="- topic/p ">Le tableau suivant répertorie les valeurs possibles des propriétés <codeph class="+ topic/ph pr-d/codeph ">code</codeph> et <codeph class="+ topic/ph pr-d/codeph ">level</codeph>.</p>
 <adobetable class="innertable"><tgroup cols="3" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété du code</entry><entry class="- topic/entry ">Propriété de niveau</entry><entry class="- topic/entry ">Signification</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"NetConnection.Call.BadVersion"</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"error"</codeph></entry><entry class="- topic/entry ">Paquet codé dans un format non identifié.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"NetConnection.Call.Failed"</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"error"</codeph></entry><entry class="- topic/entry ">La méthode <codeph class="+ topic/ph pr-d/codeph ">NetConnection.call()</codeph> n’a pas pu appeler la méthode ou la commande côté serveur.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"NetConnection.Call.Prohibited"</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"error"</codeph></entry><entry class="- topic/entry ">Une opération AMF (Action Message Format) est bloquée pour des raisons de sécurité. Soit l’URL AMF n’est pas dans le même domaine que le fichier contenant le code appelant la méthode <codeph class="+ topic/ph pr-d/codeph ">NetConnection.call()</codeph>, soit le serveur AMF n’a pas de fichier de régulation qui approuve le domaine du fichier contenant le code appelant la méthode <codeph class="+ topic/ph pr-d/codeph ">NetConnection.call()</codeph>. </entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"NetConnection.Connect.AppShutdown"</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"error"</codeph></entry><entry class="- topic/entry ">L’application côté serveur se ferme.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"NetConnection.Connect.Closed"</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"status"</codeph></entry><entry class="- topic/entry ">La fermeture de la connexion a abouti.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"NetConnection.Connect.Failed"</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"error"</codeph></entry><entry class="- topic/entry ">La tentative de connexion a échoué.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"NetConnection.Connect.IdleTimeout"</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"status"</codeph></entry><entry class="- topic/entry ">Flash Media Server a déconnecté le client, car ce dernier est resté inactif plus longtemps que la valeur configurée pour <codeph class="+ topic/ph pr-d/codeph ">&lt;MaxIdleTime></codeph>. Sur Flash Media Server, <codeph class="+ topic/ph pr-d/codeph ">&lt;AutoCloseIdleClients></codeph> est par défaut désactivée. Lorsque cette propriété est activée, la valeur de délai d’attente par défaut est de 3 600 secondes (1 heure). Pour plus d’informations, voir <xref href="http://help.adobe.com/fr_FR/flashmediaserver/configadmin/WS5b3ccc516d4fbf351e63e3d119f2925e64-7ff0.html#WS5b3ccc516d4fbf351e63e3d119f2925e64-7fe9" scope="external" class="- topic/xref ">Fermer les connexions inactives</xref>. </entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"NetConnection.Connect.InvalidApp"</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"error"</codeph></entry><entry class="- topic/entry ">Le nom d’application spécifié lors de l’appel de <codeph class="+ topic/ph pr-d/codeph ">NetConnection.connect()</codeph> n’est pas valide.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"NetConnection.Connect.NetworkChange"</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"status"</codeph></entry><entry class="- topic/entry "><p class="- topic/p ">Flash Player a détecté un changement au niveau du réseau, notamment une connexion sans fil abandonnée, une connexion sans fil qui a abouti ou la perte d’un câble réseau.</p>
     <p class="- topic/p ">Utilisez cet événement pour détecter tout changement dans l’interface réseau. N’utilisez pas cet événement pour implémenter votre logique de reconnexion NetConnection. Pour implémenter votre logique de reconnexion NetConnection, utilisez <codeph class="+ topic/ph pr-d/codeph ">"NetConnection.Connect.Closed"</codeph>.</p></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"NetConnection.Connect.Rejected"</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"error"</codeph></entry><entry class="- topic/entry ">La tentative de connexion n’avait pas accès à l’application.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"NetConnection.Connect.Success"</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"status"</codeph></entry><entry class="- topic/entry ">La tentative de connexion a abouti.</entry></row><row class="- topic/row "><entry class="- topic/entry "><xref id="code_NetGroup_Connect_Failed" name="code_NetGroup_Connect_Failed" class="- topic/xref "><codeph class="+ topic/ph pr-d/codeph ">"NetGroup.Connect.Failed"</codeph></xref></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"error"</codeph></entry><entry class="- topic/entry ">La tentative de connexion du groupe réseau a échoué. La propriété <codeph class="+ topic/ph pr-d/codeph ">info.group</codeph> indique quel groupe réseau a échoué.</entry></row><row class="- topic/row "><entry class="- topic/entry "><xref id="code_NetGroup_Connect_Rejected" name="code_NetGroup_Connect_Rejected" class="- topic/xref "><codeph class="+ topic/ph pr-d/codeph ">"NetGroup.Connect.Rejected"</codeph></xref></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"error"</codeph></entry><entry class="- topic/entry ">Le groupe réseau n’est pas autorisé à fonctionner. La propriété <codeph class="+ topic/ph pr-d/codeph ">info.group</codeph> indique quel groupe réseau a été rejeté.</entry></row><row class="- topic/row "><entry class="- topic/entry "><xref name="code_NetGroup_Connect_Success" class="- topic/xref "><codeph class="+ topic/ph pr-d/codeph ">"NetGroup.Connect.Succcess"</codeph></xref></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"status"</codeph></entry><entry class="- topic/entry ">Le groupe réseau est correctement créé et autorisé à fonctionner. La propriété <codeph class="+ topic/ph pr-d/codeph ">info.group</codeph> indique quel groupe réseau a réussi.</entry></row><row class="- topic/row "><entry class="- topic/entry "><xref id="code_NetGroup_LocalCoverage_Notify" name="code_NetGroup_LocalCoverage_Notify" class="- topic/xref "><codeph class="+ topic/ph pr-d/codeph ">"NetGroup.LocalCoverage.Notify"</codeph></xref></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"status"</codeph></entry><entry class="- topic/entry ">Envoyée lorsqu’une partie de l’espace d’adressage de groupe duquel est responsable ce nœud change.</entry></row><row class="- topic/row "><entry class="- topic/entry "><xref id="code_NetGroup_MulticastStream_PublishNotify" name="code_NetGroup_MulticastStream_PublishNotify" class="- topic/xref "><codeph class="+ topic/ph pr-d/codeph ">"NetGroup.MulticastStream.PublishNotify"</codeph></xref></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"status"</codeph></entry><entry class="- topic/entry ">Envoyée lorsqu’un nouveau flux nommé est détecté dans le groupe de l’objet NetGroupe. La propriété <codeph class="+ topic/ph pr-d/codeph ">info.name:String</codeph> correspond au nom du flux détecté.</entry></row><row class="- topic/row "><entry class="- topic/entry "><xref id="code_NetGroup_MulticastStream_UnpublishNotify" name="code_NetGroup_MulticastStream_UnpublishNotify" class="- topic/xref "><codeph class="+ topic/ph pr-d/codeph ">"NetGroup.MulticastStream.UnpublishNotify"</codeph></xref></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"status"</codeph></entry><entry class="- topic/entry ">Envoyée lorsqu’un flux nommé n’est plus disponible dans le groupe. La propriété <codeph class="+ topic/ph pr-d/codeph ">info.name:String</codeph> correspond au nom du flux qui a disparu.</entry></row><row class="- topic/row "><entry class="- topic/entry "><xref id="code_NetGroup_Neighbor_Connect" name="code_NetGroup_Neighbor_Connect" class="- topic/xref "><codeph class="+ topic/ph pr-d/codeph ">"NetGroup.Neighbor.Connect"</codeph></xref></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"status"</codeph></entry><entry class="- topic/entry ">Envoyée lorsqu’un voisin se connecte à ce nœud. La propriété <codeph class="+ topic/ph pr-d/codeph ">info.neighbor:String</codeph> correspond à l’adresse de groupe de ce voisin. La propriété <codeph class="+ topic/ph pr-d/codeph ">info.peerID:String</codeph> correspond à l’ID homologue de ce voisin.</entry></row><row class="- topic/row "><entry class="- topic/entry "><xref id="code_NetGroup_Neighbor_Disconnect" name="code_NetGroup_Neighbor_Disconnect" class="- topic/xref "><codeph class="+ topic/ph pr-d/codeph ">"NetGroup.Neighbor.Disconnect"</codeph></xref></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"status"</codeph></entry><entry class="- topic/entry ">Envoyée lorsqu’un voisin se déconnecte de ce nœud. La propriété <codeph class="+ topic/ph pr-d/codeph ">info.neighbor:String</codeph> correspond à l’adresse de groupe de ce voisin. La propriété <codeph class="+ topic/ph pr-d/codeph ">info.peerID:String</codeph> correspond à l’ID homologue de ce voisin.</entry></row><row class="- topic/row "><entry class="- topic/entry "><xref id="code_NetGroup_Posting_Notify" name="code_NetGroup_Posting_Notify" class="- topic/xref "><codeph class="+ topic/ph pr-d/codeph ">"NetGroup.Posting.Notify"</codeph></xref></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"status"</codeph></entry><entry class="- topic/entry ">Envoyée lors de la réception d’un nouveau groupe de publication. La propriété <codeph class="+ topic/ph pr-d/codeph ">info.message:Object</codeph> représente le message. La propriété <codeph class="+ topic/ph pr-d/codeph ">info.messageID:String</codeph> correspond à l’ID du message de ce message.</entry></row><row class="- topic/row "><entry class="- topic/entry "><xref id="code_NetGroup_Replication_Fetch_Failed" name="code_NetGroup_Replication_Fetch_Failed" class="- topic/xref "><codeph class="+ topic/ph pr-d/codeph ">"NetGroup.Replication.Fetch.Failed"</codeph></xref></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"status"</codeph></entry><entry class="- topic/entry ">Envoyée lorsqu’une demande de récupération d’un objet (précédemment annoncée via NetGroup.Replication.Fetch.SendNotify) échoue ou est refusée. Une nouvelle tentative de demande est effectuée si l’objet est toujours sollicité. La propriété <codeph class="+ topic/ph pr-d/codeph ">info.index:Number</codeph> représente l’index de l’objet ayant fait l’objet de la demande.</entry></row><row class="- topic/row "><entry class="- topic/entry "><xref id="code_NetGroup_Replication_Fetch_Result" name="code_NetGroup_Replication_Fetch_Result" class="- topic/xref "><codeph class="+ topic/ph pr-d/codeph ">"NetGroup.Replication.Fetch.Result"</codeph></xref></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"status"</codeph></entry><entry class="- topic/entry ">Envoyée lorsqu’un voisin a répondu à une demande de récupération. La propriété <codeph class="+ topic/ph pr-d/codeph ">info.index:Number</codeph> représente l’index de l’objet de ce résultat. La propriété <codeph class="+ topic/ph pr-d/codeph ">info.object:Object</codeph> représente la valeur de cet objet. Cet index est automatiquement supprimé du paramètre Want défini. Si l’objet n’est pas valide, cet index peut être à rajouté au paramètre Want défini avec <codeph class="+ topic/ph pr-d/codeph ">NetGroup.addWantObjects()</codeph>.</entry></row><row class="- topic/row "><entry class="- topic/entry "><xref id="code_NetGroup_Replication_Fetch_SendNotify" name="code_NetGroup_Replication_Fetch_SendNotify" class="- topic/xref "><codeph class="+ topic/ph pr-d/codeph ">"NetGroup.Replication.Fetch.SendNotify"</codeph></xref></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"status"</codeph></entry><entry class="- topic/entry ">Envoyée lorsque le système de réplication d’objets est sur le point d’envoyer une demande d’objet à un voisin. La propriété <codeph class="+ topic/ph pr-d/codeph ">info.index:Number</codeph> représente l’index de l’objet qui est demandé.</entry></row><row class="- topic/row "><entry class="- topic/entry "><xref id="code_NetGroup_Replication_Request" name="code_NetGroup_Replication_Request" class="- topic/xref "><codeph class="+ topic/ph pr-d/codeph ">"NetGroup.Replication.Request"</codeph></xref></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"status"</codeph></entry><entry class="- topic/entry ">Envoyée lorsqu’un voisin a demandé un objet que ce nœud a annoncé via <codeph class="+ topic/ph pr-d/codeph ">NetGroup.addHaveObjects()</codeph>. Il est <b class="+ topic/ph hi-d/b ">nécessaire</b> de répondre à cette demande via <codeph class="+ topic/ph pr-d/codeph ">NetGroup.writeRequestedObject()</codeph> ou <codeph class="+ topic/ph pr-d/codeph ">NetGroup.denyRequestedObject()</codeph>. Notez que la réponse peut être asynchrone. La propriété <codeph class="+ topic/ph pr-d/codeph ">info.index:Number</codeph> représente l’index de l’objet ayant fait l’objet de la demande. La propriété <codeph class="+ topic/ph pr-d/codeph ">info.requestID:int</codeph> représente l’ID de cette demande devant être utilisé par <codeph class="+ topic/ph pr-d/codeph ">NetGroup.writeRequestedObject()</codeph> ou <codeph class="+ topic/ph pr-d/codeph ">NetGroup.denyRequestedObject()</codeph>.</entry></row><row class="- topic/row "><entry class="- topic/entry "><xref name="code_NetGroup_SendTo_Notify" class="- topic/xref "><codeph class="+ topic/ph pr-d/codeph ">"NetGroup.SendTo.Notify"</codeph></xref></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"status"</codeph></entry><entry class="- topic/entry ">Envoyée lors de la réception d’un message adressé à ce nœud. La propriété <codeph class="+ topic/ph pr-d/codeph ">info.message:Object</codeph> représente le message. La propriété <codeph class="+ topic/ph pr-d/codeph ">info.from:String</codeph> représente l’adresse de groupe à partir de laquelle le message a été reçu. La propriété <codeph class="+ topic/ph pr-d/codeph ">info.fromLocal:Boolean</codeph> est définie sur <codeph class="+ topic/ph pr-d/codeph ">TRUE</codeph> si le message a été envoyé par ce nœud (ce qui signifie que le nœud local est le plus proche de l’adresse de groupe de destination), et sur <codeph class="+ topic/ph pr-d/codeph ">FALSE</codeph> si le message a été reçu depuis un autre nœud. Pour mettre en œuvre le routage récursif, le message doit être renvoyé avec <codeph class="+ topic/ph pr-d/codeph ">NetGroup.sendToNearest()</codeph> si la propriété <codeph class="+ topic/ph pr-d/codeph ">info.fromLocal</codeph> est définie sur <codeph class="+ topic/ph pr-d/codeph ">FALSE</codeph>.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"NetStream.Buffer.Empty"</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"status"</codeph></entry><entry class="- topic/entry ">Flash Player ne reçoit pas les données assez rapidement pour remplir la mémoire tampon. Le flux de données est interrompu tant que la mémoire tampon n’est pas rechargée : une fois l’opération terminée, un message <codeph class="+ topic/ph pr-d/codeph ">NetStream.Buffer.Full</codeph> est envoyé et la lecture du flux continu reprend.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"NetStream.Buffer.Flush"</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"status"</codeph></entry><entry class="- topic/entry ">Le flux de données est terminé et le tampon restant va être vidé.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"NetStream.Buffer.Full"</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"status"</codeph></entry><entry class="- topic/entry ">La mémoire tampon est pleine et la lecture du flux continu commence.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"NetStream.Connect.Closed"</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"status"</codeph></entry><entry class="- topic/entry ">La connexion P2P a bien été fermée. La propriété <codeph class="+ topic/ph pr-d/codeph ">info.stream</codeph> indique le flux qui a été fermé.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"NetStream.Connect.Failed"</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"error"</codeph></entry><entry class="- topic/entry ">Echec de la tentative de connexion P2P. La propriété <codeph class="+ topic/ph pr-d/codeph ">info.stream</codeph> désigne le flux qui a échoué.</entry></row><row class="- topic/row "><entry class="- topic/entry "><xref id="code_NetStream_Connect_Rejected" name="code_NetStream_Connect_Rejected" class="- topic/xref "><codeph class="+ topic/ph pr-d/codeph ">"NetStream.Connect.Rejected"</codeph></xref></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"error"</codeph></entry><entry class="- topic/entry ">La tentative de connexion P2P ne disposait pas des autorisations nécessaires pour accéder à l’autre homologue. La propriété <codeph class="+ topic/ph pr-d/codeph ">info.stream</codeph> désigne le flux qui a été rejeté.</entry></row><row class="- topic/row "><entry class="- topic/entry "><xref id="code_NetStream_Connect_Success" name="code_NetStream_Connect_Success" class="- topic/xref "><codeph class="+ topic/ph pr-d/codeph ">"NetStream.Connect.Success"</codeph></xref></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"status"</codeph></entry><entry class="- topic/entry ">La tentative de connexion P2P a réussi. La propriété <codeph class="+ topic/ph pr-d/codeph ">info.stream</codeph> désigne le flux qui a réussi.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"NetStream.DRM.UpdateNeeded"</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"status"</codeph></entry><entry class="- topic/entry ">Un objet NetStream tente de lire le contenu protégé, mais le module Flash Access requis est manquant, n’est pas autorisé par la stratégie de contenu en cours ou n’est pas compatible avec le lecteur actuel. Pour mettre à jour le module ou le lecteur, utilisez la méthode <codeph class="+ topic/ph pr-d/codeph ">update()</codeph> de flash.system.SystemUpdater. </entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"NetStream.Failed"</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"error"</codeph></entry><entry class="- topic/entry ">(Flash Media Server) Une erreur s’est produite pour une raison autre que celles énumérées dans d’autres codes d’événement. </entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"NetStream.MulticastStream.Reset"</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"status"</codeph></entry><entry class="- topic/entry ">Un abonnement multidiffusion a placé le focus sur un autre flux publié avec le même nom dans le même groupe. Les remplacements locaux de paramètres de flux de multidiffusion sont perdus. Appliquez de nouveau les remplacements locaux ou les paramètres par défaut du nouveau flux seront utilisés.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"NetStream.Pause.Notify"</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"status"</codeph></entry><entry class="- topic/entry ">Le flux continu est en pause.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"NetStream.Play.Failed"</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"error"</codeph></entry><entry class="- topic/entry ">Une erreur est survenue pendant la lecture, pour une autre raison que celles énumérées dans ce tableau, par exemple l’abonné n’a pas d’accès en lecture.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"NetStream.Play.FileStructureInvalid"</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"error"</codeph></entry><entry class="- topic/entry ">(AIR et Flash Player 9.0.115.0) L’application détecte une structure de fichiers non valide et n’essaie pas de lire ce type de fichier.      </entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"NetStream.Play.InsufficientBW"</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"warning"</codeph></entry><entry class="- topic/entry ">(Flash Media Server) Le client ne dispose pas de suffisamment de bande passante pour lire les données à la vitesse normale. </entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"NetStream.Play.NoSupportedTrackFound"</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"error"</codeph></entry><entry class="- topic/entry ">(AIR et Flash Player 9.0.115.0) L’application ne détecte aucune piste prise en charge (vidéo, audio ou données) et n’essaie pas de lire le fichier.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"NetStream.Play.PublishNotify"</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"status"</codeph></entry><entry class="- topic/entry ">La publication initiale dans un flux continu est envoyée à tous les abonnés.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"NetStream.Play.Reset"</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"status"</codeph></entry><entry class="- topic/entry ">Causé par une réinitialisation de la liste de lecture.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"NetStream.Play.Start"</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"status"</codeph></entry><entry class="- topic/entry ">La lecture a repris.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"NetStream.Play.Stop"</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"status"</codeph></entry><entry class="- topic/entry ">La lecture s’est arrêtée.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"NetStream.Play.StreamNotFound"</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"error"</codeph></entry><entry class="- topic/entry ">Le fichier FLV transmis à la méthode <codeph class="+ topic/ph pr-d/codeph ">NetStream.play()</codeph> est introuvable.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"NetStream.Play.Transition"</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"status"</codeph></entry><entry class="- topic/entry ">(Flash Media Server 3.5) Suite au changement de vitesse de transmission du flux continu, le serveur a reçu une commande de transition vers un autre flux continu. Ce code indique un événement de réussite pour que l’appel de <codeph class="+ topic/ph pr-d/codeph ">NetStream.play2()</codeph> initie un basculement du flux. Si le basculement est un échec, le serveur envoie à la place un événement <codeph class="+ topic/ph pr-d/codeph ">NetStream.Play.Failed</codeph>. Si le changement du flux se produit, un événement <codeph class="+ topic/ph pr-d/codeph ">onPlayStatus</codeph> dont le code est « NetStream.Play.TransitionComplete » est distribué. Pour Flash Player 10 et les versions ultérieures. </entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"NetStream.Play.UnpublishNotify"</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"status"</codeph></entry><entry class="- topic/entry ">Une annulation de la publication dans un flux continu est envoyée à tous les abonnés.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"NetStream.Publish.BadName"</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"error"</codeph></entry><entry class="- topic/entry ">Tentative de publication d’un flux continu qui est en cours de publication par une autre personne.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"NetStream.Publish.Idle"</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"status"</codeph></entry><entry class="- topic/entry ">La publication du flux est inactive et ne transmet pas de données.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"NetStream.Publish.Start"</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"status"</codeph></entry><entry class="- topic/entry ">La publication a abouti.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"NetStream.Record.AlreadyExists"</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"status"</codeph></entry><entry class="- topic/entry ">Le flux en cours d'enregistrement est mappé vers un fichier déjà enregistré sur un autre flux. La cause peut en être l'existence de répertoires virtuels mal configurés.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"NetStream.Record.Failed"</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"error"</codeph></entry><entry class="- topic/entry ">Une tentative d’enregistrement d’un flux continu a échoué.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"NetStream.Record.NoAccess"</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"error"</codeph></entry><entry class="- topic/entry ">Il s’est produit une tentative d’enregistrement d’un flux continu dont la lecture n’est pas terminée, ou le client ne dispose pas de droits d’accès.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"NetStream.Record.Start"</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"status"</codeph></entry><entry class="- topic/entry ">L’enregistrement a commencé.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"NetStream.Record.Stop"</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"status"</codeph></entry><entry class="- topic/entry ">L’enregistrement s’est arrêté.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"NetStream.Seek.Failed"</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"error"</codeph></entry><entry class="- topic/entry ">La recherche a échoué. Cette erreur se produit s’il est impossible d’effectuer des recherches dans le flux continu.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"NetStream.Seek.InvalidTime"</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"error"</codeph></entry><entry class="- topic/entry ">Pour une vidéo chargée progressivement, l’utilisateur a tenté de rechercher ou de lire au-delà des données vidéo déjà chargées, ou après la fin de la vidéo lorsque le fichier a été totalement chargé. La propriété <codeph class="+ topic/ph pr-d/codeph ">info.details</codeph> de l’objet d’événement contient un code temporel qui indique la dernière position valide à laquelle l’utilisateur peut effectuer une recherche.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"NetStream.Seek.Notify"</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"status"</codeph></entry><entry class="- topic/entry "><p class="- topic/p ">L’opération de recherche est terminée. </p>
<p class="- topic/p ">Envoyé lorsque <codeph class="+ topic/ph pr-d/codeph ">NetStream.seek()</codeph> est appelée sur un flux dans le mode de génération de données NetStream AS3. L’objet info est étendu pour inclure <codeph class="+ topic/ph pr-d/codeph ">info.seekPoint</codeph>, qui est la même valeur transmise à <codeph class="+ topic/ph pr-d/codeph ">NetStream.seek()</codeph>.</p></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"NetStream.Step.Notify"</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"status"</codeph></entry><entry class="- topic/entry ">La procédure est terminée.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"NetStream.Unpause.Notify"</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"status"</codeph></entry><entry class="- topic/entry ">Le flux continu a repris.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"NetStream.Unpublish.Success"</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"status"</codeph></entry><entry class="- topic/entry ">L’opération d’annulation de la publication a abouti.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"SharedObject.BadPersistence"</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"error"</codeph></entry><entry class="- topic/entry ">Un objet partagé doté d’indicateurs de persistance a été demandé, mais la requête ne peut pas être accordée car l’objet a déjà été créé avec d’autres indicateurs.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"SharedObject.Flush.Failed"</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"error"</codeph></entry><entry class="- topic/entry ">L’état « en attente » est résolu, mais l’appel <codeph class="+ topic/ph pr-d/codeph ">SharedObject.flush()</codeph> a échoué.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"SharedObject.Flush.Success"</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"status"</codeph></entry><entry class="- topic/entry ">L’état « en attente » est résolu et l’appel <codeph class="+ topic/ph pr-d/codeph ">SharedObject.flush()</codeph> a abouti.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"SharedObject.UriMismatch"</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"error"</codeph></entry><entry class="- topic/entry ">Une tentative de connexion à un objet NetConnection ne possédant pas la même URI (URL) que l’objet partagé a été effectuée.</entry></row></tbody></tgroup></adobetable>
    <p class="- topic/p ">Si vous recevez systématiquement des erreurs concernant la mémoire tampon, tentez de modifier celle-ci à l’aide de la propriété <codeph class="+ topic/ph pr-d/codeph ">NetStream.bufferTime</codeph>.</p>

    
    </apiDesc><example conref="examples\NetStatusEvent_invalidseek.as" class="- topic/example "> L’exemple suivant illustre une fonction de gestionnaire d’événement qui teste l’erreur <codeph class="+ topic/ph pr-d/codeph ">"NetStream.seek.InvalidTime"</codeph>. L’erreur <codeph class="+ topic/ph pr-d/codeph ">"NetStream.seek.InvalidTime"</codeph> se produit lorsque l’utilisateur tente de rechercher au-delà de la fin du flux téléchargé. Cet exemple teste la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">code info.</codeph> de l’objet d’événement. Dans le cas où l’erreur se produit, la propriété <codeph class="+ topic/ph pr-d/codeph ">eventObj.info.details</codeph> est affectée à une variable à utiliser comme paramètre pour la méthode <codeph class="+ topic/ph pr-d/codeph ">seek()</codeph> du flux. La propriété <codeph class="+ topic/ph pr-d/codeph ">eventObj.info.details</codeph> contient la dernière position valide disponible pour gérer l’erreur. L’utilisateur se dirige ainsi vers un emplacement valide à la fin du flux téléchargé.
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
function videoStatus(eventObj:NetStatusEvent):Void
{
    switch(eventObj.info.code)
    {
        case "NetStream.Seek.InvalidTime":
        {
            var validSeekTime:Number = eventObj.info.details;
            nStream.seek(validSeekTime);
            break;
        }
    }
}
</codeblock></example></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetConnection" class="- topic/link "><linktext class="- topic/linktext ">Classe NetConnection</linktext></link><link href="flash.net.xml#NetStream" class="- topic/link "><linktext class="- topic/linktext ">Classe NetStream</linktext></link><link href="flash.net.xml#NetGroup" class="- topic/link "><linktext class="- topic/linktext ">Classe NetGroup</linktext></link></related-links></apiValue></apiClassifier><apiClassifier languages="" id="flash.events:UncaughtErrorEvents" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">UncaughtErrorEvents</apiName><shortdesc class="- topic/shortdesc ">
     La classe UncaughtErrorEvents offre un moyen de recevoir les événements d’erreurs non interceptées.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:EventDispatcher</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     La classe UncaughtErrorEvents offre un moyen de recevoir les événements d’erreurs non interceptées. Une occurrence de cette classe distribue un événement <codeph class="+ topic/ph pr-d/codeph ">uncaughtError</codeph> lorsqu’une erreur d’exécution se produit et que cette erreur n’est ni détectée ni gérée dans votre code.
	 
	 <p class="- topic/p ">Utilisez les propriétés suivantes pour accéder à une occurrence de UncaughtErrorEvents :</p>
	 
	 <ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">LoaderInfo.uncaughtErrorEvents</codeph> : pour détecter des erreurs non interceptées dans le code défini dans le même fichier SWF.</li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">Loader.uncaughtErrorEvents</codeph> : pour détecter des erreurs non interceptées dans le code défini dans le fichier SWF chargé par un objet Loader.</li></ul>
	 
	 <p class="- topic/p ">Pour intercepter une erreur directement et empêcher la distribution d’un événement d’erreur non interceptée, procédez comme suit :</p>
	 
	 <ul class="- topic/ul "><li class="- topic/li ">Utilisez un bloc <codeph class="+ topic/ph pr-d/codeph "><xref href="../../statements.html#try..catch..finally" class="- topic/xref ">try..catch</xref></codeph> pour isoler le code qui risque de renvoyer une erreur synchrone.</li><li class="- topic/li ">Lorsque vous effectuez une opération qui distribue un événement suite à une erreur, enregistrez un écouteur pour cet événement d’erreur.</li></ul>
	 
	 <p class="- topic/p ">Si le contenu chargé par un objet Loader est un fichier SWF AVM1 (ActionScript 2), les erreurs non interceptées dans le fichier SWF AVM1 n’entraînent pas un événement <codeph class="+ topic/ph pr-d/codeph ">uncaughtError</codeph>. En outre, les erreurs JavaScript d’un contenu HTML chargé dans un objet HTMLLoader (notamment une commande HTML Flex) n’entraînent pas un événement <codeph class="+ topic/ph pr-d/codeph ">uncaughtError</codeph>.</p>
	 
     </apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.display.xml#LoaderInfo/uncaughtErrorEvents" class="- topic/link "><linktext class="- topic/linktext ">LoaderInfo.uncaughtErrorEvents</linktext></link><link href="flash.display.xml#Loader/uncaughtErrorEvents" class="- topic/link "><linktext class="- topic/linktext ">Loader.uncaughtErrorEvents</linktext></link><link href="flash.events.xml#UncaughtErrorEvent" class="- topic/link "><linktext class="- topic/linktext ">UncaughtErrorEvent</linktext></link></related-links><adobeApiEvent id="flash.events:UncaughtErrorEvents_flash.events.UncaughtErrorEvent.UNCAUGHT_ERROR_uncaughtError" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">uncaughtError</apiName><shortdesc class="- topic/shortdesc ">
     Distribué lorsqu’une erreur se produit et que le code du développeur ne détecte ni ne gère l’erreur.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.UncaughtErrorEvent.UNCAUGHT_ERROR</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.UncaughtErrorEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Distribué lorsqu’une erreur se produit et que le code du développeur ne détecte ni ne gère l’erreur.
	 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="flash.events:UncaughtErrorEvents:UncaughtErrorEvents" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">UncaughtErrorEvents</apiName><shortdesc class="- topic/shortdesc ">
		 Crée une occurrence de UncaughtErrorEvents.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 Crée une occurrence de UncaughtErrorEvents. Le code du développeur ne devrait pas créer directement d’occurrences de UncaughtErrorEvents. Pour accéder à un objet UncaughtErrorEvents, utilisez l’une des propriétés suivantes :
		 
		 <ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">LoaderInfo.uncaughtErrorEvents</codeph> : pour détecter des erreurs non interceptées dans le code défini dans le même fichier SWF.</li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">Loader.uncaughtErrorEvents</codeph> : pour détecter des erreurs non interceptées dans le code défini dans le fichier SWF chargé par un objet Loader.</li></ul>
		 
		 </apiDesc></apiConstructorDetail><related-links class="- topic/related-links "><link href="flash.display.xml#LoaderInfo/uncaughtErrorEvents" class="- topic/link "><linktext class="- topic/linktext ">LoaderInfo.uncaughtErrorEvents</linktext></link><link href="flash.display.xml#Loader/uncaughtErrorEvents" class="- topic/link "><linktext class="- topic/linktext ">Loader.uncaughtErrorEvents</linktext></link></related-links></apiConstructor></apiClassifier><apiClassifier languages="" id="flash.events:MouseEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">MouseEvent</apiName><shortdesc class="- topic/shortdesc ">
 Un objet MouseEvent est distribué dans le flux d’événements lorsque des événements mouse ont lieu.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Objets event associés aux événements de souris.
  
  </apiTipText></apiTipTexts><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Un objet MouseEvent est distribué dans le flux d’événements lorsque des événements mouse ont lieu. En règle générale, un événement de souris est généré par un périphérique d’entrée utilisateur, souris ou trackball (boule roulante) qui fonctionne avec un pointeur. 
 
 <p class="- topic/p ">Lorsque des nœuds imbriqués sont utilisés, les événements de souris ciblent le dernier des nœuds imbriqués visible dans la liste d’affichage. Ce nœud est appelé <i class="+ topic/ph hi-d/i ">target node</i>. Pour qu’un ancêtre de nœud cible soit averti d’un événement de souris, utilisez <codeph class="+ topic/ph pr-d/codeph ">EventDispatcher.addEventListener()</codeph> sur l’ancêtre en définissant le paramètre <codeph class="+ topic/ph pr-d/codeph ">type</codeph> sur l’événement de souris à détecter.</p>
 
 </apiDesc><example conref="examples\MouseEventExample.as" class="- topic/example "> L’exemple suivant utilise les classes <codeph class="+ topic/ph pr-d/codeph ">MouseEventExample</codeph> et <codeph class="+ topic/ph pr-d/codeph ">ChildSprite</codeph> pour montrer comment les événements de souris sont distribués à l’aide d’une image simple. Cet exemple exécute les tâches suivantes :
 <ol class="- topic/ol "><li class="- topic/li ">L’exemple déclare les propriétés de la taille (100x100 pixels) et de la couleur d’arrière-plan (orange) à utiliser pour tracer le carré.</li><li class="- topic/li ">Le constructeur crée un nouvel objet ChildSprite <codeph class="+ topic/ph pr-d/codeph ">child</codeph>. Son constructeur dessine tout d’abord un carré orange de 100x100 pixels aux coordonnées (0,0) en appelant sa méthode <codeph class="+ topic/ph pr-d/codeph ">draw()</codeph> et en ajoutant ensuite sept écouteurs/abonnés d’événements.
     <ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">click</codeph> / <codeph class="+ topic/ph pr-d/codeph ">clickHandler()</codeph> : Distribué lorsque l’utilisateur clique une fois dans le carré avec le bouton gauche de sa souris.</li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">doubleClick</codeph> / <codeph class="+ topic/ph pr-d/codeph ">doubleClickHandler()</codeph> : Distribué lorsque l’utilisateur double-clique dans le carré avec le bouton gauche de sa souris.</li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">mouseDown</codeph> / <codeph class="+ topic/ph pr-d/codeph ">mouseDownHandler()</codeph> : Lorsque l’utilisateur clique sur l’objet ChildSprite (le carré orange), un message <codeph class="+ topic/ph pr-d/codeph ">trace()</codeph> est imprimé à l’écran, puis <codeph class="+ topic/ph pr-d/codeph ">ChildSprite.draw()</codeph> est appelé, pour dessiner un carré jaune foncé à la place du carré bleu clair dessiné par <codeph class="+ topic/ph pr-d/codeph ">mouseOverHandler()</codeph>. La méthode <codeph class="+ topic/ph pr-d/codeph ">mouseDownHandler()</codeph> ajoute également un écouteur d’événements <codeph class="+ topic/ph pr-d/codeph ">mouseMove</codeph> et l’abonné <codeph class="+ topic/ph pr-d/codeph ">mouseMoveHandler()</codeph> (décrit ci-dessous), qui traite les déplacements de la souris. La méthode <codeph class="+ topic/ph pr-d/codeph ">startDrag()</codeph> est ensuite appelée et permet de faire glisser l’objet Sprite.</li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">mouseOut</codeph> / <codeph class="+ topic/ph pr-d/codeph ">mouseOutHandler()</codeph> : Distribué chaque fois que le pointeur quitte la zone du carré. La méthode <codeph class="+ topic/ph pr-d/codeph ">draw()</codeph> est appelée pour réinitialiser la taille et la couleur normales du carré.</li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">mouseOver</codeph> / <codeph class="+ topic/ph pr-d/codeph ">mouseOverHandler()</codeph> : Distribué lorsque le pointeur de la souris survole le carré. Cette méthode redessine le carré avec une taille plus importante et une couleur d’arrière-plan jaune foncé.</li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">mouseUp</codeph> / <codeph class="+ topic/ph pr-d/codeph ">mouseUpHandler()</codeph> : Lorsque l’utilisateur relâche le bouton de sa souris, l’écouteur d’événements <codeph class="+ topic/ph pr-d/codeph ">mouseMove</codeph> est supprimé et <codeph class="+ topic/ph pr-d/codeph ">stopDrag</codeph> est appelé, ce qui fige le carré en place.</li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">mouseMove</codeph>/<codeph class="+ topic/ph pr-d/codeph ">mouseMoveHandler()</codeph> : Appelés dans le cadre de la fonction <codeph class="+ topic/ph pr-d/codeph ">mouseDownHandler()</codeph> et distribués lorsque l’utilisateur appuie sur le bouton gauche de la souris et fait glisser le carré.</li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">mouseWheel</codeph> / <codeph class="+ topic/ph pr-d/codeph ">mouseWheelHandler()</codeph> : Distribué lorsque l’utilisateur fait tourner la molette de sa souris dans le carré.</li></ul></li><li class="- topic/li ">L’occurrence ChildSprite <codeph class="+ topic/ph pr-d/codeph ">child</codeph> est ensuite ajoutée à la liste d’affichage par le biais de <codeph class="+ topic/ph pr-d/codeph ">addChild()</codeph>, qui redessine rapidement le carré orange.</li></ol> 
 
 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Remarques :</b></p>
 <ul class="- topic/ul "><li class="- topic/li ">la classe <codeph class="+ topic/ph pr-d/codeph ">MouseEventExample</codeph> doit être la racine du document.</li><li class="- topic/li ">Certaines des méthodes d’événements énumérées ci-dessus déclarent une variable locale <codeph class="+ topic/ph pr-d/codeph ">sprite</codeph>, qui affecte <codeph class="+ topic/ph pr-d/codeph ">event.target</codeph> au type Sprite.</li></ul>
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
package {
    import flash.display.Sprite;

    public class MouseEventExample extends Sprite {
        private var size:uint = 100;
        private var bgColor:uint = 0xFFCC00;

        public function MouseEventExample() {
            var child:ChildSprite = new ChildSprite();
            addChild(child);
        }
    }
}

import flash.display.Sprite;
import flash.events.MouseEvent;

class ChildSprite extends Sprite {
    private var size:uint = 50;
    private var overSize:uint = 60;
    private var backgroundColor:uint = 0xFFCC00;
    private var overColor:uint = 0xCCFF00;
    private var downColor:uint = 0x00CCFF;

    public function ChildSprite() {
        draw(size, size, backgroundColor);
            doubleClickEnabled = true;
        addEventListener(MouseEvent.CLICK, clickHandler);
        addEventListener(MouseEvent.DOUBLE_CLICK, doubleClickHandler);
        addEventListener(MouseEvent.MOUSE_DOWN, mouseDownHandler);
        addEventListener(MouseEvent.MOUSE_OUT, mouseOutHandler);
        addEventListener(MouseEvent.MOUSE_OVER, mouseOverHandler);
        addEventListener(MouseEvent.MOUSE_UP, mouseUpHandler);
        addEventListener(MouseEvent.MOUSE_WHEEL, mouseWheelHandler);
    }

    private function draw(w:uint, h:uint, bgColor:uint):void {
        graphics.clear();
        graphics.beginFill(bgColor);
        graphics.drawRect(0, 0, w, h);
        graphics.endFill();
    }

    private function clickHandler(event:MouseEvent):void {
        trace("clickHandler");
    }

    private function doubleClickHandler(event:MouseEvent):void {
        trace("doubleClickHandler");
    }

    private function mouseDownHandler(event:MouseEvent):void {
        trace("mouseDownHandler");
        draw(overSize, overSize, downColor);

        var sprite:Sprite = Sprite(event.target);
        sprite.addEventListener(MouseEvent.MOUSE_MOVE, mouseMoveHandler);
        sprite.startDrag();
    }

    private function mouseMoveHandler(event:MouseEvent):void {
        trace("mouseMoveHandler");
        event.updateAfterEvent();
    }

    private function mouseOutHandler(event:MouseEvent):void {
        trace("mouseOutHandler");
        draw(size, size, backgroundColor);
    }

    private function mouseOverHandler(event:MouseEvent):void {
        trace("mouseOverHandler");
        draw(overSize, overSize, overColor);
    }

    private function mouseWheelHandler(event:MouseEvent):void {
        trace("mouseWheelHandler delta: " + event.delta);
    }

    private function mouseUpHandler(event:MouseEvent):void {
        trace("mouseUpHandler");
        var sprite:Sprite = Sprite(event.target);
        sprite.removeEventListener(MouseEvent.MOUSE_MOVE, mouseMoveHandler);
        sprite.stopDrag();
        draw(overSize, overSize, overColor);
    }
}
</codeblock></example></apiClassifierDetail><adobeApiEvent id="flash.events:MouseEvent:CLICK_click" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">click</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:MouseEvent:CLICK</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:MouseEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:click" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.click</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:MouseEvent:CONTEXT_MENU_contextMenu" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">contextMenu</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:MouseEvent:CONTEXT_MENU</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:MouseEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flash.events:MouseEvent:DOUBLE_CLICK_doubleClick" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">doubleClick</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:MouseEvent:DOUBLE_CLICK</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:MouseEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:doubleClick" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.doubleClick</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:MouseEvent:MIDDLE_CLICK_middleClick" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">middleClick</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:MouseEvent:MIDDLE_CLICK</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:MouseEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:middleClick" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.middleClick</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:MouseEvent:MIDDLE_MOUSE_DOWN_middleMouseDown" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">middleMouseDown</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:MouseEvent:MIDDLE_MOUSE_DOWN</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:MouseEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:middleMouseDown" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.middleMouseDown</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:MouseEvent:MIDDLE_MOUSE_UP_middleMouseUp" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">middleMouseUp</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:MouseEvent:MIDDLE_MOUSE_UP</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:MouseEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:middleMouseUp" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.middleMouseUp</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:MouseEvent:MOUSE_DOWN_mouseDown" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">mouseDown</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:MouseEvent:MOUSE_DOWN</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:MouseEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:mouseDown" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.mouseDown</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:MouseEvent:MOUSE_MOVE_mouseMove" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">mouseMove</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:MouseEvent:MOUSE_MOVE</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:MouseEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef><example conref="examples\MouseEvent_MOUSE_MOVEExample.as" class="- topic/example "> L’exemple suivant est un programme de dessin simple. L’utilisateur peut dessiner sur l’objet Sprite principal ou sur un plus petit objet Sprite rectangulaire. 
   
 <p class="- topic/p ">Dans le constructeur, un objet Sprite <codeph class="+ topic/ph pr-d/codeph ">innerRect</codeph> de rectangle est créé et le style de ligne est défini sur vert. Le style de ligne pour dessiner sur le conteneur Sprite <codeph class="+ topic/ph pr-d/codeph ">MouseEvent_MOUSE_MOVEExample</codeph> est défini sur rouge. Des écouteurs d’événement séparés pour les événements <codeph class="+ topic/ph pr-d/codeph ">MouseEvent.MOUSE_UP</codeph> et <codeph class="+ topic/ph pr-d/codeph ">MouseEvent.MOUSE_DOWN</codeph> sont ajoutés pour l’objet Sprite principal de l’application et l’objet Sprite <codeph class="+ topic/ph pr-d/codeph ">innerRect</codeph>. Dans les deux cas, les méthodes de l’écouteur d’événement mouse down déplacent la position de dessin actuelle sur l’emplacement du pointeur de la souris et ajoutent un écouteur pour l’événement <codeph class="+ topic/ph pr-d/codeph ">MouseEvent.MOUSE_MOVE</codeph>. Lorsque le pointeur de la souris est déplacé, les méthodes de l’écouteur d’événements invoquées suivent le pointeur et tracent une ligne à l’aide de la méthode <codeph class="+ topic/ph pr-d/codeph ">graphics.LineTo()</codeph> (<b class="+ topic/ph hi-d/b ">remarque :</b> l’objet Sprite <codeph class="+ topic/ph pr-d/codeph ">innerRect</codeph> masque les lignes rouges de l’objet Sprite principal tracées derrière le rectangle). Lorsque l’événement <codeph class="+ topic/ph pr-d/codeph ">MouseEvent.MOUSE_UP</codeph> a lieu, l’écouteur pour l’événement <codeph class="+ topic/ph pr-d/codeph ">MOUSE_MOVE</codeph> est supprimé et le dessin est arrêté.</p>     
 
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
package {
    import flash.display.Sprite;
    import flash.display.Graphics;
    import flash.events.MouseEvent;

    public class MouseEvent_MOUSE_MOVEExample extends Sprite {
        private var innerRect:Sprite = new Sprite();
        
        public function MouseEvent_MOUSE_MOVEExample() {

            graphics.lineStyle(3, 0xFF0000, 1);
            stage.addEventListener(MouseEvent.MOUSE_DOWN, mouseDownHandler);
            stage.addEventListener(MouseEvent.MOUSE_UP, mouseUpHandler);

            innerRect.graphics.lineStyle(1, 0x00FF00, 1);
            innerRect.graphics.beginFill(0xFFFFFF);
            innerRect.graphics.drawRect(10, 10, 200, 200);
            innerRect.graphics.endFill();
            innerRect.addEventListener(MouseEvent.MOUSE_DOWN, innerRectMouseDownHandler);
            innerRect.addEventListener(MouseEvent.MOUSE_UP, innerRectMouseUpHandler);
            addChild(innerRect);
        }

        private function mouseDownHandler(event:MouseEvent):void {
            graphics.moveTo(event.stageX, event.stageY);
            stage.addEventListener(MouseEvent.MOUSE_MOVE, mouseMoveHandler);
        }
    
        private function mouseMoveHandler(event:MouseEvent):void {
            graphics.lineTo(event.stageX, event.stageY);
        }    
    
        private function mouseUpHandler(event:MouseEvent):void {
            stage.removeEventListener(MouseEvent.MOUSE_MOVE, mouseMoveHandler);
        }

        private function innerRectMouseDownHandler(event:MouseEvent):void {
            innerRect.graphics.moveTo(event.localX, event.localY);
            innerRect.addEventListener(MouseEvent.MOUSE_MOVE, innerRectMouseMoveHandler);
        }
    
        private function innerRectMouseMoveHandler(event:MouseEvent):void {
            innerRect.graphics.lineTo(event.localX, event.localY);
        }    
    
        private function innerRectMouseUpHandler(event:MouseEvent):void {
            innerRect.removeEventListener(MouseEvent.MOUSE_MOVE, innerRectMouseMoveHandler);
        }
    }
}
</codeblock></example></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:mouseMove" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.mouseMove</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:MouseEvent:MOUSE_OUT_mouseOut" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">mouseOut</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:MouseEvent:MOUSE_OUT</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:MouseEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:mouseOut" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.mouseOut</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:MouseEvent:MOUSE_OVER_mouseOver" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">mouseOver</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:MouseEvent:MOUSE_OVER</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:MouseEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:mouseOver" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.mouseOver</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:MouseEvent:MOUSE_UP_mouseUp" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">mouseUp</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:MouseEvent:MOUSE_UP</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:MouseEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:mouseUp" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.mouseUp</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:MouseEvent:MOUSE_WHEEL_mouseWheel" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">mouseWheel</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:MouseEvent:MOUSE_WHEEL</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:MouseEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:mouseWheel" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.mouseWheel</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:MouseEvent:RIGHT_CLICK_rightClick" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">rightClick</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:MouseEvent:RIGHT_CLICK</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:MouseEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:rightClick" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.rightClick</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:MouseEvent:RIGHT_MOUSE_DOWN_RightMouseDown" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">RightMouseDown</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:MouseEvent:RIGHT_MOUSE_DOWN</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:MouseEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:rightMouseDown" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.rightMouseDown</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:MouseEvent:RIGHT_MOUSE_UP_rightMouseUp" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">rightMouseUp</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:MouseEvent:RIGHT_MOUSE_UP</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:MouseEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:rightMouseUp" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.rightMouseUp</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:MouseEvent:ROLL_OUT_rollOut" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">rollOut</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:MouseEvent:ROLL_OUT</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:MouseEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:rollOut" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.rollOut</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:MouseEvent:ROLL_OVER_rollOver" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">rollOver</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:MouseEvent:ROLL_OVER</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:MouseEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:rollOver" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.rollOver</linktext></link></related-links></adobeApiEvent><apiConstructor id="flash.events:MouseEvent:MouseEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">MouseEvent</apiName><shortdesc class="- topic/shortdesc ">
     Crée un objet Event contenant des informations sur les événements de souris.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">type</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc "> Type de l’événement. Les valeurs possibles sont les suivantes : <codeph class="+ topic/ph pr-d/codeph ">MouseEvent.CLICK</codeph>, <codeph class="+ topic/ph pr-d/codeph ">MouseEvent.DOUBLE_CLICK</codeph>, <codeph class="+ topic/ph pr-d/codeph ">MouseEvent.MOUSE_DOWN</codeph>, <codeph class="+ topic/ph pr-d/codeph ">MouseEvent.MOUSE_MOVE</codeph>, <codeph class="+ topic/ph pr-d/codeph ">MouseEvent.MOUSE_OUT</codeph>, <codeph class="+ topic/ph pr-d/codeph ">MouseEvent.MOUSE_OVER</codeph>, <codeph class="+ topic/ph pr-d/codeph ">MouseEvent.MOUSE_UP</codeph>, <codeph class="+ topic/ph pr-d/codeph ">MouseEvent.MIDDLE_CLICK</codeph>, <codeph class="+ topic/ph pr-d/codeph ">MouseEvent.MIDDLE_MOUSE_DOWN</codeph>, <codeph class="+ topic/ph pr-d/codeph ">MouseEvent.MIDDLE_MOUSE_UP</codeph>, <codeph class="+ topic/ph pr-d/codeph ">MouseEvent.RIGHT_CLICK</codeph>, <codeph class="+ topic/ph pr-d/codeph ">MouseEvent.RIGHT_MOUSE_DOWN</codeph>, <codeph class="+ topic/ph pr-d/codeph ">MouseEvent.RIGHT_MOUSE_UP</codeph>, <codeph class="+ topic/ph pr-d/codeph ">MouseEvent.MOUSE_WHEEL</codeph>, <codeph class="+ topic/ph pr-d/codeph ">MouseEvent.ROLL_OUT</codeph> et <codeph class="+ topic/ph pr-d/codeph ">MouseEvent.ROLL_OVER</codeph>. 
	 
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">bubbles</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">true</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc "> Détermine si l’objet Event prend part à la phase de propagation du flux d’événements.
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">cancelable</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Détermine si l’objet d’événement peut être annulé.
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">localX</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">unknown</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Coordonnée horizontale à laquelle l’événement s’est produit par rapport au sprite conteneur.
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">localY</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">unknown</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Coordonnée verticale à laquelle l’événement s’est produit par rapport au sprite conteneur.
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">relatedObject</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.display:InteractiveObject</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Occurrence complémentaire d’InteractiveObject affectée par l’événement. Lorsqu’un événement <codeph class="+ topic/ph pr-d/codeph ">mouseOut</codeph> se produit par exemple, <codeph class="+ topic/ph pr-d/codeph ">relatedObject</codeph> représente l’objet de la liste d’affichage sur lequel pointe actuellement le périphérique de pointage.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ctrlKey</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Sous Windows ou Linux, indique si la touche Ctrl est activée. Sous Mac, indique si la touche Ctrl ou la touche Commande est activée.
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">altKey</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Indique si la touche Alt est activée (Windows ou Linux uniquement).
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">shiftKey</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Indique si la touche Maj est activée.
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">buttonDown</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Indique si l’utilisateur appuie sur le bouton principal de la souris.
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">delta</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Indique le nombre de lignes qui doivent défiler chaque fois que l’utilisateur fait tourner la molette de sa souris d’un cran. Une valeur delta positive indique un défilement vers le haut ; une valeur négative un défilement vers le bas. Les valeurs types sont comprises entre 1 et 3 ; une rotation plus rapide peut générer des valeurs supérieures. Ce paramètre s’utilise uniquement avec l’événement <codeph class="+ topic/ph pr-d/codeph ">MouseEvent.mouseWheel</codeph>.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">commandKey</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">(AIR uniquement) Indique si la touche Commande est activée (Mac uniquement). Ce paramètre est utilisé uniquement pour les événements <codeph class="+ topic/ph pr-d/codeph ">MouseEvent.click</codeph>, <codeph class="+ topic/ph pr-d/codeph ">MouseEvent.mouseDown</codeph>, <codeph class="+ topic/ph pr-d/codeph ">MouseEvent.mouseUp</codeph>, <codeph class="+ topic/ph pr-d/codeph ">MouseEvent.middleClick</codeph>, <codeph class="+ topic/ph pr-d/codeph ">MouseEvent.middleMouseDown</codeph>, <codeph class="+ topic/ph pr-d/codeph ">MouseEvent.middleMouseUp</codeph>, <codeph class="+ topic/ph pr-d/codeph ">MouseEvent.rightClick</codeph>, <codeph class="+ topic/ph pr-d/codeph ">MouseEvent.rightMouseDown</codeph>, <codeph class="+ topic/ph pr-d/codeph ">MouseEvent.rightMouseUp</codeph> et <codeph class="+ topic/ph pr-d/codeph ">MouseEvent.doubleClick</codeph>. Ce paramètre est destiné à Adobe AIR uniquement ; ne le définissez pas pour le contenu de Flash Player.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">controlKey</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">(AIR uniquement) Indique si la touche Contrôle ou Ctrl est activée (Mac uniquement). Ce paramètre est utilisé uniquement pour les événements <codeph class="+ topic/ph pr-d/codeph ">MouseEvent.click</codeph>, <codeph class="+ topic/ph pr-d/codeph ">MouseEvent.mouseDown</codeph>, <codeph class="+ topic/ph pr-d/codeph ">MouseEvent.mouseUp</codeph>, <codeph class="+ topic/ph pr-d/codeph ">MouseEvent.middleClick</codeph>, <codeph class="+ topic/ph pr-d/codeph ">MouseEvent.middleMouseDown</codeph>, <codeph class="+ topic/ph pr-d/codeph ">MouseEvent.middleMouseUp</codeph>, <codeph class="+ topic/ph pr-d/codeph ">MouseEvent.rightClick</codeph>, <codeph class="+ topic/ph pr-d/codeph ">MouseEvent.rightMouseDown</codeph>, <codeph class="+ topic/ph pr-d/codeph ">MouseEvent.rightMouseUp</codeph> et <codeph class="+ topic/ph pr-d/codeph ">MouseEvent.doubleClick</codeph>. Ce paramètre est destiné à Adobe AIR uniquement ; ne le définissez pas pour le contenu de Flash Player.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">clickCount</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">(AIR uniquement) Indique si l’événement mouse fait partie d’une séquence multi-clic. Ce paramètre équivaut à zéro pour tous les événements mouse autres que <codeph class="+ topic/ph pr-d/codeph ">MouseEvent.mouseDown</codeph>, <codeph class="+ topic/ph pr-d/codeph ">MouseEvent.mouseUp</codeph>, <codeph class="+ topic/ph pr-d/codeph ">MouseEvent.middleMouseDown</codeph>, <codeph class="+ topic/ph pr-d/codeph ">MouseEvent.middleMouseUp</codeph>, <codeph class="+ topic/ph pr-d/codeph ">MouseEvent.rightMouseDown</codeph> et <codeph class="+ topic/ph pr-d/codeph ">MouseEvent.rightMouseUp</codeph>. L’écoute de clics simples, doubles ou de séquences multi-clic est possible avec le paramètre <codeph class="+ topic/ph pr-d/codeph ">clickCount</codeph>. Ce paramètre est destiné à Adobe AIR uniquement ; ne le définissez pas pour le contenu de Flash Player.
     
     </apiDesc></apiParam><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Constructeur associé aux objets MouseEvent.
      
      </apiTipText></apiTipTexts></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Crée un objet Event contenant des informations sur les événements de souris. Les objets Event sont transmis en tant que paramètres aux écouteurs d’événements.
     
	</apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="flash.events:MouseEvent:clone" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">clone</apiName><shortdesc class="- topic/shortdesc ">
	Crée une copie de l’objet MouseEvent et définit la valeur de chaque propriété de sorte qu’elle corresponde à la valeur d’origine.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Nouvel objet MouseEvent dont les propriétés ont la même valeur que celles de l’objet d’origine.
	 
	 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.events:Event</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Crée une copie de l’objet MouseEvent et définit la valeur de chaque propriété de sorte qu’elle corresponde à la valeur d’origine.
	
	</apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.events:MouseEvent:toString" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">toString</apiName><shortdesc class="- topic/shortdesc ">
	Renvoie une chaîne répertoriant toutes les propriétés de l’objet MouseEvent.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Chaîne répertoriant toutes les propriétés de l’objet MouseEvent.
	 
	 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Renvoie une chaîne répertoriant toutes les propriétés de l’objet MouseEvent. La chaîne est écrite au format suivant :
	<p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">[MouseEvent type=<i class="+ topic/ph hi-d/i ">value</i> bubbles=<i class="+ topic/ph hi-d/i ">valeur</i> cancelable=<i class="+ topic/ph hi-d/i ">valeur</i> ... delta=<i class="+ topic/ph hi-d/i ">valeur</i>]</codeph></p>
	
	</apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.events:MouseEvent:updateAfterEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">updateAfterEvent</apiName><shortdesc class="- topic/shortdesc ">
	Demande à Flash Player ou à Adobe AIR d’effectuer un rendu à la fin du traitement de cet événement, si la liste d’affichage a été modifiée.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Demande à Flash Player ou à Adobe AIR d’effectuer un rendu à la fin du traitement de cet événement, si la liste d’affichage a été modifiée.
	
	</apiDesc></apiOperationDetail></apiOperation><apiValue id="flash.events:MouseEvent:CLICK" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">CLICK</apiName><shortdesc class="- topic/shortdesc ">
	Définit la valeur de la propriété type d’un objet d’événement click.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">click</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet d’événement <codeph class="+ topic/ph pr-d/codeph ">click</codeph>. 
	
	<p class="- topic/p ">Les propriétés de cet événement sont les suivantes :</p>
	
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">altKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> si la touche Alt est activée (Windows).</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">buttonDown</codeph></entry><entry class="- topic/entry ">Pour les événements de clic, cette valeur est toujours définie sur <codeph class="+ topic/ph pr-d/codeph ">false</codeph>.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">commandKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> sur le Mac si la touche Commande est activée ; <codeph class="+ topic/ph pr-d/codeph ">false</codeph> si elle est désactivée. Toujours <codeph class="+ topic/ph pr-d/codeph ">false</codeph> sur Windows.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">controlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> si la touche Ctrl ou Contrôle est activée ; <codeph class="+ topic/ph pr-d/codeph ">false</codeph> si elle est désactivée.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">ctrlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> sous Windows ou Linux si la touche Ctrl est enfoncée. <codeph class="+ topic/ph pr-d/codeph ">true</codeph> sur Mac si la touche Ctrl ou la touche Commande est activée. Sinon, la valeur <codeph class="+ topic/ph pr-d/codeph ">false</codeph> est renvoyée.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">L’objet qui traite activement l’objet Event avec un écouteur d’événements.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">localX</codeph></entry><entry class="- topic/entry ">Coordonnée horizontale à laquelle l’événement s’est produit par rapport au sprite conteneur.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">localY</codeph></entry><entry class="- topic/entry ">Coordonnée verticale à laquelle l’événement s’est produit par rapport au sprite conteneur.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">shiftKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> si la touche Maj est activée ; <codeph class="+ topic/ph pr-d/codeph ">false</codeph> si elle ne l’est pas.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">stageX</codeph></entry><entry class="- topic/entry ">Coordonnée horizontale à laquelle l’événement s’est produit, par rapport aux coordonnées globales de la scène.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">stageY</codeph></entry><entry class="- topic/entry ">Coordonnée verticale à laquelle l’événement s’est produit, par rapport aux coordonnées globales de la scène.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Occurrence d’InteractiveObject sous le périphérique de pointage. La propriété <codeph class="+ topic/ph pr-d/codeph ">target</codeph> ne correspond pas toujours à l’objet de la liste d’affichage qui est associé à l’écouteur d’événement. Utilisez la propriété <codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph> pour accéder à l’objet de la liste d’affichage qui traite actuellement l’événement.</entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:click" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.click</linktext></link></related-links></apiValue><apiValue id="flash.events:MouseEvent:CONTEXT_MENU" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">CONTEXT_MENU</apiName><shortdesc class="- topic/shortdesc ">
		La constante MouseEvent.CONTEXT_MENU définit la valeur de la propriété type d’un objet d’événement contextMenu.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">contextMenu</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		La constante <codeph class="+ topic/ph pr-d/codeph ">MouseEvent.CONTEXT_MENU</codeph> définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet d’événement <codeph class="+ topic/ph pr-d/codeph ">contextMenu</codeph>. 
		
		<p class="- topic/p ">Les propriétés de cet événement sont les suivantes :</p>
		<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">altKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> si la touche Alt est activée (Windows).</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">buttonDown</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> si le bouton droit de la souris est enfoncé ; <codeph class="+ topic/ph pr-d/codeph ">false</codeph> dans tous les autres cas.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; le comportement par défaut ne peut pas être annulé.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">commandKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> sur le Mac si la touche Commande est activée ; <codeph class="+ topic/ph pr-d/codeph ">false</codeph> si elle est désactivée. Toujours <codeph class="+ topic/ph pr-d/codeph ">false</codeph> sur Windows.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">controlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> si la touche Ctrl ou Contrôle est activée ; <codeph class="+ topic/ph pr-d/codeph ">false</codeph> si elle est désactivée.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">ctrlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> sous Windows ou Linux si la touche Ctrl est enfoncée. <codeph class="+ topic/ph pr-d/codeph ">true</codeph> sur Mac si la touche Ctrl ou la touche Commande est activée. Sinon, la valeur <codeph class="+ topic/ph pr-d/codeph ">false</codeph> est renvoyée.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">L’objet qui traite activement l’objet Event avec un écouteur d’événements.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">localX</codeph></entry><entry class="- topic/entry ">Coordonnée horizontale à laquelle l’événement s’est produit par rapport au sprite conteneur.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">localY</codeph></entry><entry class="- topic/entry ">Coordonnée verticale à laquelle l’événement s’est produit par rapport au sprite conteneur.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">shiftKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> si la touche Maj est activée ; <codeph class="+ topic/ph pr-d/codeph ">false</codeph> si elle ne l’est pas.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">clickCount</codeph></entry><entry class="- topic/entry ">Décompte du nombre de clics souris pour indiquer si l’événement fait partie d’une séquence multi-clic.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">stageX</codeph></entry><entry class="- topic/entry ">Coordonnée horizontale à laquelle l’événement s’est produit, par rapport aux coordonnées globales de la scène.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">stageY</codeph></entry><entry class="- topic/entry ">Coordonnée verticale à laquelle l’événement s’est produit, par rapport aux coordonnées globales de la scène.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Occurrence d’InteractiveObject sous le périphérique de pointage. La propriété <codeph class="+ topic/ph pr-d/codeph ">target</codeph> ne correspond pas toujours à l’objet de la liste d’affichage qui est associé à l’écouteur d’événement. Utilisez la propriété <codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph> pour accéder à l’objet de la liste d’affichage qui traite actuellement l’événement.</entry></row></tbody></tgroup></adobetable>
		
		</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:MouseEvent:DOUBLE_CLICK" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">DOUBLE_CLICK</apiName><shortdesc class="- topic/shortdesc ">
	Définit la valeur de la propriété type d’un objet d’événement doubleClick.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">doubleClick</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet d’événement <codeph class="+ topic/ph pr-d/codeph ">doubleClick. </codeph> La propriété <codeph class="+ topic/ph pr-d/codeph ">doubleClickEnabled</codeph> doit être <codeph class="+ topic/ph pr-d/codeph ">true</codeph> pour qu’un objet puisse générer l’événement <codeph class="+ topic/ph pr-d/codeph ">doubleClick</codeph>.
	
	<p class="- topic/p ">Les propriétés de cet événement sont les suivantes :</p>
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">altKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> si la touche Alt est activée (Windows).</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">buttonDown</codeph></entry><entry class="- topic/entry ">Pour les événements de double-clic, cette valeur est toujours définie sur <codeph class="+ topic/ph pr-d/codeph ">false</codeph>.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">commandKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> sur le Mac si la touche Commande est activée ; <codeph class="+ topic/ph pr-d/codeph ">false</codeph> si elle est désactivée. Toujours <codeph class="+ topic/ph pr-d/codeph ">false</codeph> sur Windows.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">controlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> si la touche Ctrl ou Contrôle est activée ; <codeph class="+ topic/ph pr-d/codeph ">false</codeph> si elle est désactivée.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">ctrlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> sous Windows ou Linux si la touche Ctrl est enfoncée. <codeph class="+ topic/ph pr-d/codeph ">true</codeph> sur Mac si la touche Ctrl ou la touche Commande est activée. Sinon, la valeur <codeph class="+ topic/ph pr-d/codeph ">false</codeph> est renvoyée.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">L’objet qui traite activement l’objet Event avec un écouteur d’événements.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">localX</codeph></entry><entry class="- topic/entry ">Coordonnée horizontale à laquelle l’événement s’est produit par rapport au sprite conteneur.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">localY</codeph></entry><entry class="- topic/entry ">Coordonnée verticale à laquelle l’événement s’est produit par rapport au sprite conteneur.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">shiftKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> si la touche Maj est activée ; <codeph class="+ topic/ph pr-d/codeph ">false</codeph> si elle ne l’est pas.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">stageX</codeph></entry><entry class="- topic/entry ">Coordonnée horizontale à laquelle l’événement s’est produit, par rapport aux coordonnées globales de la scène.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">stageY</codeph></entry><entry class="- topic/entry ">Coordonnée verticale à laquelle l’événement s’est produit, par rapport aux coordonnées globales de la scène.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Occurrence d’InteractiveObject sous le périphérique de pointage. La propriété <codeph class="+ topic/ph pr-d/codeph ">target</codeph> ne correspond pas toujours à l’objet de la liste d’affichage qui est associé à l’écouteur d’événement. Utilisez la propriété <codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph> pour accéder à l’objet de la liste d’affichage qui traite actuellement l’événement.</entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:doubleClick" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.doubleClick</linktext></link></related-links></apiValue><apiValue id="flash.events:MouseEvent:MIDDLE_CLICK" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">MIDDLE_CLICK</apiName><shortdesc class="- topic/shortdesc ">
		Définit la valeur de la propriété type d’un objet d’événement middleClick.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">middleClick</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		Définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet d’événement <codeph class="+ topic/ph pr-d/codeph ">middleClick</codeph>. 
		
		<p class="- topic/p ">Les propriétés de cet événement sont les suivantes :</p>
		
		<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">altKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> si la touche Alt est activée (Windows).</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">buttonDown</codeph></entry><entry class="- topic/entry ">Pour les événements de clic central, cette valeur est toujours définie sur <codeph class="+ topic/ph pr-d/codeph ">false</codeph>.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">commandKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> sur le Mac si la touche Commande est activée ; <codeph class="+ topic/ph pr-d/codeph ">false</codeph> si elle est désactivée. Toujours <codeph class="+ topic/ph pr-d/codeph ">false</codeph> sur Windows.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">controlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> si la touche Ctrl ou Contrôle est activée ; <codeph class="+ topic/ph pr-d/codeph ">false</codeph> si elle est désactivée.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">ctrlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> sous Windows ou Linux si la touche Ctrl est enfoncée. <codeph class="+ topic/ph pr-d/codeph ">true</codeph> sur Mac si la touche Ctrl ou la touche Commande est activée. Sinon, la valeur <codeph class="+ topic/ph pr-d/codeph ">false</codeph> est renvoyée.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">L’objet qui traite activement l’objet Event avec un écouteur d’événements.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">localX</codeph></entry><entry class="- topic/entry ">Coordonnée horizontale à laquelle l’événement s’est produit par rapport au sprite conteneur.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">localY</codeph></entry><entry class="- topic/entry ">Coordonnée verticale à laquelle l’événement s’est produit par rapport au sprite conteneur.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">shiftKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> si la touche Maj est activée ; <codeph class="+ topic/ph pr-d/codeph ">false</codeph> si elle ne l’est pas.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">stageX</codeph></entry><entry class="- topic/entry ">Coordonnée horizontale à laquelle l’événement s’est produit, par rapport aux coordonnées globales de la scène.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">stageY</codeph></entry><entry class="- topic/entry ">Coordonnée verticale à laquelle l’événement s’est produit, par rapport aux coordonnées globales de la scène.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Occurrence d’InteractiveObject sous le périphérique de pointage. La propriété <codeph class="+ topic/ph pr-d/codeph ">target</codeph> ne correspond pas toujours à l’objet de la liste d’affichage qui est associé à l’écouteur d’événement. Utilisez la propriété <codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph> pour accéder à l’objet de la liste d’affichage qui traite actuellement l’événement.</entry></row></tbody></tgroup></adobetable>
		
		</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:middleClick" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.middleClick</linktext></link></related-links></apiValue><apiValue id="flash.events:MouseEvent:MIDDLE_MOUSE_DOWN" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">MIDDLE_MOUSE_DOWN</apiName><shortdesc class="- topic/shortdesc ">
		Définit la valeur de la propriété type d’un objet d’événement middleMouseDown.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">middleMouseDown</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		Définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet d’événement <codeph class="+ topic/ph pr-d/codeph ">middleMouseDown</codeph>. 
		<p class="- topic/p ">Les propriétés de cet événement sont les suivantes :</p>
		<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">altKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> si la touche Alt est activée (Windows).</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">buttonDown</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> si le bouton central de la souris est enfoncé ; <codeph class="+ topic/ph pr-d/codeph ">false</codeph> dans tous les autres cas.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; le comportement par défaut ne peut pas être annulé.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">commandKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> sur le Mac si la touche Commande est activée ; <codeph class="+ topic/ph pr-d/codeph ">false</codeph> si elle est désactivée. Toujours <codeph class="+ topic/ph pr-d/codeph ">false</codeph> sur Windows.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">controlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> si la touche Ctrl ou Contrôle est activée ; <codeph class="+ topic/ph pr-d/codeph ">false</codeph> si elle est désactivée.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">ctrlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> sous Windows ou Linux si la touche Ctrl est enfoncée. <codeph class="+ topic/ph pr-d/codeph ">true</codeph> sur Mac si la touche Ctrl ou la touche Commande est activée. Sinon, la valeur <codeph class="+ topic/ph pr-d/codeph ">false</codeph> est renvoyée.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">L’objet qui traite activement l’objet Event avec un écouteur d’événements.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">localX</codeph></entry><entry class="- topic/entry ">Coordonnée horizontale à laquelle l’événement s’est produit par rapport au sprite conteneur.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">localY</codeph></entry><entry class="- topic/entry ">Coordonnée verticale à laquelle l’événement s’est produit par rapport au sprite conteneur.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">shiftKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> si la touche Maj est activée ; <codeph class="+ topic/ph pr-d/codeph ">false</codeph> si elle ne l’est pas.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">clickCount</codeph></entry><entry class="- topic/entry ">Décompte du nombre de clics souris pour indiquer si l’événement fait partie d’une séquence multi-clic.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">stageX</codeph></entry><entry class="- topic/entry ">Coordonnée horizontale à laquelle l’événement s’est produit, par rapport aux coordonnées globales de la scène.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">stageY</codeph></entry><entry class="- topic/entry ">Coordonnée verticale à laquelle l’événement s’est produit, par rapport aux coordonnées globales de la scène.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Occurrence d’InteractiveObject sous le périphérique de pointage. La propriété <codeph class="+ topic/ph pr-d/codeph ">target</codeph> ne correspond pas toujours à l’objet de la liste d’affichage qui est associé à l’écouteur d’événement. Utilisez la propriété <codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph> pour accéder à l’objet de la liste d’affichage qui traite actuellement l’événement.</entry></row></tbody></tgroup></adobetable>
		
		</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:middleMouseDown" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.middleMouseDown</linktext></link></related-links></apiValue><apiValue id="flash.events:MouseEvent:MIDDLE_MOUSE_UP" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">MIDDLE_MOUSE_UP</apiName><shortdesc class="- topic/shortdesc ">
		Définit la valeur de la propriété type d’un objet d’événement middleMouseUp.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">middleMouseUp</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		Définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet d’événement <codeph class="+ topic/ph pr-d/codeph ">middleMouseUp</codeph>. 
		
		<p class="- topic/p ">Les propriétés de cet événement sont les suivantes :</p>
		<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">altKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> si la touche Alt est activée (Windows).</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">buttonDown</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> si le bouton central de la souris est enfoncé ; <codeph class="+ topic/ph pr-d/codeph ">false</codeph> dans tous les autres cas.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; le comportement par défaut ne peut pas être annulé.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">commandKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> sur le Mac si la touche Commande est activée ; <codeph class="+ topic/ph pr-d/codeph ">false</codeph> si elle est désactivée. Toujours <codeph class="+ topic/ph pr-d/codeph ">false</codeph> sur Windows.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">controlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> si la touche Ctrl ou Contrôle est activée ; <codeph class="+ topic/ph pr-d/codeph ">false</codeph> si elle est désactivée.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">ctrlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> sous Windows ou Linux si la touche Ctrl est enfoncée. <codeph class="+ topic/ph pr-d/codeph ">true</codeph> sur Mac si la touche Ctrl ou la touche Commande est activée. Sinon, la valeur <codeph class="+ topic/ph pr-d/codeph ">false</codeph> est renvoyée.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">L’objet qui traite activement l’objet Event avec un écouteur d’événements.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">localX</codeph></entry><entry class="- topic/entry ">Coordonnée horizontale à laquelle l’événement s’est produit par rapport au sprite conteneur.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">localY</codeph></entry><entry class="- topic/entry ">Coordonnée verticale à laquelle l’événement s’est produit par rapport au sprite conteneur.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">shiftKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> si la touche Maj est activée ; <codeph class="+ topic/ph pr-d/codeph ">false</codeph> si elle ne l’est pas.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">clickCount</codeph></entry><entry class="- topic/entry ">Décompte du nombre de clics souris pour indiquer si l’événement fait partie d’une séquence multi-clic.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">stageX</codeph></entry><entry class="- topic/entry ">Coordonnée horizontale à laquelle l’événement s’est produit, par rapport aux coordonnées globales de la scène.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">stageY</codeph></entry><entry class="- topic/entry ">Coordonnée verticale à laquelle l’événement s’est produit, par rapport aux coordonnées globales de la scène.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Occurrence d’InteractiveObject sous le périphérique de pointage. La propriété <codeph class="+ topic/ph pr-d/codeph ">target</codeph> ne correspond pas toujours à l’objet de la liste d’affichage qui est associé à l’écouteur d’événement. Utilisez la propriété <codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph> pour accéder à l’objet de la liste d’affichage qui traite actuellement l’événement.</entry></row></tbody></tgroup></adobetable>
		
		</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:middleMouseUp" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.middleMouseUp</linktext></link></related-links></apiValue><apiValue id="flash.events:MouseEvent:MOUSE_DOWN" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">MOUSE_DOWN</apiName><shortdesc class="- topic/shortdesc ">
	Définit la valeur de la propriété type d’un objet d’événement mouseDown.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">mouseDown</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet d’événement <codeph class="+ topic/ph pr-d/codeph ">mouseDown</codeph>. 
	<p class="- topic/p ">Les propriétés de cet événement sont les suivantes :</p>
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">altKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> si la touche Alt est activée (Windows).</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">buttonDown</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> si le bouton principal de la souris est enfoncé ; <codeph class="+ topic/ph pr-d/codeph ">false</codeph> dans tous les autres cas.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; le comportement par défaut ne peut pas être annulé.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">commandKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> sur le Mac si la touche Commande est activée ; <codeph class="+ topic/ph pr-d/codeph ">false</codeph> si elle est désactivée. Toujours <codeph class="+ topic/ph pr-d/codeph ">false</codeph> sur Windows.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">controlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> si la touche Ctrl ou Contrôle est activée ; <codeph class="+ topic/ph pr-d/codeph ">false</codeph> si elle est désactivée.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">ctrlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> sous Windows et Linux si la touche Ctrl est activée. <codeph class="+ topic/ph pr-d/codeph ">true</codeph> sur Mac si la touche Ctrl ou la touche Commande est activée. Sinon, la valeur <codeph class="+ topic/ph pr-d/codeph ">false</codeph> est renvoyée.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">L’objet qui traite activement l’objet Event avec un écouteur d’événements.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">localX</codeph></entry><entry class="- topic/entry ">Coordonnée horizontale à laquelle l’événement s’est produit par rapport au sprite conteneur.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">localY</codeph></entry><entry class="- topic/entry ">Coordonnée verticale à laquelle l’événement s’est produit par rapport au sprite conteneur.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">shiftKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> si la touche Maj est activée ; <codeph class="+ topic/ph pr-d/codeph ">false</codeph> si elle ne l’est pas.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">clickCount</codeph></entry><entry class="- topic/entry ">Décompte du nombre de clics souris pour indiquer si l’événement fait partie d’une séquence multi-clic.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">stageX</codeph></entry><entry class="- topic/entry ">Coordonnée horizontale à laquelle l’événement s’est produit, par rapport aux coordonnées globales de la scène.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">stageY</codeph></entry><entry class="- topic/entry ">Coordonnée verticale à laquelle l’événement s’est produit, par rapport aux coordonnées globales de la scène.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Occurrence d’InteractiveObject sous le périphérique de pointage. La propriété <codeph class="+ topic/ph pr-d/codeph ">target</codeph> ne correspond pas toujours à l’objet de la liste d’affichage qui est associé à l’écouteur d’événement. Utilisez la propriété <codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph> pour accéder à l’objet de la liste d’affichage qui traite actuellement l’événement.</entry></row></tbody></tgroup></adobetable>
	
	</apiDesc><example class="- topic/example ">Consultez l’exemple de la constante <xref href="MouseEvent.html#MOUSE_MOVE" class="- topic/xref ">MOUSE_MOVE</xref> pour une illustration de l’utilisation de cette constante. 
	 
	 </example></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:mouseDown" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.mouseDown</linktext></link></related-links></apiValue><apiValue id="flash.events:MouseEvent:MOUSE_MOVE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">MOUSE_MOVE</apiName><shortdesc class="- topic/shortdesc ">
	Définit la valeur de la propriété type d’un objet d’événement mouseMove.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">mouseMove</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet d’événement <codeph class="+ topic/ph pr-d/codeph ">mouseMove</codeph>. 
	
	<p class="- topic/p ">Les propriétés de cet événement sont les suivantes :</p>
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">altKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> si la touche Alt est activée (Windows).</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">buttonDown</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> si le bouton principal de la souris est enfoncé ; <codeph class="+ topic/ph pr-d/codeph ">false</codeph> dans tous les autres cas.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; le comportement par défaut ne peut pas être annulé.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">commandKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> sur le Mac si la touche Commande est activée ; <codeph class="+ topic/ph pr-d/codeph ">false</codeph> si elle est désactivée. Toujours <codeph class="+ topic/ph pr-d/codeph ">false</codeph> sur Windows.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">controlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> si la touche Ctrl ou Contrôle est activée ; <codeph class="+ topic/ph pr-d/codeph ">false</codeph> si elle est désactivée.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">ctrlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> sous Windows ou Linux si la touche Ctrl est enfoncée. <codeph class="+ topic/ph pr-d/codeph ">true</codeph> sur Mac si la touche Ctrl ou la touche Commande est activée. Sinon, la valeur <codeph class="+ topic/ph pr-d/codeph ">false</codeph> est renvoyée.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">L’objet qui traite activement l’objet Event avec un écouteur d’événements.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">localX</codeph></entry><entry class="- topic/entry ">Coordonnée horizontale à laquelle l’événement s’est produit par rapport au sprite conteneur.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">localY</codeph></entry><entry class="- topic/entry ">Coordonnée verticale à laquelle l’événement s’est produit par rapport au sprite conteneur.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">shiftKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> si la touche Maj est activée ; <codeph class="+ topic/ph pr-d/codeph ">false</codeph> si elle ne l’est pas.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">stageX</codeph></entry><entry class="- topic/entry ">Coordonnée horizontale à laquelle l’événement s’est produit, par rapport aux coordonnées globales de la scène.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">stageY</codeph></entry><entry class="- topic/entry ">Coordonnée verticale à laquelle l’événement s’est produit, par rapport aux coordonnées globales de la scène.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Occurrence d’InteractiveObject sous le périphérique de pointage. La propriété <codeph class="+ topic/ph pr-d/codeph ">target</codeph> ne correspond pas toujours à l’objet de la liste d’affichage qui est associé à l’écouteur d’événement. Utilisez la propriété <codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph> pour accéder à l’objet de la liste d’affichage qui traite actuellement l’événement.</entry></row></tbody></tgroup></adobetable>
	
	</apiDesc><example conref="examples\MouseEvent_MOUSE_MOVEExample.as" class="- topic/example "> L’exemple suivant est un programme de dessin simple. L’utilisateur peut dessiner sur l’objet Sprite principal ou sur un plus petit objet Sprite rectangulaire. 
   
 <p class="- topic/p ">Dans le constructeur, un objet Sprite <codeph class="+ topic/ph pr-d/codeph ">innerRect</codeph> de rectangle est créé et le style de ligne est défini sur vert. Le style de ligne pour dessiner sur le conteneur Sprite <codeph class="+ topic/ph pr-d/codeph ">MouseEvent_MOUSE_MOVEExample</codeph> est défini sur rouge. Des écouteurs d’événement séparés pour les événements <codeph class="+ topic/ph pr-d/codeph ">MouseEvent.MOUSE_UP</codeph> et <codeph class="+ topic/ph pr-d/codeph ">MouseEvent.MOUSE_DOWN</codeph> sont ajoutés pour l’objet Sprite principal de l’application et l’objet Sprite <codeph class="+ topic/ph pr-d/codeph ">innerRect</codeph>. Dans les deux cas, les méthodes de l’écouteur d’événement mouse down déplacent la position de dessin actuelle sur l’emplacement du pointeur de la souris et ajoutent un écouteur pour l’événement <codeph class="+ topic/ph pr-d/codeph ">MouseEvent.MOUSE_MOVE</codeph>. Lorsque le pointeur de la souris est déplacé, les méthodes de l’écouteur d’événements invoquées suivent le pointeur et tracent une ligne à l’aide de la méthode <codeph class="+ topic/ph pr-d/codeph ">graphics.LineTo()</codeph> (<b class="+ topic/ph hi-d/b ">remarque :</b> l’objet Sprite <codeph class="+ topic/ph pr-d/codeph ">innerRect</codeph> masque les lignes rouges de l’objet Sprite principal tracées derrière le rectangle). Lorsque l’événement <codeph class="+ topic/ph pr-d/codeph ">MouseEvent.MOUSE_UP</codeph> a lieu, l’écouteur pour l’événement <codeph class="+ topic/ph pr-d/codeph ">MOUSE_MOVE</codeph> est supprimé et le dessin est arrêté.</p>     
 
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
package {
    import flash.display.Sprite;
    import flash.display.Graphics;
    import flash.events.MouseEvent;

    public class MouseEvent_MOUSE_MOVEExample extends Sprite {
        private var innerRect:Sprite = new Sprite();
        
        public function MouseEvent_MOUSE_MOVEExample() {

            graphics.lineStyle(3, 0xFF0000, 1);
            stage.addEventListener(MouseEvent.MOUSE_DOWN, mouseDownHandler);
            stage.addEventListener(MouseEvent.MOUSE_UP, mouseUpHandler);

            innerRect.graphics.lineStyle(1, 0x00FF00, 1);
            innerRect.graphics.beginFill(0xFFFFFF);
            innerRect.graphics.drawRect(10, 10, 200, 200);
            innerRect.graphics.endFill();
            innerRect.addEventListener(MouseEvent.MOUSE_DOWN, innerRectMouseDownHandler);
            innerRect.addEventListener(MouseEvent.MOUSE_UP, innerRectMouseUpHandler);
            addChild(innerRect);
        }

        private function mouseDownHandler(event:MouseEvent):void {
            graphics.moveTo(event.stageX, event.stageY);
            stage.addEventListener(MouseEvent.MOUSE_MOVE, mouseMoveHandler);
        }
    
        private function mouseMoveHandler(event:MouseEvent):void {
            graphics.lineTo(event.stageX, event.stageY);
        }    
    
        private function mouseUpHandler(event:MouseEvent):void {
            stage.removeEventListener(MouseEvent.MOUSE_MOVE, mouseMoveHandler);
        }

        private function innerRectMouseDownHandler(event:MouseEvent):void {
            innerRect.graphics.moveTo(event.localX, event.localY);
            innerRect.addEventListener(MouseEvent.MOUSE_MOVE, innerRectMouseMoveHandler);
        }
    
        private function innerRectMouseMoveHandler(event:MouseEvent):void {
            innerRect.graphics.lineTo(event.localX, event.localY);
        }    
    
        private function innerRectMouseUpHandler(event:MouseEvent):void {
            innerRect.removeEventListener(MouseEvent.MOUSE_MOVE, innerRectMouseMoveHandler);
        }
    }
}
</codeblock></example></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:mouseMove" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.mouseMove</linktext></link></related-links></apiValue><apiValue id="flash.events:MouseEvent:MOUSE_OUT" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">MOUSE_OUT</apiName><shortdesc class="- topic/shortdesc ">
	Définit la valeur de la propriété type d’un objet d’événement mouseOut.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">mouseOut</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet d’événement <codeph class="+ topic/ph pr-d/codeph ">mouseOut</codeph>. 
	
	<p class="- topic/p ">Les propriétés de cet événement sont les suivantes :</p>
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">altKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> si la touche Alt est activée (Windows).</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">buttonDown</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> si le bouton principal de la souris est enfoncé ; <codeph class="+ topic/ph pr-d/codeph ">false</codeph> dans tous les autres cas.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; le comportement par défaut ne peut pas être annulé.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">commandKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> sur le Mac si la touche Commande est activée ; <codeph class="+ topic/ph pr-d/codeph ">false</codeph> si elle est désactivée. Toujours <codeph class="+ topic/ph pr-d/codeph ">false</codeph> sur Windows.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">controlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> si la touche Ctrl ou Contrôle est activée ; <codeph class="+ topic/ph pr-d/codeph ">false</codeph> si elle est désactivée.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">ctrlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> sous Windows ou Linux si la touche Ctrl est enfoncée. <codeph class="+ topic/ph pr-d/codeph ">true</codeph> sur Mac si la touche Ctrl ou la touche Commande est activée. Sinon, la valeur <codeph class="+ topic/ph pr-d/codeph ">false</codeph> est renvoyée.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">L’objet qui traite activement l’objet Event avec un écouteur d’événements.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">relatedObject</codeph></entry><entry class="- topic/entry ">Objet de la liste d’affichage sur lequel pointe actuellement le périphérique de pointage.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">localX</codeph></entry><entry class="- topic/entry ">Coordonnée horizontale à laquelle l’événement s’est produit par rapport au sprite conteneur.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">localY</codeph></entry><entry class="- topic/entry ">Coordonnée verticale à laquelle l’événement s’est produit par rapport au sprite conteneur.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">shiftKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> si la touche Maj est activée ; <codeph class="+ topic/ph pr-d/codeph ">false</codeph> si elle ne l’est pas.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">stageX</codeph></entry><entry class="- topic/entry ">Coordonnée horizontale à laquelle l’événement s’est produit, par rapport aux coordonnées globales de la scène.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">stageY</codeph></entry><entry class="- topic/entry ">Coordonnée verticale à laquelle l’événement s’est produit, par rapport aux coordonnées globales de la scène.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Occurrence d’InteractiveObject sous le périphérique de pointage. La propriété <codeph class="+ topic/ph pr-d/codeph ">target</codeph> ne correspond pas toujours à l’objet de la liste d’affichage qui est associé à l’écouteur d’événement. Utilisez la propriété <codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph> pour accéder à l’objet de la liste d’affichage qui traite actuellement l’événement.</entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:mouseOut" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.mouseOut</linktext></link></related-links></apiValue><apiValue id="flash.events:MouseEvent:MOUSE_OVER" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">MOUSE_OVER</apiName><shortdesc class="- topic/shortdesc ">
	Définit la valeur de la propriété type d’un objet d’événement mouseOver.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">mouseOver</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet d’événement <codeph class="+ topic/ph pr-d/codeph ">mouseOver</codeph>. 
	
	<p class="- topic/p ">Les propriétés de cet événement sont les suivantes :</p>
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">altKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> si la touche Alt est activée (Windows).</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">buttonDown</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> si le bouton principal de la souris est enfoncé ; <codeph class="+ topic/ph pr-d/codeph ">false</codeph> dans tous les autres cas.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; le comportement par défaut ne peut pas être annulé.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">commandKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> sur le Mac si la touche Commande est activée ; <codeph class="+ topic/ph pr-d/codeph ">false</codeph> si elle est désactivée. Toujours <codeph class="+ topic/ph pr-d/codeph ">false</codeph> sur Windows.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">controlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> si la touche Ctrl ou Contrôle est activée ; <codeph class="+ topic/ph pr-d/codeph ">false</codeph> si elle est désactivée.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">ctrlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> sous Windows ou Linux si la touche Ctrl est enfoncée. <codeph class="+ topic/ph pr-d/codeph ">true</codeph> sur Mac si la touche Ctrl ou la touche Commande est activée. Sinon, la valeur <codeph class="+ topic/ph pr-d/codeph ">false</codeph> est renvoyée.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">L’objet qui traite activement l’objet Event avec un écouteur d’événements.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">relatedObject</codeph></entry><entry class="- topic/entry ">Objet de la liste d’affichage sur lequel pointait le périphérique de pointage.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">localX</codeph></entry><entry class="- topic/entry ">Coordonnée horizontale à laquelle l’événement s’est produit par rapport au sprite conteneur.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">localY</codeph></entry><entry class="- topic/entry ">Coordonnée verticale à laquelle l’événement s’est produit par rapport au sprite conteneur.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">shiftKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> si la touche Maj est activée ; <codeph class="+ topic/ph pr-d/codeph ">false</codeph> si elle ne l’est pas.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">stageX</codeph></entry><entry class="- topic/entry ">Coordonnée horizontale à laquelle l’événement s’est produit, par rapport aux coordonnées globales de la scène.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">stageY</codeph></entry><entry class="- topic/entry ">Coordonnée verticale à laquelle l’événement s’est produit, par rapport aux coordonnées globales de la scène.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Occurrence d’InteractiveObject sous le périphérique de pointage. La propriété <codeph class="+ topic/ph pr-d/codeph ">target</codeph> ne correspond pas toujours à l’objet de la liste d’affichage qui est associé à l’écouteur d’événement. Utilisez la propriété <codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph> pour accéder à l’objet de la liste d’affichage qui traite actuellement l’événement.</entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:mouseOver" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.mouseOver</linktext></link></related-links></apiValue><apiValue id="flash.events:MouseEvent:MOUSE_UP" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">MOUSE_UP</apiName><shortdesc class="- topic/shortdesc ">
	Définit la valeur de la propriété type d’un objet d’événement mouseUp.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">mouseUp</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet d’événement <codeph class="+ topic/ph pr-d/codeph ">mouseUp</codeph>. 
	
	<p class="- topic/p ">Les propriétés de cet événement sont les suivantes :</p>
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">altKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> si la touche Alt est activée (Windows).</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">buttonDown</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> si le bouton principal de la souris est enfoncé ; <codeph class="+ topic/ph pr-d/codeph ">false</codeph> dans tous les autres cas.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; le comportement par défaut ne peut pas être annulé.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">commandKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> sur le Mac si la touche Commande est activée ; <codeph class="+ topic/ph pr-d/codeph ">false</codeph> si elle est désactivée. Toujours <codeph class="+ topic/ph pr-d/codeph ">false</codeph> sur Windows.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">controlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> si la touche Ctrl ou Contrôle est activée ; <codeph class="+ topic/ph pr-d/codeph ">false</codeph> si elle est désactivée.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">ctrlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> sous Windows ou Linux si la touche Ctrl est enfoncée. <codeph class="+ topic/ph pr-d/codeph ">true</codeph> sur Mac si la touche Ctrl ou la touche Commande est activée. Sinon, la valeur <codeph class="+ topic/ph pr-d/codeph ">false</codeph> est renvoyée.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">L’objet qui traite activement l’objet Event avec un écouteur d’événements.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">localX</codeph></entry><entry class="- topic/entry ">Coordonnée horizontale à laquelle l’événement s’est produit par rapport au sprite conteneur.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">localY</codeph></entry><entry class="- topic/entry ">Coordonnée verticale à laquelle l’événement s’est produit par rapport au sprite conteneur.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">shiftKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> si la touche Maj est activée ; <codeph class="+ topic/ph pr-d/codeph ">false</codeph> si elle ne l’est pas.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">clickCount</codeph></entry><entry class="- topic/entry ">Décompte du nombre de clics souris pour indiquer si l’événement fait partie d’une séquence multi-clic.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">stageX</codeph></entry><entry class="- topic/entry ">Coordonnée horizontale à laquelle l’événement s’est produit, par rapport aux coordonnées globales de la scène.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">stageY</codeph></entry><entry class="- topic/entry ">Coordonnée verticale à laquelle l’événement s’est produit, par rapport aux coordonnées globales de la scène.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Occurrence d’InteractiveObject sous le périphérique de pointage. La propriété <codeph class="+ topic/ph pr-d/codeph ">target</codeph> ne correspond pas toujours à l’objet de la liste d’affichage qui est associé à l’écouteur d’événement. Utilisez la propriété <codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph> pour accéder à l’objet de la liste d’affichage qui traite actuellement l’événement.</entry></row></tbody></tgroup></adobetable>
	
	</apiDesc><example class="- topic/example ">Consultez l’exemple de la constante <xref href="MouseEvent.html#MOUSE_MOVE" class="- topic/xref ">MOUSE_MOVE</xref> pour une illustration de l’utilisation de cette constante. 
	 
	 </example></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:mouseUp" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.mouseUp</linktext></link></related-links></apiValue><apiValue id="flash.events:MouseEvent:MOUSE_WHEEL" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">MOUSE_WHEEL</apiName><shortdesc class="- topic/shortdesc ">
	Définit la valeur de la propriété type d’un objet d’événement mouseWheel.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">mouseWheel</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet d’événement <codeph class="+ topic/ph pr-d/codeph ">mouseWheel</codeph>. 
	
	<p class="- topic/p ">Les propriétés de cet événement sont les suivantes :</p>
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">altKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> si la touche Alt est activée (Windows).</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">buttonDown</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> si le bouton principal de la souris est enfoncé ; <codeph class="+ topic/ph pr-d/codeph ">false</codeph> dans tous les autres cas.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; le comportement par défaut ne peut pas être annulé.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">commandKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> sur le Mac si la touche Commande est activée ; <codeph class="+ topic/ph pr-d/codeph ">false</codeph> si elle est désactivée. Toujours <codeph class="+ topic/ph pr-d/codeph ">false</codeph> sur Windows.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">controlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> si la touche Ctrl ou Contrôle est activée ; <codeph class="+ topic/ph pr-d/codeph ">false</codeph> si elle est désactivée.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">ctrlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> sous Windows ou Linux si la touche Ctrl est enfoncée. <codeph class="+ topic/ph pr-d/codeph ">true</codeph> sur Mac si la touche Ctrl ou la touche Commande est activée. Sinon, la valeur <codeph class="+ topic/ph pr-d/codeph ">false</codeph> est renvoyée.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">L’objet qui traite activement l’objet Event avec un écouteur d’événements.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">delta</codeph></entry><entry class="- topic/entry ">Nombre de lignes représenté par chaque cran de la molette de la souris.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">localX</codeph></entry><entry class="- topic/entry ">Coordonnée horizontale à laquelle l’événement s’est produit par rapport au sprite conteneur.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">localY</codeph></entry><entry class="- topic/entry ">Coordonnée verticale à laquelle l’événement s’est produit par rapport au sprite conteneur.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">shiftKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> si la touche Maj est activée ; <codeph class="+ topic/ph pr-d/codeph ">false</codeph> si elle ne l’est pas.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">stageX</codeph></entry><entry class="- topic/entry ">Coordonnée horizontale à laquelle l’événement s’est produit, par rapport aux coordonnées globales de la scène.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">stageY</codeph></entry><entry class="- topic/entry ">Coordonnée verticale à laquelle l’événement s’est produit, par rapport aux coordonnées globales de la scène.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Occurrence d’InteractiveObject sous le périphérique de pointage. La propriété <codeph class="+ topic/ph pr-d/codeph ">target</codeph> ne correspond pas toujours à l’objet de la liste d’affichage qui est associé à l’écouteur d’événement. Utilisez la propriété <codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph> pour accéder à l’objet de la liste d’affichage qui traite actuellement l’événement.</entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:mouseWheel" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.mouseWheel</linktext></link></related-links></apiValue><apiValue id="flash.events:MouseEvent:RIGHT_CLICK" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">RIGHT_CLICK</apiName><shortdesc class="- topic/shortdesc ">
		Définit la valeur de la propriété type d’un objet d’événement rightClick.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">rightClick</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		Définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet d’événement <codeph class="+ topic/ph pr-d/codeph ">rightClick</codeph>. 
		
		<p class="- topic/p ">Les propriétés de cet événement sont les suivantes :</p>
		
		<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">altKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> si la touche Alt est activée (Windows).</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">buttonDown</codeph></entry><entry class="- topic/entry ">Pour les événements de clic droit, cette valeur est toujours définie sur <codeph class="+ topic/ph pr-d/codeph ">false</codeph>.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">commandKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> sur le Mac si la touche Commande est activée ; <codeph class="+ topic/ph pr-d/codeph ">false</codeph> si elle est désactivée. Toujours <codeph class="+ topic/ph pr-d/codeph ">false</codeph> sur Windows.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">controlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> si la touche Ctrl ou Contrôle est activée ; <codeph class="+ topic/ph pr-d/codeph ">false</codeph> si elle est désactivée.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">ctrlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> sous Windows ou Linux si la touche Ctrl est enfoncée. <codeph class="+ topic/ph pr-d/codeph ">true</codeph> sur Mac si la touche Ctrl ou la touche Commande est activée. Sinon, la valeur <codeph class="+ topic/ph pr-d/codeph ">false</codeph> est renvoyée.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">L’objet qui traite activement l’objet Event avec un écouteur d’événements.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">localX</codeph></entry><entry class="- topic/entry ">Coordonnée horizontale à laquelle l’événement s’est produit par rapport au sprite conteneur.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">localY</codeph></entry><entry class="- topic/entry ">Coordonnée verticale à laquelle l’événement s’est produit par rapport au sprite conteneur.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">shiftKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> si la touche Maj est activée ; <codeph class="+ topic/ph pr-d/codeph ">false</codeph> si elle ne l’est pas.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">stageX</codeph></entry><entry class="- topic/entry ">Coordonnée horizontale à laquelle l’événement s’est produit, par rapport aux coordonnées globales de la scène.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">stageY</codeph></entry><entry class="- topic/entry ">Coordonnée verticale à laquelle l’événement s’est produit, par rapport aux coordonnées globales de la scène.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Occurrence d’InteractiveObject sous le périphérique de pointage. La propriété <codeph class="+ topic/ph pr-d/codeph ">target</codeph> ne correspond pas toujours à l’objet de la liste d’affichage qui est associé à l’écouteur d’événement. Utilisez la propriété <codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph> pour accéder à l’objet de la liste d’affichage qui traite actuellement l’événement.</entry></row></tbody></tgroup></adobetable>
		
		</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:rightClick" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.rightClick</linktext></link></related-links></apiValue><apiValue id="flash.events:MouseEvent:RIGHT_MOUSE_DOWN" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">RIGHT_MOUSE_DOWN</apiName><shortdesc class="- topic/shortdesc ">
		Définit la valeur de la propriété type d’un objet d’événement rightMouseDown.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">rightMouseDown</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		Définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet d’événement <codeph class="+ topic/ph pr-d/codeph ">rightMouseDown</codeph>. 
		<p class="- topic/p ">Les propriétés de cet événement sont les suivantes :</p>
		<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">altKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> si la touche Alt est activée (Windows).</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">buttonDown</codeph></entry><entry class="- topic/entry ">Pour les événements de clic droit, cette valeur est toujours définie sur <codeph class="+ topic/ph pr-d/codeph ">true</codeph>.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; le comportement par défaut ne peut pas être annulé.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">commandKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> sur le Mac si la touche Commande est activée ; <codeph class="+ topic/ph pr-d/codeph ">false</codeph> si elle est désactivée. Toujours <codeph class="+ topic/ph pr-d/codeph ">false</codeph> sur Windows.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">controlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> si la touche Ctrl ou Contrôle est activée ; <codeph class="+ topic/ph pr-d/codeph ">false</codeph> si elle est désactivée.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">ctrlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> sous Windows ou Linux si la touche Ctrl est enfoncée. <codeph class="+ topic/ph pr-d/codeph ">true</codeph> sur Mac si la touche Ctrl ou la touche Commande est activée. Sinon, la valeur <codeph class="+ topic/ph pr-d/codeph ">false</codeph> est renvoyée.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">L’objet qui traite activement l’objet Event avec un écouteur d’événements.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">localX</codeph></entry><entry class="- topic/entry ">Coordonnée horizontale à laquelle l’événement s’est produit par rapport au sprite conteneur.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">localY</codeph></entry><entry class="- topic/entry ">Coordonnée verticale à laquelle l’événement s’est produit par rapport au sprite conteneur.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">shiftKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> si la touche Maj est activée ; <codeph class="+ topic/ph pr-d/codeph ">false</codeph> si elle ne l’est pas.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">clickCount</codeph></entry><entry class="- topic/entry ">Décompte du nombre de clics souris pour indiquer si l’événement fait partie d’une séquence multi-clic.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">stageX</codeph></entry><entry class="- topic/entry ">Coordonnée horizontale à laquelle l’événement s’est produit, par rapport aux coordonnées globales de la scène.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">stageY</codeph></entry><entry class="- topic/entry ">Coordonnée verticale à laquelle l’événement s’est produit, par rapport aux coordonnées globales de la scène.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Occurrence d’InteractiveObject sous le périphérique de pointage. La propriété <codeph class="+ topic/ph pr-d/codeph ">target</codeph> ne correspond pas toujours à l’objet de la liste d’affichage qui est associé à l’écouteur d’événement. Utilisez la propriété <codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph> pour accéder à l’objet de la liste d’affichage qui traite actuellement l’événement.</entry></row></tbody></tgroup></adobetable>
		
		</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:rightMouseDown" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.rightMouseDown</linktext></link></related-links></apiValue><apiValue id="flash.events:MouseEvent:RIGHT_MOUSE_UP" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">RIGHT_MOUSE_UP</apiName><shortdesc class="- topic/shortdesc ">
		Définit la valeur de la propriété type d’un objet d’événement rightMouseUp.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">rightMouseUp</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		Définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet d’événement <codeph class="+ topic/ph pr-d/codeph ">rightMouseUp</codeph>. 
		
		<p class="- topic/p ">Les propriétés de cet événement sont les suivantes :</p>
		<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">altKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> si la touche Alt est activée (Windows).</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">buttonDown</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> si le bouton droit de la souris est enfoncé ; <codeph class="+ topic/ph pr-d/codeph ">false</codeph> dans tous les autres cas.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; le comportement par défaut ne peut pas être annulé.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">commandKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> sur le Mac si la touche Commande est activée ; <codeph class="+ topic/ph pr-d/codeph ">false</codeph> si elle est désactivée. Toujours <codeph class="+ topic/ph pr-d/codeph ">false</codeph> sur Windows.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">controlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> si la touche Ctrl ou Contrôle est activée ; <codeph class="+ topic/ph pr-d/codeph ">false</codeph> si elle est désactivée.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">ctrlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> sous Windows ou Linux si la touche Ctrl est enfoncée. <codeph class="+ topic/ph pr-d/codeph ">true</codeph> sur Mac si la touche Ctrl ou la touche Commande est activée. Sinon, la valeur <codeph class="+ topic/ph pr-d/codeph ">false</codeph> est renvoyée.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">L’objet qui traite activement l’objet Event avec un écouteur d’événements.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">localX</codeph></entry><entry class="- topic/entry ">Coordonnée horizontale à laquelle l’événement s’est produit par rapport au sprite conteneur.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">localY</codeph></entry><entry class="- topic/entry ">Coordonnée verticale à laquelle l’événement s’est produit par rapport au sprite conteneur.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">shiftKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> si la touche Maj est activée ; <codeph class="+ topic/ph pr-d/codeph ">false</codeph> si elle ne l’est pas.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">clickCount</codeph></entry><entry class="- topic/entry ">Décompte du nombre de clics souris pour indiquer si l’événement fait partie d’une séquence multi-clic.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">stageX</codeph></entry><entry class="- topic/entry ">Coordonnée horizontale à laquelle l’événement s’est produit, par rapport aux coordonnées globales de la scène.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">stageY</codeph></entry><entry class="- topic/entry ">Coordonnée verticale à laquelle l’événement s’est produit, par rapport aux coordonnées globales de la scène.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Occurrence d’InteractiveObject sous le périphérique de pointage. La propriété <codeph class="+ topic/ph pr-d/codeph ">target</codeph> ne correspond pas toujours à l’objet de la liste d’affichage qui est associé à l’écouteur d’événement. Utilisez la propriété <codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph> pour accéder à l’objet de la liste d’affichage qui traite actuellement l’événement.</entry></row></tbody></tgroup></adobetable>
		
		</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:rightMouseUp" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.rightMouseUp</linktext></link></related-links></apiValue><apiValue id="flash.events:MouseEvent:ROLL_OUT" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">ROLL_OUT</apiName><shortdesc class="- topic/shortdesc ">
	Définit la valeur de la propriété type d’un objet d’événement rollOut.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">rollOut</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet d’événement <codeph class="+ topic/ph pr-d/codeph ">rollOut</codeph>. 
	
	<p class="- topic/p ">Les propriétés de cet événement sont les suivantes :</p>
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">altKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> si la touche Alt est activée (Windows).</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">buttonDown</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> si le bouton principal de la souris est enfoncé ; <codeph class="+ topic/ph pr-d/codeph ">false</codeph> dans tous les autres cas.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">commandKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> sur le Mac si la touche Commande est activée ; <codeph class="+ topic/ph pr-d/codeph ">false</codeph> si elle est désactivée. Toujours <codeph class="+ topic/ph pr-d/codeph ">false</codeph> sur Windows.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">controlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> si la touche Ctrl ou Contrôle est activée ; <codeph class="+ topic/ph pr-d/codeph ">false</codeph> si elle est désactivée.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">ctrlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> sous Windows ou Linux si la touche Ctrl est enfoncée. <codeph class="+ topic/ph pr-d/codeph ">true</codeph> sur Mac si la touche Ctrl ou la touche Commande est activée. Sinon, la valeur <codeph class="+ topic/ph pr-d/codeph ">false</codeph> est renvoyée.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">L’objet qui traite activement l’objet Event avec un écouteur d’événements.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">relatedObject</codeph></entry><entry class="- topic/entry ">Objet de la liste d’affichage sur lequel pointe actuellement le périphérique de pointage.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">localX</codeph></entry><entry class="- topic/entry ">Coordonnée horizontale à laquelle l’événement s’est produit par rapport au sprite conteneur.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">localY</codeph></entry><entry class="- topic/entry ">Coordonnée verticale à laquelle l’événement s’est produit par rapport au sprite conteneur.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">shiftKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> si la touche Maj est activée ; <codeph class="+ topic/ph pr-d/codeph ">false</codeph> si elle ne l’est pas.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">stageX</codeph></entry><entry class="- topic/entry ">Coordonnée horizontale à laquelle l’événement s’est produit, par rapport aux coordonnées globales de la scène.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">stageY</codeph></entry><entry class="- topic/entry ">Coordonnée verticale à laquelle l’événement s’est produit, par rapport aux coordonnées globales de la scène.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Occurrence d’InteractiveObject sous le périphérique de pointage. La propriété <codeph class="+ topic/ph pr-d/codeph ">target</codeph> ne correspond pas toujours à l’objet de la liste d’affichage qui est associé à l’écouteur d’événement. Utilisez la propriété <codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph> pour accéder à l’objet de la liste d’affichage qui traite actuellement l’événement.</entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:rollOut" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.rollOut</linktext></link></related-links></apiValue><apiValue id="flash.events:MouseEvent:ROLL_OVER" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">ROLL_OVER</apiName><shortdesc class="- topic/shortdesc ">
	Définit la valeur de la propriété type d’un objet d’événement rollOver.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">rollOver</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet d’événement <codeph class="+ topic/ph pr-d/codeph ">rollOver</codeph>. 
	
	<p class="- topic/p ">Les propriétés de cet événement sont les suivantes :</p>
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">altKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> si la touche Alt est activée (Windows).</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">buttonDown</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> si le bouton principal de la souris est enfoncé ; <codeph class="+ topic/ph pr-d/codeph ">false</codeph> dans tous les autres cas.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">commandKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> sur le Mac si la touche Commande est activée ; <codeph class="+ topic/ph pr-d/codeph ">false</codeph> si elle est désactivée. Toujours <codeph class="+ topic/ph pr-d/codeph ">false</codeph> sur Windows.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">controlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> si la touche Ctrl ou Contrôle est activée ; <codeph class="+ topic/ph pr-d/codeph ">false</codeph> si elle est désactivée.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">ctrlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> sous Windows ou Linux si la touche Ctrl est enfoncée. <codeph class="+ topic/ph pr-d/codeph ">true</codeph> sur Mac si la touche Ctrl ou la touche Commande est activée. Sinon, la valeur <codeph class="+ topic/ph pr-d/codeph ">false</codeph> est renvoyée.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">L’objet qui traite activement l’objet Event avec un écouteur d’événements.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">relatedObject</codeph></entry><entry class="- topic/entry ">Objet de la liste d’affichage sur lequel pointait le périphérique de pointage.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">localX</codeph></entry><entry class="- topic/entry ">Coordonnée horizontale à laquelle l’événement s’est produit par rapport au sprite conteneur.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">localY</codeph></entry><entry class="- topic/entry ">Coordonnée verticale à laquelle l’événement s’est produit par rapport au sprite conteneur.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">shiftKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> si la touche Maj est activée ; <codeph class="+ topic/ph pr-d/codeph ">false</codeph> si elle ne l’est pas.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">stageX</codeph></entry><entry class="- topic/entry ">Coordonnée horizontale à laquelle l’événement s’est produit, par rapport aux coordonnées globales de la scène.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">stageY</codeph></entry><entry class="- topic/entry ">Coordonnée verticale à laquelle l’événement s’est produit, par rapport aux coordonnées globales de la scène.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Occurrence d’InteractiveObject sous le périphérique de pointage. La propriété <codeph class="+ topic/ph pr-d/codeph ">target</codeph> ne correspond pas toujours à l’objet de la liste d’affichage qui est associé à l’écouteur d’événement. Utilisez la propriété <codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph> pour accéder à l’objet de la liste d’affichage qui traite actuellement l’événement.</entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:rollOver" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.rollOver</linktext></link></related-links></apiValue><apiValue id="flash.events:MouseEvent:altKey:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">altKey</apiName><shortdesc class="- topic/shortdesc ">
    Indique si la touche Alt est active (true) ou non (false).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><internal>Reserved in case Desktop Player wants to capture this key in a future implementation.
	The Option key modifier on Macintosh system must be represented using this key modifier. So far, it seems
    only the Windows version is hooked up.
	 
	 </internal></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Indique si la touche Alt est active (<codeph class="+ topic/ph pr-d/codeph ">true</codeph>) ou non (<codeph class="+ topic/ph pr-d/codeph ">false</codeph>). Prise en charge sur Windows uniquement. Sous les autres systèmes d’exploitation, cette propriété est toujours définie sur <codeph class="+ topic/ph pr-d/codeph ">false</codeph>.
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:MouseEvent:buttonDown:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">buttonDown</apiName><shortdesc class="- topic/shortdesc ">
	Indique si l’utilisateur appuie (true) ou non (false) sur le bouton principal de la souris.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Indique si l’utilisateur appuie (<codeph class="+ topic/ph pr-d/codeph ">true</codeph>) ou non (<codeph class="+ topic/ph pr-d/codeph ">false</codeph>) sur le bouton principal de la souris.
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:MouseEvent:clickCount:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">clickCount</apiName><shortdesc class="- topic/shortdesc ">
		Indique si l’événement mouse down fait partie d’une séquence multi-clic.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">int</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		Indique si l’événement mouse down fait partie d’une séquence multi-clic. Ce paramètre équivaut à zéro pour tous les événements mouse autres que <codeph class="+ topic/ph pr-d/codeph ">MouseEvent.mouseDown</codeph>, <codeph class="+ topic/ph pr-d/codeph ">MouseEvent.mouseUp</codeph>, <codeph class="+ topic/ph pr-d/codeph ">MouseEvent.middleMouseDown</codeph>, <codeph class="+ topic/ph pr-d/codeph ">MouseEvent.middleMouseUp</codeph>, <codeph class="+ topic/ph pr-d/codeph ">MouseEvent.rightMouseDown</codeph> et <codeph class="+ topic/ph pr-d/codeph ">MouseEvent.rightMouseUp</codeph>. L’écoute de clics simples, doubles ou de séquences multi-clic est possible avec le paramètre <codeph class="+ topic/ph pr-d/codeph ">clickCount</codeph>. Par exemple, un <codeph class="+ topic/ph pr-d/codeph ">MouseEvent.mouseDown</codeph> et <codeph class="+ topic/ph pr-d/codeph ">MouseEvent.mouseUp</codeph> initial a un <codeph class="+ topic/ph pr-d/codeph ">clickCount</codeph> de 1, et le second <codeph class="+ topic/ph pr-d/codeph ">MouseEvent.mouseDown</codeph> et <codeph class="+ topic/ph pr-d/codeph ">MouseEvent.mouseUp</codeph> dans une séquence double-clic a un <codeph class="+ topic/ph pr-d/codeph ">clickCount</codeph> de 2. Si la souris se déplace suffisamment ou que la séquence multi clic est interrompue, pour une raison ou pour une autre, le <codeph class="+ topic/ph pr-d/codeph ">MouseEvent.mouseDown</codeph> suivant a un clickCount de 1. L’événement doubleClick continue à se déclencher comme prévu.
		
		</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:MouseEvent:commandKey:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">commandKey</apiName><shortdesc class="- topic/shortdesc ">
		Indique si la touche Commande est activée (Mac uniquement). La valeur de la propriété commandKey a la même valeur que la propriété ctrlKey sur le Mac.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		Indique si la touche Commande est activée (Mac uniquement).  
		
		<p class="- topic/p ">La valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">commandKey</codeph> a la même valeur que la propriété <codeph class="+ topic/ph pr-d/codeph ">ctrlKey</codeph> sur le Mac. Toujours false sous Windows ou Linux.</p>
		
		</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:MouseEvent:controlKey:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">controlKey</apiName><shortdesc class="- topic/shortdesc ">
		Indique si la touche Contrôle et activée sous Mac et si la touche Ctrl est activée sous Windows ou Linux.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		Indique si la touche Contrôle et activée sous Mac et si la touche Ctrl est activée sous Windows ou Linux.
		
		</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:MouseEvent:ctrlKey:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">ctrlKey</apiName><shortdesc class="- topic/shortdesc ">
	Sous Windows ou Linux, indique si la touche Ctrl est activée (true) ou non (false).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Sous Windows ou Linux, indique si la touche Ctrl est activée (<codeph class="+ topic/ph pr-d/codeph ">true</codeph>) ou non (<codeph class="+ topic/ph pr-d/codeph ">false</codeph>). Sous Macintosh, indique si la touche Contrôle ou la touche Commande est activée.
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:MouseEvent:delta:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">delta</apiName><shortdesc class="- topic/shortdesc ">
	Indique le nombre de lignes qui doivent défiler chaque fois que l’utilisateur fait tourner la molette de sa souris d’un cran.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">int</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Indique le nombre de lignes qui doivent défiler chaque fois que l’utilisateur fait tourner la molette de sa souris d’un cran. Une valeur delta positive indique un défilement vers le haut ; une valeur négative un défilement vers le bas. Les valeurs types sont comprises entre 1 et 3 ; une rotation plus rapide peut générer des valeurs supérieures. Ce paramètre dépend du périphérique et du système d’exploitation et est généralement configurable par l’utilisateur. Cette propriété s’applique uniquement à l’événement <codeph class="+ topic/ph pr-d/codeph ">MouseEvent.mouseWheel</codeph>.
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:MouseEvent:isRelatedObjectInaccessible:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">isRelatedObjectInaccessible</apiName><shortdesc class="- topic/shortdesc ">
	 Si la valeur est true, la propriété relatedObject est définie sur null pour des raisons liées aux sandbox de sécurité.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Si la valeur est <codeph class="+ topic/ph pr-d/codeph ">true</codeph>, la propriété <codeph class="+ topic/ph pr-d/codeph ">relatedObject</codeph> est définie sur <codeph class="+ topic/ph pr-d/codeph ">null</codeph> pour des raisons liées aux sandbox de sécurité. Si la valeur nominale de <codeph class="+ topic/ph pr-d/codeph ">relatedObject</codeph> est une référence à un DisplayObject se trouvant dans un autre sandbox, <codeph class="+ topic/ph pr-d/codeph ">relatedObject</codeph> est défini sur <codeph class="+ topic/ph pr-d/codeph ">null</codeph>, à moins qu’il existe une autorisation dans les deux sens dans les limites de ce sandbox. L’autorisation est établie en appelant la méthode <codeph class="+ topic/ph pr-d/codeph ">Security.allowDomain()</codeph> à partir d’un fichier SWF ou en fournissant un fichier de régulation depuis le serveur d’un fichier image, puis en définissant la propriété <codeph class="+ topic/ph pr-d/codeph ">LoaderContext.checkPolicyFile</codeph> lors du chargement de l’image.
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.events.xml#MouseEvent/relatedObject" class="- topic/link "><linktext class="- topic/linktext ">MouseEvent.relatedObject</linktext></link><link href="flash.system.xml#Security/allowDomain()" class="- topic/link "><linktext class="- topic/linktext ">Security.allowDomain()</linktext></link><link href="flash.system.xml#LoaderContext/checkPolicyFile" class="- topic/link "><linktext class="- topic/linktext ">LoaderContext.checkPolicyFile</linktext></link></related-links></apiValue><apiValue id="flash.events:MouseEvent:localX:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">localX</apiName><shortdesc class="- topic/shortdesc ">
	Coordonnée horizontale à laquelle l’événement s’est produit par rapport au sprite conteneur.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Coordonnée horizontale à laquelle l’événement s’est produit par rapport au sprite conteneur.
	
	</apiDesc><example class="- topic/example ">Consultez l’exemple de la constante <xref href="MouseEvent.html#MOUSE_MOVE" class="- topic/xref ">MOUSE_MOVE</xref> pour une illustration de l’utilisation de cette propriété.
	 
	 </example></apiValueDetail></apiValue><apiValue id="flash.events:MouseEvent:localY:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">localY</apiName><shortdesc class="- topic/shortdesc ">
	Coordonnée verticale à laquelle l’événement s’est produit par rapport au sprite conteneur.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Coordonnée verticale à laquelle l’événement s’est produit par rapport au sprite conteneur.
	
	</apiDesc><example class="- topic/example ">Consultez l’exemple de la constante <xref href="MouseEvent.html#MOUSE_MOVE" class="- topic/xref ">MOUSE_MOVE</xref> pour une illustration de l’utilisation de cette propriété.
	 
	 </example></apiValueDetail></apiValue><apiValue id="flash.events:MouseEvent:relatedObject:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">relatedObject</apiName><shortdesc class="- topic/shortdesc ">
	Référence à un objet de la liste d’affichage qui est associé à l’événement.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.display:InteractiveObject</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Référence à un objet de la liste d’affichage qui est associé à l’événement. Lorsqu’un événement <codeph class="+ topic/ph pr-d/codeph ">mouseOut</codeph> se produit par exemple, <codeph class="+ topic/ph pr-d/codeph ">relatedObject</codeph> représente l’objet de la liste d’affichage sur lequel pointe actuellement le périphérique de pointage. Cette propriété s’applique aux événements <codeph class="+ topic/ph pr-d/codeph ">mouseOut</codeph>, <codeph class="+ topic/ph pr-d/codeph ">mouseOver</codeph>, <codeph class="+ topic/ph pr-d/codeph ">rollOut</codeph> et <codeph class="+ topic/ph pr-d/codeph ">rollOver</codeph>.
	<p class="- topic/p ">La valeur de cette propriété peut être <codeph class="+ topic/ph pr-d/codeph ">null</codeph> dans deux cas : s’il n’existe aucun objet associé ou s’il existe un objet associé se trouvant dans un sandbox de sécurité auquel vous n’avez pas accès. Pour savoir dans quel cas vous vous trouvez, utilisez la propriété <codeph class="+ topic/ph pr-d/codeph ">isRelatedObjectInaccessible()</codeph>.</p>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.events.xml#MouseEvent/isRelatedObjectInaccessible" class="- topic/link "><linktext class="- topic/linktext ">MouseEvent.isRelatedObjectInaccessible</linktext></link></related-links></apiValue><apiValue id="flash.events:MouseEvent:shiftKey:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">shiftKey</apiName><shortdesc class="- topic/shortdesc ">
	Indique si la touche Maj est activée (true) ou non (false).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Indique si la touche Maj est activée (<codeph class="+ topic/ph pr-d/codeph ">true</codeph>) ou non (<codeph class="+ topic/ph pr-d/codeph ">false</codeph>).
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:MouseEvent:stageX:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">stageX</apiName><shortdesc class="- topic/shortdesc ">
	Coordonnée horizontale à laquelle l’événement s’est produit, par rapport aux coordonnées globales de la scène.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Coordonnée horizontale à laquelle l’événement s’est produit, par rapport aux coordonnées globales de la scène. Cette propriété est calculée lorsque la propriété <codeph class="+ topic/ph pr-d/codeph ">localX</codeph> est définie.
	
	</apiDesc><example class="- topic/example ">Consultez l’exemple de la constante <xref href="MouseEvent.html#MOUSE_MOVE" class="- topic/xref ">MOUSE_MOVE</xref> pour une illustration de l’utilisation de cette propriété. 
	 
	 </example></apiValueDetail></apiValue><apiValue id="flash.events:MouseEvent:stageY:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">stageY</apiName><shortdesc class="- topic/shortdesc ">
	Coordonnée verticale à laquelle l’événement s’est produit, par rapport aux coordonnées globales de la scène.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Coordonnée verticale à laquelle l’événement s’est produit, par rapport aux coordonnées globales de la scène. Cette propriété est calculée lorsque la propriété <codeph class="+ topic/ph pr-d/codeph ">localY</codeph> est définie.
	
	</apiDesc><example class="- topic/example ">Consultez l’exemple de la constante <xref href="MouseEvent.html#MOUSE_MOVE" class="- topic/xref ">MOUSE_MOVE</xref> pour une illustration de l’utilisation de cette propriété.
	 
	 </example></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.events:IEventDispatcher" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">IEventDispatcher</apiName><shortdesc class="- topic/shortdesc ">
L’interface IEventDispatcher définit des méthodes d’ajout ou de suppression d’écouteurs d’événements, vérifie si des types spécifiques d’écouteurs d’événements sont enregistrés et distribue des événements.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiInterface class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiInterface "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier "/></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
L’interface IEventDispatcher définit des méthodes d’ajout ou de suppression d’écouteurs d’événements, vérifie si des types spécifiques d’écouteurs d’événements sont enregistrés et distribue des événements.

<p class="- topic/p ">Les cibles d’événement constituent une part importante du modèle d’événement de Flash<sup class="+ topic/ph hi-d/sup ">®</sup> Player et d’Adobe AIR. La cible de l’événement détermine le flux d’événements dans la hiérarchie de la liste d’affichage. Lorsqu’un événement, tel qu’un clic de souris ou une pression sur une touche, se produit, un objet d’événement est distribué dans le flux d’événements, à partir de la racine de la liste d’affichage. L’objet d’événement effectue un aller-retour jusqu’à la cible de l’événement, divisé de manière conceptuelle en trois phases : La phase de capture correspond au trajet de la racine jusqu’au dernier nœud précédant le nœud de la cible de l’événement, la phase cible concerne uniquement le nœud de la cible de l’événement, tandis que la phase de propagation comprend tous les nœuds rencontrés sur le trajet de retour à la racine de la liste d’affichage.</p>

<p class="- topic/p ">En règle générale, pour qu’une classe définie par l’utilisateur acquière des fonctions de distribution, le plus simple consiste à étendre EventDispatcher. Si cela est impossible (autrement dit, si cette classe étend déjà une autre classe), vous pouvez implémenter l’interface IEventDispatcher, créer un membre EventDispatcher et écrire des raccrochements simples pour acheminer les appels vers la classe EventDispatcher regroupée.</p>

</apiDesc><example conref="examples\IEventDispatcherExample.as" class="- topic/example "> L’exemple suivant utilise les classes IEventDispatcherExample et DecoratedDispatcher pour montrer comment la classe IEventDispatcher peut être implémentée et utilisée. L’exemple effectue cette opération en implémentant chaque méthode de DecoratedDispatcher de la même manière que pour EventDispatcher. A l’intérieur du constructeur de IEventDispatcherExample, une nouvelle occurrence (appelée <codeph class="+ topic/ph pr-d/codeph ">decorDispatcher</codeph>) de la classe DecoratedDispatcher est construite et la variable <codeph class="+ topic/ph pr-d/codeph ">decorDispatcher</codeph> est utilisée pour appeler <codeph class="+ topic/ph pr-d/codeph ">addEventListener()</codeph> avec l’événement personnalisé <codeph class="+ topic/ph pr-d/codeph ">doSomething</codeph>, traité alors par <codeph class="+ topic/ph pr-d/codeph ">didSomething()</codeph>, qui imprime une ligne de texte à l’aide de <codeph class="+ topic/ph pr-d/codeph ">trace()</codeph>.
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock "> 
package {
        import flash.events.Event;
        import flash.display.Sprite;
       
        public class IEventDispatcherExample extends Sprite {
                public function IEventDispatcherExample() {
                        var decorDispatcher:DecoratedDispatcher = new DecoratedDispatcher();
                        decorDispatcher.addEventListener("doSomething", didSomething);
                        decorDispatcher.dispatchEvent(new Event("doSomething"));
                }
               
                public function didSomething(evt:Event):void {
                        trace(">> didSomething");
                }
        }
}

import flash.events.IEventDispatcher;
import flash.events.EventDispatcher;
import flash.events.Event;
               
class DecoratedDispatcher implements IEventDispatcher {       
    private var dispatcher:EventDispatcher;
               
    public function DecoratedDispatcher() {
        dispatcher = new EventDispatcher(this);
    }
           
    public function addEventListener(type:String, listener:Function, useCapture:Boolean = false, priority:int = 0, useWeakReference:Boolean = false):void{
        dispatcher.addEventListener(type, listener, useCapture, priority);
    }
           
    public function dispatchEvent(evt:Event):Boolean{
        return dispatcher.dispatchEvent(evt);
    }
    
    public function hasEventListener(type:String):Boolean{
        return dispatcher.hasEventListener(type);
    }
    
    public function removeEventListener(type:String, listener:Function, useCapture:Boolean = false):void{
        dispatcher.removeEventListener(type, listener, useCapture);
    }
                   
    public function willTrigger(type:String):Boolean {
        return dispatcher.willTrigger(type);
    }
}
</codeblock></example></apiClassifierDetail><apiOperation id="flash.events:IEventDispatcher:flash.events:IEventDispatcher:addEventListener" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">addEventListener</apiName><shortdesc class="- topic/shortdesc ">
	Enregistre un objet écouteur d’événement auprès d’un objet EventDispatcher afin que l’écouteur soit averti d’un événement.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">type</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Type d’événement.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">listener</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Function</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Fonction d’auditeur qui traite l’événement. Cette fonction doit accepter un objet Event comme paramètre unique et ne rien renvoyer, comme dans l’exemple ci-dessous :
	<p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">function(evt:Event):void</codeph></p>
	Le nom de cette fonction n’a aucune importance.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">useCapture</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Détermine si l’écouteur est actif pendant la phase de capture ou pendant les phases cible et de propagation vers le haut. Si la propriété <codeph class="+ topic/ph pr-d/codeph ">useCapture</codeph> est définie sur <codeph class="+ topic/ph pr-d/codeph ">true</codeph>, l’écouteur traite l’événement uniquement pendant la phase de capture et non pendant les phases cible et de propagation. Si la propriété <codeph class="+ topic/ph pr-d/codeph ">useCapture</codeph> est définie sur <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, l’écouteur traite l’événement uniquement pendant les phases cible et de propagation. Pour écouter l’événement dans les trois phases, appelez <codeph class="+ topic/ph pr-d/codeph ">addEventListener()</codeph> à deux reprises, une première fois avec la propriété <codeph class="+ topic/ph pr-d/codeph ">useCapture</codeph> définie sur <codeph class="+ topic/ph pr-d/codeph ">true</codeph>, puis une nouvelle fois avec <codeph class="+ topic/ph pr-d/codeph ">useCapture</codeph> définie sur <codeph class="+ topic/ph pr-d/codeph ">false</codeph>.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">priority</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Niveau de priorité de l’écouteur d’événement. La priorité est désignée par un entier de 32 bits. Plus le nombre est élevé, plus la priorité est élevée. Tous les écouteurs de priorité <i class="+ topic/ph hi-d/i ">n</i> sont traités avant les écouteurs de priorité <i class="+ topic/ph hi-d/i ">n-1</i>. Les écouteurs dont la priorité est identique sont traités dans l’ordre où ils ont été ajoutés. La priorité par défaut est 0. 
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">useWeakReference</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Détermine si la référence à l’écouteur est forte ou faible. Une référence forte (valeur par défaut) empêche le nettoyage de votre écouteur, Cela n’est pas le cas avec une référence faible. <p class="- topic/p ">Les fonctions de membres de niveau classe n’étant pas soumises au nettoyage, vous pouvez définir <codeph class="+ topic/ph pr-d/codeph ">useWeakReference</codeph> sur <codeph class="+ topic/ph pr-d/codeph ">true</codeph> pour ces fonctions. Si vous définissez <codeph class="+ topic/ph pr-d/codeph ">useWeakReference</codeph> sur <codeph class="+ topic/ph pr-d/codeph ">true</codeph> pour un écouteur correspondant à une fonction imbriquée interne, la fonction sera nettoyée et ne sera donc pas permanente. Si vous créez des références à la fonction interne (enregistrée dans une autre variable), celle-ci n’est pas nettoyée et reste permanente.</p>
	 
	 </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Enregistre un objet écouteur d’événement auprès d’un objet EventDispatcher afin que l’écouteur soit averti d’un événement. Vous pouvez enregistrer les écouteurs d’événement dans tous les nœuds de la liste d’affichage pour un type spécifique d’événement, de phase et de priorité.
	<p class="- topic/p ">Après l’enregistrement d’un écouteur d’événement, vous ne pouvez plus modifier sa priorité via d’autres appels de <codeph class="+ topic/ph pr-d/codeph ">addEventListener()</codeph>. Pour modifier la priorité d’un écouteur, vous devez d’abord appeler <codeph class="+ topic/ph pr-d/codeph ">removeEventListener()</codeph>. Vous pouvez ensuite réenregistrer l’écouteur avec le nouveau niveau de priorité.</p>
	<p class="- topic/p ">Après l’enregistrement de l’écouteur, tous les futurs appels de <codeph class="+ topic/ph pr-d/codeph ">addEventListener()</codeph> avec une valeur <codeph class="+ topic/ph pr-d/codeph ">type</codeph> ou <codeph class="+ topic/ph pr-d/codeph ">useCapture</codeph> différente entraîneront la création d’un autre enregistrement d’écouteur. Si, par exemple, vous enregistrez un écouteur dans lequel la propriété <codeph class="+ topic/ph pr-d/codeph ">useCapture</codeph> est définie sur <codeph class="+ topic/ph pr-d/codeph ">true</codeph>, il écoute uniquement pendant la phase de capture. Si vous appelez <codeph class="+ topic/ph pr-d/codeph ">addEventListener()</codeph> à l’aide du même objet écouteur, mais en définissant <codeph class="+ topic/ph pr-d/codeph ">useCapture</codeph> sur <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, vous obtenez deux écouteurs distincts : l’un qui écoute pendant la phase de capture et l’autre qui écoute pendant les phases cible et de propagation vers le haut.</p>
	<p class="- topic/p ">Il est impossible d’enregistrer un écouteur d’événement uniquement pour la phase cible ou la phase de propagation vers le haut. Ces deux phases sont associées pendant l’enregistrement car la propagation vers le haut s’applique uniquement aux ancêtres du nœud cible.</p>
	<p class="- topic/p ">Si vous n’avez plus besoin d’un écouteur d’événement, supprimez-le en appelant <codeph class="+ topic/ph pr-d/codeph ">EventDispatcher.removeEventListener()</codeph>, pour éviter tout problème de mémoire. Les objets associés à des écouteurs d’événement enregistrés ne sont pas automatiquement supprimés de la mémoire, car le nettoyeur de mémoire n’efface pas les objets auxquels il est toujours fait référence.</p>
	<p class="- topic/p ">Lors de la copie d’une occurrence d’EventDispatcher, les écouteurs d’événement qui lui sont associés ne sont pas pris en compte (si le nouveau nœud nécessite un écouteur d’événement, vous devez associer celui-ci après la création du nœud). Toutefois, si vous déplacez une occurrence d’EventDispatcher, les écouteurs d’événement qui lui sont associés la suivent.</p>
	<p class="- topic/p ">Si un écouteur d’événement est enregistré sur un nœud alors qu’un événement est en cours de traitement sur ce nœud, l’écouteur n’est pas déclenché pendant la phase actuelle, mais il peut l’être pendant une phase ultérieure du flux d’événements, telle que la phase de propagation vers le haut.</p>
	<p class="- topic/p ">Si un écouteur d’événement est supprimé d’un nœud sur lequel un événement est en cours de traitement, il est cependant déclenché par les actions en cours. Une fois supprimé, l’écouteur d’événement n’est plus jamais appelé (à moins d’être réenregistré à des fins de traitement ultérieur). </p>
	
	</apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.events:IEventDispatcher:flash.events:IEventDispatcher:dispatchEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">dispatchEvent</apiName><shortdesc class="- topic/shortdesc ">
	Distribue un événement dans le flux d’événements.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>, sauf si la méthode <codeph class="+ topic/ph pr-d/codeph ">preventDefault()</codeph> est appelée sur l’événement, auquel cas la valeur <codeph class="+ topic/ph pr-d/codeph ">false</codeph> est renvoyée.
	 
	 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">event</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.events:Event</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Objet d’événement distribué dans le flux d’événements.
	</apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Distribue un événement dans le flux d’événements. La cible de l’événement est l’objet EventDispatcher sur lequel la méthode <codeph class="+ topic/ph pr-d/codeph ">dispatchEvent()</codeph> est appelée.
	
	</apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.events:IEventDispatcher:flash.events:IEventDispatcher:hasEventListener" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">hasEventListener</apiName><shortdesc class="- topic/shortdesc ">
	Vérifie si des écouteurs sont enregistrés auprès de l’objet EventDispatcher pour un type spécifique d’événement.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">La valeur <codeph class="+ topic/ph pr-d/codeph ">true</codeph> est renvoyée si un écouteur du type spécifié est enregistré. La valeur <codeph class="+ topic/ph pr-d/codeph ">false</codeph> est renvoyée dans tous les autres cas.
	</apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">type</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Type d’événement.
	</apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Vérifie si des écouteurs sont enregistrés auprès de l’objet EventDispatcher pour un type spécifique d’événement. Vous pouvez ainsi déterminer précisément où un objet EventDispatcher a modifié la gestion d’un type d’événement dans la hiérarchie du flux d’événements. Pour savoir si un type d’événement spécifique déclenche réellement un écouteur d’événement, utilisez <codeph class="+ topic/ph pr-d/codeph ">IEventDispatcher.willTrigger()</codeph>.
	<p class="- topic/p ">La différence entre les méthodes <codeph class="+ topic/ph pr-d/codeph ">hasEventListener()</codeph> et <codeph class="+ topic/ph pr-d/codeph ">willTrigger()</codeph> est la suivante : <codeph class="+ topic/ph pr-d/codeph ">hasEventListener()</codeph> examine uniquement l’objet auquel elle appartient, tandis que <codeph class="+ topic/ph pr-d/codeph ">willTrigger()</codeph> recherche dans la totalité du flux d’événements l’événement spécifié par le paramètre <codeph class="+ topic/ph pr-d/codeph ">type</codeph>.</p>
	
	</apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.events.xml#IEventDispatcher/willTrigger()" class="- topic/link "><linktext class="- topic/linktext ">willTrigger()</linktext></link></related-links></apiOperation><apiOperation id="flash.events:IEventDispatcher:flash.events:IEventDispatcher:removeEventListener" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">removeEventListener</apiName><shortdesc class="- topic/shortdesc ">
	Supprime un écouteur de l’objet EventDispatcher.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">type</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Type d’événement.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">listener</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Function</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Objet écouteur à supprimer.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">useCapture</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Détermine si l’écouteur a été enregistré pendant la phase de capture ou pendant les phases cible et de propagation vers le haut. Si l’écouteur a été enregistré pendant la phase de capture et pendant les phases cible et de propagation vers le haut, il est nécessaire d’appeler <codeph class="+ topic/ph pr-d/codeph ">removeEventListener()</codeph> à deux reprises pour le supprimer : une première fois en définissant <codeph class="+ topic/ph pr-d/codeph ">useCapture</codeph> sur <codeph class="+ topic/ph pr-d/codeph ">true</codeph>, puis une seconde fois avec la propriété <codeph class="+ topic/ph pr-d/codeph ">useCapture</codeph> définie sur <codeph class="+ topic/ph pr-d/codeph ">false</codeph>. 
	 
	 </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Supprime un écouteur de l’objet EventDispatcher. Si aucun écouteur correspondant n’est enregistré auprès de l’objet EventDispatcher, l’appel de cette méthode n’a aucun effet.
	
	</apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.events:IEventDispatcher:flash.events:IEventDispatcher:willTrigger" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">willTrigger</apiName><shortdesc class="- topic/shortdesc ">
	Vérifie si un écouteur d’événement est enregistré auprès de cet objet EventDispatcher ou de ses ancêtres pour le type d’événement spécifié.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Renvoie <codeph class="+ topic/ph pr-d/codeph ">true</codeph> si un écouteur du type spécifié est enregistré, <codeph class="+ topic/ph pr-d/codeph ">false</codeph> dans tous les autres cas.
	 
	 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">type</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Type d’événement.
	</apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Vérifie si un écouteur d’événement est enregistré auprès de cet objet EventDispatcher ou de ses ancêtres pour le type d’événement spécifié. Cette méthode renvoie <codeph class="+ topic/ph pr-d/codeph ">true</codeph> si un écouteur d’événement est déclenché pendant toute phase du flux d’événements lorsqu’un événement du type spécifié est distribué à cet objet EventDispatcher ou à l’un de ses descendants.
	<p class="- topic/p ">La différence entre les méthodes <codeph class="+ topic/ph pr-d/codeph ">hasEventListener()</codeph> et <codeph class="+ topic/ph pr-d/codeph ">willTrigger()</codeph> est la suivante : <codeph class="+ topic/ph pr-d/codeph ">hasEventListener()</codeph> examine uniquement l’objet auquel elle appartient, tandis que <codeph class="+ topic/ph pr-d/codeph ">willTrigger()</codeph> recherche dans la totalité du flux d’événements l’événement spécifié par le paramètre <codeph class="+ topic/ph pr-d/codeph ">type</codeph>.</p>
	
	</apiDesc></apiOperationDetail></apiOperation></apiClassifier><apiClassifier languages="" id="flash.events:SQLErrorEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">SQLErrorEvent</apiName><shortdesc class="- topic/shortdesc ">
 Une occurrence de SQLErrorEvent est distribuée par une occurrence de SQLConnection ou de SQLStatement lorsqu’une erreur se produit pendant l’exécution d’une opération de base de données en mode asynchrone.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:ErrorEvent</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Une occurrence de SQLErrorEvent est distribuée par une occurrence de SQLConnection ou de SQLStatement lorsqu’une erreur se produit pendant l’exécution d’une opération de base de données en mode asynchrone. L’occurrence SQLErrorEvent qui est transmise en tant qu’objet d’événement aux écouteurs fournit l’accès aux informations relatives à la cause de l’erreur et de l’opération tentée.
 
 <p class="- topic/p ">Les détails spécifiques de l’échec figurent sur l’objet SQLError dans la propriété <codeph class="+ topic/ph pr-d/codeph ">error</codeph> de l’occurrence SQLErrorEvent.</p>
 
 </apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.errors.xml#SQLError" class="- topic/link "><linktext class="- topic/linktext ">flash.errors.SQLError</linktext></link><link href="flash.data.xml#SQLConnection" class="- topic/link "><linktext class="- topic/linktext ">flash.data.SQLConnection</linktext></link><link href="flash.data.xml#SQLStatement" class="- topic/link "><linktext class="- topic/linktext ">flash.data.SQLStatement</linktext></link></related-links><adobeApiEvent id="flash.events:SQLErrorEvent:ERROR_error" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">error</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:SQLErrorEvent:ERROR</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:SQLErrorEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.data.xml#SQLConnection" class="- topic/link "><linktext class="- topic/linktext ">flash.data.SQLConnection</linktext></link><link href="flash.data.xml#SQLStatement" class="- topic/link "><linktext class="- topic/linktext ">flash.data.SQLStatement</linktext></link><link href="flash.errors.xml#SQLError" class="- topic/link "><linktext class="- topic/linktext ">flash.errors.SQLError</linktext></link></related-links></adobeApiEvent><apiConstructor id="flash.events:SQLErrorEvent:SQLErrorEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">SQLErrorEvent</apiName><shortdesc class="- topic/shortdesc ">
     Crée un objet SQLErrorEvent à transmettre en tant qu’argument aux écouteurs d’événement.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">type</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc "> Le type d’événement, accessible dans la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph>. SQLErrorEvent définit un type d’événement, l’événement <codeph class="+ topic/ph pr-d/codeph ">error</codeph>, représenté par la constante <codeph class="+ topic/ph pr-d/codeph ">SQLErrorEvent.ERROR</codeph>.
     
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">bubbles</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc "> Détermine si l’objet d’événement prend part à la phase de propagation du flux d’événements. La valeur par défaut est <codeph class="+ topic/ph pr-d/codeph ">false</codeph>.
     
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">cancelable</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Détermine si l’objet Event peut être annulé. La valeur par défaut est <codeph class="+ topic/ph pr-d/codeph ">false</codeph>.
     
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">error</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:SQLError</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">L’objet SQLError qui contient les détails de l’erreur.
     
     </apiDesc></apiParam><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Utilisé pour créer un objet SQLErrorEvent.
	 
	 </apiTipText></apiTipTexts></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Crée un objet SQLErrorEvent à transmettre en tant qu’argument aux écouteurs d’événement.
     
     </apiDesc></apiConstructorDetail><related-links class="- topic/related-links "><link href="" invalidHref="flash.errors.SQLError;.xml" class="- topic/link "><linktext class="- topic/linktext ">flash.errors.SQLError;</linktext></link><link href="flash.events.xml#SQLErrorEvent/ERROR" class="- topic/link "><linktext class="- topic/linktext ">ERROR</linktext></link></related-links></apiConstructor><apiOperation id="flash.events:SQLErrorEvent:clone" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">clone</apiName><shortdesc class="- topic/shortdesc ">
	 Crée une copie de l’objet SQLErrorEvent et définit la valeur de chaque propriété de sorte qu’elle corresponde à la valeur d’origine.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Nouvel objet SQLErrorEvent dont les propriétés ont la même valeur que celles de l’objet d’origine.
	 
	 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.events:Event</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Crée une copie de l’objet SQLErrorEvent et définit la valeur de chaque propriété de sorte qu’elle corresponde à la valeur d’origine.
	 
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.events:SQLErrorEvent:toString" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">toString</apiName><shortdesc class="- topic/shortdesc ">
	 Renvoie une chaîne répertoriant toutes les propriétés de l’objet SQLErrorEvent.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Chaîne répertoriant toutes les propriétés de l’objet SQLErrorEvent.
	 
	 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Renvoie une chaîne répertoriant toutes les propriétés de l’objet SQLErrorEvent. La chaîne est écrite au format suivant :
	 
	 <p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">[SQLErrorEvent type=<i class="+ topic/ph hi-d/i ">valeur</i> bubbles=<i class="+ topic/ph hi-d/i ">valeur</i> cancelable=<i class="+ topic/ph hi-d/i ">valeur</i> error=<i class="+ topic/ph hi-d/i ">valeur</i>]</codeph></p>
	 
	 <p class="- topic/p ">La valeur de l’erreur a le format suivant : <codeph class="+ topic/ph pr-d/codeph ">SQLError : <i class="+ topic/ph hi-d/i ">message value</i> code=<i class="+ topic/ph hi-d/i ">valeur</i> operation=<i class="+ topic/ph hi-d/i ">valeur</i></codeph></p>
	 
	 </apiDesc></apiOperationDetail></apiOperation><apiValue id="flash.events:SQLErrorEvent:ERROR" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">ERROR</apiName><shortdesc class="- topic/shortdesc ">
     La constante SQLErrorEvent.ERROR définit la valeur de la propriété type d’un événement error distribué lorsqu’un appel à une méthode d’une occurrence SQLConnection ou SQLStatement se termine avec une erreur.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">error</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     La constante <codeph class="+ topic/ph pr-d/codeph ">SQLErrorEvent.ERROR</codeph> définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un événement error distribué lorsqu’un appel à une méthode d’une occurrence SQLConnection ou SQLStatement se termine avec une erreur. L’événement <codeph class="+ topic/ph pr-d/codeph ">error</codeph> a les propriétés suivantes :
	 
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">error</codeph></entry><entry class="- topic/entry ">Objet SQLError contenant des informations sur le type d’erreur ayant eu lieu et l’opération ayant provoqué l’erreur.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Objet qui traite activement l’objet de l’événement avec un écouteur d’événement.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">L’objet SQLConnection ou SQLStatement signalant l’erreur.</entry></row></tbody></tgroup></adobetable>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.data.xml#SQLConnection" class="- topic/link "><linktext class="- topic/linktext ">flash.data.SQLConnection</linktext></link><link href="flash.data.xml#SQLStatement" class="- topic/link "><linktext class="- topic/linktext ">flash.data.SQLStatement</linktext></link><link href="flash.errors.xml#SQLError" class="- topic/link "><linktext class="- topic/linktext ">flash.errors.SQLError</linktext></link></related-links></apiValue><apiValue id="flash.events:SQLErrorEvent:error:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">error</apiName><shortdesc class="- topic/shortdesc ">
     Un objet SQLError contenant des informations détaillées sur la cause de l’erreur.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.errors:SQLError</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Un objet SQLError contenant des informations détaillées sur la cause de l’erreur.
     
	 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.events:ErrorEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">ErrorEvent</apiName><shortdesc class="- topic/shortdesc ">
Un objet distribue un objet ErrorEvent lorsqu’une erreur provoque l’échec d’une opération asynchrone.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Objets Event associés aux événements ErrorEvent.
 
 </apiTipText></apiTipTexts><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:TextEvent</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
Un objet distribue un objet ErrorEvent lorsqu’une erreur provoque l’échec d’une opération asynchrone.

<p class="- topic/p ">La classe ErrorEvent ne définit qu’un seul type d’événement <codeph class="+ topic/ph pr-d/codeph ">error</codeph> : <codeph class="+ topic/ph pr-d/codeph ">ErrorEvent.ERROR</codeph>. La classe ErrorEvent sert également de classe de base pour plusieurs autres classes d’événement d’erreur, y compris les classes AsyncErrorEvent, IOErrorEvent, SecurityErrorEvent et SQLErrorEvent UncaughtErrorEvent.</p>

<p class="- topic/p ">Vous pouvez rechercher les événements <codeph class="+ topic/ph pr-d/codeph ">error</codeph> qui ne disposent pas d’écouteur en enregistrant un écouteur pour l’événement <codeph class="+ topic/ph pr-d/codeph ">uncaughtError</codeph> (UncaughtErrorEvent.UNCAUGHT_ERROR).</p>

<p class="- topic/p ">Une erreur non interceptée entraîne par ailleurs l’affichage d’une boîte de dialogue indiquant l’événement d’erreur lorsque le contenu est exécuté dans la <ph class="- topic/ph ">version de débogage de Flash Player ou dans</ph> l’application de débogage du lanceur AIR (ADL).</p>

</apiDesc><example conref="examples\ErrorEventExample.as" class="- topic/example "> L’exemple suivant démontre l’utilisation d’un seul gestionnaire d’erreur (<codeph class="+ topic/ph pr-d/codeph ">errorHandler()</codeph>) capturant plusieurs types d’événements error. S’il existe un événement <codeph class="+ topic/ph pr-d/codeph ">ioError</codeph>, le gestionnaire tente un chargement à partir du réseau, qui envoie ensuite un objet <codeph class="+ topic/ph pr-d/codeph ">securityError</codeph>.
 
 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Remarque : </b> cet exemple ne fonctionne pas si un fichier nommé MissingFile.xml se trouve dans le même répertoire que votre fichier SWF.</p>
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
package {
    import flash.display.Sprite;
    import flash.net.URLLoader;
    import flash.net.URLRequest;
    import flash.events.*;

    public class ErrorEventExample extends Sprite {
        private var loader:URLLoader;
        private var request:URLRequest;
        
        public function ErrorEventExample() {
            loader = new URLLoader();
            loader.addEventListener(IOErrorEvent.IO_ERROR, errorHandler);
            loader.addEventListener(SecurityErrorEvent.SECURITY_ERROR, errorHandler);

            request = new URLRequest();
            loadFromFileSystem();
        }
        
        private function loadFromFileSystem():void {
            request.url = "MissingFile.xml";
            loader.load(request);
        }

        private function loadFromNetwork():void {
            request.url = "http://www.[yourDomain].com/MissingFile.xml";
            loader.load(request);
        }
        
        private function errorHandler(event:ErrorEvent):void {
            trace("errorHandler: " + event);
            if(event is IOErrorEvent) {
                loadFromNetwork();
            }
        }
    }
}
</codeblock></example></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.events.xml#UncaughtErrorEvent" class="- topic/link "><linktext class="- topic/linktext ">UncaughtErrorEvent</linktext></link></related-links><adobeApiEvent id="flash.events:ErrorEvent:ERROR_error" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">error</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:ErrorEvent:ERROR</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:ErrorEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="flash.events:ErrorEvent:ErrorEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">ErrorEvent</apiName><shortdesc class="- topic/shortdesc ">
	Crée un objet Event contenant des informations sur les événements d’erreur.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">type</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc "> Type de l’événement. Les écouteurs d’événement peuvent accéder à cette information par le biais de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> héritée. Il n’existe qu’un seul type d’événement d’erreur : <codeph class="+ topic/ph pr-d/codeph ">ErrorEvent.ERROR</codeph>.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">bubbles</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Détermine si l’objet Event se propage vers le haut. Les écouteurs d’événement peuvent accéder à cette information par le biais de la propriété <codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph> héritée.  
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">cancelable</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Détermine si l’objet Event peut être annulé. Les écouteurs d’événement peuvent accéder à cette information par le biais de la propriété <codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph> héritée. 
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">text</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData "/><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Texte à afficher en tant que message d’erreur. Les écouteurs d’événement peuvent accéder à cette information par le biais de la propriété <codeph class="+ topic/ph pr-d/codeph ">text</codeph>.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">id</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Un numéro de référence à associer à l’erreur spécifique (pris en charge uniquement par Adobe AIR).
	
	</apiDesc></apiParam><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Constructeur associé aux objets ErrorEvent.
	 
	 </apiTipText></apiTipTexts></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Crée un objet Event contenant des informations sur les événements d’erreur. Les objets Event sont transmis en tant que paramètres aux écouteurs d’événements.
	
	</apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="flash.events:ErrorEvent:clone" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">clone</apiName><shortdesc class="- topic/shortdesc ">
	Crée une copie de l’objet ErrorEvent et définit la valeur de chaque propriété de sorte qu’elle corresponde à la valeur d’origine.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Nouvel objet ErrorEvent dont les propriétés ont la même valeur que celles de l’objet d’origine.
	 
	 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.events:Event</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Crée une copie de l’objet ErrorEvent et définit la valeur de chaque propriété de sorte qu’elle corresponde à la valeur d’origine. 
	
	</apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.events:ErrorEvent:toString" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">toString</apiName><shortdesc class="- topic/shortdesc ">
	Renvoie une chaîne répertoriant toutes les propriétés de l’objet ErrorEvent.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Chaîne répertoriant toutes les propriétés de l’objet ErrorEvent.
	 
	 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Renvoie une chaîne répertoriant toutes les propriétés de l’objet ErrorEvent. La chaîne est écrite au format suivant :
	<p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">[ErrorEvent type=<i class="+ topic/ph hi-d/i ">valeur</i> bubbles=<i class="+ topic/ph hi-d/i ">valeur</i> cancelable=<i class="+ topic/ph hi-d/i ">valeur</i> text=<i class="+ topic/ph hi-d/i ">valeur</i> errorID=<i class="+ topic/ph hi-d/i ">valeur</i>]</codeph></p>
	<p class="- topic/p "><b class="+ topic/ph hi-d/b ">Remarque :</b> la valeur <codeph class="+ topic/ph pr-d/codeph ">errorId</codeph> renvoyée par la méthode <codeph class="+ topic/ph pr-d/codeph ">toString()</codeph> est uniquement disponible pour Adobe AIR. Alors que Flash Player 10.1 prend en charge la propriété <codeph class="+ topic/ph pr-d/codeph ">errorID</codeph>, l’appel de <codeph class="+ topic/ph pr-d/codeph ">toString()</codeph> sur l’objet ErrorEvent ne fournit pas la valeur <codeph class="+ topic/ph pr-d/codeph ">errorID</codeph> dans Flash Player.</p>
	
	</apiDesc></apiOperationDetail></apiOperation><apiValue id="flash.events:ErrorEvent:ERROR" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">ERROR</apiName><shortdesc class="- topic/shortdesc ">
	Définit la valeur de la propriété type d’un objet d’événement error.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">error</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet d’événement <codeph class="+ topic/ph pr-d/codeph ">error</codeph>. 
	<p class="- topic/p ">Les propriétés de cet événement sont les suivantes :</p>
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">L’objet qui traite activement l’objet Event avec un écouteur d’événements.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Objet qui subit l’échec de l’opération réseau.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">text</codeph></entry><entry class="- topic/entry ">Texte à afficher en tant que message d’erreur. </entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:ErrorEvent:errorID:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">errorID</apiName><shortdesc class="- topic/shortdesc ">
	Contient le numéro de référence associé à l’erreur spécifique.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">int</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Contient le numéro de référence associé à l’erreur spécifique. Pour un objet ErrorEvent personnalisé, ce nombre correspond à la valeur du paramètre <codeph class="+ topic/ph pr-d/codeph ">id</codeph> fourni dans le constructeur. 
	
	</apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.events:SoftKeyboardTrigger" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">SoftKeyboardTrigger</apiName><shortdesc class="- topic/shortdesc ">
	La classe SoftKeyboardTrigger définit les valeurs possibles de la propriété triggerType de la classe SoftKeyboardEvent.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2.6" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Flash" version="10.2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Définit les valeurs possibles de la propriété triggerType de la classe SoftKeyboardEvent.
	</apiTipText></apiTipTexts><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	La classe SoftKeyboardTrigger définit les valeurs possibles de la propriété <codeph class="+ topic/ph pr-d/codeph ">triggerType</codeph> de la classe SoftKeyboardEvent. Ces valeurs indiquent le type d’action ayant déclenché un événement d’activation SoftKeyboard.
	
	</apiDesc></apiClassifierDetail><apiValue id="flash.events:SoftKeyboardTrigger:CONTENT_TRIGGERED" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">CONTENT_TRIGGERED</apiName><shortdesc class="- topic/shortdesc ">
	Un appel de fonction a déclenché l’événement.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2.6" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Flash" version="10.2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">contentTriggered</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Indique qu’un appel de fonction a invoqué l’événement.
	</apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Un appel de fonction a déclenché l’événement.
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:SoftKeyboardTrigger:USER_TRIGGERED" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">USER_TRIGGERED</apiName><shortdesc class="- topic/shortdesc ">
	Une action de l’utilisateur a déclenché l’événement.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2.6" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Flash" version="10.2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">userTriggered</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Indique qu’une action de l’utilisateur a invoqué l’événement.
	</apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Une action de l’utilisateur a déclenché l’événement. Les actions utilisateur les plus courantes pouvant déclencher cet événement sont la fermeture explicite du clavier ou l’appui sur la touche Retour, entre autres.
	
	</apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.events:TransformGestureEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">TransformGestureEvent</apiName><shortdesc class="- topic/shortdesc "> 
 La classe TransformGestureEvent permet de gérer des événements de mouvement complexes (tels que le déplacement de doigts sur un écran tactile) que le périphérique ou le système d’exploitation interprète comme un geste.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">prend en charge la gestion des événements pour les actions tactiles
 
 </apiTipText></apiTipTexts><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:GestureEvent</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
 La classe TransformGestureEvent permet de gérer des événements de mouvement complexes (tels que le déplacement de doigts sur un écran tactile) que le périphérique ou le système d’exploitation interprète comme un geste. Un geste peut contenir un ou plusieurs points tactiles. Lorsqu’un utilisateur interagit avec un périphérique, par exemple avec un téléphone portable ou une tablette munis d’un écran tactile, il touche généralement l’écran et se déplace dessus avec ses doigts ou un dispositif de pointage. Vous pouvez développer des applications qui répondent à cette action de l’utilisateur à l’aide des classes GestureEvent, PressAndTapGestureEvent et TransformGestureEvent. Vous pouvez créer des écouteurs d’événement à l’aide des types d’événements définis ici ou dans les classes GestureEvent et TouchEvent associées. Vous pouvez ensuite utiliser les propriétés et les méthodes de ces classes pour construire des gestionnaires d’événement qui répondent aux mouvements tactiles de l’utilisateur sur le périphérique.
 <p class="- topic/p ">Un périphérique ou un système d’exploitation interprète les gestes. Ainsi, différents périphériques ou systèmes d’exploitation ont différentes exigences selon le type de mouvement individuel. Un glissement sur un périphérique peut requérir un mouvement d’entrée différent qu’un glissement sur un autre périphérique. Consultez la documentation du matériel ou du système d’exploitation pour savoir comment le périphérique ou le système d’exploitation interprète le contact comme mouvement spécifique.</p>
 <p class="- topic/p ">Utilisez la classe Multitouch pour activer et gérer la prise en charge des actions tactiles par l’environnement actuel.</p>
 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Remarque :</b> lorsque les objets sont imbriqués dans la liste d’affichage, les événements tactiles ciblent l’objet le plus profondément imbriqué et visible dans la liste d’affichage. Cet objet est appelé le nœud cible. Pour que l’ancêtre d’un nœud cible (objet contenant le nœud cible dans la liste d’affichage) reçoive la notification d’un événement tactile, utilisez <codeph class="+ topic/ph pr-d/codeph ">EventDispatcher.addEventListener()</codeph> sur le nœud de l’ancêtre en définissant le paramètre type sur l’événement tactile spécifique que vous souhaitez détecter.</p>
 <p class="- topic/p ">Lorsque l’utilisateur est en contact avec le périphérique, les propriétés d’échelle, de rotation et de décalage de l’objet TransformGestureEvent sont les valeurs incrémentielles de l’événement de mouvement précédent. Par exemple, à mesure qu’un mouvement augmente la taille d’un objet d’affichage, les valeurs d’échelle peuvent suivre la séquence <codeph class="+ topic/ph pr-d/codeph ">1.03</codeph>, <codeph class="+ topic/ph pr-d/codeph ">1.01</codeph>, <codeph class="+ topic/ph pr-d/codeph ">1.01</codeph>, <codeph class="+ topic/ph pr-d/codeph ">1.02</codeph>, qui indique que l’objet d’affichage a été mis à l’échelle à 1.0717 fois sa taille d’origine vers la fin du mouvement.</p>
 <p class="- topic/p ">Pour les objets TransformGestureEvent, les propriétés non modifiées par le mouvement actuel sont définies sur des valeurs d’identité. Par exemple, un panoramique ne présente aucune transformation par rotation ou par mise à l’échelle ; ainsi, la valeur <codeph class="+ topic/ph pr-d/codeph ">rotation</codeph> de l’objet d’événement est <codeph class="+ topic/ph pr-d/codeph ">0</codeph>, et les propriétés <codeph class="+ topic/ph pr-d/codeph ">scaleX</codeph> et <codeph class="+ topic/ph pr-d/codeph ">scaleY</codeph> ont pour valeur <codeph class="+ topic/ph pr-d/codeph ">1</codeph>.</p>
 </apiDesc><example conref="examples\TransformGestureEventExample.as" class="- topic/example "> L’exemple suivant illustre la gestion d’événements pour les événements <codeph class="+ topic/ph pr-d/codeph ">GESTURE_ROTATE</codeph>. Lorsque l’utilisateur effectue un mouvement de rotation sur le périphérique tactile, mySprite pivote et myTextField se remplit avec la phase actuelle.
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
Multitouch.inputMode = MultitouchInputMode.GESTURE;

var mySprite = new Sprite();
mySprite.addEventListener(TransformGestureEvent.GESTURE_ROTATE , onRotate );
mySprite.graphics.beginFill(0x336699);
mySprite.graphics.drawRect(0, 0, 100, 80);
var myTextField = new TextField();
myTextField.y = 200;
addChild(mySprite);
addChild(myTextField);

function onRotate(evt:TransformGestureEvent):void {

    evt.target.rotation -= 45;

    if (evt.phase==GesturePhase.BEGIN) {
        myTextField.text = "Begin";
    }
    if (evt.phase==GesturePhase.UPDATE) {
        myTextField.text = "Update";
    }
    if (evt.phase==GesturePhase.END) {
        myTextField.text = "End";
    }
}
</codeblock></example><example conref="examples\TransformGestureExample2.as" class="- topic/example "> L’exemple suivant indique comment gérer les événements de mouvement de transformation. Cet exemple part du principe que vous disposez d’une image intitulée african_elephant.jpg sur votre système local et dans le même répertoire que la classe TransformGestureExample2. Cet exemple est fourni par Christian Cantrell, qui donne de plus amples explications dans l’article suivant : <xref href="http://www.adobe.com/devnet/flash/articles/multitouch_gestures.html" scope="external" class="- topic/xref ">Multi-touch and gesture support on the Flash Platform</xref> (disponible en anglais uniquement). 
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
 package
{
    import flash.display.Bitmap;
    import flash.display.Sprite;
    import flash.events.TransformGestureEvent;
    import flash.text.TextField;
    import flash.text.TextFormat;
    import flash.ui.Multitouch;
    import flash.ui.MultitouchInputMode;
    
    [SWF(width=320, height=460, frameRate=24, backgroundColor=0x000000)]
    public class TransformGestureExample2 extends Sprite
    {
        [Embed(source="african_elephant.jpg")]
        public var ElephantImage:Class;
        public var scaleDebug:TextField;
        public var rotateDebug:TextField;

        public function TransformGestureExample2()
        {
            // Debug
            var tf:TextFormat = new TextFormat();
            tf.color = 0xffffff;
            tf.font = "Helvetica";
            tf.size = 11;
            this.scaleDebug = new TextField();
            this.scaleDebug.width = 310;
            this.scaleDebug.defaultTextFormat = tf;
            this.scaleDebug.x = 2;
            this.scaleDebug.y = 2;
            this.stage.addChild(this.scaleDebug);
            this.rotateDebug = new TextField();
            this.rotateDebug.width = 310;
            this.rotateDebug.defaultTextFormat = tf;
            this.rotateDebug.x = 2;
            this.rotateDebug.y = 15;
            this.stage.addChild(this.rotateDebug);

            var elephantBitmap:Bitmap = new ElephantImage();
            var elephant:Sprite = new Sprite();
            
            elephant.addChild(elephantBitmap);
            
            elephant.x = 160;
            elephant.y = 230;
            
            elephantBitmap.x = (300 - (elephantBitmap.bitmapData.width / 2)) * -1;
            elephantBitmap.y = (400 - (elephantBitmap.bitmapData.height / 2)) *-1;
            
            this.addChild(elephant);

            Multitouch.inputMode = MultitouchInputMode.GESTURE;
            elephant.addEventListener(TransformGestureEvent.GESTURE_ZOOM, onZoom);
            elephant.addEventListener(TransformGestureEvent.GESTURE_ROTATE, onRotate);
        }
        
        private function onZoom(e:TransformGestureEvent):void
        {
            this.scaleDebug.text = (e.scaleX + ", " + e.scaleY);
            var elephant:Sprite = e.target as Sprite;
            elephant.scaleX *= e.scaleX;
            elephant.scaleY *= e.scaleY;
        }
        
        private function onRotate(e:TransformGestureEvent):void
        {
            var elephant:Sprite = e.target as Sprite;
            this.rotateDebug.text = String(e.rotation);
            elephant.rotation += e.rotation;
        }
    }
}
</codeblock></example></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.ui.xml#Multitouch" class="- topic/link "><linktext class="- topic/linktext ">flash.ui.Multitouch</linktext></link><link href="flash.events.xml#TouchEvent" class="- topic/link "><linktext class="- topic/linktext ">flash.events.TouchEvent</linktext></link><link href="flash.events.xml#GestureEvent" class="- topic/link "><linktext class="- topic/linktext ">flash.events.GestureEvent</linktext></link><link href="flash.events.xml#PressAndTapGestureEvent" class="- topic/link "><linktext class="- topic/linktext ">flash.events.PressAndTapGestureEvent</linktext></link><link href="flash.events.xml#MouseEvent" class="- topic/link "><linktext class="- topic/linktext ">flash.events.MouseEvent</linktext></link><link href="flash.events.xml#EventDispatcher/addEventListener()" class="- topic/link "><linktext class="- topic/linktext ">flash.events.EventDispatcher.addEventListener()</linktext></link></related-links><adobeApiEvent id="flash.events:TransformGestureEvent:GESTURE_PAN_gesturePan" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">gesturePan</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:TransformGestureEvent:GESTURE_PAN</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:TransformGestureEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef><example conref="examples\TransformGesture_pan.as" class="- topic/example "> L’exemple suivant illustre la gestion d’événements pour les événements <codeph class="+ topic/ph pr-d/codeph ">GESTURE_PAN</codeph>. Lorsque l’utilisateur effectue un mouvement de panoramique sur le périphérique tactile, myTextField se remplit avec la phase actuelle.
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
Multitouch.inputMode = MultitouchInputMode.GESTURE;

var mySprite = new Sprite();
mySprite.addEventListener(TransformGestureEvent.GESTURE_PAN , onPan);
mySprite.graphics.beginFill(0x336699);
mySprite.graphics.drawRect(0, 0, 100, 80);
var myTextField = new TextField();
myTextField.y = 200;
addChild(mySprite);
addChild(myTextField);

function onPan(evt:TransformGestureEvent):void {

    evt.target.localX++;

    if (evt.phase==GesturePhase.BEGIN) {
        myTextField.text = "Begin";
    }
    if (evt.phase==GesturePhase.UPDATE) {
        myTextField.text = "Update";
    }
    if (evt.phase==GesturePhase.END) {
        myTextField.text = "End";
    }
}
</codeblock></example></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:gesturePan" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.gesturePan</linktext></link><link href="flash.events.xml#GesturePhase" class="- topic/link "><linktext class="- topic/linktext ">flash.events.GesturePhase</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:TransformGestureEvent:GESTURE_ROTATE_gestureRotate" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">gestureRotate</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:TransformGestureEvent:GESTURE_ROTATE</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:TransformGestureEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef><example conref="examples\TransformGestureEventExample.as" class="- topic/example "> L’exemple suivant illustre la gestion d’événements pour les événements <codeph class="+ topic/ph pr-d/codeph ">GESTURE_ROTATE</codeph>. Lorsque l’utilisateur effectue un mouvement de rotation sur le périphérique tactile, mySprite pivote et myTextField se remplit avec la phase actuelle.
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
Multitouch.inputMode = MultitouchInputMode.GESTURE;

var mySprite = new Sprite();
mySprite.addEventListener(TransformGestureEvent.GESTURE_ROTATE , onRotate );
mySprite.graphics.beginFill(0x336699);
mySprite.graphics.drawRect(0, 0, 100, 80);
var myTextField = new TextField();
myTextField.y = 200;
addChild(mySprite);
addChild(myTextField);

function onRotate(evt:TransformGestureEvent):void {

    evt.target.rotation -= 45;

    if (evt.phase==GesturePhase.BEGIN) {
        myTextField.text = "Begin";
    }
    if (evt.phase==GesturePhase.UPDATE) {
        myTextField.text = "Update";
    }
    if (evt.phase==GesturePhase.END) {
        myTextField.text = "End";
    }
}
</codeblock></example></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:gestureRotate" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.gestureRotate</linktext></link><link href="flash.events.xml#GesturePhase" class="- topic/link "><linktext class="- topic/linktext ">flash.events.GesturePhase</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:TransformGestureEvent:GESTURE_SWIPE_gestureSwipe" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">gestureSwipe</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:TransformGestureEvent:GESTURE_SWIPE</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:TransformGestureEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef><example conref="examples\TransformGesture_swipe.as" class="- topic/example "> L’exemple suivant illustre la gestion d’événements pour les événements <codeph class="+ topic/ph pr-d/codeph ">GESTURE_SWIPE</codeph>. Lorsque l’utilisateur effectue un mouvement de glissement sur le périphérique tactile, myTextField se remplit avec la phase <codeph class="+ topic/ph pr-d/codeph ">all</codeph> (unique phase pour les événements de glissement).
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
Multitouch.inputMode = MultitouchInputMode.GESTURE;

var mySprite = new Sprite();
mySprite.addEventListener(TransformGestureEvent.GESTURE_SWIPE , onSwipe);
mySprite.graphics.beginFill(0x336699);
mySprite.graphics.drawRect(0, 0, 100, 80);
var myTextField = new TextField();
myTextField.y = 200;
addChild(mySprite);
addChild(myTextField);

function onSwipe(evt:TransformGestureEvent):void {

    if (evt.offsetX == 1 ) {
    myTextField.text = "right";
    }
    if (evt.offsetY == -1) {
    myTextField.text = "up";
    }
    myTextField.text = evt.phase;

}
</codeblock></example></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:gestureSwipe" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.gestureSwipe</linktext></link><link href="flash.events.xml#GesturePhase" class="- topic/link "><linktext class="- topic/linktext ">flash.events.GesturePhase</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:TransformGestureEvent:GESTURE_ZOOM_gestureZoom" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">gestureZoom</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:TransformGestureEvent:GESTURE_ZOOM</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:TransformGestureEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef><example conref="examples\TransformGesture_zoom.as" class="- topic/example "> L’exemple suivant illustre la gestion d’événements pour les événements <codeph class="+ topic/ph pr-d/codeph ">GESTURE_ZOOM</codeph>. Lorsque l’utilisateur effectue un mouvement de zoom sur le périphérique tactile, myTextField se remplit avec la phase actuelle.
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
Multitouch.inputMode = MultitouchInputMode.GESTURE;

var mySprite = new Sprite();
mySprite.addEventListener(TransformGestureEvent.GESTURE_ZOOM , onZoom);
mySprite.graphics.beginFill(0x336699);
mySprite.graphics.drawRect(0, 0, 100, 80);
var myTextField = new TextField();
myTextField.y = 200;
addChild(mySprite);
addChild(myTextField);

function onZoom(evt:TransformGestureEvent):void {

    evt.target.scaleX++;

    if (evt.phase==GesturePhase.BEGIN) {
        myTextField.text = "Begin";
    }
    if (evt.phase==GesturePhase.UPDATE) {
        myTextField.text = "Update";
    }
    if (evt.phase==GesturePhase.END) {
        myTextField.text = "End";
    }
}
</codeblock></example></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:gestureZoom" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.gestureZoom</linktext></link><link href="flash.events.xml#GesturePhase" class="- topic/link "><linktext class="- topic/linktext ">flash.events.GesturePhase</linktext></link></related-links></adobeApiEvent><apiConstructor id="flash.events:TransformGestureEvent:TransformGestureEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">TransformGestureEvent</apiName><shortdesc class="- topic/shortdesc ">
    Crée un objet Event contenant des informations sur des événements tactiles multipoints complexes, notamment lorsqu’un utilisateur fait glisser son doigt sur un écran.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">type</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc "> Type de l’événement. Les valeurs possibles sont les suivantes : <codeph class="+ topic/ph pr-d/codeph ">TransformGestureEvent.GESTURE_PAN</codeph>, <codeph class="+ topic/ph pr-d/codeph ">TransformGestureEvent.GESTURE_ROTATE</codeph>, <codeph class="+ topic/ph pr-d/codeph ">TransformGestureEvent.GESTURE_SWIPE</codeph> et <codeph class="+ topic/ph pr-d/codeph ">TransformGestureEvent.GESTURE_ZOOM</codeph>. 
	
    </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">bubbles</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">true</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc "> Détermine si l’objet Event prend part à la phase de propagation du flux d’événements.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">cancelable</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Détermine si l’objet d’événement peut être annulé.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">phase</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Cette valeur contrôle le début, la progression et la fin d’une action tactile. Les valeurs possibles sont les suivantes : <codeph class="+ topic/ph pr-d/codeph ">GesturePhase.BEGIN</codeph>, <codeph class="+ topic/ph pr-d/codeph ">GesturePhase.END</codeph> et <codeph class="+ topic/ph pr-d/codeph ">GesturePhase.UPDATE</codeph>.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">localX</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Coordonnée horizontale à laquelle l’événement s’est produit par rapport à l’objet d’affichage conteneur.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">localY</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Coordonnée verticale à laquelle l’événement s’est produit par rapport à l’objet d’affichage conteneur.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">scaleX</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">1.0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Echelle horizontale de l’objet d’affichage.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">scaleY</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">1.0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Echelle verticale de l’objet d’affichage.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">rotation</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Angle de rotation, en degrés, de l’objet d’affichage le long de l’axe z.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">offsetX</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Translation horizontale de l’objet d’affichage par rapport à sa position d’origine.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">offsetY</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Translation verticale de l’objet d’affichage par rapport à sa position d’origine.	
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ctrlKey</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Sous Windows ou Linux, indique si la touche Ctrl est activée. Sous Mac, indique si la touche Ctrl ou la touche Commande est activée.
    </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">altKey</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Indique si la touche Alt est activée (Windows ou Linux uniquement).
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">shiftKey</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Indique si la touche Maj est activée.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">commandKey</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">(AIR uniquement) Indique si la touche Commande est activée (Mac uniquement). Ce paramètre est destiné à Adobe AIR uniquement ; ne le définissez pas pour le contenu de Flash Player.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">controlKey</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">(AIR uniquement) Indique si la touche Contrôle ou Ctrl est activée (Mac uniquement). Ce paramètre est destiné à Adobe AIR uniquement ; ne le définissez pas pour le contenu de Flash Player.
    
    </apiDesc></apiParam><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Constructeur associé aux objets TransformGestureEvent.
	</apiTipText></apiTipTexts></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Crée un objet Event contenant des informations sur des événements tactiles multipoints complexes, notamment lorsqu’un utilisateur fait glisser son doigt sur un écran. Les objets Event sont transmis en tant que paramètres aux écouteurs d’événements.
    
	
    </apiDesc></apiConstructorDetail><related-links class="- topic/related-links "><link href="flash.ui.xml#Multitouch" class="- topic/link "><linktext class="- topic/linktext ">flash.ui.Multitouch</linktext></link><link href="flash.events.xml#TouchEvent" class="- topic/link "><linktext class="- topic/linktext ">flash.events.TouchEvent</linktext></link><link href="flash.events.xml#GestureEvent" class="- topic/link "><linktext class="- topic/linktext ">flash.events.GestureEvent</linktext></link><link href="flash.events.xml#PressAndTapGestureEvent" class="- topic/link "><linktext class="- topic/linktext ">flash.events.PressAndTapGestureEvent</linktext></link><link href="flash.events.xml#GesturePhase" class="- topic/link "><linktext class="- topic/linktext ">flash.events.GesturePhase</linktext></link><link href="flash.events.xml#MouseEvent" class="- topic/link "><linktext class="- topic/linktext ">flash.events.MouseEvent</linktext></link><link href="flash.events.xml#EventDispatcher/addEventListener()" class="- topic/link "><linktext class="- topic/linktext ">flash.events.EventDispatcher.addEventListener()</linktext></link></related-links></apiConstructor><apiOperation id="flash.events:TransformGestureEvent:clone" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">clone</apiName><shortdesc class="- topic/shortdesc ">
		Crée une copie de l’objet TransformGestureEvent et définit la valeur de chaque propriété de sorte qu’elle corresponde à la valeur d’origine.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Nouvel objet TransformGestureEvent dont les propriétés ont la même valeur que celles de l’objet d’origine.
		 
		 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.events:Event</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		Crée une copie de l’objet TransformGestureEvent et définit la valeur de chaque propriété de sorte qu’elle corresponde à la valeur d’origine.
		
		</apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.events:TransformGestureEvent:toString" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">toString</apiName><shortdesc class="- topic/shortdesc ">
	Renvoie une chaîne répertoriant toutes les propriétés de l’objet TransformGestureEvent.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Chaîne répertoriant toutes les propriétés de l’objet TransformGestureEvent.
	 
	 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Renvoie une chaîne répertoriant toutes les propriétés de l’objet TransformGestureEvent. La chaîne est écrite au format suivant :
	<p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">[TransformGestureEvent type=<i class="+ topic/ph hi-d/i ">valeur</i> bubbles=<i class="+ topic/ph hi-d/i ">valeur</i> cancelable=<i class="+ topic/ph hi-d/i ">valeur</i> ... ]</codeph></p>
	
	</apiDesc></apiOperationDetail></apiOperation><apiValue id="flash.events:TransformGestureEvent:GESTURE_PAN" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">GESTURE_PAN</apiName><shortdesc class="- topic/shortdesc ">
     Définit la valeur de la propriété type d’un objet d’événement tactile GESTURE_PAN.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">gesturePan</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet d’événement tactile <codeph class="+ topic/ph pr-d/codeph ">GESTURE_PAN</codeph>.
	 
	 <p class="- topic/p ">L’objet TransformGestureEvent possède les propriétés suivantes :</p>
	 
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">altKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> si la touche Alt est activée (Windows ou Linux).</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">commandKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> sur le Mac si la touche Commande est activée ; <codeph class="+ topic/ph pr-d/codeph ">false</codeph> si elle est désactivée. Toujours <codeph class="+ topic/ph pr-d/codeph ">false</codeph> sur Windows.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">controlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> si la touche Ctrl ou Contrôle est activée ; <codeph class="+ topic/ph pr-d/codeph ">false</codeph> si elle est désactivée.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">ctrlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> sous Windows ou Linux si la touche Ctrl est enfoncée. <codeph class="+ topic/ph pr-d/codeph ">true</codeph> sur Mac si la touche Ctrl ou la touche Commande est activée. Sinon, la valeur <codeph class="+ topic/ph pr-d/codeph ">false</codeph> est renvoyée.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">L’objet qui traite activement l’objet Event avec un écouteur d’événements.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">phase</codeph></entry><entry class="- topic/entry ">Phase actuelle du flux d’événements ; une valeur de la classe GesturePhase.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">localX</codeph></entry><entry class="- topic/entry ">Coordonnée horizontale à laquelle l’événement s’est produit par rapport à l’objet d’affichage conteneur.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">localY</codeph></entry><entry class="- topic/entry ">Coordonnée verticale à laquelle l’événement s’est produit par rapport à l’objet d’affichage conteneur.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">scaleX</codeph></entry><entry class="- topic/entry ">Echelle horizontale de l’objet d’affichage depuis l’événement gesture précédent. Pour les panoramiques, cette valeur est <codeph class="+ topic/ph pr-d/codeph ">1</codeph>.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">scaleY</codeph></entry><entry class="- topic/entry ">Echelle verticale de l’objet d’affichage depuis l’événement gesture précédent. Pour les panoramiques, cette valeur est <codeph class="+ topic/ph pr-d/codeph ">1</codeph>.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">rotation</codeph></entry><entry class="- topic/entry ">Angle de rotation actuel de l’objet d’affichage le long de l’axe z depuis l’événement gesture précédent, en degrés. Pour les panoramiques, cette valeur est <codeph class="+ topic/ph pr-d/codeph ">0</codeph>.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">offsetX</codeph></entry><entry class="- topic/entry ">Translation horizontale de l’objet d’affichage à partir la position de ce dernier lors de l’événement gesture précédent.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">offsetY</codeph></entry><entry class="- topic/entry ">Translation verticale de l’objet d’affichage à partir de la position de ce dernier lors de l’événement gesture précédent.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">shiftKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> si la touche Maj est activée ; <codeph class="+ topic/ph pr-d/codeph ">false</codeph> si elle ne l’est pas.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Occurrence d’InteractiveObject sous le dispositif de pointage. La propriété <codeph class="+ topic/ph pr-d/codeph ">target</codeph> ne correspond pas toujours à l’objet de la liste d’affichage qui est associé à l’écouteur d’événement. Utilisez la propriété <codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph> pour accéder à l’objet de la liste d’affichage qui traite actuellement l’événement.</entry></row></tbody></tgroup></adobetable>
	 
	 </apiDesc><example conref="examples\TransformGesture_pan.as" class="- topic/example "> L’exemple suivant illustre la gestion d’événements pour les événements <codeph class="+ topic/ph pr-d/codeph ">GESTURE_PAN</codeph>. Lorsque l’utilisateur effectue un mouvement de panoramique sur le périphérique tactile, myTextField se remplit avec la phase actuelle.
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
Multitouch.inputMode = MultitouchInputMode.GESTURE;

var mySprite = new Sprite();
mySprite.addEventListener(TransformGestureEvent.GESTURE_PAN , onPan);
mySprite.graphics.beginFill(0x336699);
mySprite.graphics.drawRect(0, 0, 100, 80);
var myTextField = new TextField();
myTextField.y = 200;
addChild(mySprite);
addChild(myTextField);

function onPan(evt:TransformGestureEvent):void {

    evt.target.localX++;

    if (evt.phase==GesturePhase.BEGIN) {
        myTextField.text = "Begin";
    }
    if (evt.phase==GesturePhase.UPDATE) {
        myTextField.text = "Update";
    }
    if (evt.phase==GesturePhase.END) {
        myTextField.text = "End";
    }
}
</codeblock></example></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:gesturePan" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.gesturePan</linktext></link><link href="flash.events.xml#GesturePhase" class="- topic/link "><linktext class="- topic/linktext ">flash.events.GesturePhase</linktext></link></related-links></apiValue><apiValue id="flash.events:TransformGestureEvent:GESTURE_ROTATE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">GESTURE_ROTATE</apiName><shortdesc class="- topic/shortdesc ">
     Définit la valeur de la propriété type d’un objet d’événement tactile GESTURE_ROTATE.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">gestureRotate</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet d’événement tactile <codeph class="+ topic/ph pr-d/codeph ">GESTURE_ROTATE</codeph>.
	 
	 <p class="- topic/p ">L’objet TransformGestureEvent possède les propriétés suivantes :</p>
	 
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">altKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> si la touche Alt est activée (Windows ou Linux).</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">commandKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> sur le Mac si la touche Commande est activée ; <codeph class="+ topic/ph pr-d/codeph ">false</codeph> si elle est désactivée. Toujours <codeph class="+ topic/ph pr-d/codeph ">false</codeph> sur Windows.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">controlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> si la touche Ctrl ou Contrôle est activée ; <codeph class="+ topic/ph pr-d/codeph ">false</codeph> si elle est désactivée.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">ctrlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> sous Windows ou Linux si la touche Ctrl est enfoncée. <codeph class="+ topic/ph pr-d/codeph ">true</codeph> sur Mac si la touche Ctrl ou la touche Commande est activée. Sinon, la valeur <codeph class="+ topic/ph pr-d/codeph ">false</codeph> est renvoyée.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">L’objet qui traite activement l’objet Event avec un écouteur d’événements.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">phase</codeph></entry><entry class="- topic/entry ">Phase actuelle du flux d’événements ; une valeur de la classe GesturePhase.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">localX</codeph></entry><entry class="- topic/entry ">Coordonnée horizontale à laquelle l’événement s’est produit par rapport à l’objet d’affichage conteneur.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">localY</codeph></entry><entry class="- topic/entry ">Coordonnée verticale à laquelle l’événement s’est produit par rapport à l’objet d’affichage conteneur.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">scaleX</codeph></entry><entry class="- topic/entry ">Echelle horizontale de l’objet d’affichage depuis l’événement gesture précédent.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">scaleY</codeph></entry><entry class="- topic/entry ">Echelle verticale de l’objet d’affichage depuis l’événement gesture précédent.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">rotation</codeph></entry><entry class="- topic/entry ">Angle de rotation actuel de l’objet d’affichage le long de l’axe z depuis l’événement gesture précédent, en degrés.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">offsetX</codeph></entry><entry class="- topic/entry ">Translation horizontale de l’objet d’affichage à partir la position de ce dernier lors de l’événement gesture précédent.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">offsetY</codeph></entry><entry class="- topic/entry ">Translation verticale de l’objet d’affichage à partir de la position de ce dernier lors de l’événement gesture précédent.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">shiftKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> si la touche Maj est activée ; <codeph class="+ topic/ph pr-d/codeph ">false</codeph> si elle ne l’est pas.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Occurrence d’InteractiveObject sous le dispositif de pointage. La propriété <codeph class="+ topic/ph pr-d/codeph ">target</codeph> ne correspond pas toujours à l’objet de la liste d’affichage qui est associé à l’écouteur d’événement. Utilisez la propriété <codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph> pour accéder à l’objet de la liste d’affichage qui traite actuellement l’événement.</entry></row></tbody></tgroup></adobetable>
	 
	 </apiDesc><example conref="examples\TransformGestureEventExample.as" class="- topic/example "> L’exemple suivant illustre la gestion d’événements pour les événements <codeph class="+ topic/ph pr-d/codeph ">GESTURE_ROTATE</codeph>. Lorsque l’utilisateur effectue un mouvement de rotation sur le périphérique tactile, mySprite pivote et myTextField se remplit avec la phase actuelle.
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
Multitouch.inputMode = MultitouchInputMode.GESTURE;

var mySprite = new Sprite();
mySprite.addEventListener(TransformGestureEvent.GESTURE_ROTATE , onRotate );
mySprite.graphics.beginFill(0x336699);
mySprite.graphics.drawRect(0, 0, 100, 80);
var myTextField = new TextField();
myTextField.y = 200;
addChild(mySprite);
addChild(myTextField);

function onRotate(evt:TransformGestureEvent):void {

    evt.target.rotation -= 45;

    if (evt.phase==GesturePhase.BEGIN) {
        myTextField.text = "Begin";
    }
    if (evt.phase==GesturePhase.UPDATE) {
        myTextField.text = "Update";
    }
    if (evt.phase==GesturePhase.END) {
        myTextField.text = "End";
    }
}
</codeblock></example></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:gestureRotate" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.gestureRotate</linktext></link><link href="flash.events.xml#GesturePhase" class="- topic/link "><linktext class="- topic/linktext ">flash.events.GesturePhase</linktext></link></related-links></apiValue><apiValue id="flash.events:TransformGestureEvent:GESTURE_SWIPE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">GESTURE_SWIPE</apiName><shortdesc class="- topic/shortdesc ">
     Définit la valeur de la propriété type d’un objet d’événement tactile GESTURE_SWIPE.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">gestureSwipe</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet d’événement tactile <codeph class="+ topic/ph pr-d/codeph ">GESTURE_SWIPE</codeph>.
	 
	 <p class="- topic/p ">L’objet TransformGestureEvent possède les propriétés suivantes :</p>
	 
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">altKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> si la touche Alt est activée (Windows ou Linux).</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">commandKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> sur le Mac si la touche Commande est activée ; <codeph class="+ topic/ph pr-d/codeph ">false</codeph> si elle est désactivée. Toujours <codeph class="+ topic/ph pr-d/codeph ">false</codeph> sur Windows.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">controlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> si la touche Ctrl ou Contrôle est activée ; <codeph class="+ topic/ph pr-d/codeph ">false</codeph> si elle est désactivée.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">ctrlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> sous Windows ou Linux si la touche Ctrl est enfoncée. <codeph class="+ topic/ph pr-d/codeph ">true</codeph> sur Mac si la touche Ctrl ou la touche Commande est activée. Sinon, la valeur <codeph class="+ topic/ph pr-d/codeph ">false</codeph> est renvoyée.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">L’objet qui traite activement l’objet Event avec un écouteur d’événements.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">phase</codeph></entry><entry class="- topic/entry ">Phase actuelle du flux d’événements. Pour les événements de glissement, cette valeur est toujours <codeph class="+ topic/ph pr-d/codeph ">all</codeph>, qui correspond à la valeur <codeph class="+ topic/ph pr-d/codeph ">GesturePhase.ALL</codeph> une fois l’événement distribué.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">localX</codeph></entry><entry class="- topic/entry ">Coordonnée horizontale à laquelle l’événement s’est produit par rapport au sprite conteneur.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">localY</codeph></entry><entry class="- topic/entry ">Coordonnée verticale à laquelle l’événement s’est produit par rapport au sprite conteneur.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">scaleX</codeph></entry><entry class="- topic/entry ">Echelle horizontale de l’objet d’affichage. Pour les mouvements de glissement, cette valeur est <codeph class="+ topic/ph pr-d/codeph ">1</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">scaleY</codeph></entry><entry class="- topic/entry ">Echelle verticale de l’objet d’affichage. Pour les mouvements de glissement, cette valeur est <codeph class="+ topic/ph pr-d/codeph ">1</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">rotation</codeph></entry><entry class="- topic/entry ">Angle de rotation, en degrés, de l’objet d’affichage le long de l’axe z. Pour les mouvements de glissement, cette valeur est <codeph class="+ topic/ph pr-d/codeph ">0</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">offsetX</codeph></entry><entry class="- topic/entry ">Indique la direction horizontale : 1 pour droite et -1 pour gauche.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">offsetY</codeph></entry><entry class="- topic/entry ">Indique la direction verticale : 1 pour bas et -1 pour haut.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">shiftKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> si la touche Maj est activée ; <codeph class="+ topic/ph pr-d/codeph ">false</codeph> si elle ne l’est pas.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Occurrence d’InteractiveObject sous le dispositif de pointage. La propriété <codeph class="+ topic/ph pr-d/codeph ">target</codeph> ne correspond pas toujours à l’objet de la liste d’affichage qui est associé à l’écouteur d’événement. Utilisez la propriété <codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph> pour accéder à l’objet de la liste d’affichage qui traite actuellement l’événement.</entry></row></tbody></tgroup></adobetable>
	 
	 </apiDesc><example conref="examples\TransformGesture_swipe.as" class="- topic/example "> L’exemple suivant illustre la gestion d’événements pour les événements <codeph class="+ topic/ph pr-d/codeph ">GESTURE_SWIPE</codeph>. Lorsque l’utilisateur effectue un mouvement de glissement sur le périphérique tactile, myTextField se remplit avec la phase <codeph class="+ topic/ph pr-d/codeph ">all</codeph> (unique phase pour les événements de glissement).
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
Multitouch.inputMode = MultitouchInputMode.GESTURE;

var mySprite = new Sprite();
mySprite.addEventListener(TransformGestureEvent.GESTURE_SWIPE , onSwipe);
mySprite.graphics.beginFill(0x336699);
mySprite.graphics.drawRect(0, 0, 100, 80);
var myTextField = new TextField();
myTextField.y = 200;
addChild(mySprite);
addChild(myTextField);

function onSwipe(evt:TransformGestureEvent):void {

    if (evt.offsetX == 1 ) {
    myTextField.text = "right";
    }
    if (evt.offsetY == -1) {
    myTextField.text = "up";
    }
    myTextField.text = evt.phase;

}
</codeblock></example></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:gestureSwipe" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.gestureSwipe</linktext></link><link href="flash.events.xml#GesturePhase" class="- topic/link "><linktext class="- topic/linktext ">flash.events.GesturePhase</linktext></link></related-links></apiValue><apiValue id="flash.events:TransformGestureEvent:GESTURE_ZOOM" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">GESTURE_ZOOM</apiName><shortdesc class="- topic/shortdesc ">
     Définit la valeur de la propriété type d’un objet d’événement tactile GESTURE_ZOOM.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">gestureZoom</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet d’événement tactile <codeph class="+ topic/ph pr-d/codeph ">GESTURE_ZOOM</codeph>.
	 
	 <p class="- topic/p ">L’objet TransformGestureEvent possède les propriétés suivantes :</p>
	 
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">altKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> si la touche Alt est activée (Windows ou Linux).</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">commandKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> sur le Mac si la touche Commande est activée ; <codeph class="+ topic/ph pr-d/codeph ">false</codeph> si elle est désactivée. Toujours <codeph class="+ topic/ph pr-d/codeph ">false</codeph> sur Windows.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">controlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> si la touche Ctrl ou Contrôle est activée ; <codeph class="+ topic/ph pr-d/codeph ">false</codeph> si elle est désactivée.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">ctrlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> sous Windows ou Linux si la touche Ctrl est enfoncée. <codeph class="+ topic/ph pr-d/codeph ">true</codeph> sur Mac si la touche Ctrl ou la touche Commande est activée. Sinon, la valeur <codeph class="+ topic/ph pr-d/codeph ">false</codeph> est renvoyée.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">L’objet qui traite activement l’objet Event avec un écouteur d’événements.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">phase</codeph></entry><entry class="- topic/entry ">Phase actuelle du flux d’événements ; une valeur de la classe GesturePhase.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">localX</codeph></entry><entry class="- topic/entry ">Coordonnée horizontale à laquelle l’événement s’est produit par rapport à l’objet d’affichage conteneur.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">localY</codeph></entry><entry class="- topic/entry ">Coordonnée verticale à laquelle l’événement s’est produit par rapport à l’objet d’affichage conteneur.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">scaleX</codeph></entry><entry class="- topic/entry ">Echelle horizontale de l’objet d’affichage depuis l’événement gesture précédent.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">scaleY</codeph></entry><entry class="- topic/entry ">Echelle verticale de l’objet d’affichage depuis l’événement gesture précédent.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">rotation</codeph></entry><entry class="- topic/entry ">Angle de rotation actuel de l’objet d’affichage le long de l’axe z depuis l’événement gesture précédent, en degrés.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">offsetX</codeph></entry><entry class="- topic/entry ">Translation horizontale de l’objet d’affichage à partir la position de ce dernier lors de l’événement gesture précédent.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">offsetY</codeph></entry><entry class="- topic/entry ">Translation verticale de l’objet d’affichage à partir de la position de ce dernier lors de l’événement gesture précédent.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">shiftKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> si la touche Maj est activée ; <codeph class="+ topic/ph pr-d/codeph ">false</codeph> si elle ne l’est pas.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Occurrence d’InteractiveObject sous le dispositif de pointage. La propriété <codeph class="+ topic/ph pr-d/codeph ">target</codeph> ne correspond pas toujours à l’objet de la liste d’affichage qui est associé à l’écouteur d’événement. Utilisez la propriété <codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph> pour accéder à l’objet de la liste d’affichage qui traite actuellement l’événement.</entry></row></tbody></tgroup></adobetable>
	 
	 </apiDesc><example conref="examples\TransformGesture_zoom.as" class="- topic/example "> L’exemple suivant illustre la gestion d’événements pour les événements <codeph class="+ topic/ph pr-d/codeph ">GESTURE_ZOOM</codeph>. Lorsque l’utilisateur effectue un mouvement de zoom sur le périphérique tactile, myTextField se remplit avec la phase actuelle.
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
Multitouch.inputMode = MultitouchInputMode.GESTURE;

var mySprite = new Sprite();
mySprite.addEventListener(TransformGestureEvent.GESTURE_ZOOM , onZoom);
mySprite.graphics.beginFill(0x336699);
mySprite.graphics.drawRect(0, 0, 100, 80);
var myTextField = new TextField();
myTextField.y = 200;
addChild(mySprite);
addChild(myTextField);

function onZoom(evt:TransformGestureEvent):void {

    evt.target.scaleX++;

    if (evt.phase==GesturePhase.BEGIN) {
        myTextField.text = "Begin";
    }
    if (evt.phase==GesturePhase.UPDATE) {
        myTextField.text = "Update";
    }
    if (evt.phase==GesturePhase.END) {
        myTextField.text = "End";
    }
}
</codeblock></example></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:gestureZoom" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.gestureZoom</linktext></link><link href="flash.events.xml#GesturePhase" class="- topic/link "><linktext class="- topic/linktext ">flash.events.GesturePhase</linktext></link></related-links></apiValue><apiValue id="flash.events:TransformGestureEvent:offsetX:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">offsetX</apiName><shortdesc class="- topic/shortdesc ">
	Translation horizontale de l’objet d’affichage, depuis l’événement gesture précédent.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Translation horizontale de l’objet d’affichage, depuis l’événement gesture précédent. 
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:TransformGestureEvent:offsetY:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">offsetY</apiName><shortdesc class="- topic/shortdesc ">
	Translation verticale de l’objet d’affichage, depuis l’événement gesture précédent.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Translation verticale de l’objet d’affichage, depuis l’événement gesture précédent. 
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:TransformGestureEvent:rotation:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">rotation</apiName><shortdesc class="- topic/shortdesc ">
	Angle de rotation actuel de l’objet d’affichage le long de l’axe z depuis l’événement gesture précédent, en degrés.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Angle de rotation actuel de l’objet d’affichage le long de l’axe z depuis l’événement gesture précédent, en degrés. 
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:TransformGestureEvent:scaleX:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">scaleX</apiName><shortdesc class="- topic/shortdesc ">
	Echelle horizontale de l’objet d’affichage, depuis l’événement gesture précédent.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Echelle horizontale de l’objet d’affichage, depuis l’événement gesture précédent. 
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:TransformGestureEvent:scaleY:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">scaleY</apiName><shortdesc class="- topic/shortdesc ">
	Echelle verticale de l’objet d’affichage, depuis l’événement gesture précédent.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Echelle verticale de l’objet d’affichage, depuis l’événement gesture précédent. 
	
	</apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.events:NativeDragEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">NativeDragEvent</apiName><shortdesc class="- topic/shortdesc ">
 Les événements de déplacement natifs sont distribués par les objets interactifs impliqués dans une opération de glisser-déposer.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:MouseEvent</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Les événements de déplacement natifs sont distribués par les objets interactifs impliqués dans une opération de glisser-déposer.
 
 <p class="- topic/p ">L’objet déclencheur distribue :</p> 
 <ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">nativeDragStart</codeph> — Lorsque l’opération de glissement commence.</li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">nativeDragUpdate</codeph> — Lorsque l’opération de glissement est en cours.</li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">nativeDragComplete</codeph> — Lorsque l’utilisateur relâche l’élément glissé (que l’opération déposer ait été acceptée ou non).</li></ul>
 
 <p class="- topic/p ">L’objet déclencheur est l’objet interactif transmis à l’objet NativeDragManager dans l’appel à <codeph class="+ topic/ph pr-d/codeph ">NativeDragManager.doDrag()</codeph> qui a commencé l’opération de glissement.</p>
 
 <p class="- topic/p ">Les objets interactifs de cible potentielle distribuent :</p>
 <ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">nativeDragEnter</codeph> — Lorsque l’opération glisser passe dans la limite de l’objet.</li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">nativeDragOver</codeph> — Lorsque l’opération glisser reste dans la limite de l’objet.</li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">nativeDragExit</codeph> — Lorsque l’opération glisser quitte la limite de l’objet.</li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">nativeDragDrop</codeph> — Lorsque l’utilisateur relâche l’élément glissé sur l’objet et que ce dernier a accepté l’opération déposer par un précédent appel à <codeph class="+ topic/ph pr-d/codeph ">NativeDragManager.acceptDragDrop()</codeph>.</li></ul>
 
 <p class="- topic/p ">Généralement, le gestionnaire de l’événement <codeph class="+ topic/ph pr-d/codeph ">nativeDragEnter</codeph> ou <codeph class="+ topic/ph pr-d/codeph ">nativeDragOver</codeph> évalue les données glissées et les actions glisser autorisées pour déterminer si un objet interactif peut accepter l’opération de dépôt. Pour spécifier qu’un objet interactif est une cible éligible, le gestionnaire d’événement doit appeler la fonction <codeph class="+ topic/ph pr-d/codeph ">NativeDragManager.acceptDrop()</codeph>, en transmettant une référence à l’objet. Si l’utilisateur relâche le bouton de sa souris sur l’objet désigné, ce dernier devient la cible de dépôt et déclenche l’événement <codeph class="+ topic/ph pr-d/codeph ">nativeDragDrop</codeph>.</p>
 
 <p class="- topic/p ">Tout objet de type InteractiveObject peut être un initiateur d’opération de glissement ou la cible d’une opération de dépôt.</p>
 
 </apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.desktop.xml#NativeDragManager" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.NativeDragManager</linktext></link><link href="flash.desktop.xml#Clipboard" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.Clipboard</linktext></link><link href="flash.desktop.xml#NativeDragOptions" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.NativeDragOptions</linktext></link><link href="flash.desktop.xml#NativeDragActions" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.NativeDragActions</linktext></link><link href="flash.display.xml#InteractiveObject" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject</linktext></link></related-links><adobeApiEvent id="flash.events:NativeDragEvent:NATIVE_DRAG_COMPLETE_nativeDragComplete" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">nativeDragComplete</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:NativeDragEvent:NATIVE_DRAG_COMPLETE</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:NativeDragEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Distribué par l’objet InteractiveObject source lorsqu’un mouvement de glisser-déposer se termine.
	 
	</apiTipText></apiTipTexts></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:nativeDragComplete" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.nativeDragComplete</linktext></link><link href="flash.desktop.xml#NativeDragActions" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.NativeDragActions</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:NativeDragEvent:NATIVE_DRAG_DROP_nativeDragDrop" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">nativeDragDrop</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:NativeDragEvent:NATIVE_DRAG_DROP</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:NativeDragEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Distribué par des objets InteractiveObject lorsqu’un mouvement de glisser-déposer se termine au-dessus de l’objet.
	 
	</apiTipText></apiTipTexts></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:nativeDragDrop" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.nativeDragDrop</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:NativeDragEvent:NATIVE_DRAG_ENTER_nativeDragEnter" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">nativeDragEnter</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:NativeDragEvent:NATIVE_DRAG_ENTER</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:NativeDragEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Distribué par des objets InteractiveObject lorsqu’un mouvement de glisser-déposer entre dans les limites de l’objet.
	 
	</apiTipText></apiTipTexts></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:nativeDragEnter" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.nativeDragEnter</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:NativeDragEvent:NATIVE_DRAG_EXIT_nativeDragExit" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">nativeDragExit</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:NativeDragEvent:NATIVE_DRAG_EXIT</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:NativeDragEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Distribué par des objets InteractiveObject lorsqu’un mouvement de glisser-déposer quitte les limites de l’objet.
	 
	</apiTipText></apiTipTexts></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:nativeDragExit" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.nativeDragExit</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:NativeDragEvent:NATIVE_DRAG_OVER_nativeDragOver" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">nativeDragOver</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:NativeDragEvent:NATIVE_DRAG_OVER</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:NativeDragEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Distribué par des objets InteractiveObject lorsqu’un mouvement de glisser-déposer survole l’objet.
	 
	</apiTipText></apiTipTexts></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:nativeDragOver" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.nativeDragOver</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:NativeDragEvent:NATIVE_DRAG_START_nativeDragStart" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">nativeDragStart</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:NativeDragEvent:NATIVE_DRAG_START</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:NativeDragEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Distribué par l’objet InteractiveObject source au début d’un mouvement de glisser-déposer natif.
	 
	</apiTipText></apiTipTexts></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:nativeDragStart" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.nativeDragStart</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:NativeDragEvent:NATIVE_DRAG_UPDATE_nativeDragUpdate" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">nativeDragUpdate</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:NativeDragEvent:NATIVE_DRAG_UPDATE</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:NativeDragEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Distribué par l’objet InteractiveObject source lorsqu’un mouvement de glisser-déposer est en cours.
	 
	</apiTipText></apiTipTexts></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:nativeDragUpdate" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.nativeDragUpdate</linktext></link></related-links></adobeApiEvent><apiConstructor id="flash.events:NativeDragEvent:NativeDragEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">NativeDragEvent</apiName><shortdesc class="- topic/shortdesc ">
    Crée un événement Event avec des informations spécifiques concernant des événements natifs drag-and-drop.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">type</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc "> Type de l’événement. Les valeurs possibles sont les suivantes : <codeph class="+ topic/ph pr-d/codeph ">NativeDragEvent.NATIVE_DRAG_START</codeph>, <codeph class="+ topic/ph pr-d/codeph ">NativeDragEvent.NATIVE_DRAG_UPDATE</codeph>, <codeph class="+ topic/ph pr-d/codeph ">NativeDragEvent.NATIVE_DRAG_ENTER</codeph>, <codeph class="+ topic/ph pr-d/codeph ">NativeDragEvent.NATIVE_DRAG_OVER</codeph>, <codeph class="+ topic/ph pr-d/codeph ">NativeDragEvent.NATIVE_DRAG_EXIT</codeph>, <codeph class="+ topic/ph pr-d/codeph ">NativeDragEvent.NATIVE_DRAG_DROP</codeph> et  <codeph class="+ topic/ph pr-d/codeph ">NativeDragEvent.NATIVE_DRAG_COMPLETE</codeph>.
	
    </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">bubbles</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Indique si l’objet Event prend part à la phase de propagation vers le haut (bubbling) du flux d’événements.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">cancelable</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">true</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Indique si l’objet Event peut être annulé.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">localX</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">unknown</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Coordonnée horizontale à laquelle l’événement s’est produit par rapport au sprite conteneur.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">localY</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">unknown</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Coordonnée verticale à laquelle l’événement s’est produit par rapport au sprite conteneur.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">relatedObject</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.display:InteractiveObject</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">L’objet d’affichage interactif connexe. 
    </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">clipboard</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.desktop:Clipboard</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">L’objet Clipboard contenant les données à transférer.
    </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">allowedActions</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.desktop:NativeDragOptions</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Objet NativeDragOptions définissant les actions autorisées (déplacer, copier et lier).
    </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">dropAction</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Action en cours.
    
 	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">controlKey</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Indique si la touche Ctrl est activée.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">altKey</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Indique si la touche Alt est activée.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">shiftKey</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Indique si la touche Maj est activée.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">commandKey</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Indique si la touche Commande est activée.
	
    </apiDesc></apiParam></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Crée un événement Event avec des informations spécifiques concernant des événements glisser-déplacer natifs.
    
	<p class="- topic/p ">Les objets Event sont transmis en tant que paramètres aux écouteurs d’événement. La distribution d’un événement de glissement natif ne déclenche pas le comportement associé.</p>
	
    </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="flash.events:NativeDragEvent:clone" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">clone</apiName><shortdesc class="- topic/shortdesc ">
	Crée une copie de cet objet NativeDragEvent.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Nouvel objet NativeDragEvent dont les propriétés ont la même valeur que celles de l’objet d’origine.
	</apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.events:Event</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Crée une copie de cet objet NativeDragEvent.
	
    </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.events:NativeDragEvent:toString" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">toString</apiName><shortdesc class="- topic/shortdesc ">
	 Formate les propriétés de cet objet NativeDragEvent sous la forme d’une chaîne.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Les propriétés de cet objet NativeDragEvent sous la forme d’une chaîne.
	 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Formate les propriétés de cet objet NativeDragEvent sous la forme d’une chaîne.
	 
	 <p class="- topic/p ">La chaîne est écrite au format suivant :</p>
	 <p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">[NativeDragEvent type=valeur bubbles=valeur cancelable=valeur ... commandKey=valeur]</codeph></p>
	 
     </apiDesc></apiOperationDetail></apiOperation><apiValue id="flash.events:NativeDragEvent:NATIVE_DRAG_COMPLETE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">NATIVE_DRAG_COMPLETE</apiName><shortdesc class="- topic/shortdesc ">
	NativeDragEvent.NATIVE_DRAG_COMPLETE définit la valeur de la propriété type d’un objet d’événement nativeDragComplete.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">nativeDragComplete</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Distribué par l’objet InteractiveObject source lorsqu’un mouvement de glisser-déposer se termine.
	 
	</apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	NativeDragEvent.NATIVE_DRAG_COMPLETE définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet d’événement <codeph class="+ topic/ph pr-d/codeph ">nativeDragComplete</codeph>. 
	
	<p class="- topic/p ">Les propriétés de cet événement sont les suivantes :</p>
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">allowedActions</codeph></entry><entry class="- topic/entry ">L’objet NativeDragOptions spécifiant les actions liées à cette opération glisser.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">clipboard</codeph></entry><entry class="- topic/entry ">L’objet Clipboard contenant les données glissées. </entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">dropAction</codeph></entry><entry class="- topic/entry ">Action choisie par la cible de dépôt (ou <codeph class="+ topic/ph pr-d/codeph ">none</codeph> si aucune action n’est définie).</entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:nativeDragComplete" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.nativeDragComplete</linktext></link><link href="flash.desktop.xml#NativeDragActions" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.NativeDragActions</linktext></link></related-links></apiValue><apiValue id="flash.events:NativeDragEvent:NATIVE_DRAG_DROP" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">NATIVE_DRAG_DROP</apiName><shortdesc class="- topic/shortdesc ">
	NativeDragEvent.NATIVE_DRAG_DROP définit la valeur de la propriété type d’un objet d’événement nativeDragDrop.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">nativeDragDrop</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Distribué par des objets InteractiveObject lorsqu’un mouvement de glisser-déposer se termine au-dessus de l’objet.
	 
	</apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	NativeDragEvent.NATIVE_DRAG_DROP définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet d’événement <codeph class="+ topic/ph pr-d/codeph ">nativeDragDrop</codeph>. 
	
	<p class="- topic/p ">Les propriétés de cet événement sont les suivantes :</p>
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">allowedActions</codeph></entry><entry class="- topic/entry ">L’objet NativeDragOptions spécifiant les actions liées à cette opération glisser.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> ; l’annulation de cet événement annule l’opération de déplacement.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">clipboard</codeph></entry><entry class="- topic/entry ">L’objet Clipboard contenant les données glissées. Le presse-papiers peut être lu même si l’objet distribuant cet événement ne se trouve pas dans le même domaine de sécurité que l’initiateur.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">dropAction</codeph></entry><entry class="- topic/entry ">Action choisie par la cible de dépôt (ou <codeph class="+ topic/ph pr-d/codeph ">none</codeph> si aucune action n’est définie).</entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:nativeDragDrop" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.nativeDragDrop</linktext></link></related-links></apiValue><apiValue id="flash.events:NativeDragEvent:NATIVE_DRAG_ENTER" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">NATIVE_DRAG_ENTER</apiName><shortdesc class="- topic/shortdesc ">
	NativeDragEvent.NATIVE_DRAG_ENTER définit la valeur de la propriété type d’un objet d’événement nativeDragEnter.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">nativeDragEnter</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Distribué par des objets InteractiveObject lorsqu’un mouvement de glisser-déposer entre dans les limites de l’objet.
	 
	</apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	NativeDragEvent.NATIVE_DRAG_ENTER définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet d’événement <codeph class="+ topic/ph pr-d/codeph ">nativeDragEnter</codeph>. 
	
	<p class="- topic/p ">Les propriétés de cet événement sont les suivantes :</p>
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">allowedActions</codeph></entry><entry class="- topic/entry ">L’objet NativeDragOptions spécifiant les actions liées à cette opération glisser.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">clipboard</codeph></entry><entry class="- topic/entry ">L’objet Clipboard contenant les données glissées. Le presse-papiers ne peut être lu que si l’objet distribuant cet événement se trouve dans le même domaine de sécurité que l’initiateur.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">dropAction</codeph></entry><entry class="- topic/entry ">Action choisie par la cible de dépôt (ou <codeph class="+ topic/ph pr-d/codeph ">none</codeph> si aucune action n’est définie).</entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:nativeDragEnter" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.nativeDragEnter</linktext></link></related-links></apiValue><apiValue id="flash.events:NativeDragEvent:NATIVE_DRAG_EXIT" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">NATIVE_DRAG_EXIT</apiName><shortdesc class="- topic/shortdesc ">
	NativeDragEvent.NATIVE_DRAG_EXIT définit la valeur de la propriété type d’un objet d’événement nativeDragExit.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">nativeDragExit</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Distribué par des objets InteractiveObject lorsqu’un mouvement de glisser-déposer quitte les limites de l’objet.
	 
	</apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	NativeDragEvent.NATIVE_DRAG_EXIT définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet d’événement <codeph class="+ topic/ph pr-d/codeph ">nativeDragExit</codeph>. 
	
	<p class="- topic/p ">Les propriétés de cet événement sont les suivantes :</p>
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">allowedActions</codeph></entry><entry class="- topic/entry ">L’objet NativeDragOptions spécifiant les actions liées à cette opération glisser.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">clipboard</codeph></entry><entry class="- topic/entry ">L’objet Clipboard contenant les données glissées. Le presse-papiers ne peut être lu que si l’objet distribuant cet événement se trouve dans le même domaine de sécurité que l’initiateur.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">dropAction</codeph></entry><entry class="- topic/entry ">Action choisie par la cible de dépôt (ou <codeph class="+ topic/ph pr-d/codeph ">none</codeph> si aucune action n’est définie).</entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:nativeDragExit" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.nativeDragExit</linktext></link></related-links></apiValue><apiValue id="flash.events:NativeDragEvent:NATIVE_DRAG_OVER" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">NATIVE_DRAG_OVER</apiName><shortdesc class="- topic/shortdesc ">
	NativeDragEvent.NATIVE_DRAG_OVER définit la valeur de la propriété type d’un objet d’événement nativeDragOver.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">nativeDragOver</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Distribué par des objets InteractiveObject lorsqu’un mouvement de glisser-déposer survole l’objet.
	 
	</apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	NativeDragEvent.NATIVE_DRAG_OVER définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet d’événement <codeph class="+ topic/ph pr-d/codeph ">nativeDragOver</codeph>. 
	
	<p class="- topic/p ">Les propriétés de cet événement sont les suivantes :</p>
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">allowedActions</codeph></entry><entry class="- topic/entry ">L’objet NativeDragOptions spécifiant les actions liées à cette opération glisser.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> ; l’annulation de cet événement annule l’opération de déplacement.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">clipboard</codeph></entry><entry class="- topic/entry ">L’objet Clipboard contenant les données glissées. Le presse-papiers ne peut être lu que si l’objet distribuant cet événement se trouve dans le même domaine de sécurité que l’initiateur.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">dropAction</codeph></entry><entry class="- topic/entry ">Action choisie par la cible de dépôt (ou <codeph class="+ topic/ph pr-d/codeph ">none</codeph> si aucune action n’est définie).</entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:nativeDragOver" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.nativeDragOver</linktext></link></related-links></apiValue><apiValue id="flash.events:NativeDragEvent:NATIVE_DRAG_START" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">NATIVE_DRAG_START</apiName><shortdesc class="- topic/shortdesc ">
	NativeDragEvent.NATIVE_DRAG_START définit la valeur de la propriété type d’un objet d’événement nativeDragStart.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">nativeDragStart</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Distribué par l’objet InteractiveObject source au début d’un mouvement de glisser-déposer natif.
	 
	</apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	NativeDragEvent.NATIVE_DRAG_START définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet d’événement <codeph class="+ topic/ph pr-d/codeph ">nativeDragStart</codeph>. 
	
	<p class="- topic/p ">Les propriétés de cet événement sont les suivantes :</p>
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">allowedActions</codeph></entry><entry class="- topic/entry ">L’objet NativeDragOptions spécifiant les actions liées à cette opération glisser.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> ; l’annulation de cet événement annule l’opération de déplacement.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">clipboard</codeph></entry><entry class="- topic/entry ">L’objet Clipboard contenant les données glissées. </entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">dropAction</codeph></entry><entry class="- topic/entry ">Action choisie par la cible de dépôt (ou <codeph class="+ topic/ph pr-d/codeph ">none</codeph> si aucune action n’est définie).</entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:nativeDragStart" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.nativeDragStart</linktext></link></related-links></apiValue><apiValue id="flash.events:NativeDragEvent:NATIVE_DRAG_UPDATE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">NATIVE_DRAG_UPDATE</apiName><shortdesc class="- topic/shortdesc ">
	NativeDragEvent.NATIVE_DRAG_UPDATE définit la valeur de la propriété type d’un objet d’événement nativeDragUpdate.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">nativeDragUpdate</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Distribué par l’objet InteractiveObject source lorsqu’un mouvement de glisser-déposer est en cours.
	 
	</apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	NativeDragEvent.NATIVE_DRAG_UPDATE définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet d’événement <codeph class="+ topic/ph pr-d/codeph ">nativeDragUpdate</codeph>.
	
	<p class="- topic/p ">Les propriétés de cet événement sont les suivantes :</p>
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">allowedActions</codeph></entry><entry class="- topic/entry ">L’objet NativeDragOptions spécifiant les actions liées à cette opération glisser.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">clipboard</codeph></entry><entry class="- topic/entry ">L’objet Clipboard contenant les données glissées. </entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">dropAction</codeph></entry><entry class="- topic/entry ">Action choisie par la cible de dépôt (ou <codeph class="+ topic/ph pr-d/codeph ">none</codeph> si aucune action n’est définie).</entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:nativeDragUpdate" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.nativeDragUpdate</linktext></link></related-links></apiValue><apiValue id="flash.events:NativeDragEvent:allowedActions" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">allowedActions</apiName><shortdesc class="- topic/shortdesc ">
	Objet NativeDragOptions spécifiant les actions autorisées par l’objet d’affichage ayant déclenché cette opération de déplacement.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.desktop:NativeDragOptions</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Objet NativeDragOptions spécifiant les actions autorisées par l’objet d’affichage ayant déclenché cette opération de déplacement.
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.desktop.xml#NativeDragOptions" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.NativeDragOptions</linktext></link></related-links></apiValue><apiValue id="flash.events:NativeDragEvent:clipboard" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">clipboard</apiName><shortdesc class="- topic/shortdesc ">
	 Objet Clipboard contenant les données dans cette opération de déplacement.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.desktop:Clipboard</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Objet Clipboard contenant les données dans cette opération de déplacement.
	 
	 <p class="- topic/p ">Si l’objet qui déclenche l’événement n’est pas dans le même domaine de sécurité que l’objet déclencheur, le presse-papiers peut uniquement être lu dans le gestionnaire pour un événement <codeph class="+ topic/ph pr-d/codeph ">nativeDragDrop</codeph>.</p>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.desktop.xml#Clipboard" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.Clipboard</linktext></link></related-links></apiValue><apiValue id="flash.events:NativeDragEvent:dropAction" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">dropAction</apiName><shortdesc class="- topic/shortdesc ">
	Action en cours.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Action en cours. Dans l’événement <codeph class="+ topic/ph pr-d/codeph ">nativeDragComplete</codeph>, la propriété <codeph class="+ topic/ph pr-d/codeph ">dropAction</codeph> signale l’action finale. 
	
	</apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.events:PressAndTapGestureEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">PressAndTapGestureEvent</apiName><shortdesc class="- topic/shortdesc "> 
 La classe PressAndTapGestureEvent permet de gérer les mouvements d’appui-appui bref sur les périphériques tactiles. </shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">fournit une prise en charge de la gestion d’événements pour les mouvements d’appui-appui bref.
 
 </apiTipText></apiTipTexts><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:GestureEvent</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
 La classe PressAndTapGestureEvent permet de gérer les mouvements d’appui-appui bref sur les périphériques tactiles. Les objets qui héritent des propriétés de la classe InteractiveObject capturent le point tactile principal (appui) et un point secondaire (appui bref) dans l’objet d’événement distribué. Le mouvement d’appui-appui bref s’utilise généralement pour afficher un menu contextuel
 </apiDesc><example conref="examples\GesturePressAndTap.as" class="- topic/example "> L’exemple suivant illustre la gestion d’événements pour l’événement <codeph class="+ topic/ph pr-d/codeph ">GESTURE_PRESS_AND_TAP</codeph>. Lorsque l’utilisateur effectue un mouvement d’appui-appui bref sur le périphérique tactile, mySprite pivote et myTextField se remplit avec la phase actuelle.
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
Multitouch.inputMode = MultitouchInputMode.GESTURE;

var mySprite = new Sprite();
mySprite.addEventListener(PressAndTapGestureEvent.GESTURE_PRESS_AND_TAP , onPressAndTap );
mySprite.graphics.beginFill(0x336699);
mySprite.graphics.drawRect(0, 0, 100, 80);
var myTextField = new TextField();
myTextField.y = 200;
addChild(mySprite);
addChild(myTextField);

function onPressAndTap(evt:PressAndTapGestureEvent):void {

    evt.target.rotation -= 45;

    if (evt.phase==GesturePhase.BEGIN) {
        myTextField.text = "Begin";
    }
    if (evt.phase==GesturePhase.UPDATE) {
        myTextField.text = "Update";
    }
    if (evt.phase==GesturePhase.END) {
        myTextField.text = "End";
    }
}
</codeblock></example></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.ui.xml#Multitouch" class="- topic/link "><linktext class="- topic/linktext ">flash.ui.Multitouch</linktext></link><link href="flash.display.xml#InteractiveObject" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject</linktext></link><link href="flash.events.xml#TouchEvent" class="- topic/link "><linktext class="- topic/linktext ">flash.events.TouchEvent</linktext></link><link href="flash.events.xml#GestureEvent" class="- topic/link "><linktext class="- topic/linktext ">flash.events.GestureEvent</linktext></link><link href="flash.events.xml#MouseEvent" class="- topic/link "><linktext class="- topic/linktext ">flash.events.MouseEvent</linktext></link><link href="flash.events.xml#EventDispatcher/addEventListener()" class="- topic/link "><linktext class="- topic/linktext ">flash.events.EventDispatcher.addEventListener()</linktext></link></related-links><adobeApiEvent id="flash.events:PressAndTapGestureEvent:GESTURE_PRESS_AND_TAP_gesturePressAndTap" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">gesturePressAndTap</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:PressAndTapGestureEvent:GESTURE_PRESS_AND_TAP</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:PressAndTapGestureEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:gesturePressAndTap" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.gesturePressAndTap</linktext></link><link href="flash.events.xml#GesturePhase" class="- topic/link "><linktext class="- topic/linktext ">flash.events.GesturePhase</linktext></link></related-links></adobeApiEvent><apiConstructor id="flash.events:PressAndTapGestureEvent:PressAndTapGestureEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">PressAndTapGestureEvent</apiName><shortdesc class="- topic/shortdesc ">
    Crée un objet d’événement contenant des informations sur des événements tactiles multipoints complexes, notamment lorsqu’un utilisateur déclenche l’affichage d’un menu contextuel.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">type</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc "> Type d’événement : <codeph class="+ topic/ph pr-d/codeph ">PressAndTapGestureEvent.GESTURE_PRESS_AND_TAP</codeph>. 
	
    </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">bubbles</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">true</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc "> Détermine si l’objet Event prend part à la phase de propagation du flux d’événements.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">cancelable</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Détermine si l’objet d’événement peut être annulé.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">phase</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Cette valeur contrôle le début, la progression et la fin d’une action tactile. Les valeurs possibles sont les suivantes : <codeph class="+ topic/ph pr-d/codeph ">GesturePhase.BEGIN</codeph>, <codeph class="+ topic/ph pr-d/codeph ">GesturePhase.END</codeph>, <codeph class="+ topic/ph pr-d/codeph ">GesturePhase.UPDATE</codeph> ou <codeph class="+ topic/ph pr-d/codeph ">GesturePhase.ALL</codeph>.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">localX</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Coordonnée horizontale à laquelle l’événement s’est produit par rapport à l’objet d’affichage conteneur.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">localY</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Coordonnée verticale à laquelle l’événement s’est produit par rapport à l’objet d’affichage conteneur.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">tapLocalX</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Coordonnée horizontale à laquelle l’événement s’est produit par rapport à l’objet interactif conteneur.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">tapLocalY</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Coordonnée verticale à laquelle l’événement s’est produit par rapport à l’objet interactif conteneur.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ctrlKey</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Sous Windows ou Linux, indique si la touche Ctrl est activée. Sous Mac, indique si la touche Ctrl ou la touche Commande est activée.
    </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">altKey</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Indique si la touche Alt est activée (Windows ou Linux uniquement).
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">shiftKey</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Indique si la touche Maj est activée.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">commandKey</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">(AIR uniquement) Indique si la touche Commande est activée (Mac uniquement). Ce paramètre est destiné à Adobe AIR uniquement ; ne le définissez pas pour le contenu de Flash Player.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">controlKey</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">(AIR uniquement) Indique si la touche Contrôle ou Ctrl est activée (Mac uniquement). Ce paramètre est destiné à Adobe AIR uniquement ; ne le définissez pas pour le contenu de Flash Player.
    
    </apiDesc></apiParam><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Constructeur associé aux objets PressAndTapGestureEvent.
	</apiTipText></apiTipTexts></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Crée un objet d’événement contenant des informations sur des événements tactiles multipoints complexes, notamment lorsqu’un utilisateur déclenche l’affichage d’un menu contextuel. Les objets Event sont transmis en tant que paramètres aux écouteurs d’événements.
    
	
    </apiDesc></apiConstructorDetail><related-links class="- topic/related-links "><link href="flash.ui.xml#Multitouch" class="- topic/link "><linktext class="- topic/linktext ">flash.ui.Multitouch</linktext></link><link href="flash.events.xml#TouchEvent" class="- topic/link "><linktext class="- topic/linktext ">flash.events.TouchEvent</linktext></link><link href="flash.events.xml#GestureEvent" class="- topic/link "><linktext class="- topic/linktext ">flash.events.GestureEvent</linktext></link><link href="flash.events.xml#GesturePhase" class="- topic/link "><linktext class="- topic/linktext ">flash.events.GesturePhase</linktext></link><link href="flash.events.xml#MouseEvent" class="- topic/link "><linktext class="- topic/linktext ">flash.events.MouseEvent</linktext></link><link href="flash.events.xml#EventDispatcher/addEventListener()" class="- topic/link "><linktext class="- topic/linktext ">flash.events.EventDispatcher.addEventListener()</linktext></link></related-links></apiConstructor><apiOperation id="flash.events:PressAndTapGestureEvent:clone" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">clone</apiName><shortdesc class="- topic/shortdesc ">
		Crée une copie de l’objet PressAndTapGestureEvent et définit la valeur de chaque propriété de sorte qu’elle corresponde à la valeur d’origine.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Nouvel objet PressAndTapGestureEvent dont les propriétés ont la même valeur que celles de l’objet d’origine.
		 
		 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.events:Event</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		Crée une copie de l’objet PressAndTapGestureEvent et définit la valeur de chaque propriété de sorte qu’elle corresponde à la valeur d’origine.
		
		</apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.events:PressAndTapGestureEvent:toString" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">toString</apiName><shortdesc class="- topic/shortdesc ">
	Renvoie une chaîne répertoriant toutes les propriétés de l’objet PressAndTapGestureEvent.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Chaîne répertoriant toutes les propriétés de l’objet PressAndTapGestureEvent.
	 
	 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Renvoie une chaîne répertoriant toutes les propriétés de l’objet PressAndTapGestureEvent. La chaîne est écrite au format suivant :
	<p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">[PressAndTapGestureEvent type=<i class="+ topic/ph hi-d/i ">valeur</i> bubbles=<i class="+ topic/ph hi-d/i ">valeur</i> cancelable=<i class="+ topic/ph hi-d/i ">valeur</i> ... ]</codeph></p>
	
	</apiDesc></apiOperationDetail></apiOperation><apiValue id="flash.events:PressAndTapGestureEvent:GESTURE_PRESS_AND_TAP" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">GESTURE_PRESS_AND_TAP</apiName><shortdesc class="- topic/shortdesc ">
     Définit la valeur de la propriété type d’un objet d’événement tactile GESTURE_PRESS_AND_TAP.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">gesturePressAndTap</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un d’événement tactile <codeph class="+ topic/ph pr-d/codeph ">GESTURE_PRESS_AND_TAP</codeph>.
	 
	 <p class="- topic/p ">L’objet PressAndTapGestureEvent distribué possède les propriétés suivantes :</p>
	 
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">altKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> si la touche Alt est activée (Windows ou Linux).</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">commandKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> sur le Mac si la touche Commande est activée ; <codeph class="+ topic/ph pr-d/codeph ">false</codeph> si elle est désactivée. Toujours <codeph class="+ topic/ph pr-d/codeph ">false</codeph> sur Windows.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">controlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> si la touche Ctrl ou Contrôle est activée ; <codeph class="+ topic/ph pr-d/codeph ">false</codeph> si elle est désactivée.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">ctrlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> sous Windows ou Linux si la touche Ctrl est enfoncée. <codeph class="+ topic/ph pr-d/codeph ">true</codeph> sur Mac si la touche Ctrl ou la touche Commande est activée. Sinon, la valeur <codeph class="+ topic/ph pr-d/codeph ">false</codeph> est renvoyée.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">L’objet qui traite activement l’objet Event avec un écouteur d’événements.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">eventPhase</codeph></entry><entry class="- topic/entry ">Phase actuelle lorsque l’événement passe à travers la hiérarchie des objets ; valeur numérique indiquant que l’événement est capturé (1), se trouve à la cible (2) ou est en phase de propagation (3). </entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">localX</codeph></entry><entry class="- topic/entry ">Coordonnée horizontale à laquelle l’événement s’est produit par rapport à l’objet d’affichage conteneur.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">localY</codeph></entry><entry class="- topic/entry ">Coordonnée verticale à laquelle l’événement s’est produit par rapport à l’objet d’affichage conteneur.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">phase</codeph></entry><entry class="- topic/entry ">Phase actuelle du flux d’événements ; une valeur de la classe GesturePhase. Les valeurs possibles sont les suivantes : <codeph class="+ topic/ph pr-d/codeph ">GesturePhase.BEGIN</codeph>, <codeph class="+ topic/ph pr-d/codeph ">GesturePhase.UPDATE</codeph>, <codeph class="+ topic/ph pr-d/codeph ">GesturePhase.END</codeph> ou <codeph class="+ topic/ph pr-d/codeph ">GesturePhase.ALL</codeph>. Un mouvement d’appui-appui bref génère une séquence <codeph class="+ topic/ph pr-d/codeph ">GesturePhase.BEGIN</codeph>, <codeph class="+ topic/ph pr-d/codeph ">GesturePhase.UPDATE</codeph>, <codeph class="+ topic/ph pr-d/codeph ">GesturePhase.END</codeph> ou une phase unique <codeph class="+ topic/ph pr-d/codeph ">GesturePhase.ALL</codeph>.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">shiftKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> si la touche Maj est activée ; <codeph class="+ topic/ph pr-d/codeph ">false</codeph> si elle ne l’est pas.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">stageX</codeph></entry><entry class="- topic/entry ">Coordonnée horizontale à laquelle l’événement s’est produit, par rapport aux coordonnées globales de la scène.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">stageY</codeph></entry><entry class="- topic/entry ">Coordonnée verticale à laquelle l’événement s’est produit, par rapport aux coordonnées globales de la scène.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">tapLocalX</codeph></entry><entry class="- topic/entry ">Coordonnée horizontale à laquelle l’événement s’est produit par rapport à l’objet interactif conteneur.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">tapLocalY</codeph></entry><entry class="- topic/entry ">Coordonnée verticale à laquelle l’événement s’est produit par rapport à l’objet interactif conteneur.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">tapStageX</codeph></entry><entry class="- topic/entry ">Coordonnée horizontale à laquelle l’appui bref s’est produit par rapport aux coordonnées globales de la scène.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">tapStageY</codeph></entry><entry class="- topic/entry ">Coordonnée verticale à laquelle l’appui bref s’est produit par rapport aux coordonnées globales de la scène.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Occurrence d’InteractiveObject sous le dispositif de pointage. La propriété <codeph class="+ topic/ph pr-d/codeph ">target</codeph> ne correspond pas toujours à l’objet de la liste d’affichage qui est associé à l’écouteur d’événement. Utilisez la propriété <codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph> pour accéder à l’objet de la liste d’affichage qui traite actuellement l’événement.</entry></row></tbody></tgroup></adobetable>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:gesturePressAndTap" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.gesturePressAndTap</linktext></link><link href="flash.events.xml#GesturePhase" class="- topic/link "><linktext class="- topic/linktext ">flash.events.GesturePhase</linktext></link></related-links></apiValue><apiValue id="flash.events:PressAndTapGestureEvent:tapLocalX:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">tapLocalX</apiName><shortdesc class="- topic/shortdesc ">
	Coordonnée horizontale à laquelle l’événement s’est produit par rapport à l’objet interactif conteneur.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Coordonnée horizontale à laquelle l’événement s’est produit par rapport à l’objet interactif conteneur.
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:PressAndTapGestureEvent:tapLocalY:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">tapLocalY</apiName><shortdesc class="- topic/shortdesc ">
	Coordonnée verticale à laquelle l’événement s’est produit par rapport à l’objet interactif conteneur.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Coordonnée verticale à laquelle l’événement s’est produit par rapport à l’objet interactif conteneur.
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:PressAndTapGestureEvent:tapStageX:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">tapStageX</apiName><shortdesc class="- topic/shortdesc ">
	Coordonnée horizontale à laquelle l’appui bref s’est produit par rapport aux coordonnées globales de la scène.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Coordonnée horizontale à laquelle l’appui bref s’est produit par rapport aux coordonnées globales de la scène. Cette propriété est calculée lorsque la propriété <codeph class="+ topic/ph pr-d/codeph ">tapLocalX</codeph> est définie.
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:PressAndTapGestureEvent:tapStageY:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">tapStageY</apiName><shortdesc class="- topic/shortdesc ">
	Coordonnée verticale à laquelle l’appui bref s’est produit par rapport aux coordonnées globales de la scène.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Coordonnée verticale à laquelle l’appui bref s’est produit par rapport aux coordonnées globales de la scène. Cette propriété est calculée lorsque la propriété <codeph class="+ topic/ph pr-d/codeph ">tapLocalX</codeph> est définie.
	
	</apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.events:GeolocationEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">GeolocationEvent</apiName><shortdesc class="- topic/shortdesc ">
Un objet Geolocation distribue des objets GeolocationEvent lorsqu’il reçoit des mises à jour de la part du capteur d’emplacement installé sur le périphérique. </shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
Un objet Geolocation distribue des objets GeolocationEvent lorsqu’il reçoit des mises à jour de la part du capteur d’emplacement installé sur le périphérique. 

</apiDesc></apiClassifierDetail><adobeApiEvent id="flash.events:GeolocationEvent:UPDATE_update" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">update</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:GeolocationEvent:UPDATE</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:GeolocationEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="flash.events:GeolocationEvent:GeolocationEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">GeolocationEvent</apiName><shortdesc class="- topic/shortdesc ">
		Crée un objet GeolocationEvent qui contient des informations sur l’emplacement du périphérique.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">type</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc "> Spécifie le type d’événement. Les écouteurs d’événement peuvent accéder à cette information par le biais de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> héritée. Il n’existe qu’un seul type d’événement de mise à jour : <codeph class="+ topic/ph pr-d/codeph ">GeolocationEvent.UPDATE</codeph>.
		
		</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">bubbles</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Indique si l’événement peut se propager vers le haut. Les écouteurs d’événement peuvent accéder à cette information par le biais de la propriété <codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph> héritée.
		
		</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">cancelable</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Détermine si l’objet d’événement peut être annulé. Les écouteurs d’événement peuvent accéder à cette information par le biais de la propriété <codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph> héritée. 
		
		</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">latitude</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Renvoie la latitude, en degrés. La plage de valeurs est la suivante : (-90 &lt;= Lat &lt;= +90).
		
		</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">longitude</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Renvoie la longitude, en degrés. La plage de valeurs est la suivante : (-180 &lt;= Long &lt;= +180).
		
		</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">altitude</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Renvoie l’altitude, en mètres.
		
		</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">hAccuracy</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Renvoie la précision horizontale, en mètres.
		
		</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">vAccuracy</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Renvoie la précision verticale, en mètres.
		
		</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">speed</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc "> Renvoie la vitesse, en mètres/seconde.
		
		</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">heading</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Renvoie la direction du mouvement (par rapport au nord géographique), en degrés entiers.
		
		</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">timestamp</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Spécifie l’horodatage de la mise à jour de géolocalisation.
		
		</apiDesc></apiParam><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Constructeur associé aux objets GeolocationEvent.
		 
		 </apiTipText></apiTipTexts></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		Crée un objet <codeph class="+ topic/ph pr-d/codeph ">GeolocationEvent</codeph> qui contient des informations sur l’emplacement du périphérique. Les objets Event sont transmis en tant que paramètres aux écouteurs d’événements.
		
		</apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="flash.events:GeolocationEvent:clone" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">clone</apiName><shortdesc class="- topic/shortdesc ">
		Crée une copie de l’objet GeolocationEvent et définit la valeur de chaque propriété de sorte qu’elle corresponde à la valeur d’origine.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Nouvel objet GeolocationEvent dont les propriétés ont la même valeur que celles de l’objet d’origine.
		
		</apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.events:Event</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		Crée une copie de l’objet GeolocationEvent et définit la valeur de chaque propriété de sorte qu’elle corresponde à la valeur d’origine. 
		
		</apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.events:GeolocationEvent:toString" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">toString</apiName><shortdesc class="- topic/shortdesc "> 
		Renvoie une chaîne répertoriant toutes les propriétés de l’objet GeolocationEvent.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Chaîne répertoriant toutes les propriétés de l’objet GeolocationEvent.
		</apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
		Renvoie une chaîne répertoriant toutes les propriétés de l’objet GeolocationEvent. La chaîne est écrite au format suivant :
		
		<p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">[GeolocationEvent type=<i class="+ topic/ph hi-d/i ">valeur</i> bubbles=<i class="+ topic/ph hi-d/i ">valeur</i> cancelable=<i class="+ topic/ph hi-d/i ">valeur</i> status=<i class="+ topic/ph hi-d/i ">valeur</i>]</codeph></p>
		
		</apiDesc></apiOperationDetail></apiOperation><apiValue id="flash.events:GeolocationEvent:UPDATE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">UPDATE</apiName><shortdesc class="- topic/shortdesc ">
		Définit la valeur de la propriété type d’un objet d’événement tactile GeolocationEvent.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">update</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		Définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet d’événement tactile <codeph class="+ topic/ph pr-d/codeph ">GeolocationEvent</codeph>.  
		<p class="- topic/p ">Les propriétés de cet événement sont les suivantes :</p>
		
		<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Objet qui traite activement l’objet de l’événement avec un écouteur d’événement.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Objet GeolocationEvent recevant les données.</entry></row></tbody></tgroup></adobetable>
		
		
		</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:GeolocationEvent:altitude:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">altitude</apiName><shortdesc class="- topic/shortdesc "> 
		Altitude, en mètres.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
		Altitude, en mètres.
		
		<p class="- topic/p ">Si l’altitude n’est pas prise en charge par le périphérique, cette propriété est définie sur <codeph class="+ topic/ph pr-d/codeph ">NaN</codeph>.</p>
		
		</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:GeolocationEvent:heading:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">heading</apiName><shortdesc class="- topic/shortdesc "> 
		Direction du mouvement (par rapport au nord géographique), en degrés entiers.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
		Direction du mouvement (par rapport au nord géographique), en degrés entiers. Cette propriété est différente de la « position », qui renvoie la direction du mouvement par rapport à un autre point.
		
	 	<p class="- topic/p "><b class="+ topic/ph hi-d/b ">Remarque :</b> l’en-tête n’est pas pris en charge sur les périphériques Android. La valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">heading</codeph> est toujours <codeph class="+ topic/ph pr-d/codeph ">NaN</codeph> (pas un nombre).</p>
		
		</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:GeolocationEvent:horizontalAccuracy:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">horizontalAccuracy</apiName><shortdesc class="- topic/shortdesc "> 
		Précision horizontale, en mètres.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
		Précision horizontale, en mètres.
		
		</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:GeolocationEvent:latitude:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">latitude</apiName><shortdesc class="- topic/shortdesc ">
		Latitude, en degrés.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		Latitude, en degrés. La plage des valeurs de latitude est la suivante : (-90 &lt;= <codeph class="+ topic/ph pr-d/codeph ">latitude</codeph> &lt;= 90). « South » est une latitude négative, « North » une latitude positive.
		
		</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:GeolocationEvent:longitude:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">longitude</apiName><shortdesc class="- topic/shortdesc ">
		Longitude, en degrés.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		Longitude, en degrés. La plage des valeurs de longitude est la suivante : (-180 &lt;= <codeph class="+ topic/ph pr-d/codeph ">longitude</codeph> &lt; 180). « West » est une longitude négative, « East » une longitude positive.
		
		</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:GeolocationEvent:speed:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">speed</apiName><shortdesc class="- topic/shortdesc "> 
		Vitesse, en mètres/seconde.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
		Vitesse, en mètres/seconde.
		
		</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:GeolocationEvent:timestamp:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">timestamp</apiName><shortdesc class="- topic/shortdesc "> 
		Nombre de millisecondes au moment où se produit l’événement après l’initialisation du moteur d’exécution.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
		Nombre de millisecondes au moment où se produit l’événement après l’initialisation du moteur d’exécution. Par exemple, si le périphérique capture les données de géolocalisation 4 secondes après l’initialisation de l’application, la propriété timestamp de l’événement est définie sur 4000. 
		
		</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:GeolocationEvent:verticalAccuracy:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">verticalAccuracy</apiName><shortdesc class="- topic/shortdesc "> 
		Précision verticale, en mètres.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
		Précision verticale, en mètres.
		
		</apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.events:MediaEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">MediaEvent</apiName><shortdesc class="- topic/shortdesc ">
 Les classes CameraRoll et CameraUI distribuent des objets MediaEvent lorsqu’un flux de données multimédia est disponible.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Les classes CameraRoll et CameraUI distribuent des objets MediaEvent lorsqu’un flux de données multimédia est disponible. 
  
 <p class="- topic/p ">La classe CameraRoll distribue un objet MediaEvent de type <codeph class="+ topic/ph pr-d/codeph ">select</codeph> lorsque l’utilisateur sélectionne une image. La classe CameraUI distribue un objet MediaEvent de type <codeph class="+ topic/ph pr-d/codeph ">complete</codeph> lors du renvoi d’une image ou d’une vidéo capturée à partir de la caméra.</p>
 
 
 </apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.media.xml#CameraRoll" class="- topic/link "><linktext class="- topic/linktext ">CameraRoll</linktext></link><link href="flash.media.xml#CameraUI" class="- topic/link "><linktext class="- topic/linktext ">CameraUI</linktext></link></related-links><adobeApiEvent id="flash.events:MediaEvent:COMPLETE_complete" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">complete</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:MediaEvent:COMPLETE</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:MediaEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Type d’événement complete.
	</apiTipText></apiTipTexts></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flash.events:MediaEvent:SELECT_select" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">select</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:MediaEvent:SELECT</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:MediaEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Type d’événement select.
		 </apiTipText></apiTipTexts></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="flash.events:MediaEvent:MediaEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">MediaEvent</apiName><shortdesc class="- topic/shortdesc ">
	Crée un objet MediaEvent contenant des informations sur le fichier multimédia disponible.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">type</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Type d’événement. 
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">bubbles</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Détermine si l’objet Event se propage.   
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">cancelable</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Détermine si l’objet d’événement peut être annulé.  
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">data</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.media:MediaPromise</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Objet MediaPromise correspondant à l’image sélectionnée.
	
	</apiDesc></apiParam><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Constructeur associé aux objets MediaEvent.
	
	</apiTipText></apiTipTexts></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Crée un objet MediaEvent contenant des informations sur le fichier multimédia disponible. Les objets Event sont transmis en tant que paramètres aux écouteurs d’événements.
	
	</apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="flash.events:MediaEvent:clone" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">clone</apiName><shortdesc class="- topic/shortdesc "> 
		Crée une copie de l’objet MediaEvent et définit la valeur de chaque propriété de sorte qu’elle corresponde à la valeur d’origine.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Nouvel objet MediaEvent dont les propriétés ont la même valeur que celles de l’objet d’origine.
	    
	    </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.events:Event</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
		Crée une copie de l’objet MediaEvent et définit la valeur de chaque propriété de sorte qu’elle corresponde à la valeur d’origine. 
		  
		</apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.events:MediaEvent:toString" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">toString</apiName><shortdesc class="- topic/shortdesc "> 
		Renvoie une chaîne répertoriant toutes les propriétés de l’objet MediaEvent.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Nouvel objet MediaEvent dont les propriétés ont la même valeur que celles de l’objet d’origine.
	     	
	     	</apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
		Renvoie une chaîne répertoriant toutes les propriétés de l’objet MediaEvent. Le format utilisé est le suivant :
		
		<p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">[MediaEvent type=<i class="+ topic/ph hi-d/i ">valeur</i> bubbles=<i class="+ topic/ph hi-d/i ">valeur</i> cancelable=<i class="+ topic/ph hi-d/i ">valeur</i> data=<i class="+ topic/ph hi-d/i ">valeur</i> ] </codeph></p> 
		  
		</apiDesc></apiOperationDetail></apiOperation><apiValue id="flash.events:MediaEvent:COMPLETE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">COMPLETE</apiName><shortdesc class="- topic/shortdesc ">
	Constante associée à l’objet MediaEvent de type complete.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">complete</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Type d’événement complete.
	</apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Constante associée à l’objet MediaEvent de type <codeph class="+ topic/ph pr-d/codeph ">complete</codeph>. 
	
	<p class="- topic/p ">Définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet d’événement <codeph class="+ topic/ph pr-d/codeph ">MediaEvent</codeph>. Les propriétés de cet événement sont les suivantes :</p>
	
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">L’objet qui traite activement l’objet Event avec un écouteur d’événements.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">data</codeph></entry><entry class="- topic/entry ">Objet MediaPromise de l’occurrence multimédia disponible.</entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:MediaEvent:SELECT" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">SELECT</apiName><shortdesc class="- topic/shortdesc ">
		 Constante associée à l’objet MediaEvent de type select.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">select</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Type d’événement select.
		 </apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 Constante associée à l’objet MediaEvent de type <codeph class="+ topic/ph pr-d/codeph ">select</codeph>.
		 
		 <p class="- topic/p ">Définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet d’événement <codeph class="+ topic/ph pr-d/codeph ">MediaEvent</codeph>. Les propriétés de cet événement sont les suivantes :</p>
		 
		 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">L’objet qui traite activement l’objet Event avec un écouteur d’événements.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">data</codeph></entry><entry class="- topic/entry ">Objet MediaPromise de l’occurrence multimédia disponible.</entry></row></tbody></tgroup></adobetable>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:MediaEvent:data:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">data</apiName><shortdesc class="- topic/shortdesc ">
		Objet MediaPromise pour le fichier multimédia disponible.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.media:MediaPromise</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		Objet MediaPromise pour le fichier multimédia disponible.
		
		</apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.events:StageVideoEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">StageVideoEvent</apiName><shortdesc class="- topic/shortdesc ">
 Un objet StageVideo distribue un objet StageVideoEvent après l’appel de la méthode attachNetStream() de l’objet StageVideo et de la méthode play() de l’objet NetStream joint.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Flash" version="10.2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Objets Event associés aux événements StageVideo.
 
 </apiTipText></apiTipTexts><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Un objet StageVideo distribue un objet StageVideoEvent après l’appel de la méthode <codeph class="+ topic/ph pr-d/codeph ">attachNetStream()</codeph> de l’objet StageVideo et de la méthode <codeph class="+ topic/ph pr-d/codeph ">play()</codeph> de l’objet NetStream joint. Par ailleurs, selon la plate-forme, tout changement de l’état de lecture peut entraîner la distribution de l’événement. Le seul type de StageVideoEvent est <codeph class="+ topic/ph pr-d/codeph ">StageVideoEvent.RENDER_STATE</codeph>.
 
 </apiDesc></apiClassifierDetail><adobeApiEvent id="flash.events:StageVideoEvent:RENDER_STATE_renderState" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">renderState</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:StageVideoEvent:RENDER_STATE</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:StageVideoEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.events.xml#StageVideoEvent/RENDER_STATE" class="- topic/link "><linktext class="- topic/linktext ">flash.events.StageVideoEvent.RENDER_STATE</linktext></link><link href="flash.events.xml#StageVideoEvent/RENDER_STATUS_UNAVAILABLE" class="- topic/link "><linktext class="- topic/linktext ">flash.events.StageVideoEvent.RENDER_STATUS_UNAVAILABLE</linktext></link><link href="flash.events.xml#StageVideoEvent/RENDER_STATUS_SOFTWARE" class="- topic/link "><linktext class="- topic/linktext ">flash.events.StageVideoEvent.RENDER_STATUS_SOFTWARE</linktext></link><link href="flash.events.xml#StageVideoEvent/RENDER_STATUS_ACCELERATED" class="- topic/link "><linktext class="- topic/linktext ">flash.events.StageVideoEvent.RENDER_STATUS_ACCELERATED</linktext></link></related-links></adobeApiEvent><apiConstructor id="flash.events:StageVideoEvent:StageVideoEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">StageVideoEvent</apiName><shortdesc class="- topic/shortdesc ">
			Crée un objet Event contenant des informations sur les événements StageVideo.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Flash" version="10.2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">type</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc "> Type de l’événement. Les écouteurs d’événement peuvent accéder à cette information par le biais de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> héritée. Le seul type de StageVideoEvent est <codeph class="+ topic/ph pr-d/codeph ">StageVideoEvent.RENDER_STATE</codeph>.
			</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">bubbles</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Détermine si l’objet Event prend part à la phase de propagation du flux d’événements. Les écouteurs d’événement peuvent accéder à cette information par le biais de la propriété <codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph> héritée.
			</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">cancelable</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Détermine si l’objet Event peut être annulé. Les écouteurs d’événement peuvent accéder à cette information par le biais de la propriété <codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph> héritée.
			</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">status</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Indique l’état de l’objet StageVideo cible.
			</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">colorSpace</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Espace colorimétrique utilisé par la vidéo en cours d’affichage.
			
			</apiDesc></apiParam><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Constructeur associé aux objets StageVideoEvent.
			</apiTipText></apiTipTexts></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
			Crée un objet Event contenant des informations sur les événements StageVideo. Les objets Event sont transmis en tant que paramètres aux écouteurs d’événements.
			
			</apiDesc></apiConstructorDetail><related-links class="- topic/related-links "><link href="flash.media.xml#StageVideo" class="- topic/link "><linktext class="- topic/linktext ">flash.media.StageVideo</linktext></link><link href="flash.display.xml#Stage/stageVideos" class="- topic/link "><linktext class="- topic/linktext ">flash.display.Stage.stageVideos</linktext></link><link href="flash.events.xml#StageVideoEvent/RENDER_STATE" class="- topic/link "><linktext class="- topic/linktext ">flash.events.StageVideoEvent.RENDER_STATE</linktext></link></related-links></apiConstructor><apiValue id="flash.events:StageVideoEvent:RENDER_STATE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">RENDER_STATE</apiName><shortdesc class="- topic/shortdesc ">
		La constante StageVideoEvent.RENDER_STATE définit la valeur de la propriété type d’un objet d’événement renderState.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage name="ActionScript" version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Flash" version="10.2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">renderState</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		La constante <codeph class="+ topic/ph pr-d/codeph ">StageVideoEvent.RENDER_STATE</codeph> définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet d’événement <codeph class="+ topic/ph pr-d/codeph ">renderState</codeph>. 
		<p class="- topic/p ">Les propriétés de cet événement sont les suivantes :</p>
		 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">colorSpace</codeph></entry><entry class="- topic/entry ">Espaces colorimétriques disponibles pour afficher la vidéo.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Objet qui traite activement l’objet StageVideoEvent avec un écouteur d’événement.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">status</codeph></entry><entry class="- topic/entry ">Indique si le matériel ou le logiciel effectuent actuellement le rendu de la vidéo (c’est-à-dire la décode, puis l’affiche) ou pas.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Objet StageVideo dont l’état a changé.</entry></row></tbody></tgroup></adobetable>
		
		</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.events.xml#StageVideoEvent/RENDER_STATE" class="- topic/link "><linktext class="- topic/linktext ">flash.events.StageVideoEvent.RENDER_STATE</linktext></link><link href="flash.events.xml#StageVideoEvent/RENDER_STATUS_UNAVAILABLE" class="- topic/link "><linktext class="- topic/linktext ">flash.events.StageVideoEvent.RENDER_STATUS_UNAVAILABLE</linktext></link><link href="flash.events.xml#StageVideoEvent/RENDER_STATUS_SOFTWARE" class="- topic/link "><linktext class="- topic/linktext ">flash.events.StageVideoEvent.RENDER_STATUS_SOFTWARE</linktext></link><link href="flash.events.xml#StageVideoEvent/RENDER_STATUS_ACCELERATED" class="- topic/link "><linktext class="- topic/linktext ">flash.events.StageVideoEvent.RENDER_STATUS_ACCELERATED</linktext></link></related-links></apiValue><apiValue id="flash.events:StageVideoEvent:RENDER_STATUS_ACCELERATED" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">RENDER_STATUS_ACCELERATED</apiName><shortdesc class="- topic/shortdesc ">
		Indique que le matériel est en train de décoder et d’afficher la vidéo.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">accelerated</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiDeprecated replacement="flash.media.VideoStatus.ACCELERATED" sinceVersion="Flash Player 10.2"/></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		Indique que le matériel est en train de décoder et d’afficher la vidéo. 
		
		<p class="- topic/p ">Cette valeur correspond à l’une des valeurs possibles de la propriété <codeph class="+ topic/ph pr-d/codeph ">status</codeph> de l’objet StageVideoEvent.</p>
		
		</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.events.xml#StageVideoEvent/status" class="- topic/link "><linktext class="- topic/linktext ">status</linktext></link></related-links></apiValue><apiValue id="flash.events:StageVideoEvent:RENDER_STATUS_SOFTWARE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">RENDER_STATUS_SOFTWARE</apiName><shortdesc class="- topic/shortdesc ">
		Indique que le logiciel est en train de décoder et d’afficher la vidéo.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">software</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiDeprecated replacement="flash.media.VideoStatus.SOFTWARE" sinceVersion="Flash Player 10.2"/></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		Indique que le logiciel est en train de décoder et d’afficher la vidéo. 
		
		<p class="- topic/p ">Cette valeur correspond à l’une des valeurs possibles de la propriété <codeph class="+ topic/ph pr-d/codeph ">status</codeph> de l’objet StageVideoEvent.</p>
		
		<p class="- topic/p ">Par exemple, si la plate-forme ne prend pas en charge le décodage matériel et l’affichage du codec audio ou vidéo de la vidéo, l’objet StageVideoEvent prend cette valeur d’état.</p>
		
		</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.events.xml#StageVideoEvent/status" class="- topic/link "><linktext class="- topic/linktext ">status</linktext></link></related-links></apiValue><apiValue id="flash.events:StageVideoEvent:RENDER_STATUS_UNAVAILABLE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">RENDER_STATUS_UNAVAILABLE</apiName><shortdesc class="- topic/shortdesc ">
		Indique que l’affichage de la vidéo est impossible via l’objet StageVideo.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">unavailable</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiDeprecated replacement="flash.media.VideoStatus.UNAVAILABLE" sinceVersion="Flash Player 10.2"/></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		Indique que l’affichage de la vidéo est impossible via l’objet StageVideo. 
		
		<p class="- topic/p ">Cette valeur correspond à l’une des valeurs possibles de la propriété <codeph class="+ topic/ph pr-d/codeph ">status</codeph> de l’objet StageVideoEvent.</p>
		
		<p class="- topic/p ">Prenons l’exemple d’une plate-forme ne prenant pas en charge le décodage et l’affichage du codec audio ou vidéo de la vidéo ni avec le matériel ni avec le logiciel. Dans ce cas, l’objet StageVideoEvent prend cette valeur d’état.</p>
		
		<p class="- topic/p ">Cette valeur d’état est également utilisée si aucun décodeur matériel n’est disponible. Ce cas de figure peut se présenter dans AIR pour TV. Pour une compatibilité descendante avec ses versions précédentes, AIR pour TV prend en charge le décodage et l’affichage matériels avec un objet Video. L’utilisation d’un objet Video implique l’utilisation du décodeur matériel sous-jacent. Par conséquent, vous disposez d’un objet StageVideo en moins. Notez que l’utilisation d’un objet StageVideo est recommandée pour le décodage et l’affichage vidéo matériels.</p>
		
		</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.events.xml#StageVideoEvent/status" class="- topic/link "><linktext class="- topic/linktext ">status</linktext></link></related-links></apiValue><apiValue id="flash.events:StageVideoEvent:colorSpace:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">colorSpace</apiName><shortdesc class="- topic/shortdesc ">
		Espace colorimétrique utilisé par la vidéo en cours d’affichage dans l’objet StageVideo.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Flash" version="10.2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		Espace colorimétrique utilisé par la vidéo en cours d’affichage dans l’objet StageVideo. 
		
		</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.media.xml#StageVideo" class="- topic/link "><linktext class="- topic/linktext ">flash.media.StageVideo</linktext></link></related-links></apiValue><apiValue id="flash.events:StageVideoEvent:status:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">status</apiName><shortdesc class="- topic/shortdesc ">
		Etat de l’objet StageVideo.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Flash" version="10.2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		Etat de l’objet StageVideo. 
		
		</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.events.xml#StageVideoEvent/RENDER_STATUS_UNAVAILABLE" class="- topic/link "><linktext class="- topic/linktext ">flash.events.StageVideoEvent.RENDER_STATUS_UNAVAILABLE</linktext></link><link href="flash.events.xml#StageVideoEvent/RENDER_STATUS_SOFTWARE" class="- topic/link "><linktext class="- topic/linktext ">flash.events.StageVideoEvent.RENDER_STATUS_SOFTWARE</linktext></link><link href="flash.events.xml#StageVideoEvent/RENDER_STATUS_ACCELERATED" class="- topic/link "><linktext class="- topic/linktext ">flash.events.StageVideoEvent.RENDER_STATUS_ACCELERATED</linktext></link></related-links></apiValue></apiClassifier><apiClassifier languages="" id="flash.events:LocationChangeEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">LocationChangeEvent</apiName><shortdesc class="- topic/shortdesc ">
     Un objet HTMLLoader ou StageWebView distribue un objet LocationChangeEvent lors du chargement d’une nouvelle page.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Un objet HTMLLoader ou StageWebView distribue un objet LocationChangeEvent lors du chargement d’une nouvelle page.
	  
	 <p class="- topic/p ">Il existe deux types d’événement LocationChangeEvent :  </p>
	 <ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">LocationChangeEvent.LOCATION_CHANGING</codeph> : distribué avant une modification initialisée via le contenu affiché dans un objet StageWebView. Peut être annulé.</li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">LocationChangeEvent.LOCATION_CHANGE</codeph> : distribué après chaque modification d’emplacement. Ne peut pas être annulé.</li></ul>
	 
     </apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.media.xml#StageWebView" class="- topic/link "><linktext class="- topic/linktext ">StageWebView</linktext></link></related-links><apiConstructor id="flash.events:LocationChangeEvent:LocationChangeEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">LocationChangeEvent</apiName><shortdesc class="- topic/shortdesc ">
     	Crée un objet CompositionAttributeRange.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">type</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">bubbles</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">cancelable</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">location</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData></apiParam></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     	Crée un objet CompositionAttributeRange.
     	
     	</apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="flash.events:LocationChangeEvent:clone" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">clone</apiName><shortdesc class="- topic/shortdesc ">
     	</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><inheritDocs>
     	
     	</inheritDocs></asCustoms></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.events:Event</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     	</apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.events:LocationChangeEvent:toString" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">toString</apiName><shortdesc class="- topic/shortdesc ">
 		Renvoie une chaîne répertoriant toutes les propriétés de l’objet LocationChangeEvent.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 		Renvoie une chaîne répertoriant toutes les propriétés de l’objet LocationChangeEvent. La chaîne est écrite au format suivant :
		<p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">[LocationChangeEvent type=<i class="+ topic/ph hi-d/i ">valeur</i> bubbles=<i class="+ topic/ph hi-d/i ">valeur</i> cancelable=<i class="+ topic/ph hi-d/i ">valeur</i> eventPhase=<i class="+ topic/ph hi-d/i ">valeur</i> location=<i class="+ topic/ph hi-d/i ">valeur</i></codeph></p>
    	
     	</apiDesc></apiOperationDetail></apiOperation><apiValue id="flash.events:LocationChangeEvent:LOCATION_CHANGE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">LOCATION_CHANGE</apiName><shortdesc class="- topic/shortdesc ">
     	Distribué après chaque modification d’emplacement.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">locationChange</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     	Distribué après chaque modification d’emplacement.
     	
     	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:LocationChangeEvent:LOCATION_CHANGING" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">LOCATION_CHANGING</apiName><shortdesc class="- topic/shortdesc ">
     	La constante LOCATION_CHANGING définit la valeur de la propriété type de l’objet LocationChangeEvent distribué avant un changement de position de page.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">locationChanging</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     	La constante <codeph class="+ topic/ph pr-d/codeph ">LOCATION_CHANGING</codeph> définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> de l’objet LocationChangeEvent distribué avant un changement de position de page. 
     	
     	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:LocationChangeEvent:location:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">location</apiName><shortdesc class="- topic/shortdesc ">
     	Adresse URL de destination de la modification.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     	Adresse URL de destination de la modification.
     	
     	</apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.events:NetDataEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">NetDataEvent</apiName><shortdesc class="- topic/shortdesc ">
Un objet NetStream distribue un objet NetDataEvent lorsqu’un message de données se trouve dans le flux de données multimédias.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage name="ActionScript" version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.3" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2.7" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
Un objet NetStream distribue un objet NetDataEvent lorsqu’un message de données se trouve dans le flux de données multimédias.

<p class="- topic/p ">Un NetDataEvent est distribué pour les messages suivants :</p>
<ul class="- topic/ul "><li class="- topic/li ">onCuePoint</li><li class="- topic/li ">onImageData</li><li class="- topic/li ">onMetaData</li><li class="- topic/li ">onPlayStatus (pour le code NetStream.Play.Complete)</li><li class="- topic/li ">onTextData</li><li class="- topic/li ">onXMPData</li></ul>

</apiDesc></apiClassifierDetail><apiConstructor id="flash.events:NetDataEvent:NetDataEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">NetDataEvent</apiName><shortdesc class="- topic/shortdesc ">
	 Crée un objet d’événement contenant des informations sur les événements de données multimédias.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage name="ActionScript" version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.3" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2.7" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">type</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc "> Type de l’événement. Les écouteurs d’événement peuvent accéder à cette information par le biais de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> héritée.
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">bubbles</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Détermine si l’objet Event prend part à la phase de propagation du flux d’événements. Les écouteurs d’événement peuvent accéder à cette information par le biais de la propriété <codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph> héritée.  
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">cancelable</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Détermine si l’objet Event peut être annulé. Les écouteurs d’événement peuvent accéder à cette information par le biais de la propriété <codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph> héritée. 
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">timestamp</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Date et l’heure du message de données
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">info</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Object</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Objet du message de données
	 
	 </apiDesc></apiParam></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Crée un objet d’événement contenant des informations sur les événements de données multimédias. Les objets Event sont transmis en tant que paramètres aux écouteurs d’événement.
	 
	 </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="flash.events:NetDataEvent:clone" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">clone</apiName><shortdesc class="- topic/shortdesc ">
	 Crée une copie de l’objet NetDataEvent et définit la valeur de chaque propriété de sorte qu’elle corresponde à la valeur d’origine.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.3" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2.7" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Nouvel objet NetDataEvent dont les propriétés ont la même valeur que celles de l’objet d’origine.
	 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.events:Event</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Crée une copie de l’objet NetDataEvent et définit la valeur de chaque propriété de sorte qu’elle corresponde à la valeur d’origine. 
	 
	 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.events:NetDataEvent:toString" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">toString</apiName><shortdesc class="- topic/shortdesc ">
	 Renvoie une chaîne répertoriant toutes les propriétés de l’objet NetDataEvent.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage name="ActionScript" version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.3" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2.7" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Chaîne répertoriant toutes les propriétés de l’objet NetDataEvent.
	 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Renvoie une chaîne répertoriant toutes les propriétés de l’objet NetDataEvent. Le format utilisé est le suivant :
	 <p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">[NetDataEvent type=<i class="+ topic/ph hi-d/i ">valeur</i> bubbles=<i class="+ topic/ph hi-d/i ">valeur</i> cancelable=<i class="+ topic/ph hi-d/i ">valeur</i> timestamp=<i class="+ topic/ph hi-d/i ">valeur</i>]</codeph></p>
	 
	 </apiDesc></apiOperationDetail></apiOperation><apiValue id="flash.events:NetDataEvent:MEDIA_TYPE_DATA" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">MEDIA_TYPE_DATA</apiName><shortdesc class="- topic/shortdesc ">
	 La constante NetDataEvent.MEDIA_TYPE_DATA définit la valeur de la propriété type de l’objet NetDataEvent distribué lorsque l’objet NetStream trouve un message de données dans le flux de données multimédias.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage name="ActionScript" version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.3" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2.7" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">mediaTypeData</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 La constante <codeph class="+ topic/ph pr-d/codeph ">NetDataEvent.MEDIA_TYPE_DATA</codeph> définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> de l’objet NetDataEvent distribué lorsque l’objet NetStream trouve un message de données dans le flux de données multimédias.
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:NetDataEvent:info:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">info</apiName><shortdesc class="- topic/shortdesc ">
	 Objet de données décrivant le message.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage name="ActionScript" version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.3" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2.7" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Object</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Objet de données décrivant le message. L’objet <codeph class="+ topic/ph pr-d/codeph ">info</codeph> possède deux propriétés : <codeph class="+ topic/ph pr-d/codeph ">info.handler</codeph> et <codeph class="+ topic/ph pr-d/codeph ">info.args</codeph>. <codeph class="+ topic/ph pr-d/codeph ">info.handler</codeph> correspond au nom du gestionnaire, par exemple "onMetaData" ou "onXMPData". <codeph class="+ topic/ph pr-d/codeph ">info.args</codeph> est un tableau d’arguments.
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:NetDataEvent:timestamp:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">timestamp</apiName><shortdesc class="- topic/shortdesc ">
	 Horodatage du message de données dans le flux de données multimédias.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage name="ActionScript" version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.3" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2.7" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Horodatage du message de données dans le flux de données multimédias.
	 
	 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.events:NativeProcessExitEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">NativeProcessExitEvent</apiName><shortdesc class="- topic/shortdesc ">
 Cet événement est distribué par l’objet NativeProcess, lorsque le processus existe.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Cet événement est distribué par l’objet NativeProcess, lorsque le processus existe. Il est possible que cet événement ne soit jamais distribué. Par exemple, si le processus enfant survit à l’application AIR qui l’a créé, l’événement n’est pas distribué.
 
 </apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.desktop.xml#NativeProcess" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.NativeProcess</linktext></link></related-links><adobeApiEvent id="flash.events:NativeProcessExitEvent:EXIT_exit" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">exit</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:NativeProcessExitEvent:EXIT</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:NativeProcessExitEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="flash.events:NativeProcessExitEvent:NativeProcessExitEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">NativeProcessExitEvent</apiName><shortdesc class="- topic/shortdesc ">
	Crée un objet NativeProcessExitEvent qui contient des informations spécifiques sur le code de fermeture d’un processus natif.
	
	</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">type</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc "> Type de l’événement, accessible en tant que <codeph class="+ topic/ph pr-d/codeph ">Event.type</codeph>.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">bubbles</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc "> Détermine si l’objet Event prend part à la phase de propagation du flux d’événements. La valeur par défaut est <codeph class="+ topic/ph pr-d/codeph ">false</codeph>.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">cancelable</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Détermine si l’objet Event peut être annulé. La valeur par défaut est <codeph class="+ topic/ph pr-d/codeph ">false</codeph>.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">exitCode</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">unknown</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Nombre que le processus a renvoyé au système d’exploitation lors de la fermeture.
	
	</apiDesc></apiParam></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Crée un objet NativeProcessExitEvent qui contient des informations spécifiques sur le code de fermeture d’un processus natif.
	
	</apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="flash.events:NativeProcessExitEvent:clone" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">clone</apiName><shortdesc class="- topic/shortdesc ">
	Crée une copie de l’objet NativeProcessExitEvent et définit la valeur de chaque propriété de sorte qu’elle corresponde à la valeur d’origine.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Nouvel objet NativeProcessExitEvent dont les propriétés ont la même valeur que celles de l’objet d’origine.
	
	</apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.events:Event</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Crée une copie de l’objet NativeProcessExitEvent et définit la valeur de chaque propriété de sorte qu’elle corresponde à la valeur d’origine. 
	
	</apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.events:NativeProcessExitEvent:toString" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">toString</apiName><shortdesc class="- topic/shortdesc ">
	Renvoie une chaîne répertoriant toutes les propriétés de l’objet NativeProcessExitEvent.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Chaîne répertoriant toutes les propriétés de l’objet <codeph class="+ topic/ph pr-d/codeph ">ProgressEvent</codeph>.
	
	</apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Renvoie une chaîne répertoriant toutes les propriétés de l’objet NativeProcessExitEvent. La chaîne est écrite au format suivant :
	<p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">[NativeProcessExitEvent type=<i class="+ topic/ph hi-d/i ">valeur</i> bubbles=<i class="+ topic/ph hi-d/i ">valeur</i> cancelable=<i class="+ topic/ph hi-d/i ">valeur</i> exitCode=<i class="+ topic/ph hi-d/i ">valeur</i>]</codeph></p>
	
	</apiDesc></apiOperationDetail></apiOperation><apiValue id="flash.events:NativeProcessExitEvent:EXIT" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">EXIT</apiName><shortdesc class="- topic/shortdesc ">
     Définit la valeur de la propriété type d’un objet d’événement exit.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">exit</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet d’événement <codeph class="+ topic/ph pr-d/codeph ">exit</codeph>.
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:NativeProcessExitEvent:exitCode:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">exitCode</apiName><shortdesc class="- topic/shortdesc ">
	Code que le processus natif a renvoyé au système d’exploitation hôte lors de la fermeture.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Code que le processus natif a renvoyé au système d’exploitation hôte lors de la fermeture. Si l’application d’AIR met fin au processus en appelant la méthode <codeph class="+ topic/ph pr-d/codeph ">exit()</codeph> de l’objet NativeProcess, la propriété <codeph class="+ topic/ph pr-d/codeph ">exitCode</codeph> est définie sur NaN. <i class="+ topic/ph hi-d/i ">REMARQUE : sur les systèmes d’exploitation Windows, si le processus n’a pas été fermé alors que le moteur d’exécution l’a été ou qu’une erreur est survenue, cette valeur peut être définie sur 259 (STILL_ACTIVE). Pour éviter toute confusion de cette condition, n’utilisez pas 259 comme code de renvoi dans un processus natif.</i>
	
	</apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.events:DNSResolverEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">DNSResolverEvent</apiName><shortdesc class="- topic/shortdesc ">
 La classe DNSResolverEvent représente les résultats d’une recherche DNS (système de noms de domaine).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 La classe DNSResolverEvent représente les résultats d’une recherche DNS (système de noms de domaine).
 
 <p class="- topic/p ">Utilisez la méthode <codeph class="+ topic/ph pr-d/codeph ">lookup()</codeph> de la classe DNSResolver pour lancer une requête DNS. Les enregistrements de ressources renvoyés par la requête sont placés dans le tableau <codeph class="+ topic/ph pr-d/codeph ">resourceRecords</codeph> de cet objet DNSResolverEvent.</p>
 
 </apiDesc><example conref="examples\DNSResolverEventExample.as" class="- topic/example "/></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.net.dns.xml#DNSResolver" class="- topic/link "><linktext class="- topic/linktext ">DNSResolver</linktext></link></related-links><adobeApiEvent id="flash.events:DNSResolverEvent:LOOKUP_lookup" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">lookup</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:DNSResolverEvent:LOOKUP</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:DNSResolverEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Distribué par un objet DNSResolver lorsqu’une opération de recherche se termine.
     
     </apiTipText></apiTipTexts></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="flash.events:DNSResolverEvent:DNSResolverEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">DNSResolverEvent</apiName><shortdesc class="- topic/shortdesc ">
     Crée un objet DNSResolverEvent qui contient les résultats d’une recherche DNS.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">type</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc "> Type de l’événement. Les valeurs possibles sont les suivantes :<codeph class="+ topic/ph pr-d/codeph ">DNSResolverEvent.LOOKUP</codeph>
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">bubbles</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc "> Détermine si l’objet Event prend part à la phase de propagation vers le haut du flux d’événements. 
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">cancelable</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Détermine si l’objet d’événement peut être annulé. 
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">host</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData "/><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Chaîne de requête, telle que le nom d’hôte, l’adresse IP ou le localisateur de services, utilisée lors de l’appel de la méthode <codeph class="+ topic/ph pr-d/codeph ">lookup()</codeph> de la classe DNSResolver pour laquelle le nouvel événement est une réponse.
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">resourceRecords</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Array</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Liste des enregistrements de ressources DNS renvoyés.
     </apiDesc></apiParam></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Crée un objet DNSResolverEvent qui contient les résultats d’une recherche DNS. Les objets Event sont transmis en tant que paramètres aux écouteurs d’événements.
     
     </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="flash.events:DNSResolverEvent:clone" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">clone</apiName><shortdesc class="- topic/shortdesc ">
    Crée une copie de l’objet DNSResolverEvent et définit la valeur de chaque propriété de sorte qu’elle corresponde à la valeur d’origine.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Nouvel objet DNSResolverEvent dont les propriétés ont la même valeur que celles de l’objet d’origine.
    </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.events:Event</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Crée une copie de l’objet DNSResolverEvent et définit la valeur de chaque propriété de sorte qu’elle corresponde à la valeur d’origine. 
    
    </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.events:DNSResolverEvent:toString" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">toString</apiName><shortdesc class="- topic/shortdesc ">
    Renvoie une chaîne répertoriant toutes les propriétés de l’objet DNSResolverEvent.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Chaîne répertoriant toutes les propriétés de l’objet <codeph class="+ topic/ph pr-d/codeph ">ProgressEvent</codeph>.
    </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Renvoie une chaîne répertoriant toutes les propriétés de l’objet DNSResolverEvent. La chaîne est écrite au format suivant :
    <p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">[DNSResolverEvent type=<i class="+ topic/ph hi-d/i ">valeur</i> bubbles=<i class="+ topic/ph hi-d/i ">value</i> cancelable=<i class="+ topic/ph hi-d/i ">valeur</i> host=<i class="+ topic/ph hi-d/i ">valeur</i> resourceRecords=<i class="+ topic/ph hi-d/i ">valeur</i>]</codeph></p>
    
    </apiDesc></apiOperationDetail></apiOperation><apiValue id="flash.events:DNSResolverEvent:LOOKUP" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">LOOKUP</apiName><shortdesc class="- topic/shortdesc ">
     Définit la valeur de la propriété type d’un objet d’événement lookup.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">lookup</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Distribué par un objet DNSResolver lorsqu’une opération de recherche se termine.
     
     </apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet d’événement <codeph class="+ topic/ph pr-d/codeph ">lookup</codeph>.
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:DNSResolverEvent:host:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">host</apiName><shortdesc class="- topic/shortdesc ">
    Chaîne de requête, telle que le nom d’hôte, l’adresse IP ou le localisateur de services, utilisée lors de l’appel de la méthode lookup() de la classe DNSResolver pour laquelle cet événement est une réponse.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Chaîne de requête utilisée dans l’opération de recherche.
    
    </apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Chaîne de requête, telle que le nom d’hôte, l’adresse IP ou le localisateur de services, utilisée lors de l’appel de la méthode <codeph class="+ topic/ph pr-d/codeph ">lookup()</codeph> de la classe DNSResolver pour laquelle cet événement est une réponse.
    
    </apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:DNSResolverEvent:resourceRecords:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">resourceRecords</apiName><shortdesc class="- topic/shortdesc ">
	Tableau contenant les enregistrements de ressources renvoyés par la recherche DNS.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Array</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Tableau contenant les enregistrements de ressources renvoyés par la recherche DNS.
    
    </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.events:Event" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">Event</apiName><shortdesc class="- topic/shortdesc ">
 La classe Event est utilisée comme classe de base pour la création des objets événement, transmis aux écouteurs d’événement en tant que paramètres lorsqu’un événement se produit.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Classe de base des objets Event.
 </apiTipText></apiTipTexts><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 La classe Event est utilisée comme classe de base pour la création des objets événement, transmis aux écouteurs d’événement en tant que paramètres lorsqu’un événement se produit.
 
 <p class="- topic/p ">Les propriétés de la classe Event contiennent des informations de base sur un événement, indiquant, par exemple son type ou si son comportement par défaut peut être annulé. Pour la plupart des événements, tels ceux représentés par les constantes de la classe Event, ces informations de base sont suffisantes. Pour d’autres événements, cependant, des informations détaillées sont nécessaires. <ph class="- topic/ph ">Les événements associés à un clic de souris, par exemple, doivent comprendre des informations supplémentaires sur l’emplacement de l’événement clic et les touches enfoncées, le cas échéant, pendant ce dernier. Vous pouvez transmettre des informations supplémentaires de ce type aux écouteurs d’événements en étendant la classe Event comme le fait la classe MouseEvent, par exemple. ActionScript 3.0</ph> L’API définit plusieurs sous-classes Event destinées pour les événements courants qui nécessitent des informations supplémentaires. Les événements associés aux sous-classes Event sont décrits dans la documentation de chaque classe.</p>
 
 <p class="- topic/p ">Il est possible d’utiliser les méthodes de la classe Event dans les fonctions d’écouteur d’événement pour définir le comportement de l’objet événement. Certains événements sont associés à un comportement par défaut.<ph class="- topic/ph "> Par exemple, l’événement <codeph class="+ topic/ph pr-d/codeph ">doubleClick</codeph> dont le comportement par défaut met en évidence le mot qui se trouve sous le pointeur de la souris au moment où l’événement se produit.</ph>Votre écouteur d’événements peut annuler ce comportement en appelant la méthode <codeph class="+ topic/ph pr-d/codeph ">preventDefault()</codeph>. <ph class="- topic/ph ">Vous pouvez également faire en sorte que l’écouteur d’événement actuel soit le dernier à traiter un événement en appelant la méthode <codeph class="+ topic/ph pr-d/codeph ">stopPropagation()</codeph> ou <codeph class="+ topic/ph pr-d/codeph ">stopImmediatePropagation()</codeph>.</ph></p>
 <p class="- topic/p ">Il existe d’autres sources d’informations :</p>
 <ul class="- topic/ul "><li class="- topic/li ">Description utile concernant la durée des événements, l’exécution du code et le rendu à l’exécution dans le billet de Ted Patrick : <xref href="http://www.onflex.org/ted/2005/07/flash-player-mental-model-elastic.php" scope="external" class="- topic/xref ">Flash Player Mental Model - The Elastic Racetrack</xref> (disponible en anglais uniquement).</li><li class="- topic/li ">Billet de Johannes Tacskovics concernant la durée des événements d’image, tels que ENTER_FRAME et EXIT_FRAME : <xref href="http://blog.johannest.com/2009/06/15/the-movieclip-life-cycle-revisited-from-event-added-to-event-removed_from_stage/" scope="external" class="- topic/xref ">The MovieClip Lifecycle</xref> (disponible en anglais uniquement).</li><li class="- topic/li ">Article signé Trevor McCauley sur l’ordre des opérations ActionScript : <xref href="http://www.senocular.com/flash/tutorials/orderofoperations/" scope="external" class="- topic/xref ">Order of Operations in ActionScript</xref> (disponible en anglais uniquement).</li><li class="- topic/li ">Billet de Matt Przybylski concernant la création des événements personnalisés : <xref href="http://evolve.reintroducing.com/2007/10/23/as3/as3-custom-events/" scope="external" class="- topic/xref ">AS3: Custom Events</xref> (disponible en anglais uniquement).</li></ul>
 
 
 </apiDesc><example conref="examples\EventExample.as" class="- topic/example "> L’exemple suivant utilise la classe <codeph class="+ topic/ph pr-d/codeph ">EventExample</codeph> et la classe personnalisée <codeph class="+ topic/ph pr-d/codeph ">Square</codeph> pour montrer comment gérer un événement qui peut se propager vers le haut (bubbling).
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
package {
    import flash.display.Sprite;
    import flash.events.Event;
    import flash.events.MouseEvent;

    public class EventExample extends Sprite {
        
        public function EventExample() {
            var square_0:Square = new Square(300, 0x336633);
            addChild(square_0);
            
            var square_1:Square = new Square(250, 0x669966);
            square_0.addChild(square_1);

            var square_2:Square = new Square(200, 0x66CC66);
            square_1.addChild(square_2);

            var square_3:Square = new Square(150, 0xAA0000);
            square_3.shouldBubble = false;
            square_2.addChild(square_3);

            var square_4:Square = new Square(100, 0x66FF66);
            square_3.addChild(square_4);

            var square_5:Square = new Square(50, 0xCC0000);
            square_5.shouldBubble = false;
            square_4.addChild(square_5);

            this.addEventListener(MouseEvent.CLICK, clickHandler);
        }
        
        private function clickHandler(e:Event):void {
            trace(">> stage: " + e.type + " event from " + e.target.name + " called on " + this.name);
            trace(">> --------------------------------------------");
        }
    }
}

import flash.display.Sprite;
import flash.events.Event;
import flash.events.MouseEvent;

class Square extends Sprite {
    private var sideLen:int;
    private var color:Number;
    public var shouldBubble:Boolean = true;

    public function Square(sideLen:int, color:Number) {
        this.sideLen = sideLen;
        this.color = color;
        init();
        draw();
    }
        
    private function init():void {
        buttonMode = true;
        this.addEventListener(MouseEvent.CLICK, firstClickHandler);
        this.addEventListener(MouseEvent.CLICK, secondClickHandler);
        this.addEventListener(MouseEvent.CLICK, thirdClickHandler);
    }
        
    private function draw():void {
        this.graphics.beginFill(color);
        this.graphics.drawRect(0, 0, sideLen, sideLen);
    }
        
    private function firstClickHandler(e:Event):void {
        trace(">> 1e: " + e.type + " event from " + e.target.name + " called on " + this.name);
        if(!shouldBubble) {
            e.stopPropagation();
        }
    }

    private function secondClickHandler(e:Event):void {
        trace(">> 2e: " + e.type + " event from " + e.target.name + " called on " + this.name);
        if(!shouldBubble) {
            e.stopImmediatePropagation();
            trace(">> --------------------------------------------");
        }
    }

    private function thirdClickHandler(e:Event):void {
        trace(">> 3e: " + e.type + " event from " + e.target.name + " called on " + this.name);
    }
}
</codeblock></example><example conref="examples\EventExample2.as" class="- topic/example "> L’exemple suivant crée une démonstration interactive de la différence entre les événements <codeph class="+ topic/ph pr-d/codeph ">ADDED</codeph> et <codeph class="+ topic/ph pr-d/codeph ">ADDED_TO_STAGE</codeph>, ainsi que de la différence entre les événements <codeph class="+ topic/ph pr-d/codeph ">REMOVED</codeph> et <codeph class="+ topic/ph pr-d/codeph ">REMOVED_FROM_STAGE</codeph>. Le fait de cliquer sur un sprite entraîne sa suppression de la scène et la suppression de tout ce qu’il contient. Par exemple, le fait de cliquer sur le sprite le plus grand entraîne le déclenchement d’un événement <codeph class="+ topic/ph pr-d/codeph ">REMOVED</codeph> ainsi que de trois événements <codeph class="+ topic/ph pr-d/codeph ">REMOVED_FROM_STAGE</codeph>.
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
 package {
    import flash.display.Sprite;
    import flash.events.*;

    public class EventExample2 extends Sprite {
        public function EventExample2():void {
            var parentSprite:Sprite = createSprite("parentSprite",200);
            var childSprite:Sprite = createSprite("childSprite",100);
            var childOfChildSprite:Sprite = createSprite("childOfChildSprite",50);
            
            trace(":: Adding to Stage ::");
            this.addChild(parentSprite);
            trace(":: Adding to Stage ::");
            parentSprite.addChild(childSprite);
            trace(":: Adding to Stage ::");
            childSprite.addChild(childOfChildSprite);
        }
        private function createSprite(name:String,size:uint):Sprite {
            trace(":: Creating Sprite ::");
            var newSprite:Sprite = new Sprite();
            newSprite.name = name;
            newSprite.graphics.beginFill(0xFFFFFF * Math.random(),1);
            newSprite.graphics.drawRect(0,0,size,size);
            newSprite.graphics.endFill();
            newSprite.addEventListener(Event.ADDED, spriteAdded);
            newSprite.addEventListener(Event.ADDED_TO_STAGE, spriteAddedToStage);
            newSprite.addEventListener(Event.REMOVED, spriteRemoved);
            newSprite.addEventListener(Event.REMOVED_FROM_STAGE, spriteRemovedFromStage);
            newSprite.addEventListener(MouseEvent.CLICK, remove);
            return newSprite;
        }
        private function remove(event:Event) {
            if(event.target == event.currentTarget) {
                trace(":: Removing Clicked Sprite ::");
                var target:Sprite = Sprite(event.target);
                target.parent.removeChild(target);
            }
        }
        private function spriteRemovedFromStage(event:Event):void {
            trace("REMOVED_FROM_STAGE: " + event.target.name + " : " + event.currentTarget.name);
        }
        private function spriteRemoved(event:Event):void {
            trace("REMOVED: " + event.target.name + " from " + event.currentTarget.name);
        }
        private function spriteAddedToStage(event:Event):void {
            trace("ADDED_TO_STAGE: " + event.target.name + " : " + event.currentTarget.name);
        }
        private function spriteAdded(event:Event):void {
            trace("ADDED: " + event.target.name + " within " + event.currentTarget.name);
        }
    }
}
</codeblock></example></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.events.xml#EventDispatcher" class="- topic/link "><linktext class="- topic/linktext ">flash.events.EventDispatcher</linktext></link></related-links><adobeApiEvent id="flash.events:Event:ACTIVATE_activate" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">activate</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:Event:ACTIVATE</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:Event</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.events.xml#EventDispatcher/event:activate" class="- topic/link "><linktext class="- topic/linktext ">flash.events.EventDispatcher.activate</linktext></link><link href="flash.events.xml#Event/DEACTIVATE" class="- topic/link "><linktext class="- topic/linktext ">DEACTIVATE</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:Event:ADDED_TO_STAGE_addedToStage" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">addedToStage</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:Event:ADDED_TO_STAGE</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:Event</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#DisplayObject/event:addedToStage" class="- topic/link "><linktext class="- topic/linktext ">flash.display.DisplayObject.addedToStage</linktext></link><link href="flash.events.xml#Event/ADDED" class="- topic/link "><linktext class="- topic/linktext ">ADDED</linktext></link><link href="flash.events.xml#Event/REMOVED" class="- topic/link "><linktext class="- topic/linktext ">REMOVED</linktext></link><link href="flash.events.xml#Event/REMOVED_FROM_STAGE" class="- topic/link "><linktext class="- topic/linktext ">REMOVED_FROM_STAGE</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:Event:ADDED_added" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">added</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:Event:ADDED</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:Event</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#DisplayObject/event:added" class="- topic/link "><linktext class="- topic/linktext ">flash.display.DisplayObject.added</linktext></link><link href="flash.events.xml#Event/ADDED_TO_STAGE" class="- topic/link "><linktext class="- topic/linktext ">ADDED_TO_STAGE</linktext></link><link href="flash.events.xml#Event/REMOVED" class="- topic/link "><linktext class="- topic/linktext ">REMOVED</linktext></link><link href="flash.events.xml#Event/REMOVED_FROM_STAGE" class="- topic/link "><linktext class="- topic/linktext ">REMOVED_FROM_STAGE</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:Event:CANCEL_cancel" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">cancel</apiName><prolog class="- topic/prolog "><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><internal><code>ProductManager</code> pulled from table 
	</internal></asCustoms></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:Event:CANCEL</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:Event</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.net.xml#FileReference/event:cancel" class="- topic/link "><linktext class="- topic/linktext ">flash.net.FileReference.cancel</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:Event:CHANGE_change" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">change</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:Event:CHANGE</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:Event</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.text.xml#TextField/event:change" class="- topic/link "><linktext class="- topic/linktext ">flash.text.TextField.change</linktext></link><link href="flash.events.xml#TextEvent/TEXT_INPUT" class="- topic/link "><linktext class="- topic/linktext ">flash.events.TextEvent.TEXT_INPUT</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:Event:CLEAR_copy" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">copy</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:Event:CLEAR</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:Event</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:clear" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.clear</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:Event:CLOSE_close" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">close</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:Event:CLOSE</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:Event</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.net.xml#Socket/event:close" class="- topic/link "><linktext class="- topic/linktext ">flash.net.Socket.close</linktext></link><link href="flash.net.xml#XMLSocket/event:close" class="- topic/link "><linktext class="- topic/linktext ">flash.net.XMLSocket.close</linktext></link><link href="flash.display.xml#NativeWindow/event:close" class="- topic/link "><linktext class="- topic/linktext ">flash.display.NativeWindow.close</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:Event:CLOSING_closing" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">closing</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:Event:CLOSING</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:Event</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#NativeWindow/event:closing" class="- topic/link "><linktext class="- topic/linktext ">flash.display.NativeWindow.closing</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:Event:COMPLETE_complete" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">complete</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:Event:COMPLETE</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:Event</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#LoaderInfo/event:complete" class="- topic/link "><linktext class="- topic/linktext ">flash.display.LoaderInfo.complete</linktext></link><link href="../../flash/html/HTMLLoader.html#event:complete" class="- topic/link "><linktext class="- topic/linktext ">flash.html.HTMLLoader.complete</linktext></link><link href="flash.media.xml#Sound/event:complete" class="- topic/link "><linktext class="- topic/linktext ">flash.media.Sound.complete</linktext></link><link href="flash.net.xml#FileReference/event:complete" class="- topic/link "><linktext class="- topic/linktext ">flash.net.FileReference.complete</linktext></link><link href="flash.net.xml#URLLoader/event:complete" class="- topic/link "><linktext class="- topic/linktext ">flash.net.URLLoader.complete</linktext></link><link href="flash.net.xml#URLStream/event:complete" class="- topic/link "><linktext class="- topic/linktext ">flash.net.URLStream.complete</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:Event:CONNECT_connect" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">connect</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:Event:CONNECT</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:Event</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.net.xml#Socket/event:connect" class="- topic/link "><linktext class="- topic/linktext ">flash.net.Socket.connect</linktext></link><link href="flash.net.xml#XMLSocket/event:connect" class="- topic/link "><linktext class="- topic/linktext ">flash.net.XMLSocket.connect</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:Event:COPY_copy" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">copy</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:Event:COPY</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:Event</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:copy" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.copy</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:Event:CUT_cut" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">cut</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:Event:CUT</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:Event</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:cut" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.cut</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:Event:DEACTIVATE_deactivate" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">deactivate</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:Event:DEACTIVATE</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:Event</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.events.xml#EventDispatcher/event:deactivate" class="- topic/link "><linktext class="- topic/linktext ">flash.events.EventDispatcher.deactivate</linktext></link><link href="flash.events.xml#Event/ACTIVATE" class="- topic/link "><linktext class="- topic/linktext ">ACTIVATE</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:Event:DISPLAYING_displaying" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">displaying</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:Event:DISPLAYING</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:Event</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#NativeMenu/event:displaying" class="- topic/link "><linktext class="- topic/linktext ">flash.display.NativeMenu.displaying</linktext></link><link href="flash.display.xml#NativeMenuItem/event:displaying" class="- topic/link "><linktext class="- topic/linktext ">flash.display.NativeMenuItem.displaying</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:Event:ENTER_FRAME_enterFrame" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">enterFrame</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:Event:ENTER_FRAME</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:Event</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#DisplayObject/event:enterFrame" class="- topic/link "><linktext class="- topic/linktext ">flash.display.DisplayObject.enterFrame</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:Event:EXITING_exiting" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">exiting</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:Event:EXITING</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:Event</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.desktop.xml#NativeApplication/event:exiting" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.NativeApplication.exiting</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:Event:EXIT_FRAME_exitFrame" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">exitFrame</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:Event:EXIT_FRAME</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:Event</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#DisplayObject/event:exitFrame" class="- topic/link "><linktext class="- topic/linktext ">flash.display.DisplayObject.exitFrame</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:Event:FRAME_CONSTRUCTED_frameConstructed" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">frameConstructed</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:Event:FRAME_CONSTRUCTED</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:Event</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#DisplayObject/event:frameConstructed" class="- topic/link "><linktext class="- topic/linktext ">flash.display.DisplayObject.frameConstructed</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:Event:FULLSCREEN_fullScreen" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">fullScreen</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:Event:FULLSCREEN</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:Event</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#Stage/event:fullScreen" class="- topic/link "><linktext class="- topic/linktext ">flash.display.Stage.fullScreen</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:Event:HTML_BOUNDS_CHANGE_htmlBoundsChange" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">htmlBoundsChange</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:Event:HTML_BOUNDS_CHANGE</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:Event</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="../../flash/html/HTMLLoader.html#event:htmlBoundsChange" class="- topic/link "><linktext class="- topic/linktext ">événement htmlBoundsChange</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:Event:HTML_DOM_INITIALIZE_htmlDOMInitialize" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">htmlDOMInitialize</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:Event:HTML_DOM_INITIALIZE</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:Event</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="../../flash/html/HTMLLoader.html#event:htmlDOMInitialize" class="- topic/link "><linktext class="- topic/linktext ">événement htmlDOMInitialize</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:Event:HTML_RENDER_htmlRender" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">htmlRender</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:Event:HTML_RENDER</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:Event</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="../../flash/html/HTMLLoader.html#event:htmlRender" class="- topic/link "><linktext class="- topic/linktext ">événement htmlRender</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:Event:ID3_id3" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">id3</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:Event:ID3</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:Event</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.media.xml#Sound/event:id3" class="- topic/link "><linktext class="- topic/linktext ">flash.media.Sound.id3</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:Event:INIT_init" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">init</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:Event:INIT</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:Event</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#LoaderInfo/event:init" class="- topic/link "><linktext class="- topic/linktext ">flash.display.LoaderInfo.init</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:Event:LOCATION_CHANGE_locationChange" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">locationChange</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:Event:LOCATION_CHANGE</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:Event</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="../../flash/html/HTMLLoader.html#event:locationChange" class="- topic/link "><linktext class="- topic/linktext ">événement locationChange</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:Event:MOUSE_LEAVE_mouseLeave" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">mouseLeave</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:Event:MOUSE_LEAVE</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:Event</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#Stage/event:mouseLeave" class="- topic/link "><linktext class="- topic/linktext ">flash.display.Stage.mouseLeave</linktext></link><link href="flash.events.xml#MouseEvent" class="- topic/link "><linktext class="- topic/linktext ">flash.events.MouseEvent</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:Event:NETWORK_CHANGE_networkChange" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">networkChange</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:Event:NETWORK_CHANGE</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:Event</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.desktop.xml#NativeApplication/event:networkChange" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.NativeApplication.networkChange</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:Event:OPEN_open" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">open</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:Event:OPEN</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:Event</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#LoaderInfo/event:open" class="- topic/link "><linktext class="- topic/linktext ">flash.display.LoaderInfo.open</linktext></link><link href="flash.media.xml#Sound/event:open" class="- topic/link "><linktext class="- topic/linktext ">flash.media.Sound.open</linktext></link><link href="flash.net.xml#FileReference/event:open" class="- topic/link "><linktext class="- topic/linktext ">flash.net.FileReference.open</linktext></link><link href="flash.net.xml#URLLoader/event:open" class="- topic/link "><linktext class="- topic/linktext ">flash.net.URLLoader.open</linktext></link><link href="flash.net.xml#URLStream/event:open" class="- topic/link "><linktext class="- topic/linktext ">flash.net.URLStream.open</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:Event:PASTE_paste" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">paste</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:Event:PASTE</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:Event</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:paste" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.paste</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:Event:PREPARING_flash.events.Event" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">flash.events.Event</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:Event:PREPARING</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:Event</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#NativeMenu/event:preparing" class="- topic/link "><linktext class="- topic/linktext ">flash.display.NativeMenu.preparing</linktext></link><link href="flash.display.xml#NativeMenuItem/event:preparing" class="- topic/link "><linktext class="- topic/linktext ">flash.display.NativeMenuItem.preparing</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:Event:REMOVED_FROM_STAGE_removedFromStage" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">removedFromStage</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:Event:REMOVED_FROM_STAGE</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:Event</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#DisplayObject/event:removedFromStage" class="- topic/link "><linktext class="- topic/linktext ">flash.display.DisplayObject.removedFromStage</linktext></link><link href="flash.events.xml#Event/ADDED" class="- topic/link "><linktext class="- topic/linktext ">ADDED</linktext></link><link href="flash.events.xml#Event/REMOVED" class="- topic/link "><linktext class="- topic/linktext ">REMOVED</linktext></link><link href="flash.events.xml#Event/ADDED_TO_STAGE" class="- topic/link "><linktext class="- topic/linktext ">ADDED_TO_STAGE</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:Event:REMOVED_removed" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">removed</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:Event:REMOVED</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:Event</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#DisplayObject/event:removed" class="- topic/link "><linktext class="- topic/linktext ">flash.display.DisplayObject.removed</linktext></link><link href="flash.events.xml#Event/ADDED" class="- topic/link "><linktext class="- topic/linktext ">ADDED</linktext></link><link href="flash.events.xml#Event/ADDED_TO_STAGE" class="- topic/link "><linktext class="- topic/linktext ">ADDED_TO_STAGE</linktext></link><link href="flash.events.xml#Event/REMOVED_FROM_STAGE" class="- topic/link "><linktext class="- topic/linktext ">REMOVED_FROM_STAGE</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:Event:RENDER_render" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">render</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:Event:RENDER</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:Event</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#DisplayObject/event:render" class="- topic/link "><linktext class="- topic/linktext ">flash.display.DisplayObject.render</linktext></link><link href="flash.display.xml#Stage/invalidate()" class="- topic/link "><linktext class="- topic/linktext ">flash.display.Stage.invalidate()</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:Event:RESIZE_resize" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">resize</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:Event:RESIZE</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:Event</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#Stage/event:resize" class="- topic/link "><linktext class="- topic/linktext ">flash.display.Stage.resize</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:Event:SCROLL_scroll" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">scroll</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:Event:SCROLL</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:Event</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.text.xml#TextField/event:scroll" class="- topic/link "><linktext class="- topic/linktext ">flash.text.TextField.scroll</linktext></link><link href="../../flash/html/HTMLLoader.html#event:scroll" class="- topic/link "><linktext class="- topic/linktext ">flash.html.HTMLLoader.scroll</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:Event:SELECT_ALL_selectAll" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">selectAll</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:Event:SELECT_ALL</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:Event</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:selectAll" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.selectAll</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:Event:SELECT_select" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">select</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:Event:SELECT</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:Event</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.net.xml#FileReference/event:select" class="- topic/link "><linktext class="- topic/linktext ">flash.net.FileReference.select</linktext></link><link href="flash.display.xml#NativeMenu/event:select" class="- topic/link "><linktext class="- topic/linktext ">flash.display.NativeMenu.select</linktext></link><link href="flash.display.xml#NativeMenuItem/event:select" class="- topic/link "><linktext class="- topic/linktext ">flash.display.NativeMenuItem.select</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:Event:SOUND_COMPLETE_soundComplete" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">soundComplete</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:Event:SOUND_COMPLETE</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:Event</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.media.xml#SoundChannel/event:soundComplete" class="- topic/link "><linktext class="- topic/linktext ">flash.media.SoundChannel.soundComplete</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:Event:STANDARD_ERROR_CLOSE_flash.events.Event" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">flash.events.Event</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:Event:STANDARD_ERROR_CLOSE</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:Event</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flash.events:Event:STANDARD_INPUT_CLOSE_flash.events.Event" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">flash.events.Event</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:Event:STANDARD_INPUT_CLOSE</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:Event</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flash.events:Event:STANDARD_OUTPUT_CLOSE_flash.events.Event" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">flash.events.Event</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:Event:STANDARD_OUTPUT_CLOSE</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:Event</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flash.events:Event:TAB_CHILDREN_CHANGE_tabChildrenChange" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">tabChildrenChange</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:Event:TAB_CHILDREN_CHANGE</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:Event</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:tabChildrenChange" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.tabChildrenChange</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:Event:TAB_ENABLED_CHANGE_tabEnabledChange" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">tabEnabledChange</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:Event:TAB_ENABLED_CHANGE</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:Event</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:tabEnabledChange" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.tabEnabledChange</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:Event:TAB_INDEX_CHANGE_tabIndexChange" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">tabIndexChange</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:Event:TAB_INDEX_CHANGE</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:Event</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:tabIndexChange" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.tabIndexChange</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:Event:TEXT_INTERACTION_MODE_CHANGE_textInteractionModeChange" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">textInteractionModeChange</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:Event:TEXT_INTERACTION_MODE_CHANGE</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:Event</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.text.xml#TextField/event:textInteractionModeChange" class="- topic/link "><linktext class="- topic/linktext ">flash.text.TextField.textInteractionModeChange</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:Event:UNLOAD_unload" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">unload</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:Event:UNLOAD</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:Event</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#LoaderInfo/event:unload" class="- topic/link "><linktext class="- topic/linktext ">flash.display.LoaderInfo.unload</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:Event:USER_IDLE_userIdle" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">userIdle</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:Event:USER_IDLE</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:Event</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.desktop.xml#NativeApplication/event:userIdle" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.NativeApplication.userIdle</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:Event:USER_PRESENT_userIdle" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">userIdle</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:Event:USER_PRESENT</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:Event</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.desktop.xml#NativeApplication/event:userPresent" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.NativeApplication.userPresent</linktext></link></related-links></adobeApiEvent><apiConstructor id="flash.events:Event:Event" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">Event</apiName><shortdesc class="- topic/shortdesc ">
     Crée un objet Event à transmettre en tant que paramètre aux écouteurs d’événements.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">type</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc "> Type de l’événement, accessible en tant que <codeph class="+ topic/ph pr-d/codeph ">Event.type</codeph>.
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">bubbles</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc "> Détermine si l’objet Event prend part à la phase de propagation du flux d’événements. La valeur par défaut est <codeph class="+ topic/ph pr-d/codeph ">false</codeph>.
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">cancelable</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Détermine si l’objet Event peut être annulé. La valeur par défaut est <codeph class="+ topic/ph pr-d/codeph ">false</codeph>.
     
     </apiDesc></apiParam><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Utilisé pour créer un objet Event.
      
      </apiTipText></apiTipTexts></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Crée un objet Event à transmettre en tant que paramètre aux écouteurs d’événements.
     
	 </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="flash.events:Event:clone" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">clone</apiName><shortdesc class="- topic/shortdesc ">
	 Duplique une occurrence d’une sous-classe Event.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Nouvel objet Event identique à l’original.
	 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.events:Event</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Duplique une occurrence d’une sous-classe Event.
	 
     <p class="- topic/p ">Renvoie un nouvel objet Event, qui est une copie de l’occurrence d’origine de l’objet Event. En règle générale, vous n’appelez pas <codeph class="+ topic/ph pr-d/codeph ">clone()</codeph>. La classe EventDispatcher l’appelle automatiquement lorsque vous redistribuez un événement, en d’autres termes, lorsque vous appelez <codeph class="+ topic/ph pr-d/codeph ">dispatchEvent(event)</codeph> à partir du gestionnaire qui gère <codeph class="+ topic/ph pr-d/codeph ">event</codeph>.</p>
	 
	 <p class="- topic/p ">Le nouvel objet Event comprend toutes les propriétés de l’objet d’origine.</p> 
	 
	 <p class="- topic/p ">Lorsque vous créez une classe Event personnalisée, vous devez bloquer la méthode <codeph class="+ topic/ph pr-d/codeph ">Event.clone()</codeph> héritée afin qu’elle duplique les propriétés de votre classe personnalisée. Si vous ne définissez pas toutes les propriétés que vous ajoutez à votre sous-classe Event, elles ne posséderont pas les valeurs correctes lorsque les écouteurs gèreront l’événement redistribué.</p>
	 
	 <p class="- topic/p ">Dans cet exemple, <codeph class="+ topic/ph pr-d/codeph ">PingEvent</codeph> est une sous-classe de <codeph class="+ topic/ph pr-d/codeph ">Event</codeph> et implémente donc sa propre version de <codeph class="+ topic/ph pr-d/codeph ">clone()</codeph>.</p>
	 
	 <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
	 class PingEvent extends Event {
		 var URL:String;
		 
	 public override function clone():Event {
	 	     return new PingEvent(type, bubbles, cancelable, URL);
	    }
	 }
	 </codeblock>
	 
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.events:Event:formatToString" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">formatToString</apiName><shortdesc class="- topic/shortdesc ">
	 Fonction d’un utilitaire permettant d’implémenter la méthode toString() dans des classes Event ActionScript 3.0 personnalisées.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Nom de votre classe Event personnalisée et valeur de chaîne de votre paramètre <codeph class="+ topic/ph pr-d/codeph ">...arguments</codeph>.
	 
	 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">className</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Nom de votre classe Event personnalisée. <ph class="- topic/ph ">Dans l’exemple précédent, le paramètre <codeph class="+ topic/ph pr-d/codeph ">className</codeph> est <codeph class="+ topic/ph pr-d/codeph ">PingEvent</codeph>.</ph>
	 
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">arguments</apiItemName><apiType value="restParam" name="type" class="- topic/state reference/state apiRef/apiType "/><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Propriétés de la classe Event<ph class="- topic/ph "> et propriétés que vous ajoutez à votre classe Event personnalisée. Dans l’exemple précédent, le paramètre <codeph class="+ topic/ph pr-d/codeph ">...arguments</codeph> comprend <codeph class="+ topic/ph pr-d/codeph ">type</codeph>, <codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph>, <codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph>, <codeph class="+ topic/ph pr-d/codeph ">eventPhase</codeph> et <codeph class="+ topic/ph pr-d/codeph ">URL</codeph></ph>.
	 
	 </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Fonction d’un utilitaire permettant d’implémenter la méthode <codeph class="+ topic/ph pr-d/codeph ">toString()</codeph> dans des classes Event ActionScript 3.0 personnalisées. <ph class="- topic/ph ">Le blocage de la méthode <codeph class="+ topic/ph pr-d/codeph ">toString()</codeph> est recommandé, mais n’est pas obligatoire.</ph>
	 
	 <pre xml:space="preserve" class="- topic/pre ">
	 class PingEvent extends Event {
	  var URL:String;
	 
	 public override function toString():String { 
	  return formatToString("PingEvent", "type", "bubbles", "cancelable", "eventPhase", "URL"); 
	    }
	 }
	 </pre>
	 
	 
	 
	 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.events:Event:isDefaultPrevented" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">isDefaultPrevented</apiName><shortdesc class="- topic/shortdesc ">
	Vérifie si la méthode preventDefault() a été appelée pour l’événement.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Si <codeph class="+ topic/ph pr-d/codeph ">preventDefault()</codeph> a été appelée, la valeur <codeph class="+ topic/ph pr-d/codeph ">true</codeph> est renvoyée ; dans le cas contraire, <codeph class="+ topic/ph pr-d/codeph ">false</codeph> est renvoyée.
	
	</apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Vérifie si la méthode <codeph class="+ topic/ph pr-d/codeph ">preventDefault()</codeph> a été appelée pour l’événement. Si la méthode <codeph class="+ topic/ph pr-d/codeph ">preventDefault()</codeph> a été appelée, la valeur <codeph class="+ topic/ph pr-d/codeph ">true</codeph> est renvoyée ; dans le cas contraire, <codeph class="+ topic/ph pr-d/codeph ">false</codeph> est renvoyée.
	
	</apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.events.xml#Event/preventDefault()" class="- topic/link "><linktext class="- topic/linktext ">flash.events.Event.preventDefault()</linktext></link></related-links></apiOperation><apiOperation id="flash.events:Event:preventDefault" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">preventDefault</apiName><shortdesc class="- topic/shortdesc ">
	Annule le comportement par défaut d’un événement si cette opération est possible.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Annule le comportement par défaut d’un événement si cette opération est possible.
	
	<p class="- topic/p ">De nombreux événements sont associés à des comportements exécutés par défaut. <ph class="- topic/ph ">Par exemple, si un utilisateur tape un caractère dans un champ de texte, le comportement par défaut consiste à afficher le caractère dans le champ de texte. Etant donné que le comportement par défaut de l’événement <codeph class="+ topic/ph pr-d/codeph ">TextEvent.TEXT_INPUT</codeph> peut être annulé, vous pouvez utiliser la méthode <codeph class="+ topic/ph pr-d/codeph ">preventDefault()</codeph> pour bloquer l’affichage du caractère.</ph>
	
	</p>
	
    <p class="- topic/p ">Certains comportements par défaut ne peuvent pas être annulés, tel celui associé à l’événement <codeph class="+ topic/ph pr-d/codeph ">Event.REMOVED</codeph>, généré chaque fois que Flash Player est sur le point de supprimer un objet d’affichage dans la liste d’affichage. Le comportement par défaut (suppression de l’élément) ne pouvant pas être annulé, la méthode <codeph class="+ topic/ph pr-d/codeph ">preventDefault()</codeph> n’a aucun effet sur ce comportement par défaut. </p>
	
	<p class="- topic/p ">Vous pouvez utiliser la propriété <codeph class="+ topic/ph pr-d/codeph ">Event.cancelable</codeph> pour vérifier s’il est possible d’annuler le comportement par défaut associé à un événement spécifique. Si la valeur de <codeph class="+ topic/ph pr-d/codeph ">Event.cancelable</codeph> est <codeph class="+ topic/ph pr-d/codeph ">true</codeph>, <codeph class="+ topic/ph pr-d/codeph ">preventDefault()</codeph> peut être utilisé pour annuler l’événement ; dans le cas contraire, <codeph class="+ topic/ph pr-d/codeph ">preventDefault()</codeph> n’a aucun effet.</p>
	
	</apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.events.xml#Event/isDefaultPrevented()" class="- topic/link "><linktext class="- topic/linktext ">flash.events.Event.isDefaultPrevented()</linktext></link><link href="flash.events.xml#Event/cancelable" class="- topic/link "><linktext class="- topic/linktext ">Event.cancelable</linktext></link></related-links></apiOperation><apiOperation id="flash.events:Event:stopImmediatePropagation" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">stopImmediatePropagation</apiName><shortdesc class="- topic/shortdesc ">
	Bloque le traitement des écouteurs d’événement dans le nœud actuel et les suivants dans le flux d’événements.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Bloque le traitement des écouteurs d’événement dans le nœud actuel et les suivants dans le flux d’événements. <ph class="- topic/ph ">Cette méthode entre en vigueur immédiatement et affecte les écouteurs d’événements dans le nœud actuel. En revanche, la méthode <codeph class="+ topic/ph pr-d/codeph ">stopPropagation()</codeph> n’entre en vigueur qu’au terme du traitement de tous les écouteurs d’événements du nœud actuel.</ph>
	
	<p class="- topic/p "><b class="+ topic/ph hi-d/b ">Remarque : </b> cette méthode n’annule pas le comportement associé à cet événement. Pour plus d’informations sur cette fonctionnalité, voir <codeph class="+ topic/ph pr-d/codeph ">preventDefault()</codeph>.</p>
	
	
	
	</apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.events.xml#Event/stopPropagation()" class="- topic/link "><linktext class="- topic/linktext ">flash.events.Event.stopPropagation()</linktext></link><link href="flash.events.xml#Event/preventDefault()" class="- topic/link "><linktext class="- topic/linktext ">flash.events.Event.preventDefault()</linktext></link></related-links></apiOperation><apiOperation id="flash.events:Event:stopPropagation" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">stopPropagation</apiName><shortdesc class="- topic/shortdesc ">
	Bloque le traitement des écouteurs d’événement dans les nœuds qui suivent le nœud actuel dans le flux d’événements.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Bloque le traitement des écouteurs d’événement dans les nœuds qui suivent le nœud actuel dans le flux d’événements. <ph class="- topic/ph ">Cette méthode n’a aucune incidence sur les écouteurs d’événements du nœud actuel (<codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph>). En revanche, la méthode <codeph class="+ topic/ph pr-d/codeph ">stopImmediatePropagation()</codeph> bloque le traitement des écouteurs d’événement dans le nœud actuel et les suivants. D’autres appels de cette méthode sont sans effet. Cette méthode peut être appelée lors de toute phase du flux d’événements.</ph>
	
	<p class="- topic/p "><b class="+ topic/ph hi-d/b ">Remarque : </b> cette méthode n’annule pas le comportement associé à cet événement. Pour plus d’informations sur cette fonctionnalité, voir <codeph class="+ topic/ph pr-d/codeph ">preventDefault()</codeph>.</p>
	
	
	
	</apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.events.xml#Event/stopImmediatePropagation()" class="- topic/link "><linktext class="- topic/linktext ">flash.events.Event.stopImmediatePropagation()</linktext></link><link href="flash.events.xml#Event/preventDefault()" class="- topic/link "><linktext class="- topic/linktext ">flash.events.Event.preventDefault()</linktext></link></related-links></apiOperation><apiOperation id="flash.events:Event:toString" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">toString</apiName><shortdesc class="- topic/shortdesc ">
	Renvoie une chaîne répertoriant toutes les propriétés de l’objet Event.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Chaîne répertoriant toutes les propriétés de l’objet Event.
	 
	 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Renvoie une chaîne répertoriant toutes les propriétés de l’objet Event. La chaîne est écrite au format suivant :
	<p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">[Event type=<i class="+ topic/ph hi-d/i ">valeur</i> bubbles=<i class="+ topic/ph hi-d/i ">valeur</i> cancelable=<i class="+ topic/ph hi-d/i ">valeur</i>]</codeph></p>
	
	</apiDesc></apiOperationDetail></apiOperation><apiValue id="flash.events:Event:ACTIVATE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">ACTIVATE</apiName><shortdesc class="- topic/shortdesc ">
	La constante ACTIVATE définit la valeur de la propriété type d’un objet événement activate.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">activate</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	La constante <codeph class="+ topic/ph pr-d/codeph ">ACTIVATE</codeph> définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet événement <codeph class="+ topic/ph pr-d/codeph ">activate</codeph>. 
	<p class="- topic/p "><b class="+ topic/ph hi-d/b ">Remarque :</b> cet événement n’a ni « phase de capture », ni « phase de propagation », ce qui signifie que des écouteurs d’événement doivent être ajoutés directement aux cibles potentielles, que la cible soit dans la liste d’affichage ou non.</p>
	<p class="- topic/p ">Les périphériques AIR pour TV ne distribuent jamais automatiquement cet événement. Il est cependant possible de le distribuer manuellement.</p>
	<p class="- topic/p ">Les propriétés de cet événement sont les suivantes :</p>
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">L’objet qui traite activement l’objet Event avec un écouteur d’événements.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Toute occurrence de DisplayObject à laquelle est associé un écouteur pour l’événement <codeph class="+ topic/ph pr-d/codeph ">activate</codeph>.</entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.events.xml#EventDispatcher/event:activate" class="- topic/link "><linktext class="- topic/linktext ">flash.events.EventDispatcher.activate</linktext></link><link href="flash.events.xml#Event/DEACTIVATE" class="- topic/link "><linktext class="- topic/linktext ">DEACTIVATE</linktext></link></related-links></apiValue><apiValue id="flash.events:Event:ADDED_TO_STAGE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">ADDED_TO_STAGE</apiName><shortdesc class="- topic/shortdesc ">
	La constante Event.ADDED_TO_STAGE définit la valeur de la propriété type d’un objet d’événement addedToStage.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9.0.28.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">addedToStage</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	La constante<codeph class="+ topic/ph pr-d/codeph "> Event.ADDED_TO_STAGE</codeph> définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet d’événement <codeph class="+ topic/ph pr-d/codeph ">addedToStage</codeph>. 
	
	
	
	<p class="- topic/p ">Les propriétés de cet événement sont les suivantes :</p>
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">L’objet qui traite activement l’objet Event avec un écouteur d’événements.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Occurrence de DisplayObject ajoutée sur la scène à la liste d’affichage, directement ou par l’intermédiaire d’une arborescence secondaire qui contient l’occurrence DisplayObject. Si l’occurrence DisplayObject est ajoutée directement, l’événement <codeph class="+ topic/ph pr-d/codeph ">added</codeph> se produit avant cet événement.</entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#DisplayObject/event:addedToStage" class="- topic/link "><linktext class="- topic/linktext ">flash.display.DisplayObject.addedToStage</linktext></link><link href="flash.events.xml#Event/ADDED" class="- topic/link "><linktext class="- topic/linktext ">ADDED</linktext></link><link href="flash.events.xml#Event/REMOVED" class="- topic/link "><linktext class="- topic/linktext ">REMOVED</linktext></link><link href="flash.events.xml#Event/REMOVED_FROM_STAGE" class="- topic/link "><linktext class="- topic/linktext ">REMOVED_FROM_STAGE</linktext></link></related-links></apiValue><apiValue id="flash.events:Event:ADDED" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">ADDED</apiName><shortdesc class="- topic/shortdesc ">
	La constante Event.ADDED définit la valeur de la propriété type d’un objet événement added.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">added</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	La constante <codeph class="+ topic/ph pr-d/codeph ">Event.ADDED</codeph> définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet d’événement <codeph class="+ topic/ph pr-d/codeph ">added</codeph>. 
	
	
	
	<p class="- topic/p ">Les propriétés de cet événement sont les suivantes :</p>
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">L’objet qui traite activement l’objet Event avec un écouteur d’événements.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Occurrence de DisplayObject ajoutée à la liste d’affichage. La propriété <codeph class="+ topic/ph pr-d/codeph ">target</codeph> ne correspond pas toujours à l’objet de la liste d’affichage qui est associé à l’écouteur d’événement. Utilisez la propriété <codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph> pour accéder à l’objet de la liste d’affichage qui traite actuellement l’événement.</entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#DisplayObject/event:added" class="- topic/link "><linktext class="- topic/linktext ">flash.display.DisplayObject.added</linktext></link><link href="flash.events.xml#Event/ADDED_TO_STAGE" class="- topic/link "><linktext class="- topic/linktext ">ADDED_TO_STAGE</linktext></link><link href="flash.events.xml#Event/REMOVED" class="- topic/link "><linktext class="- topic/linktext ">REMOVED</linktext></link><link href="flash.events.xml#Event/REMOVED_FROM_STAGE" class="- topic/link "><linktext class="- topic/linktext ">REMOVED_FROM_STAGE</linktext></link></related-links></apiValue><apiValue id="flash.events:Event:CANCEL" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">CANCEL</apiName><shortdesc class="- topic/shortdesc ">
	La constante Event.CANCEL définit la valeur de la propriété type d’un objet événement cancel.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><internal><code>ProductManager</code> pulled from table 
	</internal></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">cancel</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	La constante <codeph class="+ topic/ph pr-d/codeph ">Event.CANCEL</codeph> définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet événement <codeph class="+ topic/ph pr-d/codeph ">cancel</codeph>. 
	<p class="- topic/p ">Les propriétés de cet événement sont les suivantes :</p>
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">L’objet qui traite activement l’objet Event avec un écouteur d’événements.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Référence à l’objet pour lequel l’opération est annulée.</entry></row></tbody></tgroup></adobetable>
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#FileReference/event:cancel" class="- topic/link "><linktext class="- topic/linktext ">flash.net.FileReference.cancel</linktext></link></related-links></apiValue><apiValue id="flash.events:Event:CHANGE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">CHANGE</apiName><shortdesc class="- topic/shortdesc ">
	La constante Event.CHANGE définit la valeur de la propriété type de l’objet d’événement change.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">change</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	La constante<codeph class="+ topic/ph pr-d/codeph "> Event.CHANGE</codeph> définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> de l’objet d’événement <codeph class="+ topic/ph pr-d/codeph ">change</codeph>. 
	
	<p class="- topic/p ">Les propriétés de cet événement sont les suivantes :</p>
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">L’objet qui traite activement l’objet Event avec un écouteur d’événements.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Objet dont la valeur a été modifiée. La propriété <codeph class="+ topic/ph pr-d/codeph ">target</codeph> ne correspond pas toujours à l’objet de la liste d’affichage qui est associé à l’écouteur d’événement. Utilisez la propriété <codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph> pour accéder à l’objet de la liste d’affichage qui traite actuellement l’événement.</entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.xml#TextField/event:change" class="- topic/link "><linktext class="- topic/linktext ">flash.text.TextField.change</linktext></link><link href="flash.events.xml#TextEvent/TEXT_INPUT" class="- topic/link "><linktext class="- topic/linktext ">flash.events.TextEvent.TEXT_INPUT</linktext></link></related-links></apiValue><apiValue id="flash.events:Event:CLEAR" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">CLEAR</apiName><shortdesc class="- topic/shortdesc ">
	La constante Event.CLEAR définit la valeur de la propriété type d’un objet d’événement clear.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">clear</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	La constante <codeph class="+ topic/ph pr-d/codeph ">Event.CLEAR</codeph> définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet d’événement <codeph class="+ topic/ph pr-d/codeph ">clear</codeph>. 
	<p class="- topic/p ">Les propriétés de cet événement sont les suivantes :</p>
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">L’objet qui traite activement l’objet Event avec un écouteur d’événements.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Toute occurrence InteractiveObject à laquelle est associé un écouteur pour l’événement <codeph class="+ topic/ph pr-d/codeph ">clear</codeph>.</entry></row></tbody></tgroup></adobetable>
	
	<p class="- topic/p "><b class="+ topic/ph hi-d/b ">Remarque :</b> les objets TextField ne distribuent <i class="+ topic/ph hi-d/i ">pas</i> les événements <codeph class="+ topic/ph pr-d/codeph ">clear</codeph>, <codeph class="+ topic/ph pr-d/codeph ">copy</codeph>, <codeph class="+ topic/ph pr-d/codeph ">cut</codeph>, <codeph class="+ topic/ph pr-d/codeph ">paste</codeph> ou <codeph class="+ topic/ph pr-d/codeph ">selectAll</codeph>. Les objets TextField incluent toujours les commandes Couper, Copier, Coller, Effacer et Sélectionner tout dans le menu contextuel. Vous ne pouvez pas supprimer ces commandes du menu contextuel pour les objets TextField. Pour les objets TextField, la sélection de ces commandes (ou leurs équivalents clavier) ne génère pas d’événement <codeph class="+ topic/ph pr-d/codeph ">clear</codeph>, <codeph class="+ topic/ph pr-d/codeph ">copy</codeph>, <codeph class="+ topic/ph pr-d/codeph ">cut</codeph>, <codeph class="+ topic/ph pr-d/codeph ">paste</codeph> ou <codeph class="+ topic/ph pr-d/codeph ">selectAll</codeph>. Toutefois, les autres classes qui étendent la classe InteractiveObject, y compris les composants intégrés à l’aide de Flash Text Engine (FTE), distribueront ces événements en réponse aux actions de l’utilisateur (raccourcis clavier et menus contextuels, entre autres).</p>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:clear" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.clear</linktext></link></related-links></apiValue><apiValue id="flash.events:Event:CLOSE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">CLOSE</apiName><shortdesc class="- topic/shortdesc ">
	La constante Event.CLOSE définit la valeur de la propriété type d’un objet événement close.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">close</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	La constante <codeph class="+ topic/ph pr-d/codeph ">Event.CLOSE</codeph> définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet événement <codeph class="+ topic/ph pr-d/codeph ">close</codeph>. 
	
	<p class="- topic/p ">Les propriétés de cet événement sont les suivantes :</p>
	
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">L’objet qui traite activement l’objet Event avec un écouteur d’événements.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Objet dont la connexion a été fermée.</entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#Socket/event:close" class="- topic/link "><linktext class="- topic/linktext ">flash.net.Socket.close</linktext></link><link href="flash.net.xml#XMLSocket/event:close" class="- topic/link "><linktext class="- topic/linktext ">flash.net.XMLSocket.close</linktext></link><link href="flash.display.xml#NativeWindow/event:close" class="- topic/link "><linktext class="- topic/linktext ">flash.display.NativeWindow.close</linktext></link></related-links></apiValue><apiValue id="flash.events:Event:CLOSING" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">CLOSING</apiName><shortdesc class="- topic/shortdesc ">
	La constante Event.CLOSING définit la valeur de la propriété type d’un objet événement closing.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">closing</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	La constante <codeph class="+ topic/ph pr-d/codeph ">Event.CLOSING</codeph> définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet événement <codeph class="+ topic/ph pr-d/codeph ">closing</codeph>. 
	
	<p class="- topic/p ">Les propriétés de cet événement sont les suivantes :</p>
	
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> ; l’annulation de cet objet événement arrête l’opération close.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">L’objet qui traite activement l’objet Event avec un écouteur d’événements.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">L’objet dont la connexion va être fermée.</entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#NativeWindow/event:closing" class="- topic/link "><linktext class="- topic/linktext ">flash.display.NativeWindow.closing</linktext></link></related-links></apiValue><apiValue id="flash.events:Event:COMPLETE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">COMPLETE</apiName><shortdesc class="- topic/shortdesc ">
	La constante Event.COMPLETE définit la valeur de la propriété type d’un objet événement complete.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">complete</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	La constante <codeph class="+ topic/ph pr-d/codeph ">Event.COMPLETE</codeph> définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet événement <codeph class="+ topic/ph pr-d/codeph ">complete</codeph>. 
	
	<p class="- topic/p ">Les propriétés de cet événement sont les suivantes :</p>
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">L’objet qui traite activement l’objet Event avec un écouteur d’événements.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Objet réseau dont le chargement est terminé. 
	    </entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#LoaderInfo/event:complete" class="- topic/link "><linktext class="- topic/linktext ">flash.display.LoaderInfo.complete</linktext></link><link href="../../flash/html/HTMLLoader.html#event:complete" class="- topic/link "><linktext class="- topic/linktext ">flash.html.HTMLLoader.complete</linktext></link><link href="flash.media.xml#Sound/event:complete" class="- topic/link "><linktext class="- topic/linktext ">flash.media.Sound.complete</linktext></link><link href="flash.net.xml#FileReference/event:complete" class="- topic/link "><linktext class="- topic/linktext ">flash.net.FileReference.complete</linktext></link><link href="flash.net.xml#URLLoader/event:complete" class="- topic/link "><linktext class="- topic/linktext ">flash.net.URLLoader.complete</linktext></link><link href="flash.net.xml#URLStream/event:complete" class="- topic/link "><linktext class="- topic/linktext ">flash.net.URLStream.complete</linktext></link></related-links></apiValue><apiValue id="flash.events:Event:CONNECT" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">CONNECT</apiName><shortdesc class="- topic/shortdesc ">
	La constante Event.CONNECT définit la valeur de la propriété type d’un objet événement connect.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">connect</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	La constante <codeph class="+ topic/ph pr-d/codeph ">Event.CONNECT</codeph> définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet événement <codeph class="+ topic/ph pr-d/codeph ">connect</codeph>. 
	
	<p class="- topic/p ">Les propriétés de cet événement sont les suivantes :</p>
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">L’objet qui traite activement l’objet Event avec un écouteur d’événements.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Objet Socket ou XMLSocket qui a établi une connexion réseau.</entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#Socket/event:connect" class="- topic/link "><linktext class="- topic/linktext ">flash.net.Socket.connect</linktext></link><link href="flash.net.xml#XMLSocket/event:connect" class="- topic/link "><linktext class="- topic/linktext ">flash.net.XMLSocket.connect</linktext></link></related-links></apiValue><apiValue id="flash.events:Event:COPY" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">COPY</apiName><shortdesc class="- topic/shortdesc ">
	Définit la valeur de la propriété type d’un objet d’événement copy.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">copy</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet d’événement <codeph class="+ topic/ph pr-d/codeph ">copy</codeph>. 
	<p class="- topic/p ">Les propriétés de cet événement sont les suivantes :</p>
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">L’objet qui traite activement l’objet Event avec un écouteur d’événements.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Toute occurrence InteractiveObject à laquelle est associé un écouteur pour l’événement <codeph class="+ topic/ph pr-d/codeph ">copy</codeph>.</entry></row></tbody></tgroup></adobetable>
	
	<p class="- topic/p "><b class="+ topic/ph hi-d/b ">Remarque :</b> les objets TextField ne distribuent <i class="+ topic/ph hi-d/i ">pas</i> les événements <codeph class="+ topic/ph pr-d/codeph ">clear</codeph>, <codeph class="+ topic/ph pr-d/codeph ">copy</codeph>, <codeph class="+ topic/ph pr-d/codeph ">cut</codeph>, <codeph class="+ topic/ph pr-d/codeph ">paste</codeph> ou <codeph class="+ topic/ph pr-d/codeph ">selectAll</codeph>. Les objets TextField incluent toujours les commandes Couper, Copier, Coller, Effacer et Sélectionner tout dans le menu contextuel. Vous ne pouvez pas supprimer ces commandes du menu contextuel pour les objets TextField. Pour les objets TextField, la sélection de ces commandes (ou leurs équivalents clavier) ne génère pas d’événement <codeph class="+ topic/ph pr-d/codeph ">clear</codeph>, <codeph class="+ topic/ph pr-d/codeph ">copy</codeph>, <codeph class="+ topic/ph pr-d/codeph ">cut</codeph>, <codeph class="+ topic/ph pr-d/codeph ">paste</codeph> ou <codeph class="+ topic/ph pr-d/codeph ">selectAll</codeph>. Toutefois, les autres classes qui étendent la classe InteractiveObject, y compris les composants intégrés à l’aide de Flash Text Engine (FTE), distribueront ces événements en réponse aux actions de l’utilisateur (raccourcis clavier et menus contextuels, entre autres).</p>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:copy" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.copy</linktext></link></related-links></apiValue><apiValue id="flash.events:Event:CUT" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">CUT</apiName><shortdesc class="- topic/shortdesc ">
	Définit la valeur de la propriété type d’un objet d’événement cut.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">cut</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet d’événement <codeph class="+ topic/ph pr-d/codeph ">cut</codeph>. 
	<p class="- topic/p ">Les propriétés de cet événement sont les suivantes :</p>
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">L’objet qui traite activement l’objet Event avec un écouteur d’événements.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Toute occurrence InteractiveObject à laquelle est associé un écouteur pour l’événement <codeph class="+ topic/ph pr-d/codeph ">cut</codeph>.</entry></row></tbody></tgroup></adobetable>
	
	<p class="- topic/p "><b class="+ topic/ph hi-d/b ">Remarque :</b> les objets TextField ne distribuent <i class="+ topic/ph hi-d/i ">pas</i> les événements <codeph class="+ topic/ph pr-d/codeph ">clear</codeph>, <codeph class="+ topic/ph pr-d/codeph ">copy</codeph>, <codeph class="+ topic/ph pr-d/codeph ">cut</codeph>, <codeph class="+ topic/ph pr-d/codeph ">paste</codeph> ou <codeph class="+ topic/ph pr-d/codeph ">selectAll</codeph>. Les objets TextField incluent toujours les commandes Couper, Copier, Coller, Effacer et Sélectionner tout dans le menu contextuel. Vous ne pouvez pas supprimer ces commandes du menu contextuel pour les objets TextField. Pour les objets TextField, la sélection de ces commandes (ou leurs équivalents clavier) ne génère pas d’événement <codeph class="+ topic/ph pr-d/codeph ">clear</codeph>, <codeph class="+ topic/ph pr-d/codeph ">copy</codeph>, <codeph class="+ topic/ph pr-d/codeph ">cut</codeph>, <codeph class="+ topic/ph pr-d/codeph ">paste</codeph> ou <codeph class="+ topic/ph pr-d/codeph ">selectAll</codeph>. Toutefois, les autres classes qui étendent la classe InteractiveObject, y compris les composants intégrés à l’aide de Flash Text Engine (FTE), distribueront ces événements en réponse aux actions de l’utilisateur (raccourcis clavier et menus contextuels, entre autres).</p>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:cut" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.cut</linktext></link></related-links></apiValue><apiValue id="flash.events:Event:DEACTIVATE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">DEACTIVATE</apiName><shortdesc class="- topic/shortdesc ">
	La constante Event.DEACTIVATE définit la valeur de la propriété type d’un objet événement deactivate.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">deactivate</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	La constante <codeph class="+ topic/ph pr-d/codeph ">Event.DEACTIVATE</codeph> définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet événement <codeph class="+ topic/ph pr-d/codeph ">deactivate</codeph>. 
	<p class="- topic/p "><b class="+ topic/ph hi-d/b ">Remarque :</b> cet événement n’a ni « phase de capture », ni « phase de propagation », ce qui signifie que des écouteurs d’événement doivent être ajoutés directement aux cibles potentielles, que la cible soit dans la liste d’affichage ou non.</p>
    <p class="- topic/p ">Les périphériques AIR pour TV ne distribuent jamais automatiquement cet événement. Il est cependant possible de le distribuer manuellement.</p>
	<p class="- topic/p ">Les propriétés de cet événement sont les suivantes :</p>
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">L’objet qui traite activement l’objet Event avec un écouteur d’événements.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Toute occurrence DisplayObject à laquelle est associé un écouteur pour l’événement <codeph class="+ topic/ph pr-d/codeph ">deactivate.</codeph></entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.events.xml#EventDispatcher/event:deactivate" class="- topic/link "><linktext class="- topic/linktext ">flash.events.EventDispatcher.deactivate</linktext></link><link href="flash.events.xml#Event/ACTIVATE" class="- topic/link "><linktext class="- topic/linktext ">ACTIVATE</linktext></link></related-links></apiValue><apiValue id="flash.events:Event:DISPLAYING" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">DISPLAYING</apiName><shortdesc class="- topic/shortdesc ">
	 La constante Event.DISPLAYING définit la valeur de la propriété type d’un objet événement displaying.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">displaying</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 La constante <codeph class="+ topic/ph pr-d/codeph ">Event.DISPLAYING</codeph> définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet événement <codeph class="+ topic/ph pr-d/codeph ">displaying</codeph>. 
	 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Remarque :</b> cet événement ne passe pas par une « phase de capture » et est distribué directement à la cible, que cette dernière soit dans la liste d’affichage ou non.</p>
	 <p class="- topic/p ">Les propriétés de cet événement sont les suivantes :</p>
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">L’objet qui traite activement l’objet Event avec un écouteur d’événements.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Objet sur le point d’être affiché.</entry></row></tbody></tgroup></adobetable>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#NativeMenu/event:displaying" class="- topic/link "><linktext class="- topic/linktext ">flash.display.NativeMenu.displaying</linktext></link><link href="flash.display.xml#NativeMenuItem/event:displaying" class="- topic/link "><linktext class="- topic/linktext ">flash.display.NativeMenuItem.displaying</linktext></link></related-links></apiValue><apiValue id="flash.events:Event:ENTER_FRAME" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">ENTER_FRAME</apiName><shortdesc class="- topic/shortdesc ">
	La constante Event.ENTER_FRAME définit la valeur de la propriété type d’un objet événement enterFrame.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">enterFrame</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	La constante <codeph class="+ topic/ph pr-d/codeph ">Event.ENTER_FRAME</codeph> définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet événement <codeph class="+ topic/ph pr-d/codeph ">enterFrame</codeph>. 
	<p class="- topic/p "><b class="+ topic/ph hi-d/b ">Remarque :</b> cet événement n’a ni « phase de capture », ni « phase de propagation », ce qui signifie que des écouteurs d’événement doivent être ajoutés directement aux cibles potentielles, que la cible soit dans la liste d’affichage ou non.</p>
	<p class="- topic/p ">Les propriétés de cet événement sont les suivantes :</p>
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">L’objet qui traite activement l’objet Event avec un écouteur d’événements.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Toute occurrence DisplayObject à laquelle est associé un écouteur pour l’événement <codeph class="+ topic/ph pr-d/codeph ">enterFrame</codeph>.</entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#DisplayObject/event:enterFrame" class="- topic/link "><linktext class="- topic/linktext ">flash.display.DisplayObject.enterFrame</linktext></link></related-links></apiValue><apiValue id="flash.events:Event:EXITING" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">EXITING</apiName><shortdesc class="- topic/shortdesc ">
	La constante Event.EXITING définit la valeur de la propriété type de l’objet d’événement exiting.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">exiting</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	La constante<codeph class="+ topic/ph pr-d/codeph "> Event.EXITING</codeph> définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> de l’objet d’événement <codeph class="+ topic/ph pr-d/codeph ">exiting</codeph>. 
	
	<p class="- topic/p ">Les propriétés de cet événement sont les suivantes :</p>
	
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> ; l’annulation de cet objet événement arrête l’opération exit.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">L’objet NativeApplication.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">L’objet NativeApplication.</entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.desktop.xml#NativeApplication/event:exiting" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.NativeApplication.exiting</linktext></link></related-links></apiValue><apiValue id="flash.events:Event:EXIT_FRAME" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">EXIT_FRAME</apiName><shortdesc class="- topic/shortdesc ">
	La constante Event.EXIT_FRAME définit la valeur de la propriété type d’un objet événement exitFrame.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">exitFrame</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	La constante <codeph class="+ topic/ph pr-d/codeph ">Event.EXIT_FRAME</codeph> définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet événement <codeph class="+ topic/ph pr-d/codeph ">exitFrame</codeph>. 
	<p class="- topic/p "><b class="+ topic/ph hi-d/b ">Remarque :</b> cet événement n’a ni « phase de capture », ni « phase de propagation », ce qui signifie que des écouteurs d’événement doivent être ajoutés directement aux cibles potentielles, que la cible soit dans la liste d’affichage ou non.</p>
	<p class="- topic/p ">Les propriétés de cet événement sont les suivantes :</p>
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">L’objet qui traite activement l’objet Event avec un écouteur d’événements.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Toute occurrence DisplayObject à laquelle est associé un écouteur pour l’événement <codeph class="+ topic/ph pr-d/codeph ">enterFrame</codeph>.</entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#DisplayObject/event:exitFrame" class="- topic/link "><linktext class="- topic/linktext ">flash.display.DisplayObject.exitFrame</linktext></link></related-links></apiValue><apiValue id="flash.events:Event:FRAME_CONSTRUCTED" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">FRAME_CONSTRUCTED</apiName><shortdesc class="- topic/shortdesc ">
	La constante Event.FRAME_CONSTRUCTED définit la valeur de la propriété type d’un objet événement frameConstructed.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">frameConstructed</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	La constante <codeph class="+ topic/ph pr-d/codeph ">Event.FRAME_CONSTRUCTED</codeph> définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet événement <codeph class="+ topic/ph pr-d/codeph ">frameConstructed</codeph>. 
	
	<p class="- topic/p "><b class="+ topic/ph hi-d/b ">Remarque :</b> cet événement n’a ni « phase de capture », ni « phase de propagation », ce qui signifie que des écouteurs d’événement doivent être ajoutés directement aux cibles potentielles, que la cible soit dans la liste d’affichage ou non.</p>
	<p class="- topic/p ">Les propriétés de cet événement sont les suivantes :</p>
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">L’objet qui traite activement l’objet Event avec un écouteur d’événements.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Toute occurrence DisplayObject à laquelle est associé un écouteur pour l’événement <codeph class="+ topic/ph pr-d/codeph ">frameConstructed</codeph>.</entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#DisplayObject/event:frameConstructed" class="- topic/link "><linktext class="- topic/linktext ">flash.display.DisplayObject.frameConstructed</linktext></link></related-links></apiValue><apiValue id="flash.events:Event:FULLSCREEN" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">FULLSCREEN</apiName><shortdesc class="- topic/shortdesc ">
	La constante Event.FULL_SCREEN définit la valeur de la propriété type d’un objet événement fullScreen.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">fullScreen</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	La constante <codeph class="+ topic/ph pr-d/codeph ">Event.FULL_SCREEN</codeph> définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet événement <codeph class="+ topic/ph pr-d/codeph ">fullScreen</codeph>. 
	
	<p class="- topic/p ">Les propriétés de cet événement sont les suivantes :</p>
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">L’objet qui traite activement l’objet Event avec un écouteur d’événements.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Objet Stage.</entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#Stage/event:fullScreen" class="- topic/link "><linktext class="- topic/linktext ">flash.display.Stage.fullScreen</linktext></link></related-links></apiValue><apiValue id="flash.events:Event:HTML_BOUNDS_CHANGE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">HTML_BOUNDS_CHANGE</apiName><shortdesc class="- topic/shortdesc ">
	La constante Event.HTML_BOUNDS_CHANGE définit la valeur de la propriété type d’un objet événement htmlBoundsChange.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">htmlBoundsChange</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	La constante <codeph class="+ topic/ph pr-d/codeph ">Event.HTML_BOUNDS_CHANGE</codeph> définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet événement <codeph class="+ topic/ph pr-d/codeph ">htmlBoundsChange</codeph>.
	
	<p class="- topic/p ">Les propriétés de cet événement sont les suivantes :</p>
	
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">L’objet HTMLLoader.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">L’objet HTMLLoader.</entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="../../flash/html/HTMLLoader.html#event:htmlBoundsChange" class="- topic/link "><linktext class="- topic/linktext ">événement htmlBoundsChange</linktext></link></related-links></apiValue><apiValue id="flash.events:Event:HTML_DOM_INITIALIZE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">HTML_DOM_INITIALIZE</apiName><shortdesc class="- topic/shortdesc ">
	La constante Event.HTML_DOM_INITIALIZE définit la valeur de la propriété type d’un objet événement htmlDOMInitialize.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">htmlDOMInitialize</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	La constante <codeph class="+ topic/ph pr-d/codeph ">Event.HTML_DOM_INITIALIZE</codeph> définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet événement <codeph class="+ topic/ph pr-d/codeph ">htmlDOMInitialize</codeph>.
	
	<p class="- topic/p ">Les propriétés de cet événement sont les suivantes :</p>
	
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">L’objet HTMLLoader.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">L’objet HTMLLoader.</entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="../../flash/html/HTMLLoader.html#event:htmlDOMInitialize" class="- topic/link "><linktext class="- topic/linktext ">événement htmlDOMInitialize</linktext></link></related-links></apiValue><apiValue id="flash.events:Event:HTML_RENDER" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">HTML_RENDER</apiName><shortdesc class="- topic/shortdesc ">
	La constante Event.HTML_RENDER définit la valeur de la propriété type d’un objet événement htmlRender.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">htmlRender</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	La constante <codeph class="+ topic/ph pr-d/codeph ">Event.HTML_RENDER</codeph> définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet événement <codeph class="+ topic/ph pr-d/codeph ">htmlRender</codeph>.
	
	<p class="- topic/p ">Les propriétés de cet événement sont les suivantes :</p>
	
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">L’objet HTMLLoader.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">L’objet HTMLLoader.</entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="../../flash/html/HTMLLoader.html#event:htmlRender" class="- topic/link "><linktext class="- topic/linktext ">événement htmlRender</linktext></link></related-links></apiValue><apiValue id="flash.events:Event:ID3" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">ID3</apiName><shortdesc class="- topic/shortdesc ">
	La constante Event.ID3 définit la valeur de la propriété type d’un objet événement id3.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">id3</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	La constante <codeph class="+ topic/ph pr-d/codeph ">Event.ID3</codeph> définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet événement <codeph class="+ topic/ph pr-d/codeph ">id3</codeph>. 
	<p class="- topic/p ">Les propriétés de cet événement sont les suivantes :</p>
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">L’objet qui traite activement l’objet Event avec un écouteur d’événements.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Objet son chargeant le fichier MP3 pour lequel les données ID3 sont maintenant disponibles. La propriété <codeph class="+ topic/ph pr-d/codeph ">target</codeph> ne correspond pas toujours à l’objet de la liste d’affichage qui est associé à l’écouteur d’événement. Utilisez la propriété <codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph> pour accéder à l’objet de la liste d’affichage qui traite actuellement l’événement.</entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.media.xml#Sound/event:id3" class="- topic/link "><linktext class="- topic/linktext ">flash.media.Sound.id3</linktext></link></related-links></apiValue><apiValue id="flash.events:Event:INIT" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">INIT</apiName><shortdesc class="- topic/shortdesc ">
	La constante Event.INIT définit la valeur de la propriété type d’un objet événement init.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">init</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	La constante <codeph class="+ topic/ph pr-d/codeph ">Event.INIT</codeph> définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet événement <codeph class="+ topic/ph pr-d/codeph ">init</codeph>. 
	
	<p class="- topic/p ">Les propriétés de cet événement sont les suivantes :</p>
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">L’objet qui traite activement l’objet Event avec un écouteur d’événements.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Objet LoaderInfo associé au fichier SWF en cours de chargement.</entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#LoaderInfo/event:init" class="- topic/link "><linktext class="- topic/linktext ">flash.display.LoaderInfo.init</linktext></link></related-links></apiValue><apiValue id="flash.events:Event:LOCATION_CHANGE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">LOCATION_CHANGE</apiName><shortdesc class="- topic/shortdesc ">
	La constante Event.LOCATION_CHANGE définit la valeur de la propriété type d’un objet événement locationChange.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">locationChange</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	La constante <codeph class="+ topic/ph pr-d/codeph ">Event.LOCATION_CHANGE</codeph> définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet événement <codeph class="+ topic/ph pr-d/codeph ">locationChange</codeph>.
	
	<p class="- topic/p ">Les propriétés de cet événement sont les suivantes :</p>
	
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">L’objet HTMLLoader.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">L’objet HTMLLoader.</entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="../../flash/html/HTMLLoader.html#event:locationChange" class="- topic/link "><linktext class="- topic/linktext ">événement locationChange</linktext></link></related-links></apiValue><apiValue id="flash.events:Event:MOUSE_LEAVE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">MOUSE_LEAVE</apiName><shortdesc class="- topic/shortdesc ">
	La constante Event.MOUSE_LEAVE définit la valeur de la propriété type d’un objet événement mouseLeave.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">mouseLeave</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	La constante <codeph class="+ topic/ph pr-d/codeph ">Event.MOUSE_LEAVE</codeph> définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet événement <codeph class="+ topic/ph pr-d/codeph ">mouseLeave</codeph>. 
	
	<p class="- topic/p ">Les propriétés de cet événement sont les suivantes :</p>
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">L’objet qui traite activement l’objet Event avec un écouteur d’événements.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Objet Stage. La propriété <codeph class="+ topic/ph pr-d/codeph ">target</codeph> ne correspond pas toujours à l’objet de la liste d’affichage qui est associé à l’écouteur d’événement. Utilisez la propriété <codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph> pour accéder à l’objet de la liste d’affichage qui traite actuellement l’événement.</entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#Stage/event:mouseLeave" class="- topic/link "><linktext class="- topic/linktext ">flash.display.Stage.mouseLeave</linktext></link><link href="flash.events.xml#MouseEvent" class="- topic/link "><linktext class="- topic/linktext ">flash.events.MouseEvent</linktext></link></related-links></apiValue><apiValue id="flash.events:Event:NETWORK_CHANGE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">NETWORK_CHANGE</apiName><shortdesc class="- topic/shortdesc ">
	La constante Event.NETWORK_CHANGE définit la valeur de la propriété type d’un objet événement networkChange.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">networkChange</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	La constante <codeph class="+ topic/ph pr-d/codeph ">Event.NETWORK_CHANGE</codeph> définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet événement <codeph class="+ topic/ph pr-d/codeph ">networkChange</codeph>. 
	
	<p class="- topic/p ">Les propriétés de cet événement sont les suivantes :</p>
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">L’objet qui traite activement l’objet Event avec un écouteur d’événements.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">L’objet NativeApplication.</entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.desktop.xml#NativeApplication/event:networkChange" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.NativeApplication.networkChange</linktext></link></related-links></apiValue><apiValue id="flash.events:Event:OPEN" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">OPEN</apiName><shortdesc class="- topic/shortdesc ">
	La constante Event.OPEN définit la valeur de la propriété type d’un objet événement open.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">open</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	La constante <codeph class="+ topic/ph pr-d/codeph ">Event.OPEN</codeph> définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet événement <codeph class="+ topic/ph pr-d/codeph ">open</codeph>. 
	
	<p class="- topic/p ">Les propriétés de cet événement sont les suivantes :</p>
	
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">L’objet qui traite activement l’objet Event avec un écouteur d’événements.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Objet réseau qui a ouvert une connexion. </entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#LoaderInfo/event:open" class="- topic/link "><linktext class="- topic/linktext ">flash.display.LoaderInfo.open</linktext></link><link href="flash.media.xml#Sound/event:open" class="- topic/link "><linktext class="- topic/linktext ">flash.media.Sound.open</linktext></link><link href="flash.net.xml#FileReference/event:open" class="- topic/link "><linktext class="- topic/linktext ">flash.net.FileReference.open</linktext></link><link href="flash.net.xml#URLLoader/event:open" class="- topic/link "><linktext class="- topic/linktext ">flash.net.URLLoader.open</linktext></link><link href="flash.net.xml#URLStream/event:open" class="- topic/link "><linktext class="- topic/linktext ">flash.net.URLStream.open</linktext></link></related-links></apiValue><apiValue id="flash.events:Event:PASTE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">PASTE</apiName><shortdesc class="- topic/shortdesc ">
	La constante Event.PASTE définit la valeur de la propriété type d’un objet événement paste.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">paste</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	La constante <codeph class="+ topic/ph pr-d/codeph ">Event.PASTE</codeph> définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet événement <codeph class="+ topic/ph pr-d/codeph ">paste</codeph>. 
	<p class="- topic/p ">Les propriétés de cet événement sont les suivantes :</p>
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">L’objet qui traite activement l’objet Event avec un écouteur d’événements.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Toute occurrence InteractiveObject à laquelle est associé un écouteur pour l’événement <codeph class="+ topic/ph pr-d/codeph ">paste</codeph>.</entry></row></tbody></tgroup></adobetable>
	
	<p class="- topic/p "><b class="+ topic/ph hi-d/b ">Remarque :</b> les objets TextField ne distribuent <i class="+ topic/ph hi-d/i ">pas</i> les événements <codeph class="+ topic/ph pr-d/codeph ">clear</codeph>, <codeph class="+ topic/ph pr-d/codeph ">copy</codeph>, <codeph class="+ topic/ph pr-d/codeph ">cut</codeph>, <codeph class="+ topic/ph pr-d/codeph ">paste</codeph> ou <codeph class="+ topic/ph pr-d/codeph ">selectAll</codeph>. Les objets TextField incluent toujours les commandes Couper, Copier, Coller, Effacer et Sélectionner tout dans le menu contextuel. Vous ne pouvez pas supprimer ces commandes du menu contextuel pour les objets TextField. Pour les objets TextField, la sélection de ces commandes (ou leurs équivalents clavier) ne génère pas d’événement <codeph class="+ topic/ph pr-d/codeph ">clear</codeph>, <codeph class="+ topic/ph pr-d/codeph ">copy</codeph>, <codeph class="+ topic/ph pr-d/codeph ">cut</codeph>, <codeph class="+ topic/ph pr-d/codeph ">paste</codeph> ou <codeph class="+ topic/ph pr-d/codeph ">selectAll</codeph>. Toutefois, les autres classes qui étendent la classe InteractiveObject, y compris les composants intégrés à l’aide de Flash Text Engine (FTE), distribueront ces événements en réponse aux actions de l’utilisateur (raccourcis clavier et menus contextuels, entre autres).</p>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:paste" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.paste</linktext></link></related-links></apiValue><apiValue id="flash.events:Event:PREPARING" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">PREPARING</apiName><shortdesc class="- topic/shortdesc ">
	 La constante Event.PREPARING définit la valeur de la propriété type d’un objet d’événement preparing.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2.6" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">preparing</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 La constante <codeph class="+ topic/ph pr-d/codeph ">Event.PREPARING</codeph> définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet d’événement <codeph class="+ topic/ph pr-d/codeph ">preparing</codeph>. 
	 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Remarque :</b> cet événement ne passe pas par une « phase de capture » et est distribué directement à la cible, que cette dernière soit dans la liste d’affichage ou non.</p>
	 <p class="- topic/p ">Les propriétés de cet événement sont les suivantes :</p>
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Objet ayant distribué l’événement this.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Objet ayant distribué l’événement this.</entry></row></tbody></tgroup></adobetable>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#NativeMenu/event:preparing" class="- topic/link "><linktext class="- topic/linktext ">flash.display.NativeMenu.preparing</linktext></link><link href="flash.display.xml#NativeMenuItem/event:preparing" class="- topic/link "><linktext class="- topic/linktext ">flash.display.NativeMenuItem.preparing</linktext></link></related-links></apiValue><apiValue id="flash.events:Event:REMOVED_FROM_STAGE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">REMOVED_FROM_STAGE</apiName><shortdesc class="- topic/shortdesc ">
	La constante Event.REMOVED_FROM_STAGE définit la valeur de la propriété type d’un objet événement removedFromStage.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9.0.28.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">removedFromStage</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	La constante <codeph class="+ topic/ph pr-d/codeph ">Event.REMOVED_FROM_STAGE</codeph> définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet d’événement <codeph class="+ topic/ph pr-d/codeph ">removedFromStage</codeph>. 
	
	
	
	<p class="- topic/p ">Les propriétés de cet événement sont les suivantes :</p>
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">L’objet qui traite activement l’objet Event avec un écouteur d’événements.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Occurrence de DisplayObject retirée de la liste d’affichage de la scène, directement ou par l’intermédiaire d’une arborescence secondaire qui contient l’occurrence DisplayObject. Si l’occurrence DisplayObject est retirée directement, l’événement <codeph class="+ topic/ph pr-d/codeph ">removed</codeph> se produit avant cet événement.</entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#DisplayObject/event:removedFromStage" class="- topic/link "><linktext class="- topic/linktext ">flash.display.DisplayObject.removedFromStage</linktext></link><link href="flash.events.xml#Event/ADDED" class="- topic/link "><linktext class="- topic/linktext ">ADDED</linktext></link><link href="flash.events.xml#Event/REMOVED" class="- topic/link "><linktext class="- topic/linktext ">REMOVED</linktext></link><link href="flash.events.xml#Event/ADDED_TO_STAGE" class="- topic/link "><linktext class="- topic/linktext ">ADDED_TO_STAGE</linktext></link></related-links></apiValue><apiValue id="flash.events:Event:REMOVED" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">REMOVED</apiName><shortdesc class="- topic/shortdesc ">
	La constante Event.REMOVED définit la valeur de la propriété type d’un objet événement removed.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">removed</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	La constante <codeph class="+ topic/ph pr-d/codeph ">Event.REMOVED</codeph> définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet d’événement <codeph class="+ topic/ph pr-d/codeph ">removed</codeph>. 
	
	
	
	<p class="- topic/p ">Les propriétés de cet événement sont les suivantes :</p>
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">L’objet qui traite activement l’objet Event avec un écouteur d’événements.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Occurrence de DisplayObject à supprimer de la liste d’affichage. La propriété <codeph class="+ topic/ph pr-d/codeph ">target</codeph> ne correspond pas toujours à l’objet de la liste d’affichage qui est associé à l’écouteur d’événement. Utilisez la propriété <codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph> pour accéder à l’objet de la liste d’affichage qui traite actuellement l’événement.</entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#DisplayObject/event:removed" class="- topic/link "><linktext class="- topic/linktext ">flash.display.DisplayObject.removed</linktext></link><link href="flash.events.xml#Event/ADDED" class="- topic/link "><linktext class="- topic/linktext ">ADDED</linktext></link><link href="flash.events.xml#Event/ADDED_TO_STAGE" class="- topic/link "><linktext class="- topic/linktext ">ADDED_TO_STAGE</linktext></link><link href="flash.events.xml#Event/REMOVED_FROM_STAGE" class="- topic/link "><linktext class="- topic/linktext ">REMOVED_FROM_STAGE</linktext></link></related-links></apiValue><apiValue id="flash.events:Event:RENDER" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">RENDER</apiName><shortdesc class="- topic/shortdesc ">
	La constante Event.RENDER définit la valeur de la propriété type d’un objet événement render.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">render</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	La constante <codeph class="+ topic/ph pr-d/codeph ">Event.RENDER</codeph> définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet événement <codeph class="+ topic/ph pr-d/codeph ">render</codeph>. 
	<p class="- topic/p "><b class="+ topic/ph hi-d/b ">Remarque :</b> cet événement n’a ni « phase de capture », ni « phase de propagation », ce qui signifie que des écouteurs d’événement doivent être ajoutés directement aux cibles potentielles, que la cible soit dans la liste d’affichage ou non.</p>
	<p class="- topic/p ">Les propriétés de cet événement sont les suivantes :</p>
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; le comportement par défaut ne peut pas être annulé.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">L’objet qui traite activement l’objet Event avec un écouteur d’événements.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Toute occurrence DisplayObject à laquelle est associé un écouteur pour l’événement <codeph class="+ topic/ph pr-d/codeph ">render</codeph>.</entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#DisplayObject/event:render" class="- topic/link "><linktext class="- topic/linktext ">flash.display.DisplayObject.render</linktext></link><link href="flash.display.xml#Stage/invalidate()" class="- topic/link "><linktext class="- topic/linktext ">flash.display.Stage.invalidate()</linktext></link></related-links></apiValue><apiValue id="flash.events:Event:RESIZE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">RESIZE</apiName><shortdesc class="- topic/shortdesc ">
	La constante Event.RESIZE définit la valeur de la propriété type d’un objet événement resize.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">resize</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	La constante <codeph class="+ topic/ph pr-d/codeph ">Event.RESIZE</codeph> définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet événement <codeph class="+ topic/ph pr-d/codeph ">resize</codeph>. 
	
	<p class="- topic/p ">Les propriétés de cet événement sont les suivantes :</p>
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">L’objet qui traite activement l’objet Event avec un écouteur d’événements.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Objet Stage.</entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#Stage/event:resize" class="- topic/link "><linktext class="- topic/linktext ">flash.display.Stage.resize</linktext></link></related-links></apiValue><apiValue id="flash.events:Event:SCROLL" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">SCROLL</apiName><shortdesc class="- topic/shortdesc ">
	La constante Event.SCROLL définit la valeur de la propriété type d’un objet événement scroll.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">scroll</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	La constante <codeph class="+ topic/ph pr-d/codeph ">Event.SCROLL</codeph> définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet événement <codeph class="+ topic/ph pr-d/codeph ">scroll</codeph>. 
	
	<p class="- topic/p ">Les propriétés de cet événement sont les suivantes :</p>
	
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">L’objet qui traite activement l’objet Event avec un écouteur d’événements.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Objet Textfield que l’utilisateur a fait défiler. La propriété <codeph class="+ topic/ph pr-d/codeph ">target</codeph> ne correspond pas toujours à l’objet de la liste d’affichage qui est associé à l’écouteur d’événement. Utilisez la propriété <codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph> pour accéder à l’objet de la liste d’affichage qui traite actuellement l’événement.</entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.xml#TextField/event:scroll" class="- topic/link "><linktext class="- topic/linktext ">flash.text.TextField.scroll</linktext></link><link href="../../flash/html/HTMLLoader.html#event:scroll" class="- topic/link "><linktext class="- topic/linktext ">flash.html.HTMLLoader.scroll</linktext></link></related-links></apiValue><apiValue id="flash.events:Event:SELECT_ALL" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">SELECT_ALL</apiName><shortdesc class="- topic/shortdesc ">
	La constante Event.SELECT_ALL définit la valeur de la propriété type d’un objet événement selectAll.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">selectAll</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	La constante <codeph class="+ topic/ph pr-d/codeph ">Event.SELECT_ALL</codeph> définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet événement <codeph class="+ topic/ph pr-d/codeph ">selectAll</codeph>. 
	<p class="- topic/p ">Les propriétés de cet événement sont les suivantes :</p>
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">L’objet qui traite activement l’objet Event avec un écouteur d’événements.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Toute occurrence InteractiveObject à laquelle est associé un écouteur pour l’événement <codeph class="+ topic/ph pr-d/codeph ">selectAll</codeph>.</entry></row></tbody></tgroup></adobetable>
	
	<p class="- topic/p "><b class="+ topic/ph hi-d/b ">Remarque :</b> les objets TextField ne distribuent <i class="+ topic/ph hi-d/i ">pas</i> les événements <codeph class="+ topic/ph pr-d/codeph ">clear</codeph>, <codeph class="+ topic/ph pr-d/codeph ">copy</codeph>, <codeph class="+ topic/ph pr-d/codeph ">cut</codeph>, <codeph class="+ topic/ph pr-d/codeph ">paste</codeph> ou <codeph class="+ topic/ph pr-d/codeph ">selectAll</codeph>. Les objets TextField incluent toujours les commandes Couper, Copier, Coller, Effacer et Sélectionner tout dans le menu contextuel. Vous ne pouvez pas supprimer ces commandes du menu contextuel pour les objets TextField. Pour les objets TextField, la sélection de ces commandes (ou leurs équivalents clavier) ne génère pas d’événement <codeph class="+ topic/ph pr-d/codeph ">clear</codeph>, <codeph class="+ topic/ph pr-d/codeph ">copy</codeph>, <codeph class="+ topic/ph pr-d/codeph ">cut</codeph>, <codeph class="+ topic/ph pr-d/codeph ">paste</codeph> ou <codeph class="+ topic/ph pr-d/codeph ">selectAll</codeph>. Toutefois, les autres classes qui étendent la classe InteractiveObject, y compris les composants intégrés à l’aide de Flash Text Engine (FTE), distribueront ces événements en réponse aux actions de l’utilisateur (raccourcis clavier et menus contextuels, entre autres).</p>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:selectAll" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.selectAll</linktext></link></related-links></apiValue><apiValue id="flash.events:Event:SELECT" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">SELECT</apiName><shortdesc class="- topic/shortdesc ">
	La constante Event.SELECT définit la valeur de la propriété type d’un objet événement select.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">select</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	La constante <codeph class="+ topic/ph pr-d/codeph ">Event.SELECT</codeph> définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet événement <codeph class="+ topic/ph pr-d/codeph ">select</codeph>. 
	
	<p class="- topic/p ">Les propriétés de cet événement sont les suivantes :</p>
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">L’objet qui traite activement l’objet Event avec un écouteur d’événements.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Objet sur lequel un élément a été sélectionné.</entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#FileReference/event:select" class="- topic/link "><linktext class="- topic/linktext ">flash.net.FileReference.select</linktext></link><link href="flash.display.xml#NativeMenu/event:select" class="- topic/link "><linktext class="- topic/linktext ">flash.display.NativeMenu.select</linktext></link><link href="flash.display.xml#NativeMenuItem/event:select" class="- topic/link "><linktext class="- topic/linktext ">flash.display.NativeMenuItem.select</linktext></link></related-links></apiValue><apiValue id="flash.events:Event:SOUND_COMPLETE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">SOUND_COMPLETE</apiName><shortdesc class="- topic/shortdesc ">
	La constante Event.SOUND_COMPLETE définit la valeur de la propriété type d’un objet événement soundComplete.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">soundComplete</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	La constante <codeph class="+ topic/ph pr-d/codeph ">Event.SOUND_COMPLETE</codeph> définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet événement <codeph class="+ topic/ph pr-d/codeph ">soundComplete</codeph>. 
	
	<p class="- topic/p ">Les propriétés de cet événement sont les suivantes :</p>
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">L’objet qui traite activement l’objet Event avec un écouteur d’événements.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Objet SoundChannel dont la lecture d’un son est terminée.</entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.media.xml#SoundChannel/event:soundComplete" class="- topic/link "><linktext class="- topic/linktext ">flash.media.SoundChannel.soundComplete</linktext></link></related-links></apiValue><apiValue id="flash.events:Event:STANDARD_ERROR_CLOSE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">STANDARD_ERROR_CLOSE</apiName><shortdesc class="- topic/shortdesc ">
	La constante Event.STANDARD_ERROR_CLOSE définit la valeur de la propriété type d’un objet d’événement standardErrorClose.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">standardErrorClose</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	La constante <codeph class="+ topic/ph pr-d/codeph ">Event.STANDARD_ERROR_CLOSE</codeph> définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet d’événement <codeph class="+ topic/ph pr-d/codeph ">standardErrorClose</codeph>. 
	
	<p class="- topic/p ">Les propriétés de cet événement sont les suivantes :</p>
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">L’objet NativeProcess.</entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:Event:STANDARD_INPUT_CLOSE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">STANDARD_INPUT_CLOSE</apiName><shortdesc class="- topic/shortdesc ">
	La constante Event.STANDARD_INPUT_CLOSE définit la valeur de la propriété type d’un objet d’événement standardInputClose.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">standardInputClose</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	La constante <codeph class="+ topic/ph pr-d/codeph ">Event.STANDARD_INPUT_CLOSE</codeph> définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet d’événement <codeph class="+ topic/ph pr-d/codeph ">standardInputClose</codeph>. 
	
	<p class="- topic/p ">Les propriétés de cet événement sont les suivantes :</p>
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">L’objet NativeProcess.</entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:Event:STANDARD_OUTPUT_CLOSE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">STANDARD_OUTPUT_CLOSE</apiName><shortdesc class="- topic/shortdesc ">
	La constante Event.STANDARD_OUTPUT_CLOSE définit la valeur de la propriété type d’un objet d’événement standardOutputClose.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">standardOutputClose</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	La constante <codeph class="+ topic/ph pr-d/codeph ">Event.STANDARD_OUTPUT_CLOSE</codeph> définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet d’événement <codeph class="+ topic/ph pr-d/codeph ">standardOutputClose</codeph>. 
	
	<p class="- topic/p ">Les propriétés de cet événement sont les suivantes :</p>
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">L’objet NativeProcess.</entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:Event:TAB_CHILDREN_CHANGE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">TAB_CHILDREN_CHANGE</apiName><shortdesc class="- topic/shortdesc ">
	La constante Event.TAB_CHILDREN_CHANGE définit la valeur de la propriété type d’un objet d’événement tabChildrenChange.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">tabChildrenChange</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	La constante <codeph class="+ topic/ph pr-d/codeph ">Event.TAB_CHILDREN_CHANGE</codeph> définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet événement <codeph class="+ topic/ph pr-d/codeph ">tabChildrenChange</codeph>. 
	<p class="- topic/p ">Les propriétés de cet événement sont les suivantes :</p>
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">L’objet qui traite activement l’objet Event avec un écouteur d’événements.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Objet dont l’indicateur tabChildren a changé. La propriété <codeph class="+ topic/ph pr-d/codeph ">target</codeph> ne correspond pas toujours à l’objet de la liste d’affichage qui est associé à l’écouteur d’événement. Utilisez la propriété <codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph> pour accéder à l’objet de la liste d’affichage qui traite actuellement l’événement.</entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:tabChildrenChange" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.tabChildrenChange</linktext></link></related-links></apiValue><apiValue id="flash.events:Event:TAB_ENABLED_CHANGE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">TAB_ENABLED_CHANGE</apiName><shortdesc class="- topic/shortdesc ">
	La constante Event.TAB_ENABLED_CHANGE définit la valeur de la propriété type d’un objet événement tabEnabledChange.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">tabEnabledChange</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	La constante <codeph class="+ topic/ph pr-d/codeph ">Event.TAB_ENABLED_CHANGE</codeph> définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet d’événement <codeph class="+ topic/ph pr-d/codeph ">tabEnabledChange</codeph>. 
	
	
	
	<p class="- topic/p ">Les propriétés de cet événement sont les suivantes :</p>
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">L’objet qui traite activement l’objet Event avec un écouteur d’événements.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Objet InteractiveObject dont l’indicateur tabEnabled a changé. La propriété <codeph class="+ topic/ph pr-d/codeph ">target</codeph> ne correspond pas toujours à l’objet de la liste d’affichage qui est associé à l’écouteur d’événement. Utilisez la propriété <codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph> pour accéder à l’objet de la liste d’affichage qui traite actuellement l’événement.</entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:tabEnabledChange" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.tabEnabledChange</linktext></link></related-links></apiValue><apiValue id="flash.events:Event:TAB_INDEX_CHANGE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">TAB_INDEX_CHANGE</apiName><shortdesc class="- topic/shortdesc ">
	La constante Event.TAB_INDEX_CHANGE définit la valeur de la propriété type d’un objet événement tabIndexChange.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">tabIndexChange</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	La constante <codeph class="+ topic/ph pr-d/codeph ">Event.TAB_INDEX_CHANGE</codeph> définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet d’événement <codeph class="+ topic/ph pr-d/codeph ">tabIndexChange</codeph>. 
	
	
	
	<p class="- topic/p ">Les propriétés de cet événement sont les suivantes :</p>
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">L’objet qui traite activement l’objet Event avec un écouteur d’événements.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Objet dont l’indicateur tabIndex a changé. La propriété <codeph class="+ topic/ph pr-d/codeph ">target</codeph> ne correspond pas toujours à l’objet de la liste d’affichage qui est associé à l’écouteur d’événement. Utilisez la propriété <codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph> pour accéder à l’objet de la liste d’affichage qui traite actuellement l’événement.</entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:tabIndexChange" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.tabIndexChange</linktext></link></related-links></apiValue><apiValue id="flash.events:Event:TEXT_INTERACTION_MODE_CHANGE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">TEXT_INTERACTION_MODE_CHANGE</apiName><shortdesc class="- topic/shortdesc ">
	La constante Event.TEXT_INTERACTION_MODE_CHANGE définit la valeur de la propriété type d’un objet d’événement de mode d’interaction.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="11" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">textInteractionModeChange</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	La constante <codeph class="+ topic/ph pr-d/codeph ">Event.TEXT_INTERACTION_MODE_CHANGE</codeph> définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet d’événement <codeph class="+ topic/ph pr-d/codeph ">interaction mode</codeph>. 
	
	<p class="- topic/p ">Les propriétés de cet événement sont les suivantes :</p>
	
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">L’objet qui traite activement l’objet Event avec un écouteur d’événements.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Objet TextField dont la propriété du mode d’interaction a été modifiée. Par exemple, sur Android, l’utilisateur peut modifier le mode d’interaction sur SELECTION via le menu contextuel. La propriété <codeph class="+ topic/ph pr-d/codeph ">target</codeph> ne correspond pas toujours à l’objet de la liste d’affichage qui est associé à l’écouteur d’événement. Utilisez la propriété <codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph> pour accéder à l’objet de la liste d’affichage qui traite actuellement l’événement.</entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.xml#TextField/event:textInteractionModeChange" class="- topic/link "><linktext class="- topic/linktext ">flash.text.TextField.textInteractionModeChange</linktext></link></related-links></apiValue><apiValue id="flash.events:Event:UNLOAD" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">UNLOAD</apiName><shortdesc class="- topic/shortdesc ">
	La constante Event.UNLOAD définit la valeur de la propriété type d’un objet événement unload.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">unload</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	La constante <codeph class="+ topic/ph pr-d/codeph ">Event.UNLOAD</codeph> définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet événement <codeph class="+ topic/ph pr-d/codeph ">unload</codeph>. 
	
	<p class="- topic/p ">Les propriétés de cet événement sont les suivantes :</p>
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">L’objet qui traite activement l’objet Event avec un écouteur d’événements.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Objet LoaderInfo associé au fichier SWF en cours de déchargement ou de remplacement.</entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#LoaderInfo/event:unload" class="- topic/link "><linktext class="- topic/linktext ">flash.display.LoaderInfo.unload</linktext></link></related-links></apiValue><apiValue id="flash.events:Event:USER_IDLE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">USER_IDLE</apiName><shortdesc class="- topic/shortdesc ">
	La constante Event.USER_IDLE définit la valeur de la propriété type d’un objet événement userIdle.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">userIdle</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	La constante <codeph class="+ topic/ph pr-d/codeph ">Event.USER_IDLE</codeph> définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet événement <codeph class="+ topic/ph pr-d/codeph ">userIdle</codeph>. 
	
	<p class="- topic/p ">Les propriétés de cet événement sont les suivantes :</p>
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">L’objet NativeApplication.</entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.desktop.xml#NativeApplication/event:userIdle" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.NativeApplication.userIdle</linktext></link></related-links></apiValue><apiValue id="flash.events:Event:USER_PRESENT" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">USER_PRESENT</apiName><shortdesc class="- topic/shortdesc ">
	La constante Event.USER_PRESENT définit la valeur de la propriété type d’un objet événement userPresent.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">userPresent</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	La constante <codeph class="+ topic/ph pr-d/codeph ">Event.USER_PRESENT</codeph> définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet événement <codeph class="+ topic/ph pr-d/codeph ">userPresent</codeph>. 
	
	<p class="- topic/p ">Les propriétés de cet événement sont les suivantes :</p>
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">L’objet NativeApplication.</entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.desktop.xml#NativeApplication/event:userPresent" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.NativeApplication.userPresent</linktext></link></related-links></apiValue><apiValue id="flash.events:Event:bubbles:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">bubbles</apiName><shortdesc class="- topic/shortdesc ">
	Indique si un événement peut se propager vers le haut (bubbling).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Indique si un événement peut se propager vers le haut (bubbling). Si l’événement peut se propager vers le haut, cette valeur correspond à<codeph class="+ topic/ph pr-d/codeph ">true</codeph> ; dans tous les autres cas, elle correspond à <codeph class="+ topic/ph pr-d/codeph ">false</codeph>.
	
	
	
	<p class="- topic/p ">Lorsqu’un événement se produit, il se propage dans les trois phases du flux d’événements : La phase de capture, qui va du haut de la hiérarchie de la liste d’affichage au nœud précédant le nœud cible ; la phase cible, qui concerne uniquement le nœud cible ; la phase de propagation, qui remonte la hiérarchie de la liste d’affichage, en partant du nœud suivant le nœud cible.</p>
	
	<p class="- topic/p ">Certains événements, tels que <codeph class="+ topic/ph pr-d/codeph ">activate</codeph> et <codeph class="+ topic/ph pr-d/codeph ">unload</codeph>, n’ont pas phase de propagation vers le haut. La propriété <codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph> possède la valeur <codeph class="+ topic/ph pr-d/codeph ">false</codeph> pour les événements sans phase de propagation vers le haut (bubbling).</p>
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:Event:cancelable:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">cancelable</apiName><shortdesc class="- topic/shortdesc ">
	Indique si le comportement associé à l’événement peut être évité.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Indique si le comportement associé à l’événement peut être évité. Si tel est le cas, cette valeur correspond à <codeph class="+ topic/ph pr-d/codeph ">true</codeph> ; dans tous les autres cas, elle correspond à <codeph class="+ topic/ph pr-d/codeph ">false</codeph>.
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.events.xml#Event/preventDefault()" class="- topic/link "><linktext class="- topic/linktext ">Event.preventDefault()</linktext></link></related-links></apiValue><apiValue id="flash.events:Event:currentTarget:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">currentTarget</apiName><shortdesc class="- topic/shortdesc ">
	L’objet qui traite activement l’objet Event avec un écouteur d’événements.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Object</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	L’objet qui traite activement l’objet Event avec un écouteur d’événements. Si un utilisateur clique sur un bouton OK par exemple, le nœud cible pourrait correspondre au nœud contenant ce bouton ou à l’un de ses ancêtres qui est associé à un écouteur d’événement pour cet événement.
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:Event:eventPhase:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">eventPhase</apiName><shortdesc class="- topic/shortdesc ">
	Phase actuelle du flux d’événements.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">uint</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Phase actuelle du flux d’événements. Cette propriété peut contenir les valeurs numériques suivantes :
	<ul class="- topic/ul "><li class="- topic/li "> Phase de capture (<codeph class="+ topic/ph pr-d/codeph ">EventPhase.CAPTURING_PHASE</codeph>).</li><li class="- topic/li "> Phase cible (<codeph class="+ topic/ph pr-d/codeph ">EventPhase.AT_TARGET</codeph>).</li><li class="- topic/li "> Phase de propagation (<codeph class="+ topic/ph pr-d/codeph ">EventPhase.BUBBLING_PHASE</codeph>).</li></ul>
	
	
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:Event:target:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">target</apiName><shortdesc class="- topic/shortdesc ">
	Cible de l’événement.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Object</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Cible de l’événement. Cette propriété contient le nœud cible. Si un utilisateur clique sur un bouton OK par exemple, le nœud cible correspond au nœud de la liste d’affichage qui contient ce bouton.
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:Event:type:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">type</apiName><shortdesc class="- topic/shortdesc ">
	Type d’événement.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Type d’événement. Le type respecte la casse.
	
	</apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.events:TextEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">TextEvent</apiName><shortdesc class="- topic/shortdesc ">
 Un objet distribue un objet TextEvent lorsqu’un utilisateur saisit du texte dans un champ de texte ou clique sur un lien hypertexte dans une zone de texte de type HTML.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Objets Event associés aux événements TextEvent.
 </apiTipText></apiTipTexts><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Un objet distribue un objet TextEvent lorsqu’un utilisateur saisit du texte dans un champ de texte ou clique sur un lien hypertexte dans une zone de texte de type HTML. Il existe deux types d’événements texte : <codeph class="+ topic/ph pr-d/codeph ">TextEvent.LINK</codeph> et <codeph class="+ topic/ph pr-d/codeph ">TextEvent.TEXT_INPUT</codeph>.
 
 </apiDesc><example conref="examples\TextEventExample.as" class="- topic/example "> L’exemple suivant utilise la classe TextEventExample pour créer des champs de texte et écouter divers événements texte sur ces derniers. L’exemple exécute les tâches suivantes :
 <ol class="- topic/ol "><li class="- topic/li ">L’exemple déclare les constantes de deux URL à utiliser ultérieurement.</li><li class="- topic/li ">L’exemple déclare les deux variables de type TextField à utiliser ultérieurement.</li><li class="- topic/li ">Le constructeur de classe appelle les deux méthodes suivantes :
     <ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">init()</codeph> initialise les objets TextField et leur ajoute des écouteurs d’événement.</li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">draw()</codeph> ajoute des objets TextFields dans la liste d’affichage et affecte le texte à afficher.</li></ul></li><li class="- topic/li ">Les écouteurs <codeph class="+ topic/ph pr-d/codeph ">linkHandler()</codeph> et <codeph class="+ topic/ph pr-d/codeph ">textInputHandler()</codeph> réagissent aux événements en fonction de leur type. La méthode <codeph class="+ topic/ph pr-d/codeph ">linkHandler()</codeph> ouvre un navigateur Web lorsque aucun n’est ouvert et navigue jusqu’à l’adresse URL sur laquelle l’utilisateur a cliqué. La méthode <codeph class="+ topic/ph pr-d/codeph ">textInputHandler()</codeph> affiche simplement des informations chaque fois que l’utilisateur appuie sur une touche dans le champ de texte associé.</li></ol>
 
 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Remarque : </b> le domaine de cet exemple est fictif et <codeph class="+ topic/ph pr-d/codeph ">[yourDomain]</codeph> doit être remplacé par votre propre nom de domaine.</p>
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
package {
    import flash.display.Sprite;
    import flash.text.TextField;
    import flash.text.TextFieldType;
    import flash.text.TextFieldAutoSize;
    import flash.events.TextEvent;
    import flash.events.TextEvent;
    import flash.net.URLRequest;
    import flash.net.navigateToURL;
    
    public class TextEventExample extends Sprite {
        private const DOMAIN_1_URL:String = "http://www.[yourDomain].com";
        private const DOMAIN_2_URL:String = "http://www.[yourDomain].com";
        private var linkTxt:TextField;
        private var textInputTxt:TextField;
        
        public function TextEventExample() {
            init();
            draw();
        }
        
        private function init():void {
            linkTxt = new TextField();
            linkTxt.addEventListener(TextEvent.LINK, linkHandler);
            linkTxt.height = 60;
            linkTxt.autoSize = TextFieldAutoSize.LEFT;            
            linkTxt.multiline = true;
                
            textInputTxt = new TextField();
            textInputTxt.addEventListener(TextEvent.TEXT_INPUT, textInputHandler);
            textInputTxt.type = TextFieldType.INPUT;
            textInputTxt.background = true;
            textInputTxt.border = true;
            textInputTxt.height = 20;            
        }
        
        private function draw():void {
            addChild(linkTxt);
            linkTxt.htmlText += createLink(DOMAIN_1_URL, "Click to go to first domain");
            linkTxt.htmlText += "&lt;br />";
            linkTxt.htmlText += createLink(DOMAIN_2_URL, "Click to go to second domain");

            addChild(textInputTxt);
            textInputTxt.y = linkTxt.height;
            textInputTxt.text = "type here";
        }
        
        private function createLink(url:String, text:String):String {
            var link:String = "";
            link += "&lt;font color='#0000FF'>";
            link += "&lt;u>";
            link += "&lt;b>";
            link += "&lt;a href='event:" + url + "'>" + text + "&lt;/a>";
            link += "&lt;/b>";
            link += "&lt;/u>";
            link += "&lt;/font>";
            return link;
        }
        
        private function linkHandler(e:TextEvent):void {
            var request:URLRequest = new URLRequest(e.text);
            navigateToURL(request);
        }
        
        private function textInputHandler(e:TextEvent):void {
            trace(">> ============================");
            trace(">> e.text: " + e.text);
            trace(">> textInputTxt.text: " + textInputTxt.text);
        }
    }
}
</codeblock></example></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.text.xml#TextField" class="- topic/link "><linktext class="- topic/linktext ">flash.text.TextField</linktext></link></related-links><adobeApiEvent id="flash.events:TextEvent:LINK_link" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">link</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:TextEvent:LINK</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:TextEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef><example conref="examples\TextEvent_LINKExample.as" class="- topic/example "> Dans cet exemple, lorsqu’un utilisateur clique sur un lien hypertexte dans un texte HTML, il déclenche un événement text. Selon le lien, l’utilisateur est envoyé vers un site Web désigné en fonction du système d’exploitation ou un cercle est dessiné selon le rayon sélectionné par l’utilisateur. 
   
 <p class="- topic/p ">Un champ de texte est créé et son contenu est défini sur une chaîne formatée en HTML à l’aide de la propriété <codeph class="+ topic/ph pr-d/codeph ">htmlText</codeph>. Les liens sont soulignés pour faciliter l’identification par l’utilisateur (Adobe Flash Player change le pointeur de la souris une fois que le pointeur a survolé le lien uniquement). Pour s’assurer qu’un clic de souris de l’utilisateur va bien invoquer une méthode ActionScript, l’URL du lien commence par la chaîne <codeph class="+ topic/ph pr-d/codeph ">"event:"</codeph> et un écouteur est ajouté pour l’événement <codeph class="+ topic/ph pr-d/codeph ">TextEvent.LINK</codeph>.</p> 
 
 <p class="- topic/p ">La méthode <codeph class="+ topic/ph pr-d/codeph ">linkHandler()</codeph>, déclenchée après que l’utilisateur a cliqué sur un lien, gère tous les événements de lien pour le champ de texte. La première instruction if vérifie la propriété <codeph class="+ topic/ph pr-d/codeph ">text</codeph> de l’événement, qui contient le reste de l’URL derrière la chaîne <codeph class="+ topic/ph pr-d/codeph ">"event:"</codeph>. Si l’utilisateur a cliqué sur le lien pour le système d’exploitation, le nom du système d’exploitation actuel de l’utilisateur, récupéré dans la propriété <codeph class="+ topic/ph pr-d/codeph ">Capabilities.os</codeph> du système, est utilisé pour envoyer l’utilisateur vers le site Web désigné. Dans le cas contraire, la taille du rayon sélectionnée, transmise par la propriété <codeph class="+ topic/ph pr-d/codeph ">text</codeph> de l’événement, est utilisée pour dessiner un cercle sous le champ de texte. A chaque clic de l’utilisateur sur le lien du rayon, le cercle dessiné précédemment est effacé et un nouveau cercle rouge est dessiné avec la taille du rayon sélectionnée.</p> 
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
package {
    import flash.display.Sprite;
    import flash.events.TextEvent;
    import flash.errors.IOError;
    import flash.events.IOErrorEvent;
    import flash.system.Capabilities;
    import flash.net.navigateToURL;
    import flash.net.URLRequest;
    import flash.text.TextField;
    import flash.text.TextFieldAutoSize;
    import flash.display.Shape;
    import flash.display.Graphics;

    public class TextEvent_LINKExample extends Sprite {
        private  var myCircle:Shape = new Shape();
        
        public function TextEvent_LINKExample() {
            var myTextField:TextField = new TextField();
            myTextField.autoSize = TextFieldAutoSize.LEFT;
            myTextField.multiline = true;
            myTextField.background = true;
            myTextField.htmlText = "Draw a circle with the radius of &lt;u>&lt;a href=\"event:20\">20 pixels&lt;/a>&lt;/u>.&lt;br>" 
                         +  "Draw a circle with the radius of &lt;u>&lt;a href=\"event:50\">50 pixels&lt;/a>&lt;/u>.&lt;br>&lt;br>"
                         +  "&lt;u>&lt;a href=\"event:os\">Learn about your operating system.&lt;/a>&lt;/u>&lt;br>";

            myTextField.addEventListener(TextEvent.LINK, linkHandler);

            this.addChild(myTextField);
            this.addChild(myCircle);
        }
        
        private function linkHandler(e:TextEvent):void {
            var osString:String = Capabilities.os;
            
            if(e.text == "os") {
       
                if (osString.search(/Windows/) != -1 ){
                    navigateToURL(new URLRequest("http://www.microsoft.com/"), "_self");
                }else if (osString.search(/Mac/) != -1 ) {
                    navigateToURL(new URLRequest("http://www.apple.com/"), "_self");
                } else if (osString.search(/linux/i)!= -1) {
                    navigateToURL(new URLRequest("http://www.tldp.org/"), "_self");
                }
            
            } else {
                myCircle.graphics.clear();    
                myCircle.graphics.beginFill(0xFF0000);
                myCircle.graphics.drawCircle(100, 150, Number(e.text));
                myCircle.graphics.endFill();
            }             
        }
    }
}
</codeblock></example></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.events.xml#TextEvent/text" class="- topic/link "><linktext class="- topic/linktext ">text</linktext></link><link href="flash.text.xml#TextField/event:link" class="- topic/link "><linktext class="- topic/linktext ">flash.text.TextField.link</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:TextEvent:TEXT_INPUT_textInput" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">textInput</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:TextEvent:TEXT_INPUT</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:TextEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef><example conref="examples\TextEvent_TEXT_INPUTExample.as" class="- topic/example "> L’exemple suivant guide l’utilisateur dans la création d’une clé de combinaison spéciale (similaire à un mot de passe). Cette clé de combinaison contient sept caractères alphanumériques, dont le deuxième et le cinquième sont numériques.
 
 <p class="- topic/p ">Trois champs de texte pour les instructions préliminaires, l’entrée de l’utilisateur et les messages d’avertissement (erreur) sont créés. Un écouteur d’événement est ajouté pour répondre à la saisie de l’utilisateur en déclenchant la méthode <codeph class="+ topic/ph pr-d/codeph ">textInputHandler()</codeph>. A chaque saisie de l’utilisateur, un événement <codeph class="+ topic/ph pr-d/codeph ">TextEvent.TEXT_INPUT</codeph> est distribué. </p>
 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Remarque :</b> les événements sont déclenchés lorsqu’un utilisateur saisit des caractères de texte et non en réponse à toute touche du clavier, telle que la touche Retour arrière. Pour capturer tous les événements keyboard, utilisez un écouteur pour l’événement <codeph class="+ topic/ph pr-d/codeph ">KeyboardEvent</codeph>.</p>
 
 <p class="- topic/p ">La méthode <codeph class="+ topic/ph pr-d/codeph ">textInputHandler()</codeph> contrôle et gère l’entrée de l’utilisateur. La méthode <codeph class="+ topic/ph pr-d/codeph ">preventDefault()</codeph> est utilisée pour empêcher Adobe Flash Player d’afficher immédiatement le texte dans le champ de saisie. L’application est chargée de mettre le champ à jour. Pour annuler la suppression ou la modification de l’utilisateur des caractères déjà saisis (la chaîne <codeph class="+ topic/ph pr-d/codeph ">result</codeph>), le contenu du champ de texte est réaffecté à la chaîne <codeph class="+ topic/ph pr-d/codeph ">result</codeph> lorsque l’utilisateur fait une nouvelle saisie. Egalement, pour que l’utilisateur soit toujours confronté au même comportement, la méthode <codeph class="+ topic/ph pr-d/codeph ">setSelection()</codeph> place le point d’insertion (un caret) après le dernier caractère sélectionné dans le champ de texte.</p>
 
 <p class="- topic/p ">La première instruction if de la méthode <codeph class="+ topic/ph pr-d/codeph ">textInputHandler()</codeph> vérifie le second et le cinquième caractères de la clé de combinaison saisie, qui doivent être numériques. Si l’entrée de l’utilisateur est correcte, la méthode <codeph class="+ topic/ph pr-d/codeph ">updateCombination()</codeph> est appelée et la chaîne de la clé de combinaison (<codeph class="+ topic/ph pr-d/codeph ">result</codeph>) est ajoutée à l’entrée de l’utilisateur. La méthode <codeph class="+ topic/ph pr-d/codeph ">updateCombination()</codeph> déplace également le point d’insertion après le caractère sélectionné. Une fois que les sept caractères sont saisis, la dernière instruction if dans la méthode <codeph class="+ topic/ph pr-d/codeph ">textInputHandler()</codeph> change le type du champ de texte <codeph class="+ topic/ph pr-d/codeph ">inputTextField</codeph> de <codeph class="+ topic/ph pr-d/codeph ">INPUT</codeph> à <codeph class="+ topic/ph pr-d/codeph ">DYNAMIC</codeph>, ce qui signifie que l’utilisateur ne peut plus saisir ni changer de caractères.</p>
  
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
package {
    import flash.display.Sprite;
    import flash.text.TextField;
    import flash.text.TextFieldType;
    import flash.text.TextFieldAutoSize;
    import flash.events.TextEvent;

    public class TextEvent_TEXT_INPUTExample extends Sprite {
        private var instructionTextField:TextField = new TextField();
        private var inputTextField:TextField = new TextField(); 
        private var warningTextField:TextField = new TextField();
        private var result:String = "";

        public function TextEvent_TEXT_INPUTExample() {
            instructionTextField.x = 10;
            instructionTextField.y = 10;
            instructionTextField.background = true; 
            instructionTextField.autoSize = TextFieldAutoSize.LEFT;
            instructionTextField.text = "Please enter a value in the format A#AA#AA,\n" 
                                        + "where 'A' represents a letter and '#' represents a number.\n" +
                                        "(Note that once you input a character you can't change it.)" ;
        
            inputTextField.x = 10;
            inputTextField.y = 70;
            inputTextField.height = 20;
            inputTextField.width = 75;
            inputTextField.background = true;
            inputTextField.border = true;
            inputTextField.type = TextFieldType.INPUT; 
            
            warningTextField.x = 10;
            warningTextField.y = 100;
            warningTextField.autoSize = TextFieldAutoSize.LEFT;
 
            inputTextField.addEventListener(TextEvent.TEXT_INPUT, textInputHandler);   
           
            this.addChild(instructionTextField);
            this.addChild(inputTextField);
            this.addChild(warningTextField);
        }

        private function textInputHandler(event:TextEvent):void {
            var charExp:RegExp = /[a-zA-z]/;   
            var numExp:RegExp = /[0-9]/;

            event.preventDefault();  
            
            inputTextField.text = result;                
            inputTextField.setSelection(result.length + 1, result.length + 1);
 
            if (inputTextField.text.length == 1 || inputTextField.text.length == 4) {
            
                if(numExp.test(event.text) == true) {
                    updateCombination(event.text);
                } else {
                    warningTextField.text = "You need a single digit number.";
                }
               
            }else {
                
                if(charExp.test(event.text) == true) { 
                    updateCombination(event.text);
                } else {
                    warningTextField.text = "You need an alphabet character.";
                }
            }
 
            if(inputTextField.text.length == 7) {
                inputTextField.type = TextFieldType.DYNAMIC;
                instructionTextField.text = "CONGRATULATIONS. You've done.";                
            }          
        }

        private function updateCombination(s:String):void {
                    warningTextField.text = "";
                    result += s;           
                    inputTextField.text = result;
                    inputTextField.setSelection(result.length + 1, result.length + 1);
        }
    }
}
</codeblock></example></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.text.xml#TextField/event:textInput" class="- topic/link "><linktext class="- topic/linktext ">flash.text.TextField.textInput</linktext></link><link href="flash.events.xml#TextEvent/text" class="- topic/link "><linktext class="- topic/linktext ">text</linktext></link></related-links></adobeApiEvent><apiConstructor id="flash.events:TextEvent:TextEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">TextEvent</apiName><shortdesc class="- topic/shortdesc ">
	 Crée un objet Event contenant des informations sur les événements texte.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">type</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc "> Type de l’événement. Les écouteurs d’événement peuvent accéder à cette information par le biais de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> héritée. Les valeurs possibles sont les suivantes : <codeph class="+ topic/ph pr-d/codeph ">TextEvent.LINK</codeph> et <codeph class="+ topic/ph pr-d/codeph ">TextEvent.TEXT_INPUT</codeph>.
	 
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">bubbles</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Détermine si l’objet Event prend part à la phase de propagation du flux d’événements. Les écouteurs d’événement peuvent accéder à cette information par le biais de la propriété <codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph> héritée.  
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">cancelable</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Détermine si l’objet Event peut être annulé. Les écouteurs d’événement peuvent accéder à cette information par le biais de la propriété <codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph> héritée. 
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">text</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData "/><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Caractères de texte entrés par l’utilisateur. Les écouteurs d’événement peuvent accéder à cette information par le biais de la propriété <codeph class="+ topic/ph pr-d/codeph ">text</codeph>.
	 
	 </apiDesc></apiParam><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Constructeur associé aux objets TextEvent.
	 </apiTipText></apiTipTexts></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Crée un objet Event contenant des informations sur les événements texte. Les objets Event sont transmis en tant que paramètres aux écouteurs d’événements.
	 
	 </apiDesc></apiConstructorDetail><related-links class="- topic/related-links "><link href="flash.text.xml#TextField" class="- topic/link "><linktext class="- topic/linktext ">flash.text.TextField</linktext></link></related-links></apiConstructor><apiOperation id="flash.events:TextEvent:clone" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">clone</apiName><shortdesc class="- topic/shortdesc ">
	 Crée une copie de l’objet TextEvent et définit la valeur de chaque propriété de sorte qu’elle corresponde à la valeur d’origine.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Nouvel objet TextEvent dont les propriétés ont la même valeur que celles de l’objet d’origine.
	  
	  </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.events:Event</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Crée une copie de l’objet TextEvent et définit la valeur de chaque propriété de sorte qu’elle corresponde à la valeur d’origine. 
	 
	 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.events:TextEvent:toString" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">toString</apiName><shortdesc class="- topic/shortdesc ">
	 Renvoie une chaîne répertoriant toutes les propriétés de l’objet TextEvent.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Chaîne répertoriant toutes les propriétés de l’objet TextEvent.
	  
	  </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Renvoie une chaîne répertoriant toutes les propriétés de l’objet TextEvent. La chaîne est écrite au format suivant :
	 <p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">[TextEvent type=<i class="+ topic/ph hi-d/i ">valeur</i> bubbles=<i class="+ topic/ph hi-d/i ">valeur</i> cancelable=<i class="+ topic/ph hi-d/i ">valeur</i> text=<i class="+ topic/ph hi-d/i ">valeur</i>]</codeph></p>
	 
	 </apiDesc></apiOperationDetail></apiOperation><apiValue id="flash.events:TextEvent:LINK" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">LINK</apiName><shortdesc class="- topic/shortdesc ">
     Définit la valeur de la propriété type d’un objet événement link.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">link</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet événement <codeph class="+ topic/ph pr-d/codeph ">link</codeph>.
	 
	 <p class="- topic/p ">Les propriétés de cet événement sont les suivantes :</p>
	 
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">L’objet qui traite activement l’objet Event avec un écouteur d’événements.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Champ de texte contenant l’hyperlien sur lequel l’utilisateur a cliqué. La propriété <codeph class="+ topic/ph pr-d/codeph ">target</codeph> ne correspond pas toujours à l’objet de la liste d’affichage qui est associé à l’écouteur d’événement. Utilisez la propriété <codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph> pour accéder à l’objet de la liste d’affichage qui traite actuellement l’événement.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">text</codeph></entry><entry class="- topic/entry ">Reste de l’URL après « event: »</entry></row></tbody></tgroup></adobetable>
	 
	 </apiDesc><example conref="examples\TextEvent_LINKExample.as" class="- topic/example "> Dans cet exemple, lorsqu’un utilisateur clique sur un lien hypertexte dans un texte HTML, il déclenche un événement text. Selon le lien, l’utilisateur est envoyé vers un site Web désigné en fonction du système d’exploitation ou un cercle est dessiné selon le rayon sélectionné par l’utilisateur. 
   
 <p class="- topic/p ">Un champ de texte est créé et son contenu est défini sur une chaîne formatée en HTML à l’aide de la propriété <codeph class="+ topic/ph pr-d/codeph ">htmlText</codeph>. Les liens sont soulignés pour faciliter l’identification par l’utilisateur (Adobe Flash Player change le pointeur de la souris une fois que le pointeur a survolé le lien uniquement). Pour s’assurer qu’un clic de souris de l’utilisateur va bien invoquer une méthode ActionScript, l’URL du lien commence par la chaîne <codeph class="+ topic/ph pr-d/codeph ">"event:"</codeph> et un écouteur est ajouté pour l’événement <codeph class="+ topic/ph pr-d/codeph ">TextEvent.LINK</codeph>.</p> 
 
 <p class="- topic/p ">La méthode <codeph class="+ topic/ph pr-d/codeph ">linkHandler()</codeph>, déclenchée après que l’utilisateur a cliqué sur un lien, gère tous les événements de lien pour le champ de texte. La première instruction if vérifie la propriété <codeph class="+ topic/ph pr-d/codeph ">text</codeph> de l’événement, qui contient le reste de l’URL derrière la chaîne <codeph class="+ topic/ph pr-d/codeph ">"event:"</codeph>. Si l’utilisateur a cliqué sur le lien pour le système d’exploitation, le nom du système d’exploitation actuel de l’utilisateur, récupéré dans la propriété <codeph class="+ topic/ph pr-d/codeph ">Capabilities.os</codeph> du système, est utilisé pour envoyer l’utilisateur vers le site Web désigné. Dans le cas contraire, la taille du rayon sélectionnée, transmise par la propriété <codeph class="+ topic/ph pr-d/codeph ">text</codeph> de l’événement, est utilisée pour dessiner un cercle sous le champ de texte. A chaque clic de l’utilisateur sur le lien du rayon, le cercle dessiné précédemment est effacé et un nouveau cercle rouge est dessiné avec la taille du rayon sélectionnée.</p> 
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
package {
    import flash.display.Sprite;
    import flash.events.TextEvent;
    import flash.errors.IOError;
    import flash.events.IOErrorEvent;
    import flash.system.Capabilities;
    import flash.net.navigateToURL;
    import flash.net.URLRequest;
    import flash.text.TextField;
    import flash.text.TextFieldAutoSize;
    import flash.display.Shape;
    import flash.display.Graphics;

    public class TextEvent_LINKExample extends Sprite {
        private  var myCircle:Shape = new Shape();
        
        public function TextEvent_LINKExample() {
            var myTextField:TextField = new TextField();
            myTextField.autoSize = TextFieldAutoSize.LEFT;
            myTextField.multiline = true;
            myTextField.background = true;
            myTextField.htmlText = "Draw a circle with the radius of &lt;u>&lt;a href=\"event:20\">20 pixels&lt;/a>&lt;/u>.&lt;br>" 
                         +  "Draw a circle with the radius of &lt;u>&lt;a href=\"event:50\">50 pixels&lt;/a>&lt;/u>.&lt;br>&lt;br>"
                         +  "&lt;u>&lt;a href=\"event:os\">Learn about your operating system.&lt;/a>&lt;/u>&lt;br>";

            myTextField.addEventListener(TextEvent.LINK, linkHandler);

            this.addChild(myTextField);
            this.addChild(myCircle);
        }
        
        private function linkHandler(e:TextEvent):void {
            var osString:String = Capabilities.os;
            
            if(e.text == "os") {
       
                if (osString.search(/Windows/) != -1 ){
                    navigateToURL(new URLRequest("http://www.microsoft.com/"), "_self");
                }else if (osString.search(/Mac/) != -1 ) {
                    navigateToURL(new URLRequest("http://www.apple.com/"), "_self");
                } else if (osString.search(/linux/i)!= -1) {
                    navigateToURL(new URLRequest("http://www.tldp.org/"), "_self");
                }
            
            } else {
                myCircle.graphics.clear();    
                myCircle.graphics.beginFill(0xFF0000);
                myCircle.graphics.drawCircle(100, 150, Number(e.text));
                myCircle.graphics.endFill();
            }             
        }
    }
}
</codeblock></example></apiValueDetail><related-links class="- topic/related-links "><link href="flash.events.xml#TextEvent/text" class="- topic/link "><linktext class="- topic/linktext ">text</linktext></link><link href="flash.text.xml#TextField/event:link" class="- topic/link "><linktext class="- topic/linktext ">flash.text.TextField.link</linktext></link></related-links></apiValue><apiValue id="flash.events:TextEvent:TEXT_INPUT" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">TEXT_INPUT</apiName><shortdesc class="- topic/shortdesc ">
     Définit la valeur de la propriété type d’un objet événement textInput.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">textInput</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet événement <codeph class="+ topic/ph pr-d/codeph ">textInput</codeph>. 
     <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Remarque :</b> cet événement n’est pas distribué pour les touches Supprimer ou Retour arrière. </p>
	 <p class="- topic/p ">Les propriétés de cet événement sont les suivantes :</p>
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> ; appelez la méthode <codeph class="+ topic/ph pr-d/codeph ">preventDefault()</codeph> pour annuler le comportement par défaut.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">L’objet qui traite activement l’objet Event avec un écouteur d’événements.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Champ de texte dans lequel sont entrés des caractères. La cible ne correspond pas toujours à l’objet de la liste d’affichage qui est associé à l’écouteur d’événement. Utilisez la propriété <codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph> pour accéder à l’objet de la liste d’affichage qui traite actuellement l’événement.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">text</codeph></entry><entry class="- topic/entry ">Caractère ou série de caractères entré par l’utilisateur.</entry></row></tbody></tgroup></adobetable>
	 
	 </apiDesc><example conref="examples\TextEvent_TEXT_INPUTExample.as" class="- topic/example "> L’exemple suivant guide l’utilisateur dans la création d’une clé de combinaison spéciale (similaire à un mot de passe). Cette clé de combinaison contient sept caractères alphanumériques, dont le deuxième et le cinquième sont numériques.
 
 <p class="- topic/p ">Trois champs de texte pour les instructions préliminaires, l’entrée de l’utilisateur et les messages d’avertissement (erreur) sont créés. Un écouteur d’événement est ajouté pour répondre à la saisie de l’utilisateur en déclenchant la méthode <codeph class="+ topic/ph pr-d/codeph ">textInputHandler()</codeph>. A chaque saisie de l’utilisateur, un événement <codeph class="+ topic/ph pr-d/codeph ">TextEvent.TEXT_INPUT</codeph> est distribué. </p>
 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Remarque :</b> les événements sont déclenchés lorsqu’un utilisateur saisit des caractères de texte et non en réponse à toute touche du clavier, telle que la touche Retour arrière. Pour capturer tous les événements keyboard, utilisez un écouteur pour l’événement <codeph class="+ topic/ph pr-d/codeph ">KeyboardEvent</codeph>.</p>
 
 <p class="- topic/p ">La méthode <codeph class="+ topic/ph pr-d/codeph ">textInputHandler()</codeph> contrôle et gère l’entrée de l’utilisateur. La méthode <codeph class="+ topic/ph pr-d/codeph ">preventDefault()</codeph> est utilisée pour empêcher Adobe Flash Player d’afficher immédiatement le texte dans le champ de saisie. L’application est chargée de mettre le champ à jour. Pour annuler la suppression ou la modification de l’utilisateur des caractères déjà saisis (la chaîne <codeph class="+ topic/ph pr-d/codeph ">result</codeph>), le contenu du champ de texte est réaffecté à la chaîne <codeph class="+ topic/ph pr-d/codeph ">result</codeph> lorsque l’utilisateur fait une nouvelle saisie. Egalement, pour que l’utilisateur soit toujours confronté au même comportement, la méthode <codeph class="+ topic/ph pr-d/codeph ">setSelection()</codeph> place le point d’insertion (un caret) après le dernier caractère sélectionné dans le champ de texte.</p>
 
 <p class="- topic/p ">La première instruction if de la méthode <codeph class="+ topic/ph pr-d/codeph ">textInputHandler()</codeph> vérifie le second et le cinquième caractères de la clé de combinaison saisie, qui doivent être numériques. Si l’entrée de l’utilisateur est correcte, la méthode <codeph class="+ topic/ph pr-d/codeph ">updateCombination()</codeph> est appelée et la chaîne de la clé de combinaison (<codeph class="+ topic/ph pr-d/codeph ">result</codeph>) est ajoutée à l’entrée de l’utilisateur. La méthode <codeph class="+ topic/ph pr-d/codeph ">updateCombination()</codeph> déplace également le point d’insertion après le caractère sélectionné. Une fois que les sept caractères sont saisis, la dernière instruction if dans la méthode <codeph class="+ topic/ph pr-d/codeph ">textInputHandler()</codeph> change le type du champ de texte <codeph class="+ topic/ph pr-d/codeph ">inputTextField</codeph> de <codeph class="+ topic/ph pr-d/codeph ">INPUT</codeph> à <codeph class="+ topic/ph pr-d/codeph ">DYNAMIC</codeph>, ce qui signifie que l’utilisateur ne peut plus saisir ni changer de caractères.</p>
  
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
package {
    import flash.display.Sprite;
    import flash.text.TextField;
    import flash.text.TextFieldType;
    import flash.text.TextFieldAutoSize;
    import flash.events.TextEvent;

    public class TextEvent_TEXT_INPUTExample extends Sprite {
        private var instructionTextField:TextField = new TextField();
        private var inputTextField:TextField = new TextField(); 
        private var warningTextField:TextField = new TextField();
        private var result:String = "";

        public function TextEvent_TEXT_INPUTExample() {
            instructionTextField.x = 10;
            instructionTextField.y = 10;
            instructionTextField.background = true; 
            instructionTextField.autoSize = TextFieldAutoSize.LEFT;
            instructionTextField.text = "Please enter a value in the format A#AA#AA,\n" 
                                        + "where 'A' represents a letter and '#' represents a number.\n" +
                                        "(Note that once you input a character you can't change it.)" ;
        
            inputTextField.x = 10;
            inputTextField.y = 70;
            inputTextField.height = 20;
            inputTextField.width = 75;
            inputTextField.background = true;
            inputTextField.border = true;
            inputTextField.type = TextFieldType.INPUT; 
            
            warningTextField.x = 10;
            warningTextField.y = 100;
            warningTextField.autoSize = TextFieldAutoSize.LEFT;
 
            inputTextField.addEventListener(TextEvent.TEXT_INPUT, textInputHandler);   
           
            this.addChild(instructionTextField);
            this.addChild(inputTextField);
            this.addChild(warningTextField);
        }

        private function textInputHandler(event:TextEvent):void {
            var charExp:RegExp = /[a-zA-z]/;   
            var numExp:RegExp = /[0-9]/;

            event.preventDefault();  
            
            inputTextField.text = result;                
            inputTextField.setSelection(result.length + 1, result.length + 1);
 
            if (inputTextField.text.length == 1 || inputTextField.text.length == 4) {
            
                if(numExp.test(event.text) == true) {
                    updateCombination(event.text);
                } else {
                    warningTextField.text = "You need a single digit number.";
                }
               
            }else {
                
                if(charExp.test(event.text) == true) { 
                    updateCombination(event.text);
                } else {
                    warningTextField.text = "You need an alphabet character.";
                }
            }
 
            if(inputTextField.text.length == 7) {
                inputTextField.type = TextFieldType.DYNAMIC;
                instructionTextField.text = "CONGRATULATIONS. You've done.";                
            }          
        }

        private function updateCombination(s:String):void {
                    warningTextField.text = "";
                    result += s;           
                    inputTextField.text = result;
                    inputTextField.setSelection(result.length + 1, result.length + 1);
        }
    }
}
</codeblock></example></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.xml#TextField/event:textInput" class="- topic/link "><linktext class="- topic/linktext ">flash.text.TextField.textInput</linktext></link><link href="flash.events.xml#TextEvent/text" class="- topic/link "><linktext class="- topic/linktext ">text</linktext></link></related-links></apiValue><apiValue id="flash.events:TextEvent:text:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">text</apiName><shortdesc class="- topic/shortdesc ">
	 Dans le cas d’un événement textInput, caractère ou suite de caractères entré par l’utilisateur.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Dans le cas d’un événement <codeph class="+ topic/ph pr-d/codeph ">textInput</codeph>, caractère ou suite de caractères entré par l’utilisateur. Dans le cas d’un événement <codeph class="+ topic/ph pr-d/codeph ">link</codeph>, texte de l’attribut <codeph class="+ topic/ph pr-d/codeph ">event</codeph> de l’attribut <codeph class="+ topic/ph pr-d/codeph ">href</codeph> de la balise <codeph class="+ topic/ph pr-d/codeph ">&lt;a></codeph>.
	 
	 </apiDesc><example class="- topic/example ">Le code suivant montre que l’événement <codeph class="+ topic/ph pr-d/codeph ">link</codeph> est distribué lorsque l’utilisateur clique sur un lien hypertexte :
	 
	<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
	import flash.text.TextField;
	import flash.events.TextEvent;			
	
	var tf:TextField = new TextField();
	tf.htmlText = "&lt;a href='event:myEvent'>Click Me.&lt;/a>";
	tf.addEventListener("link", clickHandler);
	addChild(tf);
	
	function clickHandler(e:TextEvent):void {
		trace(e.type); // link
		trace(e.text); // myEvent
	}
	</codeblock>
	 
	 </example></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.events:SampleDataEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">SampleDataEvent</apiName><shortdesc class="- topic/shortdesc "> 
 Distribué lorsqu’un objet Sound sollicite de nouvelles données audio ou lorsqu’un objet Microphone dispose de nouvelles données audio.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
 Distribué lorsqu’un objet Sound sollicite de nouvelles données audio ou lorsqu’un objet Microphone dispose de nouvelles données audio.
 
 <p class="- topic/p ">Cet événement a deux usages principaux : </p>
 
 <ul class="- topic/ul "><li class="- topic/li ">Fournir des données audio générées de façon dynamique à un objet Sound</li><li class="- topic/li ">Obtenir des données audio pour un objet Microphone</li></ul>
 
  <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Génération dynamique de données audio à l’aide de l’objet Sound</b> Utilisez l’événement <codeph class="+ topic/ph pr-d/codeph ">sampleData</codeph> pour lire les données audio générées dynamiquement. Dans cet environnement, l’objet Sound ne contient pas vraiment de données audio. Il agit en fait en tant que socket pour les données audio qui lui sont diffusées en continu par l’intermédiaire de la fonction que vous affectez comme gestionnaire à cet événement <codeph class="+ topic/ph pr-d/codeph ">sampleData</codeph>. </p>
 
  <p class="- topic/p ">Dans votre fonction, utilisez la méthode <codeph class="+ topic/ph pr-d/codeph ">ByteArray.writeFloat()</codeph> pour écrire dans la propriété <codeph class="+ topic/ph pr-d/codeph ">event.data</codeph> de l’événement qui contient les données échantillonnées que vous souhaitez lire.</p>
 
  <p class="- topic/p ">Si un objet Sound n’a pas chargé un fichier MP3, lorsque vous appelez sa méthode <codeph class="+ topic/ph pr-d/codeph ">play()</codeph>, l’objet commence par distribuer des événements <codeph class="+ topic/ph pr-d/codeph ">sampleData</codeph> vous demandant des échantillons audio. L’objet Sound continue d’envoyer des événements pendant la lecture du son jusqu’à ce que vous cessiez de fournir des données ou jusqu’à ce que la méthode <codeph class="+ topic/ph pr-d/codeph ">stop()</codeph> de l’objet SoundChannel soit appelée.</p>
 
  <p class="- topic/p ">Le temps d’attente de l’événement varie selon les plates-formes et peut encore changer dans les futures versions de <ph class="- topic/ph ">Flash Player et </ph>AIR. Ne dépendez pas d’un temps d’attente spécifique, mais calculez-le à l’aide de <codeph class="+ topic/ph pr-d/codeph ">((SampleDataEvent.position/44.1) - SoundChannelObject.position)</codeph>.</p>
 
  <p class="- topic/p ">Fournissez entre 2 048 et 8 192 échantillons à la propriété <codeph class="+ topic/ph pr-d/codeph ">data</codeph> de l’objet SampleDataEvent. Pour de meilleures performances, fournissez autant d’échantillons que possible. Moins vous fournissez d’échantillons, plus il est probable que des bruits parasites se feront entendre pendant la lecture. Ce comportement varie selon les plates-formes et peut se produire dans diverses situations, par exemple lors du redimensionnement du navigateur. Vous pouvez écrire du code qui fonctionne sur une plateforme lorsque vous fournissez uniquement 2 048 échantillons, mais ce même code peut ne pas fonctionner s’il s’exécute sur une autre plateforme. S’il vous faut le plus court délai d’attente possible, envisagez de permettre à l’utilisateur de sélectionner la quantité de données.</p>
 
  <p class="- topic/p ">Si vous fournissez moins de 2 048 échantillons, l’objet Sound lit les échantillons restants, puis interrompt la lecture comme s’il avait atteint la fin du fichier son, en générant un événement <codeph class="+ topic/ph pr-d/codeph ">complete</codeph>.</p>
 
  <p class="- topic/p ">Vous pouvez utiliser la méthode <codeph class="+ topic/ph pr-d/codeph ">extract()</codeph> d’un objet Sound pour extraire ses données audio, que vous pouvez ensuite écrire dans le flux dynamique pour la lecture.</p>
 
  <p class="- topic/p ">Lorsque vous utilisez l’écouteur d’événement <codeph class="+ topic/ph pr-d/codeph ">sampleData</codeph> avec un objet Sound, les uniques méthodes Sound activées sont <codeph class="+ topic/ph pr-d/codeph ">extract()</codeph> et <codeph class="+ topic/ph pr-d/codeph ">play()</codeph>. L’appel à d’autres méthodes ou propriétés résulte en une exception d’appel non valide. Tous les méthodes et propriétés de l’objet SoundChannel sont toujours activées.</p>
 
  <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Capture audio du microphone</b> Utilisez l’événement <codeph class="+ topic/ph pr-d/codeph ">sampleData</codeph> pour capturer un son à partir d’un microphone. Lorsque vous ajoutez un écouteur d’événement pour l’événement <codeph class="+ topic/ph pr-d/codeph ">sampleData</codeph>, le microphone distribue l’événement à mesure que les échantillons audio deviennent disponibles.</p>
 
  <p class="- topic/p ">Dans la fonction de gestionnaire d’événement, utilisez la méthode <codeph class="+ topic/ph pr-d/codeph ">ByteArray.readFloat()</codeph> pour lire la propriété <codeph class="+ topic/ph pr-d/codeph ">data</codeph>) de l’événement, qui contient les données échantillonnées. L’événement contient plusieurs échantillons ; par conséquent, vous devez utiliser une boucle <codeph class="+ topic/ph pr-d/codeph ">while</codeph> pour lire les données disponibles : </p>
 
  <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">var soundBytes:ByteArray = new ByteArray();
 while(event.data.bytesAvailable)
 {
      var sample:Number = event.data.readFloat();
      soundBytes.writeFloat(sample);
 }</codeblock>
 
 
 </apiDesc><example conref="examples\Sound_sampleDataExample.as" class="- topic/example "> L’exemple suivant lit une onde sinusoïdale simple.
 
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
var mySound:Sound = new Sound();
function sineWaveGenerator(event:SampleDataEvent):void {
    for ( var c:int=0; c&lt;8192; c++ ) {
        event.data.writeFloat(Math.sin((Number(c+event.position)/Math.PI/2))*0.25);
        event.data.writeFloat(Math.sin((Number(c+event.position)/Math.PI/2))*0.25);
    }
}

mySound.addEventListener(SampleDataEvent.SAMPLE_DATA,sineWaveGenerator);
mySound.play();
</codeblock></example></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.media.xml#Sound" class="- topic/link "><linktext class="- topic/linktext ">flash.media.Sound</linktext></link></related-links><adobeApiEvent id="flash.events:SampleDataEvent:SAMPLE_DATA_sampleData" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">sampleData</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:SampleDataEvent:SAMPLE_DATA</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:SampleDataEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.media.xml#Sound/event:sampleData" class="- topic/link "><linktext class="- topic/linktext ">flash.media.Sound.sampleData</linktext></link><link href="flash.events.xml#SampleDataEvent" class="- topic/link "><linktext class="- topic/linktext ">flash.events.SampleDataEvent</linktext></link></related-links></adobeApiEvent><apiConstructor id="flash.events:SampleDataEvent:SampleDataEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">SampleDataEvent</apiName><shortdesc class="- topic/shortdesc ">
		Crée un objet événement contenant des informations sur les événements de données audio.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">type</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc "> Type de l’événement. Cette valeur est : <codeph class="+ topic/ph pr-d/codeph ">Event.SAMPLE_DATA</codeph>.
		
		</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">bubbles</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc "> Détermine si l’objet Event prend part à la phase de propagation vers le haut du flux d’événements. 
		</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">cancelable</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Détermine si l’objet d’événement peut être annulé. 
		</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">theposition</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Position des données dans le flux audio.
		</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">thedata</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.utils:ByteArray</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Tableau d’octets de données.
		</apiDesc></apiParam></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		Crée un objet événement contenant des informations sur les événements de données audio. Les objets Event sont transmis en tant que paramètres aux écouteurs d’événements. 
		</apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="flash.events:SampleDataEvent:clone" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">clone</apiName><shortdesc class="- topic/shortdesc ">
		Crée une copie de l’objet SampleDataEvent et définit la valeur de chaque propriété de sorte qu’elle corresponde à la valeur d’origine.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Nouvel objet SampleDataEvent dont les propriétés ont la même valeur que celles de l’objet d’origine.
		</apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.events:Event</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		Crée une copie de l’objet SampleDataEvent et définit la valeur de chaque propriété de sorte qu’elle corresponde à la valeur d’origine. 
		
		</apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.events:SampleDataEvent:toString" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">toString</apiName><shortdesc class="- topic/shortdesc ">
		Renvoie une chaîne contenant toutes les propriétés de l’objet SampleDataEvent.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Chaîne contenant toutes les propriétés de l’objet <codeph class="+ topic/ph pr-d/codeph ">SampleDataEvent</codeph>.
		</apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		Renvoie une chaîne contenant toutes les propriétés de l’objet SampleDataEvent. La chaîne est écrite au format suivant :
		<p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">[SampleDataEvent type=<i class="+ topic/ph hi-d/i ">valeur</i> bubbles=<i class="+ topic/ph hi-d/i ">valeur</i> cancelable=<i class="+ topic/ph hi-d/i ">valeur</i> theposition=<i class="+ topic/ph hi-d/i ">valeur</i> thedata=<i class="+ topic/ph hi-d/i ">valeur</i>]</codeph></p>
		
		</apiDesc></apiOperationDetail></apiOperation><apiValue id="flash.events:SampleDataEvent:SAMPLE_DATA" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">SAMPLE_DATA</apiName><shortdesc class="- topic/shortdesc ">
		Définit la valeur de la propriété type d’un objet événement SampleDataEvent.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">sampleData</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		Définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet événement <codeph class="+ topic/ph pr-d/codeph ">SampleDataEvent</codeph>. 
		<p class="- topic/p ">Les propriétés de cet événement sont les suivantes :</p>
		<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">position</codeph></entry><entry class="- topic/entry ">Point à partir duquel les données audio sont fournies.</entry></row></tbody></tgroup></adobetable>
		
		</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.media.xml#Sound/event:sampleData" class="- topic/link "><linktext class="- topic/linktext ">flash.media.Sound.sampleData</linktext></link><link href="flash.events.xml#SampleDataEvent" class="- topic/link "><linktext class="- topic/linktext ">flash.events.SampleDataEvent</linktext></link></related-links></apiValue><apiValue id="flash.events:SampleDataEvent:data:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">data</apiName><shortdesc class="- topic/shortdesc ">
		Données présentes dans le flux audio.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.utils:ByteArray</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		Données présentes dans le flux audio.
		</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:SampleDataEvent:position:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">position</apiName><shortdesc class="- topic/shortdesc ">
		Position des données dans le flux audio.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		Position des données dans le flux audio.
		</apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.events:HTTPStatusEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">HTTPStatusEvent</apiName><shortdesc class="- topic/shortdesc ">
L’application distribue des objets HTTPStatusEvent lorsqu’une requête réseau renvoie un code d’état HTTP.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
L’application distribue des objets HTTPStatusEvent lorsqu’une requête réseau renvoie un code d’état HTTP. 

<p class="- topic/p ">Les objets HTTPStatusEvent sont toujours envoyés avant les événements d’erreur ou d’achèvement. Un objet HTTPStatusEvent n’indique pas nécessairement une erreur. Il reflète simplement le code d’état HTTP (s’il existe) fourni par la pile réseau. <ph class="- topic/ph ">Certains environnements Flash Player ne peuvent pas détecter les codes d’état HTTP. Dans ce cas, le code d’état 0 est systématiquement renvoyé.</ph> </p>

<p class="- topic/p "><ph class="- topic/ph ">Dans Flash Player, il n’existe qu’un type d’événement HTTPStatus : <codeph class="+ topic/ph pr-d/codeph ">httpStatus</codeph>. </ph>Dans le moteur d’exécution AIR, un FileReference, URLLoader ou URLStream peut enregistrer pour écouter un <codeph class="+ topic/ph pr-d/codeph ">httpResponseStatus</codeph>, qui inclut des propriétés <codeph class="+ topic/ph pr-d/codeph ">responseURL</codeph> et <codeph class="+ topic/ph pr-d/codeph ">responseHeaders</codeph>. Ces propriétés ne sont pas définies dans un événement <codeph class="+ topic/ph pr-d/codeph ">httpStatus</codeph>.</p>

</apiDesc><example conref="examples\HTTPStatusEventExample.as" class="- topic/example "> L’exemple suivant tente de charger un fichier non existant depuis le répertoire Web racine http://www.[yourDomain].com, qui doit distribuer un événement <codeph class="+ topic/ph pr-d/codeph ">httpStatusHandler</codeph> avec l’état 404, indiquant que le fichier est introuvable. L’événement <codeph class="+ topic/ph pr-d/codeph ">httpStatusHandler</codeph> est traité par <codeph class="+ topic/ph pr-d/codeph ">httpStatusHandler()</codeph>, qui imprime simplement deux lignes d’informations sur l’événement.
 
 <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Remarques :</b> 
 <ol class="- topic/ol "><li class="- topic/li ">Pour générer un événement <codeph class="+ topic/ph pr-d/codeph ">securityError</codeph> dans cet exemple, vous devez compiler le fichier SWF en définissant « Sécurité de lecture locale » sur « Accès au réseau uniquement ».</li><li class="- topic/li ">Vous devez disposer d’un serveur s’exécutant sur http://www.[yourDomain].com et qui écoute le port 80 ou vous recevrez un événement <codeph class="+ topic/ph pr-d/codeph ">httpStatusHandler</codeph> avec le code d’état 0 au lieu de 404.</li><li class="- topic/li ">Il ne doit pas y avoir de fichier nommé MissingFile.html dans le répertoire Web racine http://www.[yourDomain].com car vous ne recevriez pas dans ce cas l’événement <codeph class="+ topic/ph pr-d/codeph ">httpStatusHandler</codeph> approprié.</li></ol>
 </p>
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
package {
    import flash.display.Sprite;
    import flash.net.URLLoader;
    import flash.net.URLRequest;
    import flash.events.HTTPStatusEvent;

    public class HTTPStatusEventExample extends Sprite {

        public function HTTPStatusEventExample() {
            var loader:URLLoader = new URLLoader();
            loader.addEventListener(HTTPStatusEvent.HTTP_STATUS, httpStatusHandler);

            var request:URLRequest = new URLRequest("http://www.[yourDomain].com/MissingFile.html");
            loader.load(request);
        }

        private function httpStatusHandler(event:HTTPStatusEvent):void {
            trace("httpStatusHandler: " + event);
            trace("status: " + event.status);
        }
    }
}
</codeblock></example></apiClassifierDetail><adobeApiEvent id="flash.events:HTTPStatusEvent:HTTP_RESPONSE_STATUS_httpResponseStatus" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">httpResponseStatus</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:HTTPStatusEvent:HTTP_RESPONSE_STATUS</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:HTTPStatusEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.net.xml#URLStream/event:httpResponseStatus" class="- topic/link "><linktext class="- topic/linktext ">flash.net.URLStream.httpResponseStatus</linktext></link><link href="flash.net.xml#FileReference/event:httpResponseStatus" class="- topic/link "><linktext class="- topic/linktext ">flash.net.FileReference.httpResponseStatus</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:HTTPStatusEvent:HTTP_STATUS_httpStatus" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">httpStatus</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:HTTPStatusEvent:HTTP_STATUS</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:HTTPStatusEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#LoaderInfo/event:httpStatus" class="- topic/link "><linktext class="- topic/linktext ">flash.display.LoaderInfo.httpStatus</linktext></link><link href="flash.net.xml#FileReference/event:httpStatus" class="- topic/link "><linktext class="- topic/linktext ">flash.net.FileReference.httpStatus</linktext></link><link href="flash.net.xml#URLLoader/event:httpStatus" class="- topic/link "><linktext class="- topic/linktext ">flash.net.URLLoader.httpStatus</linktext></link><link href="flash.net.xml#URLStream/event:httpStatus" class="- topic/link "><linktext class="- topic/linktext ">flash.net.URLStream.httpStatus</linktext></link></related-links></adobeApiEvent><apiConstructor id="flash.events:HTTPStatusEvent:HTTPStatusEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">HTTPStatusEvent</apiName><shortdesc class="- topic/shortdesc ">
	Crée un objet Event contenant des informations sur les événements HTTPStatus.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">type</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc "> Type de l’événement. Les écouteurs d’événement peuvent accéder à cette information par le biais de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> héritée. Il n’existe qu’un seul type d’événement HTTPStatus : <codeph class="+ topic/ph pr-d/codeph ">HTTPStatusEvent.HTTP_STATUS</codeph>.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">bubbles</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Détermine si l’objet Event prend part à la phase de propagation du flux d’événements. Les écouteurs d’événement peuvent accéder à cette information par le biais de la propriété <codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph> héritée.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">cancelable</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Détermine si l’objet Event peut être annulé. Les écouteurs d’événement peuvent accéder à cette information par le biais de la propriété <codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph> héritée.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">status</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Etat numérique. Les écouteurs d’événement peuvent accéder à cette information par le biais de la propriété <codeph class="+ topic/ph pr-d/codeph ">status</codeph>.
	
	</apiDesc></apiParam><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Constructeur associé aux objets HTTPStatusEvent.
	</apiTipText></apiTipTexts></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Crée un objet Event contenant des informations sur les événements HTTPStatus. Les objets Event sont transmis en tant que paramètres aux écouteurs d’événements.
	
	</apiDesc></apiConstructorDetail><related-links class="- topic/related-links "><link href="flash.events.xml#HTTPStatusEvent/HTTP_STATUS" class="- topic/link "><linktext class="- topic/linktext ">HTTP_STATUS</linktext></link></related-links></apiConstructor><apiOperation id="flash.events:HTTPStatusEvent:clone" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">clone</apiName><shortdesc class="- topic/shortdesc ">
	Crée une copie de l’objet HTTPStatusEvent et définit la valeur de chaque propriété de sorte qu’elle corresponde à la valeur d’origine.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Nouvel objet HTTPStatusEvent dont les propriétés ont la même valeur que celles de l’objet d’origine.
	 
	 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.events:Event</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Crée une copie de l’objet HTTPStatusEvent et définit la valeur de chaque propriété de sorte qu’elle corresponde à la valeur d’origine.
	
	</apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.events:HTTPStatusEvent:toString" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">toString</apiName><shortdesc class="- topic/shortdesc ">
	Renvoie une chaîne répertoriant toutes les propriétés de l’objet HTTPStatusEvent.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Chaîne répertoriant toutes les propriétés de l’objet HTTPStatusEvent.
	 
	 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Renvoie une chaîne répertoriant toutes les propriétés de l’objet HTTPStatusEvent. La chaîne est écrite au format suivant :
	<p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">[HTTPStatusEvent type=<i class="+ topic/ph hi-d/i ">valeur</i> bubbles=<i class="+ topic/ph hi-d/i ">valeur</i> cancelable=<i class="+ topic/ph hi-d/i ">valeur</i> status=<i class="+ topic/ph hi-d/i ">valeur</i>]</codeph></p>
	
	</apiDesc></apiOperationDetail></apiOperation><apiValue id="flash.events:HTTPStatusEvent:HTTP_RESPONSE_STATUS" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">HTTP_RESPONSE_STATUS</apiName><shortdesc class="- topic/shortdesc ">
	Contrairement à l’événement httpStatus, l’événement httpResponseStatus est renvoyé avant toute donnée de réponse.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">httpResponseStatus</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Contrairement à l’événement <codeph class="+ topic/ph pr-d/codeph ">httpStatus</codeph>, l’événement <codeph class="+ topic/ph pr-d/codeph ">httpResponseStatus</codeph> est renvoyé avant toute donnée de réponse. De plus, l’événement <codeph class="+ topic/ph pr-d/codeph ">httpResponseStatus</codeph> inclut des valeurs pour les propriétés <codeph class="+ topic/ph pr-d/codeph ">responseHeaders</codeph> et <codeph class="+ topic/ph pr-d/codeph ">responseURL</codeph> (qui ne sont pas définies pour un événement <codeph class="+ topic/ph pr-d/codeph ">httpStatus</codeph>. Notez que <codeph class="+ topic/ph pr-d/codeph ">httpResponseStatus</codeph> (le cas échéant) est envoyé avant (et en complément de) tout événement <codeph class="+ topic/ph pr-d/codeph ">complete</codeph> ou <codeph class="+ topic/ph pr-d/codeph ">error</codeph>. 
	
	<p class="- topic/p ">La constante <codeph class="+ topic/ph pr-d/codeph ">HTTPStatusEvent.HTTP_RESPONSE_STATUS</codeph> définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet événement <codeph class="+ topic/ph pr-d/codeph ">httpResponseStatus</codeph>. </p>
	
	
	<p class="- topic/p ">Les propriétés de cet événement sont les suivantes :</p>
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">L’objet qui traite activement l’objet Event avec un écouteur d’événements.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">responseURL</codeph></entry><entry class="- topic/entry ">L’URL de laquelle la réponse a été renvoyée.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">responseHeaders</codeph></entry><entry class="- topic/entry ">Les en-têtes de réponse que la réponse a renvoyés, sous la forme d’un tableau d’objets URLRequestHeader.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">status</codeph></entry><entry class="- topic/entry ">Le code d’état HTTP renvoyé par le serveur.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">L’objet réseau recevant un code d’état HTTP. </entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#URLStream/event:httpResponseStatus" class="- topic/link "><linktext class="- topic/linktext ">flash.net.URLStream.httpResponseStatus</linktext></link><link href="flash.net.xml#FileReference/event:httpResponseStatus" class="- topic/link "><linktext class="- topic/linktext ">flash.net.FileReference.httpResponseStatus</linktext></link></related-links></apiValue><apiValue id="flash.events:HTTPStatusEvent:HTTP_STATUS" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">HTTP_STATUS</apiName><shortdesc class="- topic/shortdesc ">
	La constante HTTPStatusEvent.HTTP_STATUS définit la valeur de la propriété type d’un objet événement httpStatus.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">httpStatus</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	La constante <codeph class="+ topic/ph pr-d/codeph ">HTTPStatusEvent.HTTP_STATUS</codeph> définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet événement <codeph class="+ topic/ph pr-d/codeph ">httpStatus</codeph>. 
	
	<p class="- topic/p ">Les propriétés de cet événement sont les suivantes :</p>
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">L’objet qui traite activement l’objet Event avec un écouteur d’événements.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">status</codeph></entry><entry class="- topic/entry ">Le code d’état HTTP renvoyé par le serveur.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">L’objet réseau recevant un code d’état HTTP. </entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#LoaderInfo/event:httpStatus" class="- topic/link "><linktext class="- topic/linktext ">flash.display.LoaderInfo.httpStatus</linktext></link><link href="flash.net.xml#FileReference/event:httpStatus" class="- topic/link "><linktext class="- topic/linktext ">flash.net.FileReference.httpStatus</linktext></link><link href="flash.net.xml#URLLoader/event:httpStatus" class="- topic/link "><linktext class="- topic/linktext ">flash.net.URLLoader.httpStatus</linktext></link><link href="flash.net.xml#URLStream/event:httpStatus" class="- topic/link "><linktext class="- topic/linktext ">flash.net.URLStream.httpStatus</linktext></link></related-links></apiValue><apiValue id="flash.events:HTTPStatusEvent:responseHeaders:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">responseHeaders</apiName><shortdesc class="- topic/shortdesc ">
	 Les en-têtes de réponse que la réponse a renvoyés, sous la forme d’un tableau d’objets URLRequestHeader.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Array</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Les en-têtes de réponse que la réponse a renvoyés, sous la forme d’un tableau d’objets URLRequestHeader.
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#URLRequestHeader" class="- topic/link "><linktext class="- topic/linktext ">flash.net.URLRequestHeader</linktext></link></related-links></apiValue><apiValue id="flash.events:HTTPStatusEvent:responseURL:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">responseURL</apiName><shortdesc class="- topic/shortdesc ">
	 L’URL à partir de laquelle la réponse à été renvoyée.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 L’URL à partir de laquelle la réponse à été renvoyée. En cas de redirections, ceci sera différent de l’URL de requête.
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:HTTPStatusEvent:status:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">status</apiName><shortdesc class="- topic/shortdesc ">
	Le code d’état HTTP renvoyé par le serveur.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">int</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Le code d’état HTTP renvoyé par le serveur. Par exemple, une valeur 404 indique que le serveur n’a pas détecté de correspondance pour l’URL requise. Les codes d’état HTTP sont répertoriés dans les sections 10.4 et 10.5 de la spécification HTTP à l’adresse suivante : <xref href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html" scope="external" class="- topic/xref ">http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html</xref>.
	
	<p class="- topic/p ">Si <ph class="- topic/ph ">Flash Player ou </ph>AIR ne peut pas obtenir un code d’état auprès du serveur, ou s’il ne peut pas communiquer avec le serveur, la valeur 0 est transmise par défaut à votre code . <ph class="- topic/ph ">Une valeur 0 peut être générée dans un lecteur quelconque (par exemple, si une URL mal formée est demandée) et une valeur 0 est toujours générée par le module Flash Player lorsqu’il est exécuté dans les navigateurs suivants, qui ne transmettent pas de codes d’état HTTP au lecteur : Netscape, Mozilla, Safari, Opera et Internet Explorer pour Macintosh.</ph></p>
	
	</apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.events:FileListEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">FileListEvent</apiName><shortdesc class="- topic/shortdesc ">
	 Un objet File distribue un objet FileListEvent lorsqu’un appel à la méthode getDirectoryListingAsync() d’un objet File énumère un ensemble de fichiers et de répertoires ou lorsqu’un utilisateur sélectionne des fichiers après un appel à la méthode browseForOpenMultiple().</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Un objet File distribue un objet FileListEvent après des appels réussis à la méthode getDirectoryListingAsync() ou browseForOpenMultiple().
	 
	 </apiTipText></apiTipTexts><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Un objet File distribue un objet FileListEvent lorsqu’un appel à la méthode <codeph class="+ topic/ph pr-d/codeph ">getDirectoryListingAsync(</codeph>) d’un objet File énumère un ensemble de fichiers et de répertoires ou lorsqu’un utilisateur sélectionne des fichiers après un appel à la méthode <codeph class="+ topic/ph pr-d/codeph ">browseForOpenMultiple()</codeph>. 
	 
	 </apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="../../flash/filesystem/File.html#getDirectoryListingAsync()" class="- topic/link "><linktext class="- topic/linktext ">File.getDirectoryListingAsync()</linktext></link></related-links><adobeApiEvent id="flash.events:FileListEvent:DIRECTORY_LISTING_directoryListing" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">directoryListing</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:FileListEvent:DIRECTORY_LISTING</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:FileListEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flash.events:FileListEvent:SELECT_MULTIPLE_selectMultiple" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">selectMultiple</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:FileListEvent:SELECT_MULTIPLE</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:FileListEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="flash.events:FileListEvent:FileListEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">FileListEvent</apiName><shortdesc class="- topic/shortdesc ">
		Fonction constructeur pour un objet FileListEvent.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">type</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Type d’événement.
		
		</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">bubbles</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Détermine si l’objet événement propage vers le haut (<codeph class="+ topic/ph pr-d/codeph ">false</codeph> pour un objet FileListEvent).
		
		</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">cancelable</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Détermine si l’objet Event peut être annulé (<codeph class="+ topic/ph pr-d/codeph ">false</codeph> pour un objet FileListEvent).
		
		</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">files</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Array</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Tableau d’objets File.
		
		</apiDesc></apiParam></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		Fonction constructeur pour un objet FileListEvent. 
		
		<p class="- topic/p ">Le moteur d’exécution utilise cette classe pour créer des objets FileListEvent. Vous n’utilisez pas ce constructeur directement dans votre code.</p>
		
		</apiDesc></apiConstructorDetail></apiConstructor><apiValue id="flash.events:FileListEvent:DIRECTORY_LISTING" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">DIRECTORY_LISTING</apiName><shortdesc class="- topic/shortdesc ">
		 La constante FileListEvent.DIRECTORY_LISTING définit la valeur de la propriété type de l’objet événement pour un événement directoryListing.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">directoryListing</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 La constante <codeph class="+ topic/ph pr-d/codeph ">FileListEvent.DIRECTORY_LISTING</codeph> définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> de l’objet événement pour un événement <codeph class="+ topic/ph pr-d/codeph ">directoryListing</codeph>.
		 
		 <p class="- topic/p ">Les propriétés de cet événement sont les suivantes :</p>
		 
		 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">files</codeph></entry><entry class="- topic/entry ">Un tableau d’objets File représentant les fichiers et les répertoires trouvés.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">L’objet FileListEvent.</entry></row></tbody></tgroup></adobetable>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:FileListEvent:SELECT_MULTIPLE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">SELECT_MULTIPLE</apiName><shortdesc class="- topic/shortdesc ">
		 La constante FileListEvent.SELECT_MULTIPLE définit la valeur de la propriété type de l’objet événement pour un événement selectMultiple.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">selectMultiple</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 La constante <codeph class="+ topic/ph pr-d/codeph ">FileListEvent.SELECT_MULTIPLE</codeph> définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> de l’objet événement pour un événement <codeph class="+ topic/ph pr-d/codeph ">selectMultiple</codeph>.
		 
		 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">files</codeph></entry><entry class="- topic/entry ">Un tableau d’objets File représentant les fichiers sélectionnés.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">L’objet FileListEvent.</entry></row></tbody></tgroup></adobetable>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:FileListEvent:files" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">files</apiName><shortdesc class="- topic/shortdesc ">
		 Un tableau d’objets File représentant les fichiers et les répertoires trouvés ou sélectionnés.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Array</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 Un tableau d’objets File représentant les fichiers et les répertoires trouvés ou sélectionnés. 
		 
		 <p class="- topic/p ">Pour la méthode <codeph class="+ topic/ph pr-d/codeph ">File.getDirectoryListingAsync()</codeph>, il s’agit de la liste des fichiers et des répertoires trouvés au niveau de la racine du répertoire représenté par l’objet File ayant appelé la méthode. Pour la méthode <codeph class="+ topic/ph pr-d/codeph ">File.browseForOpenMultiple()</codeph>, il s’agit de la liste des fichiers sélectionnés par l’utilisateur.</p>
		 
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.events:NativeWindowBoundsEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">NativeWindowBoundsEvent</apiName><shortdesc class="- topic/shortdesc ">
 Un objet NativeWindow déclenche un objet NativeWindowBoundsEvent lorsque la taille ou l’emplacement de la fenêtre change.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Objets Event pour les événements NativeWindow qui changent la taille et/ou l’emplacement de la fenêtre.
 </apiTipText></apiTipTexts><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Un objet NativeWindow déclenche un objet NativeWindowBoundsEvent lorsque la taille ou l’emplacement de la fenêtre change. 
 
 <p class="- topic/p ">Il existe quatre types d’événement : </p>
 <ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">NativeWindowBoundsEvent.MOVING</codeph></li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">NativeWindowBoundsEvent.MOVE</codeph></li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">NativeWindowBoundsEvent.RESIZING</codeph></li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">NativeWindowBoundsEvent.RESIZE</codeph></li></ul>
 
 </apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.events.xml#NativeWindowBoundsEvent/MOVING" class="- topic/link "><linktext class="- topic/linktext ">flash.events.NativeWindowBoundsEvent.MOVING</linktext></link><link href="flash.events.xml#NativeWindowBoundsEvent/MOVE" class="- topic/link "><linktext class="- topic/linktext ">flash.events.NativeWindowBoundsEvent.MOVE</linktext></link><link href="flash.events.xml#NativeWindowBoundsEvent/RESIZING" class="- topic/link "><linktext class="- topic/linktext ">flash.events.NativeWindowBoundsEvent.RESIZING</linktext></link><link href="flash.events.xml#NativeWindowBoundsEvent/RESIZE" class="- topic/link "><linktext class="- topic/linktext ">flash.events.NativeWindowBoundsEvent.RESIZE</linktext></link></related-links><adobeApiEvent id="flash.events:NativeWindowBoundsEvent:MOVE_move" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">move</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:NativeWindowBoundsEvent:MOVE</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:NativeWindowBoundsEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Distribué par un objet NativeWindow après son déplacement.
    
    </apiTipText></apiTipTexts></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#NativeWindow" class="- topic/link "><linktext class="- topic/linktext ">flash.display.NativeWindow</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:NativeWindowBoundsEvent:MOVING_moving" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">moving</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:NativeWindowBoundsEvent:MOVING</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:NativeWindowBoundsEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Distribué par un objet NativeWindow avant son déplacement.
    
    </apiTipText></apiTipTexts></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#NativeWindow" class="- topic/link "><linktext class="- topic/linktext ">flash.display.NativeWindow</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:NativeWindowBoundsEvent:RESIZE_resize" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">resize</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:NativeWindowBoundsEvent:RESIZE</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:NativeWindowBoundsEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Distribué par un objet NativeWindow après son redimensionnement.
    
    </apiTipText></apiTipTexts></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#NativeWindow" class="- topic/link "><linktext class="- topic/linktext ">flash.display.NativeWindow</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:NativeWindowBoundsEvent:RESIZING_resizing" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">resizing</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:NativeWindowBoundsEvent:RESIZING</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:NativeWindowBoundsEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Distribué par un objet NativeWindow avant son redimensionnement.
    
    </apiTipText></apiTipTexts></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#NativeWindow" class="- topic/link "><linktext class="- topic/linktext ">flash.display.NativeWindow</linktext></link></related-links></adobeApiEvent><apiConstructor id="flash.events:NativeWindowBoundsEvent:NativeWindowBoundsEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">NativeWindowBoundsEvent</apiName><shortdesc class="- topic/shortdesc ">
    Crée un objet Event à l’aide d’informations spécifiques relatives aux événements window bounds.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">type</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc "> Type de l’événement. Valeurs possibles :
    <ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">NativeWindowBoundsEvent.MOVING</codeph></li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">NativeWindowBoundsEvent.MOVE</codeph></li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">NativeWindowBoundsEvent.RESIZING</codeph></li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">NativeWindowBoundsEvent.RESIZE</codeph></li></ul>
    
    </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">bubbles</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc "> Indique si l’objet Event prend part à la phase de propagation vers le haut (bubbling) du flux d’événements.
    </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">cancelable</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Indique si l’objet Event peut être annulé.
    </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">beforeBounds</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.geom:Rectangle</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Indique les limites avant le changement le plus récent ou le changement en attente.
    </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">afterBounds</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.geom:Rectangle</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Indique les limites après le changement le plus récent ou le changement en attente. 
    
    </apiDesc></apiParam></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Crée un objet Event à l’aide d’informations spécifiques relatives aux événements window bounds. Les objets Event sont transmis en tant que paramètres aux écouteurs d’événements.
    
    </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="flash.events:NativeWindowBoundsEvent:clone" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">clone</apiName><shortdesc class="- topic/shortdesc ">
    Crée une copie de l’objet NativeWindowBoundsEvent et définit la valeur de chaque propriété de sorte qu’elle corresponde à la valeur d’origine.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Nouvel objet NativeWindowBoundsEvent dont les propriétés ont la même valeur que celles de l’objet d’origine.
    </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.events:Event</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Crée une copie de l’objet NativeWindowBoundsEvent et définit la valeur de chaque propriété de sorte qu’elle corresponde à la valeur d’origine.
    
    </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.events:NativeWindowBoundsEvent:toString" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">toString</apiName><shortdesc class="- topic/shortdesc ">
    Renvoie une chaîne répertoriant toutes les propriétés de l’objet NativeWindowBoundsEvent.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Chaîne répertoriant toutes les propriétés de l’objet NativeWindowBoundsEvent.
    </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Renvoie une chaîne répertoriant toutes les propriétés de l’objet NativeWindowBoundsEvent. La chaîne présente le format suivant :
    <p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">[NativeWindowBoundsEvent type=<i class="+ topic/ph hi-d/i ">valeur</i> bubbles=<i class="+ topic/ph hi-d/i ">valeur</i> cancelable=<i class="+ topic/ph hi-d/i ">valeur</i> previousDisplayState=<i class="+ topic/ph hi-d/i ">valeur</i> currentDisplayState=<i class="+ topic/ph hi-d/i ">valeur</i>]</codeph></p>
    
    </apiDesc></apiOperationDetail></apiOperation><apiValue id="flash.events:NativeWindowBoundsEvent:MOVE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">MOVE</apiName><shortdesc class="- topic/shortdesc ">
    Définit la valeur de la propriété type d’un objet d’événement move.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">move</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Distribué par un objet NativeWindow après son déplacement.
    
    </apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet d’événement <codeph class="+ topic/ph pr-d/codeph ">move</codeph>. 
    
    <p class="- topic/p ">Les propriétés de cet événement sont les suivantes :</p>
    <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriétés</entry><entry class="- topic/entry ">Valeurs</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">afterBounds</codeph></entry><entry class="- topic/entry ">Nouvelles limites de la fenêtre.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">beforeBounds</codeph></entry><entry class="- topic/entry ">Anciennes limites de la fenêtre.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Objet NativeWindow qui vient de changer d’état. 
    </entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry ">N°</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Indique l’objet qui traite activement l’objet Event avec un écouteur d’événements.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; Il n’existe aucun comportement par défaut à annuler.</entry></row></tbody></tgroup></adobetable>
    
    </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#NativeWindow" class="- topic/link "><linktext class="- topic/linktext ">flash.display.NativeWindow</linktext></link></related-links></apiValue><apiValue id="flash.events:NativeWindowBoundsEvent:MOVING" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">MOVING</apiName><shortdesc class="- topic/shortdesc ">
    Définit la valeur de la propriété type d’un objet d’événement moving.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">moving</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Distribué par un objet NativeWindow avant son déplacement.
    
    </apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet d’événement <codeph class="+ topic/ph pr-d/codeph ">moving</codeph>. 
    
    <p class="- topic/p ">Les propriétés de cet événement sont les suivantes :</p>
    <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriétés</entry><entry class="- topic/entry ">Valeurs</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">afterBounds</codeph></entry><entry class="- topic/entry ">Limites de la fenêtre après le changement en attente.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">beforeBounds</codeph></entry><entry class="- topic/entry ">Limites de la fenêtre avant le changement en attente.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry ">N°</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> ; l’annulation de l’événement empêche le déplacement de la fenêtre.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Indique l’objet qui traite activement l’objet Event avec un écouteur d’événements.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Objet NativeWindow qui vient de changer d’état.</entry></row></tbody></tgroup></adobetable>
    
    <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Remarque :</b> sous Linux, la méthode <codeph class="+ topic/ph pr-d/codeph ">preventDefault()</codeph> n’est pas prise en charge pour cet événement.</p> 
    
    </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#NativeWindow" class="- topic/link "><linktext class="- topic/linktext ">flash.display.NativeWindow</linktext></link></related-links></apiValue><apiValue id="flash.events:NativeWindowBoundsEvent:RESIZE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">RESIZE</apiName><shortdesc class="- topic/shortdesc ">
    Définit la valeur de la propriété type d’un objet d’événement resize.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">resize</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Distribué par un objet NativeWindow après son redimensionnement.
    
    </apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet d’événement <codeph class="+ topic/ph pr-d/codeph ">resize</codeph>. 
    
    <p class="- topic/p ">Les propriétés de cet événement sont les suivantes :</p>
    <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriétés</entry><entry class="- topic/entry ">Valeurs</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">afterBounds</codeph></entry><entry class="- topic/entry ">Nouvelles limites de la fenêtre.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">beforeBounds</codeph></entry><entry class="- topic/entry ">Anciennes limites de la fenêtre.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Objet NativeWindow qui vient de changer d’état. 
    </entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry ">N°</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Indique l’objet qui traite activement l’objet Event avec un écouteur d’événements.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; Il n’existe aucun comportement par défaut à annuler.</entry></row></tbody></tgroup></adobetable>
    
    </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#NativeWindow" class="- topic/link "><linktext class="- topic/linktext ">flash.display.NativeWindow</linktext></link></related-links></apiValue><apiValue id="flash.events:NativeWindowBoundsEvent:RESIZING" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">RESIZING</apiName><shortdesc class="- topic/shortdesc ">
    Définit la valeur de la propriété type d’un objet d’événement resizing.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">resizing</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Distribué par un objet NativeWindow avant son redimensionnement.
    
    </apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet d’événement <codeph class="+ topic/ph pr-d/codeph ">resizing</codeph>. 
    
    <p class="- topic/p ">Les propriétés de cet événement sont les suivantes :</p>
    <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriétés</entry><entry class="- topic/entry ">Valeurs</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">afterBounds</codeph></entry><entry class="- topic/entry ">Limites de la fenêtre après le changement en attente.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">beforeBounds</codeph></entry><entry class="- topic/entry ">Limites de la fenêtre avant le changement en attente.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Objet NativeWindow qui vient de changer d’état. 
    </entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry ">N°</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Indique l’objet qui traite activement l’objet Event avec un écouteur d’événements.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> ; l’annulation de l’événement empêche le déplacement de la fenêtre.</entry></row></tbody></tgroup></adobetable>
    
    <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Remarque :</b> sous Linux, la méthode <codeph class="+ topic/ph pr-d/codeph ">preventDefault()</codeph> n’est pas prise en charge pour cet événement.</p> 
    
    </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#NativeWindow" class="- topic/link "><linktext class="- topic/linktext ">flash.display.NativeWindow</linktext></link></related-links></apiValue><apiValue id="flash.events:NativeWindowBoundsEvent:afterBounds:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">afterBounds</apiName><shortdesc class="- topic/shortdesc ">
     Limites de la fenêtre après le changement.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.geom:Rectangle</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Limites de la fenêtre après le changement.
       
     <p class="- topic/p ">Si l’événement est <codeph class="+ topic/ph pr-d/codeph ">moving</codeph> ou <codeph class="+ topic/ph pr-d/codeph ">resizing</codeph>, les limites n’ont pas encore changé ; <codeph class="+ topic/ph pr-d/codeph ">afterBounds</codeph> indique les nouvelles limites si l’événement n’est pas annulé. Si l’événement est <codeph class="+ topic/ph pr-d/codeph ">move</codeph> ou <codeph class="+ topic/ph pr-d/codeph ">resize</codeph>, <codeph class="+ topic/ph pr-d/codeph ">afterBounds</codeph> indique les nouvelles limites.
     </p>
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:NativeWindowBoundsEvent:beforeBounds:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">beforeBounds</apiName><shortdesc class="- topic/shortdesc ">
     Limites de la fenêtre avant le changement.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.geom:Rectangle</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Limites de la fenêtre avant le changement.  
     
     <p class="- topic/p ">Si l’événement est <codeph class="+ topic/ph pr-d/codeph ">moving</codeph> ou <codeph class="+ topic/ph pr-d/codeph ">resizing</codeph>, les limites n’ont pas encore changé ; <codeph class="+ topic/ph pr-d/codeph ">beforeBounds</codeph> reflète les limites actuelles. Si l’événement est <codeph class="+ topic/ph pr-d/codeph ">move</codeph> ou <codeph class="+ topic/ph pr-d/codeph ">resize</codeph>, <codeph class="+ topic/ph pr-d/codeph ">beforeBounds</codeph> indique la valeur d’origine.
     </p>
     </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.events:SQLUpdateEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">SQLUpdateEvent</apiName><shortdesc class="- topic/shortdesc ">
 Un objet SQLUpdateEvent est distribué par un objet SQLConnection lorsqu’un changement de données se produit sur un tableau associé à l’occurrence SQLConnection.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Un objet SQLUpdateEvent est distribué par un objet SQLConnection lorsqu’un changement de données se produit sur un tableau associé à l’occurrence SQLConnection. Un changement de données peut résulter de l’exécution d’une instruction SQL <codeph class="+ topic/ph pr-d/codeph ">INSERT</codeph>, <codeph class="+ topic/ph pr-d/codeph ">UPDATE</codeph> ou <codeph class="+ topic/ph pr-d/codeph ">DELETE</codeph>, soit directement soit comme conséquence d’un déclencheur qui agit en connexion avec l’exécution de l’instruction.
 
 </apiDesc><example conref="examples\SQLUpdateEvent.class.1.as" class="- topic/example "> L’exemple suivant explique l’utilisation d’une occurrence de SQLUpdateEvent en réponse à un événement <codeph class="+ topic/ph pr-d/codeph ">update</codeph>.
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">

var dbStatement:SQLStatement;

function initConnection():void
{
    var dbFile:File = new File(File.separator + "employee.db");
    db.addEventListener(SQLEvent.OPEN, dbOpenHandler);
    db.addEventListener(SQLUpdateEvent.UPDATE, dbUpdateHandler);

    dbStatement.text = "UPDATE employees SET name = :name WHERE id = :id";
    dbStatement.parameters[:name] = "Bruce";
    dbStatement.parameters[:id] = 100;

    dbStatement.sqlConnection = db;

    db.open(dbFile);
}

function dbUpdateHandler(event:SQLUpdateEvent):void
{
    trace(event.type + " for table '" + event.table + "' was fired for row with ID:" + event.rowID);
}

function dbOpenHandler(event:SQLEvent):void
{
    dbStatement.execute();
}
</codeblock></example></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.data.xml#SQLConnection" class="- topic/link "><linktext class="- topic/linktext ">flash.data.SQLConnection</linktext></link></related-links><adobeApiEvent id="flash.events:SQLUpdateEvent:DELETE_delete" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">delete</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:SQLUpdateEvent:DELETE</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:SQLUpdateEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flash.events:SQLUpdateEvent:INSERT_insert" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">insert</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:SQLUpdateEvent:INSERT</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:SQLUpdateEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flash.events:SQLUpdateEvent:UPDATE_update" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">update</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:SQLUpdateEvent:UPDATE</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:SQLUpdateEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="flash.events:SQLUpdateEvent:SQLUpdateEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">SQLUpdateEvent</apiName><shortdesc class="- topic/shortdesc ">
     Crée une occurrence de SQLUpdateEvent.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">type</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc "> Le type d’événement, accessible via la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph>.
     
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">bubbles</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc "> Détermine si l’objet d’événement prend part à la phase de propagation du flux d’événements. La valeur par défaut est <codeph class="+ topic/ph pr-d/codeph ">false</codeph>.
     
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">cancelable</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Détermine si l’objet Event peut être annulé. La valeur par défaut est <codeph class="+ topic/ph pr-d/codeph ">false</codeph>.
	 
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">table</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Indique le nom du tableau dont les données ont changé.
	 
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">rowID</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">L’identifiant unique de la ligne insérée, supprimée ou mise à jour.
     
     </apiDesc></apiParam><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Utilisé pour créer un objet SQLUpdateEvent.
     
     </apiTipText></apiTipTexts></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Crée une occurrence de SQLUpdateEvent.
     
     </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="flash.events:SQLUpdateEvent:clone" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">clone</apiName><shortdesc class="- topic/shortdesc ">
     Crée une copie de l’objet SQLUpdateEvent et définit la valeur de chaque propriété de sorte qu’elle corresponde à la valeur d’origine.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Nouvel objet SQLUpdateEvent dont les propriétés ont la même valeur que celles de l’objet d’origine.
     
     </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.events:Event</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Crée une copie de l’objet SQLUpdateEvent et définit la valeur de chaque propriété de sorte qu’elle corresponde à la valeur d’origine.
     
     </apiDesc></apiOperationDetail></apiOperation><apiValue id="flash.events:SQLUpdateEvent:DELETE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">DELETE</apiName><shortdesc class="- topic/shortdesc ">
     La constante SQLUpdateEvent.DELETE définit la valeur de la propriété type d’un événement delete SQLConnection.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">delete</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     La constante <codeph class="+ topic/ph pr-d/codeph ">SQLUpdateEvent.DELETE</codeph> définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un événement <codeph class="+ topic/ph pr-d/codeph ">delete</codeph> SQLConnection. L’événement <codeph class="+ topic/ph pr-d/codeph ">delete</codeph> a les propriétés suivantes :
     
     <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Objet qui traite activement l’objet de l’événement avec un écouteur d’événement.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">rowID</codeph></entry><entry class="- topic/entry ">L’identifiant unique de la ligne insérée, supprimée ou mise à jour.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">L’objet SQLConnection sur lequel l’opération a été effectuée.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">table</codeph></entry><entry class="- topic/entry ">Le nom du tableau sur lequel le changement a eu lieu.</entry></row></tbody></tgroup></adobetable>
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:SQLUpdateEvent:INSERT" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">INSERT</apiName><shortdesc class="- topic/shortdesc ">
     La constante SQLUpdateEvent.INSERT définit la valeur de la propriété type d’un événement insert SQLConnection.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">insert</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     La constante <codeph class="+ topic/ph pr-d/codeph ">SQLUpdateEvent.INSERT</codeph> définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un événement <codeph class="+ topic/ph pr-d/codeph ">insert</codeph> SQLConnection. L’événement <codeph class="+ topic/ph pr-d/codeph ">insert</codeph> a les propriétés suivantes :
     
     <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Objet qui traite activement l’objet de l’événement avec un écouteur d’événement.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">rowID</codeph></entry><entry class="- topic/entry ">L’identifiant unique de la ligne insérée, supprimée ou mise à jour.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">L’objet SQLConnection sur lequel l’opération a été effectuée.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">table</codeph></entry><entry class="- topic/entry ">Le nom du tableau sur lequel le changement a eu lieu.</entry></row></tbody></tgroup></adobetable>
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:SQLUpdateEvent:UPDATE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">UPDATE</apiName><shortdesc class="- topic/shortdesc ">
	 La constante SQLUpdateEvent.UPDATE définit la valeur de la propriété type d’un événement update SQLConnection.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">update</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 La constante <codeph class="+ topic/ph pr-d/codeph ">SQLUpdateEvent.UPDATE</codeph> définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un événement <codeph class="+ topic/ph pr-d/codeph ">update</codeph> SQLConnection.
	 
	 <p class="- topic/p ">L’événement <codeph class="+ topic/ph pr-d/codeph ">update</codeph> a les propriétés suivantes :</p>
     
     <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Objet qui traite activement l’objet de l’événement avec un écouteur d’événement.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">rowID</codeph></entry><entry class="- topic/entry ">L’identifiant unique de la ligne insérée, supprimée ou mise à jour.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">L’objet SQLConnection sur lequel l’opération a été effectuée.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">table</codeph></entry><entry class="- topic/entry ">Le nom du tableau sur lequel le changement a eu lieu.</entry></row></tbody></tgroup></adobetable>
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:SQLUpdateEvent:rowID:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">rowID</apiName><shortdesc class="- topic/shortdesc ">
     L’identifiant unique de la ligne insérée, supprimée ou mise à jour.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     L’identifiant unique de la ligne insérée, supprimée ou mise à jour.
	 
	 <p class="- topic/p ">Un identifiant de ligne est utilisé pour identifier une ligne de façon unique dans un tableau au sein d’une base de données. La valeur est générée fréquemment par la base de données.</p>
	 
	 <p class="- topic/p ">L’identifiant de ligne pour une seule exécution de l’instruction SQL <codeph class="+ topic/ph pr-d/codeph ">INSERT</codeph> peut être obtenu via la propriété <codeph class="+ topic/ph pr-d/codeph ">lastInsertRowID</codeph> de l’objet SQLResult renvoyé par la méthode <codeph class="+ topic/ph pr-d/codeph ">getResult()</codeph> de l’objet SQLStatement (lorsqu’il est appelé une fois que SQLStatement distribue son événement <codeph class="+ topic/ph pr-d/codeph ">result</codeph>).</p>
	 
	 <p class="- topic/p ">Pour plus d’informations concernant les clés primaires et les identifiants de ligne générés, voir les sections « <xref href="http://www.adobe.com/go/learn_as3_sqlsupportdb_data_fr" scope="external" class="- topic/xref ">CREATE TABLE</xref> » et « <xref href="http://www.adobe.com/go/learn_as3_sqlsupportdb_statements_fr" scope="external" class="- topic/xref ">Expressions</xref> » dans l’annexe « <xref href="http://www.adobe.com/go/learn_as3_sqlsupportdb_fr" scope="external" class="- topic/xref ">Prise en charge de SQL dans les bases de données locales</xref> ».</p>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.data.xml#SQLConnection/lastInsertRowID" class="- topic/link "><linktext class="- topic/linktext ">flash.data.SQLConnection.lastInsertRowID</linktext></link><link href="flash.data.xml#SQLResult/lastInsertRowID" class="- topic/link "><linktext class="- topic/linktext ">flash.data.SQLResult.lastInsertRowID</linktext></link></related-links></apiValue><apiValue id="flash.events:SQLUpdateEvent:table:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">table</apiName><shortdesc class="- topic/shortdesc ">
     Le nom du tableau dont le changement de données a provoqué la distribution de l’événement.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Le nom du tableau dont le changement de données a provoqué la distribution de l’événement.
     
     </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.events:EventDispatcher" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">EventDispatcher</apiName><shortdesc class="- topic/shortdesc ">
La classe EventDispatcher est la classe de base pour toutes les classes runtime qui distribuent des événements.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiBaseInterface>flash.events:IEventDispatcher</apiBaseInterface><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
La classe EventDispatcher est la classe de base pour toutes les classes qui distribuent des événements. <ph class="- topic/ph ">La classe EventDispatcher implémente l’interface IEventDispatcher et est la classe de base de la classe DisplayObject. La classe EventDispatcher permet à tout objet de la liste d’affichage de servir de cible d’événement et, en tant que tel, d’utiliser les méthodes de l’interface IeventDispatcher.</ph>

<p class="- topic/p ">Les cibles d’événement constituent une part importante du modèle d’événement de Flash<sup class="+ topic/ph hi-d/sup ">®</sup> Player et d’Adobe<sup class="+ topic/ph hi-d/sup ">®</sup> AIR<sup class="+ topic/ph hi-d/sup ">®</sup>. La cible de l’événement détermine le flux d’événements dans la hiérarchie de la liste d’affichage. Lorsqu’un événement, tel qu’un clic de souris ou une pression sur une touche, se produit, Flash Player ou l’application AIR distribue un objet événement dans le flux d’événements, à partir de la racine de la liste d’affichage. Cet objet descend dans la liste jusqu’à ce qu’il atteigne la cible de l’événement et commence alors à remonter la liste d’affichage. Cet aller-retour jusqu’à la cible de l’événement est divisé de manière conceptuelle en trois phases : la phase de capture correspond au trajet de la racine jusqu’au dernier nœud précédant le nœud de la cible de l’événement, la phase cible concerne uniquement le nœud de la cible de l’événement, tandis que la phase de propagation vers le haut (bubbling) comprend tous les nœuds rencontrés sur le trajet de retour à la racine de la liste d’affichage.</p>

<p class="- topic/p ">En règle générale, pour qu’une classe définie par l’utilisateur acquière des fonctions de distribution, le plus simple consiste à étendre EventDispatcher. Si cela est impossible (autrement dit, si cette classe étend déjà une autre classe), vous pouvez implémenter l’interface IEventDispatcher, créer un membre EventDispatcher et écrire des raccrochements simples pour acheminer les appels vers la classe EventDispatcher regroupée.</p>



</apiDesc><example conref="examples\EventDispatcherExample.as" class="- topic/example "> L’exemple suivant utilise les classes <codeph class="+ topic/ph pr-d/codeph ">EventDispatcherExample</codeph> et <codeph class="+ topic/ph pr-d/codeph ">CustomDispatcher</codeph>, une sous-classe de <codeph class="+ topic/ph pr-d/codeph ">EventDispatcher</codeph>, pour décrire la création et la distribution d’un événement personnalisé. L’exemple exécute les tâches suivantes :
 <ol class="- topic/ol "><li class="- topic/li ">Le constructeur de <codeph class="+ topic/ph pr-d/codeph ">EventDispatcherExample</codeph> crée une variable locale <codeph class="+ topic/ph pr-d/codeph ">dispatcher</codeph> et l’affecte à une nouvelle occurrence de CustomDispatcher.</li><li class="- topic/li ">A l’intérieur de <codeph class="+ topic/ph pr-d/codeph ">CustomDispatcher</codeph>, une chaîne est définie de sorte que l’événement présente le nom <codeph class="+ topic/ph pr-d/codeph ">action</codeph> et la méthode <codeph class="+ topic/ph pr-d/codeph ">doAction()</codeph> est déclarée. Lorsqu’elle est appelée, cette méthode crée l’événement <codeph class="+ topic/ph pr-d/codeph ">action</codeph> et le distribue à l’aide de <codeph class="+ topic/ph pr-d/codeph ">EventDispatcher.dispatchEvent()</codeph>.</li><li class="- topic/li ">La propriété <codeph class="+ topic/ph pr-d/codeph ">dispatcher</codeph> est alors utilisée pour ajouter l’écouteur d’événements <codeph class="+ topic/ph pr-d/codeph ">action</codeph> et la méthode d’abonné associée <codeph class="+ topic/ph pr-d/codeph ">actionHandler()</codeph>, qui imprime simplement les informations relatives à l’événement lorsque qu’il est distribué.</li><li class="- topic/li ">La méthode <codeph class="+ topic/ph pr-d/codeph ">doAction()</codeph> est invoquée et distribue l’événement <codeph class="+ topic/ph pr-d/codeph ">action</codeph>.</li></ol>
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
package {
    import flash.display.Sprite;
    import flash.events.Event;

    public class EventDispatcherExample extends Sprite {

        public function EventDispatcherExample() {
            var dispatcher:CustomDispatcher = new CustomDispatcher();
            dispatcher.addEventListener(CustomDispatcher.ACTION, actionHandler);
            dispatcher.doAction();
        }

        private function actionHandler(event:Event):void {
            trace("actionHandler: " + event);
        }
    }
}

import flash.events.EventDispatcher;
import flash.events.Event;

class CustomDispatcher extends EventDispatcher {
    public static var ACTION:String = "action";

    public function doAction():void {
        dispatchEvent(new Event(CustomDispatcher.ACTION));
    }
}
</codeblock></example></apiClassifierDetail><adobeApiEvent id="flash.events:EventDispatcher_flash.events.Event.DEACTIVATE_deactivate" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">deactivate</apiName><shortdesc class="- topic/shortdesc ">
 [Evénement de diffusion] Distribué lorsque l’application Flash Player ou AIR perd le focus du système d’exploitation et devient inactive.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.Event.DEACTIVATE</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.Event</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 [Evénement de diffusion] Distribué lorsque l’application <ph class="- topic/ph ">Flash Player ou </ph>AIR perd le focus du système d’exploitation et devient inactive. Cet événement est un événement de diffusion, c’est-à-dire qu’il est distribué par tous les objets EventDispatcher pour lesquels un écouteur est enregistré pour cet événement. <ph class="- topic/ph ">Pour plus d’informations sur les événements de diffusion, voir la classe DisplayObject.</ph>
 
 </apiDesc></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#DisplayObject" class="- topic/link "><linktext class="- topic/linktext ">flash.display.DisplayObject</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:EventDispatcher_flash.events.Event.ACTIVATE_activate" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">activate</apiName><shortdesc class="- topic/shortdesc ">
 [Evénement de diffusion] Distribué lorsque l’application Flash Player obtient le focus du système d’exploitation et devient active.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.Event.ACTIVATE</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.Event</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 [Evénement de diffusion] Distribué lorsque l’application <ph class="- topic/ph ">Flash Player ou </ph>AIR obtient le focus du système d’exploitation et devient active. Cet événement est un événement de diffusion, c’est-à-dire qu’il est distribué par tous les objets EventDispatcher pour lesquels un écouteur est enregistré pour cet événement. <ph class="- topic/ph ">Pour plus d’informations sur les événements de diffusion, voir la classe DisplayObject.</ph>
 
 </apiDesc></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#DisplayObject" class="- topic/link "><linktext class="- topic/linktext ">flash.display.DisplayObject</linktext></link></related-links></adobeApiEvent><apiConstructor id="flash.events:EventDispatcher:EventDispatcher" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">EventDispatcher</apiName><shortdesc class="- topic/shortdesc ">
	Regroupe une occurrence de la classe EventDispatcher.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">target</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.events:IEventDispatcher</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Objet cible des événements distribués à l’objet EventDispatcher. <ph class="- topic/ph ">Ce paramètre s’utilise lorsque l’occurrence de EventDispatcher est regroupée par une classe qui implémente IEventDispatcher. Il permet à l’objet conteneur d’être la cible des événements. Ne vous servez pas de ce paramètre dans des cas simples pour lesquels une classe étend EventDispatcher.</ph>
    
	
	</apiDesc></apiParam></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Regroupe une occurrence de la classe EventDispatcher.
	
    <p class="- topic/p ">La classe EventDispatcher est généralement utilisée comme classe de base, ce qui signifie que <ph class="- topic/ph ">la plupart</ph> des développeurs n’ont pas besoin d’utiliser cette fonction constructeur. <ph class="- topic/ph ">Toutefois, les développeurs expérimentés qui implémentent l’interface IEventDispatcher doivent l’utiliser. S’il vous est impossible d’étendre la classe EventDispatcher et que vous devez implémenter l’interface IEventDispatcher à la place, utilisez cette fonction constructeur pour regrouper une occurrence de la classe EventDispatcher.</ph></p>
	
	</apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="flash.events:EventDispatcher:addEventListener" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">addEventListener</apiName><shortdesc class="- topic/shortdesc ">
	Enregistre un objet écouteur d’événement auprès d’un objet EventDispatcher afin que l’écouteur soit averti d’un événement.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Le paramètre <codeph class="+ topic/ph pr-d/codeph ">listener</codeph> spécifié n’est pas une fonction.
	</apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">type</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Type d’événement.
	
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">listener</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Function</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Fonction d’auditeur qui traite l’événement. Cette fonction doit accepter un objet Event comme paramètre unique et ne rien renvoyer<ph class="- topic/ph ">, comme illustré ci-dessous :</ph>
	
	
    <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">function(evt:Event):void</codeblock>
	
	<p class="- topic/p ">Le nom de cette fonction n’a aucune importance.</p>
	
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">useCapture</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	
	<ph class="- topic/ph ">Détermine si l’écouteur est actif pendant la phase de capture ou pendant les phases cible et de propagation. Si la propriété <codeph class="+ topic/ph pr-d/codeph ">useCapture</codeph> est définie sur <codeph class="+ topic/ph pr-d/codeph ">true</codeph>, l’écouteur traite l’événement uniquement pendant la phase de capture et non pendant les phases cible et de propagation. Si la propriété <codeph class="+ topic/ph pr-d/codeph ">useCapture</codeph> est définie sur <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, l’écouteur traite l’événement uniquement pendant les phases cible et de propagation. Pour écouter l’événement dans les trois phases, appelez <codeph class="+ topic/ph pr-d/codeph ">addEventListener</codeph> à deux reprises, une première fois en définissant <codeph class="+ topic/ph pr-d/codeph ">useCapture</codeph> sur <codeph class="+ topic/ph pr-d/codeph ">true</codeph>, puis une nouvelle fois en définissant <codeph class="+ topic/ph pr-d/codeph ">useCapture</codeph> sur <codeph class="+ topic/ph pr-d/codeph ">false</codeph>. </ph>
	
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">priority</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Niveau de priorité de l’écouteur d’événement. La priorité est indiquée par un entier signé de 32 bits. Plus le nombre est élevé, plus la priorité est élevée. Tous les écouteurs dont la priorité correspond à <i class="+ topic/ph hi-d/i ">n</i> sont traités avant les écouteurs dotés de la priorité <i class="+ topic/ph hi-d/i ">n</i> -1. Les écouteurs dont la priorité est identique sont traités dans l’ordre où ils ont été ajoutés. La priorité par défaut est 0.
	
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">useWeakReference</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Détermine si la référence à l’écouteur est forte ou faible. Une référence forte (valeur par défaut) empêche le nettoyage de votre écouteur, Cela n’est pas le cas avec une référence faible. <p class="- topic/p ">Les fonctions de membres de niveau classe n’étant pas soumises au nettoyage, vous pouvez définir <codeph class="+ topic/ph pr-d/codeph ">useWeakReference</codeph> sur <codeph class="+ topic/ph pr-d/codeph ">true</codeph> pour ces fonctions. Si vous définissez <codeph class="+ topic/ph pr-d/codeph ">useWeakReference</codeph> sur <codeph class="+ topic/ph pr-d/codeph ">true</codeph> pour un écouteur correspondant à une fonction imbriquée interne, la fonction sera nettoyée et ne sera donc pas permanente. Si vous créez des références à la fonction interne (enregistrée dans une autre variable), celle-ci n’est pas nettoyée et reste permanente.</p>
	
	</apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Enregistre un objet écouteur d’événement auprès d’un objet EventDispatcher afin que l’écouteur soit averti d’un événement. <ph class="- topic/ph ">Vous pouvez enregistrer les écouteurs d’événement dans tous les nœuds de la liste d’affichage pour un type spécifique d’événement, de phase et de priorité.</ph>
	
	
	
	<p class="- topic/p ">Après l’enregistrement d’un écouteur d’événement, vous ne pouvez plus modifier sa priorité par d’autres appels de <codeph class="+ topic/ph pr-d/codeph ">addEventListener()</codeph>. Pour modifier la priorité d’un écouteur, vous devez d’abord appeler <codeph class="+ topic/ph pr-d/codeph ">removeListener()</codeph>. Vous pouvez ensuite réenregistrer l’écouteur avec le nouveau niveau de priorité. </p>
	
	<p class="- topic/p ">N’oubliez pas qu’une fois l’écouteur enregistré, tous les prochains appels de <codeph class="+ topic/ph pr-d/codeph ">addEventListener()</codeph> avec une valeur <codeph class="+ topic/ph pr-d/codeph ">type</codeph> ou <codeph class="+ topic/ph pr-d/codeph ">useCapture</codeph> différente entraîneront la création d’un autre enregistrement d’écouteur. <ph class="- topic/ph ">Si, par exemple, vous enregistrez un écouteur dans lequel la propriété <codeph class="+ topic/ph pr-d/codeph ">useCapture</codeph> est définie sur <codeph class="+ topic/ph pr-d/codeph ">true</codeph>, il écoute uniquement pendant la phase de capture. Si vous appelez <codeph class="+ topic/ph pr-d/codeph ">addEventListener()</codeph> à l’aide du même objet écouteur, mais en définissant <codeph class="+ topic/ph pr-d/codeph ">useCapture</codeph> sur <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, vous obtenez deux écouteurs distincts : l’un qui écoute pendant la phase de capture et l’autre qui écoute pendant les phases cible et de propagation vers le haut (bubbling).</ph>
	</p>
	
	<p class="- topic/p ">Il est impossible d’enregistrer un écouteur d’événement uniquement pour la phase cible ou la phase de propagation vers le haut. Ces deux phases sont associées pendant l’enregistrement car la propagation vers le haut s’applique uniquement aux ancêtres du nœud cible.</p>
	
	<p class="- topic/p ">Si vous n’avez plus besoin d’un écouteur d’événements, supprimez-le en appelant <codeph class="+ topic/ph pr-d/codeph ">removeEventListener()</codeph>, afin d’éviter tout problème de mémoire. Les écouteurs d’événement ne sont pas automatiquement supprimés de la mémoire, car le nettoyeur de mémoire ne supprime pas l’écouteur tant que l’objet de distribution existe (à moins que le paramètre <codeph class="+ topic/ph pr-d/codeph ">useWeakReference</codeph> ne soit défini sur <codeph class="+ topic/ph pr-d/codeph ">true</codeph>).</p>
		
	<p class="- topic/p ">Lors de la copie d’une occurrence d’EventDispatcher, les écouteurs d’événement qui lui sont associés ne sont pas pris en compte (si le nouveau nœud nécessite un écouteur d’événement, vous devez associer celui-ci après la création du nœud). Toutefois, si vous déplacez une occurrence d’EventDispatcher, les écouteurs d’événement qui lui sont associés la suivent.</p>
	
	
	<p class="- topic/p ">Si un écouteur d’événement est enregistré sur un nœud alors qu’un événement est en cours de traitement sur ce nœud, l’écouteur n’est pas déclenché pendant la phase actuelle, mais il peut l’être pendant une phase ultérieure du flux d’événements, telle que la phase de propagation vers le haut (bubbling).</p>
	
	<p class="- topic/p ">Si un écouteur d’événement est supprimé d’un nœud sur lequel un événement est en cours de traitement, il est cependant déclenché par les actions en cours. Une fois supprimé, l’écouteur d’événement n’est plus jamais appelé (à moins d’être réenregistré à des fins de traitement ultérieur). </p>
	
	</apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.events:EventDispatcher:dispatchEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">dispatchEvent</apiName><shortdesc class="- topic/shortdesc ">
	Distribue un événement dans le flux d’événements.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">La limite de récursivité relative à la distribution d’événements est atteinte.
	</apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">Error</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Error</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Une valeur <codeph class="+ topic/ph pr-d/codeph ">true</codeph> si l’événement a bien été distribué. La valeur <codeph class="+ topic/ph pr-d/codeph ">false</codeph> indique un échec ou que <codeph class="+ topic/ph pr-d/codeph ">preventDefault()</codeph> a été appelé sur l’événement.
	
	</apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">event</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.events:Event</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Objet Event qui est distribué dans le flux d’événements. Si l’événement est redistribué, un clone est automatiquement créé. Après la distribution d’un événement, il est impossible de modifier sa propriété <codeph class="+ topic/ph pr-d/codeph ">target</codeph>. Pour que la redistribution fonctionne, vous devez donc créer une copie de l’événement.
	
	</apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Distribue un événement dans le flux d’événements. La cible de l’événement est l’objet EventDispatcher sur lequel la méthode <codeph class="+ topic/ph pr-d/codeph ">dispatchEvent()</codeph> est appelée.
	
	</apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.events:EventDispatcher:hasEventListener" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">hasEventListener</apiName><shortdesc class="- topic/shortdesc ">
	Vérifie si des écouteurs sont enregistrés auprès de l’objet EventDispatcher pour un type spécifique d’événement.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">La valeur <codeph class="+ topic/ph pr-d/codeph ">true</codeph> est renvoyée si un écouteur du type spécifié est enregistré. La valeur <codeph class="+ topic/ph pr-d/codeph ">false</codeph> est renvoyée dans tous les autres cas.
	</apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">type</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Type d’événement.
	</apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Vérifie si des écouteurs sont enregistrés auprès de l’objet EventDispatcher pour un type spécifique d’événement. Vous pouvez ainsi déterminer précisément où un objet EventDispatcher a modifié la gestion d’un type d’événement dans la hiérarchie du flux d’événements. Pour savoir si un type d’événement spécifique déclenche réellement un écouteur d’événements, utilisez <codeph class="+ topic/ph pr-d/codeph ">willTrigger()</codeph>.
	
	<p class="- topic/p ">La différence entre les méthodes <codeph class="+ topic/ph pr-d/codeph ">hasEventListener()</codeph> et <codeph class="+ topic/ph pr-d/codeph ">willTrigger()</codeph> est la suivante : <codeph class="+ topic/ph pr-d/codeph ">hasEventListener()</codeph> examine uniquement l’objet auquel elle appartient, tandis que <codeph class="+ topic/ph pr-d/codeph ">willTrigger()</codeph> recherche dans la totalité du flux d’événements l’événement spécifié par le paramètre <codeph class="+ topic/ph pr-d/codeph ">type</codeph>.
	
	</p>
	
	<p class="- topic/p ">Lorsque <codeph class="+ topic/ph pr-d/codeph ">hasEventListener()</codeph> est appelé à partir d’un objet LoaderInfo, seuls les écouteurs auxquels l’appelant a accès sont pris en compte.</p>
	
	</apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.events.xml#EventDispatcher/willTrigger()" class="- topic/link "><linktext class="- topic/linktext ">willTrigger()</linktext></link></related-links></apiOperation><apiOperation id="flash.events:EventDispatcher:removeEventListener" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">removeEventListener</apiName><shortdesc class="- topic/shortdesc ">
	Supprime un écouteur de l’objet EventDispatcher.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">type</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Type d’événement.
	
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">listener</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Function</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Objet écouteur à supprimer.
	
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">useCapture</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	
	<ph class="- topic/ph ">Détermine si l’écouteur a été enregistré pendant la phase de capture ou pendant les phases cible et de propagation. Si l’écouteur a été enregistré pendant la phase de capture et pendant les phases cible et de propagation, il est nécessaire d’appeler <codeph class="+ topic/ph pr-d/codeph ">removeEventListener()</codeph> à deux reprises pour le supprimer. Appelez <codeph class="+ topic/ph pr-d/codeph ">useCapture()</codeph> une première fois en la définissant sur <codeph class="+ topic/ph pr-d/codeph ">true</codeph>, puis une seconde fois <codeph class="+ topic/ph pr-d/codeph ">useCapture()</codeph> en la définissant sur <codeph class="+ topic/ph pr-d/codeph ">false</codeph>.</ph>
	
	</apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Supprime un écouteur de l’objet EventDispatcher. Si aucun écouteur correspondant n’est enregistré auprès de l’objet EventDispatcher, l’appel de cette méthode n’a aucun effet.
	
	</apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.events:EventDispatcher:willTrigger" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">willTrigger</apiName><shortdesc class="- topic/shortdesc ">
	Vérifie si un écouteur d’événement est enregistré auprès de cet objet EventDispatcher ou de ses ancêtres pour le type d’événement spécifié.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Renvoie <codeph class="+ topic/ph pr-d/codeph ">true</codeph> si un écouteur du type spécifié est enregistré, <codeph class="+ topic/ph pr-d/codeph ">false</codeph> dans tous les autres cas.
	</apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">type</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Type d’événement.
	</apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Vérifie si un écouteur d’événement est enregistré auprès de cet objet EventDispatcher ou de ses ancêtres pour le type d’événement spécifié. Cette méthode renvoie <codeph class="+ topic/ph pr-d/codeph ">true</codeph> si un écouteur d’événement est déclenché pendant toute phase du flux d’événements lorsqu’un événement du type spécifié est distribué à cet objet EventDispatcher ou à l’un de ses descendants.
	
	<p class="- topic/p ">La différence entre les méthodes <codeph class="+ topic/ph pr-d/codeph ">hasEventListener()</codeph> et <codeph class="+ topic/ph pr-d/codeph ">willTrigger()</codeph> est la suivante : <codeph class="+ topic/ph pr-d/codeph ">hasEventListener()</codeph> examine uniquement l’objet auquel elle appartient, tandis que <codeph class="+ topic/ph pr-d/codeph ">willTrigger()</codeph> recherche dans la totalité du flux d’événements celui qui est spécifié par le paramètre <codeph class="+ topic/ph pr-d/codeph ">type</codeph>. </p>
	
	<p class="- topic/p ">Lorsque <codeph class="+ topic/ph pr-d/codeph ">willTrigger()</codeph> est appelée à partir d’un objet LoaderInfo, seuls les écouteurs auxquels l’appelant a accès sont pris en compte.</p>
	
	</apiDesc></apiOperationDetail></apiOperation></apiClassifier><apiClassifier languages="" id="flash.events:TouchEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">TouchEvent</apiName><shortdesc class="- topic/shortdesc "> 
 La classe TouchEvent permet de gérer les événements sur les périphériques qui détectent les interactions entre l’utilisateur et le périphérique (notamment lorsque l’utilisateur déplace un doigt sur un écran tactile).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">prend en charge la gestion des événements pour les actions tactiles
 
 </apiTipText></apiTipTexts><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
 La classe TouchEvent permet de gérer les événements sur les périphériques qui détectent les interactions entre l’utilisateur et le périphérique (notamment lorsque l’utilisateur déplace un doigt sur un écran tactile). Lorsqu’un utilisateur interagit avec un périphérique, par exemple avec un téléphone portable ou une tablette munis d’un écran tactile, il touche généralement l’écran avec ses doigts ou avec un dispositif de pointage. Vous pouvez développer des applications qui réagissent aux événements tactiles (notamment lorsqu’un utilisateur appuie brièvement sur un écran) à l’aide de la classe TouchEvent. Créez des écouteurs d’événement à l’aide des types d’événements définis dans cette classe. Pour une interaction utilisateur avec plusieurs points de contact (notamment lorsqu’un utilisateur déplace plusieurs doigts sur un écran tactile), utilisez les classes GestureEvent, PressAndTapGestureEvent et TransformGestureEvent associées. Vous pouvez ensuite utiliser les propriétés et les méthodes de ces classes pour construire des gestionnaires d’événement qui répondent aux mouvements tactiles de l’utilisateur sur le périphérique.
 <p class="- topic/p ">Utilisez la classe Multitouch pour activer et gérer la prise en charge des actions tactiles par l’environnement actuel.</p>
 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Remarque :</b> lorsque les objets sont imbriqués dans la liste d’affichage, les événements tactiles ciblent l’objet le plus profondément imbriqué et visible dans la liste d’affichage. Cet objet est appelé le nœud cible. Pour que l’ancêtre d’un nœud cible (objet contenant le nœud cible dans la liste d’affichage) reçoive la notification d’un événement tactile, utilisez <codeph class="+ topic/ph pr-d/codeph ">EventDispatcher.addEventListener()</codeph> sur le nœud de l’ancêtre en définissant le paramètre type sur l’événement tactile spécifique que vous souhaitez détecter.</p>
 
 </apiDesc><example conref="examples\TouchEventExample.as" class="- topic/example "> L’exemple suivant illustre la gestion d’événements pour les événements <codeph class="+ topic/ph pr-d/codeph ">TOUCH_BEGIN</codeph>, <codeph class="+ topic/ph pr-d/codeph ">TOUCH_MOVE</codeph> et <codeph class="+ topic/ph pr-d/codeph ">TOUCH_END</codeph>. Lorsque le point de contact se déplace sur l’écran (<codeph class="+ topic/ph pr-d/codeph ">onTouchMove</codeph>), la coordonnée x par rapport à la scène est tracée à la sortie. Pour les paramètres <codeph class="+ topic/ph pr-d/codeph ">sprite.startTouchDrag</codeph> de la fonction <codeph class="+ topic/ph pr-d/codeph ">onTouchBegin</codeph>, la valeur de touchPointID correspond à la valeur affectée à l’objet d’événement. Le paramètre bounds correspond au rectangle qui définit les limites de l’objet d’affichage parent (bg est un objet d’affichage contenant MySprite). 
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
Multitouch.inputMode = MultitouchInputMode.TOUCH_POINT;

MySprite.addEventListener(TouchEvent.TOUCH_BEGIN, onTouchBegin);
MySprite.addEventListener(TouchEvent.TOUCH_MOVE, onTouchMove);
MySprite.addEventListener(TouchEvent.TOUCH_END, onTouchEnd);

function onTouchBegin(eBegin:TouchEvent) {
     eBegin.target.startTouchDrag(eBegin.touchPointID, false, bg.getRect(this));
     trace("touch begin");
 
 }

function onTouchMove(eMove:TouchEvent) {
    trace(eMove.stageX);
}
 
function onTouchEnd(eEnd:TouchEvent) {
     eEnd.target.stopTouchDrag(eEnd.touchPointID);
     trace("touch end");
}
</codeblock></example><example conref="examples\TouchExample2.as" class="- topic/example "> L’exemple suivant indique comment gérer les événements tactiles et leurs phases, ainsi que la propriété <codeph class="+ topic/ph pr-d/codeph ">Multitouch.maxTouchPoints</codeph> et les propriétés <codeph class="+ topic/ph pr-d/codeph ">touchPointID</codeph> de l’objet d’événement tactile. Cet exemple est fourni par Christian Cantrell, qui donne de plus amples explications dans l’article suivant : <xref href="http://www.adobe.com/devnet/flash/articles/multitouch_gestures.html" scope="external" class="- topic/xref ">Multi-touch and gesture support on the Flash Platform</xref> (disponible en anglais uniquement). 
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
 package
{
    import flash.display.Sprite;
    import flash.events.TouchEvent;
    import flash.text.AntiAliasType;
    import flash.text.TextField;
    import flash.text.TextFormat;
    import flash.ui.Multitouch;
    import flash.ui.MultitouchInputMode;

    [SWF(width=320, height=460, frameRate=24, backgroundColor=0xEB7F00)]
    public class TouchExample2 extends Sprite
    {
        private var dots:Object;
        private var labels:Object;
        private var labelFormat:TextFormat;
        private var dotCount:uint;
        private var dotsLeft:TextField;
        private static const LABEL_SPACING:uint = 15;
        
        public function TouchExample2()
        {
            super();

            this.labelFormat = new TextFormat();
            labelFormat.color = 0xACF0F2;
            labelFormat.font = "Helvetica";
            labelFormat.size = 11;
            
            this.dotCount = 0;

            this.dotsLeft = new TextField();
            this.dotsLeft.width = 300;
            this.dotsLeft.defaultTextFormat = this.labelFormat;
            this.dotsLeft.x = 3;
            this.dotsLeft.y = 0;
            this.stage.addChild(this.dotsLeft);
            this.updateDotsLeft();

            this.dots = new Object();
            this.labels = new Object();

            Multitouch.inputMode = MultitouchInputMode.TOUCH_POINT;
            this.stage.addEventListener(TouchEvent.TOUCH_BEGIN, onTouchBegin);
            this.stage.addEventListener(TouchEvent.TOUCH_MOVE, onTouchMove);
            this.stage.addEventListener(TouchEvent.TOUCH_END, onTouchEnd);
        }

        private function onTouchBegin(e:TouchEvent):void
        {
            if (this.dotCount == Multitouch.maxTouchPoints) return;
            var dot:Sprite = this.getCircle();
            dot.x = e.stageX;
            dot.y = e.stageY;
            this.stage.addChild(dot);
            dot.startTouchDrag(e.touchPointID, true);
            this.dots[e.touchPointID] = dot;
            
            ++this.dotCount;

            var label:TextField = this.getLabel(e.stageX + ", " + e.stageY);
            label.x = 3;
            label.y = this.dotCount * LABEL_SPACING;
            this.stage.addChild(label);
            this.labels[e.touchPointID] = label;

            this.updateDotsLeft();
        }
        
        private function onTouchMove(e:TouchEvent):void
        {
            var label:TextField = this.labels[e.touchPointID];
            label.text = (e.stageX + ", " + e.stageY);
        }
        
        private function onTouchEnd(e:TouchEvent):void
        {
            var dot:Sprite = this.dots[e.touchPointID];
            var label:TextField = this.labels[e.touchPointID];
            
            this.stage.removeChild(dot);
            this.stage.removeChild(label);
            
            delete this.dots[e.touchPointID];
            delete this.labels[e.touchPointID];
            
            --this.dotCount;

            this.updateDotsLeft();
        }
        
        private function getCircle(circumference:uint = 40):Sprite
        {
            var circle:Sprite = new Sprite();
            circle.graphics.beginFill(0x1695A3);
            circle.graphics.drawCircle(0, 0, circumference);
            return circle;
        }

        private function getLabel(initialText:String):TextField
        {
            var label:TextField = new TextField();
            label.defaultTextFormat = this.labelFormat;
            label.selectable = false;
            label.antiAliasType = AntiAliasType.ADVANCED;
            label.text = initialText;
            return label;
        }
        
        private function updateDotsLeft():void
        {
            this.dotsLeft.text = "Touches Remaining: " + (Multitouch.maxTouchPoints - this.dotCount);
        }
    }
}
</codeblock></example></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.ui.xml#Multitouch" class="- topic/link "><linktext class="- topic/linktext ">flash.ui.Multitouch</linktext></link><link href="flash.events.xml#GestureEvent" class="- topic/link "><linktext class="- topic/linktext ">flash.events.GestureEvent</linktext></link><link href="flash.events.xml#TransformGestureEvent" class="- topic/link "><linktext class="- topic/linktext ">flash.events.TransformGestureEvent</linktext></link><link href="flash.events.xml#PressAndTapGestureEvent" class="- topic/link "><linktext class="- topic/linktext ">flash.events.PressAndTapGestureEvent</linktext></link><link href="flash.events.xml#MouseEvent" class="- topic/link "><linktext class="- topic/linktext ">flash.events.MouseEvent</linktext></link><link href="flash.events.xml#EventDispatcher/addEventListener()" class="- topic/link "><linktext class="- topic/linktext ">flash.events.EventDispatcher.addEventListener()</linktext></link></related-links><adobeApiEvent id="flash.events:TouchEvent:TOUCH_BEGIN_touchBegin" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">touchBegin</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:TouchEvent:TOUCH_BEGIN</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:TouchEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:touchBegin" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.touchBegin</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:TouchEvent:TOUCH_END_touchEnd" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">touchEnd</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:TouchEvent:TOUCH_END</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:TouchEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:touchEnd" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.touchEnd</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:TouchEvent:TOUCH_MOVE_touchMove" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">touchMove</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:TouchEvent:TOUCH_MOVE</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:TouchEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:touchMove" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.touchMove</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:TouchEvent:TOUCH_OUT_touchOut" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">touchOut</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:TouchEvent:TOUCH_OUT</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:TouchEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:touchOut" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.touchOut</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:TouchEvent:TOUCH_OVER_touchOver" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">touchOver</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:TouchEvent:TOUCH_OVER</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:TouchEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:touchOver" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.touchOver</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:TouchEvent:TOUCH_ROLL_OUT_touchRollOut" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">touchRollOut</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:TouchEvent:TOUCH_ROLL_OUT</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:TouchEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:touchRollOut" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.touchRollOut</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:TouchEvent:TOUCH_ROLL_OVER_touchRollOver" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">touchRollOver</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:TouchEvent:TOUCH_ROLL_OVER</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:TouchEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:touchRollOver" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.touchRollOver</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:TouchEvent:TOUCH_TAP_touchTap" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">touchTap</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:TouchEvent:TOUCH_TAP</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:TouchEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef><example conref="..\ui\examples\Multitouch_inputMode.as" class="- topic/example "> L’exemple suivant affiche un message lorsque l’utilisateur appuie sur le carré dessiné sur mySprite sur un écran tactile :
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
Multitouch.inputMode=MultitouchInputMode.TOUCH_POINT;

var mySprite:Sprite = new Sprite();
var myTextField:TextField = new TextField();

mySprite.graphics.beginFill(0x336699);
mySprite.graphics.drawRect(0,0,40,40);
addChild(mySprite);

mySprite.addEventListener(TouchEvent.TOUCH_TAP, taphandler);

function taphandler(e:TouchEvent): void {
    myTextField.text = "I've been tapped";
    myTextField.y = 50;
    addChild(myTextField);
}
</codeblock></example></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:touchTap" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.touchTap</linktext></link></related-links></adobeApiEvent><apiConstructor id="flash.events:TouchEvent:TouchEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">TouchEvent</apiName><shortdesc class="- topic/shortdesc ">
    Crée un objet Event contenant des informations sur les événements tactiles.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">type</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc "> Type de l’événement. Les valeurs possibles sont les suivantes : <codeph class="+ topic/ph pr-d/codeph ">TouchEvent.TOUCH_BEGIN</codeph>, <codeph class="+ topic/ph pr-d/codeph ">TouchEvent.TOUCH_END</codeph>, <codeph class="+ topic/ph pr-d/codeph ">TouchEvent.TOUCH_MOVE</codeph>, <codeph class="+ topic/ph pr-d/codeph ">TouchEvent.TOUCH_OUT</codeph>, <codeph class="+ topic/ph pr-d/codeph ">TouchEvent.TOUCH_OVER</codeph>, <codeph class="+ topic/ph pr-d/codeph ">TouchEvent.TOUCH_ROLL_OUT</codeph>, <codeph class="+ topic/ph pr-d/codeph ">TouchEvent.TOUCH_ROLL_OVER</codeph> et <codeph class="+ topic/ph pr-d/codeph ">TouchEvent.TOUCH_TAP</codeph>. 
	
    </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">bubbles</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">true</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc "> Détermine si l’objet Event prend part à la phase de propagation du flux d’événements.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">cancelable</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Détermine si l’objet d’événement peut être annulé.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">touchPointID</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Numéro d’identification unique (sous la forme d’une valeur int) affecté au point tactile.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">isPrimaryTouchPoint</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Indique si le premier point de contact est associé aux événements de souris.	
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">localX</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">unknown</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Coordonnée horizontale à laquelle l’événement s’est produit par rapport au sprite conteneur.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">localY</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">unknown</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Coordonnée verticale à laquelle l’événement s’est produit par rapport au sprite conteneur.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">sizeX</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">unknown</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Largeur de la surface de contact.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">sizeY</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">unknown</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Hauteur de la surface de contact.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">pressure</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">unknown</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Valeur comprise entre <codeph class="+ topic/ph pr-d/codeph ">0.0</codeph> et <codeph class="+ topic/ph pr-d/codeph ">1.0</codeph> qui indique l’intensité du contact avec le périphérique. Si le périphérique ne prend pas en charge la détection de la pression, la valeur est <codeph class="+ topic/ph pr-d/codeph ">1.0</codeph>.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">relatedObject</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.display:InteractiveObject</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Occurrence complémentaire d’InteractiveObject affectée par l’événement. Par exemple, lorsqu’un événement <codeph class="+ topic/ph pr-d/codeph ">touchOut</codeph> se produit, <codeph class="+ topic/ph pr-d/codeph ">relatedObject</codeph> représente l’objet de la liste d’affichage sur lequel pointe actuellement le dispositif de pointage.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ctrlKey</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Sous Windows ou Linux, indique si la touche Ctrl est activée. Sous Mac, indique si la touche Ctrl ou la touche Commande est activée.
    </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">altKey</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Indique si la touche Alt est activée (Windows ou Linux uniquement).
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">shiftKey</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Indique si la touche Maj est activée.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">commandKey</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">(AIR uniquement) Indique si la touche Commande est activée (Mac uniquement). Ce paramètre est destiné à Adobe AIR uniquement ; ne le définissez pas pour le contenu de Flash Player.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">controlKey</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">(AIR uniquement) Indique si la touche Contrôle ou Ctrl est activée (Mac uniquement). Ce paramètre est destiné à Adobe AIR uniquement ; ne le définissez pas pour le contenu de Flash Player.
    
    </apiDesc></apiParam><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Constructeur associé aux objets TouchEvent.
	</apiTipText></apiTipTexts></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Crée un objet Event contenant des informations sur les événements tactiles. Les objets Event sont transmis en tant que paramètres aux écouteurs d’événements.
    
	
    </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="flash.events:TouchEvent:clone" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">clone</apiName><shortdesc class="- topic/shortdesc ">
		Crée une copie de l’objet TouchEvent et définit la valeur de chaque propriété de sorte qu’elle corresponde à la valeur d’origine.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Nouvel objet TouchEvent dont les propriétés ont la même valeur que celles de l’objet d’origine.
		 
		 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.events:Event</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		Crée une copie de l’objet TouchEvent et définit la valeur de chaque propriété de sorte qu’elle corresponde à la valeur d’origine.
		
		</apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.events:TouchEvent:toString" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">toString</apiName><shortdesc class="- topic/shortdesc ">
	Renvoie une chaîne répertoriant toutes les propriétés de l’objet TouchEvent.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Chaîne répertoriant toutes les propriétés de l’objet TouchEvent.
	 
	 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Renvoie une chaîne répertoriant toutes les propriétés de l’objet TouchEvent. La chaîne est écrite au format suivant :
	<p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">[TouchEvent type=<i class="+ topic/ph hi-d/i ">valeur</i> bubbles=<i class="+ topic/ph hi-d/i ">valeur</i> cancelable=<i class="+ topic/ph hi-d/i ">valeur</i> ... ]</codeph></p>
	
	</apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.events:TouchEvent:updateAfterEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">updateAfterEvent</apiName><shortdesc class="- topic/shortdesc ">
	Demande à Flash Player ou à Adobe AIR d’effectuer un rendu à la fin du traitement de cet événement, si la liste d’affichage a été modifiée.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Demande à Flash Player ou à Adobe AIR d’effectuer un rendu à la fin du traitement de cet événement, si la liste d’affichage a été modifiée.
	
	</apiDesc></apiOperationDetail></apiOperation><apiValue id="flash.events:TouchEvent:TOUCH_BEGIN" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">TOUCH_BEGIN</apiName><shortdesc class="- topic/shortdesc ">
     Définit la valeur de la propriété type d’un objet d’événement tactile TOUCH_BEGIN.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">touchBegin</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet d’événement <codeph class="+ topic/ph pr-d/codeph ">TOUCH_BEGIN</codeph>.
	 
	 <p class="- topic/p ">L’objet TouchEvent distribué possède les propriétés suivantes :</p>
	 
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">altKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> si la touche Alt est activée (Windows ou Linux).</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">commandKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> sur le Mac si la touche Commande est activée ; <codeph class="+ topic/ph pr-d/codeph ">false</codeph> si elle est désactivée. Toujours <codeph class="+ topic/ph pr-d/codeph ">false</codeph> sur Windows.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">controlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> si la touche Ctrl ou Contrôle est activée ; <codeph class="+ topic/ph pr-d/codeph ">false</codeph> si elle est désactivée.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">ctrlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> sous Windows ou Linux si la touche Ctrl est enfoncée. <codeph class="+ topic/ph pr-d/codeph ">true</codeph> sur Mac si la touche Ctrl ou la touche Commande est activée. Sinon, la valeur <codeph class="+ topic/ph pr-d/codeph ">false</codeph> est renvoyée.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">L’objet qui traite activement l’objet Event avec un écouteur d’événements.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">eventPhase</codeph></entry><entry class="- topic/entry ">Phase actuelle du flux d’événements.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">isRelatedObjectInaccessible</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> si la propriété relatedObject est définie sur <codeph class="+ topic/ph pr-d/codeph ">null</codeph> conformément aux règles du sandbox de sécurité.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">localX</codeph></entry><entry class="- topic/entry ">Coordonnée horizontale à laquelle l’événement s’est produit par rapport au sprite conteneur.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">localY</codeph></entry><entry class="- topic/entry ">Coordonnée verticale à laquelle l’événement s’est produit par rapport au sprite conteneur.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">pressure</codeph></entry><entry class="- topic/entry ">Valeur comprise entre <codeph class="+ topic/ph pr-d/codeph ">0.0</codeph> et <codeph class="+ topic/ph pr-d/codeph ">1.0</codeph> qui indique l’intensité du contact avec le périphérique. Si le périphérique ne prend pas en charge la détection de la pression, la valeur est <codeph class="+ topic/ph pr-d/codeph ">1.0</codeph>.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">relatedObject</codeph></entry><entry class="- topic/entry ">Référence à un objet de la liste d’affichage qui est associé à l’événement.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">shiftKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> si la touche Maj est activée ; <codeph class="+ topic/ph pr-d/codeph ">false</codeph> si elle ne l’est pas.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">sizeX</codeph></entry><entry class="- topic/entry ">Largeur de la surface de contact.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">sizeY</codeph></entry><entry class="- topic/entry ">Hauteur de la surface de contact.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">stageX</codeph></entry><entry class="- topic/entry ">Coordonnée horizontale à laquelle l’événement s’est produit, par rapport aux coordonnées globales de la scène.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">stageY</codeph></entry><entry class="- topic/entry ">Coordonnée verticale à laquelle l’événement s’est produit, par rapport aux coordonnées globales de la scène.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Occurrence d’InteractiveObject sous le dispositif de pointage. La propriété <codeph class="+ topic/ph pr-d/codeph ">target</codeph> ne correspond pas toujours à l’objet de la liste d’affichage qui est associé à l’écouteur d’événement. Utilisez la propriété <codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph> pour accéder à l’objet de la liste d’affichage qui traite actuellement l’événement.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">touchPointID</codeph></entry><entry class="- topic/entry ">Numéro d’identification unique (sous la forme d’une valeur int) affecté au point tactile.</entry></row></tbody></tgroup></adobetable>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:touchBegin" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.touchBegin</linktext></link></related-links></apiValue><apiValue id="flash.events:TouchEvent:TOUCH_END" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">TOUCH_END</apiName><shortdesc class="- topic/shortdesc ">
     Définit la valeur de la propriété type d’un objet d’événement tactile TOUCH_END.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">touchEnd</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet d’événement <codeph class="+ topic/ph pr-d/codeph ">TOUCH_END</codeph>.
	 
	 <p class="- topic/p ">L’objet TouchEvent distribué possède les propriétés suivantes :</p>
	 
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">altKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> si la touche Alt est activée (Windows ou Linux).</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">commandKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> sur le Mac si la touche Commande est activée ; <codeph class="+ topic/ph pr-d/codeph ">false</codeph> si elle est désactivée. Toujours <codeph class="+ topic/ph pr-d/codeph ">false</codeph> sur Windows.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">controlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> si la touche Ctrl ou Contrôle est activée ; <codeph class="+ topic/ph pr-d/codeph ">false</codeph> si elle est désactivée.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">ctrlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> sous Windows ou Linux si la touche Ctrl est enfoncée. <codeph class="+ topic/ph pr-d/codeph ">true</codeph> sur Mac si la touche Ctrl ou la touche Commande est activée. Sinon, la valeur <codeph class="+ topic/ph pr-d/codeph ">false</codeph> est renvoyée.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">L’objet qui traite activement l’objet Event avec un écouteur d’événements.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">eventPhase</codeph></entry><entry class="- topic/entry ">Phase actuelle du flux d’événements.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">isRelatedObjectInaccessible</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> si la propriété relatedObject est définie sur <codeph class="+ topic/ph pr-d/codeph ">null</codeph> conformément aux règles du sandbox de sécurité.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">localX</codeph></entry><entry class="- topic/entry ">Coordonnée horizontale à laquelle l’événement s’est produit par rapport au sprite conteneur.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">localY</codeph></entry><entry class="- topic/entry ">Coordonnée verticale à laquelle l’événement s’est produit par rapport au sprite conteneur.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">pressure</codeph></entry><entry class="- topic/entry ">Valeur comprise entre <codeph class="+ topic/ph pr-d/codeph ">0.0</codeph> et <codeph class="+ topic/ph pr-d/codeph ">1.0</codeph> qui indique l’intensité du contact avec le périphérique. Si le périphérique ne prend pas en charge la détection de la pression, la valeur est <codeph class="+ topic/ph pr-d/codeph ">1.0</codeph>.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">relatedObject</codeph></entry><entry class="- topic/entry ">Référence à un objet de la liste d’affichage qui est associé à l’événement.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">shiftKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> si la touche Maj est activée ; <codeph class="+ topic/ph pr-d/codeph ">false</codeph> si elle ne l’est pas.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">sizeX</codeph></entry><entry class="- topic/entry ">Largeur de la surface de contact.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">sizeY</codeph></entry><entry class="- topic/entry ">Hauteur de la surface de contact.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">stageX</codeph></entry><entry class="- topic/entry ">Coordonnée horizontale à laquelle l’événement s’est produit, par rapport aux coordonnées globales de la scène.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">stageY</codeph></entry><entry class="- topic/entry ">Coordonnée verticale à laquelle l’événement s’est produit, par rapport aux coordonnées globales de la scène.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Occurrence d’InteractiveObject sous le dispositif de pointage. La propriété <codeph class="+ topic/ph pr-d/codeph ">target</codeph> ne correspond pas toujours à l’objet de la liste d’affichage qui est associé à l’écouteur d’événement. Utilisez la propriété <codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph> pour accéder à l’objet de la liste d’affichage qui traite actuellement l’événement.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">touchPointID</codeph></entry><entry class="- topic/entry ">Numéro d’identification unique (sous la forme d’une valeur int) affecté au point tactile.</entry></row></tbody></tgroup></adobetable>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:touchEnd" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.touchEnd</linktext></link></related-links></apiValue><apiValue id="flash.events:TouchEvent:TOUCH_MOVE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">TOUCH_MOVE</apiName><shortdesc class="- topic/shortdesc ">
     Définit la valeur de la propriété type d’un objet d’événement tactile TOUCH_MOVE.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">touchMove</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet d’événement <codeph class="+ topic/ph pr-d/codeph ">TOUCH_MOVE</codeph>.
	 
	 <p class="- topic/p ">L’objet TouchEvent distribué possède les propriétés suivantes :</p>
	 
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">altKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> si la touche Alt est activée (Windows ou Linux).</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">commandKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> sur le Mac si la touche Commande est activée ; <codeph class="+ topic/ph pr-d/codeph ">false</codeph> si elle est désactivée. Toujours <codeph class="+ topic/ph pr-d/codeph ">false</codeph> sur Windows.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">controlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> si la touche Ctrl ou Contrôle est activée ; <codeph class="+ topic/ph pr-d/codeph ">false</codeph> si elle est désactivée.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">ctrlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> sous Windows ou Linux si la touche Ctrl est enfoncée. <codeph class="+ topic/ph pr-d/codeph ">true</codeph> sur Mac si la touche Ctrl ou la touche Commande est activée. Sinon, la valeur <codeph class="+ topic/ph pr-d/codeph ">false</codeph> est renvoyée.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">L’objet qui traite activement l’objet Event avec un écouteur d’événements.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">eventPhase</codeph></entry><entry class="- topic/entry ">Phase actuelle du flux d’événements.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">isRelatedObjectInaccessible</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> si la propriété relatedObject est définie sur <codeph class="+ topic/ph pr-d/codeph ">null</codeph> conformément aux règles du sandbox de sécurité.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">localX</codeph></entry><entry class="- topic/entry ">Coordonnée horizontale à laquelle l’événement s’est produit par rapport au sprite conteneur.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">localY</codeph></entry><entry class="- topic/entry ">Coordonnée verticale à laquelle l’événement s’est produit par rapport au sprite conteneur.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">pressure</codeph></entry><entry class="- topic/entry ">Valeur comprise entre <codeph class="+ topic/ph pr-d/codeph ">0.0</codeph> et <codeph class="+ topic/ph pr-d/codeph ">1.0</codeph> qui indique l’intensité du contact avec le périphérique. Si le périphérique ne prend pas en charge la détection de la pression, la valeur est <codeph class="+ topic/ph pr-d/codeph ">1.0</codeph>.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">relatedObject</codeph></entry><entry class="- topic/entry ">Référence à un objet de la liste d’affichage qui est associé à l’événement.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">shiftKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> si la touche Maj est activée ; <codeph class="+ topic/ph pr-d/codeph ">false</codeph> si elle ne l’est pas.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">sizeX</codeph></entry><entry class="- topic/entry ">Largeur de la surface de contact.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">sizeY</codeph></entry><entry class="- topic/entry ">Hauteur de la surface de contact.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">stageX</codeph></entry><entry class="- topic/entry ">Coordonnée horizontale à laquelle l’événement s’est produit, par rapport aux coordonnées globales de la scène.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">stageY</codeph></entry><entry class="- topic/entry ">Coordonnée verticale à laquelle l’événement s’est produit, par rapport aux coordonnées globales de la scène.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Occurrence d’InteractiveObject sous le dispositif de pointage. La propriété <codeph class="+ topic/ph pr-d/codeph ">target</codeph> ne correspond pas toujours à l’objet de la liste d’affichage qui est associé à l’écouteur d’événement. Utilisez la propriété <codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph> pour accéder à l’objet de la liste d’affichage qui traite actuellement l’événement.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">touchPointID</codeph></entry><entry class="- topic/entry ">Numéro d’identification unique (sous la forme d’une valeur int) affecté au point tactile.</entry></row></tbody></tgroup></adobetable>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:touchMove" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.touchMove</linktext></link></related-links></apiValue><apiValue id="flash.events:TouchEvent:TOUCH_OUT" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">TOUCH_OUT</apiName><shortdesc class="- topic/shortdesc ">
     Définit la valeur de la propriété type d’un objet d’événement tactile TOUCH_OUT.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">touchOut</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet d’événement <codeph class="+ topic/ph pr-d/codeph ">TOUCH_OUT</codeph>.
	 
	 <p class="- topic/p ">L’objet TouchEvent distribué possède les propriétés suivantes :</p>
	 
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">altKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> si la touche Alt est activée (Windows ou Linux).</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">commandKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> sur le Mac si la touche Commande est activée ; <codeph class="+ topic/ph pr-d/codeph ">false</codeph> si elle est désactivée. Toujours <codeph class="+ topic/ph pr-d/codeph ">false</codeph> sur Windows.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">controlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> si la touche Ctrl ou Contrôle est activée ; <codeph class="+ topic/ph pr-d/codeph ">false</codeph> si elle est désactivée.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">ctrlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> sous Windows ou Linux si la touche Ctrl est enfoncée. <codeph class="+ topic/ph pr-d/codeph ">true</codeph> sur Mac si la touche Ctrl ou la touche Commande est activée. Sinon, la valeur <codeph class="+ topic/ph pr-d/codeph ">false</codeph> est renvoyée.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">L’objet qui traite activement l’objet Event avec un écouteur d’événements.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">eventPhase</codeph></entry><entry class="- topic/entry ">Phase actuelle du flux d’événements.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">isRelatedObjectInaccessible</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> si la propriété relatedObject est définie sur <codeph class="+ topic/ph pr-d/codeph ">null</codeph> conformément aux règles du sandbox de sécurité.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">localX</codeph></entry><entry class="- topic/entry ">Coordonnée horizontale à laquelle l’événement s’est produit par rapport au sprite conteneur.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">localY</codeph></entry><entry class="- topic/entry ">Coordonnée verticale à laquelle l’événement s’est produit par rapport au sprite conteneur.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">pressure</codeph></entry><entry class="- topic/entry ">Valeur comprise entre <codeph class="+ topic/ph pr-d/codeph ">0.0</codeph> et <codeph class="+ topic/ph pr-d/codeph ">1.0</codeph> qui indique l’intensité du contact avec le périphérique. Si le périphérique ne prend pas en charge la détection de la pression, la valeur est <codeph class="+ topic/ph pr-d/codeph ">1.0</codeph>.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">relatedObject</codeph></entry><entry class="- topic/entry ">Référence à un objet de la liste d’affichage qui est associé à l’événement.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">shiftKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> si la touche Maj est activée ; <codeph class="+ topic/ph pr-d/codeph ">false</codeph> si elle ne l’est pas.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">sizeX</codeph></entry><entry class="- topic/entry ">Largeur de la surface de contact.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">sizeY</codeph></entry><entry class="- topic/entry ">Hauteur de la surface de contact.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">stageX</codeph></entry><entry class="- topic/entry ">Coordonnée horizontale à laquelle l’événement s’est produit, par rapport aux coordonnées globales de la scène.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">stageY</codeph></entry><entry class="- topic/entry ">Coordonnée verticale à laquelle l’événement s’est produit, par rapport aux coordonnées globales de la scène.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Occurrence d’InteractiveObject sous le dispositif de pointage. La propriété <codeph class="+ topic/ph pr-d/codeph ">target</codeph> ne correspond pas toujours à l’objet de la liste d’affichage qui est associé à l’écouteur d’événement. Utilisez la propriété <codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph> pour accéder à l’objet de la liste d’affichage qui traite actuellement l’événement.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">touchPointID</codeph></entry><entry class="- topic/entry ">Numéro d’identification unique (sous la forme d’une valeur int) affecté au point tactile.</entry></row></tbody></tgroup></adobetable>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:touchOut" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.touchOut</linktext></link></related-links></apiValue><apiValue id="flash.events:TouchEvent:TOUCH_OVER" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">TOUCH_OVER</apiName><shortdesc class="- topic/shortdesc ">
     Définit la valeur de la propriété type d’un objet d’événement tactile TOUCH_OVER.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">touchOver</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet d’événement <codeph class="+ topic/ph pr-d/codeph ">TOUCH_OVER</codeph>.
	 
	 <p class="- topic/p ">L’objet TouchEvent distribué possède les propriétés suivantes :</p>
	 
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">altKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> si la touche Alt est activée (Windows ou Linux).</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">commandKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> sur le Mac si la touche Commande est activée ; <codeph class="+ topic/ph pr-d/codeph ">false</codeph> si elle est désactivée. Toujours <codeph class="+ topic/ph pr-d/codeph ">false</codeph> sur Windows.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">controlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> si la touche Ctrl ou Contrôle est activée ; <codeph class="+ topic/ph pr-d/codeph ">false</codeph> si elle est désactivée.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">ctrlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> sous Windows ou Linux si la touche Ctrl est enfoncée. <codeph class="+ topic/ph pr-d/codeph ">true</codeph> sur Mac si la touche Ctrl ou la touche Commande est activée. Sinon, la valeur <codeph class="+ topic/ph pr-d/codeph ">false</codeph> est renvoyée.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">L’objet qui traite activement l’objet Event avec un écouteur d’événements.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">eventPhase</codeph></entry><entry class="- topic/entry ">Phase actuelle du flux d’événements.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">isRelatedObjectInaccessible</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> si la propriété relatedObject est définie sur <codeph class="+ topic/ph pr-d/codeph ">null</codeph> conformément aux règles du sandbox de sécurité.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">localX</codeph></entry><entry class="- topic/entry ">Coordonnée horizontale à laquelle l’événement s’est produit par rapport au sprite conteneur.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">localY</codeph></entry><entry class="- topic/entry ">Coordonnée verticale à laquelle l’événement s’est produit par rapport au sprite conteneur.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">pressure</codeph></entry><entry class="- topic/entry ">Valeur comprise entre <codeph class="+ topic/ph pr-d/codeph ">0.0</codeph> et <codeph class="+ topic/ph pr-d/codeph ">1.0</codeph> qui indique l’intensité du contact avec le périphérique. Si le périphérique ne prend pas en charge la détection de la pression, la valeur est <codeph class="+ topic/ph pr-d/codeph ">1.0</codeph>.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">relatedObject</codeph></entry><entry class="- topic/entry ">Référence à un objet de la liste d’affichage qui est associé à l’événement.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">shiftKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> si la touche Maj est activée ; <codeph class="+ topic/ph pr-d/codeph ">false</codeph> si elle ne l’est pas.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">sizeX</codeph></entry><entry class="- topic/entry ">Largeur de la surface de contact.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">sizeY</codeph></entry><entry class="- topic/entry ">Hauteur de la surface de contact.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">stageX</codeph></entry><entry class="- topic/entry ">Coordonnée horizontale à laquelle l’événement s’est produit, par rapport aux coordonnées globales de la scène.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">stageY</codeph></entry><entry class="- topic/entry ">Coordonnée verticale à laquelle l’événement s’est produit, par rapport aux coordonnées globales de la scène.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Occurrence d’InteractiveObject sous le dispositif de pointage. La propriété <codeph class="+ topic/ph pr-d/codeph ">target</codeph> ne correspond pas toujours à l’objet de la liste d’affichage qui est associé à l’écouteur d’événement. Utilisez la propriété <codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph> pour accéder à l’objet de la liste d’affichage qui traite actuellement l’événement.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">touchPointID</codeph></entry><entry class="- topic/entry ">Numéro d’identification unique (sous la forme d’une valeur int) affecté au point tactile.</entry></row></tbody></tgroup></adobetable>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:touchOver" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.touchOver</linktext></link></related-links></apiValue><apiValue id="flash.events:TouchEvent:TOUCH_ROLL_OUT" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">TOUCH_ROLL_OUT</apiName><shortdesc class="- topic/shortdesc ">
     Définit la valeur de la propriété type d’un objet d’événement tactile TOUCH_ROLL_OUT.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">touchRollOut</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet d’événement <codeph class="+ topic/ph pr-d/codeph ">TOUCH_ROLL_OUT</codeph>.
	 
	 <p class="- topic/p ">L’objet TouchEvent distribué possède les propriétés suivantes :</p>
	 
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">altKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> si la touche Alt est activée (Windows ou Linux).</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">commandKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> sur le Mac si la touche Commande est activée ; <codeph class="+ topic/ph pr-d/codeph ">false</codeph> si elle est désactivée. Toujours <codeph class="+ topic/ph pr-d/codeph ">false</codeph> sur Windows.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">controlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> si la touche Ctrl ou Contrôle est activée ; <codeph class="+ topic/ph pr-d/codeph ">false</codeph> si elle est désactivée.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">ctrlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> sous Windows ou Linux si la touche Ctrl est enfoncée. <codeph class="+ topic/ph pr-d/codeph ">true</codeph> sur Mac si la touche Ctrl ou la touche Commande est activée. Sinon, la valeur <codeph class="+ topic/ph pr-d/codeph ">false</codeph> est renvoyée.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">L’objet qui traite activement l’objet Event avec un écouteur d’événements.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">eventPhase</codeph></entry><entry class="- topic/entry ">Phase actuelle du flux d’événements.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">isRelatedObjectInaccessible</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> si la propriété relatedObject est définie sur <codeph class="+ topic/ph pr-d/codeph ">null</codeph> conformément aux règles du sandbox de sécurité.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">localX</codeph></entry><entry class="- topic/entry ">Coordonnée horizontale à laquelle l’événement s’est produit par rapport au sprite conteneur.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">localY</codeph></entry><entry class="- topic/entry ">Coordonnée verticale à laquelle l’événement s’est produit par rapport au sprite conteneur.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">pressure</codeph></entry><entry class="- topic/entry ">Valeur comprise entre <codeph class="+ topic/ph pr-d/codeph ">0.0</codeph> et <codeph class="+ topic/ph pr-d/codeph ">1.0</codeph> qui indique l’intensité du contact avec le périphérique. Si le périphérique ne prend pas en charge la détection de la pression, la valeur est <codeph class="+ topic/ph pr-d/codeph ">1.0</codeph>.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">relatedObject</codeph></entry><entry class="- topic/entry ">Référence à un objet de la liste d’affichage qui est associé à l’événement.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">shiftKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> si la touche Maj est activée ; <codeph class="+ topic/ph pr-d/codeph ">false</codeph> si elle ne l’est pas.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">sizeX</codeph></entry><entry class="- topic/entry ">Largeur de la surface de contact.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">sizeY</codeph></entry><entry class="- topic/entry ">Hauteur de la surface de contact.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">stageX</codeph></entry><entry class="- topic/entry ">Coordonnée horizontale à laquelle l’événement s’est produit, par rapport aux coordonnées globales de la scène.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">stageY</codeph></entry><entry class="- topic/entry ">Coordonnée verticale à laquelle l’événement s’est produit, par rapport aux coordonnées globales de la scène.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Occurrence d’InteractiveObject sous le dispositif de pointage. La propriété <codeph class="+ topic/ph pr-d/codeph ">target</codeph> ne correspond pas toujours à l’objet de la liste d’affichage qui est associé à l’écouteur d’événement. Utilisez la propriété <codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph> pour accéder à l’objet de la liste d’affichage qui traite actuellement l’événement.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">touchPointID</codeph></entry><entry class="- topic/entry ">Numéro d’identification unique (sous la forme d’une valeur int) affecté au point tactile.</entry></row></tbody></tgroup></adobetable>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:touchRollOut" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.touchRollOut</linktext></link></related-links></apiValue><apiValue id="flash.events:TouchEvent:TOUCH_ROLL_OVER" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">TOUCH_ROLL_OVER</apiName><shortdesc class="- topic/shortdesc ">
     Définit la valeur de la propriété type d’un objet d’événement tactile TOUCH_ROLL_OVER.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">touchRollOver</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet d’événement <codeph class="+ topic/ph pr-d/codeph ">TOUCH_ROLL_OVER</codeph>.
	 
	 <p class="- topic/p ">L’objet TouchEvent distribué possède les propriétés suivantes :</p>
	 
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">altKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> si la touche Alt est activée (Windows ou Linux).</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">commandKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> sur le Mac si la touche Commande est activée ; <codeph class="+ topic/ph pr-d/codeph ">false</codeph> si elle est désactivée. Toujours <codeph class="+ topic/ph pr-d/codeph ">false</codeph> sur Windows.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">controlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> si la touche Ctrl ou Contrôle est activée ; <codeph class="+ topic/ph pr-d/codeph ">false</codeph> si elle est désactivée.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">ctrlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> sous Windows ou Linux si la touche Ctrl est enfoncée. <codeph class="+ topic/ph pr-d/codeph ">true</codeph> sur Mac si la touche Ctrl ou la touche Commande est activée. Sinon, la valeur <codeph class="+ topic/ph pr-d/codeph ">false</codeph> est renvoyée.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">L’objet qui traite activement l’objet Event avec un écouteur d’événements.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">eventPhase</codeph></entry><entry class="- topic/entry ">Phase actuelle du flux d’événements.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">isRelatedObjectInaccessible</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> si la propriété relatedObject est définie sur <codeph class="+ topic/ph pr-d/codeph ">null</codeph> conformément aux règles du sandbox de sécurité.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">localX</codeph></entry><entry class="- topic/entry ">Coordonnée horizontale à laquelle l’événement s’est produit par rapport au sprite conteneur.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">localY</codeph></entry><entry class="- topic/entry ">Coordonnée verticale à laquelle l’événement s’est produit par rapport au sprite conteneur.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">pressure</codeph></entry><entry class="- topic/entry ">Valeur comprise entre <codeph class="+ topic/ph pr-d/codeph ">0.0</codeph> et <codeph class="+ topic/ph pr-d/codeph ">1.0</codeph> qui indique l’intensité du contact avec le périphérique. Si le périphérique ne prend pas en charge la détection de la pression, la valeur est <codeph class="+ topic/ph pr-d/codeph ">1.0</codeph>.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">relatedObject</codeph></entry><entry class="- topic/entry ">Référence à un objet de la liste d’affichage qui est associé à l’événement.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">shiftKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> si la touche Maj est activée ; <codeph class="+ topic/ph pr-d/codeph ">false</codeph> si elle ne l’est pas.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">sizeX</codeph></entry><entry class="- topic/entry ">Largeur de la surface de contact.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">sizeY</codeph></entry><entry class="- topic/entry ">Hauteur de la surface de contact.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">stageX</codeph></entry><entry class="- topic/entry ">Coordonnée horizontale à laquelle l’événement s’est produit, par rapport aux coordonnées globales de la scène.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">stageY</codeph></entry><entry class="- topic/entry ">Coordonnée verticale à laquelle l’événement s’est produit, par rapport aux coordonnées globales de la scène.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Occurrence d’InteractiveObject sous le dispositif de pointage. La propriété <codeph class="+ topic/ph pr-d/codeph ">target</codeph> ne correspond pas toujours à l’objet de la liste d’affichage qui est associé à l’écouteur d’événement. Utilisez la propriété <codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph> pour accéder à l’objet de la liste d’affichage qui traite actuellement l’événement.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">touchPointID</codeph></entry><entry class="- topic/entry ">Numéro d’identification unique (sous la forme d’une valeur int) affecté au point tactile.</entry></row></tbody></tgroup></adobetable>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:touchRollOver" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.touchRollOver</linktext></link></related-links></apiValue><apiValue id="flash.events:TouchEvent:TOUCH_TAP" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">TOUCH_TAP</apiName><shortdesc class="- topic/shortdesc ">
     Définit la valeur de la propriété type d’un objet d’événement tactile TOUCH_TAP.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">touchTap</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet d’événement <codeph class="+ topic/ph pr-d/codeph ">TOUCH_TAP</codeph>.
	 
	 <p class="- topic/p ">L’objet TouchEvent distribué possède les propriétés suivantes :</p>
	 
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">altKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> si la touche Alt est activée (Windows ou Linux).</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">commandKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> sur le Mac si la touche Commande est activée ; <codeph class="+ topic/ph pr-d/codeph ">false</codeph> si elle est désactivée. Toujours <codeph class="+ topic/ph pr-d/codeph ">false</codeph> sur Windows.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">controlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> si la touche Ctrl ou Contrôle est activée ; <codeph class="+ topic/ph pr-d/codeph ">false</codeph> si elle est désactivée.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">ctrlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> sous Windows ou Linux si la touche Ctrl est enfoncée. <codeph class="+ topic/ph pr-d/codeph ">true</codeph> sur Mac si la touche Ctrl ou la touche Commande est activée. Sinon, la valeur <codeph class="+ topic/ph pr-d/codeph ">false</codeph> est renvoyée.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">L’objet qui traite activement l’objet Event avec un écouteur d’événements.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">eventPhase</codeph></entry><entry class="- topic/entry ">Phase actuelle du flux d’événements.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">isRelatedObjectInaccessible</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> si la propriété relatedObject est définie sur <codeph class="+ topic/ph pr-d/codeph ">null</codeph> conformément aux règles du sandbox de sécurité.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">localX</codeph></entry><entry class="- topic/entry ">Coordonnée horizontale à laquelle l’événement s’est produit par rapport au sprite conteneur.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">localY</codeph></entry><entry class="- topic/entry ">Coordonnée verticale à laquelle l’événement s’est produit par rapport au sprite conteneur.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">pressure</codeph></entry><entry class="- topic/entry ">Valeur comprise entre <codeph class="+ topic/ph pr-d/codeph ">0.0</codeph> et <codeph class="+ topic/ph pr-d/codeph ">1.0</codeph> qui indique l’intensité du contact avec le périphérique. Si le périphérique ne prend pas en charge la détection de la pression, la valeur est <codeph class="+ topic/ph pr-d/codeph ">1.0</codeph>.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">relatedObject</codeph></entry><entry class="- topic/entry ">Référence à un objet de la liste d’affichage qui est associé à l’événement.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">shiftKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> si la touche Maj est activée ; <codeph class="+ topic/ph pr-d/codeph ">false</codeph> si elle ne l’est pas.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">sizeX</codeph></entry><entry class="- topic/entry ">Largeur de la surface de contact.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">sizeY</codeph></entry><entry class="- topic/entry ">Hauteur de la surface de contact.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">stageX</codeph></entry><entry class="- topic/entry ">Coordonnée horizontale à laquelle l’événement s’est produit, par rapport aux coordonnées globales de la scène.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">stageY</codeph></entry><entry class="- topic/entry ">Coordonnée verticale à laquelle l’événement s’est produit, par rapport aux coordonnées globales de la scène.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Occurrence d’InteractiveObject sous le dispositif de pointage. La propriété <codeph class="+ topic/ph pr-d/codeph ">target</codeph> ne correspond pas toujours à l’objet de la liste d’affichage qui est associé à l’écouteur d’événement. Utilisez la propriété <codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph> pour accéder à l’objet de la liste d’affichage qui traite actuellement l’événement.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">touchPointID</codeph></entry><entry class="- topic/entry ">Numéro d’identification unique (sous la forme d’une valeur int) affecté au point tactile.</entry></row></tbody></tgroup></adobetable>
	 
	 </apiDesc><example conref="..\ui\examples\Multitouch_inputMode.as" class="- topic/example "> L’exemple suivant affiche un message lorsque l’utilisateur appuie sur le carré dessiné sur mySprite sur un écran tactile :
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
Multitouch.inputMode=MultitouchInputMode.TOUCH_POINT;

var mySprite:Sprite = new Sprite();
var myTextField:TextField = new TextField();

mySprite.graphics.beginFill(0x336699);
mySprite.graphics.drawRect(0,0,40,40);
addChild(mySprite);

mySprite.addEventListener(TouchEvent.TOUCH_TAP, taphandler);

function taphandler(e:TouchEvent): void {
    myTextField.text = "I've been tapped";
    myTextField.y = 50;
    addChild(myTextField);
}
</codeblock></example></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:touchTap" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.touchTap</linktext></link></related-links></apiValue><apiValue id="flash.events:TouchEvent:altKey:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">altKey</apiName><shortdesc class="- topic/shortdesc ">
    Indique si la touche Alt est active (true) ou non (false).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><internal>Reserved in case Desktop Player wants to capture this key in a future implementation.
	The Option key modifier on Macintosh system must be represented using this key modifier. So far, it seems
    only the Windows version is hooked up.
	 
	</internal></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Indique si la touche Alt est active (<codeph class="+ topic/ph pr-d/codeph ">true</codeph>) ou non (<codeph class="+ topic/ph pr-d/codeph ">false</codeph>). Pris en charge uniquement pour les systèmes d’exploitation Windows et Linux.
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:TouchEvent:commandKey:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">commandKey</apiName><shortdesc class="- topic/shortdesc ">
		Indique si la touche Commande est activée (Mac uniquement).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		Indique si la touche Commande est activée (Mac uniquement). 
		
		<p class="- topic/p ">Sous Mac OS, la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">commandKey</codeph> est la même valeur que la propriété <codeph class="+ topic/ph pr-d/codeph ">ctrlKey</codeph>. Cette propriété est toujours définie sur false sous Windows ou Linux.</p>
		
		</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:TouchEvent:controlKey:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">controlKey</apiName><shortdesc class="- topic/shortdesc ">
		Indique si la touche Contrôle et activée sous Mac et si la touche Ctrl est activée sous Windows ou Linux.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		Indique si la touche Contrôle et activée sous Mac et si la touche Ctrl est activée sous Windows ou Linux.
		
		</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:TouchEvent:ctrlKey:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">ctrlKey</apiName><shortdesc class="- topic/shortdesc ">
	Sous Windows ou Linux, indique si la touche Ctrl est activée (true) ou non (false).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Sous Windows ou Linux, indique si la touche Ctrl est activée (<codeph class="+ topic/ph pr-d/codeph ">true</codeph>) ou non (<codeph class="+ topic/ph pr-d/codeph ">false</codeph>). Sous Macintosh, indique si la touche Contrôle ou la touche Commande est activée.
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:TouchEvent:isPrimaryTouchPoint:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">isPrimaryTouchPoint</apiName><shortdesc class="- topic/shortdesc ">
	Indique si le premier point de contact est associé aux événements de souris.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Indique si le premier point de contact est associé aux événements de souris.
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.events.xml#MouseEvent" class="- topic/link "><linktext class="- topic/linktext ">flash.events.MouseEvent</linktext></link></related-links></apiValue><apiValue id="flash.events:TouchEvent:isRelatedObjectInaccessible:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">isRelatedObjectInaccessible</apiName><shortdesc class="- topic/shortdesc ">
	 Si la valeur est true, la propriété relatedObject est définie sur null pour des raisons liées aux sandbox de sécurité.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Si la valeur est <codeph class="+ topic/ph pr-d/codeph ">true</codeph>, la propriété <codeph class="+ topic/ph pr-d/codeph ">relatedObject</codeph> est définie sur <codeph class="+ topic/ph pr-d/codeph ">null</codeph> pour des raisons liées aux sandbox de sécurité. Si la valeur nominale de <codeph class="+ topic/ph pr-d/codeph ">relatedObject</codeph> est une référence à un DisplayObject se trouvant dans un autre sandbox, <codeph class="+ topic/ph pr-d/codeph ">relatedObject</codeph> est défini sur <codeph class="+ topic/ph pr-d/codeph ">null</codeph>, à moins qu’il existe une autorisation dans les deux sens dans les limites de ce sandbox. L’autorisation est établie en appelant la méthode <codeph class="+ topic/ph pr-d/codeph ">Security.allowDomain()</codeph> à partir d’un fichier SWF ou en fournissant un fichier de régulation depuis le serveur d’un fichier image, puis en définissant la propriété <codeph class="+ topic/ph pr-d/codeph ">LoaderContext.checkPolicyFile</codeph> lors du chargement de l’image.
	 
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.events.xml#TouchEvent/relatedObject" class="- topic/link "><linktext class="- topic/linktext ">MouseEvent.relatedObject</linktext></link><link href="flash.system.xml#Security/allowDomain()" class="- topic/link "><linktext class="- topic/linktext ">Security.allowDomain()</linktext></link><link href="flash.system.xml#LoaderContext/checkPolicyFile" class="- topic/link "><linktext class="- topic/linktext ">LoaderContext.checkPolicyFile</linktext></link></related-links></apiValue><apiValue id="flash.events:TouchEvent:localX:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">localX</apiName><shortdesc class="- topic/shortdesc ">
	Coordonnée horizontale à laquelle l’événement s’est produit par rapport au sprite conteneur.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Coordonnée horizontale à laquelle l’événement s’est produit par rapport au sprite conteneur.
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:TouchEvent:localY:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">localY</apiName><shortdesc class="- topic/shortdesc ">
	Coordonnée verticale à laquelle l’événement s’est produit par rapport au sprite conteneur.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Coordonnée verticale à laquelle l’événement s’est produit par rapport au sprite conteneur.
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:TouchEvent:pressure:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">pressure</apiName><shortdesc class="- topic/shortdesc ">
	Valeur comprise entre 0.0 et 1.0 qui indique l’intensité du contact avec le périphérique.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Valeur comprise entre <codeph class="+ topic/ph pr-d/codeph ">0.0</codeph> et <codeph class="+ topic/ph pr-d/codeph ">1.0</codeph> qui indique l’intensité du contact avec le périphérique. Si le périphérique ne prend pas en charge la détection de la pression, la valeur est <codeph class="+ topic/ph pr-d/codeph ">1.0</codeph>.
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:TouchEvent:relatedObject:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">relatedObject</apiName><shortdesc class="- topic/shortdesc ">
	Référence à un objet de la liste d’affichage qui est associé à l’événement.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.display:InteractiveObject</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Référence à un objet de la liste d’affichage qui est associé à l’événement. Par exemple, lorsqu’un événement <codeph class="+ topic/ph pr-d/codeph ">touchOut</codeph> se produit, <codeph class="+ topic/ph pr-d/codeph ">relatedObject</codeph> représente l’objet de la liste d’affichage sur lequel pointe actuellement le dispositif de pointage. Cette propriété s’applique aux événements <codeph class="+ topic/ph pr-d/codeph ">touchOut</codeph>, <codeph class="+ topic/ph pr-d/codeph ">touchOver</codeph>, <codeph class="+ topic/ph pr-d/codeph ">touchRollOut</codeph> et <codeph class="+ topic/ph pr-d/codeph ">touchRollOver</codeph>.
	<p class="- topic/p ">La valeur de cette propriété peut être <codeph class="+ topic/ph pr-d/codeph ">null</codeph> dans deux cas : s’il n’existe aucun objet associé ou s’il existe un objet associé se trouvant dans un sandbox de sécurité auquel vous n’avez pas accès. Pour savoir dans quel cas vous vous trouvez, utilisez la propriété <codeph class="+ topic/ph pr-d/codeph ">isRelatedObjectInaccessible()</codeph>.</p>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.events.xml#TouchEvent/isRelatedObjectInaccessible" class="- topic/link "><linktext class="- topic/linktext ">TouchEvent.isRelatedObjectInaccessible</linktext></link></related-links></apiValue><apiValue id="flash.events:TouchEvent:shiftKey:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">shiftKey</apiName><shortdesc class="- topic/shortdesc ">
	Indique si la touche Maj est activée (true) ou non (false).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Indique si la touche Maj est activée (<codeph class="+ topic/ph pr-d/codeph ">true</codeph>) ou non (<codeph class="+ topic/ph pr-d/codeph ">false</codeph>).
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:TouchEvent:sizeX:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">sizeX</apiName><shortdesc class="- topic/shortdesc ">
	Largeur de la surface de contact.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Largeur de la surface de contact.
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:TouchEvent:sizeY:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">sizeY</apiName><shortdesc class="- topic/shortdesc ">
	Hauteur de la surface de contact.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Hauteur de la surface de contact.
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:TouchEvent:stageX:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">stageX</apiName><shortdesc class="- topic/shortdesc ">
	Coordonnée horizontale à laquelle l’événement s’est produit, par rapport aux coordonnées globales de la scène.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Coordonnée horizontale à laquelle l’événement s’est produit, par rapport aux coordonnées globales de la scène. Cette propriété est calculée lorsque la propriété <codeph class="+ topic/ph pr-d/codeph ">localX</codeph> est définie.
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:TouchEvent:stageY:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">stageY</apiName><shortdesc class="- topic/shortdesc ">
	Coordonnée verticale à laquelle l’événement s’est produit, par rapport aux coordonnées globales de la scène.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Coordonnée verticale à laquelle l’événement s’est produit, par rapport aux coordonnées globales de la scène. Cette propriété est calculée lorsque la propriété <codeph class="+ topic/ph pr-d/codeph ">localY</codeph> est définie.
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:TouchEvent:touchPointID:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">touchPointID</apiName><shortdesc class="- topic/shortdesc ">
	Numéro d’identification unique (sous la forme d’une valeur int) affecté au point tactile.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">int</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Numéro d’identification unique (sous la forme d’une valeur int) affecté au point tactile.
	
	</apiDesc><example conref="examples\TouchExample.touchPointID.as" class="- topic/example ">  L’exemple suivant définit une variable <codeph class="+ topic/ph pr-d/codeph ">touchMoveID</codeph> pour vérifier si valeur <codeph class="+ topic/ph pr-d/codeph ">touchPointID</codeph> est correcte avant de répondre à un événement de mouvement tactile. Dans le cas contraire, les autres actions tactiles déclenchent également le gestionnaire d’événement. Notez que les écouteurs pour les phases de mouvement et de fin se trouvent sur la scène et non sur l’objet d’affichage. La scène écoute les phases de mouvement ou de fin au cas où l’action tactile de l’utilisateur aille au-delà des limites de l’objet d’affichage.
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
Multitouch.inputMode = MultitouchInputMode.TOUCH_POINT; 

var mySprite:Sprite = new Sprite(); 
mySprite.graphics.beginFill(0x336699); 
mySprite.graphics.drawRect(0,0,40,40); 
addChild(mySprite); 

var myTextField:TextField = new TextField(); 
addChild(myTextField); 
myTextField.width = 200; 
myTextField.height = 20; 

var touchMoveID:int = 0; 
 
mySprite.addEventListener(TouchEvent.TOUCH_BEGIN, onTouchBegin); 
function onTouchBegin(event:TouchEvent) { 
    if(touchMoveID != 0) { 
        myTextField.text = "already moving. ignoring new touch";     
        return; 
    } 
    touchMoveID = event.touchPointID; 
 
    myTextField.text = "touch begin" + event.touchPointID; 
    stage.addEventListener(TouchEvent.TOUCH_MOVE, onTouchMove); 
    stage.addEventListener(TouchEvent.TOUCH_END, onTouchEnd); 
} 
function onTouchMove(event:TouchEvent) { 
    if(event.touchPointID != touchMoveID) { 
        myTextField.text = "ignoring unrelated touch"; 
        return; 
    } 
    mySprite.x = event.stageX; 
    mySprite.y = event.stageY; 
    myTextField.text = "touch move" + event.touchPointID; 
} 
function onTouchEnd(event:TouchEvent) { 
    if(event.touchPointID != touchMoveID) { 
        myTextField.text = "ignoring unrelated touch end"; 
        return; 
    } 
    touchMoveID = 0; 
    stage.removeEventListener(TouchEvent.TOUCH_MOVE, onTouchMove); 
    stage.removeEventListener(TouchEvent.TOUCH_END, onTouchEnd); 
    myTextField.text = "touch end" + event.touchPointID; 
}
</codeblock></example></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.events:ServerSocketConnectEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">ServerSocketConnectEvent</apiName><shortdesc class="- topic/shortdesc ">
 Un objet ServerSocket distribue un objet ServerSocketConnectEvent lorsqu’un client tente de se connecter au socket du serveur.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Un objet ServerSocket distribue un objet ServerSocketConnectEvent lorsqu’un client tente de se connecter au socket du serveur.
 
 <p class="- topic/p ">La propriété <codeph class="+ topic/ph pr-d/codeph ">socket</codeph> de l’objet ServerSocketConnectEvent fournit l’objet Socket devant être utilisé dans les communications suivantes entre le serveur et le client. Pour refuser la connexion, appelez la méthode <codeph class="+ topic/ph pr-d/codeph ">close()</codeph> de l’objet Socket.</p>
 
 </apiDesc><example conref="examples\ServerSocketConnectEventExample.as" class="- topic/example "/></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.net.xml#ServerSocket" class="- topic/link "><linktext class="- topic/linktext ">Classe ServerSocket</linktext></link></related-links><apiConstructor id="flash.events:ServerSocketConnectEvent:ServerSocketConnectEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">ServerSocketConnectEvent</apiName><shortdesc class="- topic/shortdesc ">
     Crée un objet ServerSocketConnectEvent qui contient des informations sur une connexion client.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">type</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc "> Type de l’événement. Doit être : <codeph class="+ topic/ph pr-d/codeph ">ServerSocketConnectEvent.CONNECT</codeph>.
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">bubbles</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc "> Détermine si l’objet Event prend part à la phase de propagation du flux d’événements. Toujours <codeph class="+ topic/ph pr-d/codeph ">false</codeph> 
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">cancelable</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Détermine si l’objet Event peut être annulé. Toujours <codeph class="+ topic/ph pr-d/codeph ">false</codeph>.
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">socket</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.net:Socket</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Socket pour la nouvelle connexion..
     </apiDesc></apiParam></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Crée un objet ServerSocketConnectEvent qui contient des informations sur une connexion client.
     
     </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="flash.events:ServerSocketConnectEvent:clone" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">clone</apiName><shortdesc class="- topic/shortdesc ">
    Crée une copie de l’objet ServerSocketConnectEvent et définit la valeur de chaque propriété de sorte qu’elle corresponde à la valeur d’origine.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Nouvel objet DNSResolverEvent dont les propriétés ont la même valeur que celles de l’objet d’origine.
    </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.events:Event</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Crée une copie de l’objet ServerSocketConnectEvent et définit la valeur de chaque propriété de sorte qu’elle corresponde à la valeur d’origine. 
    
    </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.events:ServerSocketConnectEvent:toString" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">toString</apiName><shortdesc class="- topic/shortdesc ">
    Renvoie une chaîne répertoriant toutes les propriétés de l’objet ServerSocketConnectEvent.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Chaîne répertoriant toutes les propriétés de l’objet <codeph class="+ topic/ph pr-d/codeph ">ServerSocketConnectEvent</codeph>.
    </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Renvoie une chaîne répertoriant toutes les propriétés de l’objet ServerSocketConnectEvent. 
    
    <p class="- topic/p ">La chaîne est écrite au format suivant :</p>
    <p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">[ServerSocketConnectEvent type=<i class="+ topic/ph hi-d/i ">valeur</i> bubbles=<i class="+ topic/ph hi-d/i ">valeur</i> cancelable=<i class="+ topic/ph hi-d/i ">valeur</i> socket=<i class="+ topic/ph hi-d/i ">valeur</i>]</codeph></p>
    
    </apiDesc></apiOperationDetail></apiOperation><apiValue id="flash.events:ServerSocketConnectEvent:CONNECT" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">CONNECT</apiName><shortdesc class="- topic/shortdesc ">
	 Définit la valeur de la propriété type d’un objet d’événement ServerSocketConnectEvent.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">connect</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Distribué par un objet ServerSocket lors de la réception d’une connexion client.
	 
     </apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet d’événement <codeph class="+ topic/ph pr-d/codeph ">ServerSocketConnectEvent</codeph>. 
	 
	 <p class="- topic/p ">Les propriétés de cet événement sont les suivantes :</p>
	 
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Cet objet ServerSocket.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Cet objet ServerSocket.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">socket</codeph></entry><entry class="- topic/entry ">Objet Socket représentant la nouvelle connexion.</entry></row></tbody></tgroup></adobetable>
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:ServerSocketConnectEvent:socket:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">socket</apiName><shortdesc class="- topic/shortdesc ">
    Socket correspondant à la nouvelle connexion.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.net:Socket</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Socket correspondant à la nouvelle connexion.
    
    <p class="- topic/p ">Utilisez cet objet Socket pour toutes les communications avec le client. Votre application est chargée de maintenir une référence à l’objet Socket. Dans le cas contraire, l’objet peut être nettoyé et détruit par le moteur d’exécution sans avertissement.</p>
    
    </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.events:SyncEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">SyncEvent</apiName><shortdesc class="- topic/shortdesc ">
 Un objet SharedObject représentant un objet partagé distant distribue un objet SyncEvent lorsque l’objet partagé distant a été mis à jour par le serveur.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><internal>includeExample examples\SyncEventExample.as -noswf
 
 </internal></asCustoms></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Objets Event associés aux événements SyncEvent.
 </apiTipText></apiTipTexts><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Un objet SharedObject représentant un objet partagé distant distribue un objet SyncEvent lorsque l’objet partagé distant a été mis à jour par le serveur. Il n’existe qu’un seul type d’événement <codeph class="+ topic/ph pr-d/codeph ">sync</codeph> : <codeph class="+ topic/ph pr-d/codeph ">SyncEvent.SYNC</codeph>.
 
 </apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.net.xml#SharedObject" class="- topic/link "><linktext class="- topic/linktext ">Classe SharedObject</linktext></link></related-links><adobeApiEvent id="flash.events:SyncEvent:SYNC_sync" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">sync</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:SyncEvent:SYNC</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:SyncEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.net.xml#SharedObject/event:sync" class="- topic/link "><linktext class="- topic/linktext ">flash.net.SharedObject.sync</linktext></link></related-links></adobeApiEvent><apiConstructor id="flash.events:SyncEvent:SyncEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">SyncEvent</apiName><shortdesc class="- topic/shortdesc ">
	 Crée un objet événement contenant des informations sur les événements sync.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">type</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Type de l’événement. Les écouteurs d’événement peuvent accéder à cette information par le biais de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> héritée. Il n’existe qu’un seul type d’événement sync : <codeph class="+ topic/ph pr-d/codeph ">SyncEvent.SYNC</codeph>.
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">bubbles</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Détermine si l’objet Event prend part à la phase de propagation du flux d’événements. Les écouteurs d’événement peuvent accéder à cette information par le biais de la propriété <codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph> héritée. 
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">cancelable</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Détermine si l’objet Event peut être annulé. Les écouteurs d’événement peuvent accéder à cette information par le biais de la propriété <codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph> héritée.
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">changeList</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Array</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Tableau d’objets décrivant la synchronisation avec l’objet SharedObject distant. Les écouteurs d’événement peuvent accéder à cet objet par le biais de la propriété <codeph class="+ topic/ph pr-d/codeph ">changeList</codeph>.
	 
	 </apiDesc></apiParam><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Constructeur associé aux objets SyncEvent.
     </apiTipText></apiTipTexts></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Crée un objet événement contenant des informations sur les événements <codeph class="+ topic/ph pr-d/codeph ">sync</codeph>. Les objets Event sont transmis en tant que paramètres aux écouteurs d’événements.
	 
	 </apiDesc></apiConstructorDetail><related-links class="- topic/related-links "><link href="flash.events.xml#SyncEvent/changeList" class="- topic/link "><linktext class="- topic/linktext ">changeList</linktext></link></related-links></apiConstructor><apiOperation id="flash.events:SyncEvent:clone" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">clone</apiName><shortdesc class="- topic/shortdesc ">
	 Crée une copie de l’objet SyncEvent et définit la valeur de chaque propriété de sorte qu’elle corresponde à la valeur d’origine.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Nouvel objet SyncEvent dont les propriétés ont la même valeur que celles de l’objet d’origine.
	  
	  </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.events:Event</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Crée une copie de l’objet SyncEvent et définit la valeur de chaque propriété de sorte qu’elle corresponde à la valeur d’origine. 
	 
	 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.events:SyncEvent:toString" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">toString</apiName><shortdesc class="- topic/shortdesc ">
	 Renvoie une chaîne répertoriant toutes les propriétés de l’objet SyncEvent.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Chaîne répertoriant toutes les propriétés de l’objet SyncEvent.
	  
	  </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Renvoie une chaîne répertoriant toutes les propriétés de l’objet SyncEvent. La chaîne est écrite au format suivant :
	 <p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">[SyncEvent type=<i class="+ topic/ph hi-d/i ">valeur</i> bubbles=<i class="+ topic/ph hi-d/i ">valeur</i> cancelable=<i class="+ topic/ph hi-d/i ">valeur</i> list=<i class="+ topic/ph hi-d/i ">valeur</i>]</codeph></p>
	 
	 </apiDesc></apiOperationDetail></apiOperation><apiValue id="flash.events:SyncEvent:SYNC" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">SYNC</apiName><shortdesc class="- topic/shortdesc ">
     Définit la valeur de la propriété type d’un objet événement sync.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">sync</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet événement <codeph class="+ topic/ph pr-d/codeph ">sync</codeph>.
	 <p class="- topic/p ">Les propriétés de cet événement sont les suivantes :</p>
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">L’objet qui traite activement l’objet Event avec un écouteur d’événements.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">changeList</codeph></entry><entry class="- topic/entry ">Tableau associé à des propriétés décrivant son état.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">occurrence SharedObject qui a été mise à jour par le serveur.</entry></row></tbody></tgroup></adobetable>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#SharedObject/event:sync" class="- topic/link "><linktext class="- topic/linktext ">flash.net.SharedObject.sync</linktext></link></related-links></apiValue><apiValue id="flash.events:SyncEvent:changeList:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">changeList</apiName><shortdesc class="- topic/shortdesc ">
     Tableau d’objets ; chaque objet contient des propriétés qui décrivent les membres modifiés d’un objet partagé distant.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Array</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Tableau d’objets ; chaque objet contient des propriétés qui décrivent les membres modifiés d’un objet partagé distant. Les propriétés de chaque objet sont <codeph class="+ topic/ph pr-d/codeph ">code</codeph>, <codeph class="+ topic/ph pr-d/codeph ">name</codeph> et <codeph class="+ topic/ph pr-d/codeph ">oldValue</codeph>. 
     <p class="- topic/p ">Lorsque vous connectez d’abord un objet partagé distant permanent localement et/ou sur le serveur, toutes les propriétés de cet objet sont définies sur des chaînes vides.</p><p class="- topic/p ">Sinon, Flash définit <codeph class="+ topic/ph pr-d/codeph ">code</codeph> sur <codeph class="+ topic/ph pr-d/codeph ">"clear"</codeph>, <codeph class="+ topic/ph pr-d/codeph ">"success"</codeph>, <codeph class="+ topic/ph pr-d/codeph ">"reject"</codeph>, <codeph class="+ topic/ph pr-d/codeph ">"change"</codeph> ou <codeph class="+ topic/ph pr-d/codeph ">"delete"</codeph> . </p>
     <ul class="- topic/ul "><li class="- topic/li ">La valeur <codeph class="+ topic/ph pr-d/codeph ">"clear"</codeph> signifie soit que vous avez réussi à vous connecter à un objet partagé distant qui n’est pas persistant sur le serveur ou sur le client, ou que toutes les propriétés de l’objet ont été supprimées, par exemple, lorsque les copies client et serveur de l’objet sont désynchronisées à un point tel que Flash Player resynchronise l’objet client avec l’objet serveur. Dans le dernier cas, <codeph class="+ topic/ph pr-d/codeph ">SyncEvent.SYNC</codeph> est distribué et la valeur « code » est définie sur <codeph class="+ topic/ph pr-d/codeph ">"change"</codeph>. </li><li class="- topic/li ">La valeur <codeph class="+ topic/ph pr-d/codeph ">"success"</codeph> indique que le client a modifié l’objet partagé. </li><li class="- topic/li ">La valeur <codeph class="+ topic/ph pr-d/codeph ">"reject"</codeph> signifie que le client a tenté de modifier l’objet mais qu’il a échoué ; au lieu de cela, un autre client a modifié l’objet. </li><li class="- topic/li ">La valeur <codeph class="+ topic/ph pr-d/codeph ">"change"</codeph> signifie qu’un autre client a modifié l’objet ou que le serveur a resynchronisé l’objet. </li><li class="- topic/li ">La valeur <codeph class="+ topic/ph pr-d/codeph ">"delete"</codeph> signifie que l’attribut a été supprimé. </li></ul>
     <p class="- topic/p ">La propriété <codeph class="+ topic/ph pr-d/codeph ">name</codeph> contient le nom de la propriété qui a été modifiée.</p>
     <p class="- topic/p ">La propriété <codeph class="+ topic/ph pr-d/codeph ">oldValue</codeph> contient l’ancienne valeur de la propriété modifiée. Ce paramètre est <codeph class="+ topic/ph pr-d/codeph ">null</codeph> sauf si la valeur du code est <codeph class="+ topic/ph pr-d/codeph ">"reject"</codeph> ou <codeph class="+ topic/ph pr-d/codeph ">"change"</codeph>.</p>
     
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetConnection" class="- topic/link "><linktext class="- topic/linktext ">Classe NetConnection</linktext></link><link href="flash.net.xml#NetStream" class="- topic/link "><linktext class="- topic/linktext ">Classe NetStream</linktext></link></related-links></apiValue></apiClassifier><apiClassifier languages="" id="flash.events:KeyboardEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">KeyboardEvent</apiName><shortdesc class="- topic/shortdesc ">
 Un objet KeyboardEvent est distribué à la suite d’une saisie utilisateur via un clavier.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Objets event associés aux événements Keyboard.
 </apiTipText></apiTipTexts><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Un objet KeyboardEvent est distribué à la suite d’une saisie utilisateur via un clavier. Il existe deux types d’événements clavier : <codeph class="+ topic/ph pr-d/codeph ">KeyboardEvent.KEY_DOWN</codeph> et <codeph class="+ topic/ph pr-d/codeph ">KeyboardEvent.KEY_UP</codeph>
 
 <p class="- topic/p ">Les correspondances entre les touches et des caractères spécifiques sont fonction du périphérique et du système d’exploitation de l’utilisateur. Choisissez donc le type d’événement TextEvent pour traiter les saisies de caractères.</p>
 
 <p class="- topic/p ">Pour écouter globalement les événements de touche, écoutez, sur la scène, la phase de capture et la phase cible ou la phase de propagation vers le haut (bubbling).</p>
 
 </apiDesc><example conref="examples\KeyboardEventExample.as" class="- topic/example "> L’exemple suivant utilise la classe <codeph class="+ topic/ph pr-d/codeph ">KeyboardEventExample</codeph> pour montrer les événements clavier et leurs fonctions d’écouteur. L’exemple exécute les tâches suivantes :
 <ol class="- topic/ol "><li class="- topic/li ">Il créé une nouvelle occurrence de Sprite nommée <codeph class="+ topic/ph pr-d/codeph ">child</codeph>.</li><li class="- topic/li ">Il déclare les propriétés à utiliser pour paramétrer la taille et la couleur d’arrière-plan d’un carré.</li><li class="- topic/li ">A l’aide des méthodes de Sprite, il trace un carré bleu clair qui apparaît sur la scène aux coordonnées par défaut (0,0) en appelant à méthode <codeph class="+ topic/ph pr-d/codeph ">addChild()</codeph>.</li><li class="- topic/li ">Il ajoute un événement mouse et deux écouteurs d’événements de type keyboard :
     <ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">click</codeph>/<codeph class="+ topic/ph pr-d/codeph ">clickHandler</codeph> qui est distribué lorsque vous cliquez sur le carré pour définir le focus sur le sprite <codeph class="+ topic/ph pr-d/codeph ">child</codeph> de façon à ce qu’il puisse écouter des événements keyboard.</li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">keyDown</codeph> / <codeph class="+ topic/ph pr-d/codeph ">keyDownHandler</codeph> distribué à chaque appui de l’utilisateur sur une touche. La méthode d’abonné imprime des informations sur l’événement à l’aide de l’instruction <codeph class="+ topic/ph pr-d/codeph ">trace()</codeph>.</li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">keyUp</codeph> / <codeph class="+ topic/ph pr-d/codeph ">keyUpHandler</codeph> distribué chaque fois que l’utilisateur relâche une touche.</li></ul></li></ol>
 
 <p class="- topic/p ">Lorsque vous testez cet exemple, vous devez cliquer sur le carré d’abord pour que les événements keyboard fonctionnent.</p>
 <p product="flash" class="- topic/p ">De plus, si vous utilisez la commande Test Movie dans Flash, l’interface de programmation peut répondre à certaines touches au lieu des écouteurs d’événements associés au sprite enfant.</p>
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
package {
    import flash.display.Sprite;
    import flash.display.DisplayObject;
    import flash.events.*;

    public class KeyboardEventExample extends Sprite {
        private var child:Sprite = new Sprite();
        private var bgColor:uint = 0x00CCFF;
        private var size:uint = 80;

        public function KeyboardEventExample() {
            child.graphics.beginFill(bgColor);
            child.graphics.drawRect(0, 0, size, size);
            child.graphics.endFill();
            addChild(child);
            child.addEventListener(MouseEvent.CLICK, clickHandler);
            child.addEventListener(KeyboardEvent.KEY_DOWN, keyDownHandler);
            child.addEventListener(KeyboardEvent.KEY_UP, keyUpHandler);
            
        }

        private function clickHandler(event:MouseEvent):void {
            stage.focus = child;
        }

        private function keyDownHandler(event:KeyboardEvent):void {
            trace("keyDownHandler: " + event.keyCode);
            trace("ctrlKey: " + event.ctrlKey);
            trace("keyLocation: " + event.keyLocation);
            trace("shiftKey: " + event.shiftKey);
            trace("altKey: " + event.altKey);

        }

        private function keyUpHandler(event:KeyboardEvent):void {
            trace("keyUpHandler: " + event.keyCode);
        }
        
        
    }
}
</codeblock></example></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.events.xml#KeyboardEvent/KEY_DOWN" class="- topic/link "><linktext class="- topic/linktext ">KEY_DOWN</linktext></link><link href="flash.events.xml#KeyboardEvent/KEY_UP" class="- topic/link "><linktext class="- topic/linktext ">KEY_UP</linktext></link><link href="flash.ui.xml#KeyLocation" class="- topic/link "><linktext class="- topic/linktext ">KeyLocation</linktext></link></related-links><adobeApiEvent id="flash.events:KeyboardEvent:KEY_DOWN_keyDown" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">keyDown</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:KeyboardEvent:KEY_DOWN</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:KeyboardEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:keyDown" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.keyDown</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:KeyboardEvent:KEY_UP_keyUp" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">keyUp</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:KeyboardEvent:KEY_UP</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:KeyboardEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:keyUp" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.keyUp</linktext></link></related-links></adobeApiEvent><apiConstructor id="flash.events:KeyboardEvent:KeyboardEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">KeyboardEvent</apiName><shortdesc class="- topic/shortdesc ">
	Crée un objet Event contenant des informations spécifiques sur les événements clavier.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">type</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc "> Type de l’événement. Les valeurs possibles sont les suivantes : <codeph class="+ topic/ph pr-d/codeph ">KeyboardEvent.KEY_DOWN</codeph> et <codeph class="+ topic/ph pr-d/codeph ">KeyboardEvent.KEY_UP</codeph>
	
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">bubbles</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">true</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Détermine si l’objet Event prend part à la phase de propagation vers le haut du flux d’événements.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">cancelable</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Détermine si l’objet d’événement peut être annulé.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">charCodeValue</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">uint</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Valeur du code de caractère associé à la touche enfoncée ou relâchée. Les valeurs renvoyées sont des valeurs du clavier anglais. Par exemple, si vous appuyez sur Maj+3, la propriété <codeph class="+ topic/ph pr-d/codeph ">Keyboard.charCode()</codeph> renvoie # sur un clavier japonais, ce qui correspond à ce qu’elle renvoie sur un clavier anglais.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">keyCodeValue</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">uint</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Valeur de code correspondant à la touche enfoncée ou relâchée.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">keyLocationValue</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">uint</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Emplacement de la touche sur le clavier.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ctrlKeyValue</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Sur Windows, indique si la touche Ctrl est activée. Sous Mac, indique si la touche Ctrl ou la touche Commande est activée.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">altKeyValue</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Indique si la touche de modification Alt est activée (Windows uniquement).
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">shiftKeyValue</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Indique si la touche de modification Maj est activée.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">controlKeyValue</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Indique si la touche Contrôle et activée sous Mac, et si la touche Ctrl ou Contrôle est activée sous Windows et Linux.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">commandKeyValue</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Indique si la touche Commande est activée (Mac uniquement).
	 
	</apiDesc></apiParam><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Constructeur associé aux objets KeyboardEvent.
	</apiTipText></apiTipTexts></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Crée un objet Event contenant des informations spécifiques sur les événements clavier. Les objets Event sont transmis en tant que paramètres aux écouteurs d’événements.
	
	</apiDesc></apiConstructorDetail><related-links class="- topic/related-links "><link href="flash.events.xml#KeyboardEvent/KEY_DOWN" class="- topic/link "><linktext class="- topic/linktext ">KEY_DOWN</linktext></link><link href="flash.events.xml#KeyboardEvent/KEY_UP" class="- topic/link "><linktext class="- topic/linktext ">KEY_UP</linktext></link><link href="flash.events.xml#KeyboardEvent/charCode" class="- topic/link "><linktext class="- topic/linktext ">Keyboard.charCode</linktext></link></related-links></apiConstructor><apiOperation id="flash.events:KeyboardEvent:clone" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">clone</apiName><shortdesc class="- topic/shortdesc ">
	Crée une copie de l’objet KeyboardEvent et définit la valeur de chaque propriété de sorte qu’elle corresponde à la valeur d’origine.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Nouvel objet KeyboardEvent dont les propriétés ont la même valeur que celles de l’objet d’origine.
	 
	 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.events:Event</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Crée une copie de l’objet KeyboardEvent et définit la valeur de chaque propriété de sorte qu’elle corresponde à la valeur d’origine.
	
	</apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.events:KeyboardEvent:toString" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">toString</apiName><shortdesc class="- topic/shortdesc ">
	Renvoie une chaîne répertoriant toutes les propriétés de l’objet KeyboardEvent.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Chaîne répertoriant toutes les propriétés de l’objet KeyboardEvent.
	 
	 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Renvoie une chaîne répertoriant toutes les propriétés de l’objet KeyboardEvent. La chaîne est écrite au format suivant :
	<p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">[KeyboardEvent type=<i class="+ topic/ph hi-d/i ">valeur</i> bubbles=<i class="+ topic/ph hi-d/i ">valeur</i> cancelable=<i class="+ topic/ph hi-d/i ">valeur</i> ... shiftKey=<i class="+ topic/ph hi-d/i ">valeur</i>]</codeph></p>
	
	</apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.events:KeyboardEvent:updateAfterEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">updateAfterEvent</apiName><shortdesc class="- topic/shortdesc ">
	Indique que l’affichage doit être rendu à la fin du traitement de cet événement, si la liste d’affichage a été modifiée
	
	</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Indique que l’affichage doit être rendu à la fin du traitement de cet événement, si la liste d’affichage a été modifiée
	
	</apiDesc></apiOperationDetail></apiOperation><apiValue id="flash.events:KeyboardEvent:KEY_DOWN" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">KEY_DOWN</apiName><shortdesc class="- topic/shortdesc ">
	La constante ScreenMouseEvent.MOUSE_DOWN définit la valeur de la propriété type d’un objet événement keyDown.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">keyDown</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	La constante <codeph class="+ topic/ph pr-d/codeph ">KeyboardEvent.KEY_DOWN</codeph> définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet événement <codeph class="+ topic/ph pr-d/codeph ">keyDown</codeph>. 
	
	<p class="- topic/p ">Les propriétés de cet événement sont les suivantes :</p>
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> dans AIR, <codeph class="+ topic/ph pr-d/codeph ">false</codeph> dans Flash Player ; dans AIR, l’annulation de cet événement empêche l’insertion du caractère dans un champ de texte.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">charCode</codeph></entry><entry class="- topic/entry ">Valeur du code de caractère associé à la touche enfoncée ou relâchée.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">commandKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> sous Mac si la touche Commande est activée. Autrement, <codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">controlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> sous Windows et Linux si la touche Ctrl est activée. <codeph class="+ topic/ph pr-d/codeph ">true</codeph> sous Mac si la touche Contrôle est activée. Autrement, <codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">ctrlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> sous Windows et Linux si la touche Ctrl est activée. <codeph class="+ topic/ph pr-d/codeph ">true</codeph> sur Mac si la touche Ctrl ou la touche Commande est activée. Sinon, la valeur <codeph class="+ topic/ph pr-d/codeph ">false</codeph> est renvoyée.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">L’objet qui traite activement l’objet Event avec un écouteur d’événements.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">keyCode</codeph></entry><entry class="- topic/entry ">Valeur de code correspondant à la touche enfoncée ou relâchée.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">keyLocation</codeph></entry><entry class="- topic/entry ">Emplacement de la touche sur le clavier.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">shiftKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> si la touche Maj est activée ; <codeph class="+ topic/ph pr-d/codeph ">false</codeph> si elle ne l’est pas.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Occurrence d’InteractiveObject possédant le focus. La propriété <codeph class="+ topic/ph pr-d/codeph ">target</codeph> ne correspond pas toujours à l’objet de la liste d’affichage qui est associé à l’écouteur d’événement. Utilisez la propriété <codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph> pour accéder à l’objet de la liste d’affichage qui traite actuellement l’événement.</entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:keyDown" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.keyDown</linktext></link></related-links></apiValue><apiValue id="flash.events:KeyboardEvent:KEY_UP" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">KEY_UP</apiName><shortdesc class="- topic/shortdesc ">
	La constante KeyboardEvent.KEY_UP définit la valeur de la propriété type d’un objet d’événement keyUp.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">keyUp</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	La constante <codeph class="+ topic/ph pr-d/codeph ">KeyboardEvent.KEY_UP</codeph> définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet d’événement <codeph class="+ topic/ph pr-d/codeph ">keyUp</codeph>. 
	<p class="- topic/p ">Les propriétés de cet événement sont les suivantes :</p>
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">charCode</codeph></entry><entry class="- topic/entry ">Contient la valeur du code de caractère associé à la touche enfoncée ou relâchée.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">commandKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> sous Mac si la touche Commande est activée. Autrement, <codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">controlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> sous Windows et Linux si la touche Ctrl est activée. <codeph class="+ topic/ph pr-d/codeph ">true</codeph> sous Mac si la touche Contrôle est activée. Autrement, <codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">ctrlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> sur Windows si la touche Ctrl est enfoncée. <codeph class="+ topic/ph pr-d/codeph ">true</codeph> sur Mac si la touche Ctrl ou la touche Commande est activée. Sinon, la valeur <codeph class="+ topic/ph pr-d/codeph ">false</codeph> est renvoyée.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">L’objet qui traite activement l’objet Event avec un écouteur d’événements.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">keyCode</codeph></entry><entry class="- topic/entry ">Valeur de code correspondant à la touche enfoncée ou relâchée.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">keyLocation</codeph></entry><entry class="- topic/entry ">Emplacement de la touche sur le clavier.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">shiftKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> si la touche Maj est activée ; <codeph class="+ topic/ph pr-d/codeph ">false</codeph> si elle ne l’est pas.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Occurrence d’InteractiveObject possédant le focus. La propriété <codeph class="+ topic/ph pr-d/codeph ">target</codeph> ne correspond pas toujours à l’objet de la liste d’affichage qui est associé à l’écouteur d’événement. Utilisez la propriété <codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph> pour accéder à l’objet de la liste d’affichage qui traite actuellement l’événement.</entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:keyUp" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.keyUp</linktext></link></related-links></apiValue><apiValue id="flash.events:KeyboardEvent:altKey:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">altKey</apiName><shortdesc class="- topic/shortdesc ">
	Indique si la touche Alt est activée (true) ou non (false) sur Windows ; indique si la touche Option est activée sur Mac OS.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Indique si la touche Alt est activée (<codeph class="+ topic/ph pr-d/codeph ">true</codeph>) ou non (<codeph class="+ topic/ph pr-d/codeph ">false</codeph>) sur Windows ; indique si la touche Option est activée sur Mac OS.
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:KeyboardEvent:charCode:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">charCode</apiName><shortdesc class="- topic/shortdesc ">
	Contient la valeur du code de caractère associé à la touche enfoncée ou relâchée.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">uint</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Contient la valeur du code de caractère associé à la touche enfoncée ou relâchée. Les valeurs renvoyées sont celles du clavier anglais. Si vous appuyez sur Maj + 3, par exemple, la méthode <codeph class="+ topic/ph pr-d/codeph ">charCode</codeph> renvoie # sur un clavier japonais, comme sur un clavier anglais.
	<p class="- topic/p "><b class="+ topic/ph hi-d/b ">Remarque : </b> Lorsqu’un éditeur IME (Input Method Editor) est en cours d’exécution, les codes de caractères renvoyés par <codeph class="+ topic/ph pr-d/codeph ">charCode</codeph> sont incorrects.</p>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.system.xml#IME" class="- topic/link "><linktext class="- topic/linktext ">flash.system.IME</linktext></link></related-links></apiValue><apiValue id="flash.events:KeyboardEvent:commandKey:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">commandKey</apiName><shortdesc class="- topic/shortdesc ">
	Indique si la touche Command est activée (true) ou non (false).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Indique si la touche Command est activée (<codeph class="+ topic/ph pr-d/codeph ">true</codeph>) ou non (<codeph class="+ topic/ph pr-d/codeph ">false</codeph>). Pris en charge pour Mac OS uniquement. Sur Mac OS, la propriété <codeph class="+ topic/ph pr-d/codeph ">commandKey</codeph> a la même valeur que la propriété <codeph class="+ topic/ph pr-d/codeph ">ctrlKey</codeph>.
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:KeyboardEvent:controlKey:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">controlKey</apiName><shortdesc class="- topic/shortdesc ">
	Indique si la touche Ctrl est activée (true) ou non (false).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Indique si la touche Ctrl est activée (<codeph class="+ topic/ph pr-d/codeph ">true</codeph>) ou non (<codeph class="+ topic/ph pr-d/codeph ">false</codeph>). Sous Windows et Linux, cette propriété est également true lorsque la touche Ctrl est activée.
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:KeyboardEvent:ctrlKey:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">ctrlKey</apiName><shortdesc class="- topic/shortdesc ">
	Sous Windows et Linux, indique si la touche Ctrl est activée (true) ou non (false) ; sous Mac OS, indique si la touche Ctrl ou Commande est activée.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Sous Windows et Linux, indique si la touche Ctrl est activée (<codeph class="+ topic/ph pr-d/codeph ">true</codeph>) ou non (<codeph class="+ topic/ph pr-d/codeph ">false</codeph>) ; sous Mac OS, indique si la touche Ctrl ou Commande est activée.
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:KeyboardEvent:keyCode:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">keyCode</apiName><shortdesc class="- topic/shortdesc ">
	Valeur de code correspondant à la touche enfoncée ou relâchée.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">uint</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Valeur de code correspondant à la touche enfoncée ou relâchée.
	<p class="- topic/p "><b class="+ topic/ph hi-d/b ">Remarque : </b> lorsqu’un éditeur IME (Input Method Editor) est en cours d’exécution, les codes de caractères renvoyés par <codeph class="+ topic/ph pr-d/codeph ">keyCode</codeph> sont incorrects.</p>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.system.xml#IME" class="- topic/link "><linktext class="- topic/linktext ">flash.system.IME</linktext></link></related-links></apiValue><apiValue id="flash.events:KeyboardEvent:keyLocation:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">keyLocation</apiName><shortdesc class="- topic/shortdesc ">
	Emplacement de la touche sur le clavier.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">uint</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Emplacement de la touche sur le clavier. Cette propriété vous permet de différencier des touches qui figurent plusieurs fois sur un clavier. Sa valeur vous permet par exemple de faire la différence entre les touches Maj de gauche et de droite : <codeph class="+ topic/ph pr-d/codeph ">KeyLocation.LEFT</codeph> représente la touche de gauche et <codeph class="+ topic/ph pr-d/codeph ">KeyLocation.RIGHT</codeph> celle de droite. Vous pouvez aussi, par exemple distinguer les touches numériques du clavier standard (<codeph class="+ topic/ph pr-d/codeph ">KeyLocation.STANDARD</codeph>) de celles du pavé numérique (<codeph class="+ topic/ph pr-d/codeph ">KeyLocation.NUM_PAD</codeph>).
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:KeyboardEvent:shiftKey:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">shiftKey</apiName><shortdesc class="- topic/shortdesc ">
	Indique si la touche Maj de modification est activée (true) ou non (false).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Indique si la touche de modification Maj est activée (<codeph class="+ topic/ph pr-d/codeph ">true</codeph>) ou non (<codeph class="+ topic/ph pr-d/codeph ">false</codeph>).
	
	</apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.events:NativeWindowDisplayStateEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">NativeWindowDisplayStateEvent</apiName><shortdesc class="- topic/shortdesc ">
 Un objet NativeWindow déclenche des événements de la classe NativeWindowDisplayStateEvent lorsque l’état de l’affichage de la fenêtre change.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Objets event pour des événements NativeWindow qui changent l’état d’affichage de la fenêtre.
 </apiTipText></apiTipTexts><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Un objet NativeWindow déclenche des événements de la classe NativeWindowDisplayStateEvent lorsque l’état de l’affichage de la fenêtre change. Il existe deux types d’événement : 
 <ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">NativeWindowDisplayStateEvent.DISPLAY_STATE_CHANGING</codeph></li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">NativeWindowDisplayStateEvent.DISPLAY_STATE_CHANGE</codeph></li></ul>
 
 </apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.events.xml#NativeWindowDisplayStateEvent/DISPLAY_STATE_CHANGING" class="- topic/link "><linktext class="- topic/linktext ">flash.events.NativeWindowDisplayStateEvent.DISPLAY_STATE_CHANGING</linktext></link><link href="flash.events.xml#NativeWindowDisplayStateEvent/DISPLAY_STATE_CHANGE" class="- topic/link "><linktext class="- topic/linktext ">flash.events.NativeWindowDisplayStateEvent.DISPLAY_STATE_CHANGE</linktext></link></related-links><adobeApiEvent id="flash.events:NativeWindowDisplayStateEvent:DISPLAY_STATE_CHANGE_displayStateChange" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">displayStateChange</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:NativeWindowDisplayStateEvent:DISPLAY_STATE_CHANGE</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:NativeWindowDisplayStateEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Distribué par un objet NativeWindow après la modification de l’état d’affichage.
    
    </apiTipText></apiTipTexts></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#NativeWindow" class="- topic/link "><linktext class="- topic/linktext ">flash.display.NativeWindow</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:NativeWindowDisplayStateEvent:DISPLAY_STATE_CHANGING_displayStateChanging" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">displayStateChanging</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:NativeWindowDisplayStateEvent:DISPLAY_STATE_CHANGING</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:NativeWindowDisplayStateEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Distribué par un objet NativeWindow avant la modification de l’état d’affichage.
    
    </apiTipText></apiTipTexts></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#NativeWindow" class="- topic/link "><linktext class="- topic/linktext ">flash.display.NativeWindow</linktext></link></related-links></adobeApiEvent><apiConstructor id="flash.events:NativeWindowDisplayStateEvent:NativeWindowDisplayStateEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">NativeWindowDisplayStateEvent</apiName><shortdesc class="- topic/shortdesc ">
    Crée un objet Event à l’aide d’informations spécifiques relatives aux événements d’état d’affichage de la fenêtre.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">type</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc "> Type de l’événement. Valeurs possibles :
    <ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">NativeWindowDisplayStateEvent.DISPLAY_STATE_CHANGING</codeph></li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">NativeWindowDisplayStateEvent.DISPLAY_STATE_CHANGE</codeph></li></ul>
    
    </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">bubbles</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">true</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc "> Détermine si l’objet Event prend part à la phase de propagation vers le haut du flux d’événements.
    </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">cancelable</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Détermine si l’objet Event peut être annulé.
    </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">beforeDisplayState</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData "/><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Propriété <codeph class="+ topic/ph pr-d/codeph ">displayState</codeph> avant le changement.
    </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">afterDisplayState</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData "/><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Propriété <codeph class="+ topic/ph pr-d/codeph ">displayState</codeph> après le changement. 
    
    </apiDesc></apiParam></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Crée un objet Event à l’aide d’informations spécifiques relatives aux événements d’état d’affichage de la fenêtre. Les objets Event sont transmis en tant que paramètres aux écouteurs d’événements.
    
    </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="flash.events:NativeWindowDisplayStateEvent:clone" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">clone</apiName><shortdesc class="- topic/shortdesc ">
    Crée une copie de l’objet NativeWindowDisplayStateEvent et définit la valeur de chaque propriété de sorte qu’elle corresponde à la valeur d’origine.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Nouvel objet NativeWindowDisplayStateEvent dont les propriétés ont la même valeur que celles de l’objet d’origine.
    </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.events:Event</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Crée une copie de l’objet NativeWindowDisplayStateEvent et définit la valeur de chaque propriété de sorte qu’elle corresponde à la valeur d’origine.
    
    </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.events:NativeWindowDisplayStateEvent:toString" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">toString</apiName><shortdesc class="- topic/shortdesc ">
    Renvoie une chaîne répertoriant toutes les propriétés de l’objet NativeWindowDisplayStateEvent.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Chaîne répertoriant toutes les propriétés de l’objet NativeWindowDisplayStateEvent.
    </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Renvoie une chaîne répertoriant toutes les propriétés de l’objet NativeWindowDisplayStateEvent. La chaîne présente le format suivant :
    <p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">[NativeWindowDisplayStateEvent type=<i class="+ topic/ph hi-d/i ">valeur</i> bubbles=<i class="+ topic/ph hi-d/i ">valeur</i> cancelable=<i class="+ topic/ph hi-d/i ">valeur</i> beforeDisplayState=<i class="+ topic/ph hi-d/i ">valeur</i> afterDisplayState=<i class="+ topic/ph hi-d/i ">valeur</i>]</codeph></p>
    
    </apiDesc></apiOperationDetail></apiOperation><apiValue id="flash.events:NativeWindowDisplayStateEvent:DISPLAY_STATE_CHANGE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">DISPLAY_STATE_CHANGE</apiName><shortdesc class="- topic/shortdesc ">
    Définit la valeur de la propriété type d’un objet d’événement displayStateChange.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">displayStateChange</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Distribué par un objet NativeWindow après la modification de l’état d’affichage.
    
    </apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet d’événement <codeph class="+ topic/ph pr-d/codeph ">displayStateChange</codeph>. 
    
    <p class="- topic/p ">Les propriétés de cet événement sont les suivantes :</p>
    
    <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriétés</entry><entry class="- topic/entry ">Valeurs</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">afterDisplayState</codeph></entry><entry class="- topic/entry ">Ancien état d’affichage de la fenêtre.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">beforeDisplayState</codeph></entry><entry class="- topic/entry ">Nouvel état d’affichage de la fenêtre.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Occurrence NativeWindow qui vient de changer d’état. 
    </entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry ">N°</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Indique l’objet qui traite activement l’objet Event avec un écouteur d’événements.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; Il n’existe aucun comportement par défaut à annuler.</entry></row></tbody></tgroup></adobetable>
    
    </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#NativeWindow" class="- topic/link "><linktext class="- topic/linktext ">flash.display.NativeWindow</linktext></link></related-links></apiValue><apiValue id="flash.events:NativeWindowDisplayStateEvent:DISPLAY_STATE_CHANGING" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">DISPLAY_STATE_CHANGING</apiName><shortdesc class="- topic/shortdesc ">
    Définit la valeur de la propriété type d’un objet d’événement displayStateChanging.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">displayStateChanging</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Distribué par un objet NativeWindow avant la modification de l’état d’affichage.
    
    </apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet d’événement <codeph class="+ topic/ph pr-d/codeph ">displayStateChanging</codeph>. 
    
    <p class="- topic/p ">Les propriétés de cet événement sont les suivantes :</p>
    
    <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriétés</entry><entry class="- topic/entry ">Valeurs</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">afterDisplayState</codeph></entry><entry class="- topic/entry ">Etat d’affichage de la fenêtre avant le changement en attente.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">beforeDisplayState</codeph></entry><entry class="- topic/entry ">Etat d’affichage de la fenêtre après le changement en attente.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Occurrence NativeWindow qui vient de changer d’état. 
    </entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry ">N°</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Indique l’objet qui traite activement l’objet Event avec un écouteur d’événements.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> ; l’annulation de l’événement empêche la modification.</entry></row></tbody></tgroup></adobetable>
    
    </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#NativeWindow" class="- topic/link "><linktext class="- topic/linktext ">flash.display.NativeWindow</linktext></link></related-links></apiValue><apiValue id="flash.events:NativeWindowDisplayStateEvent:afterDisplayState:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">afterDisplayState</apiName><shortdesc class="- topic/shortdesc ">
     L’état d’affichage de NativeWindow après le changement.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     L’état d’affichage de NativeWindow après le changement.  
     
     <p class="- topic/p ">Si l’événement est <codeph class="+ topic/ph pr-d/codeph ">displayStateChanging</codeph>, l’état de l’affichage n’a pas encore changé ;<codeph class="+ topic/ph pr-d/codeph ">afterDisplayState</codeph> indique le nouvel état de l’affichage si l’événement n’est pas annulé. Si l’événement est <codeph class="+ topic/ph pr-d/codeph ">displayStateChanged</codeph>, <codeph class="+ topic/ph pr-d/codeph ">afterDisplayState</codeph> indique la valeur en cours.</p>
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:NativeWindowDisplayStateEvent:beforeDisplayState:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">beforeDisplayState</apiName><shortdesc class="- topic/shortdesc ">
     L’état d’affichage de NativeWindow avant le changement.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     L’état d’affichage de NativeWindow avant le changement.  
     
     <p class="- topic/p ">Si l’événement est <codeph class="+ topic/ph pr-d/codeph ">displayStateChanging</codeph>, l’état de l’affichage n’a pas encore changé ; <codeph class="+ topic/ph pr-d/codeph ">beforeDisplayState</codeph> reflète l’état actuel de l’affichage de la fenêtre. Si l’événement est <codeph class="+ topic/ph pr-d/codeph ">displayStateChanged</codeph>, <codeph class="+ topic/ph pr-d/codeph ">beforeDisplayState</codeph> indique la valeur précédente.</p>
     
     </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.events:VideoEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">VideoEvent</apiName><shortdesc class="- topic/shortdesc ">
	 Cette classe d’événement indique l’état du rendu vidéo en cours.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="(unsupported)" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Indique l’état du rendu vidéo en cours.
	 </apiTipText></apiTipTexts><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 <p class="- topic/p ">Cette classe d’événement indique l’état du rendu vidéo en cours. Utilisez cet événement dans les buts suivants :</p>
	 <ul class="- topic/ul "><li class="- topic/li ">Pour savoir quand le format d’affichage de la vidéo change ou est initialisé. Utilisez cet événement au lieu d’essayer de connaître les changements de formats. Lorsque vous recevez cet événement, vous pouvez accéder à <codeph class="+ topic/ph pr-d/codeph ">Video.videoSize</codeph> et <codeph class="+ topic/ph pr-d/codeph ">Video.videoHeight</codeph> pour obtenir les dimensions en pixels de la vidéo en cours de lecture.</li><li class="- topic/li ">Pour savoir si la vidéo est décodée via le logiciel ou le processeur graphique. Si la propriété <codeph class="+ topic/ph pr-d/codeph ">status</codeph> renvoie "accelerated", vous devez, dans la mesure du possible, utiliser la classe StageVideo. </li></ul>
	 </apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.events.xml#StageVideoEvent" class="- topic/link "><linktext class="- topic/linktext ">flash.events.StageVideoEvent</linktext></link><link href="flash.events.xml#StageVideoAvailabilityEvent" class="- topic/link "><linktext class="- topic/linktext ">flash.events.StageVideoAvailabilityEvent</linktext></link><link href="flash.display.xml#Stage/stageVideos" class="- topic/link "><linktext class="- topic/linktext ">flash.display.Stage.stageVideos</linktext></link><link href="flash.media.xml#Video" class="- topic/link "><linktext class="- topic/linktext ">flash.media.Video</linktext></link><link href="flash.net.xml#NetStream" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetStream</linktext></link><link href="http://help.adobe.com/en_US/as3/dev/WS5b3ccc516d4fbf351e63e3d118a9b90204-7e1a.html" class="- topic/link "><linktext class="- topic/linktext ">Utilisation de la vidéo</linktext></link></related-links><apiConstructor id="flash.events:VideoEvent:VideoEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">VideoEvent</apiName><shortdesc class="- topic/shortdesc ">
		 Constructeur.
		 
		 </shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="(unsupported)" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">type</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Type d’événement. Les valeurs possibles sont les suivantes : <codeph class="+ topic/ph pr-d/codeph ">VideoEvent.RENDER_STATE</codeph>.
		 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">bubbles</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Indique si l’objet Event prend part à la phase de propagation du flux d’événements.
		 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">cancelable</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Indique s’il est possible d’annuler l’action qui déclenche cet événement.
		 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">status</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">L’état du rendu vidéo.
		 </apiDesc></apiParam><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Constructeur.
		 </apiTipText></apiTipTexts></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 <p class="- topic/p ">Constructeur.</p>
		 
		 </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="flash.events:VideoEvent:RENDER_STATE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">RENDER_STATE</apiName><shortdesc class="- topic/shortdesc ">
		 Définit la valeur de la propriété type d’un objet d’événement renderState.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="(unsupported)" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">renderState</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Identifiant de l’événement renderState d’un objet Video.
		 </apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 Définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet d’événement <codeph class="+ topic/ph pr-d/codeph ">renderState</codeph>.
		 <p class="- topic/p ">Les propriétés de cet événement sont les suivantes :</p>
		 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Objet qui traite activement l’événement.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">status</codeph></entry><entry class="- topic/entry ">Etat de rendu signalé par l’événement.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Objet Video signalant l’état de rendu.</entry></row></tbody></tgroup></adobetable>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:VideoEvent:RENDER_STATUS_ACCELERATED" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">RENDER_STATUS_ACCELERATED</apiName><shortdesc class="- topic/shortdesc ">
		 Pour usage interne uniquement.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="(unsupported)" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">accelerated</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Pour usage interne uniquement.
		 </apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 <p class="- topic/p ">Pour usage interne uniquement. Utilisez plutôt flash.media.VideoStatus.ACCELERATED.</p>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:VideoEvent:RENDER_STATUS_SOFTWARE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">RENDER_STATUS_SOFTWARE</apiName><shortdesc class="- topic/shortdesc ">
		 Pour usage interne uniquement.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="(unsupported)" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">software</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Pour usage interne uniquement.
		 </apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 <p class="- topic/p ">Pour usage interne uniquement. Utilisez plutôt flash.media.VideoStatus.SOFTWARE.</p>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:VideoEvent:RENDER_STATUS_UNAVAILABLE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">RENDER_STATUS_UNAVAILABLE</apiName><shortdesc class="- topic/shortdesc ">
		 Pour usage interne uniquement.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="(unsupported)" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">unavailable</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Pour usage interne uniquement.
		 </apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 <p class="- topic/p ">Pour usage interne uniquement. Utilisez plutôt flash.media.VideoStatus.UNAVAILABLE.</p>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:VideoEvent:status:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">status</apiName><shortdesc class="- topic/shortdesc ">
		 Renvoie l’état de rendu de l’objet VideoEvent.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="(unsupported)" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Renvoie l’état de rendu de l’objet VideoEvent.
		 </apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 <p class="- topic/p ">Renvoie l’état de rendu de l’objet VideoEvent. Les valeurs possibles sont les suivantes : "unavailable", "software" et "accelerated".</p>
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.events:GestureEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">GestureEvent</apiName><shortdesc class="- topic/shortdesc "> 
 La classe GestureEvent permet de gérer des événements tactiles multipoints sur des périphériques qui détectent les interactions complexes entre l’utilisateur et le périphérique (notamment lorsque l’utilisateur appuie simultanément avec deux doigts sur un écran tactile).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">prend en charge la gestion des événements pour les actions tactiles
 
 </apiTipText></apiTipTexts><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
 La classe GestureEvent permet de gérer des événements tactiles multipoints sur des périphériques qui détectent les interactions complexes entre l’utilisateur et le périphérique (notamment lorsque l’utilisateur appuie simultanément avec deux doigts sur un écran tactile). Lorsqu’un utilisateur interagit avec un périphérique, par exemple avec un téléphone portable ou une tablette munis d’un écran tactile, il touche généralement l’écran et se déplace dessus avec ses doigts ou un dispositif de pointage. Vous pouvez développer des applications qui répondent à cette action de l’utilisateur à l’aide des classes GestureEvent et TransformGestureEvent. Vous pouvez créer des écouteurs d’événement à l’aide des types d’événements définis ici ou dans les classes TouchEvent et TransformGestureEvent associées. Vous pouvez ensuite utiliser les propriétés et les méthodes de ces classes pour construire des gestionnaires d’événement qui répondent aux mouvements tactiles de l’utilisateur sur le périphérique.
 <p class="- topic/p ">Utilisez la classe Multitouch pour activer et gérer la prise en charge des actions tactiles par l’environnement actuel.</p>
 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Remarque :</b> lorsque les objets sont imbriqués dans la liste d’affichage, les événements tactiles ciblent l’objet le plus profondément imbriqué et visible dans la liste d’affichage. Cet objet est appelé le nœud cible. Pour que l’ancêtre d’un nœud cible (objet contenant le nœud cible dans la liste d’affichage) reçoive la notification d’un événement tactile, utilisez <codeph class="+ topic/ph pr-d/codeph ">EventDispatcher.addEventListener()</codeph> sur le nœud de l’ancêtre en définissant le paramètre type sur l’événement tactile spécifique que vous souhaitez détecter.</p>
 </apiDesc><example conref="examples\GestureTwoFingerTap.as" class="- topic/example "> L’exemple suivant illustre la gestion d’événement pour l’événement <codeph class="+ topic/ph pr-d/codeph ">GESTURE_TWO_FINGER_TAP</codeph>. Lorsque l’utilisateur effectue un mouvement d’appui bref avec deux doigts, mySprite et myTextField se remplissent avec la phase <codeph class="+ topic/ph pr-d/codeph ">all</codeph> (unique phase des événements d’appui bref à deux doigts). Les autres mouvements de la classe TransformGestureEvent prennent en charge les phases begin (début), update (mise à jour) et end (fin).
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
Multitouch.inputMode = MultitouchInputMode.GESTURE;

var mySprite = new Sprite();
mySprite.addEventListener(GestureEvent.GESTURE_TWO_FINGER_TAP , onTwoFingerTap );
mySprite.graphics.beginFill(0x336699);
mySprite.graphics.drawRect(0, 0, 100, 80);
var myTextField = new TextField();
myTextField.y = 200;
addChild(mySprite);
addChild(myTextField);

function onTwoFingerTap(evt:GestureEvent):void {

    evt.target.rotation -= 45;
    myTextField.text = evt.phase; //"all"

}
</codeblock></example></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.ui.xml#Multitouch" class="- topic/link "><linktext class="- topic/linktext ">flash.ui.Multitouch</linktext></link><link href="flash.events.xml#TouchEvent" class="- topic/link "><linktext class="- topic/linktext ">flash.events.TouchEvent</linktext></link><link href="flash.events.xml#TransformGestureEvent" class="- topic/link "><linktext class="- topic/linktext ">flash.events.TransformGestureEvent</linktext></link><link href="flash.events.xml#PressAndTapGestureEvent" class="- topic/link "><linktext class="- topic/linktext ">flash.events.PressAndTapGestureEvent</linktext></link><link href="flash.events.xml#MouseEvent" class="- topic/link "><linktext class="- topic/linktext ">flash.events.MouseEvent</linktext></link><link href="flash.events.xml#EventDispatcher/addEventListener()" class="- topic/link "><linktext class="- topic/linktext ">flash.events.EventDispatcher.addEventListener()</linktext></link></related-links><adobeApiEvent id="flash.events:GestureEvent:GESTURE_TWO_FINGER_TAP_gestureTwoFingerTap" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">gestureTwoFingerTap</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:GestureEvent:GESTURE_TWO_FINGER_TAP</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:GestureEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:gestureTwoFingerTap" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.gestureTwoFingerTap</linktext></link><link href="flash.events.xml#GesturePhase" class="- topic/link "><linktext class="- topic/linktext ">flash.events.GesturePhase</linktext></link></related-links></adobeApiEvent><apiConstructor id="flash.events:GestureEvent:GestureEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">GestureEvent</apiName><shortdesc class="- topic/shortdesc ">
    Crée un objet Event contenant des informations sur les événements tactiles multipoints (notamment lorsque l’utilisateur appuie sur un écran tactile avec deux doigts).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">type</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc "> Type de l’événement. La valeur prise en charge est la suivante : <codeph class="+ topic/ph pr-d/codeph ">GestureEvent.GESTURE_TWO_FINGER_TAP</codeph>. 
	
    </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">bubbles</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">true</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc "> Détermine si l’objet Event prend part à la phase de propagation du flux d’événements.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">cancelable</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Détermine si l’objet d’événement peut être annulé.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">phase</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Valeur de la classe GesturePhase indiquant l’état du mouvement tactile (begin, update, end ou all).
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">localX</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Coordonnée horizontale à laquelle l’événement s’est produit par rapport au sprite conteneur.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">localY</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Coordonnée verticale à laquelle l’événement s’est produit par rapport au sprite conteneur.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ctrlKey</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Sous Windows ou Linux, indique si la touche Ctrl est activée. Sous Mac, indique si la touche Ctrl ou la touche Commande est activée.
    </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">altKey</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Indique si la touche Alt est activée (Windows ou Linux uniquement).
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">shiftKey</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Indique si la touche Maj est activée.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">commandKey</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">(AIR uniquement) Indique si la touche Commande est activée (Mac uniquement). Ce paramètre est destiné à Adobe AIR uniquement ; ne le définissez pas pour le contenu de Flash Player.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">controlKey</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">(AIR uniquement) Indique si la touche Contrôle ou Ctrl est activée (Mac uniquement). Ce paramètre est destiné à Adobe AIR uniquement ; ne le définissez pas pour le contenu de Flash Player.
    
    </apiDesc></apiParam><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Constructeur associé aux objets GestureEvent.
	</apiTipText></apiTipTexts></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Crée un objet Event contenant des informations sur les événements tactiles multipoints (notamment lorsque l’utilisateur appuie sur un écran tactile avec deux doigts). Les objets Event sont transmis en tant que paramètres aux écouteurs d’événements.
    
	
    </apiDesc></apiConstructorDetail><related-links class="- topic/related-links "><link href="flash.events.xml#GesturePhase" class="- topic/link "><linktext class="- topic/linktext ">flash.events.GesturePhase</linktext></link></related-links></apiConstructor><apiOperation id="flash.events:GestureEvent:clone" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">clone</apiName><shortdesc class="- topic/shortdesc ">
		Crée une copie de l’objet GestureEvent et définit la valeur de chaque propriété de sorte qu’elle corresponde à la valeur d’origine.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Nouvel objet GestureEvent dont les propriétés ont la même valeur que celles de l’objet d’origine.
		 
		 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.events:Event</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		Crée une copie de l’objet GestureEvent et définit la valeur de chaque propriété de sorte qu’elle corresponde à la valeur d’origine.
		
		</apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.events:GestureEvent:toString" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">toString</apiName><shortdesc class="- topic/shortdesc ">
	Renvoie une chaîne répertoriant toutes les propriétés de l’objet GestureEvent.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Chaîne répertoriant toutes les propriétés de l’objet GestureEvent.
	 
	 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Renvoie une chaîne répertoriant toutes les propriétés de l’objet GestureEvent. La chaîne est écrite au format suivant :
	<p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">[GestureEvent type=<i class="+ topic/ph hi-d/i ">valeur</i> bubbles=<i class="+ topic/ph hi-d/i ">valeur</i> cancelable=<i class="+ topic/ph hi-d/i ">valeur</i> ... ]</codeph></p>
	
	</apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.events:GestureEvent:updateAfterEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">updateAfterEvent</apiName><shortdesc class="- topic/shortdesc ">
	Actualise l’affichage du moteur d’exécution de Flash après le traitement de l’événement gesture, dans le cas où la liste d’affichage a été modifiée par le gestionnaire d’événement.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Actualise l’affichage du moteur d’exécution de Flash après le traitement de l’événement gesture, dans le cas où la liste d’affichage a été modifiée par le gestionnaire d’événement.
	
	</apiDesc></apiOperationDetail></apiOperation><apiValue id="flash.events:GestureEvent:GESTURE_TWO_FINGER_TAP" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">GESTURE_TWO_FINGER_TAP</apiName><shortdesc class="- topic/shortdesc ">
     Définit la valeur de la propriété type d’un objet d’événement de mouvement GESTURE_TWO_FINGER_TAP.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">gestureTwoFingerTap</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet d’événement de mouvement <codeph class="+ topic/ph pr-d/codeph ">GESTURE_TWO_FINGER_TAP</codeph>.
	 
	 <p class="- topic/p ">L’objet GestureEvent distribué possède les propriétés suivantes :</p>
	 
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">altKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> si la touche Alt est activée (Windows ou Linux).</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">commandKey</codeph></entry><entry class="- topic/entry ">(AIR uniquement) <codeph class="+ topic/ph pr-d/codeph ">true</codeph> sous Mac si la touche Commande est activée ; <codeph class="+ topic/ph pr-d/codeph ">false</codeph> si elle est désactivée. Toujours <codeph class="+ topic/ph pr-d/codeph ">false</codeph> sur Windows.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">controlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> si la touche Ctrl ou Contrôle est activée ; <codeph class="+ topic/ph pr-d/codeph ">false</codeph> si elle est désactivée.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">ctrlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> sous Windows ou Linux si la touche Ctrl est enfoncée. <codeph class="+ topic/ph pr-d/codeph ">true</codeph> sur Mac si la touche Ctrl ou la touche Commande est activée. Sinon, la valeur <codeph class="+ topic/ph pr-d/codeph ">false</codeph> est renvoyée.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">L’objet qui traite activement l’objet Event avec un écouteur d’événements.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">phase</codeph></entry><entry class="- topic/entry ">Phase actuelle du flux d’événements. Pour les événements d’appui bref à deux doigts, cette valeur est toujours <codeph class="+ topic/ph pr-d/codeph ">all</codeph> ; elle correspond à la valeur <codeph class="+ topic/ph pr-d/codeph ">GesturePhase.ALL</codeph> une fois l’événement distribué.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">isRelatedObjectInaccessible</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> si la propriété relatedObject est définie sur <codeph class="+ topic/ph pr-d/codeph ">null</codeph> conformément aux règles du sandbox de sécurité.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">localX</codeph></entry><entry class="- topic/entry ">Coordonnée horizontale à laquelle l’événement s’est produit par rapport au sprite conteneur.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">localY</codeph></entry><entry class="- topic/entry ">Coordonnée verticale à laquelle l’événement s’est produit par rapport au sprite conteneur.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">shiftKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> si la touche Maj est activée ; <codeph class="+ topic/ph pr-d/codeph ">false</codeph> si elle ne l’est pas.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Occurrence d’InteractiveObject sous le dispositif de pointage. La propriété <codeph class="+ topic/ph pr-d/codeph ">target</codeph> ne correspond pas toujours à l’objet de la liste d’affichage qui est associé à l’écouteur d’événement. Utilisez la propriété <codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph> pour accéder à l’objet de la liste d’affichage qui traite actuellement l’événement.</entry></row></tbody></tgroup></adobetable>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:gestureTwoFingerTap" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.gestureTwoFingerTap</linktext></link><link href="flash.events.xml#GesturePhase" class="- topic/link "><linktext class="- topic/linktext ">flash.events.GesturePhase</linktext></link></related-links></apiValue><apiValue id="flash.events:GestureEvent:altKey:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">altKey</apiName><shortdesc class="- topic/shortdesc ">
    Indique si la touche Alt est active (true) ou non (false).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><internal>Reserved in case Desktop Player wants to capture this key in a future implementation.
	The Option key modifier on Macintosh system must be represented using this key modifier. So far, it seems
    only the Windows version is hooked up.
	 
	</internal></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Indique si la touche Alt est active (<codeph class="+ topic/ph pr-d/codeph ">true</codeph>) ou non (<codeph class="+ topic/ph pr-d/codeph ">false</codeph>). Pris en charge uniquement pour les systèmes d’exploitation Windows et Linux.
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:GestureEvent:commandKey:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">commandKey</apiName><shortdesc class="- topic/shortdesc ">
		Indique si la touche Commande est activée (Mac uniquement).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		Indique si la touche Commande est activée (Mac uniquement). 
		
		<p class="- topic/p ">Sous Mac OS, la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">commandKey</codeph> est la même valeur que la propriété <codeph class="+ topic/ph pr-d/codeph ">ctrlKey</codeph>. Cette propriété est toujours définie sur false sous Windows ou Linux.</p>
		
		</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:GestureEvent:controlKey:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">controlKey</apiName><shortdesc class="- topic/shortdesc ">
		Indique si la touche Contrôle et activée sous Mac et si la touche Ctrl est activée sous Windows ou Linux.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		Indique si la touche Contrôle et activée sous Mac et si la touche Ctrl est activée sous Windows ou Linux.
		
		</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:GestureEvent:ctrlKey:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">ctrlKey</apiName><shortdesc class="- topic/shortdesc ">
	Sous Windows ou Linux, indique si la touche Ctrl est activée (true) ou non (false).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Sous Windows ou Linux, indique si la touche Ctrl est activée (<codeph class="+ topic/ph pr-d/codeph ">true</codeph>) ou non (<codeph class="+ topic/ph pr-d/codeph ">false</codeph>). Sous Macintosh, indique si la touche Contrôle ou la touche Commande est activée.
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:GestureEvent:localX:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">localX</apiName><shortdesc class="- topic/shortdesc ">
	Coordonnée horizontale à laquelle l’événement s’est produit par rapport au sprite conteneur.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Coordonnée horizontale à laquelle l’événement s’est produit par rapport au sprite conteneur.
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:GestureEvent:localY:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">localY</apiName><shortdesc class="- topic/shortdesc ">
	Coordonnée verticale à laquelle l’événement s’est produit par rapport au sprite conteneur.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Coordonnée verticale à laquelle l’événement s’est produit par rapport au sprite conteneur.
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:GestureEvent:phase:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">phase</apiName><shortdesc class="- topic/shortdesc ">
	Valeur de la classe GesturePhase indiquant l’état du mouvement tactile.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Valeur de la classe GesturePhase indiquant l’état du mouvement tactile. Pour la plupart des mouvements, la valeur est <codeph class="+ topic/ph pr-d/codeph ">begin</codeph>, <codeph class="+ topic/ph pr-d/codeph ">update</codeph> ou <codeph class="+ topic/ph pr-d/codeph ">end</codeph>. Pour les mouvements de glissement et d’appui bref à deux doigts, la valeur de phase est toujours <codeph class="+ topic/ph pr-d/codeph ">all</codeph> une fois l’événement distribué. Utilisez cette valeur pour déterminer si un gestionnaire d’événement répond à une interaction de l’utilisateur complexe, ou s’il répond de différentes façons selon la phase actuelle d’un mouvement tactile multipoint (par exemple, l’agrandissement, le déplacement et le « dépôt » lorsqu’un utilisateur touche un objet visuel et le fait glisser sur un écran).
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.events.xml#GesturePhase" class="- topic/link "><linktext class="- topic/linktext ">flash.events.GesturePhase</linktext></link></related-links></apiValue><apiValue id="flash.events:GestureEvent:shiftKey:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">shiftKey</apiName><shortdesc class="- topic/shortdesc ">
	Indique si la touche Maj est activée (true) ou non (false).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Indique si la touche Maj est activée (<codeph class="+ topic/ph pr-d/codeph ">true</codeph>) ou non (<codeph class="+ topic/ph pr-d/codeph ">false</codeph>).
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:GestureEvent:stageX:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">stageX</apiName><shortdesc class="- topic/shortdesc ">
	Coordonnée horizontale à laquelle l’événement s’est produit, par rapport aux coordonnées globales de la scène.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Coordonnée horizontale à laquelle l’événement s’est produit, par rapport aux coordonnées globales de la scène. Cette propriété est calculée lorsque la propriété <codeph class="+ topic/ph pr-d/codeph ">localX</codeph> est définie.
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:GestureEvent:stageY:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">stageY</apiName><shortdesc class="- topic/shortdesc ">
	Coordonnée verticale à laquelle l’événement s’est produit, par rapport aux coordonnées globales de la scène.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Coordonnée verticale à laquelle l’événement s’est produit, par rapport aux coordonnées globales de la scène. Cette propriété est calculée lorsque la propriété <codeph class="+ topic/ph pr-d/codeph ">localY</codeph> est définie.
	
	</apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.events:FullScreenEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">FullScreenEvent</apiName><shortdesc class="- topic/shortdesc ">
L’objet Stage distribue un objet FullScreenEvent chaque fois que la scène passe en mode d’affichage plein écran ou quitte ce mode.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage name="ActionScript" version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9.0.28.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Objets Event associés aux événements FullScreenEvent.
</apiTipText></apiTipTexts><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:ActivityEvent</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
L’objet Stage distribue un objet FullScreenEvent chaque fois que la scène passe en mode d’affichage plein écran ou quitte ce mode. Il n’existe qu’un seul type d’événement <codeph class="+ topic/ph pr-d/codeph ">fullScreen</codeph> : <codeph class="+ topic/ph pr-d/codeph ">FullScreenEvent.FULL_SCREEN</codeph>.

</apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.display.xml#Stage/displayState" class="- topic/link "><linktext class="- topic/linktext ">flash.display.Stage.displayState</linktext></link></related-links><adobeApiEvent id="flash.events:FullScreenEvent:FULL_SCREEN_fullScreen" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">fullScreen</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:FullScreenEvent:FULL_SCREEN</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:FullScreenEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#Stage/displayState" class="- topic/link "><linktext class="- topic/linktext ">flash.display.Stage.displayState</linktext></link></related-links></adobeApiEvent><apiConstructor id="flash.events:FullScreenEvent:FullScreenEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">FullScreenEvent</apiName><shortdesc class="- topic/shortdesc ">
	Crée un objet Event contenant des informations sur les événements fullScreen.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage name="ActionScript" version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9.0.28.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">type</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc "> Type de l’événement. Les écouteurs d’événement peuvent accéder à cette information par le biais de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> héritée. Il n’existe qu’un seul type d’événement <codeph class="+ topic/ph pr-d/codeph ">fullScreen</codeph> : <codeph class="+ topic/ph pr-d/codeph ">FullScreenEvent.FULL_SCREEN</codeph>.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">bubbles</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Détermine si l’objet Event prend part à la phase de propagation du flux d’événements. Les écouteurs d’événement peuvent accéder à cette information par le biais de la propriété <codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph> héritée.  
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">cancelable</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Détermine si l’objet Event peut être annulé. Les écouteurs d’événement peuvent accéder à cette information par le biais de la propriété <codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph> héritée. 
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">fullScreen</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Indique si le périphérique est activé (<codeph class="+ topic/ph pr-d/codeph ">true</codeph>) ou désactivé (<codeph class="+ topic/ph pr-d/codeph ">false</codeph>). Les écouteurs d’événement peuvent accéder à cette information par le biais de la propriété <codeph class="+ topic/ph pr-d/codeph ">activating</codeph>.
	
	</apiDesc></apiParam><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Constructeur d’objets FullScreenEvent.
	</apiTipText></apiTipTexts></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Crée un objet événement contenant des informations sur les événements <codeph class="+ topic/ph pr-d/codeph ">fullScreen</codeph>. Les objets Event sont transmis en tant que paramètres aux écouteurs d’événements.
	
    </apiDesc></apiConstructorDetail><related-links class="- topic/related-links "><link href="flash.events.xml#FullScreenEvent/FULL_SCREEN" class="- topic/link "><linktext class="- topic/linktext ">FullScreenEvent.FULL_SCREEN</linktext></link></related-links></apiConstructor><apiOperation id="flash.events:FullScreenEvent:clone" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">clone</apiName><shortdesc class="- topic/shortdesc ">
	Crée une copie de l’objet FullScreenEvent et définit la valeur de chaque propriété de sorte qu’elle corresponde à la valeur d’origine.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9.0.28.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Nouvel objet FullScreenEvent dont les propriétés ont la même valeur que celles de l’objet d’origine.
	 
	 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.events:Event</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Crée une copie de l’objet FullScreenEvent et définit la valeur de chaque propriété de sorte qu’elle corresponde à la valeur d’origine. 
	
    </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.events:FullScreenEvent:toString" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">toString</apiName><shortdesc class="- topic/shortdesc ">
	Renvoie une chaîne répertoriant toutes les propriétés de l’objet FullScreenEvent.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage name="ActionScript" version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9.0.28.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Chaîne répertoriant toutes les propriétés de l’objet FullScreenEvent.
	 
	 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Renvoie une chaîne répertoriant toutes les propriétés de l’objet FullScreenEvent. Le format utilisé est le suivant :
	<p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">[FullScreenEvent type=<i class="+ topic/ph hi-d/i ">valeur</i> bubbles=<i class="+ topic/ph hi-d/i ">valeur</i> cancelable=<i class="+ topic/ph hi-d/i ">valeur</i> activating=<i class="+ topic/ph hi-d/i ">valeur</i>]</codeph></p>
	
    </apiDesc></apiOperationDetail></apiOperation><apiValue id="flash.events:FullScreenEvent:FULL_SCREEN" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">FULL_SCREEN</apiName><shortdesc class="- topic/shortdesc ">
	La constante FullScreenEvent.FULL_SCREEN définit la valeur de la propriété type de l’objet événement fullScreen.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage name="ActionScript" version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9.0.28.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">fullScreen</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	La constante <codeph class="+ topic/ph pr-d/codeph ">FullScreenEvent.FULL_SCREEN</codeph> définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> de l’objet événement <codeph class="+ topic/ph pr-d/codeph ">fullScreen</codeph>. 
	<p class="- topic/p ">Les propriétés de cet événement sont les suivantes :</p>
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">fullScreen</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> si l’état d’affichage est en plein écran ou <codeph class="+ topic/ph pr-d/codeph ">false</codeph> s’il est normal.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">L’objet qui traite activement l’objet Event avec un écouteur d’événements.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Objet Stage.</entry></row></tbody></tgroup></adobetable>
	
    </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#Stage/displayState" class="- topic/link "><linktext class="- topic/linktext ">flash.display.Stage.displayState</linktext></link></related-links></apiValue><apiValue id="flash.events:FullScreenEvent:fullScreen:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">fullScreen</apiName><shortdesc class="- topic/shortdesc ">
	Indique si l’objet Stage est en mode plein écran (true) ou non (false).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage name="ActionScript" version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9.0.28.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Indique si l’objet Stage est en mode plein écran (<codeph class="+ topic/ph pr-d/codeph ">true</codeph>) ou non (<codeph class="+ topic/ph pr-d/codeph ">false</codeph>).
	
    </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.events:StageVideoAvailabilityEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">StageVideoAvailabilityEvent</apiName><shortdesc class="- topic/shortdesc ">
	Cet événement est déclenché lorsque l’état de la propriété Stage.stageVideos change.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="(unsupported)" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Indique la disponibilité de la vidéo sur la scène.
   	</apiTipText></apiTipTexts><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	<p class="- topic/p ">Cet événement est déclenché lorsque l’état de la propriété <codeph class="+ topic/ph pr-d/codeph ">Stage.stageVideos</codeph> change. Cette propriété peut changer lorsque l’utilisateur affiche une vidéo en mode plein écran à partir d’un <codeph class="+ topic/ph pr-d/codeph ">wmode</codeph> qui ne prend pas en charge StageVideo (par exemple, <codeph class="+ topic/ph pr-d/codeph ">wmode=normal</codeph>, <codeph class="+ topic/ph pr-d/codeph ">wmode=opaque</codeph> ou <codeph class="+ topic/ph pr-d/codeph ">wmode=transparent</codeph>). Passer au mode plein écran peut entraîner le remplissage du vecteur <codeph class="+ topic/ph pr-d/codeph ">Stage.stageVideos</codeph>. A l’inverse, quitter le mode plein écran risque de vider le vecteur <codeph class="+ topic/ph pr-d/codeph ">Stage.stageVideos</codeph>.</p>
	<p class="- topic/p "><b class="+ topic/ph hi-d/b ">REMARQUE :</b> cette notification se produit uniquement lorsque l’état de la propriété <codeph class="+ topic/ph pr-d/codeph ">Stage.stageVideos</codeph> change. Par conséquent, le comportement peut varier en fonction de la plateforme et du navigateur. Sous Windows, par exemple, l’événement <codeph class="+ topic/ph pr-d/codeph ">stageVideoAvailability</codeph> n’est pas distribué lorsque vous passez en mode plein écran alors que <codeph class="+ topic/ph pr-d/codeph ">wmode</codeph> est défini sur <codeph class="+ topic/ph pr-d/codeph ">direct</codeph>. Cependant, sur d’autres plates-formes, le même comportement oblige Flash Player à allouer une nouvelle fois les ressources. Dans les deux cas, l’état de la propriété <codeph class="+ topic/ph pr-d/codeph ">Stage.stageVideos</codeph> change et l’événement se déclenche. Vous pouvez détecter le passage au mode plein écran en écoutant l’événement <codeph class="+ topic/ph pr-d/codeph ">flash.events.FullScreenEvent</codeph>. Cet événement est distribué par l'objet Stage.</p>

	</apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.events.xml#StageVideoEvent" class="- topic/link "><linktext class="- topic/linktext ">flash.events.StageVideoEvent</linktext></link><link href="flash.media.xml#StageVideoAvailability" class="- topic/link "><linktext class="- topic/linktext ">flash.media.StageVideoAvailability</linktext></link><link href="flash.events.xml#VideoEvent" class="- topic/link "><linktext class="- topic/linktext ">flash.events.VideoEvent</linktext></link><link href="flash.events.xml#FullScreenEvent" class="- topic/link "><linktext class="- topic/linktext ">flash.events.FullScreenEvent</linktext></link><link href="flash.display.xml#Stage/stageVideos" class="- topic/link "><linktext class="- topic/linktext ">flash.display.Stage.stageVideos</linktext></link><link href="flash.events.xml#FullScreenEvent" class="- topic/link "><linktext class="- topic/linktext ">flash.events.FullScreenEvent</linktext></link><link href="flash.media.xml#Video" class="- topic/link "><linktext class="- topic/linktext ">flash.media.Video</linktext></link><link href="flash.net.xml#NetStream" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetStream</linktext></link><link href="http://help.adobe.com/en_US/as3/dev/WS5b3ccc516d4fbf351e63e3d118a9b90204-7e1a.html" class="- topic/link "><linktext class="- topic/linktext ">Utilisation de la vidéo</linktext></link></related-links><apiConstructor id="flash.events:StageVideoAvailabilityEvent:StageVideoAvailabilityEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">StageVideoAvailabilityEvent</apiName><shortdesc class="- topic/shortdesc ">
		 Constructeur.
		 
		 </shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="(unsupported)" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">type</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Type d’événement. Les valeurs possibles sont les suivantes : <codeph class="+ topic/ph pr-d/codeph ">StageVideoAvailabilityEvent.STAGE_VIDEO_AVAILABILITY</codeph>.
		 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">bubbles</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Indique si l’objet Event prend part à la phase de propagation du flux d’événements.
		 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">cancelable</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Indique s’il est possible d’annuler l’action qui déclenche cet événement.
		 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">availability</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Disponibilité actuelle de la vidéo sur la scène.
		 </apiDesc></apiParam><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Constructeur.		 </apiTipText></apiTipTexts></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 <p class="- topic/p ">Constructeur.</p>
		 
		 </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="flash.events:StageVideoAvailabilityEvent:STAGE_VIDEO_AVAILABILITY" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">STAGE_VIDEO_AVAILABILITY</apiName><shortdesc class="- topic/shortdesc ">
		 Définit la valeur de la propriété type d’un objet d’événement stageVideoAvailability.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="(unsupported)" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">stageVideoAvailability</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Identifiant de l’événement <codeph class="+ topic/ph pr-d/codeph ">stageVideoAvailability</codeph> de l’objet Stage.
		 </apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 Définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet d’événement <codeph class="+ topic/ph pr-d/codeph ">stageVideoAvailability</codeph>.
		 <p class="- topic/p ">Les propriétés de cet événement sont les suivantes :</p>
		 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">availability</codeph></entry><entry class="- topic/entry ">Etat signalé par l’événement.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Objet qui traite activement l’événement.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Objet Stage indiquant la disponibilité de la vidéo sur la scène.</entry></row></tbody></tgroup></adobetable>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:StageVideoAvailabilityEvent:availability:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">availability</apiName><shortdesc class="- topic/shortdesc ">
		 Indique la disponibilité de la vidéo sur la scène à l’aide d’une constante de la classe flash.media.StageVideoAvailability.
		 </shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="(unsupported)" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Indique la disponibilité de la vidéo sur la scène.
		 </apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 <p class="- topic/p ">Indique la disponibilité de la vidéo sur la scène à l’aide d’une constante de la classe flash.media.StageVideoAvailability.</p>
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.events:DatagramSocketDataEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">DatagramSocketDataEvent</apiName><shortdesc class="- topic/shortdesc ">
 Un objet DatagramSocketDataEvent est distribué lorsqu’un socket Datagram a reçu des données.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Un objet DatagramSocketDataEvent est distribué lorsqu’un socket Datagram a reçu des données. 
 
 </apiDesc><example conref="examples\DatagramSocketDataEventExample.as" class="- topic/example "/></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.net.xml#DatagramSocket" class="- topic/link "><linktext class="- topic/linktext ">Classe DatagramSocket</linktext></link></related-links><adobeApiEvent id="flash.events:DatagramSocketDataEvent:DATA_data" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">data</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:DatagramSocketDataEvent:DATA</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:DatagramSocketDataEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Distribué par un objet DatagramSocket lors de la réception d’une paquet UDP.
     
     </apiTipText></apiTipTexts></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.net.xml#DatagramSocket/event:data" class="- topic/link "><linktext class="- topic/linktext ">flash.net.DatagramSocket.data</linktext></link></related-links></adobeApiEvent><apiConstructor id="flash.events:DatagramSocketDataEvent:DatagramSocketDataEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">DatagramSocketDataEvent</apiName><shortdesc class="- topic/shortdesc ">
     Crée un objet Event contenant des informations sur les événements Datagram.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">type</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc "> Type de l’événement. Les valeurs possibles sont les suivantes :<codeph class="+ topic/ph pr-d/codeph ">DatagramSocketDataEvent.DATA</codeph>
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">bubbles</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc "> Détermine si l’objet Event prend part à la phase de propagation vers le haut du flux d’événements. 
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">cancelable</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Détermine si l’objet d’événement peut être annulé. 
     
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">srcAddress</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData "/><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Adresse IP de la machine qui a envoyé le paquet.
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">srcPort</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Port sur la machine qui a envoyé le paquet.
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">dstAddress</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData "/><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Adresse IP à laquelle le paquet est adressé.
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">dstPort</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Port auquel le paquet est adressé.
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">data</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.utils:ByteArray</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Données du paquet Datagram.
     </apiDesc></apiParam></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Crée un objet Event contenant des informations sur les événements Datagram. Les objets Event sont transmis en tant que paramètres aux écouteurs d’événements.
     
     </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="flash.events:DatagramSocketDataEvent:clone" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">clone</apiName><shortdesc class="- topic/shortdesc ">
    Crée une copie de l’objet DatagramSocketDataEvent et définit la valeur de chaque propriété de sorte qu’elle corresponde à la valeur d’origine.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Nouvel objet DatagramSocketDataEvent dont les propriétés ont la même valeur que celles de l’objet d’origine.
    </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.events:Event</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Crée une copie de l’objet DatagramSocketDataEvent et définit la valeur de chaque propriété de sorte qu’elle corresponde à la valeur d’origine. 
    
    </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.events:DatagramSocketDataEvent:toString" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">toString</apiName><shortdesc class="- topic/shortdesc ">
    Renvoie une chaîne répertoriant toutes les propriétés de l’objet DatagramSocketDataEvent.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Chaîne répertoriant toutes les propriétés de l’objet <codeph class="+ topic/ph pr-d/codeph ">ProgressEvent</codeph>.
    </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Renvoie une chaîne répertoriant toutes les propriétés de l’objet DatagramSocketDataEvent. La chaîne est écrite au format suivant :
    <p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">[DatagramSocketDataEvent type=<i class="+ topic/ph hi-d/i ">valeur</i> bubbles=<i class="+ topic/ph hi-d/i ">valeur</i> cancelable=<i class="+ topic/ph hi-d/i ">valeur</i> srcAddress=<i class="+ topic/ph hi-d/i ">valeur</i> srcPort=<i class="+ topic/ph hi-d/i ">valeur</i> dstAddress=<i class="+ topic/ph hi-d/i ">valeur</i> dstPort=<i class="+ topic/ph hi-d/i ">valeur</i> data=<i class="+ topic/ph hi-d/i ">valeur</i>]</codeph></p>
    
    </apiDesc></apiOperationDetail></apiOperation><apiValue id="flash.events:DatagramSocketDataEvent:DATA" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">DATA</apiName><shortdesc class="- topic/shortdesc ">
     Définit la valeur de la propriété type d’un objet événement data.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">data</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Distribué par un objet DatagramSocket lors de la réception d’une paquet UDP.
     
     </apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet événement <codeph class="+ topic/ph pr-d/codeph ">data</codeph>.
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#DatagramSocket/event:data" class="- topic/link "><linktext class="- topic/linktext ">flash.net.DatagramSocket.data</linktext></link></related-links></apiValue><apiValue id="flash.events:DatagramSocketDataEvent:data:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">data</apiName><shortdesc class="- topic/shortdesc ">
    Données du paquet Datagram.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.utils:ByteArray</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Données du paquet Datagram.
    
    </apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:DatagramSocketDataEvent:dstAddress:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">dstAddress</apiName><shortdesc class="- topic/shortdesc ">
    Adresse IP de l’objet DatagramSocket ayant distribué cet événement.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Adresse IP de l’objet DatagramSocket ayant distribué cet événement.
    
    <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Remarque :</b> si le socket est lié à l’adresse spéciale <codeph class="+ topic/ph pr-d/codeph ">0.0.0.0</codeph>, cette propriété renvoie <codeph class="+ topic/ph pr-d/codeph ">0.0.0.0</codeph>. Pour connaître l’adresse IP spécifique à laquelle le message datagramme est envoyé, vous devez lier le socket à une adresse IP explicite.</p>
    
    </apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:DatagramSocketDataEvent:dstPort:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">dstPort</apiName><shortdesc class="- topic/shortdesc ">
    Port de l’objet DatagramSocket ayant distribué cet événement.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">int</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Port de l’objet DatagramSocket ayant distribué cet événement.
    
    </apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:DatagramSocketDataEvent:srcAddress:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">srcAddress</apiName><shortdesc class="- topic/shortdesc ">
    Adresse IP de la machine qui a envoyé le paquet.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Adresse IP de la machine qui a envoyé le paquet.
    
    </apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:DatagramSocketDataEvent:srcPort:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">srcPort</apiName><shortdesc class="- topic/shortdesc ">
    Port sur la machine qui a envoyé le paquet.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">int</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Port sur la machine qui a envoyé le paquet.
    
    </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.events:DRMStatusEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">DRMStatusEvent</apiName><shortdesc class="- topic/shortdesc ">
	
	Un objet NetStream distribue un objet DRMStatusEvent lorsque la lecture du contenu protégé à l’aide de la gestion des droits numériques (DRM, digital rights management) commence (lorsque le bon est vérifié, et lorsque l’utilisateur est authentifié et autorisé à afficher le contenu).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Objets event pour des objets activés DRM.
	</apiTipText></apiTipTexts><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	
	Un objet NetStream distribue un objet DRMStatusEvent lorsque la lecture du contenu protégé à l’aide de la gestion des droits numériques (DRM, digital rights management) commence (lorsque le bon est vérifié, et lorsque l’utilisateur est authentifié et autorisé à afficher le contenu). L’objet DRMStatusEvent contient des informations liées au bon (si le contenu peut être disponible hors ligne ou lorsque le bon expire et que le contenu ne peut plus être affiché, par exemple). L’application peut utiliser ces données pour informer l’utilisateur de l’état de sa régulation et de ses autorisations.
	
	</apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStream" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetStream</linktext></link><link href="flash.events.xml#DRMStatusEvent/DRM_STATUS" class="- topic/link "><linktext class="- topic/linktext ">DRMStatusEvent.DRM_STATUS</linktext></link><link href="flash.net.drm.xml#DRMManager" class="- topic/link "><linktext class="- topic/linktext ">flash.net.drm.DRMManager</linktext></link><link href="flash.net.drm.xml#DRMVoucher" class="- topic/link "><linktext class="- topic/linktext ">flash.net.drm.DRMVoucher</linktext></link></related-links><adobeApiEvent id="flash.events:DRMStatusEvent:DRM_STATUS_drmStatus" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">drmStatus</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:DRMStatusEvent:DRM_STATUS</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:DRMStatusEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Distribué par un objet NetStream au début de la lecture du contenu protégé par DRM.
		</apiTipText></apiTipTexts></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="flash.events:DRMStatusEvent:DRMStatusEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">DRMStatusEvent</apiName><shortdesc class="- topic/shortdesc ">
 	    Crée un objet Event contenant des informations spécifiques sur les événements DRM status.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">DRMStatusEvent, constructor
        	</keyword></asCustoms></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">type</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">unknown</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc "> Type de l’événement. Les écouteurs d’événement peuvent accéder à cette information par le biais de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> héritée. Il n’existe qu’un seul type d’événement DRMAuthenticate : <codeph class="+ topic/ph pr-d/codeph ">DRMAuthenticateEvent.DRM_AUTHENTICATE</codeph>.
		</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">bubbles</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Détermine si l’objet Event prend part à la phase de propagation du flux d’événements. Les écouteurs d’événement peuvent accéder à cette information par le biais de la propriété <codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph> héritée.
		</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">cancelable</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Détermine si l’objet Event peut être annulé. Les écouteurs d’événement peuvent accéder à cette information par le biais de la propriété <codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph> héritée.
		</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">inMetadata</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.net.drm:DRMContentData</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">L’objet custom qui contient des propriétés DRM personnalisées.  		
		</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">inVoucher</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.net.drm:DRMVoucher</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Contexte de l’événement.   		
		</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">inLocal</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Indique si le contenu peut être affiché hors ligne.
		</apiDesc></apiParam></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 	    Crée un objet Event contenant des informations spécifiques sur les événements DRM status. Les objets Event sont transmis en tant que paramètres aux écouteurs d’événements. 
	    
 	    
		</apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="flash.events:DRMStatusEvent:clone" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">clone</apiName><shortdesc class="- topic/shortdesc ">
		Crée une copie de l’objet DRMStatusEvent et définit la valeur de chaque propriété de sorte qu’elle corresponde à la valeur d’origine.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Nouvel objet DRMStatusEvent dont les propriétés ont la même valeur que celles de l’objet d’origine.
		</apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.events:Event</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		Crée une copie de l’objet DRMStatusEvent et définit la valeur de chaque propriété de sorte qu’elle corresponde à la valeur d’origine. 
		
		</apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.events:DRMStatusEvent:toString" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">toString</apiName><shortdesc class="- topic/shortdesc ">
		Renvoie une chaîne répertoriant toutes les propriétés de l’objet DRMStatusEvent.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Une chaîne contenant toutes les propriétés de l’objet DRMStatusEvent.
		</apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		Renvoie une chaîne répertoriant toutes les propriétés de l’objet DRMStatusEvent. 
		</apiDesc></apiOperationDetail></apiOperation><apiValue id="flash.events:DRMStatusEvent:DRM_STATUS" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">DRM_STATUS</apiName><shortdesc class="- topic/shortdesc ">
		La constante DRMStatusEvent.DRM_STATUS définit la valeur de la propriété type d’un objet de l’événement drmStatus.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">drmStatus</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Distribué par un objet NetStream au début de la lecture du contenu protégé par DRM.
		</apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		La constante <codeph class="+ topic/ph pr-d/codeph ">DRMStatusEvent.DRM_STATUS</codeph> définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet d’événement <codeph class="+ topic/ph pr-d/codeph ">drmStatus</codeph>. 
		
		
		<p class="- topic/p ">Les propriétés de cet événement sont les suivantes :</p>
		
		<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">detail</codeph></entry><entry class="- topic/entry ">Une chaîne expliquant le contexte de l’événement status.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">isAnonymous</codeph></entry><entry class="- topic/entry ">Indique si le contenu protégé avec le chiffrement DRM est disponible sans que l’utilisateur doive fournir des informations d’identification d’authentification.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">isAvailableOffline</codeph></entry><entry class="- topic/entry ">Indique si le contenu protégé avec le chiffrement DRM est disponible hors ligne.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">offlineLeasePeriod</codeph></entry><entry class="- topic/entry ">Le nombre de jours qu’il reste pour afficher le contenu hors ligne.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">policies</codeph></entry><entry class="- topic/entry ">Un objet custom de l’événement DRM status.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">L’objet NetStream.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">voucherEndDate</codeph></entry><entry class="- topic/entry ">La date absolue d’expiration du bon à laquelle le contenu ne peut plus être affiché par les utilisateurs</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">contentData</codeph></entry><entry class="- topic/entry ">DRMContentData pour le contenu</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">voucher</codeph></entry><entry class="- topic/entry ">L’objet DRMVoucher pour le contenu.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">isLocal</codeph></entry><entry class="- topic/entry ">Indique si le contenu est enregistré sur le système de fichiers local</entry></row></tbody></tgroup></adobetable>
		
		
		</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:DRMStatusEvent:contentData:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">contentData</apiName><shortdesc class="- topic/shortdesc ">
		 Un objet DRMContentData contenant les informations nécessaires pour obtenir un voucher permettant de visualiser le contenu protégé par DRM.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.net.drm:DRMContentData</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 Un objet DRMContentData contenant les informations nécessaires pour obtenir un voucher permettant de visualiser le contenu protégé par DRM.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:DRMStatusEvent:detail:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">detail</apiName><shortdesc class="- topic/shortdesc ">
		Une chaîne expliquant le contexte de l’événement status.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">DRMStatusEvent.detail, detail
		
		</keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		Une chaîne expliquant le contexte de l’événement status.
		
		</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:DRMStatusEvent:isAnonymous:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">isAnonymous</apiName><shortdesc class="- topic/shortdesc ">
		Indique si le contenu protégé par DRM (gestion des droits numériques) est disponible sans que l’utilisateur doive fournir des informations d’authentification.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">DRMStatusEvent.isAnonymous, isAnonymous
		
		</keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		Indique si le contenu protégé par DRM (gestion des droits numériques) est disponible sans que l’utilisateur doive fournir des informations d’authentification. Si tel est le cas, la valeur est <codeph class="+ topic/ph pr-d/codeph ">true</codeph>. Autrement, la valeur est <codeph class="+ topic/ph pr-d/codeph ">false</codeph> et un utilisateur doit fournir un nom d’utilisateur et un mot de passe correspondant à ceux connus et attendus par le fournisseur de contenu. 
		
		</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:DRMStatusEvent:isAvailableOffline:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">isAvailableOffline</apiName><shortdesc class="- topic/shortdesc ">
		Indique si le contenu protégé par DRM (gestion des droits numériques) est disponible hors connexion.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">DRMStatusEvent.isAvailableOffline, isAvailableOffline
		
		</keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		Indique si le contenu protégé par DRM (gestion des droits numériques) est disponible hors connexion. Si tel est le cas, la valeur est <codeph class="+ topic/ph pr-d/codeph ">true</codeph>. Sinon, elle correspond à <codeph class="+ topic/ph pr-d/codeph ">false</codeph>.
		<p class="- topic/p ">
		Pour que le contenu protégé numériquement soit disponible hors ligne, son bon doit être mis en mémoire cache sur la machine locale de l’utilisateur (l’application décide où stocker le contenu localement pour qu’il soit disponible hors ligne).
		</p>
		
		</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:DRMStatusEvent:isLocal:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">isLocal</apiName><shortdesc class="- topic/shortdesc ">
		 Indique si le voucher est mis en cache dans le magasin de vouchers local.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 Indique si le voucher est mis en cache dans le magasin de vouchers local.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:DRMStatusEvent:offlineLeasePeriod:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">offlineLeasePeriod</apiName><shortdesc class="- topic/shortdesc ">
		Le nombre de jours qu’il reste pour afficher le contenu hors ligne.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">DRMStatusEvent.offlineLeasePeriod, offlineLeasePeriod
		
		</keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">uint</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		Le nombre de jours qu’il reste pour afficher le contenu hors ligne.
		
		</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:DRMStatusEvent:policies:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">policies</apiName><shortdesc class="- topic/shortdesc ">
		Un objet custom de l’événement DRM status.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">DRMStatusEvent.policies, policies
		
		</keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Object</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		Un objet custom de l’événement DRM status.
		
		</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:DRMStatusEvent:voucherEndDate:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">voucherEndDate</apiName><shortdesc class="- topic/shortdesc ">
		La date absolue d’expiration du bon à laquelle le contenu ne peut plus être affiché par les utilisateurs.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">DRMStatusEvent.voucherEndDate, voucherEndDate
		
		</keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Date</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		La date absolue d’expiration du bon à laquelle le contenu ne peut plus être affiché par les utilisateurs. 
		
		</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:DRMStatusEvent:voucher:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">voucher</apiName><shortdesc class="- topic/shortdesc ">
		 Un objet DRMVoucher pour le contenu.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.net.drm:DRMVoucher</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 Un objet DRMVoucher pour le contenu.
		 
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.events:AsyncErrorEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">AsyncErrorEvent</apiName><shortdesc class="- topic/shortdesc ">
	Un objet distribue un événement AsyncErrorEvent lorsqu’une exception est renvoyée par le code asynchrone natif (LocalConnection, NetConnection, SharedObject ou NetStream).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage name="ActionScript" version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Objets Event associés aux événements AsyncErrorEvent.
	</apiTipText></apiTipTexts><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:ErrorEvent</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Un objet distribue un événement AsyncErrorEvent lorsqu’une exception est renvoyée par le code asynchrone natif (LocalConnection, NetConnection<ph class="- topic/ph ">, SharedObject</ph> ou NetStream). Il n’existe qu’un seul type d’événement d’erreur asynchrone : <codeph class="+ topic/ph pr-d/codeph ">AsyncErrorEvent.ASYNC_ERROR</codeph>.
	
	</apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.events.xml#AsyncErrorEvent/ASYNC_ERROR" class="- topic/link "><linktext class="- topic/linktext ">ASYNC_ERROR</linktext></link></related-links><adobeApiEvent id="flash.events:AsyncErrorEvent:ASYNC_ERROR_asyncError" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">asyncError</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:AsyncErrorEvent:ASYNC_ERROR</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:AsyncErrorEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="flash.events:AsyncErrorEvent:AsyncErrorEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">AsyncErrorEvent</apiName><shortdesc class="- topic/shortdesc ">
	Crée un objet AsyncErrorEvent contenant des informations sur les événements AsyncError.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">type</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc "> Type de l’événement. Les écouteurs d’événement peuvent accéder à cette information par le biais de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> héritée. Il n’existe qu’un seul type d’événement d’erreur : <codeph class="+ topic/ph pr-d/codeph ">ErrorEvent.ERROR</codeph>.
	
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">bubbles</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Détermine si l’objet Event se propage vers le haut. Les écouteurs d’événement peuvent accéder à cette information par le biais de la propriété <codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph> héritée. 
	
	
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">cancelable</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Détermine si l’objet Event peut être annulé. Les écouteurs d’événement peuvent accéder à cette information par le biais de la propriété <codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph> héritée. 
	
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">text</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData "/><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Texte à afficher en tant que message d’erreur. Les écouteurs d’événement peuvent accéder à cette information par le biais de la propriété <codeph class="+ topic/ph pr-d/codeph ">text</codeph>.
	
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">error</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Error</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Exception qui s’est produite. Si une erreur est définie, la propriété <codeph class="+ topic/ph pr-d/codeph ">errorId</codeph> de l’événement est définie à partir de la propriété <codeph class="+ topic/ph pr-d/codeph ">errorId</codeph> de l’erreur.
	
	</apiDesc></apiParam><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Constructeur associé aux objets AsyncErrorEvent.
	 
	 </apiTipText></apiTipTexts></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Crée un objet AsyncErrorEvent contenant des informations sur les événements AsyncError. Les objets AsyncErrorEvent sont transmis en tant que paramètres aux écouteurs d’événements.
	
	</apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="flash.events:AsyncErrorEvent:clone" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">clone</apiName><shortdesc class="- topic/shortdesc ">
	Crée une copie de l’objet AsyncErrorEvent et définit la valeur de chaque propriété de sorte qu’elle corresponde à la valeur d’origine.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Nouvel objet AsyncErrorEvent dont les propriétés ont la même valeur que celles de l’objet d’origine.
	 
	 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.events:Event</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Crée une copie de l’objet AsyncErrorEvent et définit la valeur de chaque propriété de sorte qu’elle corresponde à la valeur d’origine. 
	
	</apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.events:AsyncErrorEvent:toString" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">toString</apiName><shortdesc class="- topic/shortdesc ">
	Renvoie une chaîne répertoriant toutes les propriétés de l’objet AsyncErrorEvent.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Chaîne répertoriant toutes les propriétés de l’objet AsyncErrorEvent.
	 
	 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Renvoie une chaîne répertoriant toutes les propriétés de l’objet AsyncErrorEvent. La chaîne est écrite au format suivant :
	<p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">[AsyncErrorEvent type=<i class="+ topic/ph hi-d/i ">valeur</i> bubbles=<i class="+ topic/ph hi-d/i ">valeur</i> cancelable=<i class="+ topic/ph hi-d/i ">valeur</i> ... error=<i class="+ topic/ph hi-d/i ">valeur</i> errorID=<i class="+ topic/ph hi-d/i ">valeur</i>]</codeph> La valeur <codeph class="+ topic/ph pr-d/codeph ">errorId</codeph> est uniquement disponible dans Adobe AIR.</p>
	
	</apiDesc></apiOperationDetail></apiOperation><apiValue id="flash.events:AsyncErrorEvent:ASYNC_ERROR" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">ASYNC_ERROR</apiName><shortdesc class="- topic/shortdesc ">
	La constante AsyncErrorEvent.ASYNC_ERROR définit la valeur de la propriété type d’un objet d’événement asyncError.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">asyncError</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	La constante <codeph class="+ topic/ph pr-d/codeph ">AsyncErrorEvent.ASYNC_ERROR</codeph> définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet événement <codeph class="+ topic/ph pr-d/codeph ">asyncError</codeph>. 
	<p class="- topic/p ">Les propriétés de cet événement sont les suivantes :</p>
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; il n’existe aucun comportement par défaut à annuler. </entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">L’objet qui traite activement l’objet Event avec un écouteur d’événements. </entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">L’objet distribuant l’événement.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">error</codeph></entry><entry class="- topic/entry ">Erreur qui a déclenché l’événement.</entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:AsyncErrorEvent:error" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">error</apiName><shortdesc class="- topic/shortdesc ">
	Exception qui a été renvoyée.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Error</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Exception qui a été renvoyée.
	
	</apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.events:StatusEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">StatusEvent</apiName><shortdesc class="- topic/shortdesc ">
 Un objet distribue un objet StatusEvent lorsqu’un périphérique, tel qu’une caméra, un microphone ou un objet de type LocalConnection publie son état.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><internal>includeExample examples\StatusEventExample.as -noswf
 
 </internal></asCustoms></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Objets Event associés aux événements StatusEvent.
 </apiTipText></apiTipTexts><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Un objet distribue un objet StatusEvent lorsqu’un périphérique, tel qu’une caméra, un microphone ou un objet de type LocalConnection publie son état. Il n’existe qu’un seul type d’événement status : <codeph class="+ topic/ph pr-d/codeph ">StatusEvent.STATUS</codeph> :
 
 </apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.media.xml#Camera" class="- topic/link "><linktext class="- topic/linktext ">flash.media.Camera</linktext></link><link href="flash.media.xml#Microphone" class="- topic/link "><linktext class="- topic/linktext ">flash.media.Microphone</linktext></link><link href="flash.net.xml#LocalConnection" class="- topic/link "><linktext class="- topic/linktext ">flash.net.LocalConnection</linktext></link><link href="flash.sensors.xml#Accelerometer" class="- topic/link "><linktext class="- topic/linktext ">flash.sensors.Accelerometer</linktext></link><link href="flash.sensors.xml#Geolocation" class="- topic/link "><linktext class="- topic/linktext ">flash.sensors.Geolocation</linktext></link><link href="air.net.xml#ServiceMonitor" class="- topic/link "><linktext class="- topic/linktext ">air.net.ServiceMonitor</linktext></link></related-links><adobeApiEvent id="flash.events:StatusEvent:STATUS_status" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">status</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:StatusEvent:STATUS</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:StatusEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.media.xml#Camera/event:status" class="- topic/link "><linktext class="- topic/linktext ">flash.media.Camera.status</linktext></link><link href="flash.media.xml#Microphone/event:status" class="- topic/link "><linktext class="- topic/linktext ">flash.media.Microphone.status</linktext></link><link href="flash.net.xml#LocalConnection/event:status" class="- topic/link "><linktext class="- topic/linktext ">flash.net.LocalConnection.status</linktext></link><link href="flash.net.xml#NetStream/event:status" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetStream.status</linktext></link><link href="flash.sensors.xml#Geolocation/event:status" class="- topic/link "><linktext class="- topic/linktext ">flash.sensors.Geolocation.status</linktext></link><link href="flash.sensors.xml#Accelerometer/event:status" class="- topic/link "><linktext class="- topic/linktext ">flash.sensors.Accelerometer.status</linktext></link></related-links></adobeApiEvent><apiConstructor id="flash.events:StatusEvent:StatusEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">StatusEvent</apiName><shortdesc class="- topic/shortdesc ">
	 Crée un objet Event contenant des informations sur les événements status.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">type</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc "> Type de l’événement. Les écouteurs d’événement peuvent accéder à cette information par le biais de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> héritée. Il n’existe qu’un seul type d’événement status : <codeph class="+ topic/ph pr-d/codeph ">StatusEvent.STATUS</codeph> :
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">bubbles</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Détermine si l’objet Event prend part à la phase de propagation du flux d’événements. Les écouteurs d’événement peuvent accéder à cette information par le biais de la propriété <codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph> héritée.  
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">cancelable</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Détermine si l’objet Event peut être annulé. Les écouteurs d’événement peuvent accéder à cette information par le biais de la propriété <codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph> héritée. 
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">code</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData "/><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Description de l’état de l’objet. Les écouteurs d’événement peuvent accéder à cette information par le biais de la propriété <codeph class="+ topic/ph pr-d/codeph ">code</codeph>.
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">level</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData "/><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Catégorie du message, telle que <codeph class="+ topic/ph pr-d/codeph ">"status"</codeph>, <codeph class="+ topic/ph pr-d/codeph ">"warning"</codeph> ou <codeph class="+ topic/ph pr-d/codeph ">"error"</codeph>. Les écouteurs d’événement peuvent accéder à cette information par le biais de la propriété <codeph class="+ topic/ph pr-d/codeph ">level</codeph>.
	 
	 </apiDesc></apiParam><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Constructeur associé aux objets StatusEvent.
	 </apiTipText></apiTipTexts></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Crée un objet Event contenant des informations sur les événements status. Les objets Event sont transmis en tant que paramètres aux écouteurs d’événements.
	 
	 </apiDesc></apiConstructorDetail><related-links class="- topic/related-links "><link href="flash.events.xml#StatusEvent/STATUS" class="- topic/link "><linktext class="- topic/linktext ">STATUT</linktext></link></related-links></apiConstructor><apiOperation id="flash.events:StatusEvent:clone" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">clone</apiName><shortdesc class="- topic/shortdesc ">
	 Crée une copie de l’objet StatusEvent et définit la valeur de chaque propriété de sorte qu’elle corresponde à la valeur d’origine.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Nouvel objet StatusEvent dont les propriétés ont la même valeur que celles de l’objet d’origine.
	  
	  </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.events:Event</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Crée une copie de l’objet StatusEvent et définit la valeur de chaque propriété de sorte qu’elle corresponde à la valeur d’origine. 
	 
	 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.events:StatusEvent:toString" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">toString</apiName><shortdesc class="- topic/shortdesc ">
	 Renvoie une chaîne répertoriant toutes les propriétés de l’objet StatusEvent.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Chaîne répertoriant toutes les propriétés de l’objet StatusEvent.
	  
	  </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Renvoie une chaîne répertoriant toutes les propriétés de l’objet StatusEvent. La chaîne est écrite au format suivant :
	 <p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">[StatusEvent type=<i class="+ topic/ph hi-d/i ">valeur</i> bubbles=<i class="+ topic/ph hi-d/i ">valeur</i> cancelable=<i class="+ topic/ph hi-d/i ">valeur</i> code=<i class="+ topic/ph hi-d/i ">valeur</i> level=<i class="+ topic/ph hi-d/i ">valeur</i>]</codeph></p>
	 
	 </apiDesc></apiOperationDetail></apiOperation><apiValue id="flash.events:StatusEvent:STATUS" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">STATUS</apiName><shortdesc class="- topic/shortdesc ">
     Définit la valeur de la propriété type d’un objet événement status.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">status</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet événement <codeph class="+ topic/ph pr-d/codeph ">status</codeph>.
	 <p class="- topic/p ">Les propriétés de cet événement sont les suivantes :</p>
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">code</codeph></entry><entry class="- topic/entry ">Description de l’état de l’objet.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">L’objet qui traite activement l’objet Event avec un écouteur d’événements.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">level</codeph></entry><entry class="- topic/entry ">Catégorie du message, telle que <codeph class="+ topic/ph pr-d/codeph ">"status"</codeph>, <codeph class="+ topic/ph pr-d/codeph ">"warning"</codeph> ou <codeph class="+ topic/ph pr-d/codeph ">"error"</codeph>.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Objet publiant son état.</entry></row></tbody></tgroup></adobetable>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.media.xml#Camera/event:status" class="- topic/link "><linktext class="- topic/linktext ">flash.media.Camera.status</linktext></link><link href="flash.media.xml#Microphone/event:status" class="- topic/link "><linktext class="- topic/linktext ">flash.media.Microphone.status</linktext></link><link href="flash.net.xml#LocalConnection/event:status" class="- topic/link "><linktext class="- topic/linktext ">flash.net.LocalConnection.status</linktext></link><link href="flash.net.xml#NetStream/event:status" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetStream.status</linktext></link><link href="flash.sensors.xml#Geolocation/event:status" class="- topic/link "><linktext class="- topic/linktext ">flash.sensors.Geolocation.status</linktext></link><link href="flash.sensors.xml#Accelerometer/event:status" class="- topic/link "><linktext class="- topic/linktext ">flash.sensors.Accelerometer.status</linktext></link></related-links></apiValue><apiValue id="flash.events:StatusEvent:code:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">code</apiName><shortdesc class="- topic/shortdesc ">
	 Description de l’état de l’objet.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Description de l’état de l’objet.
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.media.xml#Camera" class="- topic/link "><linktext class="- topic/linktext ">flash.media.Camera</linktext></link><link href="flash.media.xml#Microphone" class="- topic/link "><linktext class="- topic/linktext ">flash.media.Microphone</linktext></link><link href="flash.net.xml#LocalConnection" class="- topic/link "><linktext class="- topic/linktext ">flash.net.LocalConnection</linktext></link></related-links></apiValue><apiValue id="flash.events:StatusEvent:level:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">level</apiName><shortdesc class="- topic/shortdesc ">
 	 Catégorie du message, telle que « status », « warning » ou « error ».</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 	 Catégorie du message, telle que <codeph class="+ topic/ph pr-d/codeph ">"status"</codeph>, <codeph class="+ topic/ph pr-d/codeph ">"warning"</codeph> ou <codeph class="+ topic/ph pr-d/codeph ">"error"</codeph>.
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.media.xml#Camera" class="- topic/link "><linktext class="- topic/linktext ">flash.media.Camera</linktext></link><link href="flash.media.xml#Microphone" class="- topic/link "><linktext class="- topic/linktext ">flash.media.Microphone</linktext></link><link href="flash.net.xml#LocalConnection" class="- topic/link "><linktext class="- topic/linktext ">flash.net.LocalConnection</linktext></link></related-links></apiValue></apiClassifier><apiClassifier languages="" id="flash.events:DRMAuthenticationErrorEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">DRMAuthenticationErrorEvent</apiName><shortdesc class="- topic/shortdesc ">
	 DRMManager distribue un objet DRMAuthenticationErrorEvent lorsqu’un appel de la méthode authenticate() de l’objet DRMManager échoue.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:ErrorEvent</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 DRMManager distribue un objet DRMAuthenticationErrorEvent lorsqu’un appel de la méthode <codeph class="+ topic/ph pr-d/codeph ">authenticate()</codeph> de l’objet DRMManager échoue.
	 
 	 </apiDesc></apiClassifierDetail><apiConstructor id="flash.events:DRMAuthenticationErrorEvent:DRMAuthenticationErrorEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">DRMAuthenticationErrorEvent</apiName><shortdesc class="- topic/shortdesc ">
		 Crée une nouvelle occurrence d’un objet DRMAuthenticationErrorEvent.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">type</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">La chaîne de type de l’événement
		 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">bubbles</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Si l’événement propage vers le haut la liste d’affichage
		 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">cancelable</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Si l’événement peut être annulé
		 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">inDetail</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData "/><apiDesc class="- topic/section reference/section apiRef/apiDesc ">La description de l’erreur
		 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">inErrorID</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">L’ID du type d’erreur général
		 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">inSubErrorID</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">L’ID indiquant l’erreur spécifique dans son type
		 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">inServerURL</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">L’URL du serveur auquel l’utilisateur s’est connecté
		 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">inDomain</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Le domaine authentifié sur le serveur auquel l’utilisateur s’est connecté
		 
	 	 </apiDesc></apiParam></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 Crée une nouvelle occurrence d’un objet DRMAuthenticationErrorEvent.
		 
		 </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="flash.events:DRMAuthenticationErrorEvent:clone" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">clone</apiName><shortdesc class="- topic/shortdesc "> 
	Crée une copie de l’objet ErrorEvent et définit la valeur de chaque propriété de sorte qu’elle corresponde à la valeur d’origine.</shortdesc><prolog class="- topic/prolog "/><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Nouvel objet ErrorEvent dont les propriétés ont la même valeur que celles de l’objet d’origine.
	 
	 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.events:Event</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	Crée une copie de l’objet ErrorEvent et définit la valeur de chaque propriété de sorte qu’elle corresponde à la valeur d’origine. 
	
	</apiDesc></apiOperationDetail></apiOperation><apiValue id="flash.events:DRMAuthenticationErrorEvent:AUTHENTICATION_ERROR" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">AUTHENTICATION_ERROR</apiName><shortdesc class="- topic/shortdesc ">
		 La constante de type chaîne à utiliser pour l’événement d’erreur d’authentification dans le paramètre type lors de l’ajout et de la suppression d’écouteurs d’événement.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">authenticationError</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 La constante de type chaîne à utiliser pour l’événement d’erreur d’authentification dans le paramètre type lors de l’ajout et de la suppression d’écouteurs d’événement.
		   
	 	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:DRMAuthenticationErrorEvent:domain:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">domain</apiName><shortdesc class="- topic/shortdesc ">
		 Le domaine de contenu du serveur de droits multimédias.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 Le domaine de contenu du serveur de droits multimédias Ici, le domaine n’est pas un nom de domaine réseau ou Internet.
		  
	 	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:DRMAuthenticationErrorEvent:serverURL:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">serverURL</apiName><shortdesc class="- topic/shortdesc ">
		 L’URL du serveur de droits multimédias ayant rejeté la tentative d’authentification.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 L’URL du serveur de droits multimédias ayant rejeté la tentative d’authentification.
		  
	 	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:DRMAuthenticationErrorEvent:subErrorID:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">subErrorID</apiName><shortdesc class="- topic/shortdesc ">
		 Un code d’erreur plus détaillé.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">int</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 Un code d’erreur plus détaillé.
		  
	 	 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.events:HTMLUncaughtScriptExceptionEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">HTMLUncaughtScriptExceptionEvent</apiName><shortdesc class="- topic/shortdesc ">
	Un objet HTMLLoader distribue un objet HTMLUncaughtScriptExceptionEvent lorsqu’une exception JavaScript est renvoyée et qu’elle n’est pas gérée avec une instruction catch.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Un objet HTMLLoader distribue un objet HTMLUncaughtScriptExceptionEvent lorsqu’une exception JavaScript est renvoyée et qu’elle n’est pas gérée avec une instruction <codeph class="+ topic/ph pr-d/codeph ">catch</codeph>.
	
	</apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="../../flash/html/HTMLLoader.html" class="- topic/link "><linktext class="- topic/linktext ">HTMLLoader</linktext></link></related-links><adobeApiEvent id="flash.events:HTMLUncaughtScriptExceptionEvent:UNCAUGHT_SCRIPT_EXCEPTION_uncaughtScriptException" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">uncaughtScriptException</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:HTMLUncaughtScriptExceptionEvent:UNCAUGHT_SCRIPT_EXCEPTION</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:HTMLUncaughtScriptExceptionEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="flash.events:HTMLUncaughtScriptExceptionEvent:HTMLUncaughtScriptExceptionEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">HTMLUncaughtScriptExceptionEvent</apiName><shortdesc class="- topic/shortdesc ">
		Crée un objet HTMLUncaughtScriptExceptionEvent à transmettre en tant que paramètre aux écouteurs d’événements.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">exceptionValue</apiItemName><apiType value="any" name="type" class="- topic/state reference/state apiRef/apiType "/><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Lorsqu’un processus JavaScript renvoie une exception uncaught, <codeph class="+ topic/ph pr-d/codeph ">exceptionValue</codeph> est le résultat de l’évaluation de l’expression dans l’instruction throw ayant entraîné l’exception uncaught. La propriété <codeph class="+ topic/ph pr-d/codeph ">exceptionValue</codeph> peut être une valeur primitive, une référence à un objet JavaScript ou une référence à un objet ActionScript.
		
		</apiDesc></apiParam></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		Crée un objet HTMLUncaughtScriptExceptionEvent à transmettre en tant que paramètre aux écouteurs d’événements.
		
		</apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="flash.events:HTMLUncaughtScriptExceptionEvent:clone" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">clone</apiName><shortdesc class="- topic/shortdesc ">
		 
		Crée une copie de l’objet HTMLUncaughtScriptExceptionEvent et définit la valeur de chaque propriété de sorte qu’elle corresponde à la valeur d’origine.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Copie de l’objet HTMLUncaughtScriptExceptionEvent.
		
		</apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.events:Event</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 
		Crée une copie de l’objet HTMLUncaughtScriptExceptionEvent et définit la valeur de chaque propriété de sorte qu’elle corresponde à la valeur d’origine.
		
		</apiDesc></apiOperationDetail></apiOperation><apiValue id="flash.events:HTMLUncaughtScriptExceptionEvent:UNCAUGHT_SCRIPT_EXCEPTION" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">UNCAUGHT_SCRIPT_EXCEPTION</apiName><shortdesc class="- topic/shortdesc ">
		La constante HTMLUncaughtScriptExceptionEvent.UNCAUGHT_SCRIPT_EXCEPTION définit la valeur de la propriété type d’un objet événement uncaughtScriptException.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">uncaughtScriptException</apiData><apiType value="" name="type" class="- topic/state reference/state apiRef/apiType "/></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		La constante <codeph class="+ topic/ph pr-d/codeph ">HTMLUncaughtScriptExceptionEvent.UNCAUGHT_SCRIPT_EXCEPTION</codeph> définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet événement <codeph class="+ topic/ph pr-d/codeph ">uncaughtScriptException</codeph>.
		
		 
		 <p class="- topic/p ">Les propriétés de cet événement sont les suivantes :</p>
		 
		 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">exceptionValue</codeph></entry><entry class="- topic/entry ">Le résultat de l’évaluation de l’expression dans l’instruction <codeph class="+ topic/ph pr-d/codeph ">throw</codeph> ayant résulté dans l’exception uncaught.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">stackTrace</codeph></entry><entry class="- topic/entry ">Un tableau d’objets qui représentent la trace de pile au moment de l’exécution de l’instruction <codeph class="+ topic/ph pr-d/codeph ">throw</codeph> ayant résulté dans l’exception uncaught.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">L’objet HTMLLoader.</entry></row></tbody></tgroup></adobetable>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:HTMLUncaughtScriptExceptionEvent:exceptionValue" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">exceptionValue</apiName><shortdesc class="- topic/shortdesc ">
	Le résultat de l’évaluation de l’expression dans l’instruction throw ayant résulté dans l’exception uncaught.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiType value="" name="type" class="- topic/state reference/state apiRef/apiType "/></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Le résultat de l’évaluation de l’expression dans l’instruction throw ayant résulté dans l’exception uncaught. La propriété <codeph class="+ topic/ph pr-d/codeph ">exceptionValue</codeph> peut être une valeur primitive, une référence à un objet JavaScript ou une référence à un objet ActionScript.
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:HTMLUncaughtScriptExceptionEvent:stackTrace:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">stackTrace</apiName><shortdesc class="- topic/shortdesc ">
	Un tableau d’objets qui représentent la trace de pile au moment de l’exécution de l’instruction throw ayant résulté dans l’exception uncaught.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Array</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Un tableau d’objets qui représentent la trace de pile au moment de l’exécution de l’instruction throw ayant résulté dans l’exception uncaught. Chaque objet dans le tableau possède trois propriétés :
	
	<ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">sourceURL</codeph> (une chaîne) : l’URL du script du bloc d’activation d’appel.</li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">line</codeph> (un numéro) : le numéro de ligne dans la ressource <codeph class="+ topic/ph pr-d/codeph ">sourceURL</codeph> du bloc d’activation d’appel.</li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">functionName</codeph> (une chaîne) : le nom de la fonction pour le frame de pile des appels.</li></ul>
	  	 
	</apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.events:SoftKeyboardEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">SoftKeyboardEvent</apiName><shortdesc class="- topic/shortdesc ">
Un objet SoftKeyboardEvent est distribué lorsqu’un clavier virtuel est activé ou désactivé.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage name="ActionScript" version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2.6" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Un SoftKeyboardEvent est distribué lorsqu’un clavier logiciel est activé ou désactivé.

</apiTipText></apiTipTexts><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
Un objet SoftKeyboardEvent est distribué lorsqu’un clavier virtuel est activé ou désactivé. 

<p class="- topic/p ">Des événements SoftKeyboardEvent sont distribués par les objets TextFields et InteractiveObject dont la propriété <codeph class="+ topic/ph pr-d/codeph ">needsSoftKeyboard</codeph> est définie sur <codeph class="+ topic/ph pr-d/codeph ">true</codeph>.</p>

</apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/needsSoftKeyboard" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.needsSoftKeyboard</linktext></link></related-links><apiConstructor id="flash.events:SoftKeyboardEvent:SoftKeyboardEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">SoftKeyboardEvent</apiName><shortdesc class="- topic/shortdesc ">
    Crée un objet d’événement contenant les informations sur les événements d’activation et de désactivation du clavier logiciel.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage name="ActionScript" version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2.6" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">type</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc "> Type d’événement en tant que valeur de constante (telle que <codeph class="+ topic/ph pr-d/codeph ">SOFT_KEYBOARD_ACTIVATE</codeph>). Les écouteurs d’événement peuvent accéder à cette information par le biais de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> héritée. 
    </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">bubbles</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Détermine si l’objet Event prend part à la phase de propagation du flux d’événements. Les écouteurs d’événement peuvent accéder à cette information par le biais de la propriété <codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph> héritée.  
    </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">cancelable</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Détermine si l’objet Event peut être annulé. Les écouteurs d’événement peuvent accéder à cette information par le biais de la propriété <codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph> héritée. 
    </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">relatedObjectVal</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.display:InteractiveObject</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Référence à un objet de la liste d’affichage qui est associé à l’événement. 
    </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">triggerTypeVal</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Indique si l’événement de clavier a été déclenché par une application ou un utilisateur.
    
    </apiDesc></apiParam><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Constructeur associé aux objets SoftKeyboardEvent.
     
    </apiTipText></apiTipTexts></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Crée un objet d’événement contenant les informations sur les événements d’activation et de désactivation du clavier logiciel. Les objets Event sont transmis en tant que paramètres aux écouteurs d’événements.
    
    </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="flash.events:SoftKeyboardEvent:clone" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">clone</apiName><shortdesc class="- topic/shortdesc "> 
    Crée une copie de l’objet SoftKeyboardEvent et définit la valeur de chaque propriété de sorte qu’elle corresponde à la valeur d’origine.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2.6" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Nouvel objet SoftKeyboardEvent dont les propriétés ont la même valeur que celles de l’objet d’origine.
     
    </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.events:Event</apiOperationClassifier></apiReturn><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Crée une copie d’un objet SoftKeyboardEvent.    
    </apiTipText></apiTipTexts></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
    Crée une copie de l’objet SoftKeyboardEvent et définit la valeur de chaque propriété de sorte qu’elle corresponde à la valeur d’origine. 
    
    </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.events:SoftKeyboardEvent:toString" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">toString</apiName><shortdesc class="- topic/shortdesc ">
    Renvoie une chaîne répertoriant toutes les propriétés de l’objet SoftKeyboardEvent.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2.6" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Chaîne répertoriant toutes les propriétés de l’objet SoftKeyboardEvent.
     
    </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Renvoie une chaîne répertoriant toutes les propriétés de l’objet SoftKeyboardEvent. Le format utilisé est le suivant :
    <p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">[SoftKeyboardEvent type=<i class="+ topic/ph hi-d/i ">valeur</i> bubbles=<i class="+ topic/ph hi-d/i ">valeur</i> cancelable=<i class="+ topic/ph hi-d/i ">valeur</i> relatedObjectVal=<i class="+ topic/ph hi-d/i ">valeur</i> triggerTypeVal=<i class="+ topic/ph hi-d/i ">valeur</i> activating=<i class="+ topic/ph hi-d/i ">valeur</i>]</codeph></p>
    
    </apiDesc></apiOperationDetail></apiOperation><apiValue id="flash.events:SoftKeyboardEvent:SOFT_KEYBOARD_ACTIVATE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">SOFT_KEYBOARD_ACTIVATE</apiName><shortdesc class="- topic/shortdesc "> 
    La constante SoftKeyboardEvent.SOFT_KEYBOARD_ACTIVATE définit la valeur de la propriété type de l’objet SoftKeyboardEvent distribué lors de l’affichage d’un clavier logiciel.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2.6" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">softKeyboardActivate</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Valeur de constante d’un événement distribué lors de l’affichage du clavier logiciel.    
    </apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
    La constante <codeph class="+ topic/ph pr-d/codeph ">SoftKeyboardEvent.SOFT_KEYBOARD_ACTIVATE</codeph> définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> de l’objet SoftKeyboardEvent distribué lors de l’affichage d’un clavier logiciel. 
    
    <p class="- topic/p ">L’événement softKeyboardActivate est distribué après l’événement softKeyboardActivating et ne peut pas être annulé. Pour empêcher l’affichage du clavier virtuel, annulez l’événement softKeyboardActivating.</p> 
    
    <p class="- topic/p ">Les propriétés de cet événement sont les suivantes :</p>
     <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">type</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">SOFT_KEYBOARD_ACTIVATE</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; il est trop tard pour annuler.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">relatedObjectVal</codeph></entry><entry class="- topic/entry ">Référence à un objet de la liste d’affichage qui est associé à l’événement.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">triggerTypeVal</codeph></entry><entry class="- topic/entry ">Indique si l’événement de clavier a été déclenché par une application ou un utilisateur.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">L’objet qui traite activement l’objet Event avec un écouteur d’événements.</entry></row></tbody></tgroup></adobetable>
    </apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:SoftKeyboardEvent:SOFT_KEYBOARD_ACTIVATING" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">SOFT_KEYBOARD_ACTIVATING</apiName><shortdesc class="- topic/shortdesc "> 
    La constante SoftKeyboardEvent.SOFT_KEYBOARD_ACTIVATING définit la valeur de la propriété type de l’objet SoftKeyboardEvent distribué immédiatement avant l’affichage d’un clavier logiciel.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2.6" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">softKeyboardActivating</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Valeur de constante d’un événement distribué immédiatement avant l’affichage du clavier logiciel.     
    </apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
    La constante <codeph class="+ topic/ph pr-d/codeph ">SoftKeyboardEvent.SOFT_KEYBOARD_ACTIVATING</codeph> définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> de l’objet SoftKeyboardEvent distribué immédiatement avant l’affichage d’un clavier logiciel. S’il est annulé via l’appel de <codeph class="+ topic/ph pr-d/codeph ">preventDefault</codeph>, le clavier logiciel ne s’ouvre pas.
    
    <p class="- topic/p ">Les propriétés de cet événement sont les suivantes :</p>
     <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">type</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">SOFT_KEYBOARD_ACTIVATING</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> ; l’annulation empêche l’ouverture du clavier.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">relatedObjectVal</codeph></entry><entry class="- topic/entry ">Référence à un objet de la liste d’affichage qui est associé à l’événement.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">triggerTypeVal</codeph></entry><entry class="- topic/entry ">Indique si l’événement de clavier a été déclenché par une application ou un utilisateur.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">L’objet qui traite activement l’objet Event avec un écouteur d’événements.</entry></row></tbody></tgroup></adobetable>
    </apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:SoftKeyboardEvent:SOFT_KEYBOARD_DEACTIVATE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">SOFT_KEYBOARD_DEACTIVATE</apiName><shortdesc class="- topic/shortdesc "> 
    La constante SoftKeyboardEvent.SOFT_KEYBOARD_DEACTIVATE définit la valeur de la propriété type de l’objet SoftKeyboardEvent distribué lors de l’affichage ou du masquage d’un clavier logiciel.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2.6" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">softKeyboardDeactivate</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Valeur de constante d’un événement distribué après que le clavier logiciel est réduit ou masqué.     
    </apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
    La constante <codeph class="+ topic/ph pr-d/codeph ">SoftKeyboardEvent.SOFT_KEYBOARD_DEACTIVATE</codeph> définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> de l’objet SoftKeyboardEvent distribué lors de l’affichage ou du masquage d’un clavier logiciel.
    
    <p class="- topic/p ">Les propriétés de cet événement sont les suivantes :</p>
     <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">type</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">SOFT_KEYBOARD_DEACTIVATE</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; l’annulation n’est pas autorisée.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">relatedObjectVal</codeph></entry><entry class="- topic/entry ">Référence à un objet de la liste d’affichage qui est associé à l’événement.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">triggerTypeVal</codeph></entry><entry class="- topic/entry ">Indique si l’événement de clavier a été déclenché par une application ou un utilisateur.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">L’objet qui traite activement l’objet Event avec un écouteur d’événements.</entry></row></tbody></tgroup></adobetable>
    </apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:SoftKeyboardEvent:relatedObject:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">relatedObject</apiName><shortdesc class="- topic/shortdesc ">
    Référence à un objet de la liste d’affichage qui est associé à l’événement.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2.6" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.display:InteractiveObject</apiValueClassifier><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Référence à un objet de la liste d’affichage qui est associé à l’événement. 
    </apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Référence à un objet de la liste d’affichage qui est associé à l’événement. 
    
    </apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:SoftKeyboardEvent:triggerType:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">triggerType</apiName><shortdesc class="- topic/shortdesc "> 
    Indique si le changement d’état du clavier a été déclenché par une application (utilisation par programmation de requestSoftKeyboard()) ou par l’utilisateur (suite à la sélection d’un champ de texte).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2.6" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Source du changement de l’état du clavier.
    </apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
    Indique si le changement d’état du clavier a été déclenché par une application (utilisation par programmation de <codeph class="+ topic/ph pr-d/codeph ">requestSoftKeyboard()</codeph>) ou par l’utilisateur (suite à la sélection d’un champ de texte).
    
    </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.events.xml#SoftKeyboardTrigger" class="- topic/link "><linktext class="- topic/linktext ">flash.events.SoftKeyboardTrigger</linktext></link></related-links></apiValue></apiClassifier><apiClassifier languages="" id="flash.events:ProgressEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">ProgressEvent</apiName><shortdesc class="- topic/shortdesc ">
 Un objet ProgressEvent est distribué lorsqu’une opération load a commencé ou qu’un socket a reçu des données.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Objets Event associés aux événements ProgressEvent.
 </apiTipText></apiTipTexts><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Un objet ProgressEvent est distribué lorsqu’une opération load a commencé ou qu’un socket a reçu des données. En règle générale, ces événements sont générés lors du chargement dans une application de fichiers SWF, d’images ou de données. Il existe deux types de d’événements progress : <codeph class="+ topic/ph pr-d/codeph ">ProgressEvent.PROGRESS</codeph> et <codeph class="+ topic/ph pr-d/codeph ">ProgressEvent.SOCKET_DATA</codeph>. Dans AIR, les objets ProgressEvent sont en outre distribués lorsque des données sont envoyées vers ou à partir d’un processus enfant à l’aide de la classe NativeProcess.
 
 </apiDesc><example conref="examples\ProgressEventExample.as" class="- topic/example "> L’exemple suivant utilise la classe <codeph class="+ topic/ph pr-d/codeph ">ProgressEventExample</codeph> pour montrer comment les différents écouteurs d’événements sont utilisés lors du téléchargement d’un fichier. L’exemple exécute les tâches suivantes :
 <ol class="- topic/ol "><li class="- topic/li ">Les propriétés <codeph class="+ topic/ph pr-d/codeph ">downloadURL</codeph> et <codeph class="+ topic/ph pr-d/codeph ">fileName</codeph> sont créées, et indiquent l’emplacement et le nom du fichier téléchargé.</li><li class="- topic/li ">Dans le constructeur <codeph class="+ topic/ph pr-d/codeph ">ProgressEventExample</codeph>, un nouvel objet FileReference nommé <codeph class="+ topic/ph pr-d/codeph ">file</codeph> est créé, puis transmis à la méthode <codeph class="+ topic/ph pr-d/codeph ">configureListeners()</codeph>.</li><li class="- topic/li ">Les propriétés <codeph class="+ topic/ph pr-d/codeph ">downloadURL</codeph> et <codeph class="+ topic/ph pr-d/codeph ">fileName</codeph> sont ensuite transmises à la méthode <codeph class="+ topic/ph pr-d/codeph ">file.download()</codeph>, qui demande l’emplacement de téléchargement du fichier.</li><li class="- topic/li ">La méthode <codeph class="+ topic/ph pr-d/codeph ">configureListeners()</codeph> ajoute sept écouteurs d’événements et leurs méthodes d’abonnés associées :
  <ol outputclass="A" class="- topic/ol "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">cancel</codeph> / <codeph class="+ topic/ph pr-d/codeph ">cancelHandler()</codeph> est distribué si le téléchargement du fichier est annulé.</li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">complete</codeph> / <codeph class="+ topic/ph pr-d/codeph ">complereHandler()</codeph> est distribué lorsque le téléchargement du fichier est terminé.</li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">ioError</codeph> / <codeph class="+ topic/ph pr-d/codeph ">ioErrorHandler()</codeph> est distribué si le fichier téléchargé n’est pas disponible ou accessible.</li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">open</codeph> / <codeph class="+ topic/ph pr-d/codeph ">openHandler()</codeph> est distribué lorsque l’opération de téléchargement démarre.</li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">progress</codeph> / <codeph class="+ topic/ph pr-d/codeph ">progressHandler()</codeph> est distribué lorsque l’opération de téléchargement commence, puis lorsqu’elle se termine.</li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">securityError</codeph> / <codeph class="+ topic/ph pr-d/codeph ">securityErrorHandler</codeph> est distribué si le paramètre de sécurité de lecture locale ne correspond pas au type d’accès aux données du fichier téléchargé (local versus réseau) ; voir les remarques ci-dessous.</li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">select</codeph> / <codeph class="+ topic/ph pr-d/codeph ">selectHandler()</codeph> est distribué lorsque l’objet de téléchargement est sélectionné.</li></ol>
  </li></ol>
 <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Remarques :</b>
 <ul class="- topic/ul "><li class="- topic/li ">Vous devrez compiler le fichier SWF en définissant « Sécurité de lecture locale » sur « Accès au réseau uniquement ».</li><li class="- topic/li ">Cet exemple requiert un fichier nommé SomeFile.pdf.</li><li class="- topic/li ">Cet exemple couvre tous les événements disponibles pour l’objet FileReference. Cependant, la plupart des situations n’en nécessite qu’un sous-ensemble.</li></ul>
 </p>
 
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">

package {
    import flash.display.Sprite;
    import flash.events.*;
    import flash.net.FileReference;
    import flash.net.URLRequest;

    public class ProgressEventExample extends Sprite {
        private var downloadURL:String = "http://www.[yourDomain].com/SomeFile.pdf";
        private var fileName:String = "SomeFile.pdf";
        private var file:FileReference;

        public function ProgressEventExample() {
            var request:URLRequest = new URLRequest(downloadURL);
            file = new FileReference();
            configureListeners(file);
            file.download(request, fileName);
        }

        private function configureListeners(dispatcher:IEventDispatcher):void {
            dispatcher.addEventListener(Event.CANCEL, cancelHandler);
            dispatcher.addEventListener(Event.COMPLETE, completeHandler);
            dispatcher.addEventListener(IOErrorEvent.IO_ERROR, ioErrorHandler);
            dispatcher.addEventListener(Event.OPEN, openHandler);
            dispatcher.addEventListener(ProgressEvent.PROGRESS, progressHandler);
            dispatcher.addEventListener(SecurityErrorEvent.SECURITY_ERROR, securityErrorHandler);
            dispatcher.addEventListener(Event.SELECT, selectHandler);
        }

        private function cancelHandler(event:Event):void {
            trace("cancelHandler: " + event);
        }

        private function completeHandler(event:Event):void {
            trace("completeHandler: " + event);
        }

        private function ioErrorHandler(event:IOErrorEvent):void {
            trace("ioErrorHandler: " + event);
        }

        private function openHandler(event:Event):void {
            trace("openHandler: " + event);
        }

        private function progressHandler(event:ProgressEvent):void {
            var file:FileReference = FileReference(event.target);
            trace("progressHandler: name=" + file.name + " bytesLoaded=" + event.bytesLoaded + " bytesTotal=" + event.bytesTotal);
        }

        private function securityErrorHandler(event:SecurityErrorEvent):void {
            trace("securityErrorHandler: " + event);
        }

        private function selectHandler(event:Event):void {
            var file:FileReference = FileReference(event.target);
            trace("selectHandler: name=" + file.name + " URL=" + downloadURL);
        }
    }
}
</codeblock></example></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.filesystem.xml" class="- topic/link "><linktext class="- topic/linktext ">Classe FileStream</linktext></link><link href="flash.display.xml#LoaderInfo" class="- topic/link "><linktext class="- topic/linktext ">Classe LoaderInfo</linktext></link><link href="flash.net.xml#Socket" class="- topic/link "><linktext class="- topic/linktext ">Classe Socket</linktext></link></related-links><adobeApiEvent id="flash.events:ProgressEvent:PROGRESS_progress" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">progress</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:ProgressEvent:PROGRESS</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:ProgressEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#LoaderInfo/event:progress" class="- topic/link "><linktext class="- topic/linktext ">flash.display.LoaderInfo.progress</linktext></link><link href="flash.media.xml#Sound/event:progress" class="- topic/link "><linktext class="- topic/linktext ">flash.media.Sound.progress</linktext></link><link href="flash.net.xml#FileReference/event:progress" class="- topic/link "><linktext class="- topic/linktext ">flash.net.FileReference.progress</linktext></link><link href="flash.net.xml#URLLoader/event:progress" class="- topic/link "><linktext class="- topic/linktext ">flash.net.URLLoader.progress</linktext></link><link href="flash.net.xml#URLStream/event:progress" class="- topic/link "><linktext class="- topic/linktext ">flash.net.URLStream.progress</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:ProgressEvent:SOCKET_DATA_socketData" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">socketData</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:ProgressEvent:SOCKET_DATA</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:ProgressEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.net.xml#Socket/event:socketData" class="- topic/link "><linktext class="- topic/linktext ">flash.net.Socket.socketData</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:ProgressEvent:STANDARD_ERROR_DATA_errorData" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">errorData</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:ProgressEvent:STANDARD_ERROR_DATA</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:ProgressEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.desktop.xml#NativeProcess/event:standardErrorData" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.NativeProcess.standardErrorData</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:ProgressEvent:STANDARD_INPUT_PROGRESS_errorData" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">errorData</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:ProgressEvent:STANDARD_INPUT_PROGRESS</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:ProgressEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.desktop.xml#NativeProcess/event:standardInputProgress" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.NativeProcess.standardInputProgress</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:ProgressEvent:STANDARD_OUTPUT_DATA_outputData" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">outputData</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:ProgressEvent:STANDARD_OUTPUT_DATA</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:ProgressEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.desktop.xml#NativeProcess/event:standardOutputData" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.NativeProcess.standardOutputData</linktext></link></related-links></adobeApiEvent><apiConstructor id="flash.events:ProgressEvent:ProgressEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">ProgressEvent</apiName><shortdesc class="- topic/shortdesc ">
	Crée un objet Event contenant des informations sur les événements progress.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">type</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc "> Type de l’événement. Les valeurs possibles sont les suivantes :<codeph class="+ topic/ph pr-d/codeph ">ProgressEvent.PROGRESS</codeph>, <codeph class="+ topic/ph pr-d/codeph ">ProgressEvent.SOCKET_DATA</codeph>, <codeph class="+ topic/ph pr-d/codeph ">ProgressEvent.STANDARD_ERROR_DATA</codeph>, <codeph class="+ topic/ph pr-d/codeph ">ProgressEvent.STANDARD_INPUT_PROGRESS</codeph> et <codeph class="+ topic/ph pr-d/codeph ">ProgressEvent.STANDARD_OUTPUT_DATA</codeph>.
	
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">bubbles</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc "> Détermine si l’objet Event prend part à la phase de propagation vers le haut du flux d’événements. 
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">cancelable</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Détermine si l’objet d’événement peut être annulé. 
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">bytesLoaded</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Nombre d’éléments ou d’octets chargés lors du traitement de l’événement par l’écouteur.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">bytesTotal</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Nombre total d’éléments ou d’octets qui seront chargés si le processus de chargement aboutit.
	
	</apiDesc></apiParam><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Constructeur d’objets <codeph class="+ topic/ph pr-d/codeph ">ProgressEvent</codeph>.
	 
	 </apiTipText></apiTipTexts></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Crée un objet Event contenant des informations sur les événements progress. Les objets Event sont transmis en tant que paramètres aux écouteurs d’événements.
	
	</apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="flash.events:ProgressEvent:clone" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">clone</apiName><shortdesc class="- topic/shortdesc ">
	Crée une copie de l’objet ProgressEvent et définit la valeur de chaque propriété de sorte qu’elle corresponde à la valeur d’origine.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Nouvel objet ProgressEvent dont les propriétés ont la même valeur que celles de l’objet d’origine.
	 
	 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.events:Event</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Crée une copie de l’objet ProgressEvent et définit la valeur de chaque propriété de sorte qu’elle corresponde à la valeur d’origine. 
	
	</apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.events:ProgressEvent:toString" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">toString</apiName><shortdesc class="- topic/shortdesc ">
	Renvoie une chaîne répertoriant toutes les propriétés de l’objet ProgressEvent.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Chaîne répertoriant toutes les propriétés de l’objet <codeph class="+ topic/ph pr-d/codeph ">ProgressEvent</codeph>.
	 
	 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Renvoie une chaîne répertoriant toutes les propriétés de l’objet ProgressEvent. La chaîne est écrite au format suivant :
	<p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">[ProgressEvent type=<i class="+ topic/ph hi-d/i ">valeur</i> bubbles=<i class="+ topic/ph hi-d/i ">valeur</i> cancelable=<i class="+ topic/ph hi-d/i ">valeur</i> bytesLoaded=<i class="+ topic/ph hi-d/i ">valeur</i> bytesTotal=<i class="+ topic/ph hi-d/i ">valeur</i>]</codeph></p>
	
	</apiDesc></apiOperationDetail></apiOperation><apiValue id="flash.events:ProgressEvent:PROGRESS" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">PROGRESS</apiName><shortdesc class="- topic/shortdesc ">
	Définit la valeur de la propriété type d’un objet événement progress.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">progress</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet événement <codeph class="+ topic/ph pr-d/codeph ">progress</codeph>.
	
	<p class="- topic/p ">Les propriétés de cet événement sont les suivantes :</p>
	
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bytesLoaded</codeph></entry><entry class="- topic/entry ">Nombre d’éléments ou d’octets chargés lors du traitement de l’événement par l’écouteur.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bytesTotal</codeph></entry><entry class="- topic/entry ">Nombre total d’éléments ou d’octets qui seront chargés si le processus de chargement aboutit.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">L’objet qui traite activement l’objet Event avec un écouteur d’événements.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Objet indiquant la progression. </entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#LoaderInfo/event:progress" class="- topic/link "><linktext class="- topic/linktext ">flash.display.LoaderInfo.progress</linktext></link><link href="flash.media.xml#Sound/event:progress" class="- topic/link "><linktext class="- topic/linktext ">flash.media.Sound.progress</linktext></link><link href="flash.net.xml#FileReference/event:progress" class="- topic/link "><linktext class="- topic/linktext ">flash.net.FileReference.progress</linktext></link><link href="flash.net.xml#URLLoader/event:progress" class="- topic/link "><linktext class="- topic/linktext ">flash.net.URLLoader.progress</linktext></link><link href="flash.net.xml#URLStream/event:progress" class="- topic/link "><linktext class="- topic/linktext ">flash.net.URLStream.progress</linktext></link></related-links></apiValue><apiValue id="flash.events:ProgressEvent:SOCKET_DATA" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">SOCKET_DATA</apiName><shortdesc class="- topic/shortdesc ">
	Définit la valeur de la propriété type d’un objet événement socketData.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">socketData</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet événement <codeph class="+ topic/ph pr-d/codeph ">socketData</codeph>.
	
	<p class="- topic/p ">Les propriétés de cet événement sont les suivantes :</p>
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Objet qui traite activement l’événement.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bytesLoaded</codeph></entry><entry class="- topic/entry ">Nombre d’éléments ou d’octets chargés lors du traitement de l’événement par l’écouteur.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bytesTotal</codeph></entry><entry class="- topic/entry ">0 ; cette propriété n’est pas utilisée par les objets événement <codeph class="+ topic/ph pr-d/codeph ">socketData</codeph>.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Socket indiquant la progression.</entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#Socket/event:socketData" class="- topic/link "><linktext class="- topic/linktext ">flash.net.Socket.socketData</linktext></link></related-links></apiValue><apiValue id="flash.events:ProgressEvent:STANDARD_ERROR_DATA" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">STANDARD_ERROR_DATA</apiName><shortdesc class="- topic/shortdesc ">
	Définit la valeur de la propriété type d’un objet d’événement standardErrorData.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">standardErrorData</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet d’événement <codeph class="+ topic/ph pr-d/codeph ">standardErrorData</codeph>.
	
	<p class="- topic/p ">Les propriétés de cet événement sont les suivantes :</p>
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Objet qui traite activement l’événement.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bytesLoaded</codeph></entry><entry class="- topic/entry ">Nombre d’octets des données d’erreur mises en mémoire tampon par NativeProcessObject.error suite à cet événement.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bytesTotal</codeph></entry><entry class="- topic/entry ">0 ; cette propriété n’est pas utilisée par les objets d’événement <codeph class="+ topic/ph pr-d/codeph ">standardErrorData</codeph>.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Objet NativeProcess publiant les données d’erreur.</entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.desktop.xml#NativeProcess/event:standardErrorData" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.NativeProcess.standardErrorData</linktext></link></related-links></apiValue><apiValue id="flash.events:ProgressEvent:STANDARD_INPUT_PROGRESS" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">STANDARD_INPUT_PROGRESS</apiName><shortdesc class="- topic/shortdesc ">
	 Définit la valeur de la propriété type d’un objet d’événement standardInputProgress.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">standardInputProgress</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet d’événement <codeph class="+ topic/ph pr-d/codeph ">standardInputProgress</codeph>.
	 
	 <p class="- topic/p ">Les propriétés de cet événement sont les suivantes :</p>
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Objet qui traite activement l’événement.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bytesLoaded</codeph></entry><entry class="- topic/entry ">Nombre d’octets des données d’erreur mises en mémoire tampon par NativeProcessObject.error suite à cet événement.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bytesTotal</codeph></entry><entry class="- topic/entry ">0 ; cette propriété n’est pas utilisée par les objets d’événement <codeph class="+ topic/ph pr-d/codeph ">standardInputProgress</codeph>.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Objet NativeProcess publiant les données d’erreur.</entry></row></tbody></tgroup></adobetable>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.desktop.xml#NativeProcess/event:standardInputProgress" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.NativeProcess.standardInputProgress</linktext></link></related-links></apiValue><apiValue id="flash.events:ProgressEvent:STANDARD_OUTPUT_DATA" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">STANDARD_OUTPUT_DATA</apiName><shortdesc class="- topic/shortdesc ">
	Définit la valeur de la propriété type d’un objet d’événement standardOutputData.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">standardOutputData</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet d’événement <codeph class="+ topic/ph pr-d/codeph ">standardOutputData</codeph>.
	
	<p class="- topic/p ">Les propriétés de cet événement sont les suivantes :</p>
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Objet qui traite activement l’événement.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bytesLoaded</codeph></entry><entry class="- topic/entry ">Nombre d’octets des données de sortie mises en mémoire tampon via NativeProcessObject.output suite à cet événement.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bytesTotal</codeph></entry><entry class="- topic/entry ">0 ; cette propriété n’est pas utilisée par les objets d’événement <codeph class="+ topic/ph pr-d/codeph ">standardOutputData</codeph>.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Objet NativeProcess publiant les données de sortie.</entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.desktop.xml#NativeProcess/event:standardOutputData" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.NativeProcess.standardOutputData</linktext></link></related-links></apiValue><apiValue id="flash.events:ProgressEvent:bytesLoaded:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">bytesLoaded</apiName><shortdesc class="- topic/shortdesc ">
	Nombre d’éléments ou d’octets chargés lors du traitement de l’événement par l’écouteur.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Nombre d’éléments ou d’octets chargés lors du traitement de l’événement par l’écouteur.
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:ProgressEvent:bytesTotal:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">bytesTotal</apiName><shortdesc class="- topic/shortdesc ">
	Nombre total d’éléments ou d’octets qui seront chargés si le processus de chargement aboutit.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Nombre total d’éléments ou d’octets chargés si le processus de chargement aboutit. Si l’événement progress est distribué/associé à un objet Socket, le bytesTotal est toujours 0 à moins qu’une valeur soit spécifiée dans le paramètre bytesTotal du constructeur. Le nombre réel d’octets renvoyé n’est pas défini et dépend du développeur de l’application.
	
	</apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.events:ShaderEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">ShaderEvent</apiName><shortdesc class="- topic/shortdesc ">
	 Un événement ShaderEvent est déclenché lorsqu’une opération de shader est lancée par un ShaderJob qui se termine.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Un événement ShaderEvent est déclenché lorsqu’une opération de shader est lancée par un ShaderJob qui se termine.
	 
	 </apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.display.xml#ShaderJob" class="- topic/link "><linktext class="- topic/linktext ">flash.display.ShaderJob</linktext></link></related-links><adobeApiEvent id="flash.events:ShaderEvent:COMPLETE_complete" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">complete</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:ShaderEvent:COMPLETE</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:ShaderEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#ShaderJob/event:complete" class="- topic/link "><linktext class="- topic/linktext ">flash.display.ShaderJob.complete</linktext></link></related-links></adobeApiEvent><apiConstructor id="flash.events:ShaderEvent:ShaderEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">ShaderEvent</apiName><shortdesc class="- topic/shortdesc ">
		 Crée un objet ShaderEvent à transmettre aux écouteurs d’événement.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">type</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Le type d’événement, accessible dans la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph>.
		 
		 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">bubbles</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Détermine si l’objet Event prend part à la phase de propagation du flux d’événements. La valeur par défaut est <codeph class="+ topic/ph pr-d/codeph ">false</codeph>.
		 
		 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">cancelable</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Détermine si l’objet Event peut être annulé. La valeur par défaut est <codeph class="+ topic/ph pr-d/codeph ">false</codeph>.
		 
		 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">bitmap</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.display:BitmapData</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Objet BitmapData contenant le résultat de l’opération terminée (ou <codeph class="+ topic/ph pr-d/codeph ">null</codeph> si la cible n’était pas un objet BitmapData).
		 
		 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">array</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.utils:ByteArray</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Objet ByteArray contenant le résultat de l’opération terminée (ou <codeph class="+ topic/ph pr-d/codeph ">null</codeph> si la cible n’était pas un objet ByteArray).
		 
		 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">vector</apiItemName><apiType value="Vector$Number" name="type" class="- topic/state reference/state apiRef/apiType "/><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Le Vector.Occurrence &lt;Number> contenant le résultat de l’opération terminée (ou <codeph class="+ topic/ph pr-d/codeph ">null</codeph> si la cible n’était pas un Vector.Occurrence &lt;Number>).
		 
		 </apiDesc></apiParam></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 Crée un objet ShaderEvent à transmettre aux écouteurs d’événement.
		 
		 </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="flash.events:ShaderEvent:clone" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">clone</apiName><shortdesc class="- topic/shortdesc ">
		 Crée une copie de l’objet ShaderEvent et définit la valeur de chaque propriété de sorte qu’elle corresponde à la valeur d’origine.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Nouvel objet ShaderEvent dont les propriétés ont la même valeur que celles de l’objet d’origine.
		 
		 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.events:Event</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 Crée une copie de l’objet ShaderEvent et définit la valeur de chaque propriété de sorte qu’elle corresponde à la valeur d’origine.
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.events:ShaderEvent:toString" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">toString</apiName><shortdesc class="- topic/shortdesc ">
		 Renvoie une chaîne répertoriant toutes les propriétés de l’objet ShaderEvent.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Chaîne répertoriant toutes les propriétés de l’objet ShaderEvent.
		 
		 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 Renvoie une chaîne répertoriant toutes les propriétés de l’objet ShaderEvent. La chaîne est écrite au format suivant :
		 
		 <p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">[ShaderEvent type=<i class="+ topic/ph hi-d/i ">valeur</i> bubbles=<i class="+ topic/ph hi-d/i ">valeur</i> cancelable=<i class="+ topic/ph hi-d/i ">valeur</i> eventPhase=<i class="+ topic/ph hi-d/i ">valeur</i> bitmapData=<i class="+ topic/ph hi-d/i ">valeur</i> byteArray=<i class="+ topic/ph hi-d/i ">valeur</i> vector=<i class="+ topic/ph hi-d/i ">valeur</i>]</codeph></p>
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiValue id="flash.events:ShaderEvent:COMPLETE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">COMPLETE</apiName><shortdesc class="- topic/shortdesc ">
		 Définit la valeur de la propriété type d’un objet événement complete.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">complete</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 Définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet événement <codeph class="+ topic/ph pr-d/codeph ">complete</codeph>.
		 
		 <p class="- topic/p ">Les propriétés de cet événement sont les suivantes :</p>
		 
		 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bitmapData</codeph></entry><entry class="- topic/entry ">Objet BitmapData contenant le résultat de l’opération terminée (ou <codeph class="+ topic/ph pr-d/codeph ">null</codeph> si la cible n’était pas un objet BitmapData).</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">byteArray</codeph></entry><entry class="- topic/entry ">Objet ByteArray contenant le résultat de l’opération terminée (ou <codeph class="+ topic/ph pr-d/codeph ">null</codeph> si la cible n’était pas un objet ByteArray).</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Objet qui traite activement l’objet de l’événement avec un écouteur d’événement.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Objet ShaderJob signalant la fin de l’opération.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">vector</codeph></entry><entry class="- topic/entry ">Le Vector.Occurrence &lt;Number> contenant le résultat de l’opération terminée (ou <codeph class="+ topic/ph pr-d/codeph ">null</codeph> si la cible n’était pas un Vector.Occurrence &lt;Number>).</entry></row></tbody></tgroup></adobetable>
		 
		 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#ShaderJob/event:complete" class="- topic/link "><linktext class="- topic/linktext ">flash.display.ShaderJob.complete</linktext></link></related-links></apiValue><apiValue id="flash.events:ShaderEvent:bitmapData:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">bitmapData</apiName><shortdesc class="- topic/shortdesc ">
		 Objet BitmapData transmis à la méthode ShaderJob.start().</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.display:BitmapData</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 Objet BitmapData transmis à la méthode <codeph class="+ topic/ph pr-d/codeph ">ShaderJob.start()</codeph>. Si un ByteArray ou un Vector&lt;Number> a été transmis à la méthode <codeph class="+ topic/ph pr-d/codeph ">start()</codeph>, cette propriété est <codeph class="+ topic/ph pr-d/codeph ">null</codeph>.
		 
		 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#ShaderJob/start()" class="- topic/link "><linktext class="- topic/linktext ">flash.display.ShaderJob.start()</linktext></link></related-links></apiValue><apiValue id="flash.events:ShaderEvent:byteArray:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">byteArray</apiName><shortdesc class="- topic/shortdesc ">
		 
		 Objet ByteArray transmis à la méthode ShaderJob.start().</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.utils:ByteArray</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 
		 Objet ByteArray transmis à la méthode <codeph class="+ topic/ph pr-d/codeph ">ShaderJob.start()</codeph>. S’il s’agit d’un BitmapData ou d’un Vector.Si l’objet &lt;Number> a été transmis à la méthode <codeph class="+ topic/ph pr-d/codeph ">start()</codeph>, cette propriété est <codeph class="+ topic/ph pr-d/codeph ">null</codeph>.
		 
		 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#ShaderJob/start()" class="- topic/link "><linktext class="- topic/linktext ">flash.display.ShaderJob.start()</linktext></link></related-links></apiValue><apiValue id="flash.events:ShaderEvent:vector:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">vector</apiName><shortdesc class="- topic/shortdesc ">
		 
         Le Vector.Objet &amp;lt;Number&amp;gt; transmi à la méthode ShaderJob.start().</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiType value="Vector$Number" name="type" class="- topic/state reference/state apiRef/apiType "/></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 
         Le Vector.Objet &lt;Number> transmis à la méthode <codeph class="+ topic/ph pr-d/codeph ">ShaderJob.start()</codeph>. Si un objet BitmapData ou ByteArray a été transmis à la méthode <codeph class="+ topic/ph pr-d/codeph ">start()</codeph>, cette propriété est <codeph class="+ topic/ph pr-d/codeph ">null</codeph>.
		 
		 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#ShaderJob/start()" class="- topic/link "><linktext class="- topic/linktext ">flash.display.ShaderJob.start()</linktext></link></related-links></apiValue></apiClassifier><apiClassifier languages="" id="flash.events:DRMAuthenticationCompleteEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">DRMAuthenticationCompleteEvent</apiName><shortdesc class="- topic/shortdesc ">
	 DRMManager distribue un objet DRMAuthenticationCompleteEvent lorsqu’un appel de la méthode authenticate() de l’objet DRMManager aboutit.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 DRMManager distribue un objet DRMAuthenticationCompleteEvent lorsqu’un appel de la méthode <codeph class="+ topic/ph pr-d/codeph ">authenticate()</codeph> de l’objet DRMManager aboutit.
	 
 	 </apiDesc></apiClassifierDetail><apiConstructor id="flash.events:DRMAuthenticationCompleteEvent:DRMAuthenticationCompleteEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">DRMAuthenticationCompleteEvent</apiName><shortdesc class="- topic/shortdesc ">
		 Crée une nouvelle occurrence d’un objet DRMAuthenticationCompleteEvent.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">type</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">La chaîne de type de l’événement
		 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">bubbles</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Si l’événement propage vers le haut la liste d’affichage
		 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">cancelable</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Si l’événement peut être annulé
		 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">inServerURL</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">L’URL du serveur auquel l’utilisateur s’est connecté
		 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">inDomain</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Le domaine authentifié sur le serveur auquel l’utilisateur s’est connecté
		 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">inToken</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.utils:ByteArray</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Le symbole d’authentification
		 
	 	 </apiDesc></apiParam></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 Crée une nouvelle occurrence d’un objet DRMAuthenticationCompleteEvent.
		 
		 </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="flash.events:DRMAuthenticationCompleteEvent:clone" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">clone</apiName><shortdesc class="- topic/shortdesc "> 
	 Duplique une occurrence d’une sous-classe Event.</shortdesc><prolog class="- topic/prolog "/><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Nouvel objet Event identique à l’original.
	 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.events:Event</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	 Duplique une occurrence d’une sous-classe Event.
	 
     <p class="- topic/p ">Renvoie un nouvel objet Event, qui est une copie de l’occurrence d’origine de l’objet Event. En règle générale, vous n’appelez pas <codeph class="+ topic/ph pr-d/codeph ">clone()</codeph>. La classe EventDispatcher l’appelle automatiquement lorsque vous redistribuez un événement, en d’autres termes, lorsque vous appelez <codeph class="+ topic/ph pr-d/codeph ">dispatchEvent(event)</codeph> à partir du gestionnaire qui gère <codeph class="+ topic/ph pr-d/codeph ">event</codeph>.</p>
	 
	 <p class="- topic/p ">Le nouvel objet Event comprend toutes les propriétés de l’objet d’origine.</p> 
	 
	 <p class="- topic/p ">Lorsque vous créez une classe Event personnalisée, vous devez bloquer la méthode <codeph class="+ topic/ph pr-d/codeph ">Event.clone()</codeph> héritée afin qu’elle duplique les propriétés de votre classe personnalisée. Si vous ne définissez pas toutes les propriétés que vous ajoutez à votre sous-classe Event, elles ne posséderont pas les valeurs correctes lorsque les écouteurs gèreront l’événement redistribué.</p>
	 
	 <p class="- topic/p ">Dans cet exemple, <codeph class="+ topic/ph pr-d/codeph ">PingEvent</codeph> est une sous-classe de <codeph class="+ topic/ph pr-d/codeph ">Event</codeph> et implémente donc sa propre version de <codeph class="+ topic/ph pr-d/codeph ">clone()</codeph>.</p>
	 
	 <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
	 class PingEvent extends Event {
		 var URL:String;
		 
	 public override function clone():Event {
	 	     return new PingEvent(type, bubbles, cancelable, URL);
	    }
	 }
	 </codeblock>
	 
     </apiDesc></apiOperationDetail></apiOperation><apiValue id="flash.events:DRMAuthenticationCompleteEvent:AUTHENTICATION_COMPLETE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">AUTHENTICATION_COMPLETE</apiName><shortdesc class="- topic/shortdesc ">
		 La constante de type chaîne à utiliser pour l’événement de finalisation de l’authentification dans le paramètre type lors de l’ajout et de la suppression d’écouteurs d’événement.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">authenticationComplete</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 La constante de type chaîne à utiliser pour l’événement de finalisation de l’authentification dans le paramètre type lors de l’ajout et de la suppression d’écouteurs d’événement.
		   
	 	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:DRMAuthenticationCompleteEvent:domain:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">domain</apiName><shortdesc class="- topic/shortdesc ">
		 Le domaine de contenu du serveur de droits multimédias.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 Le domaine de contenu du serveur de droits multimédias Ici, le domaine n’est pas un nom de domaine réseau ou Internet.
		  
	 	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:DRMAuthenticationCompleteEvent:serverURL:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">serverURL</apiName><shortdesc class="- topic/shortdesc ">
		 L’URL du serveur de droits multimédias.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 L’URL du serveur de droits multimédias.
		  
	 	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:DRMAuthenticationCompleteEvent:token:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">token</apiName><shortdesc class="- topic/shortdesc ">
		 Le jeton d’authentification.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.utils:ByteArray</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 Le jeton d’authentification.
		 
		 <p class="- topic/p ">L’authentification est automatiquement ajoutée à la mémoire cache de la session du DRMManager. Vous pouvez enregistrer le symbole et l’utiliser pour authentifier l’utilisateur lors d’une prochaine session. Réutilisez un symbole avec la méthode <codeph class="+ topic/ph pr-d/codeph ">setAuthenticationToken()</codeph> du DRMManager. Le serveur qui génère le symbole en détermine l’expiration et d’autres propriétés.</p>
		   
		 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.drm.xml#DRMManager/setAuthenticationToken()" class="- topic/link "><linktext class="- topic/linktext ">flash.net.drm.DRMManager.setAuthenticationToken()</linktext></link></related-links></apiValue></apiClassifier><apiClassifier languages="" id="flash.events:AccelerometerEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">AccelerometerEvent</apiName><shortdesc class="- topic/shortdesc ">
La classe Accelerometer distribue des objets AccelerometerEvent lorsque le capteur de l’accéléromètre installé sur le périphérique met à disposition des mises à jour d’accélération.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
La classe Accelerometer distribue des objets AccelerometerEvent lorsque le capteur de l’accéléromètre installé sur le périphérique met à disposition des mises à jour d’accélération.

</apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.sensors.xml#Accelerometer" class="- topic/link "><linktext class="- topic/linktext ">flash.sensors.Accelerometer</linktext></link></related-links><adobeApiEvent id="flash.events:AccelerometerEvent:UPDATE_update" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">update</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:AccelerometerEvent:UPDATE</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:AccelerometerEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="flash.events:AccelerometerEvent:AccelerometerEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">AccelerometerEvent</apiName><shortdesc class="- topic/shortdesc ">
	Crée un objet AccelerometerEvent qui contient des informations sur l’accélération le long de l’axe tridimensionnel.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">type</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc "> Type de l’événement. Les écouteurs d’événement peuvent accéder à cette information par le biais de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> héritée. Il n’existe qu’un seul type d’événement de mise à jour : <codeph class="+ topic/ph pr-d/codeph ">AccelerometerEvent.UPDATE</codeph>.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">bubbles</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Détermine si l’objet Event se propage vers le haut. Les écouteurs d’événement peuvent accéder à cette information par le biais de la propriété <codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph> héritée.  
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">cancelable</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Détermine si l’objet Event peut être annulé. Les écouteurs d’événement peuvent accéder à cette information par le biais de la propriété <codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph> héritée. 
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">timestamp</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Horodatage de la mise à jour de l’accéléromètre.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">accelerationX</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Valeur de l’accélération, en Gs (9,8 m/sec/sec), le long de l’axe x.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">accelerationY</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Valeur de l’accélération, en Gs (9,8 m/sec/sec), le long de l’axe y.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">accelerationZ</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Valeur de l’accélération, en Gs (9,8 m/sec/sec), le long de l’axe z.
	
	</apiDesc></apiParam><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Constructeur associé aux objets AccelerometerEvent.
	
	</apiTipText></apiTipTexts></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Crée un objet AccelerometerEvent qui contient des informations sur l’accélération le long de l’axe tridimensionnel. Les objets Event sont transmis en tant que paramètres aux écouteurs d’événements.
	
	</apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="flash.events:AccelerometerEvent:clone" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">clone</apiName><shortdesc class="- topic/shortdesc "> 
	     Crée une copie de l’objet AccelerometerEvent et définit la valeur de chaque propriété de sorte qu’elle corresponde à la valeur d’origine.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Nouvel objet AccelerometerEvent dont les propriétés ont la même valeur que celles de l’objet d’origine.
	     
	     </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.events:Event</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	     Crée une copie de l’objet AccelerometerEvent et définit la valeur de chaque propriété de sorte qu’elle corresponde à la valeur d’origine. 
	       
	     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.events:AccelerometerEvent:toString" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">toString</apiName><shortdesc class="- topic/shortdesc "> 
	     Renvoie une chaîne répertoriant toutes les propriétés de l’objet AccelerometerEvent.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage name="ActionScript" version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Chaîne répertoriant toutes les propriétés de l’objet AccelerometerEvent.
	     
	     </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	     Renvoie une chaîne répertoriant toutes les propriétés de l’objet AccelerometerEvent. Le format utilisé est le suivant :
	     
	     <p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">[AccelerometerEvent type=<i class="+ topic/ph hi-d/i ">valeur</i> bubbles=<i class="+ topic/ph hi-d/i ">valeur</i> cancelable=<i class="+ topic/ph hi-d/i ">valeur</i> timestamp=<i class="+ topic/ph hi-d/i ">valeur</i> accelerationX=<i class="+ topic/ph hi-d/i ">valeur</i> accelerationY=<i class="+ topic/ph hi-d/i ">valeur</i> accelerationZ=<i class="+ topic/ph hi-d/i ">valeur</i> ] </codeph></p>
	       
	     </apiDesc></apiOperationDetail></apiOperation><apiValue id="flash.events:AccelerometerEvent:UPDATE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">UPDATE</apiName><shortdesc class="- topic/shortdesc ">
	Définit la valeur de la propriété type d’un objet d’événement AccelerometerEvent.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">update</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet d’événement <codeph class="+ topic/ph pr-d/codeph ">AccelerometerEvent</codeph>.  
	<p class="- topic/p ">Les propriétés de cet événement sont les suivantes :</p>
	
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">L’objet qui traite activement l’objet Event avec un écouteur d’événements.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">timestamp</codeph></entry><entry class="- topic/entry ">Horodatage de la mise à jour de l’accéléromètre.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">accelerationX</codeph></entry><entry class="- topic/entry ">Valeur de l’accélération, en Gs (9,8 m/sec/sec), le long de l’axe x.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">accelerationY</codeph></entry><entry class="- topic/entry ">Valeur de l’accélération, en Gs (9,8 m/sec/sec), le long de l’axe y. </entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">accelerationZ</codeph></entry><entry class="- topic/entry ">Valeur de l’accélération, en Gs (9,8 m/sec/sec), le long de l’axe z. </entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:AccelerometerEvent:accelerationX:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">accelerationX</apiName><shortdesc class="- topic/shortdesc ">
		Accélération le long de l’axe x, mesurée en Gs.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		Accélération le long de l’axe x, mesurée en Gs. (1 G est équivaut à environ 9,8 m/sec/sec.) L’axe x s’étend de gauche à droite du périphérique lorsqu’il est en position verticale. L’accélération est positive si le périphérique se déplace vers la droite. 
		
		</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:AccelerometerEvent:accelerationY:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">accelerationY</apiName><shortdesc class="- topic/shortdesc ">
		Accélération le long de l’axe y, mesurée en Gs.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		Accélération le long de l’axe y, mesurée en Gs. (1 G est équivaut à environ 9,8 m/sec/sec.) L’axe y s’étend de bas en haut du périphérique lorsqu’il est en position verticale. L’accélération est positive si le périphérique se déplace vers le haut par rapport à cet axe.
		
		</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:AccelerometerEvent:accelerationZ:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">accelerationZ</apiName><shortdesc class="- topic/shortdesc ">
		Accélération le long de l’axe z, mesurée en Gs.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		Accélération le long de l’axe z, mesurée en Gs. (1 G est équivaut à environ 9,8 m/sec/sec.) L’axe z est perpendiculaire à la face du périphérique. L’accélération est positive si vous déplacez le périphérique de façon à élever la face.
		
		</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:AccelerometerEvent:timestamp:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">timestamp</apiName><shortdesc class="- topic/shortdesc "> 
		Nombre de millisecondes au moment où se produit l’événement après l’initialisation du moteur d’exécution.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
		Nombre de millisecondes au moment où se produit l’événement après l’initialisation du moteur d’exécution. Par exemple, si le périphérique capture les données de l’accéléromètre 4 secondes après l’initialisation de l’application, la propriété <codeph class="+ topic/ph pr-d/codeph ">timestamp</codeph> de l’événement est définie sur 4000. 
		
		</apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.events:IMEEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">IMEEvent</apiName><shortdesc class="- topic/shortdesc ">
 Un objet IMEEvent est distribué lorsque l’utilisateur saisit du texte à l’aide d’un IME.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><internal>includeExample examples\IMEEventExample.as -noswf
 
 </internal></asCustoms></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Objets Event associés aux événements IMEEvent.
 </apiTipText></apiTipTexts><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:TextEvent</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Un objet IMEEvent est distribué lorsque l’utilisateur saisit du texte à l’aide d’un IME. Les IME sont généralement utilisés pour saisir du texte dans des langues qui utilisent des idéogrammes à la place des lettres, tels que le japonais, le chinois et le coréen. Il existe deux événements IME : <codeph class="+ topic/ph pr-d/codeph ">IMEEvent.IME_COMPOSITION</codeph> et <codeph class="+ topic/ph pr-d/codeph ">IMEEvent.IME_START_COMPOSITION</codeph>.
 
 </apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.system.xml#IME" class="- topic/link "><linktext class="- topic/linktext ">flash.system.IME</linktext></link><link href="flash.events.xml#IMEEvent/IME_COMPOSITION" class="- topic/link "><linktext class="- topic/linktext ">flash.events.IMEEvent.IME_COMPOSITION</linktext></link><link href="flash.events.xml#IMEEvent/IME_START_COMPOSITION" class="- topic/link "><linktext class="- topic/linktext ">flash.events.IMEEvent.IME_START_COMPOSITION</linktext></link></related-links><adobeApiEvent id="flash.events:IMEEvent:IME_COMPOSITION_imeComposition" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">imeComposition</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:IMEEvent:IME_COMPOSITION</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:IMEEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.system.xml#IME/event:imeComposition" class="- topic/link "><linktext class="- topic/linktext ">flash.system.IME.imeComposition</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:IMEEvent:IME_START_COMPOSITION_imeComposition" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">imeComposition</apiName><prolog class="- topic/prolog "><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><airversion>AIR 2
	 </airversion></asCustoms></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:IMEEvent:IME_START_COMPOSITION</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:IMEEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.system.xml#IME/event:imeComposition" class="- topic/link "><linktext class="- topic/linktext ">flash.system.IME.imeComposition</linktext></link></related-links></adobeApiEvent><apiConstructor id="flash.events:IMEEvent:IMEEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">IMEEvent</apiName><shortdesc class="- topic/shortdesc ">
	 Crée un objet Event à l’aide d’informations spécifiques relatives aux événements IME.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">type</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc "> Type de l’événement. Les écouteurs d’événement peuvent accéder à cette information par le biais de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> héritée. Il n’existe qu’un seul événement IME : <codeph class="+ topic/ph pr-d/codeph ">IMEEvent.IME_COMPOSITION</codeph>.
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">bubbles</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Détermine si l’objet Event prend part à la phase de propagation du flux d’événements. Les écouteurs d’événement peuvent accéder à cette information par le biais de la propriété <codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph> héritée.  
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">cancelable</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Détermine si l’objet Event peut être annulé. Les écouteurs d’événement peuvent accéder à cette information par le biais de la propriété <codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph> héritée. 
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">text</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData "/><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Chaîne de lecture émanant de l’IME. Il s’agit de la chaîne d’origine tapée par l’utilisateur, avant qu’il ne sélectionne des candidats. La chaîne de composition finale est transmise à l’objet disposant du focus clavier dans un événement <codeph class="+ topic/ph pr-d/codeph ">TextEvent.TEXT_INPUT</codeph>. Les écouteurs d’événement peuvent accéder à cette information par le biais de la propriété <codeph class="+ topic/ph pr-d/codeph ">text</codeph>.
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">imeClient</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.text.ime:IIMEClient</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ensemble de rappels utilisé par le moteur de saisie pour communiquer avec l’IME. Utile si votre code possède son propre moteur de saisie et effectue le rendu des lignes de texte lui-même au lieu d’utiliser les objets TextField ou Text Layout Framework.
	 
	 </apiDesc></apiParam><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Constructeur associé aux objets IME.
	 </apiTipText></apiTipTexts></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Crée un objet Event à l’aide d’informations spécifiques relatives aux événements IME. Les objets Event sont transmis en tant que paramètres aux écouteurs d’événements.
	 
	 </apiDesc></apiConstructorDetail><related-links class="- topic/related-links "><link href="flash.system.xml#IME" class="- topic/link "><linktext class="- topic/linktext ">flash.system.IME</linktext></link><link href="flash.events.xml#IMEEvent/IME_COMPOSITION" class="- topic/link "><linktext class="- topic/linktext ">flash.events.IMEEvent.IME_COMPOSITION</linktext></link><link href="flash.events.xml#IMEEvent/IME_START_COMPOSITION" class="- topic/link "><linktext class="- topic/linktext ">flash.events.IMEEvent.IME_START_COMPOSITION</linktext></link></related-links></apiConstructor><apiOperation id="flash.events:IMEEvent:clone" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">clone</apiName><shortdesc class="- topic/shortdesc ">
	 Crée une copie de l’objet IMEEvent et définit la valeur de chaque propriété de sorte qu’elle corresponde à la valeur d’origine.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Nouvel objet IMEEvent dont les propriétés ont la même valeur que celles de l’objet d’origine. 
	  
	  </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.events:Event</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Crée une copie de l’objet IMEEvent et définit la valeur de chaque propriété de sorte qu’elle corresponde à la valeur d’origine. 
	 
	 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.events:IMEEvent:toString" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">toString</apiName><shortdesc class="- topic/shortdesc ">
	 Renvoie une chaîne répertoriant toutes les propriétés de l’objet IMEEvent.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Chaîne répertoriant toutes les propriétés de l’objet IMEEvent.
	  
	  </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Renvoie une chaîne répertoriant toutes les propriétés de l’objet IMEEvent. La chaîne est écrite au format suivant :
	 <p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">[IMEEvent type=<i class="+ topic/ph hi-d/i ">valeur</i> bubbles=<i class="+ topic/ph hi-d/i ">valeur</i> cancelable=<i class="+ topic/ph hi-d/i ">valeur</i> text=<i class="+ topic/ph hi-d/i ">valeur</i>]</codeph></p>
	 
	 </apiDesc></apiOperationDetail></apiOperation><apiValue id="flash.events:IMEEvent:IME_COMPOSITION" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">IME_COMPOSITION</apiName><shortdesc class="- topic/shortdesc ">
	 Définit la valeur de la propriété type d’un objet événement imeComposition.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">imeComposition</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet événement <codeph class="+ topic/ph pr-d/codeph ">imeComposition</codeph>. 
	 <p class="- topic/p ">Les propriétés de cet événement sont les suivantes :</p>
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">L’objet qui traite activement l’objet Event avec un écouteur d’événements.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">L’objet IME.</entry></row></tbody></tgroup></adobetable>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.system.xml#IME/event:imeComposition" class="- topic/link "><linktext class="- topic/linktext ">flash.system.IME.imeComposition</linktext></link></related-links></apiValue><apiValue id="flash.events:IMEEvent:IME_START_COMPOSITION" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">IME_START_COMPOSITION</apiName><shortdesc class="- topic/shortdesc ">
	  Pour gérer la saisie de texte IME, le récepteur doit définir le champ imeClient de l’événement sur un objet qui implémente l’interface IIMEClient.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><airversion>AIR 2
	 </airversion></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">imeStartComposition</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	  Pour gérer la saisie de texte IME, le récepteur doit définir le champ <codeph class="+ topic/ph pr-d/codeph ">imeClient</codeph> de l’événement sur un objet qui implémente l’interface IIMEClient. Si le champ <codeph class="+ topic/ph pr-d/codeph ">imeClient</codeph> n’est pas défini, le moteur d’exécution utilise plutôt la composition IME hors ligne et transmet la composition finale en tant qu’événement TEXT_INPUT.
	 <p class="- topic/p ">Les propriétés de cet événement sont les suivantes :</p>
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">L’objet qui traite activement l’objet Event avec un écouteur d’événements.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">L’objet IME.</entry></row></tbody></tgroup></adobetable>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.system.xml#IME/event:imeComposition" class="- topic/link "><linktext class="- topic/linktext ">flash.system.IME.imeComposition</linktext></link></related-links></apiValue><apiValue id="flash.events:IMEEvent:imeClient:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">imeClient</apiName><shortdesc class="- topic/shortdesc ">
	 Spécifie un objet qui implémente l’interface IMEClient.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><airversion>AIR 2
	 </airversion></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.text.ime:IIMEClient</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Spécifie un objet qui implémente l’interface IMEClient. Les composants basés sur le package flash.text.engine doivent implémenter cette interface pour prendre en charge la modification intégrée de texte à l’aide d’un IME.
	 
	 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.events:DataEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">DataEvent</apiName><shortdesc class="- topic/shortdesc ">
Un objet distribue un objet DataEvent à la fin du chargement des données brutes.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage name="ActionScript" version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Objets event associés aux événements DataEvent.

</apiTipText></apiTipTexts><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:TextEvent</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
Un objet distribue un objet DataEvent à la fin du chargement des données brutes. Il existe deux types d’événements data : 
<ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">DataEvent.DATA</codeph> : distribué lorsque des données sont envoyées ou reçues.</li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">DataEvent.UPLOAD_COMPLETE_DATA</codeph> : distribué lorsque les données sont envoyées et que le serveur a répondu.</li></ul>

</apiDesc><example conref="examples\DataEventExample.as" class="- topic/example "> L’exemple suivant crée un objet XMLSocket et le connecte à un serveur socket s’exécutant sur le port 8080 de <codeph class="+ topic/ph pr-d/codeph ">yourDomain</codeph>. Un écouteur d’événement est associé à l’objet XMLSocket qui écoute les événements <codeph class="+ topic/ph pr-d/codeph ">data</codeph>, distribués à chaque réception de données brutes.
 
 <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Remarques :</b> 
 <ul class="- topic/ul "><li class="- topic/li ">pour générer un événement <codeph class="+ topic/ph pr-d/codeph ">securityError</codeph> dans cet exemple, vous devez compiler le fichier SWF en définissant « Sécurité de lecture locale » sur « Accès au réseau uniquement ».</li><li class="- topic/li ">Vous devez disposer d’un serveur s’exécutant sur le domaine [<codeph class="+ topic/ph pr-d/codeph ">yourDomain</codeph>] avec le port 8080.</li></ul>
 </p>
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
package {
    import flash.display.Sprite;
    import flash.events.DataEvent;
    import flash.net.XMLSocket;

    public class DataEventExample extends Sprite {
        private var hostName:String = "[yourDomain]";
        private var port:uint = 8080;
        private var socket:XMLSocket;

        public function DataEventExample() {
            socket = new XMLSocket();
            socket.addEventListener(DataEvent.DATA, dataHandler);
            socket.connect(hostName, port);
        }

        private function dataHandler(event:DataEvent):void {
            trace("dataHandler: " + event.data);
        }
    }
}
</codeblock></example></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.net.xml#FileReference" class="- topic/link "><linktext class="- topic/linktext ">flash.net.FileReference</linktext></link><link href="flash.net.xml#XMLSocket" class="- topic/link "><linktext class="- topic/linktext ">flash.net.XMLSocket</linktext></link></related-links><adobeApiEvent id="flash.events:DataEvent:DATA_data" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">data</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:DataEvent:DATA</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:DataEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.net.xml#XMLSocket/event:data" class="- topic/link "><linktext class="- topic/linktext ">flash.net.XMLSocket.data</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:DataEvent:UPLOAD_COMPLETE_DATA_uploadCompleteData" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">uploadCompleteData</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:DataEvent:UPLOAD_COMPLETE_DATA</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:DataEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.net.xml#FileReference/event:uploadCompleteData" class="- topic/link "><linktext class="- topic/linktext ">flash.net.FileReference.uploadCompleteData</linktext></link></related-links></adobeApiEvent><apiConstructor id="flash.events:DataEvent:DataEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">DataEvent</apiName><shortdesc class="- topic/shortdesc ">
	Crée un objet événement contenant des informations sur les événements data.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage name="ActionScript" version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">type</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc "> Type de l’événement. Les écouteurs d’événement peuvent accéder à cette information par le biais de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> héritée. Il n’existe qu’un seul type d’événement data : <codeph class="+ topic/ph pr-d/codeph ">DataEvent.DATA</codeph> :
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">bubbles</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Détermine si l’objet Event prend part à la phase de propagation du flux d’événements. Les écouteurs d’événement peuvent accéder à cette information par le biais de la propriété <codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph> héritée.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">cancelable</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Détermine si l’objet Event peut être annulé. Les écouteurs d’événement peuvent accéder à cette information par le biais de la propriété <codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph> héritée.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">data</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData "/><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Les données brutes chargées dans Flash Player ou Adobe AIR. Les écouteurs d’événement peuvent accéder à cette information par le biais de la propriété <codeph class="+ topic/ph pr-d/codeph ">data</codeph>.
	
	</apiDesc></apiParam><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Constructeur associé aux objets DataEvent.
	</apiTipText></apiTipTexts></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Crée un objet événement contenant des informations sur les événements data. Les objets Event sont transmis en tant que paramètres aux écouteurs d’événements.
	
	</apiDesc></apiConstructorDetail><related-links class="- topic/related-links "><link href="flash.net.xml#XMLSocket" class="- topic/link "><linktext class="- topic/linktext ">flash.net.XMLSocket</linktext></link><link href="flash.events.xml#DataEvent/DATA" class="- topic/link "><linktext class="- topic/linktext ">DataEvent.DATA</linktext></link></related-links></apiConstructor><apiOperation id="flash.events:DataEvent:clone" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">clone</apiName><shortdesc class="- topic/shortdesc ">
	Crée une copie de l’objet DataEvent et définit la valeur de chaque propriété de sorte qu’elle corresponde à la valeur d’origine.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage name="ActionScript" version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Nouvel objet DataEvent dont les propriétés ont la même valeur que celles de l’objet d’origine.
	 
	 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.events:Event</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Crée une copie de l’objet DataEvent et définit la valeur de chaque propriété de sorte qu’elle corresponde à la valeur d’origine.
	
	</apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.events:DataEvent:toString" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">toString</apiName><shortdesc class="- topic/shortdesc ">
	Renvoie une chaîne répertoriant toutes les propriétés de l’objet DataEvent.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage name="ActionScript" version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Chaîne répertoriant toutes les propriétés de l’objet DataEvent.
	 
	 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Renvoie une chaîne répertoriant toutes les propriétés de l’objet DataEvent. La chaîne est écrite au format suivant :
	<p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">[DataEvent type=<i class="+ topic/ph hi-d/i ">valeur</i> bubbles=<i class="+ topic/ph hi-d/i ">valeur</i> cancelable=<i class="+ topic/ph hi-d/i ">valeur</i> data=<i class="+ topic/ph hi-d/i ">valeur</i>]</codeph></p>
	
	</apiDesc></apiOperationDetail></apiOperation><apiValue id="flash.events:DataEvent:DATA" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">DATA</apiName><shortdesc class="- topic/shortdesc ">
	Définit la valeur de la propriété type d’un objet événement data.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage name="ActionScript" version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">data</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet événement <codeph class="+ topic/ph pr-d/codeph ">data</codeph>.  
	<p class="- topic/p ">Les propriétés de cet événement sont les suivantes :</p>
	
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">L’objet qui traite activement l’objet Event avec un écouteur d’événements.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">data</codeph></entry><entry class="- topic/entry ">Les données brutes chargées dans Flash Player ou Adobe AIR. </entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Objet XMLSocket recevant les données.</entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#XMLSocket/event:data" class="- topic/link "><linktext class="- topic/linktext ">flash.net.XMLSocket.data</linktext></link></related-links></apiValue><apiValue id="flash.events:DataEvent:UPLOAD_COMPLETE_DATA" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">UPLOAD_COMPLETE_DATA</apiName><shortdesc class="- topic/shortdesc ">
	Définit la valeur de la propriété type d’un objet événement uploadCompleteData.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage name="ActionScript" version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9.0.28.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">uploadCompleteData</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet événement <codeph class="+ topic/ph pr-d/codeph ">uploadCompleteData</codeph>.
	<p class="- topic/p ">Les propriétés de cet événement sont les suivantes :</p>
	
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">L’objet qui traite activement l’objet Event avec un écouteur d’événements.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">data</codeph></entry><entry class="- topic/entry ">Les données brutes sont renvoyées par le serveur après le chargement réussi d’un fichier.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Objet FileReference qui reçoit les données après un chargement réussi.</entry></row></tbody></tgroup></adobetable>
	
    </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#FileReference/event:uploadCompleteData" class="- topic/link "><linktext class="- topic/linktext ">flash.net.FileReference.uploadCompleteData</linktext></link></related-links></apiValue><apiValue id="flash.events:DataEvent:data:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">data</apiName><shortdesc class="- topic/shortdesc ">
	Les données brutes chargées dans Flash Player ou Adobe AIR. </shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage name="ActionScript" version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Les données brutes chargées dans Flash Player ou Adobe AIR. 
	
	</apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.events:SecurityErrorEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">SecurityErrorEvent</apiName><shortdesc class="- topic/shortdesc ">
Un objet distribue un objet SecurityErrorEvent pour signaler l’occurrence d’une erreur de sécurité.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Objets event associés aux événements SecurityErrorEvent.
</apiTipText></apiTipTexts><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:ErrorEvent</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
Un objet distribue un objet SecurityErrorEvent pour signaler l’occurrence d’une erreur de sécurité. En règle générale, les erreurs de sécurité signalées via cette classe émanent d’opérations asynchrones, telles qu’un chargement de données, dans lesquelles les violations de la sécurité ne se manifestent pas nécessairement immédiatement. Votre écouteur d’événement peut accéder à la propriété <codeph class="+ topic/ph pr-d/codeph ">text</codeph> de l’objet pour déterminer le type d’opération tentée et les éventuelles URL concernées. En l’absence d’écouteurs d’événements, <ph class="- topic/ph ">la version débogueur de Flash Player</ph> ou l’application de débogage du lanceur AIR affiche automatiquement un message d’erreur renfermant le contenu de la propriété <codeph class="+ topic/ph pr-d/codeph ">text</codeph>. Il n’existe qu’un seul type d’événement d’erreur de sécurité : <codeph class="+ topic/ph pr-d/codeph ">SecurityErrorEvent.SECURITY_ERROR</codeph>.

<p class="- topic/p ">Les événements d’erreur de sécurité sont distribués en dernier pour tout objet cible. Par conséquent, les autres événements, en particulier ceux d’erreur générique, ne sont pas distribués pour un objet cible lié à une erreur de sécurité.</p>

</apiDesc><example conref="examples\SecurityErrorEventExample.as" class="- topic/example "> L’exemple suivant utilise la classe <codeph class="+ topic/ph pr-d/codeph ">SecurityErrorEventExample</codeph> pour montrer comment une méthode d’écouteur <codeph class="+ topic/ph pr-d/codeph ">securityErrorHandler()</codeph> peut être instanciée et définie pour écouter les événements <codeph class="+ topic/ph pr-d/codeph ">securityError</codeph> à distribuer. Cet événement se produit lorsqu’un emplacement <codeph class="+ topic/ph pr-d/codeph ">URLRequest</codeph> n’est pas exactement dans le même domaine que le fichier SWF appelant, et que le domaine demandé ne dispose pas d’une autorisation d’accès interdomaines via un fichier de régulation interdomaines.
 <p class="- topic/p ">Pour créer un objet <codeph class="+ topic/ph pr-d/codeph ">SecurityErrorEvent</codeph>, remplacez <codeph class="+ topic/ph pr-d/codeph ">http://www.[yourdomain].com</codeph> par un chemin qui ne dispose pas d’un accès interdomaines.</p>
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
package {
    import flash.display.Sprite;
    import flash.net.URLLoader;
    import flash.net.URLRequest;
    import flash.events.SecurityErrorEvent;

    public class SecurityErrorEventExample extends Sprite {
        public function SecurityErrorEventExample() {
            var loader:URLLoader = new URLLoader();
            loader.addEventListener(SecurityErrorEvent.SECURITY_ERROR, securityErrorHandler);

            var request:URLRequest = new URLRequest("http://www.[yourDomain].com");
            loader.load(request);
        }

        private function securityErrorHandler(event:SecurityErrorEvent):void {
            trace("securityErrorHandler: " + event);
        }
    }
}
</codeblock></example></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.system.xml#Security" class="- topic/link "><linktext class="- topic/linktext ">Classe Security</linktext></link><link href="flash.events.xml#SecurityErrorEvent/SECURITY_ERROR" class="- topic/link "><linktext class="- topic/linktext ">SECURITY_ERROR</linktext></link></related-links><adobeApiEvent id="flash.events:SecurityErrorEvent:SECURITY_ERROR_securityError" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">securityError</apiName><prolog class="- topic/prolog "><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><internal>(at)see flash.display.LoaderInfo#event:securityError
	</internal></asCustoms></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:SecurityErrorEvent:SECURITY_ERROR</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:SecurityErrorEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.net.xml#FileReference/event:securityError" class="- topic/link "><linktext class="- topic/linktext ">flash.net.FileReference.securityError</linktext></link><link href="flash.net.xml#LocalConnection/event:securityError" class="- topic/link "><linktext class="- topic/linktext ">flash.net.LocalConnection.securityError</linktext></link><link href="flash.net.xml#NetConnection/event:securityError" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetConnection.securityError</linktext></link><link href="flash.net.xml#Socket/event:securityError" class="- topic/link "><linktext class="- topic/linktext ">flash.net.Socket.securityError</linktext></link><link href="flash.net.xml#URLLoader/event:securityError" class="- topic/link "><linktext class="- topic/linktext ">flash.net.URLLoader.securityError</linktext></link><link href="flash.net.xml#URLStream/event:securityError" class="- topic/link "><linktext class="- topic/linktext ">flash.net.URLStream.securityError</linktext></link><link href="flash.net.xml#XMLSocket/event:securityError" class="- topic/link "><linktext class="- topic/linktext ">flash.net.XMLSocket.securityError</linktext></link></related-links></adobeApiEvent><apiConstructor id="flash.events:SecurityErrorEvent:SecurityErrorEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">SecurityErrorEvent</apiName><shortdesc class="- topic/shortdesc ">
	Crée un objet Event contenant des informations sur les événements d’erreur de sécurité.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">type</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Type de l’événement. Les écouteurs d’événement peuvent accéder à cette information par le biais de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> héritée. Il n’existe qu’un seul type d’événement d’erreur : <codeph class="+ topic/ph pr-d/codeph ">SecurityErrorEvent.SECURITY_ERROR</codeph>.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">bubbles</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Détermine si l’objet Event prend part à la phase de propagation du flux d’événements. Les écouteurs d’événement peuvent accéder à cette information par le biais de la propriété <codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph> héritée.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">cancelable</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Détermine si l’objet Event peut être annulé. Les écouteurs d’événement peuvent accéder à cette information par le biais de la propriété <codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph> héritée.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">text</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData "/><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Texte à afficher en tant que message d’erreur. Les écouteurs d’événement peuvent accéder à cette information par le biais de la propriété <codeph class="+ topic/ph pr-d/codeph ">text</codeph>.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">id</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Numéro de référence à associer à l’erreur spécifique. 
	
	</apiDesc></apiParam><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Constructeur associé aux objets SecurityErrorEvent.
	</apiTipText></apiTipTexts></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Crée un objet Event contenant des informations sur les événements d’erreur de sécurité. Les objets Event sont transmis en tant que paramètres aux écouteurs d’événements.
	
	</apiDesc></apiConstructorDetail><related-links class="- topic/related-links "><link href="flash.events.xml#SecurityErrorEvent/SECURITY_ERROR" class="- topic/link "><linktext class="- topic/linktext ">SECURITY_ERROR</linktext></link></related-links></apiConstructor><apiOperation id="flash.events:SecurityErrorEvent:clone" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">clone</apiName><shortdesc class="- topic/shortdesc ">
	Crée une copie de l’objet SecurityErrorEvent et définit la valeur de chaque propriété de sorte qu’elle corresponde à la valeur d’origine.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Nouvel objet SecurityErrorEvent dont les propriétés ont la même valeur que celles de l’objet d’origine.
	 
	 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.events:Event</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Crée une copie de l’objet SecurityErrorEvent et définit la valeur de chaque propriété de sorte qu’elle corresponde à la valeur d’origine.
	
	</apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.events:SecurityErrorEvent:toString" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">toString</apiName><shortdesc class="- topic/shortdesc ">
	Renvoie une chaîne répertoriant toutes les propriétés de l’objet SecurityErrorEvent.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Chaîne répertoriant toutes les propriétés de l’objet SecurityErrorEvent.
	 
	 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Renvoie une chaîne répertoriant toutes les propriétés de l’objet SecurityErrorEvent. La chaîne est écrite au format suivant :
	<p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">[securityErrorEvent type=<i class="+ topic/ph hi-d/i ">valeur</i> bubbles=<i class="+ topic/ph hi-d/i ">valeur</i> cancelable=<i class="+ topic/ph hi-d/i ">valeur</i> text=<i class="+ topic/ph hi-d/i ">valeur</i> errorID=<i class="+ topic/ph hi-d/i ">valeur</i>]</codeph> La valeur <codeph class="+ topic/ph pr-d/codeph ">errorId</codeph> est uniquement disponible dans Adobe AIR.</p>
	
	</apiDesc></apiOperationDetail></apiOperation><apiValue id="flash.events:SecurityErrorEvent:SECURITY_ERROR" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">SECURITY_ERROR</apiName><shortdesc class="- topic/shortdesc ">
	La constante SecurityErrorEvent.SECURITY_ERROR définit la valeur de la propriété type d’un objet d’événement securityError.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><internal>(at)see flash.display.LoaderInfo#event:securityError
	</internal></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">securityError</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	La constante <codeph class="+ topic/ph pr-d/codeph ">SecurityErrorEvent.SECURITY_ERROR</codeph> définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet événement <codeph class="+ topic/ph pr-d/codeph ">securityError</codeph>. 
	
	<p class="- topic/p ">Les propriétés de cet événement sont les suivantes :</p>
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">L’objet qui traite activement l’objet Event avec un écouteur d’événements.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Objet réseau signalant l’erreur de sécurité</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">text</codeph></entry><entry class="- topic/entry ">Texte à afficher en tant que message d’erreur. </entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#FileReference/event:securityError" class="- topic/link "><linktext class="- topic/linktext ">flash.net.FileReference.securityError</linktext></link><link href="flash.net.xml#LocalConnection/event:securityError" class="- topic/link "><linktext class="- topic/linktext ">flash.net.LocalConnection.securityError</linktext></link><link href="flash.net.xml#NetConnection/event:securityError" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetConnection.securityError</linktext></link><link href="flash.net.xml#Socket/event:securityError" class="- topic/link "><linktext class="- topic/linktext ">flash.net.Socket.securityError</linktext></link><link href="flash.net.xml#URLLoader/event:securityError" class="- topic/link "><linktext class="- topic/linktext ">flash.net.URLLoader.securityError</linktext></link><link href="flash.net.xml#URLStream/event:securityError" class="- topic/link "><linktext class="- topic/linktext ">flash.net.URLStream.securityError</linktext></link><link href="flash.net.xml#XMLSocket/event:securityError" class="- topic/link "><linktext class="- topic/linktext ">flash.net.XMLSocket.securityError</linktext></link></related-links></apiValue></apiClassifier><apiClassifier languages="" id="flash.events:UncaughtErrorEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">UncaughtErrorEvent</apiName><shortdesc class="- topic/shortdesc ">
	 Un objet UncaughtErrorEvent est distribué par une occurrence de la classe UncaughtErrorEvents lorsqu’une erreur non interceptée se produit.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:ErrorEvent</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Un objet UncaughtErrorEvent est distribué par une occurrence de la classe UncaughtErrorEvents lorsqu’une erreur non interceptée se produit. Une erreur non interceptée se produit lorsqu’une erreur est renvoyée en dehors de tout bloc <codeph class="+ topic/ph pr-d/codeph ">try.. catch</codeph> ou lorsqu’un objet ErrorEvent est distribué avec aucun écouteur enregistré. La fonctionnalité d’événement d’erreur non interceptée est souvent décrite comme un « gestionnaire d’erreur global ».
	 
	 <p class="- topic/p ">L’objet UncaughtErrorEvents qui distribue l’événement est associé à un objet LoaderInfo ou à un objet Loader. Utilisez les propriétés suivantes pour accéder à une occurrence de UncaughtErrorEvents :</p>
	 
	 <ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">LoaderInfo.uncaughtErrorEvents</codeph> : pour détecter des erreurs non interceptées dans le code défini dans le même fichier SWF.</li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">Loader.uncaughtErrorEvents</codeph> : pour détecter des erreurs non interceptées dans le code défini dans le fichier SWF chargé par un objet Loader.</li></ul>
	 
	 <p class="- topic/p ">Lorsqu’un événement <codeph class="+ topic/ph pr-d/codeph ">uncaughtError</codeph> se produit, même si l’événement est géré, l’exécution ne se poursuit pas dans la pile d’appels à l’origine de l’erreur. Si l’erreur est une erreur synchrone, tout code restant dans la fonction dans laquelle l’erreur est survenue n’est pas exécuté. Par conséquent, il est probable que votre application se trouve dans un état instable lorsqu’une erreur non interceptée se produit. Les causes d’une erreur non interceptée peuvent être multiples ; il est donc impossible de prévoir quelle fonctionnalité est disponible. Par exemple, votre application peut être en mesure d’exécuter des opérations réseau ou des opérations de fichiers. Toutefois, ces opérations ne sont pas nécessairement disponibles.</p>
	 
	 <p class="- topic/p ">Lorsqu’un fichier SWF en charge un autre, les événements <codeph class="+ topic/ph pr-d/codeph ">uncaughtError</codeph> se propagent vers le bas, puis à nouveau vers le haut dans la hiérarchie de LoaderInfo. Par exemple, supposons que A.swf charge B.swf à l’aide d’une occurrence de Loader. Si une erreur non interceptée se produit dans B.swf, un événement <codeph class="+ topic/ph pr-d/codeph ">uncaughtError</codeph> est distribué aux objets LoaderInfo et Loader dans l’ordre suivant :</p>
	 
	 <ol class="- topic/ol "><li class="- topic/li ">(Phase de capture) LoaderInfo de A.swf</li><li class="- topic/li ">(Phase de capture) Loader dans A.swf</li><li class="- topic/li ">(Phase cible) LoaderInfo de B.swf</li><li class="- topic/li ">(Phase de propagation) Loader dans A.swf</li><li class="- topic/li ">(Phase de propagation) LoaderInfo de A.swf</li></ol>
	 
	 <p class="- topic/p ">La propriété <codeph class="+ topic/ph pr-d/codeph ">uncaughtErrorEvents</codeph> d’un objet Loader ne distribue jamais d’événement <codeph class="+ topic/ph pr-d/codeph ">uncaughtErrorEvent</codeph> dans la phase cible. Elle distribue l’événement uniquement dans les phases de capture et de propagation. </p>
	 
	 <p class="- topic/p ">Comme pour la propagation d’autres événements, l’appel de <codeph class="+ topic/ph pr-d/codeph ">stopPropagation()</codeph> ou de <codeph class="+ topic/ph pr-d/codeph ">stopImmediatePropagation()</codeph> met fin à la distribution de l’événement à tout autre écouteur, avec une différence significative. L’objet UncaughtErrorEvents d’un objet Loader est considéré comme paire de l’objet <codeph class="+ topic/ph pr-d/codeph ">LoaderInfo.uncaughtErrorEvents</codeph> du fichier SWF chargé à des fins de propagation de l’événement. Si un écouteur enregistré avec l’un de ces objets appelle la méthode <codeph class="+ topic/ph pr-d/codeph ">stopPropagation()</codeph>, les événements sont toujours distribués aux autres écouteurs enregistrés avec cet objet UncaughtErrorEvents <i class="+ topic/ph hi-d/i ">et</i> aux écouteurs enregistrés avec son objet UncaughtErrorEvents partenaire avant la fin de la propagation de l’événement. La méthode <codeph class="+ topic/ph pr-d/codeph ">stopImmediatePropagation()</codeph> évite toujours la distribution des événements à tous les autres écouteurs.</p>
	 
	 <p class="- topic/p ">Si le contenu est exécuté dans une version de débogage du moteur d’exécution, telle que la version de débogage de Flash Player ou l’application de débogage du lanceur AIR (ADL), un message d’erreur s’affiche lorsqu’une erreur non interceptée se produit. Dans ces versions du moteur d’exécution, le message d’erreur s’affiche même lorsqu’un écouteur est enregistré pour l’événement <codeph class="+ topic/ph pr-d/codeph ">uncaughtError</codeph>. Pour empêcher l’affichage de ce message dans ce cas, appelez la méthode <codeph class="+ topic/ph pr-d/codeph ">preventDefault()</codeph> de l’objet UncaughtErrorEvent.</p>
	 
	 <p class="- topic/p ">Si le contenu chargé par un objet Loader est un fichier SWF AVM1 (ActionScript 2), les erreurs non interceptées dans le fichier SWF AVM1 n’entraînent pas un événement <codeph class="+ topic/ph pr-d/codeph ">uncaughtError</codeph>. En outre, les erreurs JavaScript d’un contenu HTML chargé dans un objet HTMLLoader (notamment une commande HTML Flex) n’entraînent pas un événement <codeph class="+ topic/ph pr-d/codeph ">uncaughtError</codeph>.</p>
	 
	 </apiDesc><example conref="examples\UncaughtErrorEventExample.1.as" class="- topic/example "> L’exemple suivant explique comment utiliser le gestionnaire d’événement uncaughtError pour détecter les erreurs non interceptées dans un projet ActionScript. Cet exemple définit un gestionnaire d’événement <codeph class="+ topic/ph pr-d/codeph ">uncaughtError</codeph> pour détecter les erreurs non interceptées. Il fournit également un bouton qui, lorsque l’utilisateur clique dessus, renvoie une erreur qui est ensuite interceptée par le gestionnaire d’événement uncaughtError.
 
 <p class="- topic/p ">Dans le constructeur, le code enregistre un écouteur pour l’événement <codeph class="+ topic/ph pr-d/codeph ">uncaughtError</codeph> distribué par la propriété <codeph class="+ topic/ph pr-d/codeph ">uncaughtErrorEvents</codeph> de l’objet LoaderInfo.</p>
 
 <p class="- topic/p ">Dans la méthode <codeph class="+ topic/ph pr-d/codeph ">uncaughtErrorHandler()</codeph>, le code vérifie le type de données de la propriété <codeph class="+ topic/ph pr-d/codeph ">error</codeph> et répond en conséquence.</p>
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
package
{
    import flash.display.Sprite;
    import flash.events.ErrorEvent;
    import flash.events.MouseEvent;
    import flash.events.UncaughtErrorEvent;

    public class UncaughtErrorEventExample extends Sprite
    {
        public function UncaughtErrorEventExample()
        {
            loaderInfo.uncaughtErrorEvents.addEventListener(UncaughtErrorEvent.UNCAUGHT_ERROR, uncaughtErrorHandler);
            
            drawUI();
        }
        
        private function uncaughtErrorHandler(event:UncaughtErrorEvent):void
        {
            if (event.error is Error)
            {
                var error:Error = event.error as Error;
                // do something with the error
            }
            else if (event.error is ErrorEvent)
            {
                var errorEvent:ErrorEvent = event.error as ErrorEvent;
                // do something with the error
            }
            else
            {
                // a non-Error, non-ErrorEvent type was thrown and uncaught
            }
        }
        
        private function drawUI():void
        {
            var btn:Sprite = new Sprite();
            btn.graphics.clear();
            btn.graphics.beginFill(0xFFCC00);
            btn.graphics.drawRect(0, 0, 100, 50);
            btn.graphics.endFill();
            addChild(btn);
            btn.addEventListener(MouseEvent.CLICK, clickHandler);
        }
        
        private function clickHandler(event:MouseEvent):void
        {
            throw new Error("Gak!");
        }
    }
}
</codeblock></example><example conref="examples\UncaughtErrorEventExample.1.5.as" class="- topic/example "> L’exemple suivant est l’équivalent Flex de l’exemple précédent. Cet exemple utilise un document MXML comme contenu racine au lieu d’une classe ActionScript.
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
&lt;?xml version="1.0" encoding="utf-8"?>
&lt;s:WindowedApplication xmlns:fx="http://ns.adobe.com/mxml/2009" 
                       xmlns:s="library://ns.adobe.com/flex/spark" 
                       xmlns:mx="library://ns.adobe.com/flex/halo"
                       applicationComplete="applicationCompleteHandler();">
    
    &lt;fx:Script>
        &lt;![CDATA[
            import flash.events.ErrorEvent;
            import flash.events.MouseEvent;
            import flash.events.UncaughtErrorEvent;
            
            private function applicationCompleteHandler():void
            {
                loaderInfo.uncaughtErrorEvents.addEventListener(UncaughtErrorEvent.UNCAUGHT_ERROR, uncaughtErrorHandler);
            }
    
            private function uncaughtErrorHandler(event:UncaughtErrorEvent):void
            {
                if (event.error is Error)
                {
                    var error:Error = event.error as Error;
                    // do something with the error
                }
                else if (event.error is ErrorEvent)
                {
                    var errorEvent:ErrorEvent = event.error as ErrorEvent;
                    // do something with the error
                }
                else
                {
                    // a non-Error, non-ErrorEvent type was thrown and uncaught
                }
            }
            
            private function clickHandler(event:MouseEvent):void
            {
                throw new Error("Gak!");
            }
        ]]&gt;
    &lt;/fx:Script>
      
    &lt;s:Button label="Cause Error" click="clickHandler(event);"/>
&lt;/s:WindowedApplication>
</codeblock></example><example conref="examples\UncaughtErrorEventExample.2.as" class="- topic/example "> L’exemple suivant explique comment utiliser le gestionnaire d’événement uncaughtError pour détecter les erreurs non interceptées dans un fichier SWF chargé. Cet exemple définit un gestionnaire d’événement <codeph class="+ topic/ph pr-d/codeph ">uncaughtError</codeph> pour détecter les erreurs non interceptées.
 
 <p class="- topic/p ">Dans le constructeur, le code crée un objet Loader et enregistre un écouteur pour l’événement <codeph class="+ topic/ph pr-d/codeph ">uncaughtError</codeph> distribué par la propriété <codeph class="+ topic/ph pr-d/codeph ">uncaughtErrorEvents</codeph> de l’objet Loader.</p>
 
 <p class="- topic/p ">Dans la méthode <codeph class="+ topic/ph pr-d/codeph ">uncaughtErrorHandler()</codeph>, le code vérifie le type de données de la propriété <codeph class="+ topic/ph pr-d/codeph ">error</codeph> et répond en conséquence.</p>
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
package
{
    import flash.display.Loader;
    import flash.display.Sprite;
    import flash.events.ErrorEvent;
    import flash.events.UncaughtErrorEvent;
    import flash.net.URLRequest;

    public class LoaderUncaughtErrorEventExample extends Sprite
    {
        private var ldr:Loader;
        
        public function LoaderUncaughtErrorEventExample()
        {
            ldr = new Loader();
            ldr.load(new URLRequest("child.swf"));
            ldr.uncaughtErrorEvents.addEventListener(UncaughtErrorEvent.UNCAUGHT_ERROR, uncaughtErrorHandler);
        }
        
        private function uncaughtErrorHandler(event:UncaughtErrorEvent):void
        {
            if (event.error is Error)
            {
                var error:Error = event.error as Error;
                // do something with the error
            }
            else if (event.error is ErrorEvent)
            {
                var errorEvent:ErrorEvent = event.error as ErrorEvent;
                // do something with the error
            }
            else
            {
                // a non-Error, non-ErrorEvent type was thrown and uncaught
            }
        }
    }
}
</codeblock></example></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.display.xml#LoaderInfo/uncaughtErrorEvents" class="- topic/link "><linktext class="- topic/linktext ">LoaderInfo.uncaughtErrorEvents</linktext></link><link href="flash.display.xml#Loader/uncaughtErrorEvents" class="- topic/link "><linktext class="- topic/linktext ">Loader.uncaughtErrorEvents</linktext></link><link href="flash.events.xml#UncaughtErrorEvents" class="- topic/link "><linktext class="- topic/linktext ">UncaughtErrorEvents</linktext></link></related-links><adobeApiEvent id="flash.events:UncaughtErrorEvent:UNCAUGHT_ERROR_uncaughtError" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">uncaughtError</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:UncaughtErrorEvent:UNCAUGHT_ERROR</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:UncaughtErrorEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="flash.events:UncaughtErrorEvent:UncaughtErrorEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">UncaughtErrorEvent</apiName><shortdesc class="- topic/shortdesc ">
		 Crée un objet UncaughtErrorEvent qui contient des informations sur un événement uncaughtError.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">type</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">unknown</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Type d’événement.
		 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">bubbles</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">true</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Détermine si l’objet Event prend part à la phase de propagation du flux d’événements. Les écouteurs d’événement peuvent accéder à cette information par le biais de la propriété <codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph> héritée. 
		 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">cancelable</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">true</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Détermine si l’objet Event peut être annulé. Les écouteurs d’événement peuvent accéder à cette information par le biais de la propriété <codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph> héritée.
		 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">error_in</apiItemName><apiType value="any" name="type" class="- topic/state reference/state apiRef/apiType "/><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Objet associé à l’erreur qui n’a pas été interceptée ou gérée (objet Error ou ErrorEvent dans des circonstances normales).
		 
		 </apiDesc></apiParam><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Constructeur associé aux objets UncaughtErrorEvent.
		 
		 </apiTipText></apiTipTexts></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 Crée un objet UncaughtErrorEvent qui contient des informations sur un événement <codeph class="+ topic/ph pr-d/codeph ">uncaughtError</codeph>.
		 
		 </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="flash.events:UncaughtErrorEvent:clone" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">clone</apiName><shortdesc class="- topic/shortdesc ">
		 Crée une copie de l’objet UncaughtErrorEvent et définit la valeur de chaque propriété de sorte qu’elle corresponde à la valeur d’origine.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Nouvel objet UncaughtErrorEvent dont les propriétés ont la même valeur que celles de l’objet d’origine.
		 
		 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.events:Event</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 Crée une copie de l’objet UncaughtErrorEvent et définit la valeur de chaque propriété de sorte qu’elle corresponde à la valeur d’origine. 
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.events:UncaughtErrorEvent:toString" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">toString</apiName><shortdesc class="- topic/shortdesc ">
		 Renvoie une chaîne répertoriant toutes les propriétés de l’objet UncaughtErrorEvent.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Chaîne répertoriant toutes les propriétés de l’objet UncaughtErrorEvent.
		 
		 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 Renvoie une chaîne répertoriant toutes les propriétés de l’objet UncaughtErrorEvent. 
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiValue id="flash.events:UncaughtErrorEvent:UNCAUGHT_ERROR" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">UNCAUGHT_ERROR</apiName><shortdesc class="- topic/shortdesc ">
	     Définit la valeur de la propriété type d’un objet d’événement UncaughtError.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">uncaughtError</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	     Définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet d’événement <codeph class="+ topic/ph pr-d/codeph ">UncaughtError</codeph>.
		 <p class="- topic/p ">Les propriétés de cet événement sont les suivantes :</p>
		 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> ; l’annulation de l’événement empêche le message d’erreur non interceptée de s’afficher dans les versions de débogage du moteur d’exécution</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">L’objet qui traite activement l’objet Event avec un écouteur d’événements.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">error</codeph></entry><entry class="- topic/entry ">L’erreur non interceptée.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Objet LoaderInfo associé au fichier SWF dans lequel l’erreur s’est produite.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">text</codeph></entry><entry class="- topic/entry ">Texte du message d’erreur.</entry></row></tbody></tgroup></adobetable>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:UncaughtErrorEvent:error:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">error</apiName><shortdesc class="- topic/shortdesc ">
		 Objet Error associé à l’erreur non interceptée.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiType value="any" name="type" class="- topic/state reference/state apiRef/apiType "/></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 Objet Error associé à l’erreur non interceptée. En règle générale, le type de données de cet objet est l’un des suivants :
		 
		 <ul class="- topic/ul "><li class="- topic/li ">Une occurrence d’Error (ou l’une de ses sous-classes) si l’erreur non interceptée est une erreur synchrone créée par une instruction <codeph class="+ topic/ph pr-d/codeph ">throw</codeph>, notamment une erreur pouvant avoir été interceptée à l’aide d’un bloc <codeph class="+ topic/ph pr-d/codeph ">try..catch</codeph>.</li><li class="- topic/li ">Une occurrence d’ErrorEvent (ou l’une de ses sous-classes) si l’erreur non interceptée est une erreur asynchrone qui distribue un événement d’erreur lorsque l’erreur se produit.</li></ul>
		 
		 <p class="- topic/p ">Toutefois, la propriété <codeph class="+ topic/ph pr-d/codeph ">error</codeph> peut être un objet de tout type de données. ActionScript ne nécessite pas d’instruction <codeph class="+ topic/ph pr-d/codeph ">throw</codeph> pour être utilisé uniquement avec des objets Error. Par exemple, le code suivant est autorisé au moment de la compilation et au moment de l’exécution :</p>
		 
		 <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">throw new Sprite()</codeblock>
		 
		 <p class="- topic/p ">Si cette instruction <codeph class="+ topic/ph pr-d/codeph ">throw</codeph> n’est pas interceptée par un bloc <codeph class="+ topic/ph pr-d/codeph ">try..catch</codeph>, l’instruction <codeph class="+ topic/ph pr-d/codeph ">throw</codeph> déclenche un événement <codeph class="+ topic/ph pr-d/codeph ">uncaughtError</codeph>. Dans ce cas, la propriété <codeph class="+ topic/ph pr-d/codeph ">error</codeph> de l’objet UncaughtErrorEvent qui est distribué correspond à l’objet Sprite construit dans l’instruction <codeph class="+ topic/ph pr-d/codeph ">throw</codeph> </p>
		 
		 <p class="- topic/p ">Vous devez donc vérifier dans votre écouteur d’événement <codeph class="+ topic/ph pr-d/codeph ">uncaughtError</codeph> le type de données de la propriété <codeph class="+ topic/ph pr-d/codeph ">error</codeph>. L’exemple suivant décrit cette vérification :</p>
		 
         <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
		 function uncaughtErrorHandler(event:UncaughtErrorEvent):void
         {
             var message:String;
             
             if (event.error is Error)
             {
                 message = Error(event.error).message;
             }
             else if (event.error is ErrorEvent)
             {
                 message = ErrorEvent(event.error).text;
             }
             else
             {
                 message = event.error.toString();
             }
         }</codeblock>
		 
         
		 
		 <p class="- topic/p ">Si la propriété <codeph class="+ topic/ph pr-d/codeph ">error</codeph> contient une occurrence (ou une sous-classe) d’Error, les informations d’erreur disponibles varient en fonction de la version du moteur d’exécution dans lequel s’exécute le contenu. La fonctionnalité suivante est disponible uniquement si le contenu est exécuté dans une version de débogage du moteur d’exécution, telle que la version de débogage de Flash Player ou l’application de débogage du lanceur AIR (ADL) :</p>
		 
		 <ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">Error.getStackTrace()</codeph> pour obtenir la pile d’appels qui a conduit à l’erreur. Dans les versions du moteur d’exécution qui ne sont pas des versions de débogage, cette méthode renvoie <codeph class="+ topic/ph pr-d/codeph ">null</codeph>. Notez que les informations de la pile d’appels ne sont jamais disponibles lorsque la propriété <codeph class="+ topic/ph pr-d/codeph ">error</codeph> est une occurrence d’ErrorEvent.</li><li class="- topic/li ">Texte complet de <codeph class="+ topic/ph pr-d/codeph ">Error.message</codeph>. Dans les versions du moteur d’exécution qui ne sont pas des versions de débogage, cette propriété contient une version abrégée de ce message d’erreur, qui est souvent une combinaison des propriétés <codeph class="+ topic/ph pr-d/codeph ">Error.errorID</codeph> et <codeph class="+ topic/ph pr-d/codeph ">Error.name</codeph>.</li></ul>
		 
		 <p class="- topic/p ">Toutes les autres propriétés et méthodes de la classe Error sont disponibles dans toutes les versions du moteur d’exécution.</p>
		 
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.events:InvokeEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">InvokeEvent</apiName><shortdesc class="- topic/shortdesc ">
	 L’objet NativeApplication d’une application AIR déclenche un événement invoke lorsque l’application est invoquée.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Distribué par l’objet NativeApplication lorsqu’une application AIR est appelée par le biais du système d’exploitation.
	 
	 </apiTipText></apiTipTexts><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 L’objet NativeApplication d’une application AIR déclenche un événement <codeph class="+ topic/ph pr-d/codeph ">invoke</codeph> lorsque l’application est invoquée. 
	 
	 <p class="- topic/p ">L’objet NativeApplication distribue toujours un événement <codeph class="+ topic/ph pr-d/codeph ">invoke</codeph> au démarrage d’une application, mais l’événement peut également être distribué à d’autres moments. Par exemple, une application en cours d’exécution déclenche un événement InvokeEvent supplémentaire lorsqu’un utilisateur active un fichier associé à l’application.</p>
	 
	 <p class="- topic/p ">Une seule occurrence d’une application particulière peut être démarrée. Les tentatives suivantes de démarrage de l’application entraînent le déclenchement d’un nouvel événement <codeph class="+ topic/ph pr-d/codeph ">invoke</codeph> par l’objet NativeApplication de l’occurrence en cours d’exécution. L’application est chargée de gérer cet événement et d’exécuter l’action appropriée, par exemple d’ouvrir une nouvelle fenêtre d’application pour afficher les données dans un fichier.</p>
	  
	 <p class="- topic/p ">Les objets InvokeEvent sont distribués par l’objet NativeApplication (<codeph class="+ topic/ph pr-d/codeph ">NativeApplication.nativeApplication</codeph>). Pour recevoir des événements <codeph class="+ topic/ph pr-d/codeph ">invoke</codeph>, appelez la méthode <codeph class="+ topic/ph pr-d/codeph ">addEventListener()</codeph> de l’objet NativeApplication. Lorsqu’un écouteur d’événement s’enregistre pour un événement <codeph class="+ topic/ph pr-d/codeph ">invoke</codeph>, il reçoit également tous les événements <codeph class="+ topic/ph pr-d/codeph ">InvokeEvent</codeph> ayant eu lieu avant l’enregistrement. Ces événements précédents sont déclenchés après le retour de l’appel à la méthode <codeph class="+ topic/ph pr-d/codeph ">addEventListener()</codeph>, mais pas nécessairement avant qu’un nouvel événement <codeph class="+ topic/ph pr-d/codeph ">invoke</codeph> ait pu être déclenché après l’enregistrement. Il est donc préférable de ne pas compter sur l’ordre de déclenchement.</p> 
	 
	 </apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.events.xml#BrowserInvokeEvent" class="- topic/link "><linktext class="- topic/linktext ">flash.events.BrowserInvokeEvent</linktext></link><link href="flash.desktop.xml#NativeApplication" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.NativeApplication</linktext></link></related-links><adobeApiEvent id="flash.events:InvokeEvent:INVOKE_invoke" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">invoke</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:InvokeEvent:INVOKE</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:InvokeEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Constante de type pour les événements flash.events.InvokeEvent.
	 </apiTipText></apiTipTexts></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.desktop.xml#NativeApplication" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.NativeApplication</linktext></link><link href="flash.desktop.xml#InvokeEventReason" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.InvokeEventReason</linktext></link></related-links></adobeApiEvent><apiConstructor id="flash.events:InvokeEvent:InvokeEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">InvokeEvent</apiName><shortdesc class="- topic/shortdesc ">
	 La fonction de constructeur pour la classe InvokeEvent.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">type</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Type de l’événement, accessible en tant que <codeph class="+ topic/ph pr-d/codeph ">Event.type</codeph>.
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">bubbles</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Définissez sur <codeph class="+ topic/ph pr-d/codeph ">false</codeph> pour un objet InvokeEvent.
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">cancelable</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Définissez sur <codeph class="+ topic/ph pr-d/codeph ">false</codeph> pour un objet InvokeEvent.
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">dir</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.filesystem:File</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Répertoire qui doit être utilisé pour résoudre des chemins relatifs dans le tableau <codeph class="+ topic/ph pr-d/codeph ">arguments</codeph>.
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">argv</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Array</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Un tableau d’arguments (chaînes) à transmettre à l’application.
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">reason</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">standard</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">La cause de l’événement, soit <codeph class="+ topic/ph pr-d/codeph ">InvokeEventReason.LOGIN</codeph>, soit <codeph class="+ topic/ph pr-d/codeph ">InvokeEventReason.STANDARD</codeph>. (Ce paramètre est disponible depuis la version 1.5.1 d’AIR).  
	 
	 </apiDesc></apiParam></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 La fonction de constructeur pour la classe InvokeEvent.
	 
	 </apiDesc></apiConstructorDetail><related-links class="- topic/related-links "><link href="flash.desktop.xml#InvokeEventReason" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.InvokeEventReason</linktext></link></related-links></apiConstructor><apiOperation id="flash.events:InvokeEvent:clone" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">clone</apiName><shortdesc class="- topic/shortdesc ">
		 Crée une copie de cet événement.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Copie de l’événement.
		 
		 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.events:Event</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 Crée une copie de cet événement.
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiValue id="flash.events:InvokeEvent:INVOKE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">INVOKE</apiName><shortdesc class="- topic/shortdesc ">
	 La constante InvokeEvent.INVOKE définit la valeur de la propriété type de l’objet InvokeEvent.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">invoke</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Constante de type pour les événements flash.events.InvokeEvent.
	 </apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 La constante <codeph class="+ topic/ph pr-d/codeph ">InvokeEvent.INVOKE</codeph> définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> de l’objet InvokeEvent.
	 
     <p class="- topic/p ">L’objet InvokeEvent possède les propriétés suivantes :</p>
 	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriétés</entry><entry class="- topic/entry ">Valeurs</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">arguments</codeph></entry><entry class="- topic/entry ">Tableau des arguments de chaîne transmis pendant cette invocation.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentDirectory</codeph></entry><entry class="- topic/entry ">Objet File représentant le répertoire à utiliser pour résoudre des chemins relatifs dans le tableau d’arguments.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">reason</codeph></entry><entry class="- topic/entry ">Un code indiquant si l’événement invoke a été distribué en raison du démarrage automatique de l’application lors de la connexion (<codeph class="+ topic/ph pr-d/codeph ">InvokeEventReason.LOGIN</codeph>) ou pour une autre raison (<codeph class="+ topic/ph pr-d/codeph ">InvokeEventReason.STANDARD</codeph>). Disponible depuis la version 1.5.1 d’AIR.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph>.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Indique l’objet qui traite activement l’objet InvokeEvent avec un écouteur d’événements.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Toujours l’objet NativeApplication.  
	    </entry></row></tbody></tgroup></adobetable>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.desktop.xml#NativeApplication" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.NativeApplication</linktext></link><link href="flash.desktop.xml#InvokeEventReason" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.InvokeEventReason</linktext></link></related-links></apiValue><apiValue id="flash.events:InvokeEvent:arguments:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">arguments</apiName><shortdesc class="- topic/shortdesc ">
		 Tableau des arguments de chaîne transmis pendant cette invocation.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Array</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 Le tableau des arguments de chaîne transmis pendant cette invocation. S’il s’agit d’une invocation de ligne de commande, le tableau contient les arguments de la ligne de commande <i class="+ topic/ph hi-d/i ">excluant</i> le nom du processus.
		 
		 <p class="- topic/p "><i class="+ topic/ph hi-d/i ">Remarque :</i> lorsque vous sélectionnez et ouvrez plusieurs fichiers dans Mac<sup class="+ topic/ph hi-d/sup ">®</sup> OS X, AIR distribue un seul événement <codeph class="+ topic/ph pr-d/codeph ">invoke</codeph> contenant les noms de tous les fichiers sélectionnés dans le tableau <codeph class="+ topic/ph pr-d/codeph ">arguments</codeph>. Cependant, sous Windows<sup class="+ topic/ph hi-d/sup ">®</sup> et Linux, AIR distribue un événement <codeph class="+ topic/ph pr-d/codeph ">invoke</codeph> distinct pour chaque fichier sélectionné contenant uniquement ce nom de fichier dans le tableau <codeph class="+ topic/ph pr-d/codeph ">arguments</codeph>.
		 </p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:InvokeEvent:currentDirectory:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">currentDirectory</apiName><shortdesc class="- topic/shortdesc ">
		 Le répertoire qui doit être utilisé pour résoudre des chemins relatifs dans le tableau d’arguments.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.filesystem:File</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 Répertoire qui doit être utilisé pour résoudre des chemins relatifs dans le tableau <codeph class="+ topic/ph pr-d/codeph ">arguments</codeph>. 
		 
		 <p class="- topic/p ">Si vous lancez une application à partir de la ligne de commande, cette propriété est généralement définie sur le répertoire de travail actuel du shell de ligne de commande à partir duquel l’application a été démarrée. Si vous lancez une application depuis le shell GUI, il s’agit généralement de la racine du système de fichiers.</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:InvokeEvent:reason:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">reason</apiName><shortdesc class="- topic/shortdesc ">
		 La raison de cet InvokeEvent.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.5.1" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 La raison de cet InvokeEvent. Cette propriété indique si l’application a été lancée manuellement par l’utilisateur ou automatiquement lors de la connexion. Les valeurs possibles sont énumérées en tant que constantes dans la classe <codeph class="+ topic/ph pr-d/codeph ">InvokeEventReason</codeph> :
		 
		 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Constante InvokeEventReason</entry><entry class="- topic/entry ">Signification</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">LOGIN</codeph></entry><entry class="- topic/entry ">Démarrée automatiquement lors de la connexion.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">STANDARD</codeph></entry><entry class="- topic/entry ">Lancée pour toute autre raison. </entry></row></tbody></tgroup></adobetable>
		 
		 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.desktop.xml#InvokeEventReason" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.InvokeEventReason</linktext></link></related-links></apiValue></apiClassifier><apiClassifier languages="" id="flash.events:ScreenMouseEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">ScreenMouseEvent</apiName><shortdesc class="- topic/shortdesc ">
L’objet SystemTrayIcon déclenche des événements de type ScreenMouseEvent en réponse à l’interaction de la souris.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Objet event pour des événements ScreenMouseEvent.
</apiTipText></apiTipTexts><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:MouseEvent</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
L’objet SystemTrayIcon déclenche des événements de type ScreenMouseEvent en réponse à l’interaction de la souris.

<p class="- topic/p ">L’objet ScreenMouseEvent étend la classe MouseEvent pour fournir deux propriétés supplémentaires, <codeph class="+ topic/ph pr-d/codeph ">screenX</codeph> et <codeph class="+ topic/ph pr-d/codeph ">screenY</codeph>, qui signalent les coordonnées de la souris par rapport à l’écran du bureau principal au lieu d’une fenêtre d’application ou scène.</p>
 
</apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.desktop.xml#SystemTrayIcon" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.SystemTrayIcon</linktext></link><link href="flash.display.xml#Screen" class="- topic/link "><linktext class="- topic/linktext ">flash.display.Screen</linktext></link></related-links><adobeApiEvent id="flash.events:ScreenMouseEvent:CLICK_click" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">click</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:ScreenMouseEvent:CLICK</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:ScreenMouseEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Distribué par un objet SystemTrayIcon lorsque l’utilisateur clique sur l’icône.
	 
	</apiTipText></apiTipTexts></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flash.events:ScreenMouseEvent:MOUSE_DOWN_mouseDown" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">mouseDown</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:ScreenMouseEvent:MOUSE_DOWN</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:ScreenMouseEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flash.events:ScreenMouseEvent:MOUSE_UP_mouseUp" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">mouseUp</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:ScreenMouseEvent:MOUSE_UP</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:ScreenMouseEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flash.events:ScreenMouseEvent:RIGHT_CLICK_rightClick" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">rightClick</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:ScreenMouseEvent:RIGHT_CLICK</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:ScreenMouseEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flash.events:ScreenMouseEvent:RIGHT_MOUSE_DOWN_rightMouseDown" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">rightMouseDown</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:ScreenMouseEvent:RIGHT_MOUSE_DOWN</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:ScreenMouseEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flash.events:ScreenMouseEvent:RIGHT_MOUSE_UP_rightMouseUp" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">rightMouseUp</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:ScreenMouseEvent:RIGHT_MOUSE_UP</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:ScreenMouseEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail></adobeApiEvent><apiConstructor id="flash.events:ScreenMouseEvent:ScreenMouseEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">ScreenMouseEvent</apiName><shortdesc class="- topic/shortdesc ">
	Crée un objet ScreenMouseEvent contenant l’emplacement de la souris en coordonnées d’écran.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">type</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc "> Type de l’événement. Les écouteurs d’événement peuvent accéder à cette information par le biais de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> héritée.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">bubbles</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Position X du clic en coordonnées d’écran.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">cancelable</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Position Y du clic en coordonnées d’écran.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">screenX</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">unknown</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Définissez cette propriété sur <codeph class="+ topic/ph pr-d/codeph ">false</codeph> car les événements de souris d’écran ne se propagent jamais vers le haut. 
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">screenY</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">unknown</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Définissez sur <codeph class="+ topic/ph pr-d/codeph ">false</codeph> car il n’existe aucun comportement par défaut à annuler.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ctrlKey</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Sous Windows ou Linux, indique si la touche Ctrl était enfoncée lorsque cet événement a eu lieu. Sous Mac, indique si la touche Ctrl ou Commande était enfoncée.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">altKey</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Définissez sur <codeph class="+ topic/ph pr-d/codeph ">true</codeph> pour indiquer que la touche alt était enfoncée lorsque cet événement a eu lieu.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">shiftKey</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Définissez sur <codeph class="+ topic/ph pr-d/codeph ">true</codeph> pour indiquer que la touche Maj était enfoncée lorsque cet événement a eu lieu.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">buttonDown</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Définissez sur <codeph class="+ topic/ph pr-d/codeph ">true</codeph> pour indiquer qu’un bouton de la souris était enfoncé lorsque cet événement a eu lieu.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">commandKey</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Indique si la touche Commande était enfoncée (Mac uniquement).
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">controlKey</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Indique si la touche Ctrl ou Contrôle était enfoncée.
	
	</apiDesc></apiParam><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Constructeur associé aux objets ScreenMouseEvent.
	
	</apiTipText></apiTipTexts></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Crée un objet ScreenMouseEvent contenant l’emplacement de la souris en coordonnées d’écran.
	
	</apiDesc></apiConstructorDetail><related-links class="- topic/related-links "><link href="flash.events.xml#MouseEvent" class="- topic/link "><linktext class="- topic/linktext ">flash.events.MouseEvent</linktext></link><link href="flash.display.xml#Screen" class="- topic/link "><linktext class="- topic/linktext ">flash.display.Screen</linktext></link></related-links></apiConstructor><apiOperation id="flash.events:ScreenMouseEvent:clone" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">clone</apiName><shortdesc class="- topic/shortdesc ">
	Crée une copie de l’objet ScreenMouseEvent et définit la valeur de chaque propriété de sorte qu’elle corresponde à la valeur d’origine.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Nouvel objet ScreenMouseEvent dont les propriétés ont la même valeur que celles de l’objet d’origine.
	</apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.events:Event</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Crée une copie de l’objet ScreenMouseEvent et définit la valeur de chaque propriété de sorte qu’elle corresponde à la valeur d’origine.
	
	</apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.events:ScreenMouseEvent:toString" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">toString</apiName><shortdesc class="- topic/shortdesc ">
	Renvoie une chaîne répertoriant toutes les propriétés de l’objet ScreenMouseEvent.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Chaîne répertoriant toutes les propriétés de l’objet ScreenMouseEvent.
	</apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Renvoie une chaîne répertoriant toutes les propriétés de l’objet ScreenMouseEvent. La chaîne est écrite au format suivant :
	<p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">[ScreenMouseEvent type=<i class="+ topic/ph hi-d/i ">valeur</i> bubbles=<i class="+ topic/ph hi-d/i ">valeur</i> cancelable=<i class="+ topic/ph hi-d/i ">valeur</i> status=<i class="+ topic/ph hi-d/i ">valeur</i>]</codeph></p>
	
	</apiDesc></apiOperationDetail></apiOperation><apiValue id="flash.events:ScreenMouseEvent:CLICK" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">CLICK</apiName><shortdesc class="- topic/shortdesc ">
	La constante ScreenMouseEvent.CLICK définit la valeur de la propriété type d’un objet d’événement click.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">click</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Distribué par un objet SystemTrayIcon lorsque l’utilisateur clique sur l’icône.
	 
	</apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	La constante <codeph class="+ topic/ph pr-d/codeph ">ScreenMouseEvent.CLICK</codeph> définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet d’événement <codeph class="+ topic/ph pr-d/codeph ">click</codeph>. 
	
	<p class="- topic/p ">Les principales propriétés de cet événement sont les suivantes :</p>
	
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">buttonDown</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> si le bouton principal de la souris est enfoncé ; <codeph class="+ topic/ph pr-d/codeph ">false</codeph> dans tous les autres cas.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">ctrlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> sous Windows ou Linux si la touche Ctrl est enfoncée. <codeph class="+ topic/ph pr-d/codeph ">true</codeph> sur Mac si la touche Ctrl ou la touche Commande est activée. Sinon, la valeur <codeph class="+ topic/ph pr-d/codeph ">false</codeph> est renvoyée.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">L’objet qui traite activement l’objet Event avec un écouteur d’événements.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">shiftKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> si la touche Maj est activée ; <codeph class="+ topic/ph pr-d/codeph ">false</codeph> si elle ne l’est pas.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">commandKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> sur le Mac si la touche Commande est activée ; <codeph class="+ topic/ph pr-d/codeph ">false</codeph> si elle est désactivée. Toujours <codeph class="+ topic/ph pr-d/codeph ">false</codeph> sur Windows.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">controlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> si la touche Ctrl ou Contrôle est activée ; <codeph class="+ topic/ph pr-d/codeph ">false</codeph> si elle est désactivée.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">screenX</codeph></entry><entry class="- topic/entry ">Coordonnée horizontale à laquelle l’événement s’est produit, par rapport aux coordonnées de l’écran.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">screenY</codeph></entry><entry class="- topic/entry ">Coordonnée verticale à laquelle l’événement s’est produit, par rapport aux coordonnées de l’écran.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">L’objet SystemTrayIcon sous le périphérique de pointage.</entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:ScreenMouseEvent:MOUSE_DOWN" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">MOUSE_DOWN</apiName><shortdesc class="- topic/shortdesc ">
	La constante ScreenMouseEvent.MOUSE_DOWN définit la valeur de la propriété type d’un objet événement mouseDown.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">mouseDown</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	La constante <codeph class="+ topic/ph pr-d/codeph ">ScreenMouseEvent.MOUSE_DOWN</codeph> définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet événement <codeph class="+ topic/ph pr-d/codeph ">mouseDown</codeph>. 
	
	<p class="- topic/p ">Les principales propriétés de cet événement sont les suivantes :</p>
	
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">buttonDown</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> si le bouton principal de la souris est enfoncé ; <codeph class="+ topic/ph pr-d/codeph ">false</codeph> dans tous les autres cas.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">ctrlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> sous Windows ou Linux si la touche Ctrl est enfoncée. <codeph class="+ topic/ph pr-d/codeph ">true</codeph> sur Mac si la touche Ctrl ou la touche Commande est activée. Sinon, la valeur <codeph class="+ topic/ph pr-d/codeph ">false</codeph> est renvoyée.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">L’objet qui traite activement l’objet Event avec un écouteur d’événements.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">shiftKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> si la touche Maj est activée ; <codeph class="+ topic/ph pr-d/codeph ">false</codeph> si elle ne l’est pas.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">commandKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> sur le Mac si la touche Commande est activée ; <codeph class="+ topic/ph pr-d/codeph ">false</codeph> si elle est désactivée. Toujours <codeph class="+ topic/ph pr-d/codeph ">false</codeph> sur Windows.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">controlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> si la touche Ctrl ou Contrôle est activée ; <codeph class="+ topic/ph pr-d/codeph ">false</codeph> si elle est désactivée.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">screenX</codeph></entry><entry class="- topic/entry ">Coordonnée horizontale à laquelle l’événement s’est produit, par rapport aux coordonnées de l’écran.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">screenY</codeph></entry><entry class="- topic/entry ">Coordonnée verticale à laquelle l’événement s’est produit, par rapport aux coordonnées de l’écran.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">L’objet SystemTrayIcon sous le périphérique de pointage.</entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:ScreenMouseEvent:MOUSE_UP" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">MOUSE_UP</apiName><shortdesc class="- topic/shortdesc ">
	La constante ScreenMouseEvent.MOUSE_UP définit la valeur de la propriété type d’un objet événement mouseUp.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">mouseUp</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	La constante <codeph class="+ topic/ph pr-d/codeph ">ScreenMouseEvent.MOUSE_UP</codeph> définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet événement <codeph class="+ topic/ph pr-d/codeph ">mouseUp</codeph>. 
	
	<p class="- topic/p ">Les principales propriétés de cet événement sont les suivantes :</p>
	
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">buttonDown</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> si le bouton principal de la souris est enfoncé ; <codeph class="+ topic/ph pr-d/codeph ">false</codeph> dans tous les autres cas.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">ctrlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> sous Windows ou Linux si la touche Ctrl est enfoncée. <codeph class="+ topic/ph pr-d/codeph ">true</codeph> sur Mac si la touche Ctrl ou la touche Commande est activée. Sinon, la valeur <codeph class="+ topic/ph pr-d/codeph ">false</codeph> est renvoyée.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">L’objet qui traite activement l’objet Event avec un écouteur d’événements.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">shiftKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> si la touche Maj est activée ; <codeph class="+ topic/ph pr-d/codeph ">false</codeph> si elle ne l’est pas.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">commandKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> sur le Mac si la touche Commande est activée ; <codeph class="+ topic/ph pr-d/codeph ">false</codeph> si elle est désactivée. Toujours <codeph class="+ topic/ph pr-d/codeph ">false</codeph> sur Windows.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">controlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> si la touche Ctrl ou Contrôle est activée ; <codeph class="+ topic/ph pr-d/codeph ">false</codeph> si elle est désactivée.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">screenX</codeph></entry><entry class="- topic/entry ">Coordonnée horizontale à laquelle l’événement s’est produit, par rapport aux coordonnées de l’écran.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">screenY</codeph></entry><entry class="- topic/entry ">Coordonnée verticale à laquelle l’événement s’est produit, par rapport aux coordonnées de l’écran.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">L’objet SystemTrayIcon sous le périphérique de pointage.</entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:ScreenMouseEvent:RIGHT_CLICK" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">RIGHT_CLICK</apiName><shortdesc class="- topic/shortdesc ">
	La constante ScreenMouseEvent.RIGHT_CLICK définit la valeur de la propriété type d’un objet événement rightClick.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">rightClick</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	La constante <codeph class="+ topic/ph pr-d/codeph ">ScreenMouseEvent.RIGHT_CLICK</codeph> définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet événement <codeph class="+ topic/ph pr-d/codeph ">rightClick</codeph>. 
	
	<p class="- topic/p ">Les principales propriétés de cet événement sont les suivantes :</p>
	
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">buttonDown</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> si le bouton principal de la souris est enfoncé ; <codeph class="+ topic/ph pr-d/codeph ">false</codeph> dans tous les autres cas.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">ctrlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> sous Windows ou Linux si la touche Ctrl est enfoncée. <codeph class="+ topic/ph pr-d/codeph ">true</codeph> sur Mac si la touche Ctrl ou la touche Commande est activée. Sinon, la valeur <codeph class="+ topic/ph pr-d/codeph ">false</codeph> est renvoyée.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">L’objet qui traite activement l’objet Event avec un écouteur d’événements.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">shiftKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> si la touche Maj est activée ; <codeph class="+ topic/ph pr-d/codeph ">false</codeph> si elle ne l’est pas.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">commandKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> sur le Mac si la touche Commande est activée ; <codeph class="+ topic/ph pr-d/codeph ">false</codeph> si elle est désactivée. Toujours <codeph class="+ topic/ph pr-d/codeph ">false</codeph> sur Windows.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">controlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> si la touche Ctrl ou Contrôle est activée ; <codeph class="+ topic/ph pr-d/codeph ">false</codeph> si elle est désactivée.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">screenX</codeph></entry><entry class="- topic/entry ">Coordonnée horizontale à laquelle l’événement s’est produit, par rapport aux coordonnées de l’écran.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">screenY</codeph></entry><entry class="- topic/entry ">Coordonnée verticale à laquelle l’événement s’est produit, par rapport aux coordonnées de l’écran.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">L’objet SystemTrayIcon sous le périphérique de pointage.</entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:ScreenMouseEvent:RIGHT_MOUSE_DOWN" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">RIGHT_MOUSE_DOWN</apiName><shortdesc class="- topic/shortdesc ">
	La constante ScreenMouseEvent.RIGHT_MOUSE_DOWN définit la valeur de la propriété type d’un objet événement rightMouseDown.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">rightMouseDown</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	La constante <codeph class="+ topic/ph pr-d/codeph ">ScreenMouseEvent.RIGHT_MOUSE_DOWN</codeph> définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet événement <codeph class="+ topic/ph pr-d/codeph ">rightMouseDown</codeph>. 
	
	<p class="- topic/p ">Les principales propriétés de cet événement sont les suivantes :</p>
	
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">buttonDown</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> si le bouton principal de la souris est enfoncé ; <codeph class="+ topic/ph pr-d/codeph ">false</codeph> dans tous les autres cas.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">ctrlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> sous Windows ou Linux si la touche Ctrl est enfoncée. <codeph class="+ topic/ph pr-d/codeph ">true</codeph> sur Mac si la touche Ctrl ou la touche Commande est activée. Sinon, la valeur <codeph class="+ topic/ph pr-d/codeph ">false</codeph> est renvoyée.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">L’objet qui traite activement l’objet Event avec un écouteur d’événements.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">shiftKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> si la touche Maj est activée ; <codeph class="+ topic/ph pr-d/codeph ">false</codeph> si elle ne l’est pas.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">commandKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> sur le Mac si la touche Commande est activée ; <codeph class="+ topic/ph pr-d/codeph ">false</codeph> si elle est désactivée. Toujours <codeph class="+ topic/ph pr-d/codeph ">false</codeph> sur Windows.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">controlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> si la touche Ctrl ou Contrôle est activée ; <codeph class="+ topic/ph pr-d/codeph ">false</codeph> si elle est désactivée.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">screenX</codeph></entry><entry class="- topic/entry ">Coordonnée horizontale à laquelle l’événement s’est produit, par rapport aux coordonnées de l’écran.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">screenY</codeph></entry><entry class="- topic/entry ">Coordonnée verticale à laquelle l’événement s’est produit, par rapport aux coordonnées de l’écran.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">L’objet SystemTrayIcon sous le périphérique de pointage.</entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:ScreenMouseEvent:RIGHT_MOUSE_UP" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">RIGHT_MOUSE_UP</apiName><shortdesc class="- topic/shortdesc ">
	La constante ScreenMouseEvent.RIGHT_MOUSE_UP définit la valeur de la propriété type d’un objet événement rightMouseUp.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">rightMouseUp</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	La constante <codeph class="+ topic/ph pr-d/codeph ">ScreenMouseEvent.RIGHT_MOUSE_UP</codeph> définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet événement <codeph class="+ topic/ph pr-d/codeph ">rightMouseUp</codeph>. 
	
	<p class="- topic/p ">Les principales propriétés de cet événement sont les suivantes :</p>
	
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">buttonDown</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> si le bouton principal de la souris est enfoncé ; <codeph class="+ topic/ph pr-d/codeph ">false</codeph> dans tous les autres cas.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">ctrlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> sous Windows ou Linux si la touche Ctrl est enfoncée. <codeph class="+ topic/ph pr-d/codeph ">true</codeph> sur Mac si la touche Ctrl ou la touche Commande est activée. Sinon, la valeur <codeph class="+ topic/ph pr-d/codeph ">false</codeph> est renvoyée.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">L’objet qui traite activement l’objet Event avec un écouteur d’événements.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">shiftKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> si la touche Maj est activée ; <codeph class="+ topic/ph pr-d/codeph ">false</codeph> si elle ne l’est pas.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">commandKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> sur le Mac si la touche Commande est activée ; <codeph class="+ topic/ph pr-d/codeph ">false</codeph> si elle est désactivée. Toujours <codeph class="+ topic/ph pr-d/codeph ">false</codeph> sur Windows.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">controlKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> si la touche Ctrl ou Contrôle est activée ; <codeph class="+ topic/ph pr-d/codeph ">false</codeph> si elle est désactivée.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">screenX</codeph></entry><entry class="- topic/entry ">Coordonnée horizontale à laquelle l’événement s’est produit, par rapport aux coordonnées de l’écran.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">screenY</codeph></entry><entry class="- topic/entry ">Coordonnée verticale à laquelle l’événement s’est produit, par rapport aux coordonnées de l’écran.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">L’objet SystemTrayIcon sous le périphérique de pointage.</entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:ScreenMouseEvent:screenX:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">screenX</apiName><shortdesc class="- topic/shortdesc ">
	Position X du clic en coordonnées d’écran.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Position X du clic en coordonnées d’écran.
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:ScreenMouseEvent:screenY:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">screenY</apiName><shortdesc class="- topic/shortdesc ">
	Position Y du clic en coordonnées d’écran.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Position Y du clic en coordonnées d’écran.
	
	</apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.events:ContextMenuEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">ContextMenuEvent</apiName><shortdesc class="- topic/shortdesc ">
 Un objet InteractiveObject distribue un objet ContextMenuEvent lorsque l’utilisateur ouvre le menu contextuel ou interagit avec lui.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Objets Event associés aux événements ContextMenuEvent.
 </apiTipText></apiTipTexts><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Un objet InteractiveObject distribue un objet ContextMenuEvent lorsque l’utilisateur ouvre le menu contextuel ou interagit avec lui. Il existe deux types d’événements ContextMenuEvent :
 <ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">ContextMenuEvent.MENU_ITEM_SELECT</codeph></li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">ContextMenuEvent.MENU_SELECT</codeph></li></ul>
 
 </apiDesc><example conref="examples\ContextMenuEventExample.as" class="- topic/example "> L’exemple suivant utilise la classe <codeph class="+ topic/ph pr-d/codeph ">ContextMenuEventExample</codeph> pour supprimer les éléments de menu contextuel par défaut de la scène et ajouter un nouvel élément de menu qui change la couleur d’un carré sur la scène. L’exemple exécute les tâches suivantes :
 
 <ol class="- topic/ol "><li class="- topic/li ">La propriété <codeph class="+ topic/ph pr-d/codeph ">myContextMenu</codeph> est déclarée, puis affectée à un nouvel objet ContextMenu et la propriété <codeph class="+ topic/ph pr-d/codeph ">redRectangle</codeph> (de type Sprite) est déclarée.</li><li class="- topic/li ">La méthode <codeph class="+ topic/ph pr-d/codeph ">removeDefaultItems()</codeph> est appelée. Cette méthode supprime tous les éléments de menu intégrés à l’exception de Print.</li><li class="- topic/li ">La méthode <codeph class="+ topic/ph pr-d/codeph ">addCustomMenuItems()</codeph> est appelée. Cette méthode place un élément de menu <codeph class="+ topic/ph pr-d/codeph ">Reverse Colors</codeph> dans le tableau <codeph class="+ topic/ph pr-d/codeph ">defaultItems</codeph> à l’aide de la méthode <codeph class="+ topic/ph pr-d/codeph ">push()</codeph> de Array. Un écouteur d’événements <codeph class="+ topic/ph pr-d/codeph ">menuItemSelect</codeph> est ajouté à l’objet ContextMenuItem et la méthode associée est appelée <codeph class="+ topic/ph pr-d/codeph ">menuItemSelectHandler()</codeph>. Cette méthode imprime certaines instructions <codeph class="+ topic/ph pr-d/codeph ">trace()</codeph> chaque fois que l’initiateur sélectionne Reverse Colors dans le menu contextuel. Le carré rouge devient noir et le texte noir devient rouge.</li><li class="- topic/li ">Dans le constructeur, un écouteur d’événements <codeph class="+ topic/ph pr-d/codeph ">menuSelect</codeph> est ajouté, de même que la méthode associée <codeph class="+ topic/ph pr-d/codeph ">menuSelectHandler()</codeph>, qui imprime simplement trois instructions <codeph class="+ topic/ph pr-d/codeph ">trace()</codeph> chaque fois qu’un élément du menu contextuel est sélectionné.</li><li class="- topic/li ">Le constructeur appelle <codeph class="+ topic/ph pr-d/codeph ">addChildren()</codeph>, qui dessine un carré rouge et l’ajoute dans la liste d’affichage, cette dernière l’affichant immédiatement.</li><li class="- topic/li ">Enfin, la propriété <codeph class="+ topic/ph pr-d/codeph ">myContextMenu</codeph> est affectée ou menu contextuel de la propriété <codeph class="+ topic/ph pr-d/codeph ">redRectangle</codeph>, de sorte que le menu contextuel personnalisé ne s’affiche que lorsque le pointeur de la souris survole le carré.</li></ol>
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
package {
    import flash.ui.ContextMenu;
    import flash.ui.ContextMenuItem;
    import flash.ui.ContextMenuBuiltInItems;
    import flash.events.ContextMenuEvent;
    import flash.display.Sprite;
    import flash.display.Shape;
    import flash.text.TextField;

    public class ContextMenuEventExample extends Sprite {
        private var myContextMenu:ContextMenu;
        private var menuLabel:String = "Reverse Colors";
        private var textLabel:String = "Right Click";
        private var redRectangle:Sprite;
        private var label:TextField;
        private var size:uint = 100;
        private var black:uint = 0x000000;
        private var red:uint = 0xFF0000;

        public function ContextMenuEventExample() {
            myContextMenu = new ContextMenu();
            removeDefaultItems();
            addCustomMenuItems();
            myContextMenu.addEventListener(ContextMenuEvent.MENU_SELECT, menuSelectHandler);

            addChildren();
            redRectangle.contextMenu = myContextMenu;
        }

        private function addChildren():void {
            redRectangle = new Sprite();
            redRectangle.graphics.beginFill(red);
            redRectangle.graphics.drawRect(0, 0, size, size);
            addChild(redRectangle);
            redRectangle.x = size;
            redRectangle.y = size;
            label = createLabel();
            redRectangle.addChild(label);
        }

        private function removeDefaultItems():void {
            myContextMenu.hideBuiltInItems();
            var defaultItems:ContextMenuBuiltInItems = myContextMenu.builtInItems;
            defaultItems.print = true;
        }

        private function addCustomMenuItems():void {
            var item:ContextMenuItem = new ContextMenuItem(menuLabel);
            myContextMenu.customItems.push(item);
            item.addEventListener(ContextMenuEvent.MENU_ITEM_SELECT, menuItemSelectHandler);
        }

        private function menuSelectHandler(event:ContextMenuEvent):void {
            trace("menuSelectHandler: " + event);
        }

        private function menuItemSelectHandler(event:ContextMenuEvent):void {
            trace("menuItemSelectHandler: " + event);
            var textColor:uint = (label.textColor == black) ? red : black;
            var bgColor:uint = (label.textColor == black) ? black : red;
            redRectangle.graphics.clear();
            redRectangle.graphics.beginFill(bgColor);
            redRectangle.graphics.drawRect(0, 0, size, size);
            label.textColor = textColor;
        }

        private function createLabel():TextField {
            var txtField:TextField = new TextField();
            txtField.text = textLabel;
            return txtField;
        }
    }
}
</codeblock></example></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.ui.xml#ContextMenu" class="- topic/link "><linktext class="- topic/linktext ">Classe ContextMenu</linktext></link><link href="flash.ui.xml#ContextMenuItem" class="- topic/link "><linktext class="- topic/linktext ">Classe ContextMenuItem</linktext></link></related-links><adobeApiEvent id="flash.events:ContextMenuEvent:MENU_ITEM_SELECT_menuItemSelect" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">menuItemSelect</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:ContextMenuEvent:MENU_ITEM_SELECT</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:ContextMenuEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.ui.xml#ContextMenuItem/event:menuItemSelect" class="- topic/link "><linktext class="- topic/linktext ">flash.ui.ContextMenuItem.menuItemSelect</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:ContextMenuEvent:MENU_SELECT_menuSelect" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">menuSelect</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:ContextMenuEvent:MENU_SELECT</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:ContextMenuEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.ui.xml#ContextMenu/event:menuSelect" class="- topic/link "><linktext class="- topic/linktext ">flash.ui.ContextMenu.menuSelect</linktext></link></related-links></adobeApiEvent><apiConstructor id="flash.events:ContextMenuEvent:ContextMenuEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">ContextMenuEvent</apiName><shortdesc class="- topic/shortdesc ">
	Crée un objet Event contenant des informations spécifiques sur les événements de menu.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">type</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc "> Type de l’événement. Valeurs possibles :
	<ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">ContextMenuEvent.MENU_ITEM_SELECT</codeph></li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">ContextMenuEvent.MENU_SELECT</codeph></li></ul>
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">bubbles</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc "> Détermine si l’objet Event prend part à la phase de propagation du flux d’événements. Les écouteurs d’événement peuvent accéder à cette information par le biais de la propriété <codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph> héritée. 
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">cancelable</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Détermine si l’objet Event peut être annulé. Les écouteurs d’événement peuvent accéder à cette information par le biais de la propriété <codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph> héritée.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">mouseTarget</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.display:InteractiveObject</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Objet de la liste d’affichage sur lequel l’utilisateur a cliqué du bouton droit de la souris pour afficher le menu contextuel. Il peut s’agir de l’objet <codeph class="+ topic/ph pr-d/codeph ">contextMenuOwner</codeph> ou de l’un de ses descendants dans la liste d’affichage.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">contextMenuOwner</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.display:InteractiveObject</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Objet de la liste d’affichage auquel le menu est associé. Il peut s’agir de l’objet <codeph class="+ topic/ph pr-d/codeph ">mouseTarget</codeph> ou de l’un de ses ancêtres dans la liste d’affichage.
	
	</apiDesc></apiParam><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Constructeur associé aux événements ContextMenuEvent.
 	</apiTipText></apiTipTexts></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Crée un objet Event contenant des informations spécifiques sur les événements de menu. Les objets Event sont transmis en tant que paramètres aux écouteurs d’événements.
	
	</apiDesc></apiConstructorDetail><related-links class="- topic/related-links "><link href="flash.events.xml#ContextMenuEvent/MENU_ITEM_SELECT" class="- topic/link "><linktext class="- topic/linktext ">ContextMenuEvent.MENU_ITEM_SELECT</linktext></link><link href="flash.events.xml#ContextMenuEvent/MENU_SELECT" class="- topic/link "><linktext class="- topic/linktext ">ContextMenuEvent.MENU_SELECT</linktext></link></related-links></apiConstructor><apiOperation id="flash.events:ContextMenuEvent:clone" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">clone</apiName><shortdesc class="- topic/shortdesc ">
	Crée une copie de l’objet ContextMenuEvent et définit la valeur de chaque propriété de sorte qu’elle corresponde à la valeur d’origine.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Nouvel objet ContextMenuEvent dont les propriétés ont la même valeur que celles de l’objet d’origine.
	</apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.events:Event</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Crée une copie de l’objet ContextMenuEvent et définit la valeur de chaque propriété de sorte qu’elle corresponde à la valeur d’origine. 
	
	</apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.events:ContextMenuEvent:toString" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">toString</apiName><shortdesc class="- topic/shortdesc ">
	Renvoie une chaîne répertoriant toutes les propriétés de l’objet ContextMenuEvent.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Chaîne répertoriant toutes les propriétés de l’objet ContextMenuEvent.
	</apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Renvoie une chaîne répertoriant toutes les propriétés de l’objet ContextMenuEvent. La chaîne est écrite au format suivant :
	<p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">[ContextMenuEvent type=<i class="+ topic/ph hi-d/i ">valeur</i> bubbles=<i class="+ topic/ph hi-d/i ">valeur</i> cancelable=<i class="+ topic/ph hi-d/i ">valeur</i> ... contextMenuOwner=<i class="+ topic/ph hi-d/i ">valeur</i>]</codeph></p>
	
	</apiDesc></apiOperationDetail></apiOperation><apiValue id="flash.events:ContextMenuEvent:MENU_ITEM_SELECT" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">MENU_ITEM_SELECT</apiName><shortdesc class="- topic/shortdesc ">
	Définit la valeur de la propriété type d’un objet événement menuItemSelect.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">menuItemSelect</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet événement <codeph class="+ topic/ph pr-d/codeph ">menuItemSelect</codeph>. 
	<p class="- topic/p ">Les propriétés de cet événement sont les suivantes :</p>
		<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">contextMenuOwner</codeph></entry><entry class="- topic/entry ">Objet de la liste d’affichage auquel le menu est associé.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">L’objet qui traite activement l’objet Event avec un écouteur d’événements.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">mouseTarget</codeph></entry><entry class="- topic/entry ">Objet de la liste d’affichage sur lequel l’utilisateur a cliqué du bouton droit de la souris pour afficher le menu contextuel.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Objet ContextMenuItem qui a été sélectionné. La cible ne correspond pas toujours à l’objet de la liste d’affichage qui est associé à l’écouteur d’événement. Utilisez la propriété <codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph> pour accéder à l’objet de la liste d’affichage qui traite actuellement l’événement.</entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.ui.xml#ContextMenuItem/event:menuItemSelect" class="- topic/link "><linktext class="- topic/linktext ">flash.ui.ContextMenuItem.menuItemSelect</linktext></link></related-links></apiValue><apiValue id="flash.events:ContextMenuEvent:MENU_SELECT" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">MENU_SELECT</apiName><shortdesc class="- topic/shortdesc ">
	Définit la valeur de la propriété type d’un objet événement menuSelect.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">menuSelect</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet événement <codeph class="+ topic/ph pr-d/codeph ">menuSelect</codeph>. 
	<p class="- topic/p ">Les propriétés de cet événement sont les suivantes :</p>
	
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">contextMenuOwner</codeph></entry><entry class="- topic/entry ">Objet de la liste d’affichage auquel le menu est associé.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">L’objet qui traite activement l’objet Event avec un écouteur d’événements.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">mouseTarget</codeph></entry><entry class="- topic/entry ">Objet de la liste d’affichage sur lequel l’utilisateur a cliqué du bouton droit de la souris pour afficher le menu contextuel.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Objet ContextMenu sur le point d’être affiché. La cible ne correspond pas toujours à l’objet de la liste d’affichage qui est associé à l’écouteur d’événement. Utilisez la propriété <codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph> pour accéder à l’objet de la liste d’affichage qui traite actuellement l’événement.</entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.ui.xml#ContextMenu/event:menuSelect" class="- topic/link "><linktext class="- topic/linktext ">flash.ui.ContextMenu.menuSelect</linktext></link></related-links></apiValue><apiValue id="flash.events:ContextMenuEvent:contextMenuOwner:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">contextMenuOwner</apiName><shortdesc class="- topic/shortdesc ">
	Objet de la liste d’affichage auquel le menu est associé.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.display:InteractiveObject</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Objet de la liste d’affichage auquel le menu est associé. Il peut s’agir de la cible de la souris (<codeph class="+ topic/ph pr-d/codeph ">mouseTarget</codeph>) ou de l’un de ses ancêtres dans la liste d’affichage.
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:ContextMenuEvent:isMouseTargetInaccessible:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">isMouseTargetInaccessible</apiName><shortdesc class="- topic/shortdesc ">
	 Indique si la propriété mouseTarget a été définie sur null pour des raisons de sécurité.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Indique si la propriété <codeph class="+ topic/ph pr-d/codeph ">mouseTarget</codeph> a été définie sur <codeph class="+ topic/ph pr-d/codeph ">null</codeph> pour des raisons de sécurité. Si la valeur nominale de <codeph class="+ topic/ph pr-d/codeph ">menuTarget</codeph> est une référence à un <codeph class="+ topic/ph pr-d/codeph ">DisplayObject</codeph> se trouvant dans un autre sandbox de sécurité, <codeph class="+ topic/ph pr-d/codeph ">menuTarget</codeph> est défini sur <codeph class="+ topic/ph pr-d/codeph ">null</codeph>, à moins qu’il existe une autorisation dans les deux sens dans les limites de ce sandbox. L’autorisation est établie en appelant la méthode <codeph class="+ topic/ph pr-d/codeph ">Security.allowDomain()</codeph> à partir d’un fichier SWF ou en fournissant un fichier de régulation depuis le serveur d’un fichier image, puis en définissant l’indicateur <codeph class="+ topic/ph pr-d/codeph ">LoaderContext.checkPolicyFile</codeph> lors du chargement de l’image.
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.events.xml#ContextMenuEvent/mouseTarget" class="- topic/link "><linktext class="- topic/linktext ">ContextMenuEvent.mouseTarget</linktext></link><link href="flash.system.xml#Security/allowDomain()" class="- topic/link "><linktext class="- topic/linktext ">Security.allowDomain()</linktext></link><link href="flash.system.xml#LoaderContext/checkPolicyFile" class="- topic/link "><linktext class="- topic/linktext ">LoaderContext.checkPolicyFile</linktext></link></related-links></apiValue><apiValue id="flash.events:ContextMenuEvent:mouseTarget:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">mouseTarget</apiName><shortdesc class="- topic/shortdesc ">
	Objet de la liste d’affichage sur lequel l’utilisateur a cliqué du bouton droit de la souris pour afficher le menu contextuel.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.display:InteractiveObject</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Objet de la liste d’affichage sur lequel l’utilisateur a cliqué du bouton droit de la souris pour afficher le menu contextuel. Il peut s’agir de l’objet de la liste d’affichage auquel le menu est associé (<codeph class="+ topic/ph pr-d/codeph ">contextMenuOwner</codeph>) ou de l’un de ses descendants dans la liste d’affichage.
	<p class="- topic/p ">La valeur de cette propriété peut être <codeph class="+ topic/ph pr-d/codeph ">null</codeph> dans deux cas : d’une part s’il n’existe aucune cible de la souris, notamment lorsque vous placez la souris sur un élément de l’arrière-plan ; d’autre part lorsqu’il existe une cible de la souris mais que celle-ci se trouve dans un sandbox de sécurité auquel vous n’avez pas accès. Pour savoir dans quel cas vous vous trouvez, utilisez la propriété <codeph class="+ topic/ph pr-d/codeph ">isMouseTargetInaccessible()</codeph>.</p>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.events.xml#ContextMenuEvent/isMouseTargetInaccessible" class="- topic/link "><linktext class="- topic/linktext ">ContextMenuEvent.isMouseTargetInaccessible</linktext></link></related-links></apiValue></apiClassifier><apiClassifier languages="" id="flash.events:DRMAuthenticateEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">DRMAuthenticateEvent</apiName><shortdesc class="- topic/shortdesc ">
    Un objet NetStream distribue un objet DRMAuthenticateEvent lors d’une tentative de lecture d’un contenu chiffré par DRM (gestion des droits numériques) nécessitant les informations d’identification de l’utilisateur pour l’authentification.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Objets event pour des objets activés DRM.
	</apiTipText></apiTipTexts><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Un objet NetStream distribue un objet DRMAuthenticateEvent lors d’une tentative de lecture d’un contenu chiffré par DRM (gestion des droits numériques) nécessitant les informations d’identification de l’utilisateur pour l’authentification. 
	<p class="- topic/p ">
	Le gestionnaire DRMAuthenticateEvent est chargé de rassembler les informations d’identification requises (nom d’utilisateur, mot de passe et type, par exemple)) et de transmettre les valeurs à la méthode <codeph class="+ topic/ph pr-d/codeph ">NetStream.setDRMAuthenticationCredentials()</codeph> pour l’authentification. Chaque application AIR doit fournir un mécanisme permettant d’obtenir les informations d’identification de l’utilisateur. Par exemple, l’application peut fournir à l’utilisateur une interface utilisateur simple pour entrer les valeurs de nom d’utilisateur et de mot de passe, ainsi que le type, le cas échéant.  
	</p> 
	<p class="- topic/p ">
	En cas d’échec de l’authentification utilisateur, l’application tente de nouveau l’authentification et distribue un nouvel événement DRMAuthenticateEvent pour l’objet NetStream.
	</p>
	
	</apiDesc><example conref="examples\DRMAuthenticateEventExample.as" class="- topic/example "><codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">package
{
    import flash.display.Sprite;
    import flash.events.AsyncErrorEvent;
    import flash.events.NetStatusEvent;
    import flash.events.DRMAuthenticateEvent;
    import flash.media.Video;
    import flash.net.NetConnection;
    import flash.net.NetStream;

    public class DRMAuthenticateEventExample extends Sprite
    {
        var videoURL:String = "Video.flv";
        var videoConnection:NetConnection;
        var videoStream:NetStream;
        var video:Video = new Video();            

        public function DRMAuthenticateEventExample()
        {
            videoConnection = new NetConnection();
            videoConnection.addEventListener(NetStatusEvent.NET_STATUS, netStatusHandler);
            videoConnection.connect(null);
        }

        private function connectStream():void {
            videoStream = new NetStream(videoConnection);
            videoStream.addEventListener(NetStatusEvent.NET_STATUS, netStatusHandler);
            videoStream.addEventListener(AsyncErrorEvent.ASYNC_ERROR, asyncErrorHandler);
            videoStream.addEventListener(DRMAuthenticateEvent.DRM_AUTHENTICATE, drmAuthenticateEventHandler);
            video.attachNetStream(videoStream);
            videoStream.play(videoURL);
            addChild(video);
        }

        private function netStatusHandler(event:NetStatusEvent):void {
            switch (event.info.code) {
                case "NetConnection.Connect.Success":
                    connectStream();
                    break;
                case "NetStream.Play.StreamNotFound":
                    trace("Unable to locate video: " + videoURL);
                    break;
            }
        }

        private function asyncErrorHandler(event:AsyncErrorEvent):void {
            // ignore AsyncErrorEvent events.
        }

         private function drmAuthenticateEventHandler(event:DRMAuthenticateEvent):void {
            videoStream.setDRMAuthenticationCredentials("User", "password", "drm");
        }
     }
}
</codeblock></example></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.events.xml#DRMAuthenticateEvent/DRM_AUTHENTICATE" class="- topic/link "><linktext class="- topic/linktext ">DRMAuthenticateEvent.DRM_AUTHENTICATE</linktext></link><link href="flash.net.drm.xml#DRMManager" class="- topic/link "><linktext class="- topic/linktext ">flash.net.drm.DRMManager</linktext></link></related-links><adobeApiEvent id="flash.events:DRMAuthenticateEvent:AUTHENTICATION_TYPE_DRM_drmAuthenticate" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">drmAuthenticate</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:DRMAuthenticateEvent:AUTHENTICATION_TYPE_DRM</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:DRMAuthenticateEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStream/event:drmAuthenticate" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetStream.drmAuthenticate</linktext></link><link href="flash.events.xml#DRMAuthenticateEvent/authenticationType" class="- topic/link "><linktext class="- topic/linktext ">DRMAuthenticateEvent.authenticationType</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:DRMAuthenticateEvent:AUTHENTICATION_TYPE_PROXY_drmAuthenticate" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">drmAuthenticate</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:DRMAuthenticateEvent:AUTHENTICATION_TYPE_PROXY</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:DRMAuthenticateEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStream/event:drmAuthenticate" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetStream.drmAuthenticate</linktext></link><link href="flash.events.xml#DRMAuthenticateEvent/authenticationType" class="- topic/link "><linktext class="- topic/linktext ">DRMAuthenticateEvent.authenticationType</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:DRMAuthenticateEvent:DRM_AUTHENTICATE_drmAuthenticate" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">drmAuthenticate</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:DRMAuthenticateEvent:DRM_AUTHENTICATE</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:DRMAuthenticateEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStream/event:drmAuthenticate" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetStream.drmAuthenticate</linktext></link></related-links></adobeApiEvent><apiConstructor id="flash.events:DRMAuthenticateEvent:DRMAuthenticateEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">DRMAuthenticateEvent</apiName><shortdesc class="- topic/shortdesc ">
 	    Crée un objet Event contenant des informations spécifiques sur les événements d’authentification DRM.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">DRMAuthenticateEvent, constructor
 	    </keyword></asCustoms></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">type</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc "> Type de l’événement. Les écouteurs d’événement peuvent accéder à cette information par le biais de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> héritée. Il n’existe qu’un seul type d’événement DRMAuthenticate : <codeph class="+ topic/ph pr-d/codeph ">DRMAuthenticateEvent.DRM_AUTHENTICATE</codeph>.
		</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">bubbles</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Détermine si l’objet Event prend part à la phase de propagation du flux d’événements. Les écouteurs d’événement peuvent accéder à cette information par le biais de la propriété <codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph> héritée.
		</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">cancelable</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Détermine si l’objet Event peut être annulé. Les écouteurs d’événement peuvent accéder à cette information par le biais de la propriété <codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph> héritée.
		</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">header</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData "/><apiDesc class="- topic/section reference/section apiRef/apiDesc ">L’en-tête du fichier de contenu chiffré fourni par le serveur.
  		</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">userPrompt</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData "/><apiDesc class="- topic/section reference/section apiRef/apiDesc "> Une invite à entrer les informations de nom d’utilisateur, fournies par le serveur.
		</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">passPrompt</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData "/><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Une invite à entrer les informations de mot de passe, fournies par le serveur.
		</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">urlPrompt</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData "/><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Une invite pour une URL à afficher, fournie par le serveur.
		</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">authenticationType</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData "/><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Indique si les informations d’identification fournies servent à l’authentification par rapport à un serveur FMRMS (Flash Media Rights Management Server : serveur de gestion des droits de Flash Media) ou un serveur proxy.
		</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">netstream</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.net:NetStream</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">L’objet NetStream qui a initié cet événement.
 	    
 	    </apiDesc></apiParam></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 	    Crée un objet Event contenant des informations spécifiques sur les événements d’authentification DRM. Les objets Event sont transmis en tant que paramètres aux écouteurs d’événements. 
	    
 	    </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="flash.events:DRMAuthenticateEvent:clone" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">clone</apiName><shortdesc class="- topic/shortdesc ">
		Crée une copie de l’objet DRMAuthenticateEvent et définit la valeur de chaque propriété de sorte qu’elle corresponde à la valeur d’origine.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Nouvel objet DRMAuthenticateEvent dont les propriétés ont la même valeur que celles de l’objet d’origine.
		</apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.events:Event</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		Crée une copie de l’objet DRMAuthenticateEvent et définit la valeur de chaque propriété de sorte qu’elle corresponde à la valeur d’origine.
		
		</apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.events:DRMAuthenticateEvent:toString" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">toString</apiName><shortdesc class="- topic/shortdesc ">
		Renvoie une chaîne répertoriant toutes les propriétés de l’objet DRMAuthenticateEvent.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Une chaîne répertoriant toutes les propriétés de l’objet DRMAuthenticateEvent.
		
		</apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		Renvoie une chaîne répertoriant toutes les propriétés de l’objet DRMAuthenticateEvent. La chaîne est écrite au format suivant : 
     	<p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">[DRMAuthenticateEvent type=<i class="+ topic/ph hi-d/i ">valeur</i> bubbles=<i class="+ topic/ph hi-d/i ">valeur</i> cancelable=<i class="+ topic/ph hi-d/i ">valeur</i> eventPhase=<i class="+ topic/ph hi-d/i ">valeur</i> header=<i class="+ topic/ph hi-d/i ">valeur</i> usernamePrompt=<i class="+ topic/ph hi-d/i ">valeur</i> passwordPrompt=<i class="+ topic/ph hi-d/i ">valeur</i> urlPrompt=<i class="+ topic/ph hi-d/i ">valeur</i>] authenticationType=<i class="+ topic/ph hi-d/i ">valeur</i></codeph></p>
     	
     	</apiDesc></apiOperationDetail></apiOperation><apiValue id="flash.events:DRMAuthenticateEvent:AUTHENTICATION_TYPE_DRM" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">AUTHENTICATION_TYPE_DRM</apiName><shortdesc class="- topic/shortdesc ">
		La constante DRMAuthenticateEvent.AUTHENTICATION_TYPE_DRM définit la valeur de la propriété authenticationType d’un objet événement DRMAuthenticateEvent.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">drm</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		La constante <codeph class="+ topic/ph pr-d/codeph ">DRMAuthenticateEvent.AUTHENTICATION_TYPE_DRM</codeph> définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">authenticationType</codeph> d’un objet événement DRMAuthenticateEvent. 
		
		<p class="- topic/p ">Les propriétés de cet événement sont les suivantes :</p>
		
		<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">authenticationType</codeph></entry><entry class="- topic/entry ">Indique si les informations d’identification fournies servent à l’authentification par rapport à un serveur FMRMS (Flash Media Rights Management Server : serveur de gestion des droits de Flash Media) ou un serveur proxy.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">en-tête</codeph></entry><entry class="- topic/entry ">L’en-tête du fichier de contenu chiffré fourni par le serveur.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">netStream</codeph></entry><entry class="- topic/entry ">L’objet NetStream qui a initié cet événement.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">passwordPrompt</codeph></entry><entry class="- topic/entry ">Une invite à entrer les informations de mot de passe, fournies par le serveur.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">L’objet NetStream.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">urlPrompt</codeph></entry><entry class="- topic/entry ">Une invite pour une URL à afficher, fournie par le serveur.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">usernamePrompt</codeph></entry><entry class="- topic/entry ">Une invite à entrer les informations de nom d’utilisateur, fournies par le serveur.</entry></row></tbody></tgroup></adobetable>
		
		</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStream/event:drmAuthenticate" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetStream.drmAuthenticate</linktext></link><link href="flash.events.xml#DRMAuthenticateEvent/authenticationType" class="- topic/link "><linktext class="- topic/linktext ">DRMAuthenticateEvent.authenticationType</linktext></link></related-links></apiValue><apiValue id="flash.events:DRMAuthenticateEvent:AUTHENTICATION_TYPE_PROXY" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">AUTHENTICATION_TYPE_PROXY</apiName><shortdesc class="- topic/shortdesc ">
		La constante DRMAuthenticateEvent.AUTHENTICATION_TYPE_PROXY définit la valeur de la propriété authenticationType d’un objet événement DRMAuthenticateEvent.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">proxy</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		La constante <codeph class="+ topic/ph pr-d/codeph ">DRMAuthenticateEvent.AUTHENTICATION_TYPE_PROXY</codeph> définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">authenticationType</codeph> d’un objet événement DRMAuthenticateEvent. 
		
		<p class="- topic/p ">Les propriétés de cet événement sont les suivantes :</p>
		
		<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">authenticationType</codeph></entry><entry class="- topic/entry ">Indique si les informations d’identification fournies servent à l’authentification par rapport à un serveur FMRMS (Flash Media Rights Management Server : serveur de gestion des droits de Flash Media) ou un serveur proxy.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">en-tête</codeph></entry><entry class="- topic/entry ">L’en-tête du fichier de contenu chiffré fourni par le serveur.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">netStream</codeph></entry><entry class="- topic/entry ">L’objet NetStream qui a initié cet événement.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">passwordPrompt</codeph></entry><entry class="- topic/entry ">Une invite à entrer les informations de mot de passe, fournies par le serveur.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">L’objet NetStream.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">urlPrompt</codeph></entry><entry class="- topic/entry ">Une invite pour une URL à afficher, fournie par le serveur.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">usernamePrompt</codeph></entry><entry class="- topic/entry ">Une invite à entrer les informations de nom d’utilisateur, fournies par le serveur.</entry></row></tbody></tgroup></adobetable>
		
		</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStream/event:drmAuthenticate" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetStream.drmAuthenticate</linktext></link><link href="flash.events.xml#DRMAuthenticateEvent/authenticationType" class="- topic/link "><linktext class="- topic/linktext ">DRMAuthenticateEvent.authenticationType</linktext></link></related-links></apiValue><apiValue id="flash.events:DRMAuthenticateEvent:DRM_AUTHENTICATE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">DRM_AUTHENTICATE</apiName><shortdesc class="- topic/shortdesc ">
		La constante DRMAuthenticateEvent.DRM_AUTHENTICATE définit la valeur de la propriété type d’un objet événement DRMAuthenticateEvent.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">drmAuthenticate</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		La constante <codeph class="+ topic/ph pr-d/codeph ">DRMAuthenticateEvent.DRM_AUTHENTICATE</codeph> définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet événement DRMAuthenticateEvent. 
		
		<p class="- topic/p ">Les propriétés de cet événement sont les suivantes :</p>
		
		<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">authenticationType</codeph></entry><entry class="- topic/entry ">Indique si les informations d’identification fournies servent à l’authentification par rapport à un serveur FMRMS (Flash Media Rights Management Server : serveur de gestion des droits de Flash Media) ou un serveur proxy.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> il n’existe aucun comportement par défaut à annuler.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">en-tête</codeph></entry><entry class="- topic/entry ">L’en-tête du fichier de contenu chiffré fourni par le serveur.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">netStream</codeph></entry><entry class="- topic/entry ">L’objet NetStream qui a initié cet événement.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">passwordPrompt</codeph></entry><entry class="- topic/entry ">Une invite à entrer les informations de mot de passe, fournies par le serveur.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">L’objet NetStream.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">urlPrompt</codeph></entry><entry class="- topic/entry ">Une invite pour une URL à afficher, fournie par le serveur.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">usernamePrompt</codeph></entry><entry class="- topic/entry ">Une invite à entrer les informations de nom d’utilisateur, fournies par le serveur.</entry></row></tbody></tgroup></adobetable>
		
		</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStream/event:drmAuthenticate" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetStream.drmAuthenticate</linktext></link></related-links></apiValue><apiValue id="flash.events:DRMAuthenticateEvent:authenticationType:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">authenticationType</apiName><shortdesc class="- topic/shortdesc ">
		Indique si les informations d’identification fournies servent à l’authentification par rapport au serveur FMRMS (Flash Media Rights Management Server : serveur de gestion des droits de Flash Media) ou un serveur proxy.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">DRMAuthenticateEvent.authenticationType, authenticationType
		
		</keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		Indique si les informations d’identification fournies servent à l’authentification par rapport au serveur FMRMS (Flash Media Rights Management Server : serveur de gestion des droits de Flash Media) ou un serveur proxy. Par exemple, l’option <codeph class="+ topic/ph pr-d/codeph ">"proxy"</codeph> permet à une société d’authentifier l’application par rapport au serveur proxy avant que l’utilisateur n’accède à Internet. A moins qu’une authentification anonyme soit utilisée, après l’authentification proxy, l’utilisateur doit encore authentifier par rapport à FMRMS afin d’obtenir le bon et lire le contenu. Vous pouvez utiliser <codeph class="+ topic/ph pr-d/codeph ">setDRMAuthenticationcredentials()</codeph> une deuxième fois, avec l’option <codeph class="+ topic/ph pr-d/codeph ">"drm"</codeph>, pour authentifier par rapport à FMRMS.
		
		</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:DRMAuthenticateEvent:header:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">header</apiName><shortdesc class="- topic/shortdesc ">
		L’en-tête du fichier de contenu chiffré fourni par le serveur.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">DRMAuthenticateEvent.header, header
		
		</keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		L’en-tête du fichier de contenu chiffré fourni par le serveur. Il contient des informations sur le contexte du contenu chiffré.
		
		</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:DRMAuthenticateEvent:netstream:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">netstream</apiName><shortdesc class="- topic/shortdesc ">
		L’objet NetStream qui a initié cet événement.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">DRMAuthenticateEvent.netstream, netstream
		
		</keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.net:NetStream</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		L’objet NetStream qui a initié cet événement.
		
		</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:DRMAuthenticateEvent:passwordPrompt:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">passwordPrompt</apiName><shortdesc class="- topic/shortdesc ">
		Une invite à entrer les informations de mot de passe, fournies par le serveur.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">DRMAuthenticateEvent.passwordPrompt, passwordPrompt
		
		</keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		Une invite à entrer les informations de mot de passe, fournies par le serveur. La chaîne peut inclure des instructions pour le type de mot de passe requis.
		
		</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:DRMAuthenticateEvent:urlPrompt:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">urlPrompt</apiName><shortdesc class="- topic/shortdesc ">
		Une invite pour une chaîne d’URL, fournie par le serveur.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">DRMAuthenticateEvent.urlPrompt, urlPrompt
		
		</keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		Une invite pour une chaîne d’URL, fournie par le serveur. La chaîne peut fournir l’emplacement auquel le nom d’utilisateur et le mot de passe sont envoyés.
		
		</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:DRMAuthenticateEvent:usernamePrompt:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">usernamePrompt</apiName><shortdesc class="- topic/shortdesc ">
		Une invite à entrer les informations de nom d’utilisateur, fournies par le serveur.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">DRMAuthenticateEvent.usernamePrompt, usernamePrompt
		
		</keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		Une invite à entrer les informations de nom d’utilisateur, fournies par le serveur. La chaîne peut inclure des instructions pour le type de nom d’utilisateur requis. Par exemple, un fournisseur de contenu peut exiger une adresse électronique comme nom d’utilisateur.
		
		</apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.events:StorageVolumeChangeEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">StorageVolumeChangeEvent</apiName><shortdesc class="- topic/shortdesc "> 
   L’objet StorageVolumeInfo.storageVolumeInfo distribue un objet d’événement StorageVolumeChangeEvent lors du montage ou du démontage d’un volume de stockage.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
   L’objet <codeph class="+ topic/ph pr-d/codeph ">StorageVolumeInfo.storageVolumeInfo</codeph> distribue un objet d’événement StorageVolumeChangeEvent lors du montage ou du démontage d’un volume de stockage. Il existe deux types d’événements StorageVolumeChangeEvent : <codeph class="+ topic/ph pr-d/codeph ">storageVolumeMount</codeph> et <codeph class="+ topic/ph pr-d/codeph ">storageVolumeUnmount</codeph>.
   
   <p class="- topic/p ">Sous Linux, l’objet StorageVolumeInfo ne distribue les événements <codeph class="+ topic/ph pr-d/codeph ">storageVolumeMount</codeph> et <codeph class="+ topic/ph pr-d/codeph ">storageVolumeUnmount</codeph> que pour les périphériques physiques. Il ne distribue aucun événement lorsque l’utilisateur monte ou démonte des volumes sur un réseau.</p>
   
   <p class="- topic/p ">Certains périphériques, notamment certains appareils photo numériques et téléphones, apparaissent dans le tableau <codeph class="+ topic/ph pr-d/codeph ">StorageVolumeInfo.getStorageVolumes()</codeph>, mais ne distribuent aucun objet StorageVolumeChangeEvent lorsqu’ils sont montés ou démontés.</p>
   
   <!-- p>Not all devices cause the StorageVolumeInfo object to dispatch a StorageVolumeChangeEvent event  
   object when a storage volume is mounted or unmounted, as noted in the following table:</p>
   
   <table class="innertable">
   
   <tr>
      <th>Device type</th>   <th>Dispatches StorageVolumeChangeEvent</th>
   </tr>
   
   <tr>
      <td>Card reader</td>   <td>Yes</td>   
   </tr>
   
   <tr>
      <td>CD/DVD, fixed</td>   <td>Yes</td>   
   </tr>
   
   <tr>
      <td>CD/DVD, external</td>   <td>Yes</td>   
   </tr>
   
   <tr>
      <td>Firewire drive</td>   <td>Yes</td>   
   </tr>
   
   <tr>
      <td>Hard disk, USB</td>   <td>Yes</td>   
   </tr>
   
   <tr>
      <td>Network drive</td>   <td>Yes</td>  
   </tr>
   
   <tr>
      <td>USB pen drive</td>   <td>Yes</td>   
   </tr>
   
   </table -->
   
   
   </apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.filesystem.xml#StorageVolumeInfo" class="- topic/link "><linktext class="- topic/linktext ">flash.filesystem.StorageVolumeInfo</linktext></link></related-links><adobeApiEvent id="flash.events:StorageVolumeChangeEvent:STORAGE_VOLUME_MOUNT_storageVolumeMount" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">storageVolumeMount</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:StorageVolumeChangeEvent:STORAGE_VOLUME_MOUNT</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:StorageVolumeChangeEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.filesystem.xml#StorageVolumeInfo" class="- topic/link "><linktext class="- topic/linktext ">flash.filesystem.StorageVolumeInfo</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:StorageVolumeChangeEvent:STORAGE_VOLUME_UNMOUNT_storageVolumeUnount" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">storageVolumeUnount</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:StorageVolumeChangeEvent:STORAGE_VOLUME_UNMOUNT</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:StorageVolumeChangeEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.filesystem.xml#StorageVolumeInfo" class="- topic/link "><linktext class="- topic/linktext ">flash.filesystem.StorageVolumeInfo</linktext></link></related-links></adobeApiEvent><apiConstructor id="flash.events:StorageVolumeChangeEvent:StorageVolumeChangeEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">StorageVolumeChangeEvent</apiName><shortdesc class="- topic/shortdesc ">
	Crée un objet StorageVolumeChangeEvent à transmettre en tant qu’argument aux écouteurs d’événement.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">type</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc "> Le type d’événement, accessible dans la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph>. La classe StorageVolumeChangeEvent définit deux types d’événement : l’événement <codeph class="+ topic/ph pr-d/codeph ">storageVolumeMount</codeph>, représenté par la constante <codeph class="+ topic/ph pr-d/codeph ">StorageVolumeChangeEvent.STORAGE_VOLUME_MOUNT</codeph>, et l’événement <codeph class="+ topic/ph pr-d/codeph ">storageVolumeUnmount</codeph>, représenté par la constante <codeph class="+ topic/ph pr-d/codeph ">StorageVolumeChangeEvent.STORAGE_VOLUME_UNMOUNT</codeph>,
	
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">bubbles</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc "> Détermine si l’objet d’événement prend part à la phase de propagation du flux d’événements. La valeur par défaut est <codeph class="+ topic/ph pr-d/codeph ">false</codeph>.
	
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">cancelable</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Détermine si l’objet Event peut être annulé. La valeur par défaut est <codeph class="+ topic/ph pr-d/codeph ">false</codeph>.
	
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">path</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.filesystem:File</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Nom du volume de stockage.
	
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">volume</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.filesystem:StorageVolume</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Objet File représentant le volume de stockage.
	
	</apiDesc></apiParam><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Utilisé pour créer un objet StorageVolumeChangeEvent.
	
	</apiTipText></apiTipTexts></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Crée un objet StorageVolumeChangeEvent à transmettre en tant qu’argument aux écouteurs d’événement.
	
	</apiDesc></apiConstructorDetail><related-links class="- topic/related-links "><link href="flash.errors.xml#SQLError" class="- topic/link "><linktext class="- topic/linktext ">flash.errors.SQLError</linktext></link><link href="flash.events.xml#ErrorEvent/ERROR" class="- topic/link "><linktext class="- topic/linktext ">flash.events.ErrorEvent.ERROR</linktext></link></related-links></apiConstructor><apiOperation id="flash.events:StorageVolumeChangeEvent:clone" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">clone</apiName><shortdesc class="- topic/shortdesc ">
        
	 Duplique une occurrence d’une sous-classe Event.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Nouvel objet Event identique à l’original.
	 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.events:Event</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
        
	 Duplique une occurrence d’une sous-classe Event.
	 
     <p class="- topic/p ">Renvoie un nouvel objet Event, qui est une copie de l’occurrence d’origine de l’objet Event. En règle générale, vous n’appelez pas <codeph class="+ topic/ph pr-d/codeph ">clone()</codeph>. La classe EventDispatcher l’appelle automatiquement lorsque vous redistribuez un événement, en d’autres termes, lorsque vous appelez <codeph class="+ topic/ph pr-d/codeph ">dispatchEvent(event)</codeph> à partir du gestionnaire qui gère <codeph class="+ topic/ph pr-d/codeph ">event</codeph>.</p>
	 
	 <p class="- topic/p ">Le nouvel objet Event comprend toutes les propriétés de l’objet d’origine.</p> 
	 
	 <p class="- topic/p ">Lorsque vous créez une classe Event personnalisée, vous devez bloquer la méthode <codeph class="+ topic/ph pr-d/codeph ">Event.clone()</codeph> héritée afin qu’elle duplique les propriétés de votre classe personnalisée. Si vous ne définissez pas toutes les propriétés que vous ajoutez à votre sous-classe Event, elles ne posséderont pas les valeurs correctes lorsque les écouteurs gèreront l’événement redistribué.</p>
	 
	 <p class="- topic/p ">Dans cet exemple, <codeph class="+ topic/ph pr-d/codeph ">PingEvent</codeph> est une sous-classe de <codeph class="+ topic/ph pr-d/codeph ">Event</codeph> et implémente donc sa propre version de <codeph class="+ topic/ph pr-d/codeph ">clone()</codeph>.</p>
	 
	 <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
	 class PingEvent extends Event {
		 var URL:String;
		 
	 public override function clone():Event {
	 	     return new PingEvent(type, bubbles, cancelable, URL);
	    }
	 }
	 </codeblock>
	 
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.events:StorageVolumeChangeEvent:toString" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">toString</apiName><shortdesc class="- topic/shortdesc ">
        
	Renvoie une chaîne répertoriant toutes les propriétés de l’objet Event.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Chaîne répertoriant toutes les propriétés de l’objet Event.
	 
	 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
        
	Renvoie une chaîne répertoriant toutes les propriétés de l’objet Event. La chaîne est écrite au format suivant :
	<p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">[Event type=<i class="+ topic/ph hi-d/i ">valeur</i> bubbles=<i class="+ topic/ph hi-d/i ">valeur</i> cancelable=<i class="+ topic/ph hi-d/i ">valeur</i>]</codeph></p>
	
	</apiDesc></apiOperationDetail></apiOperation><apiValue id="flash.events:StorageVolumeChangeEvent:STORAGE_VOLUME_MOUNT" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">STORAGE_VOLUME_MOUNT</apiName><shortdesc class="- topic/shortdesc ">
	La constante StorageVolumeChangeEvent.VOLUME_MOUNT définit la valeur de la propriété type d’un objet StorageVolumeChangeEvent lorsqu’un volume est monté.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">storageVolumeMount</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	La constante <codeph class="+ topic/ph pr-d/codeph ">StorageVolumeChangeEvent.VOLUME_MOUNT</codeph> définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet StorageVolumeChangeEvent lorsqu’un volume est monté.
	
	<p class="- topic/p ">Les propriétés de cet événement sont les suivantes :</p>
	
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">L’objet StorageVolumeChangeEvent.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">file</codeph></entry><entry class="- topic/entry ">Objet File représentant le volume de stockage.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">name</codeph></entry><entry class="- topic/entry ">Nom du volume de stockage.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">L’objet StorageVolumeChangeEvent.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">type</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"storageVolumeMount"</codeph></entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.filesystem.xml#StorageVolumeInfo" class="- topic/link "><linktext class="- topic/linktext ">flash.filesystem.StorageVolumeInfo</linktext></link></related-links></apiValue><apiValue id="flash.events:StorageVolumeChangeEvent:STORAGE_VOLUME_UNMOUNT" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">STORAGE_VOLUME_UNMOUNT</apiName><shortdesc class="- topic/shortdesc ">
	La constante StorageVolumeChangeEvent.VOLUME_MOUNT définit la valeur de la propriété type d’un objet StorageVolumeChangeEvent lorsqu’un volume est démonté.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">storageVolumeUnmount</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	La constante <codeph class="+ topic/ph pr-d/codeph ">StorageVolumeChangeEvent.VOLUME_MOUNT</codeph> définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet StorageVolumeChangeEvent lorsqu’un volume est démonté.
	
	<p class="- topic/p ">Les propriétés de cet événement sont les suivantes :</p>
	
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">L’objet StorageVolumeChangeEvent.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">file</codeph></entry><entry class="- topic/entry ">Objet File représentant le volume de stockage.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">name</codeph></entry><entry class="- topic/entry ">Nom du volume de stockage.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">L’objet StorageVolumeChangeEvent.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">type</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"storageVolumeUnmount"</codeph></entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.filesystem.xml#StorageVolumeInfo" class="- topic/link "><linktext class="- topic/linktext ">flash.filesystem.StorageVolumeInfo</linktext></link></related-links></apiValue><apiValue id="flash.events:StorageVolumeChangeEvent:rootDirectory:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">rootDirectory</apiName><shortdesc class="- topic/shortdesc ">
         Objet File correspondant au répertoire racine du volume monté.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.filesystem:File</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
         Objet File correspondant au répertoire racine du volume monté. Si le volume a été démonté (si le type d’événement est <codeph class="+ topic/ph pr-d/codeph ">storageVolumeUnmount</codeph>) cette propriété est définie sur <codeph class="+ topic/ph pr-d/codeph ">null</codeph>.
         
         </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.filesystem.xml#File" class="- topic/link "><linktext class="- topic/linktext ">flash.filesystem.File</linktext></link></related-links></apiValue><apiValue id="flash.events:StorageVolumeChangeEvent:storageVolume:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">storageVolume</apiName><shortdesc class="- topic/shortdesc ">
         Objet StorageVolume contenant des informations sur un volume monté.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.filesystem:StorageVolume</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
         Objet StorageVolume contenant des informations sur un volume monté. Cette propriété est <codeph class="+ topic/ph pr-d/codeph ">null</codeph> pour un volume démonté (pour un événement <codeph class="+ topic/ph pr-d/codeph ">storageVolumeUnmount</codeph>).
         
         </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.filesystem.xml#StorageVolume" class="- topic/link "><linktext class="- topic/linktext ">flash.filesystem.StorageVolume</linktext></link></related-links></apiValue></apiClassifier><apiClassifier languages="" id="flash.events:SQLEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">SQLEvent</apiName><shortdesc class="- topic/shortdesc ">
 Adobe AIR distribue des objets SQLEvent lorsque l’une des opérations effectuées par une occurrence SQLConnection ou SQLStatement se termine correctement.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Adobe AIR distribue des objets SQLEvent lorsque l’une des opérations effectuées par une occurrence SQLConnection ou SQLStatement se termine correctement.
 
 </apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.data.xml#SQLConnection" class="- topic/link "><linktext class="- topic/linktext ">flash.data.SQLConnection</linktext></link><link href="flash.data.xml#SQLStatement" class="- topic/link "><linktext class="- topic/linktext ">flash.data.SQLStatement</linktext></link></related-links><adobeApiEvent id="flash.events:SQLEvent:ANALYZE_analyze" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">analyze</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:SQLEvent:ANALYZE</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:SQLEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.data.xml#SQLConnection/analyze()" class="- topic/link "><linktext class="- topic/linktext ">flash.data.SQLConnection.analyze()</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:SQLEvent:ATTACH_attach" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">attach</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:SQLEvent:ATTACH</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:SQLEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.data.xml#SQLConnection/attach()" class="- topic/link "><linktext class="- topic/linktext ">flash.data.SQLConnection.attach()</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:SQLEvent:BEGIN_begin" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">begin</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:SQLEvent:BEGIN</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:SQLEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.data.xml#SQLConnection/begin()" class="- topic/link "><linktext class="- topic/linktext ">flash.data.SQLConnection.begin()</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:SQLEvent:CANCEL_cancel" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">cancel</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:SQLEvent:CANCEL</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:SQLEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.data.xml#SQLConnection/cancel()" class="- topic/link "><linktext class="- topic/linktext ">flash.data.SQLConnection.cancel()</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:SQLEvent:CLOSE_close" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">close</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:SQLEvent:CLOSE</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:SQLEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.data.xml#SQLConnection/close()" class="- topic/link "><linktext class="- topic/linktext ">flash.data.SQLConnection.close()</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:SQLEvent:COMMIT_commit" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">commit</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:SQLEvent:COMMIT</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:SQLEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.data.xml#SQLConnection/commit()" class="- topic/link "><linktext class="- topic/linktext ">flash.data.SQLConnection.commit()</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:SQLEvent:COMPACT_compact" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">compact</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:SQLEvent:COMPACT</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:SQLEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.data.xml#SQLConnection/compact()" class="- topic/link "><linktext class="- topic/linktext ">flash.data.SQLConnection.compact()</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:SQLEvent:DEANALYZE_deanalyze" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">deanalyze</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:SQLEvent:DEANALYZE</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:SQLEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.data.xml#SQLConnection/deanalyze()" class="- topic/link "><linktext class="- topic/linktext ">flash.data.SQLConnection.deanalyze()</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:SQLEvent:DETACH_detach" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">detach</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:SQLEvent:DETACH</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:SQLEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.data.xml#SQLConnection/detach()" class="- topic/link "><linktext class="- topic/linktext ">flash.data.SQLConnection.detach()</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:SQLEvent:OPEN_open" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">open</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:SQLEvent:OPEN</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:SQLEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.data.xml#SQLConnection/open()" class="- topic/link "><linktext class="- topic/linktext ">flash.data.SQLConnection.open()</linktext></link><link href="flash.data.xml#SQLConnection/openAsync()" class="- topic/link "><linktext class="- topic/linktext ">flash.data.SQLConnection.openAsync()</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:SQLEvent:REENCRYPT_reencrypt" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">reencrypt</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:SQLEvent:REENCRYPT</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:SQLEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.data.xml#SQLConnection/reencrypt()" class="- topic/link "><linktext class="- topic/linktext ">flash.data.SQLConnection.reencrypt()</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:SQLEvent:RELEASE_SAVEPOINT_releaseSavepoint" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">releaseSavepoint</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:SQLEvent:RELEASE_SAVEPOINT</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:SQLEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.data.xml#SQLConnection/releaseSavepoint()" class="- topic/link "><linktext class="- topic/linktext ">flash.data.SQLConnection.releaseSavepoint()</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:SQLEvent:RESULT_result" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">result</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:SQLEvent:RESULT</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:SQLEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.data.xml#SQLStatement/execute()" class="- topic/link "><linktext class="- topic/linktext ">flash.data.SQLStatement.execute()</linktext></link><link href="flash.data.xml#SQLStatement/next()" class="- topic/link "><linktext class="- topic/linktext ">flash.data.SQLStatement.next()</linktext></link><link href="flash.data.xml#SQLStatement/getResult()" class="- topic/link "><linktext class="- topic/linktext ">flash.data.SQLStatement.getResult()</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:SQLEvent:ROLLBACK_TO_SAVEPOINT_rollbackToSavepoint" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">rollbackToSavepoint</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:SQLEvent:ROLLBACK_TO_SAVEPOINT</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:SQLEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.data.xml#SQLConnection/rollbackToSavepoint()" class="- topic/link "><linktext class="- topic/linktext ">flash.data.SQLConnection.rollbackToSavepoint()</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:SQLEvent:ROLLBACK_rollback" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">rollback</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:SQLEvent:ROLLBACK</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:SQLEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.data.xml#SQLConnection/rollback()" class="- topic/link "><linktext class="- topic/linktext ">flash.data.SQLConnection.rollback()</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:SQLEvent:SCHEMA_schema" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">schema</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:SQLEvent:SCHEMA</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:SQLEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.data.xml#SQLConnection/loadSchema()" class="- topic/link "><linktext class="- topic/linktext ">flash.data.SQLConnection.loadSchema()</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:SQLEvent:SET_SAVEPOINT_setSavepoint" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">setSavepoint</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:SQLEvent:SET_SAVEPOINT</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:SQLEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.data.xml#SQLConnection/setSavepoint()" class="- topic/link "><linktext class="- topic/linktext ">flash.data.SQLConnection.setSavepoint()</linktext></link></related-links></adobeApiEvent><apiConstructor id="flash.events:SQLEvent:SQLEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">SQLEvent</apiName><shortdesc class="- topic/shortdesc ">
     Crée un objet SQLEvent à transmettre en tant que paramètre aux écouteurs d’événements.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">type</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc "> Le type d’événement, accessible dans la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph>.
     
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">bubbles</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc "> Détermine si l’objet Event prend part à la phase de propagation du flux d’événements. La valeur par défaut est <codeph class="+ topic/ph pr-d/codeph ">false</codeph>.
     
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">cancelable</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Détermine si l’objet Event peut être annulé. La valeur par défaut est <codeph class="+ topic/ph pr-d/codeph ">false</codeph>.
     
     </apiDesc></apiParam><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Utilisé pour créer un objet SQLEvent.
	 
	 </apiTipText></apiTipTexts></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Crée un objet SQLEvent à transmettre en tant que paramètre aux écouteurs d’événements.
     
     </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="flash.events:SQLEvent:clone" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">clone</apiName><shortdesc class="- topic/shortdesc ">
	 Crée une copie de l’objet SQLEvent et définit la valeur de chaque propriété de sorte qu’elle corresponde à la valeur d’origine.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Nouvel objet SQLEvent dont les propriétés ont la même valeur que celles de l’objet d’origine.
	 
	 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.events:Event</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Crée une copie de l’objet SQLEvent et définit la valeur de chaque propriété de sorte qu’elle corresponde à la valeur d’origine.
	 
     </apiDesc></apiOperationDetail></apiOperation><apiValue id="flash.events:SQLEvent:ANALYZE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">ANALYZE</apiName><shortdesc class="- topic/shortdesc ">
     La constante SQLEvent.ANALYZE définit la valeur de la propriété type d’un objet événement analyze.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">analyze</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     La constante <codeph class="+ topic/ph pr-d/codeph ">SQLEvent.ANALYZE</codeph> définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet événement <codeph class="+ topic/ph pr-d/codeph ">analyze</codeph>. Ce type d’événement est distribué lorsqu’un appel de la méthode <codeph class="+ topic/ph pr-d/codeph ">SQLConnection.analyze()</codeph> se termine correctement. L’événement <codeph class="+ topic/ph pr-d/codeph ">analyze</codeph> a les propriétés suivantes :
	 
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Objet qui traite activement l’objet de l’événement avec un écouteur d’événement.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">L’objet SQLConnection qui a effectué l’opération.</entry></row></tbody></tgroup></adobetable>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.data.xml#SQLConnection/analyze()" class="- topic/link "><linktext class="- topic/linktext ">flash.data.SQLConnection.analyze()</linktext></link></related-links></apiValue><apiValue id="flash.events:SQLEvent:ATTACH" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">ATTACH</apiName><shortdesc class="- topic/shortdesc ">
     La constante SQLEvent.ATTACH définit la valeur de la propriété type d’un objet événement attach.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">attach</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     La constante <codeph class="+ topic/ph pr-d/codeph ">SQLEvent.ATTACH</codeph> définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet événement <codeph class="+ topic/ph pr-d/codeph ">attach</codeph>. Ce type d’événement est distribué lorsqu’un appel de la méthode <codeph class="+ topic/ph pr-d/codeph ">SQLConnection.attach()</codeph> se termine correctement. L’événement <codeph class="+ topic/ph pr-d/codeph ">attach</codeph> a les propriétés suivantes :
	 
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Objet qui traite activement l’objet de l’événement avec un écouteur d’événement.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">L’objet SQLConnection qui a effectué l’opération.</entry></row></tbody></tgroup></adobetable>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.data.xml#SQLConnection/attach()" class="- topic/link "><linktext class="- topic/linktext ">flash.data.SQLConnection.attach()</linktext></link></related-links></apiValue><apiValue id="flash.events:SQLEvent:BEGIN" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">BEGIN</apiName><shortdesc class="- topic/shortdesc ">
     La constante SQLEvent.BEGIN définit la valeur de la propriété type d’un objet événement begin.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">begin</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     La constante <codeph class="+ topic/ph pr-d/codeph ">SQLEvent.BEGIN</codeph> définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet événement <codeph class="+ topic/ph pr-d/codeph ">begin</codeph>. Ce type d’événement est distribué lorsqu’un appel de la méthode <codeph class="+ topic/ph pr-d/codeph ">SQLConnection.begin()</codeph> se termine correctement. L’événement <codeph class="+ topic/ph pr-d/codeph ">begin</codeph> a les propriétés suivantes :
	 
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Objet qui traite activement l’objet de l’événement avec un écouteur d’événement.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">L’objet SQLConnection qui a effectué l’opération.</entry></row></tbody></tgroup></adobetable>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.data.xml#SQLConnection/begin()" class="- topic/link "><linktext class="- topic/linktext ">flash.data.SQLConnection.begin()</linktext></link></related-links></apiValue><apiValue id="flash.events:SQLEvent:CANCEL" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">CANCEL</apiName><shortdesc class="- topic/shortdesc ">
     La constante SQLEvent.CANCEL définit la valeur de la propriété type d’un objet événement cancel.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">cancel</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     La constante <codeph class="+ topic/ph pr-d/codeph ">SQLEvent.CANCEL</codeph> définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet événement <codeph class="+ topic/ph pr-d/codeph ">cancel</codeph>. Ce type d’événement est distribué lorsqu’un appel de la méthode <codeph class="+ topic/ph pr-d/codeph ">SQLConnection.cancel()</codeph> se termine correctement. L’événement <codeph class="+ topic/ph pr-d/codeph ">cancel</codeph> a les propriétés suivantes :
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Objet qui traite activement l’objet de l’événement avec un écouteur d’événement.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">L’objet SQLConnection ou SQLStatement qui a effectué l’opération.</entry></row></tbody></tgroup></adobetable>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.data.xml#SQLConnection/cancel()" class="- topic/link "><linktext class="- topic/linktext ">flash.data.SQLConnection.cancel()</linktext></link></related-links></apiValue><apiValue id="flash.events:SQLEvent:CLOSE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">CLOSE</apiName><shortdesc class="- topic/shortdesc ">
     La constante SQLEvent.CLOSE définit la valeur de la propriété type d’un objet événement close.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">close</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     La constante <codeph class="+ topic/ph pr-d/codeph ">SQLEvent.CLOSE</codeph> définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet événement <codeph class="+ topic/ph pr-d/codeph ">close</codeph>. Ce type d’événement est distribué lorsqu’un appel de la méthode <codeph class="+ topic/ph pr-d/codeph ">SQLConnection.close()</codeph> se termine correctement. L’événement <codeph class="+ topic/ph pr-d/codeph ">close</codeph> a les propriétés suivantes :
	 
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Objet qui traite activement l’objet de l’événement avec un écouteur d’événement.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">L’objet SQLConnection qui a effectué l’opération.</entry></row></tbody></tgroup></adobetable>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.data.xml#SQLConnection/close()" class="- topic/link "><linktext class="- topic/linktext ">flash.data.SQLConnection.close()</linktext></link></related-links></apiValue><apiValue id="flash.events:SQLEvent:COMMIT" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">COMMIT</apiName><shortdesc class="- topic/shortdesc ">
     La constante SQLEvent.COMMIT définit la valeur de la propriété type d’un objet événement commit.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">commit</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     La constante <codeph class="+ topic/ph pr-d/codeph ">SQLEvent.COMMIT</codeph> définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet événement <codeph class="+ topic/ph pr-d/codeph ">commit</codeph>. Ce type d’événement est distribué lorsqu’un appel de la méthode <codeph class="+ topic/ph pr-d/codeph ">SQLConnection.commit()</codeph> se termine correctement. L’événement <codeph class="+ topic/ph pr-d/codeph ">commit</codeph> a les propriétés suivantes :
	 
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Objet qui traite activement l’objet de l’événement avec un écouteur d’événement.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">L’objet SQLConnection qui a effectué l’opération.</entry></row></tbody></tgroup></adobetable>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.data.xml#SQLConnection/commit()" class="- topic/link "><linktext class="- topic/linktext ">flash.data.SQLConnection.commit()</linktext></link></related-links></apiValue><apiValue id="flash.events:SQLEvent:COMPACT" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">COMPACT</apiName><shortdesc class="- topic/shortdesc ">
     La constante SQLEvent.COMPACT définit la valeur de la propriété type d’un objet événement compact.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">compact</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     La constante <codeph class="+ topic/ph pr-d/codeph ">SQLEvent.COMPACT</codeph> définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet événement <codeph class="+ topic/ph pr-d/codeph ">compact</codeph>. Ce type d’événement est distribué lorsqu’un appel de la méthode <codeph class="+ topic/ph pr-d/codeph ">SQLConnection.compact()</codeph> se termine correctement. L’événement <codeph class="+ topic/ph pr-d/codeph ">compact</codeph> a les propriétés suivantes :
	 
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Objet qui traite activement l’objet de l’événement avec un écouteur d’événement.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">L’objet SQLConnection qui a effectué l’opération.</entry></row></tbody></tgroup></adobetable>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.data.xml#SQLConnection/compact()" class="- topic/link "><linktext class="- topic/linktext ">flash.data.SQLConnection.compact()</linktext></link></related-links></apiValue><apiValue id="flash.events:SQLEvent:DEANALYZE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">DEANALYZE</apiName><shortdesc class="- topic/shortdesc ">
     La constante SQLEvent.DEANALYZE définit la valeur de la propriété type d’un objet événement deanalyze.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">deanalyze</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     La constante <codeph class="+ topic/ph pr-d/codeph ">SQLEvent.DEANALYZE</codeph> définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet événement <codeph class="+ topic/ph pr-d/codeph ">deanalyze</codeph>. Ce type d’événement est distribué lorsqu’un appel de la méthode <codeph class="+ topic/ph pr-d/codeph ">SQLConnection.deanalyze()</codeph> se termine correctement. L’événement <codeph class="+ topic/ph pr-d/codeph ">deanalyze</codeph> a les propriétés suivantes :
	 
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Objet qui traite activement l’objet de l’événement avec un écouteur d’événement.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">L’objet SQLConnection qui a effectué l’opération.</entry></row></tbody></tgroup></adobetable>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.data.xml#SQLConnection/deanalyze()" class="- topic/link "><linktext class="- topic/linktext ">flash.data.SQLConnection.deanalyze()</linktext></link></related-links></apiValue><apiValue id="flash.events:SQLEvent:DETACH" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">DETACH</apiName><shortdesc class="- topic/shortdesc ">
     La constante SQLEvent.DETACH définit la valeur de la propriété type d’un objet événement detach.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">detach</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     La constante <codeph class="+ topic/ph pr-d/codeph ">SQLEvent.DETACH</codeph> définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet événement <codeph class="+ topic/ph pr-d/codeph ">detach</codeph>. Ce type d’événement est distribué lorsqu’un appel de la méthode <codeph class="+ topic/ph pr-d/codeph ">SQLConnection.detach()</codeph> se termine correctement.
     
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Objet qui traite activement l’objet de l’événement avec un écouteur d’événement.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">L’objet SQLConnection qui a effectué l’opération.</entry></row></tbody></tgroup></adobetable>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.data.xml#SQLConnection/detach()" class="- topic/link "><linktext class="- topic/linktext ">flash.data.SQLConnection.detach()</linktext></link></related-links></apiValue><apiValue id="flash.events:SQLEvent:OPEN" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">OPEN</apiName><shortdesc class="- topic/shortdesc ">
     La constante SQLEvent.OPEN définit la valeur de la propriété type d’un objet événement open.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">open</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     La constante <codeph class="+ topic/ph pr-d/codeph ">SQLEvent.OPEN</codeph> définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet événement <codeph class="+ topic/ph pr-d/codeph ">open</codeph>. Ce type d’événement est distribué lorsqu’un appel de la méthode <codeph class="+ topic/ph pr-d/codeph ">SQLConnection.open()</codeph> ou <codeph class="+ topic/ph pr-d/codeph ">SQLConnection.openAsync()</codeph>se termine correctement. L’événement <codeph class="+ topic/ph pr-d/codeph ">open</codeph> a les propriétés suivantes :
	 
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Objet qui traite activement l’objet de l’événement avec un écouteur d’événement.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">L’objet SQLConnection qui a effectué l’opération.</entry></row></tbody></tgroup></adobetable>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.data.xml#SQLConnection/open()" class="- topic/link "><linktext class="- topic/linktext ">flash.data.SQLConnection.open()</linktext></link><link href="flash.data.xml#SQLConnection/openAsync()" class="- topic/link "><linktext class="- topic/linktext ">flash.data.SQLConnection.openAsync()</linktext></link></related-links></apiValue><apiValue id="flash.events:SQLEvent:REENCRYPT" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">REENCRYPT</apiName><shortdesc class="- topic/shortdesc ">
     La constante SQLEvent.REENCRYPT définit la valeur de la propriété type d’un objet événement reencrypt.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">reencrypt</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     La constante <codeph class="+ topic/ph pr-d/codeph ">SQLEvent.REENCRYPT</codeph> définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet événement <codeph class="+ topic/ph pr-d/codeph ">reencrypt</codeph>. Ce type d’événement est distribué lorsqu’un appel de la méthode <codeph class="+ topic/ph pr-d/codeph ">SQLConnection.reencrypt()</codeph> aboutit. L’événement <codeph class="+ topic/ph pr-d/codeph ">reencrypt</codeph> a les propriétés suivantes :
	 
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Objet qui traite activement l’objet de l’événement avec un écouteur d’événement.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">L’objet SQLConnection qui a effectué l’opération.</entry></row></tbody></tgroup></adobetable>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.data.xml#SQLConnection/reencrypt()" class="- topic/link "><linktext class="- topic/linktext ">flash.data.SQLConnection.reencrypt()</linktext></link></related-links></apiValue><apiValue id="flash.events:SQLEvent:RELEASE_SAVEPOINT" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">RELEASE_SAVEPOINT</apiName><shortdesc class="- topic/shortdesc ">
	 La constante SQLEvent.RELEASE_SAVEPOINT définit la valeur de la propriété type d’un objet d’événement releaseSavepoint.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">releaseSavepoint</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 La constante <codeph class="+ topic/ph pr-d/codeph ">SQLEvent.RELEASE_SAVEPOINT</codeph> définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet d’événement <codeph class="+ topic/ph pr-d/codeph ">releaseSavepoint</codeph>. Ce type d’événement est distribué lorsqu’un appel de la méthode <codeph class="+ topic/ph pr-d/codeph ">SQLConnection.releaseSavepoint()</codeph> aboutit. Les propriétés de l’événement <codeph class="+ topic/ph pr-d/codeph ">releaseSavepoint</codeph> sont les suivantes :
	 
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Objet qui traite activement l’objet de l’événement avec un écouteur d’événement.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">L’objet SQLConnection qui a effectué l’opération.</entry></row></tbody></tgroup></adobetable>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.data.xml#SQLConnection/releaseSavepoint()" class="- topic/link "><linktext class="- topic/linktext ">flash.data.SQLConnection.releaseSavepoint()</linktext></link></related-links></apiValue><apiValue id="flash.events:SQLEvent:RESULT" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">RESULT</apiName><shortdesc class="- topic/shortdesc ">
     La constante SQLEvent.RESULT définit la valeur de la propriété type d’un objet d’événement result.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">result</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     La constante <codeph class="+ topic/ph pr-d/codeph ">SQLEvent.RESULT</codeph> définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet événement <codeph class="+ topic/ph pr-d/codeph ">result</codeph>. Déclenché lorsque la méthode <codeph class="+ topic/ph pr-d/codeph ">SQLStatement.execute()</codeph> ou <codeph class="+ topic/ph pr-d/codeph ">SQLStatement.next()</codeph> se termine avec succès. Une fois que l’événement <codeph class="+ topic/ph pr-d/codeph ">SQLEvent.RESULT</codeph> est distribué, la méthode <codeph class="+ topic/ph pr-d/codeph ">SQLStatement.getResult()</codeph> peut être appelée pour accéder aux données de résultat. L’événement <codeph class="+ topic/ph pr-d/codeph ">result</codeph> a les propriétés suivantes :
	 
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Objet qui traite activement l’objet de l’événement avec un écouteur d’événement.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">L’objet SQLStatement qui a effectué l’opération.</entry></row></tbody></tgroup></adobetable>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.data.xml#SQLStatement/execute()" class="- topic/link "><linktext class="- topic/linktext ">flash.data.SQLStatement.execute()</linktext></link><link href="flash.data.xml#SQLStatement/next()" class="- topic/link "><linktext class="- topic/linktext ">flash.data.SQLStatement.next()</linktext></link><link href="flash.data.xml#SQLStatement/getResult()" class="- topic/link "><linktext class="- topic/linktext ">flash.data.SQLStatement.getResult()</linktext></link></related-links></apiValue><apiValue id="flash.events:SQLEvent:ROLLBACK_TO_SAVEPOINT" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">ROLLBACK_TO_SAVEPOINT</apiName><shortdesc class="- topic/shortdesc ">
	 La constante SQLEvent.ROLLBACK_TO_SAVEPOINT définit la valeur de la propriété type d’un objet d’événement rollbackToSavepoint.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">rollbackToSavepoint</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 La constante <codeph class="+ topic/ph pr-d/codeph ">SQLEvent.ROLLBACK_TO_SAVEPOINT</codeph> définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet d’événement <codeph class="+ topic/ph pr-d/codeph ">rollbackToSavepoint</codeph>. Ce type d’événement est distribué lorsqu’un appel de la méthode <codeph class="+ topic/ph pr-d/codeph ">SQLConnection.rollbackToSavepoint()</codeph> aboutit. Les propriétés de l’événement <codeph class="+ topic/ph pr-d/codeph ">rollbackToSavepoint</codeph> sont les suivantes :
	 
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Objet qui traite activement l’objet de l’événement avec un écouteur d’événement.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">L’objet SQLConnection qui a effectué l’opération.</entry></row></tbody></tgroup></adobetable>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.data.xml#SQLConnection/rollbackToSavepoint()" class="- topic/link "><linktext class="- topic/linktext ">flash.data.SQLConnection.rollbackToSavepoint()</linktext></link></related-links></apiValue><apiValue id="flash.events:SQLEvent:ROLLBACK" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">ROLLBACK</apiName><shortdesc class="- topic/shortdesc ">
     La constante SQLEvent.ROLLBACK définit la valeur de la propriété type d’un objet d’événement rollback.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">rollback</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     La constante <codeph class="+ topic/ph pr-d/codeph ">SQLEvent.ROLLBACK</codeph> définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet événement <codeph class="+ topic/ph pr-d/codeph ">rollback</codeph>. Ce type d’événement est distribué lorsqu’un appel de la méthode <codeph class="+ topic/ph pr-d/codeph ">SQLConnection.rollback()</codeph> se termine correctement. L’événement <codeph class="+ topic/ph pr-d/codeph ">rollback</codeph> a les propriétés suivantes :
	 
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Objet qui traite activement l’objet de l’événement avec un écouteur d’événement.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">L’objet SQLConnection qui a effectué l’opération.</entry></row></tbody></tgroup></adobetable>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.data.xml#SQLConnection/rollback()" class="- topic/link "><linktext class="- topic/linktext ">flash.data.SQLConnection.rollback()</linktext></link></related-links></apiValue><apiValue id="flash.events:SQLEvent:SCHEMA" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">SCHEMA</apiName><shortdesc class="- topic/shortdesc ">
     La constante SQLEvent.SCHEMA définit la valeur de la propriété type d’un objet événement schema.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">schema</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     La constante <codeph class="+ topic/ph pr-d/codeph ">SQLEvent.SCHEMA</codeph> définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet événement <codeph class="+ topic/ph pr-d/codeph ">schema</codeph>. Distribué lorsque la méthode <codeph class="+ topic/ph pr-d/codeph ">SQLConnection.loadSchema()</codeph> se termine correctement. Une fois que l’événement <codeph class="+ topic/ph pr-d/codeph ">SQLEvent.SCHEMA</codeph> est distribué, la méthode <codeph class="+ topic/ph pr-d/codeph ">SQLConnection.getSchemaResult()</codeph> peut être utilisée pour obtenir les informations de schéma. L’événement <codeph class="+ topic/ph pr-d/codeph ">schema</codeph> a les propriétés suivantes :
	 
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Objet qui traite activement l’objet de l’événement avec un écouteur d’événement.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">L’objet SQLConnection qui a effectué l’opération.</entry></row></tbody></tgroup></adobetable>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.data.xml#SQLConnection/loadSchema()" class="- topic/link "><linktext class="- topic/linktext ">flash.data.SQLConnection.loadSchema()</linktext></link></related-links></apiValue><apiValue id="flash.events:SQLEvent:SET_SAVEPOINT" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">SET_SAVEPOINT</apiName><shortdesc class="- topic/shortdesc ">
	 La constante SQLEvent.SET_SAVEPOINT définit la valeur de la propriété type d’un objet d’événement setSavepoint.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">setSavepoint</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 La constante <codeph class="+ topic/ph pr-d/codeph ">SQLEvent.SET_SAVEPOINT</codeph> définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet d’événement <codeph class="+ topic/ph pr-d/codeph ">setSavepoint</codeph>. Ce type d’événement est distribué lorsqu’un appel de la méthode <codeph class="+ topic/ph pr-d/codeph ">SQLConnection.setSavepoint()</codeph> aboutit. Les propriétés de l’événement <codeph class="+ topic/ph pr-d/codeph ">setSavepoint</codeph> sont les suivantes :
	 
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Objet qui traite activement l’objet de l’événement avec un écouteur d’événement.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">L’objet SQLConnection qui a effectué l’opération.</entry></row></tbody></tgroup></adobetable>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.data.xml#SQLConnection/setSavepoint()" class="- topic/link "><linktext class="- topic/linktext ">flash.data.SQLConnection.setSavepoint()</linktext></link></related-links></apiValue></apiClassifier><apiClassifier languages="" id="flash.events:DRMErrorEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">DRMErrorEvent</apiName><shortdesc class="- topic/shortdesc ">
	 La classe DRMErrorEvent fournit des informations sur les erreurs qui surviennent lors de la lecture de fichiers chiffrés par DRM (gestion des droits numériques).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Objets event pour des objets activés DRM.
	</apiTipText></apiTipTexts><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:ErrorEvent</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 La classe DRMErrorEvent fournit des informations sur les erreurs qui surviennent lors de la lecture de fichiers chiffrés par DRM (gestion des droits numériques).
	  
	<p class="- topic/p ">Le moteur d’exécution distribue un objet DRMErrorEvent lorsqu’un objet NetStream détecte une erreur DRM alors qu’il tente de lire un fichier chiffré DRM. Par exemple, un objet DRMErrorEvent est distribué lorsque le fournisseur de contenu ne prend pas en charge l’application d’affichage, ou en cas d’échec de l’autorisation de l’utilisateur, probablement parce que l’utilisateur n’a pas acheté le contenu.</p>
	<p class="- topic/p ">
	En cas d’informations utilisateur non valides, l’objet DRMAuthenticateEvent gère l’erreur par des distributions répétées jusqu’à ce que l’utilisateur entre des informations d’identification valides, ou l’application refuse toute autre tentative. L’application doit écouter tout autre événement d’erreur DRM de façon à détecter, identifier et gérer les erreurs DRM.
	</p>
	<p class="- topic/p ">
	Cette classe fournit des propriétés contenant l’objet qui renvoie l’exception, le code d’erreur et, le cas échéant, un code de sous-erreur et le message textuel contenant des informations relatives à l’erreur. Pour obtenir une description des codes d’erreur associés à la gestion des droits numériques, voir la rubrique <xref href="../../runtimeErrors.html" class="- topic/xref ">Codes d’erreur d’exécution</xref>. Les codes d’erreur associés à la gestion des droits numériques commencent à partir de l’erreur 3300.
	</p> 
	
	</apiDesc><example conref="examples\DRMErrorEventExample.as" class="- topic/example "><codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">package
{
    import flash.display.Sprite;
    import flash.events.AsyncErrorEvent;
    import flash.events.NetStatusEvent;
    import flash.events.DRMErrorEvent;
    import flash.media.Video;
    import flash.net.NetConnection;
    import flash.net.NetStream;

    public class DRMVideoExample extends Sprite
    {
        var videoURL:String = "Video.flv";
        var videoConnection:NetConnection;
        var videoStream:NetStream;
        var video:Video = new Video();            

        public function DRMVideoExample()
        {
            videoConnection = new NetConnection();
            videoConnection.addEventListener(NetStatusEvent.NET_STATUS, netStatusHandler);
            videoConnection.connect(null);
        }

        private function connectStream():void {
            videoStream = new NetStream(videoConnection);
            videoStream.addEventListener(NetStatusEvent.NET_STATUS, netStatusHandler);
            videoStream.addEventListener(AsyncErrorEvent.ASYNC_ERROR, asyncErrorHandler);
            videoStream.addEventListener(DRMErrorEvent.DRM_ERROR, drmErrorEventHandler);
            video.attachNetStream(videoStream);
            videoStream.play(videoURL);
            addChild(video);
        }

        private function netStatusHandler(event:NetStatusEvent):void {
            switch (event.info.code) {
                case "NetConnection.Connect.Success":
                    connectStream();
                    break;
                case "NetStream.Play.StreamNotFound":
                    trace("Unable to locate video: " + videoURL);
                    break;
            }
        }

        private function asyncErrorHandler(event:AsyncErrorEvent):void {
            // ignore AsyncErrorEvent events.
        }

        private function drmErrorEventHandler(event:DRMErrorEvent):void {
            trace(event.toString());
        }
     }
}
</codeblock></example></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStream" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetStream</linktext></link><link href="flash.events.xml#DRMErrorEvent/DRM_ERROR" class="- topic/link "><linktext class="- topic/linktext ">DRMErrorEvent.DRM_ERROR</linktext></link><link href="../../runtimeErrors.html" class="- topic/link "><linktext class="- topic/linktext ">Codes d’erreur d’exécution</linktext></link></related-links><adobeApiEvent id="flash.events:DRMErrorEvent:DRM_ERROR_drmError" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">drmError</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:DRMErrorEvent:DRM_ERROR</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:DRMErrorEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStream/event:drmError" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetStream.drmError</linktext></link></related-links></adobeApiEvent><apiConstructor id="flash.events:DRMErrorEvent:DRMErrorEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">DRMErrorEvent</apiName><shortdesc class="- topic/shortdesc ">
 	    Crée un objet Event contenant des informations spécifiques sur les événements d’erreur DRM.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">DRMErrorEvent, constructor
 	    </keyword></asCustoms></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">type</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">unknown</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc "> Type de l’événement. Les écouteurs d’événement peuvent accéder à cette information par le biais de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> héritée. Il n’existe qu’un seul type d’événement DRMAuthenticate : <codeph class="+ topic/ph pr-d/codeph ">DRMAuthenticateEvent.DRM_AUTHENTICATE</codeph>.
		</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">bubbles</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Détermine si l’objet Event prend part à la phase de propagation du flux d’événements. Les écouteurs d’événement peuvent accéder à cette information par le biais de la propriété <codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph> héritée.
		</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">cancelable</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Détermine si l’objet Event peut être annulé. Les écouteurs d’événement peuvent accéder à cette information par le biais de la propriété <codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph> héritée.
		</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">inErrorDetail</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData "/><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Le cas échéant, les détails syntaxiques spécifiques de l’erreur.
  		</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">inErrorCode</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Le code d’erreur principal.
		</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">insubErrorID</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">L’ID d’erreur mineure.
 	    
 	    </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">inMetadata</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.net.drm:DRMContentData</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">inSystemUpdateNeeded</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">inDrmUpdateNeeded</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData></apiParam></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 	    Crée un objet Event contenant des informations spécifiques sur les événements d’erreur DRM. Les objets Event sont transmis en tant que paramètres aux écouteurs d’événements. 
	    
 	    </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="flash.events:DRMErrorEvent:clone" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">clone</apiName><shortdesc class="- topic/shortdesc ">
		Crée une copie de l’objet DRMErrorEvent et définit la valeur de chaque propriété de sorte qu’elle corresponde à la valeur d’origine.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Nouvel objet DRMErrorEvent dont les propriétés ont la même valeur que celles de l’objet d’origine.
		</apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.events:Event</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		Crée une copie de l’objet DRMErrorEvent et définit la valeur de chaque propriété de sorte qu’elle corresponde à la valeur d’origine. 
		
		</apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.events:DRMErrorEvent:toString" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">toString</apiName><shortdesc class="- topic/shortdesc ">
		Renvoie une chaîne répertoriant toutes les propriétés de l’objet DRMErrorEvent.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Chaîne répertoriant toutes les propriétés de l’objet DRMErrorEvent.
  		
		</apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		Renvoie une chaîne répertoriant toutes les propriétés de l’objet DRMErrorEvent. La chaîne est écrite au format suivant : 
     	<p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">[DRMErrorEvent type=<i class="+ topic/ph hi-d/i ">valeur</i> bubbles=<i class="+ topic/ph hi-d/i ">valeur</i> cancelable=<i class="+ topic/ph hi-d/i ">valeur</i> eventPhase=<i class="+ topic/ph hi-d/i ">valeur</i> errroID=<i class="+ topic/ph hi-d/i ">valeur</i> subErrorID=<i class="+ topic/ph hi-d/i ">valeur</i> text=<i class="+ topic/ph hi-d/i ">valeur</i></codeph></p>
     	
     	</apiDesc></apiOperationDetail></apiOperation><apiValue id="flash.events:DRMErrorEvent:DRM_ERROR" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">DRM_ERROR</apiName><shortdesc class="- topic/shortdesc ">
		La constante DRMErrorEvent.DRM_ERROR définit la valeur de la propriété type d’un objet événement drmError.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">drmError</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		La constante <codeph class="+ topic/ph pr-d/codeph ">DRMErrorEvent.DRM_ERROR</codeph> définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet événement <codeph class="+ topic/ph pr-d/codeph ">drmError</codeph>. 
		
		<p class="- topic/p ">Les propriétés de cet événement sont les suivantes :</p>
		
		<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">errorID</codeph></entry><entry class="- topic/entry ">Un code d’erreur numérique correspondant au problème.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">subErrorID</codeph></entry><entry class="- topic/entry ">Un code d’erreur qui indique des informations détaillées supplémentaires sur le problème sous-jacent.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">L’objet NetStream.</entry></row></tbody></tgroup></adobetable>
		
		</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStream/event:drmError" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetStream.drmError</linktext></link></related-links></apiValue><apiValue id="flash.events:DRMErrorEvent:contentData:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">contentData</apiName><shortdesc class="- topic/shortdesc ">
		 DRMContentData pour le fichier multimédia.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.net.drm:DRMContentData</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 DRMContentData pour le fichier multimédia.
		 
		 <p class="- topic/p ">Vous pouvez utiliser l’objet référencé par la propriété <codeph class="+ topic/ph pr-d/codeph ">contentData</codeph> pour récupérer le voucher DRM associé à partir de la mémoire cache du voucher DRMManager. Les propriétés du voucher décrivent la licence proposée à l’utilisateur et peuvent expliquer les raisons pour lesquelles il est impossible d’afficher le contenu protégé par DRM.</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:DRMErrorEvent:drmUpdateNeeded:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">drmUpdateNeeded</apiName><shortdesc class="- topic/shortdesc ">
		 Indique si une mise à jour DRM est nécessaire pour lire le contenu protégé par DRM.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 Indique si une mise à jour DRM est nécessaire pour lire le contenu protégé par DRM.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:DRMErrorEvent:subErrorID:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">subErrorID</apiName><shortdesc class="- topic/shortdesc ">
		Un ID d’erreur qui indique des informations détaillées supplémentaires sur le problème sous-jacent.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">DRMErrorEvent.subErrorID, subErrorID
		
		</keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">int</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		Un ID d’erreur qui indique des informations détaillées supplémentaires sur le problème sous-jacent.
		
		</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:DRMErrorEvent:systemUpdateNeeded:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">systemUpdateNeeded</apiName><shortdesc class="- topic/shortdesc ">
		 Indique si une mise à jour système est nécessaire pour lire le contenu protégé par DRM.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 Indique si une mise à jour système est nécessaire pour lire le contenu protégé par DRM.
		 
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.events:EventPhase" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">EventPhase</apiName><shortdesc class="- topic/shortdesc ">
 La classe EventPhase fournit des valeurs à la propriété eventPhase de la classe Event.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><internal>includeExample examples\EventPhaseExample.as -noswf
 </internal></asCustoms></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 La classe EventPhase fournit des valeurs à la propriété <codeph class="+ topic/ph pr-d/codeph ">eventPhase</codeph> de la classe Event.
 </apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.events.xml#Event" class="- topic/link "><linktext class="- topic/linktext ">Classe Event</linktext></link><link href="flash.events.xml#EventDispatcher" class="- topic/link "><linktext class="- topic/linktext ">Classe EventDispatcher</linktext></link></related-links><apiValue id="flash.events:EventPhase:AT_TARGET" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">AT_TARGET</apiName><shortdesc class="- topic/shortdesc ">
	Phase cible, autrement dit, deuxième phase du flux d’événements.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">2</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">uint</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Phase cible, autrement dit, deuxième phase du flux d’événements.
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:EventPhase:BUBBLING_PHASE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">BUBBLING_PHASE</apiName><shortdesc class="- topic/shortdesc ">
	Phase de propagation, autrement dit, troisième phase du flux d’événements.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">3</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">uint</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Phase de propagation, autrement dit, troisième phase du flux d’événements.
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:EventPhase:CAPTURING_PHASE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">CAPTURING_PHASE</apiName><shortdesc class="- topic/shortdesc ">
	Phase de capture, autrement dit, première phase du flux d’événements.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">1</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">uint</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Phase de capture, autrement dit, première phase du flux d’événements.
	</apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.events:FocusEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">FocusEvent</apiName><shortdesc class="- topic/shortdesc ">
 Un objet distribue un objet FocusEvent lorsque l’utilisateur déplace le focus sur un autre objet dans la liste d’affichage.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Objets Event associés aux événements Focus.
 
  
  </apiTipText></apiTipTexts><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Un objet distribue un objet FocusEvent lorsque l’utilisateur déplace le focus sur un autre objet dans la liste d’affichage. Il existe quatre types d’événements Focus :
 <ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">FocusEvent.FOCUS_IN</codeph></li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">FocusEvent.FOCUS_OUT</codeph></li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">FocusEvent.KEY_FOCUS_CHANGE</codeph></li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">FocusEvent.MOUSE_FOCUS_CHANGE</codeph></li></ul>
 
 </apiDesc><example conref="examples\FocusEventExample.as" class="- topic/example "> L’exemple suivant utilise les classes <codeph class="+ topic/ph pr-d/codeph ">FocusEventExample</codeph> et <codeph class="+ topic/ph pr-d/codeph ">CustomSprite</codeph> pour montrer comment le focus peut être combiné avec les éléments dessinés sur la scène pour capturer des événements et des informations d’impression. Cet exemple exécute les tâches suivantes :
 <ol class="- topic/ol "><li class="- topic/li ">il déclare les propriétés <codeph class="+ topic/ph pr-d/codeph ">child</codeph> (de type Sprite) et <codeph class="+ topic/ph pr-d/codeph ">childCount</codeph> (de type uint).</li><li class="- topic/li ">Une boucle <codeph class="+ topic/ph pr-d/codeph ">for</codeph> crée cinq carrés bleu clair aux coordonnées (0,0). Elle commence par affecter <codeph class="+ topic/ph pr-d/codeph ">child</codeph> à une nouvelle occurrence de CustomSprite. Chaque fois qu’un objet CustomSprite est créé, il arrive ce qui suit :
     <ul class="- topic/ul "><li class="- topic/li ">La propriété <codeph class="+ topic/ph pr-d/codeph ">size</codeph> de type uint est définie sur 50 pixels et <codeph class="+ topic/ph pr-d/codeph ">bgColor</codeph> est définie sur la couleur bleu clair. </li><li class="- topic/li ">Les propriétés <codeph class="+ topic/ph pr-d/codeph ">buttonMode</codeph> et <codeph class="+ topic/ph pr-d/codeph ">useHandCursor</codeph> de la classe Sprite sont définies sur <codeph class="+ topic/ph pr-d/codeph ">true</codeph> dans le constructeur.</li><li class="- topic/li ">Un écouteur d’événements de type <codeph class="+ topic/ph pr-d/codeph ">click</codeph> est instancié, avec l’abonné associé <codeph class="+ topic/ph pr-d/codeph ">clickHandler()</codeph>. La méthode d’abonné crée une variable locale <codeph class="+ topic/ph pr-d/codeph ">target</codeph> de type Sprite et l’affecte à chaque clic de l’utilisateur sur une zone quelconque. Le focus de la scène est ensuite attribué à <codeph class="+ topic/ph pr-d/codeph ">target</codeph>.</li><li class="- topic/li ">La méthode <codeph class="+ topic/ph pr-d/codeph ">draw()</codeph> est appelée et crée un carré de 50x50 pixels via un appel aux méthodes <codeph class="+ topic/ph pr-d/codeph ">beginFill()</codeph>, <codeph class="+ topic/ph pr-d/codeph ">drawRect()</codeph> et <codeph class="+ topic/ph pr-d/codeph ">endFill()</codeph> de la classe Graphics et aux propriétés de l’occurrence.</li></ul></li><li class="- topic/li ">Dans la boucle for, la méthode <codeph class="+ topic/ph pr-d/codeph ">configureListeners()</codeph> est appelée et instancie trois écouteurs/abonnés d’événements :
         <ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">focusIn</codeph> / <codeph class="+ topic/ph pr-d/codeph ">focusInHandler()</codeph> est distribué après l’événement <codeph class="+ topic/ph pr-d/codeph ">click</codeph> chaque fois que l’utilisateur clique sur un objet de liste d’affichage (champ).</li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">focusOut</codeph> / <codeph class="+ topic/ph pr-d/codeph ">focusOutHandler()</codeph> est distribué lorsque l’utilisateur clique sur un autre champ ou que le focus quitte la scène (par exemple, en cliquant à l’extérieur de Flash Player).</li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">keyFocusChange</codeph> / <codeph class="+ topic/ph pr-d/codeph ">keyFocusChangeHandler()</codeph> est distribué si l’utilisateur utilise la touche Tab ou les touches de direction gauche ou droite pour sélectionner un objet de liste d’affichage. La méthode <codeph class="+ topic/ph pr-d/codeph ">keyFocusChangeHandler()</codeph> piège les touches de direction droite et gauche et appelle la méthode <codeph class="+ topic/ph pr-d/codeph ">preventDefault()</codeph> pour les désactiver.</li></ul></li><li class="- topic/li ">Dans la boucle <codeph class="+ topic/ph pr-d/codeph ">for</codeph>, chaque carré est ajouté dans la liste d’affichage et affiché (tous dans la même zone) par le biais de <codeph class="+ topic/ph pr-d/codeph ">addChild()</codeph>.</li><li class="- topic/li ">Le constructeur appelle ensuite <codeph class="+ topic/ph pr-d/codeph ">refreshLayout()</codeph>, qui distribue les carrés orange en haut de l’écran (y = 0) en séparant chaque carré par 5 pixels.</li></ol>
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
package {
    import flash.display.Sprite;
    import flash.display.DisplayObject;
    import flash.events.FocusEvent;
    import flash.events.IEventDispatcher;

    public class FocusEventExample extends Sprite {
        private var gutter:uint = 5;
        private var childCount:uint = 5;

        public function FocusEventExample() {
            var child:Sprite;
            for(var i:uint; i &lt; childCount; i++) {
                child = new CustomSprite();
                configureListeners(child);
                addChild(child);
            }
            refreshLayout();
        }

        private function configureListeners(dispatcher:IEventDispatcher):void {
            dispatcher.addEventListener(FocusEvent.FOCUS_IN, focusInHandler);
            dispatcher.addEventListener(FocusEvent.FOCUS_OUT, focusOutHandler);
            dispatcher.addEventListener(FocusEvent.KEY_FOCUS_CHANGE, keyFocusChangeHandler);
            dispatcher.addEventListener(FocusEvent.MOUSE_FOCUS_CHANGE, mouseFocusChangeHandler);
        }

        private function refreshLayout():void {
            var ln:uint = numChildren;
            var child:DisplayObject = getChildAt(0);
            var lastChild:DisplayObject = child;
            for(var i:uint = 1; i &lt; ln; i++) {
                child = getChildAt(i);
                child.x = lastChild.x + lastChild.width + gutter;
                lastChild = child;
            }
        }

        private function focusInHandler(event:FocusEvent):void {
            var target:CustomSprite = CustomSprite(event.target);
            trace("focusInHandler: " + target.name);
        }

        private function focusOutHandler(event:FocusEvent):void {
            var target:CustomSprite = CustomSprite(event.target);
            trace("focusOutHandler: " + target.name);
        }

        private function keyFocusChangeHandler(event:FocusEvent):void {
            if(event.keyCode == 39 || event.keyCode == 37){
                event.preventDefault()
            }
            var target:CustomSprite = CustomSprite(event.target);
            trace("keyFocusChangeHandler: " + target.name);
        }
        private function mouseFocusChangeHandler(event:FocusEvent):void {
            var target:CustomSprite = CustomSprite(event.target);
            trace("mouseFocusChangeHandler: " + target.name);
        }
    }
}

import flash.display.Sprite;
import flash.events.MouseEvent;

class CustomSprite extends Sprite {
    private var size:uint = 50;
    private var bgColor:uint = 0x00CCFF;

    public function CustomSprite() {
        buttonMode = true;
        useHandCursor = true;
        addEventListener(MouseEvent.CLICK, clickHandler);
        draw(size, size);
    }

    private function draw(w:uint, h:uint):void {
        graphics.beginFill(bgColor);
        graphics.drawRect(0, 0, w, h);
        graphics.endFill();
    }

    private function clickHandler(event:MouseEvent):void {
        var target:Sprite = Sprite(event.target);
        trace("clickHandler: " + target.name);
        stage.focus = target;
    }
}
</codeblock></example></apiClassifierDetail><adobeApiEvent id="flash.events:FocusEvent:FOCUS_IN_focusIn" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">focusIn</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:FocusEvent:FOCUS_IN</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:FocusEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:focusIn" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.focusIn</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:FocusEvent:FOCUS_OUT_focusOut" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">focusOut</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:FocusEvent:FOCUS_OUT</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:FocusEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:focusOut" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.focusOut</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:FocusEvent:KEY_FOCUS_CHANGE_keyFocusChange" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">keyFocusChange</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:FocusEvent:KEY_FOCUS_CHANGE</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:FocusEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:keyFocusChange" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.keyFocusChange</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.events:FocusEvent:MOUSE_FOCUS_CHANGE_mouseFocusChange" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">mouseFocusChange</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:FocusEvent:MOUSE_FOCUS_CHANGE</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:FocusEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:mouseFocusChange" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.mouseFocusChange</linktext></link></related-links></adobeApiEvent><apiConstructor id="flash.events:FocusEvent:FocusEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">FocusEvent</apiName><shortdesc class="- topic/shortdesc ">
    Crée un objet Event à l’aide d’informations spécifiques relatives aux événements Focus.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">type</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc "> Type de l’événement. Les valeurs possibles sont les suivantes : <codeph class="+ topic/ph pr-d/codeph ">FocusEvent.FOCUS_IN</codeph>, <codeph class="+ topic/ph pr-d/codeph ">FocusEvent.FOCUS_OUT</codeph>, <codeph class="+ topic/ph pr-d/codeph ">FocusEvent.KEY_FOCUS_CHANGE</codeph> et <codeph class="+ topic/ph pr-d/codeph ">FocusEvent.MOUSE_FOCUS_CHANGE</codeph>.
    </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">bubbles</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">true</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc "> Détermine si l’objet Event prend part à la phase de propagation vers le haut du flux d’événements.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">cancelable</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Détermine si l’objet d’événement peut être annulé.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">relatedObject</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.display:InteractiveObject</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Indique l’occurrence complémentaire de InteractiveObject affectée par le déplacement du focus. Lorsqu’un événement <codeph class="+ topic/ph pr-d/codeph ">focusIn</codeph> se produit, par exemple, <codeph class="+ topic/ph pr-d/codeph ">relatedObject</codeph> représente l’occurrence d’InteractiveObject qui a perdu le focus.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">shiftKey</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Indique si la touche de modification Maj est activée.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">keyCode</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">uint</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Indique le code de la touche utilisée pour déclencher un événement <codeph class="+ topic/ph pr-d/codeph ">keyFocusChange</codeph>.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">direction</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">none</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Indique à partir de quelle direction l’objet interactif cible est activé. Définissez sur <codeph class="+ topic/ph pr-d/codeph ">FocusDirection.NONE</codeph> (la valeur par défaut) pour tous les événements autres que <codeph class="+ topic/ph pr-d/codeph ">focusIn</codeph>.
    
	</apiDesc></apiParam><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Constructeur associé aux objets FocusEvent.
     
     </apiTipText></apiTipTexts></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Crée un objet Event à l’aide d’informations spécifiques relatives aux événements Focus. Les objets Event sont transmis en tant que paramètres aux écouteurs d’événements.
    
	</apiDesc></apiConstructorDetail><related-links class="- topic/related-links "><link href="flash.events.xml#FocusEvent/FOCUS_IN" class="- topic/link "><linktext class="- topic/linktext ">FOCUS_IN</linktext></link><link href="flash.events.xml#FocusEvent/FOCUS_OUT" class="- topic/link "><linktext class="- topic/linktext ">FOCUS_OUT</linktext></link><link href="flash.events.xml#FocusEvent/KEY_FOCUS_CHANGE" class="- topic/link "><linktext class="- topic/linktext ">KEY_FOCUS_CHANGE</linktext></link><link href="flash.events.xml#FocusEvent/MOUSE_FOCUS_CHANGE" class="- topic/link "><linktext class="- topic/linktext ">MOUSE_FOCUS_CHANGE</linktext></link><link href="flash.display.xml#FocusDirection" class="- topic/link "><linktext class="- topic/linktext ">flash.display.FocusDirection</linktext></link></related-links></apiConstructor><apiOperation id="flash.events:FocusEvent:clone" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">clone</apiName><shortdesc class="- topic/shortdesc ">
	Crée une copie de l’objet FocusEvent et définit la valeur de chaque propriété de sorte qu’elle corresponde à la valeur d’origine.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Nouvel objet FocusEvent dont les propriétés ont la même valeur que celles de l’objet d’origine.
	 
	 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.events:Event</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Crée une copie de l’objet FocusEvent et définit la valeur de chaque propriété de sorte qu’elle corresponde à la valeur d’origine.
	
	</apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.events:FocusEvent:toString" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">toString</apiName><shortdesc class="- topic/shortdesc ">
	Renvoie une chaîne répertoriant toutes les propriétés de l’objet FocusEvent.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Chaîne répertoriant toutes les propriétés de l’objet FocusEvent.
	 
	 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Renvoie une chaîne répertoriant toutes les propriétés de l’objet FocusEvent. La chaîne est écrite au format suivant :
	<p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">[FocusEvent type=<i class="+ topic/ph hi-d/i ">valeur</i> bubbles=<i class="+ topic/ph hi-d/i ">valeur</i> cancelable=<i class="+ topic/ph hi-d/i ">valeur</i> relatedObject=<i class="+ topic/ph hi-d/i ">valeur</i> shiftKey=<i class="+ topic/ph hi-d/i ">valeur</i>] keyCode=<i class="+ topic/ph hi-d/i ">valeur</i>]</codeph></p>
	
	</apiDesc></apiOperationDetail></apiOperation><apiValue id="flash.events:FocusEvent:FOCUS_IN" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">FOCUS_IN</apiName><shortdesc class="- topic/shortdesc ">
	Définit la valeur de la propriété type d’un objet d’événement focusIn.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">focusIn</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet événement <codeph class="+ topic/ph pr-d/codeph ">focusIn</codeph>. 
	<p class="- topic/p ">Les propriétés de cet événement sont les suivantes :</p>
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">L’objet qui traite activement l’objet Event avec un écouteur d’événements.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">keyCode</codeph></entry><entry class="- topic/entry ">0 ; s’applique uniquement aux événements <codeph class="+ topic/ph pr-d/codeph ">keyFocusChange</codeph>.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">relatedObject</codeph></entry><entry class="- topic/entry ">Occurrence complémentaire d’InteractiveObject affectée par le déplacement du focus.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">shiftKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; s’applique uniquement aux événements <codeph class="+ topic/ph pr-d/codeph ">keyFocusChange</codeph>.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Occurrence d’InteractiveObject qui vient de recevoir le focus. La propriété <codeph class="+ topic/ph pr-d/codeph ">target</codeph> ne correspond pas toujours à l’objet de la liste d’affichage qui est associé à l’écouteur d’événement. Utilisez la propriété <codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph> pour accéder à l’objet de la liste d’affichage qui traite actuellement l’événement.
	</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">direction</codeph></entry><entry class="- topic/entry ">La direction à partir de laquelle le focus a été attribué. Cette propriété signale la valeur du paramètre <codeph class="+ topic/ph pr-d/codeph ">direction</codeph> de la méthode <codeph class="+ topic/ph pr-d/codeph ">assignFocus()</codeph> de la scène. Si le focus a changé par d’autres moyens, la valeur est toujours <codeph class="+ topic/ph pr-d/codeph ">FocusDirection.NONE</codeph>. S’applique uniquement aux événements <codeph class="+ topic/ph pr-d/codeph ">focusIn</codeph>. Pour tous les autres événements focus, la valeur est <codeph class="+ topic/ph pr-d/codeph ">FocusDirection.NONE</codeph>.</entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:focusIn" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.focusIn</linktext></link></related-links></apiValue><apiValue id="flash.events:FocusEvent:FOCUS_OUT" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">FOCUS_OUT</apiName><shortdesc class="- topic/shortdesc ">
	Définit la valeur de la propriété type d’un objet événement focusOut.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">focusOut</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet événement <codeph class="+ topic/ph pr-d/codeph ">focusOut</codeph>. 
	<p class="- topic/p ">Les propriétés de cet événement sont les suivantes :</p>
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">L’objet qui traite activement l’objet Event avec un écouteur d’événements.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">keyCode</codeph></entry><entry class="- topic/entry ">0 ; s’applique uniquement aux événements <codeph class="+ topic/ph pr-d/codeph ">keyFocusChange</codeph>.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">relatedObject</codeph></entry><entry class="- topic/entry ">Occurrence complémentaire d’InteractiveObject affectée par le déplacement du focus.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">shiftKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; s’applique uniquement aux événements <codeph class="+ topic/ph pr-d/codeph ">keyFocusChange</codeph>.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Occurrence d’InteractiveObject qui vient de perdre le focus. La propriété <codeph class="+ topic/ph pr-d/codeph ">target</codeph> ne correspond pas toujours à l’objet de la liste d’affichage qui est associé à l’écouteur d’événement. Utilisez la propriété <codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph> pour accéder à l’objet de la liste d’affichage qui traite actuellement l’événement.
	</entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:focusOut" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.focusOut</linktext></link></related-links></apiValue><apiValue id="flash.events:FocusEvent:KEY_FOCUS_CHANGE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">KEY_FOCUS_CHANGE</apiName><shortdesc class="- topic/shortdesc ">
	Définit la valeur de la propriété type d’un objet événement keyFocusChange.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">keyFocusChange</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet événement <codeph class="+ topic/ph pr-d/codeph ">keyFocusChange</codeph>. 
	
	<p class="- topic/p ">Les propriétés de cet événement sont les suivantes :</p>
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> ; appelez la méthode <codeph class="+ topic/ph pr-d/codeph ">preventDefault()</codeph> pour annuler le comportement par défaut.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">L’objet qui traite activement l’objet Event avec un écouteur d’événements.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">keyCode</codeph></entry><entry class="- topic/entry ">Valeur de code correspondant à la touche utilisée pour déclencher un événement <codeph class="+ topic/ph pr-d/codeph ">keyFocusChange</codeph>.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">relatedObject</codeph></entry><entry class="- topic/entry ">Occurrence complémentaire d’InteractiveObject affectée par le déplacement du focus.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">shiftKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> si le modificateur de la touche Maj est activé ; <codeph class="+ topic/ph pr-d/codeph ">false</codeph> dans tous les autres cas.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Occurrence d’InteractiveObject qui possède actuellement le focus. La propriété <codeph class="+ topic/ph pr-d/codeph ">target</codeph> ne correspond pas toujours à l’objet de la liste d’affichage qui est associé à l’écouteur d’événement. Utilisez la propriété <codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph> pour accéder à l’objet de la liste d’affichage qui traite actuellement l’événement.
	</entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:keyFocusChange" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.keyFocusChange</linktext></link></related-links></apiValue><apiValue id="flash.events:FocusEvent:MOUSE_FOCUS_CHANGE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">MOUSE_FOCUS_CHANGE</apiName><shortdesc class="- topic/shortdesc ">
	Définit la valeur de la propriété type d’un objet événement mouseFocusChange.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">mouseFocusChange</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet événement <codeph class="+ topic/ph pr-d/codeph ">mouseFocusChange</codeph>. 
	<p class="- topic/p ">Les propriétés de cet événement sont les suivantes :</p>
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> ; appelez la méthode <codeph class="+ topic/ph pr-d/codeph ">preventDefault()</codeph> pour annuler le comportement par défaut.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">L’objet qui traite activement l’objet Event avec un écouteur d’événements.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">keyCode</codeph></entry><entry class="- topic/entry ">0 ; s’applique uniquement aux événements <codeph class="+ topic/ph pr-d/codeph ">keyFocusChange</codeph>.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">relatedObject</codeph></entry><entry class="- topic/entry ">Occurrence complémentaire d’InteractiveObject affectée par le déplacement du focus.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">shiftKey</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; s’applique uniquement aux événements <codeph class="+ topic/ph pr-d/codeph ">keyFocusChange</codeph>.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Occurrence d’InteractiveObject qui possède actuellement le focus. La propriété <codeph class="+ topic/ph pr-d/codeph ">target</codeph> ne correspond pas toujours à l’objet de la liste d’affichage qui est associé à l’écouteur d’événement. Utilisez la propriété <codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph> pour accéder à l’objet de la liste d’affichage qui traite actuellement l’événement.
	</entry></row></tbody></tgroup></adobetable>
	
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#InteractiveObject/event:mouseFocusChange" class="- topic/link "><linktext class="- topic/linktext ">flash.display.InteractiveObject.mouseFocusChange</linktext></link></related-links></apiValue><apiValue id="flash.events:FocusEvent:direction:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">direction</apiName><shortdesc class="- topic/shortdesc ">
	Spécifie la direction du focus pour un événement focusIn.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Spécifie la direction du focus pour un événement <codeph class="+ topic/ph pr-d/codeph ">focusIn</codeph>.
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#FocusDirection" class="- topic/link "><linktext class="- topic/linktext ">flash.display.FocusDirection</linktext></link><link href="flash.display.xml#Stage/assignFocus()" class="- topic/link "><linktext class="- topic/linktext ">flash.display.Stage.assignFocus()</linktext></link></related-links></apiValue><apiValue id="flash.events:FocusEvent:isRelatedObjectInaccessible:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">isRelatedObjectInaccessible</apiName><shortdesc class="- topic/shortdesc ">
	 Si la valeur est true, la propriété relatedObject est définie sur null pour des raisons liées aux sandbox de sécurité.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Si la valeur est <codeph class="+ topic/ph pr-d/codeph ">true</codeph>, la propriété <codeph class="+ topic/ph pr-d/codeph ">relatedObject</codeph> est définie sur <codeph class="+ topic/ph pr-d/codeph ">null</codeph> pour des raisons liées aux sandbox de sécurité. Si la valeur nominale de <codeph class="+ topic/ph pr-d/codeph ">relatedObject</codeph> est une référence à un DisplayObject se trouvant dans un autre sandbox, <codeph class="+ topic/ph pr-d/codeph ">relatedObject</codeph> est défini sur <codeph class="+ topic/ph pr-d/codeph ">null</codeph>, à moins qu’il existe une autorisation dans les deux sens dans les limites de ce sandbox. L’autorisation est établie en appelant la méthode <codeph class="+ topic/ph pr-d/codeph ">Security.allowDomain()</codeph> à partir d’un fichier SWF ou en fournissant un fichier de régulation depuis le serveur d’un fichier image, puis en définissant la propriété <codeph class="+ topic/ph pr-d/codeph ">LoaderContext.checkPolicyFile</codeph> lors du chargement de l’image.
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.events.xml#FocusEvent/relatedObject" class="- topic/link "><linktext class="- topic/linktext ">FocusEvent.relatedObject</linktext></link><link href="flash.system.xml#Security/allowDomain()" class="- topic/link "><linktext class="- topic/linktext ">Security.allowDomain()</linktext></link><link href="flash.system.xml#LoaderContext/checkPolicyFile" class="- topic/link "><linktext class="- topic/linktext ">LoaderContext.checkPolicyFile</linktext></link></related-links></apiValue><apiValue id="flash.events:FocusEvent:keyCode:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">keyCode</apiName><shortdesc class="- topic/shortdesc ">
	Valeur de code correspondant à la touche utilisée pour déclencher un événement keyFocusChange.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">uint</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Valeur de code correspondant à la touche utilisée pour déclencher un événement <codeph class="+ topic/ph pr-d/codeph ">keyFocusChange</codeph>.
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:FocusEvent:relatedObject:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">relatedObject</apiName><shortdesc class="- topic/shortdesc ">
	Référence à l’occurrence complémentaire d’InteractiveObject affectée par le déplacement du focus.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.display:InteractiveObject</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Référence à l’occurrence complémentaire d’InteractiveObject affectée par le déplacement du focus. Lorsqu’un événement <codeph class="+ topic/ph pr-d/codeph ">focusOut</codeph> se produit, par exemple, <codeph class="+ topic/ph pr-d/codeph ">relatedObject</codeph> représente l’occurrence d’InteractiveObject qui a obtenu le focus.
	<p class="- topic/p ">La valeur de cette propriété peut être <codeph class="+ topic/ph pr-d/codeph ">null</codeph> dans deux cas : s’il n’existe aucun objet associé ou s’il existe un objet associé se trouvant dans un sandbox de sécurité auquel vous n’avez pas accès. Pour savoir dans quel cas vous vous trouvez, utilisez la propriété <codeph class="+ topic/ph pr-d/codeph ">isRelatedObjectInaccessible()</codeph>.</p>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.events.xml#FocusEvent/isRelatedObjectInaccessible" class="- topic/link "><linktext class="- topic/linktext ">FocusEvent.isRelatedObjectInaccessible</linktext></link></related-links></apiValue><apiValue id="flash.events:FocusEvent:shiftKey:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">shiftKey</apiName><shortdesc class="- topic/shortdesc ">
	Indique si la touche de modification Maj est activée, auquel cas la valeur est true.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Indique si la touche de modification Maj est activée, auquel cas la valeur est <codeph class="+ topic/ph pr-d/codeph ">true</codeph>. Sinon, elle correspond à <codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Cette propriété n’est utilisée que si l’événement FocusEvent est de type <codeph class="+ topic/ph pr-d/codeph ">keyFocusChange</codeph>.
	
	</apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.events:GesturePhase" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">GesturePhase</apiName><shortdesc class="- topic/shortdesc ">
	La classe GesturePhase est une classe d’énumération de valeurs constantes à utiliser avec les classes GestureEvent, PressAndTapGestureEvent et TransformGestureEvent.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	La classe GesturePhase est une classe d’énumération de valeurs constantes à utiliser avec les classes GestureEvent, PressAndTapGestureEvent et TransformGestureEvent. Utilisez ces valeurs pour contrôler le début, le déroulement et la fin d’un mouvement tactile (notamment lorsque l’utilisateur déplace plusieurs doigts sur un écran tactile) afin que votre application puisse répondre aux différentes étapes du contact de l’utilisateur. Certains mouvements (de glissement et d’appui bref à deux doigts) ne sont pas constitués de plusieurs phases et définissent la propriété <codeph class="+ topic/ph pr-d/codeph ">phase</codeph> de l’objet d’événement sur <codeph class="+ topic/ph pr-d/codeph ">all</codeph>.
	
	
	</apiDesc><example conref="examples\TransformGestureEventExample.as" class="- topic/example "> L’exemple suivant illustre la gestion d’événements pour les événements <codeph class="+ topic/ph pr-d/codeph ">GESTURE_ROTATE</codeph>. Lorsque l’utilisateur effectue un mouvement de rotation sur le périphérique tactile, mySprite pivote et myTextField se remplit avec la phase actuelle.
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
Multitouch.inputMode = MultitouchInputMode.GESTURE;

var mySprite = new Sprite();
mySprite.addEventListener(TransformGestureEvent.GESTURE_ROTATE , onRotate );
mySprite.graphics.beginFill(0x336699);
mySprite.graphics.drawRect(0, 0, 100, 80);
var myTextField = new TextField();
myTextField.y = 200;
addChild(mySprite);
addChild(myTextField);

function onRotate(evt:TransformGestureEvent):void {

    evt.target.rotation -= 45;

    if (evt.phase==GesturePhase.BEGIN) {
        myTextField.text = "Begin";
    }
    if (evt.phase==GesturePhase.UPDATE) {
        myTextField.text = "Update";
    }
    if (evt.phase==GesturePhase.END) {
        myTextField.text = "End";
    }
}
</codeblock></example></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.events.xml#GestureEvent" class="- topic/link "><linktext class="- topic/linktext ">flash.events.GestureEvent</linktext></link><link href="flash.events.xml#TransformGestureEvent" class="- topic/link "><linktext class="- topic/linktext ">flash.events.TransformGestureEvent</linktext></link><link href="flash.events.xml#PressAndTapGestureEvent" class="- topic/link "><linktext class="- topic/linktext ">flash.events.PressAndTapGestureEvent</linktext></link></related-links><apiValue id="flash.events:GesturePhase:ALL" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">ALL</apiName><shortdesc class="- topic/shortdesc ">
	Valeur unique qui englobe toutes les phases de mouvements simples, tels que le glissement ou l’appui bref à deux doigts.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">all</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Valeur unique qui englobe toutes les phases de mouvements simples, tels que le glissement ou l’appui bref à deux doigts. Pour les mouvements qui définissent la propriété <codeph class="+ topic/ph pr-d/codeph ">phase</codeph> de l’objet d’événement sur <codeph class="+ topic/ph pr-d/codeph ">all</codeph> (mouvements de glissement et d’appui bref à deux doigts), la valeur <codeph class="+ topic/ph pr-d/codeph ">phase</codeph> est toujours <codeph class="+ topic/ph pr-d/codeph ">all</codeph> une fois l’événement distribué. 
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.events.xml#GestureEvent" class="- topic/link "><linktext class="- topic/linktext ">flash.events.GestureEvent</linktext></link><link href="flash.events.xml#TransformGestureEvent" class="- topic/link "><linktext class="- topic/linktext ">flash.events.TransformGestureEvent</linktext></link><link href="flash.events.xml#PressAndTapGestureEvent" class="- topic/link "><linktext class="- topic/linktext ">flash.events.PressAndTapGestureEvent</linktext></link></related-links></apiValue><apiValue id="flash.events:GesturePhase:BEGIN" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">BEGIN</apiName><shortdesc class="- topic/shortdesc ">
	Début d’un nouveau mouvement (notamment lorsque l’utilisateur appuie sur un écran tactile avec un doigt).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">begin</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Début d’un nouveau mouvement (notamment lorsque l’utilisateur appuie sur un écran tactile avec un doigt).
	
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.events.xml#GestureEvent" class="- topic/link "><linktext class="- topic/linktext ">flash.events.GestureEvent</linktext></link><link href="flash.events.xml#TransformGestureEvent" class="- topic/link "><linktext class="- topic/linktext ">flash.events.TransformGestureEvent</linktext></link><link href="flash.events.xml#PressAndTapGestureEvent" class="- topic/link "><linktext class="- topic/linktext ">flash.events.PressAndTapGestureEvent</linktext></link></related-links></apiValue><apiValue id="flash.events:GesturePhase:END" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">END</apiName><shortdesc class="- topic/shortdesc ">
	Fin d’un mouvement (notamment lorsque l’utilisateur retire son doigt d’un écran tactile).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">end</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Fin d’un mouvement (notamment lorsque l’utilisateur retire son doigt d’un écran tactile). 
	
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.events.xml#GestureEvent" class="- topic/link "><linktext class="- topic/linktext ">flash.events.GestureEvent</linktext></link><link href="flash.events.xml#TransformGestureEvent" class="- topic/link "><linktext class="- topic/linktext ">flash.events.TransformGestureEvent</linktext></link><link href="flash.events.xml#PressAndTapGestureEvent" class="- topic/link "><linktext class="- topic/linktext ">flash.events.PressAndTapGestureEvent</linktext></link></related-links></apiValue><apiValue id="flash.events:GesturePhase:UPDATE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">UPDATE</apiName><shortdesc class="- topic/shortdesc ">
	Exécution d’un mouvement (notamment lorsqu’un utilisateur déplace son doigt sur un écran tactile).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">update</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Exécution d’un mouvement (notamment lorsqu’un utilisateur déplace son doigt sur un écran tactile).
	
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.events.xml#GestureEvent" class="- topic/link "><linktext class="- topic/linktext ">flash.events.GestureEvent</linktext></link><link href="flash.events.xml#TransformGestureEvent" class="- topic/link "><linktext class="- topic/linktext ">flash.events.TransformGestureEvent</linktext></link><link href="flash.events.xml#PressAndTapGestureEvent" class="- topic/link "><linktext class="- topic/linktext ">flash.events.PressAndTapGestureEvent</linktext></link></related-links></apiValue></apiClassifier><apiClassifier languages="" id="flash.events:BrowserInvokeEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">BrowserInvokeEvent</apiName><shortdesc class="- topic/shortdesc ">
	 L’objet NativeApplication d’une application AIR distribue un événement browserInvoke lorsque l’application est invoquée à la suite de l’utilisation de la fonction d’invocation du navigateur par un fichier SWF dans le navigateur.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Distribué par l’objet NativeApplication lors de l’appel d’une application AIR via un navigateur Web.
	 
	 </apiTipText></apiTipTexts><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 L’objet NativeApplication d’une application AIR distribue un événement <codeph class="+ topic/ph pr-d/codeph ">browserInvoke</codeph> lorsque l’application est invoquée à la suite de l’utilisation de la fonction d’invocation du navigateur par un fichier SWF dans le navigateur. L’objet NativeApplication distribue également un événement <codeph class="+ topic/ph pr-d/codeph ">browserInvoke</codeph> lorsqu’un utilisateur instancie la fonction d’installation continue dans le navigateur et que le fichier SWF dans le navigateur transmet un tableau au paramètre <codeph class="+ topic/ph pr-d/codeph ">arguments</codeph> de la méthode <codeph class="+ topic/ph pr-d/codeph ">launchApplication()</codeph> du fichier air.swf (pour plus de détails, voir « Distribution, installation et exécution des applications AIR » dans le guide du développeur AIR).
	 
	 <p class="- topic/p ">L’invocation d’un navigateur n’est autorisée que si l’application spécifie les éléments suivants dans son fichier descripteur :</p>
	 
	 <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">&lt;allowBrowserInvocation>true&lt;/allowBrowserInvocation></codeblock>
	 
	 <p class="- topic/p ">Si l’application n’est pas en cours d’exécution, l’objet NativeApplication distribue à la fois un événement InvokeEvent et un événement <codeph class="+ topic/ph pr-d/codeph ">browserInvoke</codeph> lors du démarrage depuis le navigateur. Autrement, si l’application <i class="+ topic/ph hi-d/i ">est</i> déjà en cours d’exécution, l’objet NativeApplication distribue uniquement un événement <codeph class="+ topic/ph pr-d/codeph ">browserInvoke</codeph> lors du démarrage depuis le navigateur. </p>
	 
	 <p class="- topic/p "> Si l’application est démarrée à la suite d’une installation continue depuis le navigateur (l’utilisateur ayant choisi de démarrer après l’installation), l’objet NativeApplication distribue un événement BrowserInvoke uniquement si des arguments ont été transmis (via le fichier SWF dans le navigateur transmettant un tableau au paramètre <codeph class="+ topic/ph pr-d/codeph ">arguments</codeph> de la méthode <codeph class="+ topic/ph pr-d/codeph ">installApplication()</codeph> du fichier air.swf). Pour plus de détails, voir « Distribution, installation et exécution des applications AIR » dans le guide du développeur AIR.</p>
	 
	 <p class="- topic/p ">A l’instar des événements <codeph class="+ topic/ph pr-d/codeph ">InvokeEvent</codeph>, les événements <codeph class="+ topic/ph pr-d/codeph ">browserInvokeEvent</codeph> sont distribués par l’objet NativeApplication (<codeph class="+ topic/ph pr-d/codeph ">NativeApplication.nativeApplication</codeph>). Pour recevoir des événements <codeph class="+ topic/ph pr-d/codeph ">browserInvoke</codeph>, appelez la méthode <codeph class="+ topic/ph pr-d/codeph ">addEventListener()</codeph> de l’objet NativeApplication. Lorsqu’un écouteur d’événement s’enregistre pour un événement <codeph class="+ topic/ph pr-d/codeph ">browserInvoke</codeph>, il reçoit également tous les événements <codeph class="+ topic/ph pr-d/codeph ">browserInvoke</codeph> ayant eu lieu avant l’enregistrement. Ceux-ci sont distribués après le renvoi de l’appel à <codeph class="+ topic/ph pr-d/codeph ">addEventListener()</codeph>, mais pas forcément avant d’autres événements <codeph class="+ topic/ph pr-d/codeph ">browserInvoke</codeph> qui pourraient être reçus après l’enregistrement. Ceci vous permet de gérer des événements <codeph class="+ topic/ph pr-d/codeph ">browserInvoke</codeph> qui ont eu lieu avant l’exécution de votre code d’initialisation (lorsque l’application a été invoquée au départ depuis le navigateur, par exemple). Si vous ajoutez un écouteur d’événement ultérieurement dans l’exécution (après l’initialisation de l’application), il continue à recevoir tous les événements <codeph class="+ topic/ph pr-d/codeph ">browserInvoke</codeph> qui ont eu lieu depuis le démarrage de l’application.</p>
	 
	 </apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.events.xml#InvokeEvent" class="- topic/link "><linktext class="- topic/linktext ">flash.events.InvokeEvent</linktext></link><link href="flash.desktop.xml#NativeApplication" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.NativeApplication</linktext></link></related-links><adobeApiEvent id="flash.events:BrowserInvokeEvent:BROWSER_INVOKE_invoke" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">invoke</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:BrowserInvokeEvent:BROWSER_INVOKE</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:BrowserInvokeEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.desktop.xml#NativeApplication" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.NativeApplication</linktext></link></related-links></adobeApiEvent><apiConstructor id="flash.events:BrowserInvokeEvent:BrowserInvokeEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">BrowserInvokeEvent</apiName><shortdesc class="- topic/shortdesc ">
	 La fonction de constructeur pour la classe BrowserInvokeEvent.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">type</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Type de l’événement, accessible en tant que <codeph class="+ topic/ph pr-d/codeph ">Event.type</codeph>.
	 
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">bubbles</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Définissez sur <codeph class="+ topic/ph pr-d/codeph ">false</codeph> pour un objet BrowserInvokeEvent.
	 
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">cancelable</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Définissez sur <codeph class="+ topic/ph pr-d/codeph ">false</codeph> pour un objet BrowserInvokeEvent.
	 
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">arguments</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Array</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Un tableau d’arguments (chaînes) à transmettre à l’application.
	 
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">sandboxType</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Le type de sandbox pour le contenu dans le navigateur.
	 
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">securityDomain</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Le domaine de sécurité pour le contenu dans le navigateur.
	 
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">isHTTPS</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Indique si le contenu dans le navigateur utilise le schéma URL HTTPS ou non.
	 
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">isUserEvent</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Indique si l’invocation du navigateur résultait d’un événement user.
	 
	 </apiDesc></apiParam></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 La fonction de constructeur pour la classe BrowserInvokeEvent. Généralement, les développeurs n’appellent pas le constructeur <codeph class="+ topic/ph pr-d/codeph ">BrowserInvokeEvent()</codeph> directement. Seul le moteur d’exécution doit créer un objet BrowserInvokeEvent.
	 
	 </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="flash.events:BrowserInvokeEvent:clone" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">clone</apiName><shortdesc class="- topic/shortdesc ">
		 Crée une copie de cet événement.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Copie de l’événement.
		 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.events:Event</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 Crée une copie de cet événement.
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiValue id="flash.events:BrowserInvokeEvent:BROWSER_INVOKE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">BROWSER_INVOKE</apiName><shortdesc class="- topic/shortdesc ">
		 La constante BrowserInvokeEvent.BROWSER_INVOKE définit la valeur de la propriété type d’un objet BrowserInvokeEvent.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">browserInvoke</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 La constante <codeph class="+ topic/ph pr-d/codeph ">BrowserInvokeEvent.BROWSER_INVOKE</codeph> définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet BrowserInvokeEvent.
		 
		 <p class="- topic/p ">L’objet BrowserInvokeEvent possède les propriétés suivantes :</p>
		 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriétés</entry><entry class="- topic/entry ">Valeurs</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">arguments</codeph></entry><entry class="- topic/entry ">Tableau des arguments de chaîne transmis pendant cette invocation.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">sandBoxType</codeph></entry><entry class="- topic/entry ">Chaîne représentant le type de sandbox pour le contenu du navigateur (<codeph class="+ topic/ph pr-d/codeph ">Security.APPLICATION</codeph>, <codeph class="+ topic/ph pr-d/codeph ">Security.LOCAL_TRUSTED</codeph>, <codeph class="+ topic/ph pr-d/codeph ">Security.LOCAL_WITH_FILE</codeph>, <codeph class="+ topic/ph pr-d/codeph ">Security.LOCAL_LOCAL_WITH_NETWORK</codeph> ou <codeph class="+ topic/ph pr-d/codeph ">Security.REMOTE</codeph>).</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">securityDomain</codeph></entry><entry class="- topic/entry ">Une chaîne représentant le domaine de sécurité pour le contenu dans le navigateur (tel que <codeph class="+ topic/ph pr-d/codeph ">"www.example.com"
</codeph>).</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">isHTTPS</codeph></entry><entry class="- topic/entry ">Indique si le contenu du navigateur utilise le schéma URL HTTPS (<codeph class="+ topic/ph pr-d/codeph ">true</codeph>) ou non (<codeph class="+ topic/ph pr-d/codeph ">false</codeph>)</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">isUserEvent</codeph></entry><entry class="- topic/entry ">Indique si l’invocation du navigateur a résulté d’un événement user (toujours <codeph class="+ topic/ph pr-d/codeph ">true</codeph> dans AIR 1.0).</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry ">N°</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; Il n’existe aucun comportement par défaut à annuler.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Indique l’objet qui traite activement l’objet InvokeEvent avec un écouteur d’événements.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Toujours l’objet NativeApplication.  
		    </entry></row></tbody></tgroup></adobetable>
		 
		 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.desktop.xml#NativeApplication" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.NativeApplication</linktext></link></related-links></apiValue><apiValue id="flash.events:BrowserInvokeEvent:arguments:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">arguments</apiName><shortdesc class="- topic/shortdesc ">
		 Un tableau d’arguments (chaînes) à transmettre à l’application.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Array</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 Un tableau d’arguments (chaînes) à transmettre à l’application.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:BrowserInvokeEvent:isHTTPS:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">isHTTPS</apiName><shortdesc class="- topic/shortdesc ">
		 Indique si le contenu dans le navigateur utilise le schéma URL HTTPS (true) ou non (false).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 Indique si le contenu dans le navigateur utilise le schéma URL HTTPS (<codeph class="+ topic/ph pr-d/codeph ">true</codeph>) ou non (<codeph class="+ topic/ph pr-d/codeph ">false</codeph>).
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:BrowserInvokeEvent:isUserEvent:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">isUserEvent</apiName><shortdesc class="- topic/shortdesc ">
		 Indique si l’invocation du navigateur a entraîné un événement user (tel qu’un clic de souris).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 Indique si l’invocation du navigateur a entraîné un événement user (tel qu’un clic de souris). Dans AIR 1.0, ceci est toujours défini sur <codeph class="+ topic/ph pr-d/codeph ">true</codeph> ; AIR requiert un événement user pour initier un appel à la fonction d’invocation du navigateur.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:BrowserInvokeEvent:sandboxType:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">sandboxType</apiName><shortdesc class="- topic/shortdesc ">
		 Le type de sandbox pour le contenu dans le navigateur.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 Le type de sandbox pour le contenu dans le navigateur. Cette valeur peut être :
		 
		 <ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">Security.APPLICATION</codeph> — Le contenu se trouve dans le sandbox de sécurité de l’application.</li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">Security.LOCAL_TRUSTED</codeph> — Le contenu est dans le sandbox de sécurité local approuvé.</li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">Security.LOCAL_WITH_FILE</codeph> — Le contenu se trouve dans le sandbox de sécurité local avec système de fichiers.</li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">Security.LOCAL_WITH_NETWORK</codeph> — Le contenu se trouve dans le sandbox de sécurité local avec mise en réseau.</li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">Security.REMOTE</codeph> — Le contenu se trouve dans le domaine distant (réseau)</li></ul>
		 
		 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.system.xml#Security/sandboxType" class="- topic/link "><linktext class="- topic/linktext ">flash.system.Security.sandboxType</linktext></link></related-links></apiValue><apiValue id="flash.events:BrowserInvokeEvent:securityDomain:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">securityDomain</apiName><shortdesc class="- topic/shortdesc ">
		 Le domaine de sécurité pour le contenu dans le navigateur, tel que« www.adobe.com » ou « www.example.org ».</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 Le domaine de sécurité pour le contenu dans le navigateur, tel que <codeph class="+ topic/ph pr-d/codeph ">"www.adobe.com"</codeph> ou <codeph class="+ topic/ph pr-d/codeph ">"www.example.org"</codeph>. Cette propriété est définie uniquement pour le contenu présent dans le sandbox de sécurité distant (pour le contenu d’un domaine réseau) et non pour le contenu présent dans un sandbox de sécurité d’application ou local.
		 
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.events:OutputProgressEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">OutputProgressEvent</apiName><shortdesc class="- topic/shortdesc ">
 Un objet FileStream distribue des objets OutputProgressEvent pendant l’exécution d’opérations d’écriture de fichier asynchrones en attente.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Objets événement pour événements output progress (pour opérations d’écriture de fichier asynchrones).
 
 </apiTipText></apiTipTexts><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Un objet FileStream distribue des objets OutputProgressEvent pendant l’exécution d’opérations d’écriture de fichier asynchrones en attente. Il existe un type d’événement output progress : <codeph class="+ topic/ph pr-d/codeph ">OutputProgressEvent.OUTPUT_PROGRESS</codeph>.
 
 </apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.filesystem.xml#FileStream" class="- topic/link "><linktext class="- topic/linktext ">flash.filesystem.FileStream</linktext></link></related-links><adobeApiEvent id="flash.events:OutputProgressEvent:OUTPUT_PROGRESS_outputProgress" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">outputProgress</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:OutputProgressEvent:OUTPUT_PROGRESS</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:OutputProgressEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.filesystem.xml#FileStream" class="- topic/link "><linktext class="- topic/linktext ">flash.filesystem.FileStream</linktext></link></related-links></adobeApiEvent><apiConstructor id="flash.events:OutputProgressEvent:OutputProgressEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">OutputProgressEvent</apiName><shortdesc class="- topic/shortdesc ">
    Crée un objet Event contenant des informations sur les événements output progress.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">type</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc "> Type de l’événement. Il existe un seul type d’événement error : <codeph class="+ topic/ph pr-d/codeph ">OutputProgressEvent.OUTPUT_PROGRESS</codeph>.
    
    </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">bubbles</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc "> Détermine si l’objet Event prend part à la phase de propagation vers le haut du flux d’événements. 
    </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">cancelable</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Détermine si l’objet d’événement peut être annulé. 
    </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">bytesPending</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Le nombre d’octets pas encore écrits.
    </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">bytesTotal</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Le nombre total d’octets écrits ou ayant des écritures en attente.
    
    </apiDesc></apiParam><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Constructeur associé aux objets OutputProgressEvent.
    </apiTipText></apiTipTexts></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Crée un objet Event contenant des informations sur les événements output progress. Les objets Event sont transmis en tant que paramètres aux écouteurs d’événements.
    
    </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="flash.events:OutputProgressEvent:clone" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">clone</apiName><shortdesc class="- topic/shortdesc ">
    Crée une copie de l’objet OutputProgressEvent et définit la valeur de chaque propriété de sorte qu’elle corresponde à la valeur d’origine.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Nouvel objet OutputProgressEvent dont les propriétés ont la même valeur que celles de l’objet d’origine.
    </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.events:Event</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Crée une copie de l’objet OutputProgressEvent et définit la valeur de chaque propriété de sorte qu’elle corresponde à la valeur d’origine. 
    
    </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.events:OutputProgressEvent:toString" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">toString</apiName><shortdesc class="- topic/shortdesc ">
    Renvoie une chaîne répertoriant toutes les propriétés de l’objet OutputProgressEvent.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Chaîne répertoriant toutes les propriétés de l’objet OutputProgressEvent.
    </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Renvoie une chaîne répertoriant toutes les propriétés de l’objet OutputProgressEvent. La chaîne est écrite au format suivant :
    
    <p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">[OutputProgressEvent type=<i class="+ topic/ph hi-d/i ">valeur</i> bubbles=<i class="+ topic/ph hi-d/i ">valeur</i> cancelable=<i class="+ topic/ph hi-d/i ">valeur</i> eventPhase=<i class="+ topic/ph hi-d/i ">valeur</i> bytesPending=<i class="+ topic/ph hi-d/i ">valeur</i> bytesTotal=<i class="+ topic/ph hi-d/i ">valeur</i>]</codeph></p>
    
    </apiDesc></apiOperationDetail></apiOperation><apiValue id="flash.events:OutputProgressEvent:OUTPUT_PROGRESS" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">OUTPUT_PROGRESS</apiName><shortdesc class="- topic/shortdesc ">
    Définit la valeur de la propriété type d’un objet événement outputProgress.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">outputProgress</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet événement <codeph class="+ topic/ph pr-d/codeph ">outputProgress</codeph>.
    
    <p class="- topic/p ">Les propriétés de cet événement sont les suivantes :</p>
    
    <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bytesPending</codeph></entry><entry class="- topic/entry ">Le nombre d’octets restant à écrire au moment où l’écouteur traite l’événement.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bytesTotal</codeph></entry><entry class="- topic/entry ">Nombre total d’octets finalement écrits si le processus d’écriture aboutit.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">L’objet qui traite activement l’objet Event avec un écouteur d’événements.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Objet FileStream indiquant la progression. </entry></row></tbody></tgroup></adobetable>
    
    </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.filesystem.xml#FileStream" class="- topic/link "><linktext class="- topic/linktext ">flash.filesystem.FileStream</linktext></link></related-links></apiValue><apiValue id="flash.events:OutputProgressEvent:bytesPending:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">bytesPending</apiName><shortdesc class="- topic/shortdesc ">
    Le nombre d’octets qui ne sont pas encore écrits lorsque l’écouteur traite l’événement.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Le nombre d’octets qui ne sont pas encore écrits lorsque l’écouteur traite l’événement.
    
    </apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:OutputProgressEvent:bytesTotal:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">bytesTotal</apiName><shortdesc class="- topic/shortdesc ">
    Le nombre total d’octets écrits jusqu’à présent, plus le nombre d’octets restant à écrire.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Le nombre total d’octets écrits jusqu’à présent, plus le nombre d’octets restant à écrire.
    
    </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.events:StageOrientationEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">StageOrientationEvent</apiName><shortdesc class="- topic/shortdesc ">
 Un objet Stage distribue un objet StageOrientationEvent lors de la modification de l’orientation de la scène.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Un objet Stage distribue un objet StageOrientationEvent lors de la modification de l’orientation de la scène. C’est notamment le cas lorsque le périphérique pivote, lorsque l’utilisateur ouvre un clavier coulissant ou lorsque la méthode <codeph class="+ topic/ph pr-d/codeph ">setAspectRatio()</codeph> de la scène est appelée.
 
 <p class="- topic/p ">Il existe deux types d’événement StageOrientationEvent : <codeph class="+ topic/ph pr-d/codeph ">orientationChanging</codeph> (<codeph class="+ topic/ph pr-d/codeph ">StageOrientationEvent.ORIENTATION_CHANGING</codeph>) est distribué avant le changement d’orientation de l’écran. L’appel de la méthode <codeph class="+ topic/ph pr-d/codeph ">preventDefault()</codeph> de l’objet d’événement distribué pour orientationChanging empêche la scène de changer d’orientation. <codeph class="+ topic/ph pr-d/codeph ">orientationChange</codeph> (<codeph class="+ topic/ph pr-d/codeph ">StageOrientationEvent.ORIENTATION_CHANGE</codeph>) est distribué après le changement d’orientation de l’écran.</p>
 
 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Remarque :</b> si la propriété <codeph class="+ topic/ph pr-d/codeph ">autoOrients</codeph> est définie sur <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, l’orientation de la scène ne change pas lors de la rotation d’un périphérique. Par conséquent, les événements StageOrientationEvents ne sont distribués que pour la rotation du périphérique lorsque <codeph class="+ topic/ph pr-d/codeph ">autoOrients</codeph> est définie sur <codeph class="+ topic/ph pr-d/codeph ">true</codeph>.</p>
 
 </apiDesc><example conref="examples\Stage.orientationChangeEvent.1.as" class="- topic/example "/></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.display.xml#Stage/deviceOrientation" class="- topic/link "><linktext class="- topic/linktext ">Stage.deviceOrientation</linktext></link><link href="flash.display.xml#Stage/autoOrients" class="- topic/link "><linktext class="- topic/linktext ">Stage.autoOrients</linktext></link></related-links><adobeApiEvent id="flash.events:StageOrientationEvent:ORIENTATION_CHANGE_orientationChange" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">orientationChange</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:StageOrientationEvent:ORIENTATION_CHANGE</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:StageOrientationEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.display.xml#Stage" class="- topic/link "><linktext class="- topic/linktext ">flash.display.Stage</linktext></link><link href="flash.display.xml#Stage/deviceOrientation" class="- topic/link "><linktext class="- topic/linktext ">deviceOrientation</linktext></link></related-links></adobeApiEvent><apiConstructor id="flash.events:StageOrientationEvent:StageOrientationEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">StageOrientationEvent</apiName><shortdesc class="- topic/shortdesc ">
    Crée un objet StageOrientationEvent à l’aide d’informations spécifiques relatives aux événements d’orientation de la scène.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">type</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc "> Type d’événement : <codeph class="+ topic/ph pr-d/codeph ">StageOrientationEvent.ORIENTATION_CHANGE</codeph>
    </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">bubbles</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc "> Indique si l’objet Event prend part à la phase de propagation vers le haut (bubbling) du flux d’événements.
    </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">cancelable</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Indique si l’objet Event peut être annulé.
    </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">beforeOrientation</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Indique l’orientation avant le changement.
    </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">afterOrientation</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Indique l’orientation après le changement. 
    
    </apiDesc></apiParam></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Crée un objet StageOrientationEvent à l’aide d’informations spécifiques relatives aux événements d’orientation de la scène. Les objets Event sont transmis en tant que paramètres aux écouteurs d’événement. En général, vous ne créez pas cet événement à l’aide de la fonction constructeur. Au lieu de cela, vous ajoutez un écouteur d’événement sur l’objet Stage pour détecter ces événements à mesure qu’ils se produisent. 
    
    </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="flash.events:StageOrientationEvent:clone" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">clone</apiName><shortdesc class="- topic/shortdesc ">
    Crée une copie de l’objet StageOrientationEvent et définit la valeur de chaque propriété de sorte qu’elle corresponde à la valeur d’origine.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Nouvel objet StageOrientationEvent dont les propriétés ont la même valeur que celles de l’objet d’origine.
    </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.events:Event</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Crée une copie de l’objet StageOrientationEvent et définit la valeur de chaque propriété de sorte qu’elle corresponde à la valeur d’origine.
    
    </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.events:StageOrientationEvent:toString" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">toString</apiName><shortdesc class="- topic/shortdesc ">
    Renvoie une chaîne répertoriant toutes les propriétés de l’objet StageOrientationEvent.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Chaîne répertoriant toutes les propriétés de l’objet StageOrientationEvent.
    </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Renvoie une chaîne répertoriant toutes les propriétés de l’objet StageOrientationEvent. La chaîne présente le format suivant :
    <p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">[StageOrientationEvent type=<i class="+ topic/ph hi-d/i ">valeur</i> bubbles=<i class="+ topic/ph hi-d/i ">valeur</i> cancelable=<i class="+ topic/ph hi-d/i ">valeur</i> beforeDisplayState=<i class="+ topic/ph hi-d/i ">valeur</i> afterDisplayState=<i class="+ topic/ph hi-d/i ">valeur</i>]</codeph></p>
    
    </apiDesc></apiOperationDetail></apiOperation><apiValue id="flash.events:StageOrientationEvent:ORIENTATION_CHANGE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">ORIENTATION_CHANGE</apiName><shortdesc class="- topic/shortdesc ">
    La constante ORIENTATION_CHANGE définit la valeur de la propriété type d’un objet d’événement orientationChange.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">orientationChange</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    La constante <codeph class="+ topic/ph pr-d/codeph ">ORIENTATION_CHANGE</codeph> définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet d’événement <codeph class="+ topic/ph pr-d/codeph ">orientationChange</codeph>. Les propriétés de cet événement sont les suivantes :
    
    <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriétés</entry><entry class="- topic/entry ">Valeurs</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">afterOrientation</codeph></entry><entry class="- topic/entry ">Nouvelle orientation de la scène.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">beforeOrientation</codeph></entry><entry class="- topic/entry ">Ancienne orientation de la scène.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Objet Stage ayant distribué le changement d’orientation. 
    </entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Indique l’objet qui traite activement l’objet Event avec un écouteur d’événements.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; il est trop tard pour annuler la modification.</entry></row></tbody></tgroup></adobetable>
    
    </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#Stage" class="- topic/link "><linktext class="- topic/linktext ">flash.display.Stage</linktext></link><link href="flash.display.xml#Stage/deviceOrientation" class="- topic/link "><linktext class="- topic/linktext ">deviceOrientation</linktext></link></related-links></apiValue><apiValue id="flash.events:StageOrientationEvent:ORIENTATION_CHANGING" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">ORIENTATION_CHANGING</apiName><shortdesc class="- topic/shortdesc ">
    La constante ORIENTATION_CHANGING définit la valeur de la propriété type d’un objet d’événement orientationChanging.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">orientationChanging</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    La constante <codeph class="+ topic/ph pr-d/codeph ">ORIENTATION_CHANGING</codeph> définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet d’événement <codeph class="+ topic/ph pr-d/codeph ">orientationChanging</codeph>.  
    
    <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Important :</b> les événements ORIENTATION_CHANGING ne sont pas distribués sur les périphériques Android.</p>
    
    Les propriétés de cet événement sont les suivantes :
    
    <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriétés</entry><entry class="- topic/entry ">Valeurs</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">afterOrientation</codeph></entry><entry class="- topic/entry ">Nouvelle orientation de la scène.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">beforeOrientation</codeph></entry><entry class="- topic/entry ">Ancienne orientation de la scène.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Objet Stage ayant distribué le changement d’orientation. 
    </entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">Indique l’objet qui traite activement l’objet Event avec un écouteur d’événements.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph>.</entry></row></tbody></tgroup></adobetable>
    </apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:StageOrientationEvent:afterOrientation:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">afterOrientation</apiName><shortdesc class="- topic/shortdesc ">
             Orientation de la fenêtre après le changement.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
             Orientation de la fenêtre après le changement.
               
             
             </apiDesc></apiValueDetail></apiValue><apiValue id="flash.events:StageOrientationEvent:beforeOrientation:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">beforeOrientation</apiName><shortdesc class="- topic/shortdesc ">
             Orientation de la fenêtre avant le changement.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
             Orientation de la fenêtre avant le changement.  
             
             </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.events:ActivityEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">ActivityEvent</apiName><shortdesc class="- topic/shortdesc ">
Un objet Camera ou Microphone distribue un objet ActivityEvent chaque fois qu’une caméra ou un microphone signale qu’il est devenu actif ou inactif.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage name="ActionScript" version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Objets event associés aux événements ActivityEvent.
</apiTipText></apiTipTexts><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
Un objet Camera ou Microphone distribue un objet ActivityEvent chaque fois qu’une caméra ou un microphone signale qu’il est devenu actif ou inactif. Il n’existe qu’un seul type d’événement activity : <codeph class="+ topic/ph pr-d/codeph ">ActivityEvent.ACTIVITY</codeph>.

</apiDesc><example conref="examples\ActivityEventExample.as" class="- topic/example "> L’exemple suivant décrit l’utilisation de la classe ActivityEvent en associant une méthode d’écouteur d’événements nommée <codeph class="+ topic/ph pr-d/codeph ">activityHandler()</codeph> au microphone et en générant des informations de texte chaque fois que le microphone génère un événement <codeph class="+ topic/ph pr-d/codeph ">activity</codeph>.
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">

package {
    import flash.display.Sprite;
    import flash.events.ActivityEvent;
    import flash.media.Microphone;

    public class ActivityEventExample extends Sprite {
        public function ActivityEventExample() {
            var mic:Microphone = Microphone.getMicrophone();
            mic.addEventListener(ActivityEvent.ACTIVITY, activityHandler);
        }

        private function activityHandler(event:ActivityEvent):void {
            trace("event: " + event);
            trace("event.activating: " + event.activating);
        }
    }
}
</codeblock></example></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.events.xml#ActivityEvent/ACTIVITY" class="- topic/link "><linktext class="- topic/linktext ">ActivityEvent.ACTIVITY</linktext></link></related-links><adobeApiEvent id="flash.events:ActivityEvent:ACTIVITY_activity" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">activity</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events:ActivityEvent:ACTIVITY</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:ActivityEvent</adobeApiEventClassifier><apiDefinedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiDefinedEvent "/></adobeApiEventDef></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.media.xml#Camera/event:activity" class="- topic/link "><linktext class="- topic/linktext ">flash.media.Camera.activity</linktext></link><link href="flash.media.xml#Microphone/event:activity" class="- topic/link "><linktext class="- topic/linktext ">flash.media.Microphone.activity</linktext></link></related-links></adobeApiEvent><apiConstructor id="flash.events:ActivityEvent:ActivityEvent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">ActivityEvent</apiName><shortdesc class="- topic/shortdesc ">
	Crée un objet événement contenant des informations sur les événements activity.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage name="ActionScript" version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">type</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc "> Type de l’événement. Les écouteurs d’événement peuvent accéder à cette information par le biais de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> héritée. Il n’existe qu’un seul type d’événement activity : <codeph class="+ topic/ph pr-d/codeph ">ActivityEvent.ACTIVITY</codeph>.
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">bubbles</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Détermine si l’objet Event prend part à la phase de propagation du flux d’événements. Les écouteurs d’événement peuvent accéder à cette information par le biais de la propriété <codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph> héritée.  
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">cancelable</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Détermine si l’objet Event peut être annulé. Les écouteurs d’événement peuvent accéder à cette information par le biais de la propriété <codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph> héritée. 
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">activating</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Indique si le périphérique est activé (<codeph class="+ topic/ph pr-d/codeph ">true</codeph>) ou désactivé (<codeph class="+ topic/ph pr-d/codeph ">false</codeph>). Les écouteurs d’événement peuvent accéder à cette information par le biais de la propriété <codeph class="+ topic/ph pr-d/codeph ">activating</codeph>.
	
	</apiDesc></apiParam><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Constructeur associé aux objets ActivityEvent.
	</apiTipText></apiTipTexts></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Crée un objet événement contenant des informations sur les événements activity. Les objets Event sont transmis en tant que paramètres aux écouteurs d’événement.
	
	</apiDesc></apiConstructorDetail><related-links class="- topic/related-links "><link href="flash.events.xml#ActivityEvent/ACTIVITY" class="- topic/link "><linktext class="- topic/linktext ">ActivityEvent.ACTIVITY</linktext></link></related-links></apiConstructor><apiOperation id="flash.events:ActivityEvent:clone" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">clone</apiName><shortdesc class="- topic/shortdesc ">
	Créer une copie de l’objet ActivityEvent et définit la valeur de chaque propriété de sorte qu’elle corresponde à la valeur d’origine.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Nouvel objet ActivityEvent dont les propriétés ont la même valeur que celles de l’objet d’origine.
	</apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.events:Event</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Créer une copie de l’objet ActivityEvent et définit la valeur de chaque propriété de sorte qu’elle corresponde à la valeur d’origine. 
	
	</apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.events:ActivityEvent:toString" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">toString</apiName><shortdesc class="- topic/shortdesc ">
	Renvoie une chaîne répertoriant toutes les propriétés de l’objet ActivityEvent.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage name="ActionScript" version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Chaîne répertoriant toutes les propriétés de l’objet ActivityEvent.
	</apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Renvoie une chaîne répertoriant toutes les propriétés de l’objet ActivityEvent. Le format utilisé est le suivant :
	<p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">[ActivityEvent type=<i class="+ topic/ph hi-d/i ">valeur</i> bubbles=<i class="+ topic/ph hi-d/i ">valeur</i> cancelable=<i class="+ topic/ph hi-d/i ">valeur</i> activating=<i class="+ topic/ph hi-d/i ">valeur</i>]</codeph></p>
	
	</apiDesc></apiOperationDetail></apiOperation><apiValue id="flash.events:ActivityEvent:ACTIVITY" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">ACTIVITY</apiName><shortdesc class="- topic/shortdesc ">
	La constante ActivityEvent.ACTIVITY définit la valeur de la propriété type d’un objet événement activity.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage name="ActionScript" version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">activity</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	La constante <codeph class="+ topic/ph pr-d/codeph ">ActivityEvent.ACTIVITY</codeph> définit la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> d’un objet événement <codeph class="+ topic/ph pr-d/codeph ">activity</codeph>. 
	<p class="- topic/p ">Les propriétés de cet événement sont les suivantes :</p>
	 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Valeur</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">activating</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> si le périphérique est activé ou <codeph class="+ topic/ph pr-d/codeph ">false</codeph> s’il est désactivé.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">bubbles</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cancelable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">false</codeph> ; il n’existe aucun comportement par défaut à annuler.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">currentTarget</codeph></entry><entry class="- topic/entry ">L’objet qui traite activement l’objet Event avec un écouteur d’événements.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">target</codeph></entry><entry class="- topic/entry ">Objet commençant ou terminant une session, tel qu’un objet Camera ou Microphone.</entry></row></tbody></tgroup></adobetable>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.media.xml#Camera/event:activity" class="- topic/link "><linktext class="- topic/linktext ">flash.media.Camera.activity</linktext></link><link href="flash.media.xml#Microphone/event:activity" class="- topic/link "><linktext class="- topic/linktext ">flash.media.Microphone.activity</linktext></link></related-links></apiValue><apiValue id="flash.events:ActivityEvent:activating:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">activating</apiName><shortdesc class="- topic/shortdesc ">
	Indique si le périphérique est activé (true) ou désactivé (false).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage name="ActionScript" version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Indique si le périphérique est activé (<codeph class="+ topic/ph pr-d/codeph ">true</codeph>) ou désactivé (<codeph class="+ topic/ph pr-d/codeph ">false</codeph>).
	
	</apiDesc></apiValueDetail></apiValue></apiClassifier></apiPackage>