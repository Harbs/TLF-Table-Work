<?xml version="1.0" encoding="UTF-8"?>
<!--

  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.

-->
<apiPackage xmlns:ditaarch="http://dita.oasis-open.org/architecture/2005/" id="flash.net" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiPackage/apiPackage "><apiName class="- topic/title reference/title apiRef/apiName ">flash.net</apiName><apiDetail class="- topic/body reference/refbody apiRef/apiDetail "/><apiClassifier languages="" id="flash.net:XMLSocket" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">XMLSocket</apiName><shortdesc class="- topic/shortdesc ">
 
 La classe XMLSocket implémente les sockets client qui permettent à Flash Player ou à l’application AIR de communiquer avec un ordinateur serveur identifié par une adresse IP ou un nom de domaine.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">XMLsocket, XMLsocket object, built-in class
 </keyword></asCustoms></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:EventDispatcher</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 
 La classe XMLSocket implémente les sockets client qui permettent à <ph class="- topic/ph ">Flash Player ou </ph>à l’application AIR de communiquer avec un ordinateur serveur identifié par une adresse IP ou un nom de domaine. La classe XMLSocket est utile pour les applications clients/serveur qui requièrent un court délai, telles que des systèmes de dialogue en ligne en temps réel. Une solution de dialogue en ligne par HTTP classique interroge fréquemment le serveur et télécharge les nouveaux messages à l’aide d’une requête HTTP. Par contraste, une solution de dialogue en ligne XMLSocket maintient une connexion ouverte avec le serveur, permettant à celui-ci d’envoyer immédiatement les messages entrants sans requête du client. Pour utiliser la classe XMLSocket, l’ordinateur serveur doit exécuter un démon capable de lire le protocole utilisé par la classe XMLSocket. Le protocole est décrit dans la liste suivante : 
 <ul class="- topic/ul "><li class="- topic/li ">Les messages XML sont envoyés via une connexion socket à flux TCP/IP bidirectionnel simultané.</li><li class="- topic/li ">Chaque message XML est un document XML complet, terminé par un octet nul (0).</li><li class="- topic/li ">Un nombre illimité de messages XML peut être envoyé et reçu via une connexion XMLSocket.</li></ul>
 
 <p class="- topic/p ">La configuration d’un serveur en vue de la communication avec un objet XMLSocket peut être difficile à réaliser. Si votre application ne requiert pas d’interactivité en temps réel, utilisez la classe URLLoader, plutôt que la classe XMLSocket. </p>
 
 <p class="- topic/p ">Pour utiliser les méthodes de la classe XMLSocket, utilisez tout d’abord le constructeur, <codeph class="+ topic/ph pr-d/codeph ">new XMLSocket</codeph>, pour créer un objet XMLSocket.</p>
 
 <p class="- topic/p ">Les fichiers SWF du sandbox local avec système de fichiers peuvent ne pas utiliser de sockets.</p>
      
  <p class="- topic/p "> Les <i class="+ topic/ph hi-d/i ">fichiers de régulation de socket</i> situés sur l’hôte cible spécifient les hôtes à partir desquels les fichiers SWF peuvent établir des connexions de socket et les ports sur lesquels ces connexions peuvent être établies. Les exigences de sécurité relatives aux fichiers de régulation de socket sont devenues plus rigoureuses avec les dernières versions de Flash Player. Dans toutes les versions de Flash Player, Adobe recommande d’utiliser un fichier de régulation de socket ; dans certains cas, un tel fichier est même obligatoire. Ainsi, si vous utilisez des objets XMLSocket, assurez-vous que l’hôte cible fournisse au besoin un fichier de régulation de socket. </p>
 
  <p class="- topic/p ">Voici une liste résumant les exigences relatives aux fichiers de régulation de socket dans les différentes versions de Flash Player :</p>
 
  <ul class="- topic/ul "><li class="- topic/li "> Dans Flash Player 9.0.124.0 et versions ultérieures, un fichier de régulation de socket est obligatoire pour toutes les connexions XMLSocket. Cela signifie qu’un fichier de régulation de socket doit obligatoirement se trouver sur l’hôte cible, quel que soit le port sur lequel s’établit la connexion, et est obligatoire même si vous vous connectez à un port situé sur l’hôte servant le fichier SWF. </li><li class="- topic/li "> Dans Flash Player versions 9.0.115.0 et ultérieures, si vous souhaitez vous connecter à un numéro de port inférieur à 1024, ou à un hôte autre que celui qui sert le fichier SWF, un fichier de régulation de socket est obligatoire sur l’hôte cible. </li><li class="- topic/li "> Dans Flash Player 9.0.115.0, même si le fichier de régulation de socket n’est pas obligatoire, l’utilisation du débogueur de Flash Player entraîne l’affichage d’un avertissement si l’hôte cible ne fournit pas de fichier de régulation de socket. </li></ul>
 
 <p class="- topic/p ">Néanmoins, dans Adobe AIR, le contenu du sandbox de sécurité <codeph class="+ topic/ph pr-d/codeph ">application</codeph> (contenu installé avec l’application AIR) n’est pas soumis à ces restrictions de sécurité.</p>
 
 <p class="- topic/p ">Pour plus d’informations concernant la sécurité, voir la rubrique du Pôle de développement Flash Player : <xref href="http://www.adobe.com/go/devnet_security_fr" scope="external" class="- topic/xref ">Sécurité</xref> (disponible en anglais uniquement).</p>
 
 </apiDesc><example conref="examples\XMLSocketExample.as" class="- topic/example "> L’exemple suivant utilise la classe XMLSocketExample pour envoyer des données à l’aide d’un XMLSocket et imprimer des informations pendant des événements XMLSocket. Pour ce faire, exécutez la procédure suivante :
 <ol class="- topic/ol "><li class="- topic/li ">Le constructeur XMLSocketExample crée une occurrence de XMLSocket nommée <codeph class="+ topic/ph pr-d/codeph ">socket</codeph> et transmet le <codeph class="+ topic/ph pr-d/codeph ">socket</codeph> à la méthode <codeph class="+ topic/ph pr-d/codeph ">ConfigureListeners()</codeph> (décrite ci-dessous), puis appelle la méthode <codeph class="+ topic/ph pr-d/codeph ">connect()</codeph> de XMLSocket avec le nom d’hôte « localhost » et le numéro de port <codeph class="+ topic/ph pr-d/codeph ">8080</codeph>.</li><li class="- topic/li ">La méthode <codeph class="+ topic/ph pr-d/codeph ">configureListeners()</codeph> est ensuite appelée, ce qui ajoute des écouteurs à chacun des événements XMLSocket pris en charge :
  <ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">closeHandler()</codeph> : écoute l’événement <codeph class="+ topic/ph pr-d/codeph ">close</codeph>, qui est distribué après la fermeture de la connexion réseau.</li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">connectHandler()</codeph> : écoute l’événement <codeph class="+ topic/ph pr-d/codeph ">connect</codeph>, qui est distribué à l’ouverture de la connexion réseau.</li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">dataHandler()</codeph> : écoute l’événement <codeph class="+ topic/ph pr-d/codeph ">data</codeph>, qui est distribué chaque fois que le XMLSocket reçoit de nouvelles données.</li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">progressHandler()</codeph> : écoute l’événement <codeph class="+ topic/ph pr-d/codeph ">progress</codeph>, qui est distribué à chaque appel de la méthode <codeph class="+ topic/ph pr-d/codeph ">send()</codeph> et pendant l’envoi.</li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">securityErrorHandler()</codeph> : écoute l’événement <codeph class="+ topic/ph pr-d/codeph ">securityError</codeph>, qui est distribué en cas de tentative d’accès au XMLSocket avec un paramètre de sécurité de lecture locale incorrect ou avec un numéro de port inférieur à 1024.</li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">ioErrorHandler()</codeph> : écoute l’événement <codeph class="+ topic/ph pr-d/codeph ">ioError</codeph>, qui se produit uniquement en cas d’échec d’une opération d’envoi ou de réception de données.</li></ul></li></ol>
 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Remarques :</b>
 <ul class="- topic/ul "><li class="- topic/li ">Vous devrez compiler le fichier SWF en définissant « Sécurité de lecture locale » sur « Accès au réseau uniquement ».</li><li class="- topic/li ">Pour que cet exemple fonctionne, vous devez disposer d’un serveur s’exécutant sur votre domaine à l’aide du port 8080.</li><li class="- topic/li ">Si vous exécutez Flash Player 9.0.124.0 ou une version ultérieure, vous devez placer sur votre serveur un fichier de régulation de socket autorisant les connexions de socket de votre domaine au port 8080. Pour plus d’informations sur la fourniture de fichiers de régulation de socket, voir la rubrique : <xref href="http://www.adobe.com/devnet/flashplayer/articles/socket_policy_files.html" scope="external" class="- topic/xref "> Configuration d’un serveur de fichier de régulation de socket</xref> du Centre des développeurs de Flash Player.</li></ul>
 </p>
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">

package {
    import flash.display.Sprite;
    import flash.events.*;
    import flash.net.XMLSocket;

    public class XMLSocketExample extends Sprite {
        private var hostName:String = "localhost";
        private var port:uint = 8080;
        private var socket:XMLSocket;

        public function XMLSocketExample() {
            socket = new XMLSocket();
            configureListeners(socket);
            if (hostName &amp;&amp; port) {
                socket.connect(hostName, port);
            }
        }

        public function send(data:Object):void {
            socket.send(data);
        }

        private function configureListeners(dispatcher:IEventDispatcher):void {
            dispatcher.addEventListener(Event.CLOSE, closeHandler);
            dispatcher.addEventListener(Event.CONNECT, connectHandler);
            dispatcher.addEventListener(DataEvent.DATA, dataHandler);
            dispatcher.addEventListener(IOErrorEvent.IO_ERROR, ioErrorHandler);
            dispatcher.addEventListener(ProgressEvent.PROGRESS, progressHandler);
            dispatcher.addEventListener(SecurityErrorEvent.SECURITY_ERROR, securityErrorHandler);
        }

        private function closeHandler(event:Event):void {
            trace("closeHandler: " + event);
        }

        private function connectHandler(event:Event):void {
            trace("connectHandler: " + event);
        }

        private function dataHandler(event:DataEvent):void {
            trace("dataHandler: " + event);
        }

        private function ioErrorHandler(event:IOErrorEvent):void {
            trace("ioErrorHandler: " + event);
        }

        private function progressHandler(event:ProgressEvent):void {
            trace("progressHandler loaded:" + event.bytesLoaded + " total: " + event.bytesTotal);
        }

        private function securityErrorHandler(event:SecurityErrorEvent):void {
            trace("securityErrorHandler: " + event);
        }
    }
}
</codeblock></example></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.net.xml#URLLoader/load()" class="- topic/link "><linktext class="- topic/linktext ">flash.net.URLLoader.load()</linktext></link><link href="flash.net.xml#URLLoader" class="- topic/link "><linktext class="- topic/linktext ">flash.net.URLLoader</linktext></link></related-links><adobeApiEvent id="flash.net:XMLSocket_flash.events.SecurityErrorEvent.SECURITY_ERROR_securityError" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">securityError</apiName><shortdesc class="- topic/shortdesc ">
 Distribué si un appel de la méthode Socket.connect() tente une connexion à un serveur situé hors du sandbox de sécurité de l’appelant ou à un port inférieur à 1024.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.SecurityErrorEvent.SECURITY_ERROR</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.SecurityErrorEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Distribué si un appel de la méthode <codeph class="+ topic/ph pr-d/codeph ">XMLSocket.connect()</codeph> tente une connexion à un serveur situé hors du sandbox de sécurité de l’appelant ou à un port inférieur à 1024.
 </apiDesc></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.net.xml#XMLSocket/connect()" class="- topic/link "><linktext class="- topic/linktext ">XMLSocket.connect()</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.net:XMLSocket_flash.events.IOErrorEvent.IO_ERROR_ioError" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">ioError</apiName><shortdesc class="- topic/shortdesc ">
 Distribué lorsqu’il se produit une erreur d’entrée/sortie entraînant l’échec d’une opération d’envoi ou de réception.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.IOErrorEvent.IO_ERROR</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.IOErrorEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Distribué lorsqu’il se produit une erreur d’entrée/sortie entraînant l’échec d’une opération d’envoi ou de réception. 
 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flash.net:XMLSocket_flash.events.DataEvent.DATA_data" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">data</apiName><shortdesc class="- topic/shortdesc ">
 Distribué après l’envoi ou la réception de données brutes.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.DataEvent.DATA</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.DataEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Distribué après l’envoi ou la réception de données brutes.
 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flash.net:XMLSocket_flash.events.Event.CONNECT_connect" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">connect</apiName><shortdesc class="- topic/shortdesc ">
 Distribué après un appel de la méthode XMLSocket.connect() qui a abouti.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.Event.CONNECT</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.Event</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Distribué après un appel de la méthode <codeph class="+ topic/ph pr-d/codeph ">XMLSocket.connect()</codeph> qui a abouti.
 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flash.net:XMLSocket_flash.events.Event.CLOSE_close" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">close</apiName><shortdesc class="- topic/shortdesc ">
 Distribué lorsque le serveur ferme la connexion socket.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.Event.CLOSE</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.Event</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Distribué lorsque le serveur ferme la connexion socket. L’événement <codeph class="+ topic/ph pr-d/codeph ">close</codeph> se produit uniquement lorsque le serveur ferme la connexion. Il n’est pas distribué lorsque vous appelez la méthode <codeph class="+ topic/ph pr-d/codeph ">XMLSocket.close()</codeph>.
 </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="flash.net:XMLSocket:XMLSocket" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">XMLSocket</apiName><shortdesc class="- topic/shortdesc ">
    Crée un objet XMLSocket.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">host</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Nom de domaine DNS complet ou adresse IP au format <i class="+ topic/ph hi-d/i ">222.333.444</i>. Dans Flash Player 9.0.115.0 et AIR 1.0 et les versions ultérieures, vous pouvez spécifier les adresses IPv6, telles que rtmp://[2001:db8:ccc3:ffff:0:444d:555e:666f]. Vous pouvez également spécifier <codeph class="+ topic/ph pr-d/codeph ">null</codeph> pour vous connecter au serveur hôte qui héberge le fichier SWF. Si le fichier SWF effectuant cet appel s’exécute dans un navigateur Web, <codeph class="+ topic/ph pr-d/codeph ">host</codeph> doit appartenir au même domaine que le fichier SWF.
    
    </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">port</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Numéro du port TCP utilisé sur l’hôte cible pour établir une connexion. Dans Flash Player 9.0.124.0 et les versions ultérieures, l’hôte cible doit fournir un fichier de régulation de socket spécifiant que les connexions de socket sont autorisées depuis l’hôte fournissant le fichier SWF vers le port spécifié. Dans les versions précédentes de Flash Player, le fichier de régulation de socket n’est obligatoire que si vous souhaitez vous connecter à un numéro de port inférieur à 1024 ou à un hôte autre que celui servant le fichier SWF.
    
    
    </apiDesc></apiParam></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Crée un objet XMLSocket. En l’absence de paramètres, un socket initialement déconnecté est créé. Si des paramètres sont spécifiés, une tentative de connexion à l’hôte et au port indiqués est effectuée.
    
    <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Remarque :</b> il est fortement conseillé d’utiliser la forme du constructeur <b class="+ topic/ph hi-d/b ">sans paramètre</b>, d’ajouter ensuite des écouteurs d’événement éventuels, puis d’appeler la méthode <codeph class="+ topic/ph pr-d/codeph ">connect</codeph> avec les paramètres <codeph class="+ topic/ph pr-d/codeph ">host</codeph> et <codeph class="+ topic/ph pr-d/codeph ">port</codeph>. Cette séquence garantit que tous les écouteurs d’événement fonctionnent correctement.</p>
    
    </apiDesc></apiConstructorDetail><related-links class="- topic/related-links "><link href="flash.net.xml#XMLSocket/connect()" class="- topic/link "><linktext class="- topic/linktext ">connect()</linktext></link></related-links></apiConstructor><apiOperation id="flash.net:XMLSocket:close" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">close</apiName><shortdesc class="- topic/shortdesc ">
     Ferme la connexion spécifiée par l’objet XMLSocket.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">xmlsocket.close, close
      
      </keyword></asCustoms></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Ferme la connexion spécifiée par l’objet XMLSocket. L’événement <codeph class="+ topic/ph pr-d/codeph ">close</codeph> se produit uniquement lorsque le serveur ferme la connexion. Il n’est pas distribué lorsque vous appelez la méthode <codeph class="+ topic/ph pr-d/codeph ">close()</codeph>.
     
     </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#XMLSocket/connect()" class="- topic/link "><linktext class="- topic/linktext ">connect()</linktext></link></related-links></apiOperation><apiOperation id="flash.net:XMLSocket:connect" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">connect</apiName><shortdesc class="- topic/shortdesc ">
     Etablit une connexion à l’hôte Internet spécifié en utilisant le port TCP indiqué.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">xmlsocket.connect, connect
     
     </keyword></asCustoms></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Les fichiers non approuvés au niveau local ne peuvent pas communiquer avec Internet. Pour contourner cette restriction, reclassifiez le fichier en tant que fichier local avec accès au réseau ou en tant que fichier approuvé.
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">SecurityError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">SecurityError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Il est impossible de spécifier un port de socket supérieur à 65535.
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">SecurityError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">SecurityError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">host</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Nom de domaine DNS complet ou adresse IP au format <i class="+ topic/ph hi-d/i ">111.222.333.444</i>. Vous pouvez également spécifier <codeph class="+ topic/ph pr-d/codeph ">null</codeph> pour vous connecter au serveur hôte qui héberge le fichier SWF. Si le fichier appelant est un fichier SWF s’exécutant dans un navigateur Web, <codeph class="+ topic/ph pr-d/codeph ">host</codeph> doit appartenir au même domaine que le fichier.
     
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">port</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Numéro du port TCP utilisé sur l’hôte cible pour établir une connexion. Dans Flash Player 9.0.124.0 et les versions ultérieures, l’hôte cible doit fournir un fichier de régulation de socket spécifiant que les connexions de socket sont autorisées depuis l’hôte fournissant le fichier SWF vers le port spécifié. Dans les versions précédentes de Flash Player, le fichier de régulation de socket n’est obligatoire que si vous souhaitez vous connecter à un numéro de port inférieur à 1024 ou à un hôte autre que celui servant le fichier SWF.
     
     
     </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Etablit une connexion à l’hôte Internet spécifié en utilisant le port TCP indiqué.
     
     <p class="- topic/p ">Si vous spécifiez <codeph class="+ topic/ph pr-d/codeph ">null</codeph> pour le paramètre <codeph class="+ topic/ph pr-d/codeph ">host</codeph>, l’hôte contacté est celui où réside le fichier appelant la méthode <codeph class="+ topic/ph pr-d/codeph ">XMLSocket.connect()</codeph>. Par exemple, si le fichier appelant a été téléchargé à partir du site www.adobe.com, le fait de spécifier <codeph class="+ topic/ph pr-d/codeph ">null</codeph> pour le paramètre host équivaut à se connecter à www.adobe.com.</p>
     
     
     <p class="- topic/p ">Vous pouvez empêcher un fichier d’utiliser cette méthode en définissant le paramètre <codeph class="+ topic/ph pr-d/codeph ">allowNetworking</codeph> des balises <codeph class="+ topic/ph pr-d/codeph ">object</codeph> et <codeph class="+ topic/ph pr-d/codeph ">embed</codeph> dans la page HTML qui comporte le contenu SWF.</p>
     
     <p class="- topic/p ">Pour plus d’informations, voir la rubrique du Pôle de développement Flash Player : <xref href="http://www.adobe.com/go/devnet_security_fr" scope="external" class="- topic/xref ">Sécurité</xref> (disponible en anglais uniquement).</p>
     
     </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.events.xml#Event/CONNECT" class="- topic/link "><linktext class="- topic/linktext ">flash.events.Event.CONNECT</linktext></link></related-links><adobeApiEvent id="flash.net:XMLSocket:connect_securityError" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">securityError</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:SecurityErrorEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Une opération de connexion a tenté de se connecter à un hôte situé hors du sandbox de sécurité de l’appelant ou à un port qui nécessite un fichier de régulation de socket. Pour contourner ces problèmes, utilisez un fichier de régulation de socket sur l’hôte cible.
     </apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">Une opération de connexion a tenté de se connecter à un hôte situé hors du sandbox de sécurité de l’appelant ou à un port qui nécessite un fichier de régulation de socket.</shortdesc></adobeApiEvent><adobeApiEvent id="flash.net:XMLSocket:connect_data" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">data</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:DataEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Distribué lors de la réception de données brutes.
     </apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">Distribué lors de la réception de données brutes.</shortdesc></adobeApiEvent><adobeApiEvent id="flash.net:XMLSocket:connect_connect" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">connect</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:Event</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Distribué lorsqu’une connexion réseau est établie. 
      
      </apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">Distribué lorsqu’une connexion réseau est établie.</shortdesc></adobeApiEvent></apiOperation><apiOperation id="flash.net:XMLSocket:send" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">send</apiName><shortdesc class="- topic/shortdesc ">
     Convertit l’objet ou les données XML spécifiés dans le paramètre object en une chaîne et la transmet au serveur, suivie d’un octet nul (0).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">xmlsocket.send, send
      
      </keyword></asCustoms></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">L’objet XMLSocket n’est pas connecté au serveur.
     
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IOError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IOError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">object</apiItemName><apiType value="any" name="type" class="- topic/state reference/state apiRef/apiType "/><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Objet XML ou toute autre donnée à transmettre au serveur.
     
     </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Convertit l’objet ou les données XML spécifiés dans le paramètre <codeph class="+ topic/ph pr-d/codeph ">object</codeph> en une chaîne et la transmet au serveur, suivie d’un octet nul (0). Si <codeph class="+ topic/ph pr-d/codeph ">object</codeph> est un objet XML, la chaîne est la représentation textuelle XML de l’objet XML. L’opération d’envoi est asynchrone ; elle est immédiatement renvoyée, mais les données peuvent être transmises plus tard. La méthode <codeph class="+ topic/ph pr-d/codeph ">XMLSocket.send()</codeph> ne renvoie pas de valeur indiquant si les données ont bien été transmises.
     
     <p class="- topic/p ">Si vous ne connectez pas l’objet XMLSocket au serveur à l’aide de <codeph class="+ topic/ph pr-d/codeph ">XMLSocket.connect()</codeph>, l’opération <codeph class="+ topic/ph pr-d/codeph ">XMLSocket.send()</codeph> échoue.</p>
     
     </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#XMLSocket/connect()" class="- topic/link "><linktext class="- topic/linktext ">connect()</linktext></link></related-links></apiOperation><apiValue id="flash.net:XMLSocket:connected:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">connected</apiName><shortdesc class="- topic/shortdesc ">
     Indique si l’objet XMLSocket est actuellement connecté.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Indique si l’objet XMLSocket est actuellement connecté. Vous pouvez également vérifier si la connexion a abouti en vous enregistrant pour les événements <codeph class="+ topic/ph pr-d/codeph ">connect</codeph> et <codeph class="+ topic/ph pr-d/codeph ">ioError</codeph>.
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#XMLSocket/event:connect" class="- topic/link "><linktext class="- topic/linktext ">connect</linktext></link><link href="flash.net.xml#XMLSocket/event:ioError" class="- topic/link "><linktext class="- topic/linktext ">ioError</linktext></link></related-links></apiValue><apiValue id="flash.net:XMLSocket:timeout:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">timeout</apiName><shortdesc class="- topic/shortdesc ">
     Indique le délai d’attente d’une connexion, en millisecondes.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">int</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Indique le délai d’attente d’une connexion, en millisecondes.
     
     <p class="- topic/p ">Si la connexion n’est pas établie pendant le délai spécifié, elle échoue. La valeur par défaut est de 20 000 (vingt secondes).</p>
     
     </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.net:IPVersion" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">IPVersion</apiName><shortdesc class="- topic/shortdesc ">
	 La classe IPVersion définit des constantes représentant les différentes familles d’adresses IP.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 La classe IPVersion définit des constantes représentant les différentes familles d’adresses IP.
	 
 	 </apiDesc></apiClassifierDetail><apiValue id="flash.net:IPVersion:IPV4" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">IPV4</apiName><shortdesc class="- topic/shortdesc ">
		 Adresse IPv4 (protocole Internet version 4).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">IPv4</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 Adresse IPv4 (protocole Internet version 4).
		 
		 <p class="- topic/p ">Les adresses IPv4 sont exprimées dans ActionScript sous forme de chaîne en notation point-décimale, par exemple : <codeph class="+ topic/ph pr-d/codeph ">"192.0.2.0"</codeph>.</p> 
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:IPVersion:IPV6" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">IPV6</apiName><shortdesc class="- topic/shortdesc ">
		 Adresse IPv6 (protocole Internet version 6).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">IPv6</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 Adresse IPv6 (protocole Internet version 6).
		 
		 <p class="- topic/p ">Les adresses IPv6 sont exprimées dans ActionScript sous forme de chaîne en notation hexadécimale-deux points et entre crochets, par exemple : <codeph class="+ topic/ph pr-d/codeph ">"[2001:db8:ccc3:ffff:0:444d:555e:666f]"</codeph>.</p>
		  
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.net:Socket" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">Socket</apiName><shortdesc class="- topic/shortdesc ">
 La classe Socket permet au code d’établir des connexions socket TCP (Transport Control Protocol, protocole de contrôle de transmission) pour l’envoi et la réception de données binaires.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiBaseInterface>flash.utils:IDataInput</apiBaseInterface><apiBaseInterface>flash.utils:IDataOutput</apiBaseInterface><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:EventDispatcher</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 La classe Socket permet au code d’établir des connexions socket TCP (Transport Control Protocol, protocole de contrôle de transmission) pour l’envoi et la réception de données binaires.
 
 <p class="- topic/p ">La classe Socket est utile si vous utilisez des serveurs faisant appel à des protocoles binaires.</p>
 
 <p class="- topic/p ">Pour utiliser les méthodes de la classe Socket, utilisez tout d’abord le constructeur, <codeph class="+ topic/ph pr-d/codeph ">new Socket</codeph>, pour créer un objet Socket.</p>
 
 <p class="- topic/p ">Un socket transmet et reçoit des données en mode asynchrone. </p>
 
 <p class="- topic/p ">Sur certaines systèmes d’exploitation, la méthode flush() est appelée automatiquement entre les images d’exécution. Sur d’autres, notamment sur Windows, les données ne sont jamais envoyées, à moins que vous n’appeliez explicitement la méthode <codeph class="+ topic/ph pr-d/codeph ">flush()</codeph>. Pour assurer la fiabilité de votre application sur tous les systèmes d’exploitation, il est judicieux d’appeler la méthode <codeph class="+ topic/ph pr-d/codeph ">flush()</codeph> après l’écriture de chaque message (ou du groupe de données associé) sur le socket.</p>
 
 <p class="- topic/p ">Dans Adobe AIR, les objets Socket sont également créés lorsqu’un serveur socket d’écoute reçoit une connexion provenant d’un processus externe. Le socket représentant la connexion est distribué dans un ServerSocketConnectEvent. Votre application est chargée de maintenir une référence à cet objet Socket. Dans le cas contraire, l’objet Socket peut être nettoyé et détruit par le moteur d’exécution sans avertissement.</p>
 
 <p class="- topic/p ">Le contenu SWF s’exécutant dans le sandbox de sécurité local avec système de fichiers ne peut pas utiliser de sockets.</p>
 
  <p class="- topic/p "> Les <i class="+ topic/ph hi-d/i ">fichiers de régulation de socket</i> situés sur l’hôte cible spécifient les hôtes à partir desquels les fichiers SWF peuvent établir des connexions de socket et les ports sur lesquels ces connexions peuvent être établies. Les exigences de sécurité relatives aux fichiers de régulation de socket sont devenues plus rigoureuses avec les dernières versions de Flash Player. Dans toutes les versions de Flash Player, Adobe recommande d’utiliser un fichier de régulation de socket ; dans certains cas, un tel fichier est même obligatoire. Par conséquent, si vous utilisez des objets Socket, assurez-vous que l’hôte cible fournisse, le cas échéant, un fichier de régulation de socket. </p>
 
  <p class="- topic/p ">Voici une liste résumant les exigences relatives aux fichiers de régulation de socket dans les différentes versions de Flash Player :</p>
 
  <ul class="- topic/ul "><li class="- topic/li "> Dans Flash Player 9.0.124.0 et les versions ultérieures, un fichier de régulation de socket est requis pour toutes les connexions socket. Cela signifie qu’un fichier de régulation de socket doit obligatoirement se trouver sur l’hôte cible, quel que soit le port sur lequel s’établit la connexion, et est obligatoire même si vous vous connectez à un port situé sur l’hôte servant le fichier SWF. </li><li class="- topic/li "> Dans Flash Player versions 9.0.115.0 et ultérieures, si vous souhaitez vous connecter à un numéro de port inférieur à 1024, ou à un hôte autre que celui qui sert le fichier SWF, un fichier de régulation de socket est obligatoire sur l’hôte cible. </li><li class="- topic/li "> Dans Flash Player 9.0.115.0, même si le fichier de régulation de socket n’est pas obligatoire, l’utilisation du débogueur de Flash Player entraîne l’affichage d’un avertissement si l’hôte cible ne fournit pas de fichier de régulation de socket. </li><li class="- topic/li ">Dans AIR, aucun fichier de régulation de socket n’est requis pour le contenu s’exécutant dans le sandbox de sécurité de l’application. Les fichiers de régulation de socket sont requis pour toute connexion socket établie par le contenu s’exécutant en dehors du sandbox de sécurité de l’application AIR.</li></ul>
 
 <p class="- topic/p ">Pour plus d’informations concernant la sécurité, voir la rubrique du Pôle de développement Flash Player : <xref href="http://www.adobe.com/go/devnet_security_fr" scope="external" class="- topic/xref ">Sécurité</xref> (disponible en anglais uniquement).
 </p>
 
 </apiDesc><example conref="examples\SocketExample.as" class="- topic/example "> L’exemple suivant écrit et lit dans un socket et produit des informations transmises pendant des événements de socket. Vous trouverez ci-dessous des extraits de l’exemple :
 <ol class="- topic/ol "><li class="- topic/li ">Le constructeur crée une occurrence de <codeph class="+ topic/ph pr-d/codeph ">CustomSocket</codeph> nommée <codeph class="+ topic/ph pr-d/codeph ">socket</codeph> et transmet le nom d’hôte <codeph class="+ topic/ph pr-d/codeph ">localhost</codeph> et le port 80 comme arguments. <codeph class="+ topic/ph pr-d/codeph ">CustomSocket</codeph> étendant Socket, un appel à la méthode <codeph class="+ topic/ph pr-d/codeph ">super()</codeph> invoque un constructeur de Socket.</li><li class="- topic/li ">Cet exemple appelle ensuite la méthode <codeph class="+ topic/ph pr-d/codeph ">configureListeners()</codeph>, qui ajoute des écouteurs pour les événements de Socket.</li><li class="- topic/li ">Enfin, la méthode de socket <codeph class="+ topic/ph pr-d/codeph ">connect()</codeph> est appelée avec <codeph class="+ topic/ph pr-d/codeph ">localhost</codeph> comme nom d’hôte et 80 comme numéro de port.</li></ol>
 
 <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Remarque :</b> pour exécuter l’exemple, vous avez besoin d’un serveur s’exécutant dans le domaine où réside le fichier SWF (dans l’exemple, <codeph class="+ topic/ph pr-d/codeph ">localhost</codeph>) et d’une écoute du port 80.</p>
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">

package {
    import flash.display.Sprite;

    public class SocketExample extends Sprite {

        public function SocketExample() {
            var socket:CustomSocket = new CustomSocket("localhost", 80);
        }
    }
}

import flash.errors.*;
import flash.events.*;
import flash.net.Socket;

class CustomSocket extends Socket {
    private var response:String;

    public function CustomSocket(host:String = null, port:uint = 0) {
        super();
        configureListeners();
        if (host &amp;&amp; port)  {
            super.connect(host, port);
        }
    }

    private function configureListeners():void {
        addEventListener(Event.CLOSE, closeHandler);
        addEventListener(Event.CONNECT, connectHandler);
        addEventListener(IOErrorEvent.IO_ERROR, ioErrorHandler);
        addEventListener(SecurityErrorEvent.SECURITY_ERROR, securityErrorHandler);
        addEventListener(ProgressEvent.SOCKET_DATA, socketDataHandler);
    }

    private function writeln(str:String):void {
        str += "\n";
        try {
            writeUTFBytes(str);
        }
        catch(e:IOError) {
            trace(e);
        }
    }

    private function sendRequest():void {
        trace("sendRequest");
        response = "";
        writeln("GET /");
        flush();
    }

    private function readResponse():void {
        var str:String = readUTFBytes(bytesAvailable);
        response += str;
    }

    private function closeHandler(event:Event):void {
        trace("closeHandler: " + event);
        trace(response.toString());
    }

    private function connectHandler(event:Event):void {
        trace("connectHandler: " + event);
        sendRequest();
    }

    private function ioErrorHandler(event:IOErrorEvent):void {
        trace("ioErrorHandler: " + event);
    }

    private function securityErrorHandler(event:SecurityErrorEvent):void {
        trace("securityErrorHandler: " + event);
    }

    private function socketDataHandler(event:ProgressEvent):void {
        trace("socketDataHandler: " + event);
        readResponse();
    }
}
</codeblock></example></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.net.xml#ServerSocket" class="- topic/link "><linktext class="- topic/linktext ">ServerSocket</linktext></link><link href="flash.net.xml#DatagramSocket" class="- topic/link "><linktext class="- topic/linktext ">DatagramSocket</linktext></link></related-links><adobeApiEvent id="flash.net:Socket_flash.events.SecurityErrorEvent.SECURITY_ERROR_securityError" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">securityError</apiName><shortdesc class="- topic/shortdesc ">
 Distribué si un appel de la méthode Socket.connect() tente d’établir une connexion à un serveur interdit par le sandbox de sécurité de l’appelant ou à un port inférieur à 1024, et qu’il n’existe aucun fichier de régulation de socket pour autoriser ce type de connexion.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.SecurityErrorEvent.SECURITY_ERROR</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.SecurityErrorEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Distribué lorsqu’une erreur de sécurité se produit.
  
  </apiTipText></apiTipTexts></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Distribué si un appel de la méthode <codeph class="+ topic/ph pr-d/codeph ">Socket.connect()</codeph> tente d’établir une connexion à un serveur interdit par le sandbox de sécurité de l’appelant ou à un port inférieur à 1024, et qu’il n’existe aucun fichier de régulation de socket pour autoriser ce type de connexion.
 
 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Remarque :</b> dans une application AIR, le contenu s’exécutant dans le sandbox de sécurité de l’application est autorisé à se connecter à un serveur et à un numéro de port sans un fichier de régulation de socket.</p>
 
 </apiDesc></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.net.xml#Socket/connect()" class="- topic/link "><linktext class="- topic/linktext ">Socket.connect()</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.net:Socket_flash.events.ProgressEvent.SOCKET_DATA_socketData" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">socketData</apiName><shortdesc class="- topic/shortdesc ">
 Distribué lorsqu’un socket a reçu des données.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.ProgressEvent.SOCKET_DATA</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.ProgressEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Distribué lorsqu’un socket a reçu des données.
 
 <p class="- topic/p ">Les données reçues par le socket restent dans le socket jusqu’à leur lecture. Il n’est pas nécessaire de lire toutes les données disponibles pendant la gestion de cet événement.</p>
 
 <p class="- topic/p ">Les événements de type <codeph class="+ topic/ph pr-d/codeph ">socketData</codeph> n’utilisent pas la propriété <codeph class="+ topic/ph pr-d/codeph ">ProgressEvent.bytesTotal</codeph>.</p>
 
 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flash.net:Socket_flash.events.IOErrorEvent.IO_ERROR_ioError" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">ioError</apiName><shortdesc class="- topic/shortdesc ">
 Distribué lorsqu’il se produit une erreur d’entrée/sortie entraînant l’échec d’un envoi ou d’un chargement.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.IOErrorEvent.IO_ERROR</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.IOErrorEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Distribué lorsqu’il se produit une erreur d’entrée/sortie entraînant l’échec d’un envoi ou d’un chargement.
 
 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flash.net:Socket_flash.events.Event.CONNECT_connect" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">connect</apiName><shortdesc class="- topic/shortdesc ">
 Distribué lorsqu’une connexion réseau est établie.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.Event.CONNECT</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.Event</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Distribué lorsqu’une connexion réseau est établie.
 
 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flash.net:Socket_flash.events.Event.CLOSE_close" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">close</apiName><shortdesc class="- topic/shortdesc ">
 Distribué lorsque le serveur ferme la connexion socket.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.Event.CLOSE</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.Event</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Distribué lorsque le serveur ferme la connexion socket.
 
 <p class="- topic/p ">L’événement <codeph class="+ topic/ph pr-d/codeph ">close</codeph> se produit uniquement lorsque le serveur ferme la connexion. Il n’est pas distribué lorsque vous appelez la méthode <codeph class="+ topic/ph pr-d/codeph ">Socket.close()</codeph>.</p>
 
 </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="flash.net:Socket:Socket" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">Socket</apiName><shortdesc class="- topic/shortdesc ">
    Crée un nouvel objet Socket.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><internal>BRS determine if all above events are accurate, and which ones also apply
     </internal></asCustoms></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Cette erreur se produit dans le contenu SWF <ph class="- topic/ph ">pour les raisons suivantes :</ph>
     
     <ul class="- topic/ul "><li class="- topic/li ">Les fichiers locaux avec système de fichiers ne peuvent pas communiquer avec Internet. Pour contourner ce problème, reclassifiez le fichier SWF en tant que fichier local avec accès au réseau ou en tant que fichier approuvé. Le contenu de l’application AIR dans le sandbox de sécurité de l’application n’est pas soumis à cette restriction.</li><li class="- topic/li ">Il est impossible de spécifier un port de socket supérieur à 65535.</li></ul>
     
    </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">SecurityError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">SecurityError</apiOperationClassifier></apiException><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">host</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Nom de domaine DNS complet ou adresse IP. Les adresses IPv4 sont spécifiées en notation point-décimale, par exemple <i class="+ topic/ph hi-d/i ">192.0.2.0</i>. Dans Flash Player 9.0.115.0 et AIR 1.0 et les versions ultérieures, vous pouvez spécifier les adresses IPv6 à l’aide de la notation hexadécimale-deux points, par exemple <i class="+ topic/ph hi-d/i ">2001:db8:ccc3:ffff:0:444d:555e:666f</i>. Vous pouvez également spécifier <codeph class="+ topic/ph pr-d/codeph ">null</codeph> pour vous connecter au serveur hôte qui héberge le fichier SWF. Si le fichier SWF effectuant cet appel s’exécute dans un navigateur Web, <codeph class="+ topic/ph pr-d/codeph ">host</codeph> doit appartenir au même domaine que le fichier SWF.
    
    </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">port</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Numéro du port TCP utilisé sur l’hôte cible pour établir une connexion. Dans Flash Player 9.0.124.0 et les versions ultérieures, l’hôte cible doit fournir un fichier de régulation de socket spécifiant que les connexions de socket sont autorisées depuis l’hôte fournissant le fichier SWF vers le port spécifié. Dans les versions précédentes de Flash Player, le fichier de régulation de socket n’est obligatoire que si vous souhaitez vous connecter à un numéro de port inférieur à 1024 ou à un hôte autre que celui servant le fichier SWF.
    
    
     </apiDesc></apiParam></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Crée un nouvel objet Socket. En l’absence de paramètres, un socket initialement déconnecté est créé. Si des paramètres sont spécifiés, une tentative de connexion à l’hôte et au port indiqués est effectuée.
    
    <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Remarque :</b> il est fortement conseillé d’utiliser la forme du constructeur <b class="+ topic/ph hi-d/b ">sans paramètre</b>, d’ajouter ensuite des écouteurs d’événement éventuels, puis d’appeler la méthode <codeph class="+ topic/ph pr-d/codeph ">connect</codeph> avec les paramètres <codeph class="+ topic/ph pr-d/codeph ">host</codeph> et <codeph class="+ topic/ph pr-d/codeph ">port</codeph>. Cette séquence garantit que tous les écouteurs d’événement fonctionnent correctement.</p>
    
    </apiDesc></apiConstructorDetail><adobeApiEvent id="flash.net:Socket:Socket_connect" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">connect</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:Event</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Distribué lorsqu’une connexion réseau est établie.
    </apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">Distribué lorsqu’une connexion réseau est établie.</shortdesc></adobeApiEvent><adobeApiEvent id="flash.net:Socket:Socket_ioError" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">ioError</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:IOErrorEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Distribué lorsqu’il se produit une erreur d’entrée/sortie entraînant l’échec de la connexion.
     </apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">Distribué lorsqu’il se produit une erreur d’entrée/sortie entraînant l’échec de la connexion.</shortdesc></adobeApiEvent><adobeApiEvent id="flash.net:Socket:Socket_securityError" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">securityError</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:SecurityErrorEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     <ph class="- topic/ph "> Distribué si un appel à <codeph class="+ topic/ph pr-d/codeph ">Socket.connect()</codeph> tente de se connecter à un serveur qui ne fournit pas de fichier de régulation de socket ou à un serveur dont le fichier de régulation n’accorde pas à l’hôte appelant l’accès au port spécifié. Pour plus d’informations sur les fichiers de régulation, voir la rubrique « Contrôles de site Web (fichiers de régulation) » dans le <i class="+ topic/ph hi-d/i ">Guide du développeur d’ActionScript 3.0 </i>, ainsi que la rubrique <xref href="http://www.adobe.com/go/devnet_security_fr" scope="external" class="- topic/xref ">Sécurité</xref> du Pôle de développement Flash Player (disponible en anglais uniquement).</ph>
     
    </apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">Cette erreur se produit dans le contenu SWF. Distribué si un appel à Socket.connect() tente de se connecter à un serveur qui ne fournit pas de fichier de régulation de socket, ou à un serveur dont le fichier de régulation n’accorde pas l’accès de l’hôte appelant au port spécifié.</shortdesc></adobeApiEvent></apiConstructor><apiOperation id="flash.net:Socket:close" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">close</apiName><shortdesc class="- topic/shortdesc ">
     Ferme le socket.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">La fermeture du socket a été impossible ou il n’a pas été ouvert.
      
      </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IOError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IOError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Ferme le socket. Après l’appel de la méthode <codeph class="+ topic/ph pr-d/codeph ">close()</codeph>, toute lecture ou écriture de données est impossible.
     
     <p class="- topic/p ">L’événement <codeph class="+ topic/ph pr-d/codeph ">close</codeph> se produit uniquement lorsque le serveur ferme la connexion. Il n’est pas distribué lorsque vous appelez la méthode <codeph class="+ topic/ph pr-d/codeph ">close()</codeph>.</p>
     
     <p class="- topic/p ">Vous pouvez réutiliser l’objet Socket en lui appliquant à nouveau la méthode <codeph class="+ topic/ph pr-d/codeph ">connect()</codeph>.</p>
     
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.net:Socket:connect" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">connect</apiName><shortdesc class="- topic/shortdesc ">
     Connecte le socket à l’hôte et au port spécifiés.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><internal>BRS compare this entire description with XMLSocket.connect() and make consistent
      
      </internal></asCustoms></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Aucun hôte n’a été spécifié et la connexion a échoué.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IOError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IOError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Cette erreur se produit dans le contenu SWF <ph class="- topic/ph ">pour les raisons suivantes :</ph>
     
          <ul class="- topic/ul "><li class="- topic/li ">Les fichiers SWF non approuvés au niveau local ne peuvent pas communiquer avec Internet. Pour contourner cette restriction, reclassifiez le fichier en tant que fichier local avec accès au réseau ou en tant que fichier approuvé.</li><li class="- topic/li ">Il est impossible de spécifier un port de socket supérieur à 65535.</li><li class="- topic/li ">Dans la page HTML qui héberge le contenu SWF, le paramètre <codeph class="+ topic/ph pr-d/codeph ">allowNetworking</codeph> des balises <codeph class="+ topic/ph pr-d/codeph ">object</codeph> et <codeph class="+ topic/ph pr-d/codeph ">embed</codeph> est défini sur <codeph class="+ topic/ph pr-d/codeph ">"none"</codeph>.</li></ul>
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">SecurityError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">SecurityError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">host</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Nom ou adresse IP de l’hôte auquel la connexion doit être établie. Si aucun hôte n’est spécifié, l’hôte hébergeant le fichier appelant est contacté. Si vous ne spécifiez pas d’hôte, utilisez un écouteur d’événement pour déterminer si la connexion a abouti.
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">port</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Numéro du port auquel établir la connexion.
     
     </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Connecte le socket à l’hôte et au port spécifiés.
     
     <p class="- topic/p ">Si la connexion échoue immédiatement, un événement est distribué ou une exception est émise : un événement d’erreur est distribué si un hôte a été spécifié, et une exception est émise dans le cas contraire. Dans tous les autres cas, l’état de la connexion est signalé par un événement. Si le socket est déjà connecté, la connexion existante est d’abord fermée.</p>
     
     </apiDesc></apiOperationDetail><adobeApiEvent id="flash.net:Socket:connect_connect" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">connect</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:Event</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Distribué lorsqu’une connexion réseau est établie.
     </apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">Distribué lorsqu’une connexion réseau est établie.</shortdesc></adobeApiEvent><adobeApiEvent id="flash.net:Socket:connect_ioError" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">ioError</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:IOErrorEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Distribué lorsqu’un hôte est spécifié et qu’il se produit une erreur d’entrée/sortie entraînant l’échec de la connexion. 
     </apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">Distribué lorsqu’un hôte est spécifié et qu’il se produit une erreur d’entrée/sortie entraînant l’échec de la connexion. </shortdesc></adobeApiEvent><adobeApiEvent id="flash.net:Socket:connect_securityError" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">securityError</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:SecurityErrorEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Distribué si un appel à <codeph class="+ topic/ph pr-d/codeph ">Socket.connect()</codeph> tente de se connecter à un serveur qui ne fournit pas de fichier de régulation de socket ou à un serveur dont le fichier de régulation n’accorde pas à l’hôte appelant l’accès au port spécifié. Pour plus d’informations sur les fichiers de régulation, voir la rubrique « Contrôles de site Web (fichiers de régulation) » dans le <i class="+ topic/ph hi-d/i ">Guide du développeur d’ActionScript 3.0 </i>, ainsi que la rubrique <xref href="http://www.adobe.com/go/devnet_security_fr" scope="external" class="- topic/xref ">Sécurité</xref> du Pôle de développement Flash Player (disponible en anglais uniquement).
     
     </apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">Distribué si un appel à Socket.connect() tente de se connecter à un serveur qui ne fournit pas de fichier de régulation de socket, ou à un serveur dont le fichier de régulation n’accorde pas l’accès de l’hôte appelant au port spécifié.</shortdesc></adobeApiEvent></apiOperation><apiOperation id="flash.net:Socket:flush" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">flush</apiName><shortdesc class="- topic/shortdesc ">
     Efface les données accumulées dans la mémoire tampon de sortie du socket.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Une erreur d’E/S s’est produite dans le socket ou ce dernier n’est pas ouvert.
      
      </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IOError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IOError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Efface les données accumulées dans la mémoire tampon de sortie du socket.
     
	 <p class="- topic/p ">Sur certaines systèmes d’exploitation, la méthode flush() est appelée automatiquement entre les images d’exécution. Sur d’autres, notamment sur Windows, les données ne sont jamais envoyées, à moins que vous n’appeliez explicitement la méthode <codeph class="+ topic/ph pr-d/codeph ">flush()</codeph>. Pour assurer la fiabilité de votre application sur tous les systèmes d’exploitation, il est judicieux d’appeler la méthode <codeph class="+ topic/ph pr-d/codeph ">flush()</codeph> après l’écriture de chaque message (ou du groupe de données associé) sur le socket.</p>
	 
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.net:Socket:readBoolean" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">readBoolean</apiName><shortdesc class="- topic/shortdesc ">
     Lit une valeur booléenne dans le socket.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Les données à lire sont insuffisantes.
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">EOFError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:EOFError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Une erreur d’E/S s’est produite dans le socket ou ce dernier n’est pas ouvert.
      
      </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IOError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IOError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Valeur <codeph class="+ topic/ph pr-d/codeph ">true</codeph> si l’octet lu est non nul, <codeph class="+ topic/ph pr-d/codeph ">false</codeph> dans le cas contraire.
     
     </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Lit une valeur booléenne dans le socket. Après la lecture d’un seul octet, la méthode renvoie <codeph class="+ topic/ph pr-d/codeph ">true</codeph> si l’octet est non nul, <codeph class="+ topic/ph pr-d/codeph ">false</codeph> dans le cas contraire.
     
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.net:Socket:readByte" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">readByte</apiName><shortdesc class="- topic/shortdesc ">
     Lit un octet signé dans le socket.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Les données à lire sont insuffisantes.
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">EOFError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:EOFError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Une erreur d’E/S s’est produite dans le socket ou ce dernier n’est pas ouvert.
      
      </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IOError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IOError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Valeur comprise entre -128 et 127.
     
     </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Lit un octet signé dans le socket.
     
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.net:Socket:readBytes" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">readBytes</apiName><shortdesc class="- topic/shortdesc ">
     Lit dans le socket le nombre d’octets de données spécifié par le paramètre length.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Les données à lire sont insuffisantes.
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">EOFError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:EOFError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Une erreur d’E/S s’est produite dans le socket ou ce dernier n’est pas ouvert.
      
      </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IOError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IOError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">bytes</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.utils:ByteArray</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Objet ByteArray dont les données doivent être lues.
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">offset</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">uint</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Décalage à partir duquel la lecture des données doit commencer dans le tableau d’octets.
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">length</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">uint</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Nombre d’octets à lire. La valeur 0 (par défaut) provoque la lecture de toutes les données disponibles.
     
     </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Lit dans le socket le nombre d’octets de données spécifié par le paramètre length. Les octets sont lus dans le tableau d’octets spécifié, en partant de la position indiquée par <codeph class="+ topic/ph pr-d/codeph ">offset</codeph>.
     
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.net:Socket:readDouble" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">readDouble</apiName><shortdesc class="- topic/shortdesc ">
     Lit dans le socket un nombre à virgule flottante à deux décimales et conforme à IEEE 754.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Les données à lire sont insuffisantes.
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">EOFError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:EOFError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Une erreur d’E/S s’est produite dans le socket ou ce dernier n’est pas ouvert.
      
      </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IOError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IOError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Nombre à virgule flottante à deux décimales, conforme à IEEE 754.
     
     </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Lit dans le socket un nombre à virgule flottante à deux décimales et conforme à IEEE 754.
     
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.net:Socket:readFloat" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">readFloat</apiName><shortdesc class="- topic/shortdesc ">
     Lit dans le socket un nombre à virgule flottante à une décimale et conforme à IEEE 754.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Les données à lire sont insuffisantes.
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">EOFError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:EOFError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Une erreur d’E/S s’est produite dans le socket ou ce dernier n’est pas ouvert.
      
      </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IOError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IOError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Nombre à virgule flottante à une décimale, conforme à IEEE 754.
     </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Lit dans le socket un nombre à virgule flottante à une décimale et conforme à IEEE 754.
     
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.net:Socket:readInt" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">readInt</apiName><shortdesc class="- topic/shortdesc ">
     Lit un entier de 32 bits signé dans le socket.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Les données à lire sont insuffisantes.
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">EOFError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:EOFError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Une erreur d’E/S s’est produite dans le socket ou ce dernier n’est pas ouvert.
      
      </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IOError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IOError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Valeur comprise entre -2147483648 et 2147483647.
     
     </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Lit un entier de 32 bits signé dans le socket.
     
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.net:Socket:readMultiByte" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">readMultiByte</apiName><shortdesc class="- topic/shortdesc ">
     Lit une chaîne multi-octets dans le flux d’octets, en utilisant le jeu de caractères spécifié.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">Socket, Socket.readMultiByte, readMultiByte
      
      </keyword></asCustoms></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Les données à lire sont insuffisantes.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">EOFError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:EOFError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Chaîne codée au format UTF-8.
     
     </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">length</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">uint</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Nombre d’octets à lire dans le flux d’octets.
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">charSet</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Chaîne désignant le le jeu de caractères à utiliser pour interpréter les octets. Parmi les chaînes de jeu de caractères supportées figurent <codeph class="+ topic/ph pr-d/codeph ">shift_jis</codeph>, <codeph class="+ topic/ph pr-d/codeph ">CN-GB</codeph> et <codeph class="+ topic/ph pr-d/codeph ">iso-8859-1</codeph>. Pour obtenir la liste complète, voir la section <xref href="../../charset-codes.html" class="- topic/xref ">Jeux de caractères pris en charge</xref>.
     
     <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Remarque :</b> si la valeur du paramètre <codeph class="+ topic/ph pr-d/codeph ">charSet</codeph> n’est pas reconnue par le système actuel, l’application utilise la page de code par défaut du système comme jeu de caractères. Par exemple, une valeur pour le paramètre <codeph class="+ topic/ph pr-d/codeph ">charSet</codeph>, comme dans <codeph class="+ topic/ph pr-d/codeph ">myTest.readMultiByte(22, "iso-8859-01")</codeph> qui utilise <codeph class="+ topic/ph pr-d/codeph ">01</codeph> au lieu de <codeph class="+ topic/ph pr-d/codeph ">1</codeph> pourra éventuellement fonctionner sur votre poste de développement, mais pas sur un autre poste. Sur l’autre ordinateur, l’application utilisera la page de code par défaut du système.</p>
     
     </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Lit une chaîne multi-octets dans le flux d’octets, en utilisant le jeu de caractères spécifié.
     
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.net:Socket:readObject" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">readObject</apiName><shortdesc class="- topic/shortdesc ">
     Lit dans le socket un objet codé au format AMF (Action Message Format) sérialisé.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Les données à lire sont insuffisantes.
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">EOFError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:EOFError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Une erreur d’E/S s’est produite dans le socket ou ce dernier n’est pas ouvert.
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IOError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IOError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Objet désérialisé
     
     </apiDesc><apiType value="any" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Lit dans le socket un objet codé au format AMF (Action Message Format) sérialisé.
     
     </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#ObjectEncoding" class="- topic/link "><linktext class="- topic/linktext ">ObjectEncoding</linktext></link><link href="../../flash/net/package.html#registerClassAlias()" class="- topic/link "><linktext class="- topic/linktext ">flash.net.registerClassAlias()</linktext></link></related-links></apiOperation><apiOperation id="flash.net:Socket:readShort" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">readShort</apiName><shortdesc class="- topic/shortdesc ">
     Lit un entier de 16 bits signé dans le socket.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Les données à lire sont insuffisantes.
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">EOFError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:EOFError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Une erreur d’E/S s’est produite dans le socket ou ce dernier n’est pas ouvert.
      
      </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IOError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IOError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Valeur comprise entre -32768 et 32767.
     
     </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Lit un entier de 16 bits signé dans le socket.
     
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.net:Socket:readUTFBytes" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">readUTFBytes</apiName><shortdesc class="- topic/shortdesc ">
     Lit dans le socket le nombre d’octets de données UTF-8 spécifié par le paramètre length et renvoie une chaîne.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Les données à lire sont insuffisantes.
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">EOFError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:EOFError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Une erreur d’E/S s’est produite dans le socket ou ce dernier n’est pas ouvert.
      
      </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IOError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IOError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Chaîne UTF-8.
     </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">length</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">uint</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Nombre d’octets à lire.
     
     </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Lit dans le socket le nombre d’octets de données UTF-8 spécifié par le paramètre <codeph class="+ topic/ph pr-d/codeph ">length</codeph> et renvoie une chaîne.
     
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.net:Socket:readUTF" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">readUTF</apiName><shortdesc class="- topic/shortdesc ">
     Lit une chaîne UTF-8 dans le socket.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Les données à lire sont insuffisantes.
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">EOFError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:EOFError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Une erreur d’E/S s’est produite dans le socket ou ce dernier n’est pas ouvert.
      
      </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IOError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IOError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Chaîne UTF-8.
     </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Lit une chaîne UTF-8 dans le socket. La chaîne est supposée comporter un préfixe composé d’un entier court non signé indiquant sa longueur en octets.
     
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.net:Socket:readUnsignedByte" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">readUnsignedByte</apiName><shortdesc class="- topic/shortdesc ">
     Lit un octet non signé dans le socket.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Les données à lire sont insuffisantes.
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">EOFError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:EOFError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Une erreur d’E/S s’est produite dans le socket ou ce dernier n’est pas ouvert.
      
      </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IOError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IOError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Valeur comprise entre 0 et 255.
     
     </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">uint</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Lit un octet non signé dans le socket.
     
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.net:Socket:readUnsignedInt" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">readUnsignedInt</apiName><shortdesc class="- topic/shortdesc ">
     Lit un entier de 32 bits non signé dans le socket.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Les données à lire sont insuffisantes.
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">EOFError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:EOFError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Une erreur d’E/S s’est produite dans le socket ou ce dernier n’est pas ouvert.
      
      </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IOError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IOError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Valeur comprise entre 0 et 4294967295.
     
     </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">uint</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Lit un entier de 32 bits non signé dans le socket.
     
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.net:Socket:readUnsignedShort" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">readUnsignedShort</apiName><shortdesc class="- topic/shortdesc ">
     Lit un entier de 16 bits non signé dans le socket.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Les données à lire sont insuffisantes.
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">EOFError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:EOFError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Une erreur d’E/S s’est produite dans le socket ou ce dernier n’est pas ouvert.
      
      </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IOError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IOError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Valeur comprise entre 0 et 65535.
     
     </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">uint</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Lit un entier de 16 bits non signé dans le socket.
     
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.net:Socket:writeBoolean" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">writeBoolean</apiName><shortdesc class="- topic/shortdesc ">
     Ecrit une valeur booléenne dans le socket.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Une erreur d’E/S s’est produite dans le socket ou ce dernier n’est pas ouvert.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IOError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IOError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">value</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Valeur à écrire dans le socket : 1 (<codeph class="+ topic/ph pr-d/codeph ">true</codeph>) ou 0 (<codeph class="+ topic/ph pr-d/codeph ">false</codeph>).
     
     </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Ecrit une valeur booléenne dans le socket. Cette méthode écrit un seul octet, dont la valeur correspond à 1 (<codeph class="+ topic/ph pr-d/codeph ">true</codeph>) ou à 0 (<codeph class="+ topic/ph pr-d/codeph ">false</codeph>).
     
     </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#Socket/flush()" class="- topic/link "><linktext class="- topic/linktext ">flush()</linktext></link></related-links></apiOperation><apiOperation id="flash.net:Socket:writeByte" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">writeByte</apiName><shortdesc class="- topic/shortdesc ">
     Ecrit un octet dans le socket.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Une erreur d’E/S s’est produite dans le socket ou ce dernier n’est pas ouvert.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IOError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IOError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">value</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Valeur à écrire dans le socket. Les 8 bits inférieurs de la valeur sont utilisés. Les 24 bits supérieurs ne sont pas pris en compte.
     
     </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Ecrit un octet dans le socket.
     
     </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#Socket/flush()" class="- topic/link "><linktext class="- topic/linktext ">flush()</linktext></link></related-links></apiOperation><apiOperation id="flash.net:Socket:writeBytes" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">writeBytes</apiName><shortdesc class="- topic/shortdesc ">
     Ecrit une séquence d’octets extraits du tableau d’octets spécifié.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Une erreur d’E/S s’est produite dans le socket ou ce dernier n’est pas ouvert.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IOError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IOError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Si la valeur du paramètre <codeph class="+ topic/ph pr-d/codeph ">offset</codeph> est supérieure à la longueur de l’objet ByteArray spécifiée dans le paramètre <codeph class="+ topic/ph pr-d/codeph ">bytes</codeph> ou si la quantité de données spécifiée devant être écrites par <codeph class="+ topic/ph pr-d/codeph ">offset</codeph> et <codeph class="+ topic/ph pr-d/codeph ">length</codeph> dépasse les données disponibles.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">RangeError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">RangeError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">bytes</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.utils:ByteArray</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Objet ByteArray duquel extraire les données à écrire.
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">offset</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">uint</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Décalage, commençant à zéro, dans l’objet ByteArray <codeph class="+ topic/ph pr-d/codeph ">bytes</codeph> auquel l’écriture des données doit commencer.
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">length</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">uint</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Nombre d’octets à écrire. La valeur par défaut, 0, entraîne l’écriture de l’intégralité de la mémoire tampon, en partant de la valeur spécifiée par le paramètre <codeph class="+ topic/ph pr-d/codeph ">offset</codeph>.
     
     </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Ecrit une séquence d’octets extraits du tableau d’octets spécifié. L’écriture commence à la position indiquée par <codeph class="+ topic/ph pr-d/codeph ">offset</codeph>.
     
     <p class="- topic/p ">Si vous omettez le paramètre <codeph class="+ topic/ph pr-d/codeph ">length</codeph>, la valeur par défaut, 0, est utilisée et la méthode écrit l’intégralité de la mémoire tampon, en commençant à <codeph class="+ topic/ph pr-d/codeph ">offset</codeph>.</p>
     
     <p class="- topic/p ">Si vous omettez aussi le paramètre <codeph class="+ topic/ph pr-d/codeph ">offset</codeph>, toute la mémoire tampon est écrite.</p>
     
     </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#Socket/flush()" class="- topic/link "><linktext class="- topic/linktext ">flush()</linktext></link></related-links></apiOperation><apiOperation id="flash.net:Socket:writeDouble" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">writeDouble</apiName><shortdesc class="- topic/shortdesc ">
     Ecrit dans le socket un nombre à virgule flottante à deux décimales et conforme à IEEE 754.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Une erreur d’E/S s’est produite dans le socket ou ce dernier n’est pas ouvert.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IOError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IOError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">value</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Valeur à écrire dans le socket.
     
     </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Ecrit dans le socket un nombre à virgule flottante à deux décimales et conforme à IEEE 754.
     
     
     </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#Socket/flush()" class="- topic/link "><linktext class="- topic/linktext ">flush()</linktext></link></related-links></apiOperation><apiOperation id="flash.net:Socket:writeFloat" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">writeFloat</apiName><shortdesc class="- topic/shortdesc ">
     Ecrit dans le socket un nombre à virgule flottante à une décimale conforme à IEEE 754.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Une erreur d’E/S s’est produite dans le socket ou ce dernier n’est pas ouvert.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IOError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IOError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">value</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Valeur à écrire dans le socket.
     
     </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Ecrit dans le socket un nombre à virgule flottante à une décimale conforme à IEEE 754.
     
     
     </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#Socket/flush()" class="- topic/link "><linktext class="- topic/linktext ">flush()</linktext></link></related-links></apiOperation><apiOperation id="flash.net:Socket:writeInt" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">writeInt</apiName><shortdesc class="- topic/shortdesc ">
     Ecrit un entier signé de 32 bits dans le socket.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Une erreur d’E/S s’est produite dans le socket ou ce dernier n’est pas ouvert.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IOError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IOError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">value</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Valeur à écrire dans le socket.
     
     </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Ecrit un entier signé de 32 bits dans le socket.
     
     
     </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#Socket/flush()" class="- topic/link "><linktext class="- topic/linktext ">flush()</linktext></link></related-links></apiOperation><apiOperation id="flash.net:Socket:writeMultiByte" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">writeMultiByte</apiName><shortdesc class="- topic/shortdesc ">
     Ecrit une chaîne multi-octets extraite du flux d’octets, en utilisant le jeu de caractères spécifié.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">Socket, Socket.writeMultiByte, writeMultiByte
      
      </keyword></asCustoms></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">value</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Valeur de la chaîne à écrire.
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">charSet</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Chaîne désignant le le jeu de caractères à utiliser pour interpréter les octets. Parmi les chaînes de jeu de caractères supportées figurent <codeph class="+ topic/ph pr-d/codeph ">shift_jis</codeph>, <codeph class="+ topic/ph pr-d/codeph ">CN-GB</codeph> et <codeph class="+ topic/ph pr-d/codeph ">iso-8859-1</codeph>. Pour obtenir la liste complète, voir la section <xref href="../../charset-codes.html" class="- topic/xref ">Jeux de caractères pris en charge</xref>.
     
     </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Ecrit une chaîne multi-octets extraite du flux d’octets, en utilisant le jeu de caractères spécifié.
     
     
     </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#Socket/flush()" class="- topic/link "><linktext class="- topic/linktext ">flush()</linktext></link></related-links></apiOperation><apiOperation id="flash.net:Socket:writeObject" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">writeObject</apiName><shortdesc class="- topic/shortdesc ">
     Ecrit un objet dans le socket au format AMF sérialisé.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Une erreur d’E/S s’est produite dans le socket ou ce dernier n’est pas ouvert.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IOError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IOError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">object</apiItemName><apiType value="any" name="type" class="- topic/state reference/state apiRef/apiType "/><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Objet à sérialiser.
     
     </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Ecrit un objet dans le socket au format AMF sérialisé.
     
     
     </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#Socket/flush()" class="- topic/link "><linktext class="- topic/linktext ">flush()</linktext></link><link href="flash.net.xml#ObjectEncoding" class="- topic/link "><linktext class="- topic/linktext ">ObjectEncoding</linktext></link><link href="../../flash/net/package.html#registerClassAlias()" class="- topic/link "><linktext class="- topic/linktext ">flash.net.registerClassAlias()</linktext></link></related-links></apiOperation><apiOperation id="flash.net:Socket:writeShort" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">writeShort</apiName><shortdesc class="- topic/shortdesc ">
     Ecrit un entier 16 bits dans le socket.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Une erreur d’E/S s’est produite dans le socket ou ce dernier n’est pas ouvert.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IOError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IOError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">value</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Valeur à écrire dans le socket.
     
     </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Ecrit un entier 16 bits dans le socket. Les octets écrits se présentent comme suit :
     
     <pre xml:space="preserve" class="- topic/pre "><codeph class="+ topic/ph pr-d/codeph ">(v >> 8) &amp; 0xff v &amp; 0xff</codeph></pre>
     
     <p class="- topic/p ">Les 16 bits inférieurs du paramètre sont utilisés. Les 16 bits supérieurs ne sont pas pris en compte.</p>
     
     </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#Socket/flush()" class="- topic/link "><linktext class="- topic/linktext ">flush()</linktext></link></related-links></apiOperation><apiOperation id="flash.net:Socket:writeUTFBytes" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">writeUTFBytes</apiName><shortdesc class="- topic/shortdesc ">
     Ecrit une chaîne UTF-8 dans le socket.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Une erreur d’E/S s’est produite dans le socket ou ce dernier n’est pas ouvert.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IOError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IOError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">value</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Chaîne à écrire dans le socket.
     
     </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Ecrit une chaîne UTF-8 dans le socket.
     
     
     </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#Socket/flush()" class="- topic/link "><linktext class="- topic/linktext ">flush()</linktext></link></related-links></apiOperation><apiOperation id="flash.net:Socket:writeUTF" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">writeUTF</apiName><shortdesc class="- topic/shortdesc ">
     Ecrit les données suivantes dans le socket : un entier non signé de 16 bits, qui indique, en octets, la longueur de la chaîne UTF-8 spécifiée, suivie de la chaîne elle-même.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">La longueur est supérieure à 65535.
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">RangeError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">RangeError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Une erreur d’E/S s’est produite dans le socket ou ce dernier n’est pas ouvert.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IOError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IOError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">value</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Chaîne à écrire dans le socket.
     </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Ecrit les données suivantes dans le socket : un entier non signé de 16 bits, qui indique, en octets, la longueur de la chaîne UTF-8 spécifiée, suivie de la chaîne elle-même.
     
     <p class="- topic/p ">Avant d’écrire la chaîne, la méthode calcule le nombre d’octets nécessaires pour représenter tous les caractères requis.</p>
     
     
     </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#Socket/flush()" class="- topic/link "><linktext class="- topic/linktext ">flush()</linktext></link></related-links></apiOperation><apiOperation id="flash.net:Socket:writeUnsignedInt" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">writeUnsignedInt</apiName><shortdesc class="- topic/shortdesc ">
     Ecrit un entier non signé de 32 bits dans le socket.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Une erreur d’E/S s’est produite dans le socket ou ce dernier n’est pas ouvert.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IOError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IOError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">value</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">uint</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Valeur à écrire dans le socket.
     
     </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Ecrit un entier non signé de 32 bits dans le socket.
     
     
     </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#Socket/flush()" class="- topic/link "><linktext class="- topic/linktext ">flush()</linktext></link></related-links></apiOperation><apiValue id="flash.net:Socket:bytesAvailable:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">bytesAvailable</apiName><shortdesc class="- topic/shortdesc ">
     Nombre d’octets de données disponibles en lecture dans la mémoire tampon d’entrée.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">uint</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Nombre d’octets de données disponibles en lecture dans la mémoire tampon d’entrée.
     
     <p class="- topic/p ">Votre code doit accéder à <codeph class="+ topic/ph pr-d/codeph ">bytesAvailable</codeph> pour garantir que les données disponibles sont suffisantes, avant leur lecture à l’aide d’une des méthodes <codeph class="+ topic/ph pr-d/codeph ">read</codeph>.</p>
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:Socket:connected:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">connected</apiName><shortdesc class="- topic/shortdesc ">
     Indique si l’objet Socket est actuellement connecté.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Indique si l’objet Socket est actuellement connecté. Un appel de cette propriété renvoie la valeur <codeph class="+ topic/ph pr-d/codeph ">true</codeph> si le socket est connecté, <codeph class="+ topic/ph pr-d/codeph ">false</codeph> dans le cas contraire.
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:Socket:endian:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">endian</apiName><shortdesc class="- topic/shortdesc ">
     Indique l’ordre d’octet des données.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiDefaultValue>Endian.BIG_ENDIAN
     </apiDefaultValue></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Indique l’ordre d’octet des données. Les valeurs possibles sont les constantes de la classe flash.utils.Endian, <codeph class="+ topic/ph pr-d/codeph ">Endian.BIG_ENDIAN</codeph> ou <codeph class="+ topic/ph pr-d/codeph ">Endian.LITTLE_ENDIAN</codeph>.
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.utils.xml#Endian" class="- topic/link "><linktext class="- topic/linktext ">flash.utils.Endian</linktext></link></related-links></apiValue><apiValue id="flash.net:Socket:localAddress:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">localAddress</apiName><shortdesc class="- topic/shortdesc ">
     Adresse IP à laquelle ce socket est lié sur la machine locale.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Adresse IP à laquelle ce socket est lié sur la machine locale.

     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#Socket/bind()" class="- topic/link "><linktext class="- topic/linktext ">bind()</linktext></link></related-links></apiValue><apiValue id="flash.net:Socket:localPort:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">localPort</apiName><shortdesc class="- topic/shortdesc ">
     Port auquel ce socket est lié sur la machine locale.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">int</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Port auquel ce socket est lié sur la machine locale.
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#Socket/bind()" class="- topic/link "><linktext class="- topic/linktext ">bind()</linktext></link></related-links></apiValue><apiValue id="flash.net:Socket:objectEncoding:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">objectEncoding</apiName><shortdesc class="- topic/shortdesc ">
     Contrôle la version du format AMF utilisée lors de l’écriture ou de la lecture d’un objet.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><internal>Property documented; needs review
     </internal></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">uint</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Contrôle la version du format AMF utilisée lors de l’écriture ou de la lecture d’un objet.
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#ObjectEncoding" class="- topic/link "><linktext class="- topic/linktext ">Classe ObjectEncoding</linktext></link><link href="flash.net.xml#Socket/readObject()" class="- topic/link "><linktext class="- topic/linktext ">readObject()</linktext></link><link href="flash.net.xml#Socket/writeObject()" class="- topic/link "><linktext class="- topic/linktext ">writeObject()</linktext></link></related-links></apiValue><apiValue id="flash.net:Socket:remoteAddress:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">remoteAddress</apiName><shortdesc class="- topic/shortdesc ">
     Adresse IP de la machine distante à laquelle ce socket est connecté.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Adresse IP de la machine distante à laquelle ce socket est connecté.
     
     <p class="- topic/p ">Vous pouvez utiliser cette propriété pour déterminer l’adresse IP d’un socket client distribué dans un ServerSocketConnectEvent par un objet ServerSocket. Si vous le souhaitez, utilisez la classe DNSResolver pour convertir une adresse IP en un nom de domaine.</p>
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#Socket/connect()" class="- topic/link "><linktext class="- topic/linktext ">connect()</linktext></link><link href="flash.net.xml#ServerSocket" class="- topic/link "><linktext class="- topic/linktext ">ServerSocket</linktext></link><link href="flash.events.xml#ServerSocketConnectEvent" class="- topic/link "><linktext class="- topic/linktext ">ServerSocketConnectEvent</linktext></link><link href="flash.net.dns.xml#DNSResolver" class="- topic/link "><linktext class="- topic/linktext ">DNSResolver</linktext></link></related-links></apiValue><apiValue id="flash.net:Socket:remotePort:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">remotePort</apiName><shortdesc class="- topic/shortdesc ">
     Port de la machine distante auquel ce socket est connecté.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">int</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Port de la machine distante auquel ce socket est connecté.
     
     <p class="- topic/p ">Vous pouvez utiliser cette propriété pour déterminer le numéro de port d’un socket client distribué dans un ServerSocketConnectEvent par un objet ServerSocket.</p>
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#Socket/connect()" class="- topic/link "><linktext class="- topic/linktext ">connect()</linktext></link><link href="flash.net.xml#ServerSocket" class="- topic/link "><linktext class="- topic/linktext ">ServerSocket</linktext></link><link href="flash.events.xml#ServerSocketConnectEvent" class="- topic/link "><linktext class="- topic/linktext ">ServerSocketConnectEvent</linktext></link></related-links></apiValue><apiValue id="flash.net:Socket:timeout:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">timeout</apiName><shortdesc class="- topic/shortdesc ">
     Indique le délai d’attente d’une connexion, en millisecondes.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">uint</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Indique le délai d’attente d’une connexion, en millisecondes.
     
     <p class="- topic/p ">Si la connexion n’est pas établie pendant le délai spécifié, elle échoue. La valeur par défaut est de 20 000 (vingt secondes).</p>
     
     </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.net:ObjectEncoding" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">ObjectEncoding</apiName><shortdesc class="- topic/shortdesc ">
 La classe ObjectEncoding sert à définir les paramètres de sérialisation des classes qui sérialisent les objets (FileStream, NetStream, NetConnection, SharedObject et ByteArray) afin que celles-ci soient compatibles avec des versions antérieures d’ActionScript.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">ObjectEncoding, ObjectEncoding object, built-in class, AMF, Action Message Format
 
  </keyword></asCustoms></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 La classe ObjectEncoding sert à définir les paramètres de sérialisation des classes qui sérialisent les objets (FileStream, NetStream, NetConnection, SharedObject et ByteArray) afin que celles-ci soient compatibles avec des versions antérieures d’ActionScript.
 
 <p class="- topic/p ">L’encodage d’objet détermine la manière dont les objets sont représentés au format AMF (Action Message Format). Flash Player utilise AMF pour améliorer l’efficacité des communications entre une application et un serveur distant. Le format AMF code les appels de procédure à distance dans un format binaire compact, qui peut être transféré via HTTP/HTTPS ou le protocole RTMP/RTMPS utilisé par Flash Media Server. Les objets et les valeurs de données sont sérialisés dans ce format binaire, qui est généralement plus compact que d’autres représentations, telles que XML.</p>
 
 <p class="- topic/p ">Adobe AIR et Flash Player 9 peuvent sérialiser dans deux formats différents : AMF3 et AMF0. AMF3, la sérialisation développée par défaut pour ActionScript 3.0, offre plusieurs avantages par rapport à AMF0, réservée à ActionScript 1.0 et 2.0. AMF3 envoie des données sur le réseau de manière plus efficace que AMF0. <ph class="- topic/ph ">AMF3 autorise l’envoi d’objets <codeph class="+ topic/ph pr-d/codeph ">int</codeph> et <codeph class="+ topic/ph pr-d/codeph ">uint</codeph> en tant qu’entiers et prend en charge des types de données, tels que ByteArray, XML, et IExternalizable, qui sont uniquement disponibles dans ActionScript 3.0. Ce format est uniquement disponible dans ActionScript 3.0 et avec les serveurs utilisant le codage AMF3, tels que Flex 2.</ph></p>
 
 <p class="- topic/p ">Les classes ByteArray, FileStream, NetConnection, NetStream, <ph class="- topic/ph ">SharedObject</ph>, Socket et URLStream contiennent la propriété <codeph class="+ topic/ph pr-d/codeph ">objectEncoding</codeph>, à laquelle une constante de la classe ObjectEncoding est affectée. Le comportement de la propriété <codeph class="+ topic/ph pr-d/codeph ">objectEncoding</codeph> varie en fonction de l’objet. La description de la propriété <codeph class="+ topic/ph pr-d/codeph ">objectEncoding</codeph> de chaque classe explique ce comportement en détail.</p>
 
 
 </apiDesc></apiClassifierDetail><apiValue id="flash.net:ObjectEncoding:AMF0" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">AMF0</apiName><shortdesc class="- topic/shortdesc ">
	 Spécifie que les objets sont sérialisés à l’aide du format AMF (Action Message Format) utilisé par ActionScript 1.0 et 2.0.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">0</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">uint</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Spécifie que les objets sont sérialisés à l’aide du format AMF (Action Message Format) utilisé par ActionScript 1.0 et 2.0.
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:ObjectEncoding:AMF3" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">AMF3</apiName><shortdesc class="- topic/shortdesc ">
	 Spécifie que les objets sont sérialisés à l’aide du format AMF (Action Message Format) utilisé par ActionScript 3.0.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">3</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">uint</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Spécifie que les objets sont sérialisés à l’aide du format AMF (Action Message Format) utilisé par ActionScript 3.0.
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:ObjectEncoding:DEFAULT" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">DEFAULT</apiName><shortdesc class="- topic/shortdesc ">
	 Spécifie le format par défaut (le plus récent) du moteur d’exécution actuel (Flash Player ou AIR). </shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">3</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">uint</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Spécifie le format par défaut (le plus récent) du moteur d’exécution actuel (Flash Player ou AIR). Le contrôle de l’encodage d’objet étant uniquement disponible dans Flash Player 9 et les versions ultérieures, ainsi que dans Adobe AIR, le format AMF (Action Message Format) le plus récent utilisé est celui d’ActionScript 3.0.
	 
	 <p class="- topic/p ">Par exemple, si la propriété <codeph class="+ topic/ph pr-d/codeph ">objectEncoding</codeph> d’un objet est définie sur <codeph class="+ topic/ph pr-d/codeph ">ObjectEncoding.DEFAULT</codeph>, l’encodage AMF3 est utilisé. Si, à l’avenir, une version ultérieure de Flash Player ou d’Adobe AIR propose une nouvelle version d’AMF et que vous republiez votre contenu, l’application utilisera cette nouvelle version. Faites appel à cette constante uniquement si l’interopérabilité avec les versions antérieures n’a aucune importance.</p>
     
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:ObjectEncoding:dynamicPropertyWriter:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">dynamicPropertyWriter</apiName><shortdesc class="- topic/shortdesc ">
	 Assure une meilleure maîtrise de la sérialisation des propriétés dynamiques des objets dynamiques.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.net:IDynamicPropertyWriter</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Assure une meilleure maîtrise de la sérialisation des propriétés dynamiques des objets dynamiques. Lorsque cette propriété est réglée sur <codeph class="+ topic/ph pr-d/codeph ">null</codeph>, sa valeur par défaut, les propriétés dynamiques sont sérialisées à l’aide de code natif, qui les écrit toutes, à l’exception de celles dont la valeur est une fonction.
     <p class="- topic/p ">Cette valeur n’est appelée que pour les propriétés d’un objet dynamique (objets déclarés au sein d’une classe dynamique) ou pour des objets déclarés à l’aide de l’opérateur <codeph class="+ topic/ph pr-d/codeph ">new</codeph>.</p>
	 
	 <p class="- topic/p ">Cette propriété vous permet d’exclure des propriétés d’objets dynamiques de la sérialisation, d’écrire des valeurs dans les propriétés dynamiques des objets dynamiques ou de créer des propriétés dynamiques pour des objets dynamiques. Pour ce faire, réglez-la sur un objet qui implémente l’interface IDynamicPropertyWriter. Pour plus d’informations, voir l’interface IDynamicPropertyWriter.</p>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#IDynamicPropertyWriter" class="- topic/link "><linktext class="- topic/linktext ">IDynamicPropertyWriter</linktext></link></related-links></apiValue></apiClassifier><apiClassifier languages="" id="flash.net:NetStreamAppendBytesAction" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">NetStreamAppendBytesAction</apiName><shortdesc class="- topic/shortdesc ">

La classe NetStreamAppendBytesAction est une énumération de constantes que vous pouvez transmettre à la méthode NetStream.appendBytesAction().</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">

La classe NetStreamAppendBytesAction est une énumération de constantes que vous pouvez transmettre à la méthode <codeph class="+ topic/ph pr-d/codeph ">NetStream.appendBytesAction()</codeph>.

<p class="- topic/p ">Deux des constantes indiquent une discontinuité dans l’échelle de temps. Chaque balise FLV possède un horodateur qui indique sa position dans l’échelle de temps. Les horodateurs sont utilisés pour synchroniser la lecture des données vidéo, des données audio et des données de script. Les horodatages pour les balises FLV de même type (données vidéo, audio et de script) ne doivent pas diminuer lors de la progression des balises FLV.</p>

</apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStream/appendBytesAction()" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetStream.appendBytesAction()</linktext></link><link href="flash.net.xml#NetStream/appendBytes()" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetStream.appendBytes()</linktext></link></related-links><apiValue id="flash.net:NetStreamAppendBytesAction:END_SEQUENCE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">END_SEQUENCE</apiName><shortdesc class="- topic/shortdesc ">
    Indique que les données de flux multimédia sont terminées.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">endSequence</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Indique que les données de flux multimédia sont terminées. Pour certains codecs, tels que H. 264, l’analyseur d’octets attend que la mémoire tampon se remplisse jusqu’à un certain point avant de démarrer la lecture. Transmettez <codeph class="+ topic/ph pr-d/codeph ">END_SEQUENCE</codeph> pour indiquer à l’analyseur d’octets de commencer la lecture immédiatement.
    
    
    </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:NetStreamAppendBytesAction:RESET_BEGIN" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">RESET_BEGIN</apiName><shortdesc class="- topic/shortdesc ">
    
    Indique une discontinuité dans l’échelle de temps.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">resetBegin</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    
    Indique une discontinuité dans l’échelle de temps. Efface le contenu de la FIFO (composée d’une balise FLV incomplète) et réinitialise l’échelle de temps pour commencer à à la date et à l’heure du prochain message joint. Lors de l’appel suivant de <codeph class="+ topic/ph pr-d/codeph ">appendBytes()</codeph>, l’analyseur d’octets attend un en-tête de fichier et démarre au début d’un fichier. 
    
    
    </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:NetStreamAppendBytesAction:RESET_SEEK" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">RESET_SEEK</apiName><shortdesc class="- topic/shortdesc ">
    Indique une discontinuité dans l’échelle de temps.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">resetSeek</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Indique une discontinuité dans l’échelle de temps. Efface le contenu de la FIFO (composée d’une balise FLV incomplète) et réinitialise l’échelle de temps pour commencer à à la date et à l’heure du prochain message joint. Lors de l’appel suivant de <codeph class="+ topic/ph pr-d/codeph ">appendBytes()</codeph>, l’analyseur d’octets attend le début d’une balise FLV, comme si vous aviez effectué une recherche dans un emplacement au sein du même FLV, sur une limite de balise. 
    
    
    </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.net:NetGroupReplicationStrategy" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">NetGroupReplicationStrategy</apiName><shortdesc class="- topic/shortdesc ">
La classe NetGroupReplicationStrategy est une énumération des valeurs constantes utilisées pour définir la propriété replicationStrategy de la classe NetGroup.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Enumération des valeurs constantes utilisées lors de la définition de la propriété replicationStrategy de la classe NetGroup.
</apiTipText></apiTipTexts><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
La classe NetGroupReplicationStrategy est une énumération des valeurs constantes utilisées lors de la définition de la propriété <codeph class="+ topic/ph pr-d/codeph ">replicationStrategy</codeph> de la classe <codeph class="+ topic/ph pr-d/codeph ">NetGroup</codeph>.

</apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetGroup/addWantObjects()" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetGroup.addWantObjects()</linktext></link><link href="flash.net.xml#NetGroup/replicationStrategy" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetGroup.replicationStrategy</linktext></link></related-links><apiValue id="flash.net:NetGroupReplicationStrategy:LOWEST_FIRST" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">LOWEST_FIRST</apiName><shortdesc class="- topic/shortdesc "> 
    Indique que lors de l’extraction d’objets d’un voisin en vue de répondre à une demande, les objets possédant les numéros d’index les moins élevés sont sollicités en premier.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">lowestFirst</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
    Indique que lors de l’extraction d’objets d’un voisin en vue de répondre à une demande, les objets possédant les numéros d’index les moins élevés sont sollicités en premier.
    
    </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetGroup/addWantObjects()" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetGroup.addWantObjects()</linktext></link></related-links></apiValue><apiValue id="flash.net:NetGroupReplicationStrategy:RAREST_FIRST" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">RAREST_FIRST</apiName><shortdesc class="- topic/shortdesc "> 
    Indique que lors de l’extraction d’objets d’un voisin en vue de répondre à une demande, les objets possédant le moins de répliques parmi tous les voisins sont sollicités en premier.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">rarestFirst</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
    Indique que lors de l’extraction d’objets d’un voisin en vue de répondre à une demande, les objets possédant le moins de répliques parmi tous les voisins sont sollicités en premier.
    
    </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetGroup/addWantObjects()" class="- topic/link "><linktext class="- topic/linktext ">NetGroup.addWantObjects()</linktext></link></related-links></apiValue></apiClassifier><apiClassifier languages="" id="flash.net:URLLoader" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">URLLoader</apiName><shortdesc class="- topic/shortdesc ">
 La classe URLLoader télécharge des données à partir d’une URL sous forme de texte, de données binaires ou de variables de code URL.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:EventDispatcher</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 La classe URLLoader télécharge des données à partir d’une URL sous forme de texte, de données binaires ou de variables de code URL. Elle est utile pour télécharger des fichiers texte, XML ou d’autres informations destinées à être utilisées dans une application de données dynamique.
 
 <p class="- topic/p ">Un objet URLLoader télécharge toutes les données d’une URL avant de les mettre à disposition du code dans les applications. Il fournit des notifications sur la progression du téléchargement, que vous pouvez connaître en surveillant les propriétés <codeph class="+ topic/ph pr-d/codeph ">bytesLoaded</codeph> et <codeph class="+ topic/ph pr-d/codeph ">bytesTotal</codeph>, ainsi que les événements distribués.</p>
 
 <p class="- topic/p ">Dans le cas de chargements de fichiers vidéo très volumineux, tels que des FLV, des erreurs de mémoire insuffisante peuvent se produire.
 </p>
 

 
 <p class="- topic/p ">Lorsque vous employez cette classe<ph class="- topic/ph "> dans Flash Player et</ph> dans le contenu de l’application AIR d’un sandbox de sécurité autre que celui de l’application, tenez compte du modèle de sécurité suivant :</p>
 
 <ul class="- topic/ul "><li class="- topic/li ">Un fichier SWF du sandbox local avec système de fichiers risque de ne pas charger des données depuis une ressource située dans le sandbox réseau, ni lui en fournir. </li><li class="- topic/li "> Par défaut, le fichier SWF appelant et l’URL chargée doivent se trouver dans le même domaine. Par exemple, un fichier SWF à l’adresse www.adobe.com peut charger uniquement des données provenant de sources situées aussi à l’adresse www.adobe.com. Pour charger des données à partir d’un autre domaine, placez un fichier de régulation d’URL sur le serveur hébergeant les données.</li></ul>
 
 <p class="- topic/p ">Pour plus d’informations concernant la sécurité, voir la rubrique du Pôle de développement Flash Player : <xref href="http://www.adobe.com/go/devnet_security_fr" scope="external" class="- topic/xref ">Sécurité</xref> (disponible en anglais uniquement).</p>
 
 
 </apiDesc><example conref="examples\URLLoaderExample.as" class="- topic/example "> L’exemple suivant charge et affiche les données détectées dans un fichier texte local. Il assure également le suivi des informations de gestion des événements.
 
 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Remarque :</b> pour exécuter cet exemple, placez un fichier nommé urlLoaderExample.txt dans le même répertoire que votre fichier SWF. Ce fichier ne doit contenir que la ligne de texte suivante : <codeph class="+ topic/ph pr-d/codeph ">answer=42&amp;question=unknown</codeph>
 </p>
 <p class="- topic/p ">Le code de l’exemple effectue les opérations suivantes :</p>
 <ol class="- topic/ol "><li class="- topic/li ">La fonction constructeur crée une occurrence d’URLLoader nommée <codeph class="+ topic/ph pr-d/codeph ">loader</codeph> et une occurrence d’URLRequest nommée <codeph class="+ topic/ph pr-d/codeph ">request</codeph>, qui contient l’emplacement et le nom du fichier à charger.</li><li class="- topic/li ">L’objet <codeph class="+ topic/ph pr-d/codeph ">loader</codeph> est transmis à la méthode <codeph class="+ topic/ph pr-d/codeph ">configureListeners()</codeph>, qui ajoute des écouteurs à chacun des événements URLLoader pris en charge.</li><li class="- topic/li ">L’objet <codeph class="+ topic/ph pr-d/codeph ">request</codeph> est ensuite transmis à la méthode <codeph class="+ topic/ph pr-d/codeph ">loader.load()</codeph>, qui charge le fichier texte.</li><li class="- topic/li ">Lorsque l’URLLoader a terminé de chargé le fichier texte, l’événement <codeph class="+ topic/ph pr-d/codeph ">Event.COMPLETE</codeph> se produit et déclenche la méthode <codeph class="+ topic/ph pr-d/codeph ">completeHandler()</codeph>. La méthode <codeph class="+ topic/ph pr-d/codeph ">completeHandler()</codeph> crée un objet URLVariables à partir du texte chargé depuis le fichier. L’objet URLVariables convertit les paires nom/valeur d’URL codées en propriétés ActionScript pour faciliter la manipulation des données chargées.</li></ol>
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">

package {
    import flash.display.Sprite;
    import flash.events.*;
    import flash.net.*;

    public class URLLoaderExample extends Sprite {
        public function URLLoaderExample() {
            var loader:URLLoader = new URLLoader();
            configureListeners(loader);

            var request:URLRequest = new URLRequest("urlLoaderExample.txt");
            try {
                loader.load(request);
            } catch (error:Error) {
                trace("Unable to load requested document.");
            }
        }

        private function configureListeners(dispatcher:IEventDispatcher):void {
            dispatcher.addEventListener(Event.COMPLETE, completeHandler);
            dispatcher.addEventListener(Event.OPEN, openHandler);
            dispatcher.addEventListener(ProgressEvent.PROGRESS, progressHandler);
            dispatcher.addEventListener(SecurityErrorEvent.SECURITY_ERROR, securityErrorHandler);
            dispatcher.addEventListener(HTTPStatusEvent.HTTP_STATUS, httpStatusHandler);
            dispatcher.addEventListener(IOErrorEvent.IO_ERROR, ioErrorHandler);
        }

        private function completeHandler(event:Event):void {
            var loader:URLLoader = URLLoader(event.target);
            trace("completeHandler: " + loader.data);
    
            var vars:URLVariables = new URLVariables(loader.data);
            trace("The answer is " + vars.answer);
        }

        private function openHandler(event:Event):void {
            trace("openHandler: " + event);
        }

        private function progressHandler(event:ProgressEvent):void {
            trace("progressHandler loaded:" + event.bytesLoaded + " total: " + event.bytesTotal);
        }

        private function securityErrorHandler(event:SecurityErrorEvent):void {
            trace("securityErrorHandler: " + event);
        }

        private function httpStatusHandler(event:HTTPStatusEvent):void {
            trace("httpStatusHandler: " + event);
        }

        private function ioErrorHandler(event:IOErrorEvent):void {
            trace("ioErrorHandler: " + event);
        }
    }
}
</codeblock></example></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.net.xml#URLRequest" class="- topic/link "><linktext class="- topic/linktext ">URLRequest</linktext></link><link href="flash.net.xml#URLVariables" class="- topic/link "><linktext class="- topic/linktext ">URLVariables</linktext></link><link href="flash.net.xml#URLStream" class="- topic/link "><linktext class="- topic/linktext ">URLStream</linktext></link></related-links><adobeApiEvent id="flash.net:URLLoader_flash.events.HTTPStatusEvent.HTTP_RESPONSE_STATUS_httpResponseStatus" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">httpResponseStatus</apiName><shortdesc class="- topic/shortdesc ">
 Distribué si un appel de la méthode load() tente d’accéder aux données via HTTP, et si Adobe AIR est capable de détecter et de renvoyer le code d’état de la requête.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.HTTPStatusEvent.HTTP_RESPONSE_STATUS</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.HTTPStatusEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Distribué si un appel de la méthode load() tente d’accéder aux données via HTTP, et si Adobe AIR est capable de détecter et de renvoyer le code d’état de la requête.
 
 </apiDesc></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.net.xml#URLLoader/load()" class="- topic/link "><linktext class="- topic/linktext ">load()</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.net:URLLoader_flash.events.HTTPStatusEvent.HTTP_STATUS_httpStatus" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">httpStatus</apiName><shortdesc class="- topic/shortdesc ">
 Distribué si un appel de la méthode URLLoader.load() tente d’accéder aux données via HTTP.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.HTTPStatusEvent.HTTP_STATUS</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.HTTPStatusEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Distribué si un appel de la méthode URLLoader.load() tente d’accéder aux données via HTTP. <ph class="- topic/ph ">Dans le cas de contenu s’exécutant dans Flash Player, cet événement n’est distribué que si l’environnement Flash Player actif est capable de détecter et de renvoyer le code d’état de la requête (certains environnements de navigateur ne sont pas capables de fournir cette information).</ph> Vous remarquerez que l’événement <codeph class="+ topic/ph pr-d/codeph ">httpStatus</codeph> (le cas échéant) est envoyé avant (et en complément de) tout événement <codeph class="+ topic/ph pr-d/codeph ">complete</codeph> ou <codeph class="+ topic/ph pr-d/codeph ">error</codeph>.
 
 </apiDesc></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.net.xml#URLLoader/load()" class="- topic/link "><linktext class="- topic/linktext ">URLLoader.load()</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.net:URLLoader_flash.events.SecurityErrorEvent.SECURITY_ERROR_securityError" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">securityError</apiName><shortdesc class="- topic/shortdesc ">
 Distribué si un appel de la méthode URLLoader.load() tente de charger des données d’un serveur en dehors d’un sandbox de sécurité.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.SecurityErrorEvent.SECURITY_ERROR</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.SecurityErrorEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Distribué si un appel de la méthode URLLoader.load() tente de charger des données d’un serveur en dehors d’un sandbox de sécurité. Egalement distribué si un appel de la méthode <codeph class="+ topic/ph pr-d/codeph ">URLLoader.load()</codeph> tente de charger un fichier SWZ, si le certificat n’est pas valide ou si la chaîne digest ne correspond pas au composant.
 </apiDesc></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.net.xml#URLLoader/load()" class="- topic/link "><linktext class="- topic/linktext ">URLLoader.load()</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.net:URLLoader_flash.events.IOErrorEvent.IO_ERROR_ioError" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">ioError</apiName><shortdesc class="- topic/shortdesc ">
 Distribué si un appel de la méthode URLLoader.load() provoque une erreur fatale qui met fin au téléchargement.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.IOErrorEvent.IO_ERROR</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.IOErrorEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Distribué si un appel de la méthode URLLoader.load() provoque une erreur fatale qui met fin au téléchargement.
 </apiDesc></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.net.xml#URLLoader/load()" class="- topic/link "><linktext class="- topic/linktext ">URLLoader.load()</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.net:URLLoader_flash.events.ProgressEvent.PROGRESS_progress" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">progress</apiName><shortdesc class="- topic/shortdesc ">
 Distribué à la réception des données au fur et à mesure du téléchargement.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.ProgressEvent.PROGRESS</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.ProgressEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Distribué à la réception des données au fur et à mesure du téléchargement.
 
 <p class="- topic/p ">Notez qu’avec un objet URLLoader, il est impossible d’accéder aux données avant la fin de leur téléchargement. L’événement progress indique donc uniquement la progression du téléchargement. Pour accéder aux données avant la fin de leur téléchargement, utilisez un objet URLStream. </p>
 </apiDesc></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.net.xml#URLLoader/load()" class="- topic/link "><linktext class="- topic/linktext ">URLLoader.load()</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.net:URLLoader_flash.events.Event.COMPLETE_complete" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">complete</apiName><shortdesc class="- topic/shortdesc ">
 Distribué après le décodage de toutes les données reçues et leur placement dans la propriété data de l’objet URLLoader.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.Event.COMPLETE</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.Event</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Distribué après le décodage de toutes les données reçues et leur placement dans la propriété data de l’objet URLLoader. Il est possible d’accéder aux données reçues une fois cet événement distribué.
 
 </apiDesc></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.net.xml#URLLoader/load()" class="- topic/link "><linktext class="- topic/linktext ">URLLoader.load()</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.net:URLLoader_flash.events.Event.OPEN_open" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">open</apiName><shortdesc class="- topic/shortdesc ">
 Distribué lorsque l’opération de téléchargement commence suite à un appel de la méthode URLLoader.load().</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.Event.OPEN</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.Event</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Distribué lorsque l’opération de téléchargement commence.
 </apiTipText></apiTipTexts></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Distribué lorsque l’opération de téléchargement commence suite à un appel de la méthode <codeph class="+ topic/ph pr-d/codeph ">URLLoader.load()</codeph>.
 
 </apiDesc></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.net.xml#URLLoader/load()" class="- topic/link "><linktext class="- topic/linktext ">URLLoader.load()</linktext></link></related-links></adobeApiEvent><apiConstructor id="flash.net:URLLoader:URLLoader" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">URLLoader</apiName><shortdesc class="- topic/shortdesc ">
     Crée un objet URLLoader.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">request</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.net:URLRequest</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Objet URLRequest indiquant l’URL à télécharger. Si ce paramètre n’est pas spécifié, aucune opération de chargement ne commence. S’il est spécifié, l’opération de chargement commence immédiatement (voir l’entrée <codeph class="+ topic/ph pr-d/codeph ">load</codeph> pour plus d’informations).
     
     </apiDesc></apiParam></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Crée un objet URLLoader.
     
     </apiDesc></apiConstructorDetail><related-links class="- topic/related-links "><link href="flash.net.xml#URLLoader/load()" class="- topic/link "><linktext class="- topic/linktext ">URLLoader.load()</linktext></link></related-links></apiConstructor><apiOperation id="flash.net:URLLoader:addEventListener" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">addEventListener</apiName><shortdesc class="- topic/shortdesc ">
    
	Enregistre un objet écouteur d’événement auprès d’un objet EventDispatcher afin que l’écouteur soit averti d’un événement.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">type</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Type d’événement.
	
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">listener</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Function</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Fonction d’auditeur qui traite l’événement. Cette fonction doit accepter un objet Event comme paramètre unique et ne rien renvoyer<ph class="- topic/ph ">, comme illustré ci-dessous :</ph>
	
	
    <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">function(evt:Event):void</codeblock>
	
	<p class="- topic/p ">Le nom de cette fonction n’a aucune importance.</p>
	
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">useCapture</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	
	<ph class="- topic/ph ">Détermine si l’écouteur est actif pendant la phase de capture ou pendant les phases cible et de propagation. Si la propriété <codeph class="+ topic/ph pr-d/codeph ">useCapture</codeph> est définie sur <codeph class="+ topic/ph pr-d/codeph ">true</codeph>, l’écouteur traite l’événement uniquement pendant la phase de capture et non pendant les phases cible et de propagation. Si la propriété <codeph class="+ topic/ph pr-d/codeph ">useCapture</codeph> est définie sur <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, l’écouteur traite l’événement uniquement pendant les phases cible et de propagation. Pour écouter l’événement dans les trois phases, appelez <codeph class="+ topic/ph pr-d/codeph ">addEventListener</codeph> à deux reprises, une première fois en définissant <codeph class="+ topic/ph pr-d/codeph ">useCapture</codeph> sur <codeph class="+ topic/ph pr-d/codeph ">true</codeph>, puis une nouvelle fois en définissant <codeph class="+ topic/ph pr-d/codeph ">useCapture</codeph> sur <codeph class="+ topic/ph pr-d/codeph ">false</codeph>. </ph>
	
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">priority</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Niveau de priorité de l’écouteur d’événement. La priorité est indiquée par un entier signé de 32 bits. Plus le nombre est élevé, plus la priorité est élevée. Tous les écouteurs dont la priorité correspond à <i class="+ topic/ph hi-d/i ">n</i> sont traités avant les écouteurs dotés de la priorité <i class="+ topic/ph hi-d/i ">n</i> -1. Les écouteurs dont la priorité est identique sont traités dans l’ordre où ils ont été ajoutés. La priorité par défaut est 0.
	
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">useWeakReference</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Détermine si la référence à l’écouteur est forte ou faible. Une référence forte (valeur par défaut) empêche le nettoyage de votre écouteur, Cela n’est pas le cas avec une référence faible. <p class="- topic/p ">Les fonctions de membres de niveau classe n’étant pas soumises au nettoyage, vous pouvez définir <codeph class="+ topic/ph pr-d/codeph ">useWeakReference</codeph> sur <codeph class="+ topic/ph pr-d/codeph ">true</codeph> pour ces fonctions. Si vous définissez <codeph class="+ topic/ph pr-d/codeph ">useWeakReference</codeph> sur <codeph class="+ topic/ph pr-d/codeph ">true</codeph> pour un écouteur correspondant à une fonction imbriquée interne, la fonction sera nettoyée et ne sera donc pas permanente. Si vous créez des références à la fonction interne (enregistrée dans une autre variable), celle-ci n’est pas nettoyée et reste permanente.</p>
	
	</apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    
	Enregistre un objet écouteur d’événement auprès d’un objet EventDispatcher afin que l’écouteur soit averti d’un événement. <ph class="- topic/ph ">Vous pouvez enregistrer les écouteurs d’événement dans tous les nœuds de la liste d’affichage pour un type spécifique d’événement, de phase et de priorité.</ph>
	
	
	
	<p class="- topic/p ">Après l’enregistrement d’un écouteur d’événement, vous ne pouvez plus modifier sa priorité par d’autres appels de <codeph class="+ topic/ph pr-d/codeph ">addEventListener()</codeph>. Pour modifier la priorité d’un écouteur, vous devez d’abord appeler <codeph class="+ topic/ph pr-d/codeph ">removeListener()</codeph>. Vous pouvez ensuite réenregistrer l’écouteur avec le nouveau niveau de priorité. </p>
	
	<p class="- topic/p ">N’oubliez pas qu’une fois l’écouteur enregistré, tous les prochains appels de <codeph class="+ topic/ph pr-d/codeph ">addEventListener()</codeph> avec une valeur <codeph class="+ topic/ph pr-d/codeph ">type</codeph> ou <codeph class="+ topic/ph pr-d/codeph ">useCapture</codeph> différente entraîneront la création d’un autre enregistrement d’écouteur. <ph class="- topic/ph ">Si, par exemple, vous enregistrez un écouteur dans lequel la propriété <codeph class="+ topic/ph pr-d/codeph ">useCapture</codeph> est définie sur <codeph class="+ topic/ph pr-d/codeph ">true</codeph>, il écoute uniquement pendant la phase de capture. Si vous appelez <codeph class="+ topic/ph pr-d/codeph ">addEventListener()</codeph> à l’aide du même objet écouteur, mais en définissant <codeph class="+ topic/ph pr-d/codeph ">useCapture</codeph> sur <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, vous obtenez deux écouteurs distincts : l’un qui écoute pendant la phase de capture et l’autre qui écoute pendant les phases cible et de propagation vers le haut (bubbling).</ph>
	</p>
	
	<p class="- topic/p ">Il est impossible d’enregistrer un écouteur d’événement uniquement pour la phase cible ou la phase de propagation vers le haut. Ces deux phases sont associées pendant l’enregistrement car la propagation vers le haut s’applique uniquement aux ancêtres du nœud cible.</p>
	
	<p class="- topic/p ">Si vous n’avez plus besoin d’un écouteur d’événements, supprimez-le en appelant <codeph class="+ topic/ph pr-d/codeph ">removeEventListener()</codeph>, afin d’éviter tout problème de mémoire. Les écouteurs d’événement ne sont pas automatiquement supprimés de la mémoire, car le nettoyeur de mémoire ne supprime pas l’écouteur tant que l’objet de distribution existe (à moins que le paramètre <codeph class="+ topic/ph pr-d/codeph ">useWeakReference</codeph> ne soit défini sur <codeph class="+ topic/ph pr-d/codeph ">true</codeph>).</p>
		
	<p class="- topic/p ">Lors de la copie d’une occurrence d’EventDispatcher, les écouteurs d’événement qui lui sont associés ne sont pas pris en compte (si le nouveau nœud nécessite un écouteur d’événement, vous devez associer celui-ci après la création du nœud). Toutefois, si vous déplacez une occurrence d’EventDispatcher, les écouteurs d’événement qui lui sont associés la suivent.</p>
	
	
	<p class="- topic/p ">Si un écouteur d’événement est enregistré sur un nœud alors qu’un événement est en cours de traitement sur ce nœud, l’écouteur n’est pas déclenché pendant la phase actuelle, mais il peut l’être pendant une phase ultérieure du flux d’événements, telle que la phase de propagation vers le haut (bubbling).</p>
	
	<p class="- topic/p ">Si un écouteur d’événement est supprimé d’un nœud sur lequel un événement est en cours de traitement, il est cependant déclenché par les actions en cours. Une fois supprimé, l’écouteur d’événement n’est plus jamais appelé (à moins d’être réenregistré à des fins de traitement ultérieur). </p>
	
	</apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.net:URLLoader:close" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">close</apiName><shortdesc class="- topic/shortdesc ">
     Ferme l’opération de chargement en cours.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Ferme l’opération de chargement en cours. Toute opération de chargement en cours prend immédiatement fin. Si aucune URL n’est en cours de transmission, une erreur de flux non valide est renvoyée.
     
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.net:URLLoader:load" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">load</apiName><shortdesc class="- topic/shortdesc ">
     Envoie et charge les données à partir de l’URL spécifiée.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Les objets <codeph class="+ topic/ph pr-d/codeph ">URLRequest.requestHeader</codeph> ne devraient pas contenir certains en-têtes de requête HTTP interdits. Pour plus d’informations, voir la description de la classe URLRequestHeader.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Cette erreur peut se produire pour les raisons suivantes : 1) <ph class="- topic/ph ">Flash Player ou </ph>Adobe AIR ne peut pas convertir le paramètre <codeph class="+ topic/ph pr-d/codeph ">URLRequest.data</codeph> du format UTF8 au format MBCS. Cette erreur est concernée si l’objet URLRequest transmis à la méthode <codeph class="+ topic/ph pr-d/codeph ">load()</codeph> est configuré pour exécuter une opération <codeph class="+ topic/ph pr-d/codeph ">GET</codeph> et si <codeph class="+ topic/ph pr-d/codeph ">System.useCodePage</codeph> est réglé sur <codeph class="+ topic/ph pr-d/codeph ">true</codeph>. 2) <ph class="- topic/ph ">Flash Player ou </ph>Adobe AIR ne peut pas allouer de mémoire aux données <codeph class="+ topic/ph pr-d/codeph ">POST</codeph>. Cette erreur est concernée si l’objet URLRequest transmis à <codeph class="+ topic/ph pr-d/codeph ">load</codeph> est configuré pour exécuter une opération <codeph class="+ topic/ph pr-d/codeph ">POST</codeph>.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">MemoryError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:MemoryError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Les fichiers non approuvés au niveau local ne peuvent pas communiquer avec Internet. Pour contourner ce problème, reclassifiez le fichier en tant que fichier local avec accès au réseau ou en tant que fichier approuvé.
     
      </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">SecurityError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">SecurityError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Si vous tentez de vous connecter à un port généralement réservé. Pour obtenir une liste complète des ports bloqués, voir la rubrique « Restriction des API de réseau » dans le <i class="+ topic/ph hi-d/i ">Guide du développeur d’ActionScript 3.0</i>.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">SecurityError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">SecurityError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">La valeur du paramètre de requête ou de la propriété <codeph class="+ topic/ph pr-d/codeph ">URLRequest.url</codeph> de l’objet URLRequest transmis est <codeph class="+ topic/ph pr-d/codeph ">null</codeph>.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">TypeError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">TypeError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">request</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.net:URLRequest</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Objet URLRequest indiquant l’URL à télécharger.
     
     </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Envoie et charge les données à partir de l’URL spécifiée. Les données peuvent être reçues sous forme de texte, de données binaires brutes ou de variables d’URL codées, selon la valeur définie pour la propriété <codeph class="+ topic/ph pr-d/codeph ">dataFormat</codeph>. Vous remarquerez que la valeur par défaut de la propriété <codeph class="+ topic/ph pr-d/codeph ">dataFormat</codeph> correspond à text. Si vous souhaitez envoyer des données à l’URL spécifiée, définissez la propriété <codeph class="+ topic/ph pr-d/codeph ">data</codeph> dans l’objet URLRequest.
     
     <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Remarque :</b> si un fichier en cours de chargement contient des caractères non-ASCII (comme dans les langues autres que l’anglais), nous vous recommandons d’enregistrer le fichier avec codage UTF-8 ou UTF-16, plutôt que sous un format non-Unicode, ASCII par exemple.</p>
     
     <p class="- topic/p "> Un fichier SWF du sandbox local avec système de fichiers risque de ne pas charger des données depuis une ressource située dans le sandbox réseau, ni lui en fournir.</p>
     
     <p class="- topic/p "> Par défaut, le fichier SWF appelant et l’URL chargée doivent se trouver dans le même domaine. Par exemple, un fichier SWF à l’adresse www.adobe.com peut charger uniquement des données provenant de sources situées aussi à l’adresse www.adobe.com. Pour charger des données à partir d’un autre domaine, placez un fichier de régulation d’URL sur le serveur hébergeant les données.</p>
     
     <p class="- topic/p ">Vous ne pouvez pas vous connecter aux ports généralement réservés. Pour obtenir une liste complète des ports bloqués, voir la rubrique « Restriction des API de réseau » dans le <i class="+ topic/ph hi-d/i ">Guide du développeur d’ActionScript 3.0</i>.</p>
     
     <p class="- topic/p "> Dans Flash Player versions 10 et ultérieures, si vous utilisez un Content-Type en plusieurs parties (par exemple « multipart/form-data ») qui contient un chargement (indiqué par un paramètre « filename » dans un en-tête « content-disposition » au sein du corps POST), l’opération POST est soumise aux règles de sécurité appliquées aux chargements :</p>
     <ul class="- topic/ul "><li class="- topic/li ">L’opération POST doit être effectuée en réponse à l’action d’un utilisateur, comme un clic de souris ou la pression d’une touche.</li><li class="- topic/li ">Si l’opération POST se fait entre plusieurs domaines (la cible POST ne se trouve pas sur le même serveur que le fichier SWF qui envoie la demande POST), le serveur cible doit fournir un fichier de régulation d’URL qui permette l’accès interdomaines.</li></ul>
     <p class="- topic/p ">Par ailleurs, la syntaxe de tous les Content-Type en plusieurs parties doit être correcte (selon la norme RFC2046). Si la syntaxe s’avère incorrecte, l’opération POST est soumise aux règles de sécurité appliquées aux chargements.</p>
     
     <p class="- topic/p ">Pour plus d’informations concernant la sécurité, voir la rubrique du Pôle de développement Flash Player : <xref href="http://www.adobe.com/go/devnet_security_fr" scope="external" class="- topic/xref ">Sécurité</xref> (disponible en anglais uniquement).</p>
     
     
     </apiDesc><example conref="examples\URLLoader_loadExample.as" class="- topic/example "> Dans l’exemple suivant, un fichier XML est chargé et le contenu des premiers arguments de son élément s’affiche dans un champ de texte.
 
 <p class="- topic/p ">Un objet <codeph class="+ topic/ph pr-d/codeph ">URLRequest</codeph> est créé pour identifier l’emplacement du fichier XML, qui pour cet exemple est dans le même répertoire que le fichier SWF. Le fichier est chargé dans un bloc <codeph class="+ topic/ph pr-d/codeph ">try...catch</codeph> pour capturer toute erreur pouvant survenir (ici nous capturons les erreurs <codeph class="+ topic/ph pr-d/codeph ">SecurityError</codeph>). Si un événement <codeph class="+ topic/ph pr-d/codeph ">IO_ERROR</codeph> survient, la méthode <codeph class="+ topic/ph pr-d/codeph ">errorHandler()</codeph> est invoquée et écrit un message d’erreur dans le champ de texte <codeph class="+ topic/ph pr-d/codeph ">xmlTextField</codeph>. Une fois le fichier XML reçu et placé dans la propriété de données de l’objet URLLoader <codeph class="+ topic/ph pr-d/codeph ">loader</codeph>, l’événement <codeph class="+ topic/ph pr-d/codeph ">Event.COMPLETE</codeph> est distribué et la méthode <codeph class="+ topic/ph pr-d/codeph ">loaderCompleteHandler()</codeph> est invoquée.</p>
 
 <p class="- topic/p ">Dans la méthode <codeph class="+ topic/ph pr-d/codeph ">loaderCompleteHandler()</codeph>, un bloc <codeph class="+ topic/ph pr-d/codeph ">try...catch</codeph> est utilisé pour capturer toute erreur d’analyse pouvant survenir lors de la conversion des données chargées depuis le fichier en objet XML. La méthode <codeph class="+ topic/ph pr-d/codeph ">readNodes()</codeph> passe de façon récursive à travers tous les éléments des noeuds du document XML et ajoute le champ de texte <codeph class="+ topic/ph pr-d/codeph ">xmlTextField</codeph> avec la liste des premiers attributs de tous les éléments.</p>
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
package {
    import flash.display.Sprite;
    import flash.events.Event;
    import flash.net.URLLoader;
    import flash.net.URLRequest;
    import flash.text.TextField;
    import flash.text.TextFieldAutoSize;
    import flash.xml.*;
    import flash.events.IOErrorEvent;
  
    public class URLLoader_loadExample extends Sprite {
        private var xmlTextField:TextField = new TextField();
        private var externalXML:XML;    
        private var loader:URLLoader;

        public function URLLoader_loadExample() {
            var request:URLRequest = new URLRequest("xmlFile.xml");

            loader = new URLLoader();
            
            try {
                loader.load(request);
            }
            catch (error:SecurityError)
            {
                trace("A SecurityError has occurred.");
            }

             loader.addEventListener(IOErrorEvent.IO_ERROR, errorHandler);
            loader.addEventListener(Event.COMPLETE, loaderCompleteHandler);

            xmlTextField.x = 10;
            xmlTextField.y = 10;
            xmlTextField.background = true;
            xmlTextField.autoSize = TextFieldAutoSize.LEFT;

            addChild(xmlTextField);
        }

        private function loaderCompleteHandler(event:Event):void {

                try {
                    externalXML = new XML(loader.data);
                    readNodes(externalXML);    
                } catch (e:TypeError) {
                    trace("Could not parse the XML file.");
                }
        }

        private function readNodes(node:XML):void {

                for each (var element:XML in node.elements()) {
                    xmlTextField.appendText(element.attributes()[0] + "\n");

                    readNodes(element);
                }    
        }

        private function errorHandler(e:IOErrorEvent):void {
            xmlTextField.text = "Had problem loading the XML File.";
        }
    }
}
</codeblock></example></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#URLRequestHeader" class="- topic/link "><linktext class="- topic/linktext ">URLRequestHeader</linktext></link><link href="flash.net.xml#URLRequest/requestHeaders" class="- topic/link "><linktext class="- topic/linktext ">URLRequest.requestHeaders</linktext></link><link href="flash.net.xml#URLRequest/data" class="- topic/link "><linktext class="- topic/linktext ">URLRequest.data</linktext></link><link href="flash.net.xml#URLRequest/digest" class="- topic/link "><linktext class="- topic/linktext ">URLRequest.digest</linktext></link></related-links><adobeApiEvent id="flash.net:URLLoader:load_complete" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">complete</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:Event</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Distribué après le chargement effectif de données.
     
     </apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">Distribué après le chargement effectif de données.</shortdesc></adobeApiEvent><adobeApiEvent id="flash.net:URLLoader:load_httpStatus" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">httpStatus</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:HTTPStatusEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Si l’accès s’effectue via HTTP et que l’environnement Flash Player actuel permet l’obtention des codes d’état, il se peut que vous receviez ces événements en plus des événements <codeph class="+ topic/ph pr-d/codeph ">complete</codeph> ou <codeph class="+ topic/ph pr-d/codeph ">error</codeph>.
     
     </apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">Si l’accès s’effectue via HTTP et que l’environnement Flash Player actuel permet l’obtention des codes d’état, il se peut que vous receviez ces événements en plus des événements complete ou error.</shortdesc></adobeApiEvent><adobeApiEvent id="flash.net:URLLoader:load_ioError" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">ioError</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:IOErrorEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">L’opération de chargement n’a pu se terminer.
     
     </apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">L’opération de chargement n’a pu se terminer.</shortdesc></adobeApiEvent><adobeApiEvent id="flash.net:URLLoader:load_progress" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">progress</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:ProgressEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Distribué à la réception des données au fur et à mesure du téléchargement.
     
     </apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">Distribué à la réception des données au fur et à mesure du téléchargement.</shortdesc></adobeApiEvent><adobeApiEvent id="flash.net:URLLoader:load_securityError" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">securityError</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:SecurityErrorEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Une opération de chargement a tenté d’extraire des données à partir d’un serveur situé en dehors du sandbox de sécurité de l’appelant. Vous pouvez contourner le problème en utilisant un fichier de régulation au niveau du serveur.
     </apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">Une opération de chargement a tenté d’extraire des données d’un serveur situé hors du sandbox de sécurité de l’appelant.</shortdesc></adobeApiEvent><adobeApiEvent id="flash.net:URLLoader:load_securityError" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">securityError</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:SecurityErrorEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Une opération de chargement a tenté de charger un fichier SWZ (un composant de la plateforme Adobe), mais le certificat n’est pas valide ou le digest ne correspond pas au composant.
     </apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">Une opération de chargement a tenté de charger un fichier SWZ (un composant de la plateforme Adobe), mais le certificat n’est pas valide ou le digest ne correspond pas au composant.</shortdesc></adobeApiEvent><adobeApiEvent id="flash.net:URLLoader:load_open" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">open</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:Event</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Distribué au commencement d’une opération de chargement.
     
     </apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">Distribué au commencement d’une opération de chargement.</shortdesc></adobeApiEvent><adobeApiEvent id="flash.net:URLLoader:load_httpResponseStatus" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">httpResponseStatus</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:HTTPStatusEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Distribué si un appel de la méthode <codeph class="+ topic/ph pr-d/codeph ">load()</codeph> tente d’accéder aux données via HTTP et si Adobe AIR est capable de détecter et de renvoyer le code d’état de la requête.
     
     </apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">Distribué si un appel de la méthode load() tente d’accéder aux données via HTTP, et si Adobe AIR est capable de détecter et de renvoyer le code d’état de la requête.</shortdesc></adobeApiEvent></apiOperation><apiValue id="flash.net:URLLoader:bytesLoaded" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">bytesLoaded</apiName><shortdesc class="- topic/shortdesc ">
     Indique le nombre d’octets chargés jusqu’ici au cours du chargement.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">0</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">uint</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Indique le nombre d’octets chargés jusqu’ici au cours du chargement.
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:URLLoader:bytesTotal" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">bytesTotal</apiName><shortdesc class="- topic/shortdesc ">
     Indique le nombre total d’octets dans les données téléchargées.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">0</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">uint</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Indique le nombre total d’octets dans les données téléchargées. Cette propriété contient 0 lorsque le chargement est en cours et est renseignée au terme de ce dernier. Egalement, si un en-tête Content-Length est manquant, bytesTotal sera indéterminé.
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:URLLoader:dataFormat" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">dataFormat</apiName><shortdesc class="- topic/shortdesc ">
     Contrôle si les données téléchargées sont reçues sous forme de texte (URLLoaderDataFormat.TEXT), de données binaires brutes (URLLoaderDataFormat.BINARY) ou de variables de code URL (URLLoaderDataFormat.VARIABLES).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">text</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiDefaultValue>URLLoaderDataFormat.TEXT
     </apiDefaultValue><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Contrôle la méthode de réception des données téléchargées.
     
     </apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Contrôle si les données téléchargées sont reçues sous forme de texte (<codeph class="+ topic/ph pr-d/codeph ">URLLoaderDataFormat.TEXT</codeph>), de données binaires brutes (<codeph class="+ topic/ph pr-d/codeph ">URLLoaderDataFormat.BINARY</codeph>) ou de variables d’URL codées (<codeph class="+ topic/ph pr-d/codeph ">URLLoaderDataFormat.VARIABLES</codeph>).
     
     <p class="- topic/p ">Si la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">dataFormat</codeph> est <codeph class="+ topic/ph pr-d/codeph ">URLLoaderDataFormat.TEXT</codeph>, les données reçues représentent une chaîne qui contient le texte du fichier chargé.</p>
     
     <p class="- topic/p ">Si la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">dataFormat</codeph> est <codeph class="+ topic/ph pr-d/codeph ">URLLoaderDataFormat.BINARY</codeph>, les données reçues représentent un objet ByteArray qui contient les données binaires brutes.</p>
     
     <p class="- topic/p ">Si la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">dataFormat</codeph> est <codeph class="+ topic/ph pr-d/codeph ">URLLoaderDataFormat.VARIABLES</codeph>, les données reçues représentent un objet URLVariables qui contient les variables d’URL codées.</p>
     
     </apiDesc><example conref="examples\URLLoader_dataFormat.as" class="- topic/example "> L’exemple suivant indique comment charger des fichiers texte externes. Utilisez les classes URLRequest et URLLoader, puis écoutez l’événement complete. Exemple fourni par <xref href="http://actionscriptexamples.com/2008/02/26/loading-text-files-using-the-urlloader-class-in-actionscript-30/" scope="_mmexternal" class="- topic/xref ">ActionScriptExamples.com</xref>. 
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
var PATH:String = "lorem.txt";
var urlRequest:URLRequest = new URLRequest(PATH);
var urlLoader:URLLoader = new URLLoader();
urlLoader.dataFormat = URLLoaderDataFormat.TEXT; // default
urlLoader.addEventListener(Event.COMPLETE, urlLoader_complete);
urlLoader.load(urlRequest);
 
function urlLoader_complete(evt:Event):void {
    textArea.text = urlLoader.data;
}
</codeblock></example></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#URLLoaderDataFormat" class="- topic/link "><linktext class="- topic/linktext ">URLLoaderDataFormat</linktext></link></related-links></apiValue><apiValue id="flash.net:URLLoader:data" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">data</apiName><shortdesc class="- topic/shortdesc ">
     Données reçues par le biais de l’opération de chargement.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiType value="" name="type" class="- topic/state reference/state apiRef/apiType "/></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Données reçues par le biais de l’opération de chargement. Cette propriété n’est renseignée qu’à la fin du chargement. Le format des données varie en fonction du paramétrage de la propriété <codeph class="+ topic/ph pr-d/codeph ">dataFormat</codeph> :
     
     <p class="- topic/p ">Si la propriété <codeph class="+ topic/ph pr-d/codeph ">dataFormat</codeph> est <codeph class="+ topic/ph pr-d/codeph ">URLLoaderDataFormat.TEXT</codeph>, les données reçues représentent une chaîne qui contient le texte du fichier chargé.</p>
     
     <p class="- topic/p ">Si la propriété <codeph class="+ topic/ph pr-d/codeph ">dataFormat</codeph> est <codeph class="+ topic/ph pr-d/codeph ">URLLoaderDataFormat.BINARY</codeph>, les données reçues représentent un objet ByteArray qui contient des données binaires brutes.</p>
     
     <p class="- topic/p ">Si la propriété <codeph class="+ topic/ph pr-d/codeph ">dataFormat</codeph> est <codeph class="+ topic/ph pr-d/codeph ">URLLoaderDataFormat.VARIABLES</codeph>, les données reçues représentent un objet URLVariables qui contient des variables d’URL codées.</p>
     
     </apiDesc><example conref="examples\URLLoader_data.as" class="- topic/example "> L’exemple suivant indique comment charger un fichier texte externe avec des variables codées dans l’URL dans un document ActionScript 3.0 à l’aide de la classe URLLoader et en définissant la propriété dataFormat sur la constante URLLoaderDataFormat.VARIABLES ("variables"). Exemple fourni par <xref href="http://actionscriptexamples.com/2008/02/27/loading-url-encoded-variables-into-a-flash-application-using-the-urlloader-class-in-actionscript-30/" scope="_mmexternal" class="- topic/xref ">ActionScriptExamples.com</xref>. 
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
//params.txt is a local file that includes: firstName=Tom&amp;lastName=Jones
var lbl:TextField = new TextField();
var urlRequest:URLRequest = new URLRequest("params.txt");
var urlLoader:URLLoader = new URLLoader();
urlLoader.dataFormat = URLLoaderDataFormat.VARIABLES;
urlLoader.addEventListener(Event.COMPLETE, urlLoader_complete);
urlLoader.load(urlRequest);
 
function urlLoader_complete(evt:Event):void {
    lbl.text = urlLoader.data.lastName + "," + urlLoader.data.firstName;
    addChild(lbl);
}
</codeblock></example></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#URLLoaderDataFormat" class="- topic/link "><linktext class="- topic/linktext ">URLLoaderDataFormat</linktext></link><link href="flash.net.xml#URLLoader/dataFormat" class="- topic/link "><linktext class="- topic/linktext ">URLLoader.dataFormat</linktext></link></related-links></apiValue></apiClassifier><apiClassifier languages="" id="flash.net:IDynamicPropertyOutput" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">IDynamicPropertyOutput</apiName><shortdesc class="- topic/shortdesc ">
	 Cette interface contrôle la sérialisation des propriétés dynamiques des objets dynamiques.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiInterface class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiInterface "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier "/></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Cette interface contrôle la sérialisation des propriétés dynamiques des objets dynamiques. Utilisez cette interface avec l’interface IDynamicPropertyWriter et la propriété <codeph class="+ topic/ph pr-d/codeph ">ObjectEncoding.dynamicPropertyWriter</codeph>.
	 
     </apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.net.xml#IDynamicPropertyWriter" class="- topic/link "><linktext class="- topic/linktext ">IDynamicPropertyWriter</linktext></link><link href="flash.net.xml#ObjectEncoding/dynamicPropertyWriter" class="- topic/link "><linktext class="- topic/linktext ">ObjectEncoding.dynamicPropertyWriter</linktext></link></related-links><apiOperation id="flash.net:IDynamicPropertyOutput:flash.net:IDynamicPropertyOutput:writeDynamicProperty" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">writeDynamicProperty</apiName><shortdesc class="- topic/shortdesc ">
		 Ajoute une propriété dynamique à la sortie binaire d’un objet sérialisé.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">name</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Nom de la propriété. Vous pouvez utiliser ce paramètre soit pour indiquer le nom d’une propriété existante de l’objet dynamique, soit pour créer une nouvelle propriété.  
		 
		 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">value</apiItemName><apiType value="any" name="type" class="- topic/state reference/state apiRef/apiType "/><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Valeur à écrire dans la propriété spécifiée.
		 
         </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 Ajoute une propriété dynamique à la sortie binaire d’un objet sérialisé. Lorsque l’objet est ensuite lu (à l’aide d’une méthode telle que <codeph class="+ topic/ph pr-d/codeph ">readObject</codeph>), il contient la nouvelle propriété. Cette méthode vous permet d’exclure des propriétés d’objets dynamiques de la sérialisation, d’écrire des valeurs dans les propriétés des objets dynamiques ou de créer de nouvelles propriétés pour des objets dynamiques.
		 
         </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#IDynamicPropertyWriter" class="- topic/link "><linktext class="- topic/linktext ">IDynamicPropertyWriter</linktext></link><link href="flash.net.xml#ObjectEncoding/dynamicPropertyWriter" class="- topic/link "><linktext class="- topic/linktext ">ObjectEncoding.dynamicPropertyWriter</linktext></link></related-links></apiOperation></apiClassifier><apiClassifier languages="" id="flash.net:NetStreamPlayOptions" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">NetStreamPlayOptions</apiName><shortdesc class="- topic/shortdesc ">
 
 La classe NetStreamPlayOptions spécifie les diverses options pouvant être transmises à la méthode NetStream.play2().</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">La classe NetStreamPlayOptions spécifie les diverses options pouvant être transmises à la méthode NetStream.play2().
 
 </apiTipText></apiTipTexts><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:EventDispatcher</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 
 La classe NetStreamPlayOptions spécifie les diverses options pouvant être transmises à la méthode <codeph class="+ topic/ph pr-d/codeph ">NetStream.play2()</codeph>. Vous pouvez transmettre un objet NetStreamPlayOptions à <codeph class="+ topic/ph pr-d/codeph ">play2()</codeph>, et les propriétés de la classe spécifient les différentes options. La principale utilisation de cette classe consiste à implémenter dynamiquement des transitions entre des flux, soit pour basculer vers d’autres flux de même contenu codés avec des vitesses de transmission différentes, soit pour basculer vers un autre contenu dans une liste de lecture.
 
 </apiDesc></apiClassifierDetail><apiConstructor id="flash.net:NetStreamPlayOptions:NetStreamPlayOptions" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">NetStreamPlayOptions</apiName><shortdesc class="- topic/shortdesc ">
     
     Crée un objet NetStreamPlayOptions pour spécifier les options transmises à la méthode NetStream.play2().</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     
     Crée un objet NetStreamPlayOptions pour spécifier les options transmises à la méthode <codeph class="+ topic/ph pr-d/codeph ">NetStream.play2()</codeph>. 
     
     </apiDesc></apiConstructorDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStream/play2()" class="- topic/link "><linktext class="- topic/linktext ">NetStream.play2()</linktext></link></related-links></apiConstructor><apiValue id="flash.net:NetStreamPlayOptions:len" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">len</apiName><shortdesc class="- topic/shortdesc ">
    Durée de la lecture, en secondes, du flux spécifié dans streamName.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Durée de la lecture, en secondes, du flux spécifié dans streamName.
     </apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Durée de la lecture, en secondes, du flux spécifié dans <codeph class="+ topic/ph pr-d/codeph ">streamName</codeph>. La valeur par défaut est -1, et signifie que Flash Player lit un flux en direct jusqu’à ce qu’il ne soit plus disponible ou lit un flux enregistré jusqu’à la fin. Si vous transmettez 0 pour <codeph class="+ topic/ph pr-d/codeph ">len</codeph>, Flash Player lit l’unique image située à <codeph class="+ topic/ph pr-d/codeph ">start</codeph> secondes du début d’un flux enregistré (en supposant que <codeph class="+ topic/ph pr-d/codeph ">start</codeph> est égal ou supérieur à 0).
    <p class="- topic/p ">Si vous transmettez un nombre positif pour <codeph class="+ topic/ph pr-d/codeph ">len</codeph>, Flash Player lit un flux en direct pendant <codeph class="+ topic/ph pr-d/codeph ">len</codeph> secondes lorsqu’il devient disponible, ou lit un flux enregistré pendant <codeph class="+ topic/ph pr-d/codeph ">len</codeph> secondes (si le flux se termine avant <codeph class="+ topic/ph pr-d/codeph ">len</codeph> secondes, la lecture prend fin en même temps que le flux).</p> 
    <p class="- topic/p ">Si vous transmettez un nombre négatif autre que -1 pour <codeph class="+ topic/ph pr-d/codeph ">len</codeph>, Flash Player interprète la valeur comme s’il s’agissait de -1.</p>
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStream/play()" class="- topic/link "><linktext class="- topic/linktext ">NetStream.play()</linktext></link><link href="flash.net.xml#NetStream/play2()" class="- topic/link "><linktext class="- topic/linktext ">NetStream.play2()</linktext></link><link href="flash.net.xml#NetStreamPlayOptions/start" class="- topic/link "><linktext class="- topic/linktext ">start</linktext></link></related-links></apiValue><apiValue id="flash.net:NetStreamPlayOptions:offset" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">offset</apiName><shortdesc class="- topic/shortdesc ">
     Durée, en secondes, à laquelle doit être effectué le passage à un nouveau flux lors de la lecture du flux.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Durée, en secondes, à laquelle doit être effectué le passage à un nouveau flux lors de la lecture du flux. Le paramètre <codeph class="+ topic/ph pr-d/codeph ">offset</codeph> est utilisé lors d’un appel de la méthode <codeph class="+ topic/ph pr-d/codeph ">NetStream.play2()</codeph> avec le mode de transition <codeph class="+ topic/ph pr-d/codeph ">NetStreamPlayTransitions.Switch</codeph>. Flash Media Server recherche le point de basculement le plus proche après la durée de décalage spécifiée, et commence la diffusion en continu du nouveau flux à partir de ce point. 
     
     <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Commutation rapide</b></p>
     
     <p class="- topic/p ">Lorsque cette propriété est spécifiée, Flash Media Server met immédiatement fin au flux actuel et commence la diffusion en continu du nouveau flux à partir de la position d’index spécifiée, sans attendre de trouver une image-clé. Toutes les données suivant le décalage déjà mises en mémoire tampon à partir d’un flux précédent sont vidées. Cette technique permet de basculer vers un nouveau flux plus rapidement que la commutation standard, car il n’est pas nécessaire de vider les données d’un flux précédent mises en mémoire tampon.</p>
     
     <p class="- topic/p ">La valeur par défaut de <codeph class="+ topic/ph pr-d/codeph ">offset</codeph> est -1, qui correspond au mode de commutation rapide. Dans ce mode, la commutation se produit à la première image-clé disponible après <codeph class="+ topic/ph pr-d/codeph ">netstream.time + 3</codeph>, c’est-à-dire environ 3 secondes plus tard que le point où s’est arrêtée la lecture.</p>
     
     <p class="- topic/p ">La valeur de décalage doit être supérieure à la durée de lecture actuelle (<codeph class="+ topic/ph pr-d/codeph ">NetStream.time</codeph>). Si cette valeur est inférieure, un événement d’état <codeph class="+ topic/ph pr-d/codeph ">NetStream.Play.Failed</codeph> est envoyé.</p>
     
     <p class="- topic/p ">Pour plus d’informations, voir la section <xref href="http://www.adobe.com/go/learn_fms_fastswitch_fr" scope="external" class="- topic/xref ">"Commutation rapide entre les flux"</xref> du <i class="+ topic/ph hi-d/i ">Guide du développeur d’Adobe Flash Media Server</i>.</p>
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStreamPlayOptions/start" class="- topic/link "><linktext class="- topic/linktext ">start</linktext></link><link href="flash.net.xml#NetStream/play()" class="- topic/link "><linktext class="- topic/linktext ">NetStream.play()</linktext></link><link href="flash.net.xml#NetStream/play2()" class="- topic/link "><linktext class="- topic/linktext ">NetStream.play2()</linktext></link><link href="flash.net.xml#NetStream/time" class="- topic/link "><linktext class="- topic/linktext ">NetStream.time</linktext></link><link href="flash.net.xml#NetStreamPlayTransitions/SWITCH" class="- topic/link "><linktext class="- topic/linktext ">NetStreamPlayTransitions.SWITCH</linktext></link></related-links></apiValue><apiValue id="flash.net:NetStreamPlayOptions:oldStreamName" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">oldStreamName</apiName><shortdesc class="- topic/shortdesc ">
    Nom de l’ancien flux ou du flux à partir duquel s’effectue la transition.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Nom de l’ancien flux ou du flux à partir duquel s’effectue la transition. Lorsque la méthode <codeph class="+ topic/ph pr-d/codeph ">NetStream.play2()</codeph> n’est utilisée que pour lire un flux (sans effectuer de transition), la valeur de cette propriété doit être null ou undefined. Sinon, spécifiez le flux à partir duquel s’effectue la transition.   
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStreamPlayOptions/streamName" class="- topic/link "><linktext class="- topic/linktext ">streamName</linktext></link><link href="flash.net.xml#NetStream/play()" class="- topic/link "><linktext class="- topic/linktext ">NetStream.play()</linktext></link><link href="flash.net.xml#NetStream/play2()" class="- topic/link "><linktext class="- topic/linktext ">NetStream.play2()</linktext></link></related-links></apiValue><apiValue id="flash.net:NetStreamPlayOptions:start" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">start</apiName><shortdesc class="- topic/shortdesc ">
    Instant de départ, en secondes, pour streamName.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Instant de départ, en secondes, pour streamName.
     </apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Instant de départ, en secondes, pour <codeph class="+ topic/ph pr-d/codeph ">streamName</codeph>. Les valeurs valides sont -2, -1 et 0.
    
    <p class="- topic/p ">La valeur par défaut de <codeph class="+ topic/ph pr-d/codeph ">start</codeph> est -2, ce qui signifie que Flash Player tente d’abord de lire le flux en direct spécifié dans <codeph class="+ topic/ph pr-d/codeph ">streamName</codeph>. Lorsque aucun flux en direct portant ce nom n’est détecté, Flash Player lit le flux enregistré spécifié dans <codeph class="+ topic/ph pr-d/codeph ">streamName</codeph>. Lorsque aucun flux en direct ou enregistré n’est détecté, Flash Player ouvre un flux en direct nommé <codeph class="+ topic/ph pr-d/codeph ">streamName</codeph>, même lorsque personne ne publie sur ce dernier. Lorsque quelqu’un démarre une publication sur ce flux, Flash Player commence à le lire.</p>
    
    <p class="- topic/p ">Si vous transmettez -1 pour <codeph class="+ topic/ph pr-d/codeph ">start</codeph>, Flash Player ne lit que le flux en direct spécifié dans <codeph class="+ topic/ph pr-d/codeph ">streamName</codeph>. Lorsque aucun flux en direct n’est détecté, Flash Player l’attend indéfiniment si <codeph class="+ topic/ph pr-d/codeph ">len</codeph> est défini sur -1 ; si <codeph class="+ topic/ph pr-d/codeph ">len</codeph> est défini sur une autre valeur, Flash Player attend pendant <codeph class="+ topic/ph pr-d/codeph ">len</codeph> secondes avant de commencer la lecture du prochain élément dans la liste.</p>
    
    <p class="- topic/p "> Si vous transmettez 0 ou un nombre positif pour <codeph class="+ topic/ph pr-d/codeph ">start</codeph>, Flash Player lit uniquement un flux enregistré nommé <codeph class="+ topic/ph pr-d/codeph ">streamName</codeph>, en commençant à <codeph class="+ topic/ph pr-d/codeph ">start</codeph> secondes à partir du début du flux. Si aucun flux enregistré n’est détecté, Flash Player commence immédiatement la lecture du prochain élément dans la liste de lecture.</p>
    
    <p class="- topic/p ">Si vous transmettez un nombre négatif autre que -1 ou -2 pour <codeph class="+ topic/ph pr-d/codeph ">start</codeph>, Flash Player interprète la valeur comme s’il s’agissait de -2.</p>
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStream/play()" class="- topic/link "><linktext class="- topic/linktext ">NetStream.play()</linktext></link><link href="flash.net.xml#NetStream/play2()" class="- topic/link "><linktext class="- topic/linktext ">NetStream.play2()</linktext></link><link href="flash.net.xml#NetStreamPlayOptions/len" class="- topic/link "><linktext class="- topic/linktext ">len</linktext></link></related-links></apiValue><apiValue id="flash.net:NetStreamPlayOptions:streamName" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">streamName</apiName><shortdesc class="- topic/shortdesc ">
    Nom du nouveau flux vers lequel doit s’effectuer la transition ou à lire.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Nom du nouveau flux vers lequel doit s’effectuer la transition ou à lire. Lorsque <codeph class="+ topic/ph pr-d/codeph ">oldStreamName</codeph> est null ou undefined, un appel à <codeph class="+ topic/ph pr-d/codeph ">NetStream.play2()</codeph> commence simplement la lecture de <codeph class="+ topic/ph pr-d/codeph ">streamName</codeph>. Si <codeph class="+ topic/ph pr-d/codeph ">oldStreamName</codeph> est spécifié, un appel à <codeph class="+ topic/ph pr-d/codeph ">NetStream.play2()</codeph> entraîne une transition de <codeph class="+ topic/ph pr-d/codeph ">oldStreamName</codeph> vers <codeph class="+ topic/ph pr-d/codeph ">streamName</codeph> avec le mode de transition spécifié dans la propriété <codeph class="+ topic/ph pr-d/codeph ">transition</codeph>. 
    
    </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStreamPlayOptions/oldStreamName" class="- topic/link "><linktext class="- topic/linktext ">oldStreamName</linktext></link><link href="flash.net.xml#NetStream/play()" class="- topic/link "><linktext class="- topic/linktext ">NetStream.play()</linktext></link><link href="flash.net.xml#NetStream/play2()" class="- topic/link "><linktext class="- topic/linktext ">NetStream.play2()</linktext></link></related-links></apiValue><apiValue id="flash.net:NetStreamPlayOptions:transition" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">transition</apiName><shortdesc class="- topic/shortdesc ">
    Mode dans lequel le streamName est lu ou transité vers.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Mode dans lequel le streamName est lu ou transité vers.
     </apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Mode dans lequel le <codeph class="+ topic/ph pr-d/codeph ">streamName</codeph> est lu ou transité vers. Les valeurs possibles sont des constantes de la classe NetStreamPlayTransitions. Selon si la méthode <codeph class="+ topic/ph pr-d/codeph ">Netstream.play2()</codeph> est appelée pour lire ou faire transiter un flux, le mode de transition entraîne des comportement différents. Pour plus d’informations sur les modes de transition, voir la classe NetStreamPlayTransitions.
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStreamPlayTransitions" class="- topic/link "><linktext class="- topic/linktext ">NetStreamPlayTransitions</linktext></link><link href="flash.net.xml#NetStream/play2()" class="- topic/link "><linktext class="- topic/linktext ">NetStream.play2()</linktext></link></related-links></apiValue></apiClassifier><apiClassifier languages="" id="flash.net:NetStreamMulticastInfo" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">NetStreamMulticastInfo</apiName><shortdesc class="- topic/shortdesc ">
La classe NetStreamMulticastInfo spécifie les diverses statistiques de qualité de service (QoS) liées à la transmission sous-jacente d’un flux RTMFP homologue à homologue et d’un flux de multidiffusion IP d’un objet NetStream.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
La classe NetStreamMulticastInfo spécifie les diverses statistiques de qualité de service (QoS) liées à la transmission sous-jacente d’un flux RTMFP homologue à homologue et d’un flux de multidiffusion IP d’un objet NetStream. Un objet NetStreamMulticastInfo est renvoyé par la propriété <codeph class="+ topic/ph pr-d/codeph ">NetStream.multicastInfo</codeph>.

<p class="- topic/p ">Les propriétés qui renvoient des nombres représentent des totaux calculés depuis le début du flux en multidiffusion. Ces types de propriétés incluent le nombre d’octets multimédias transmis ou le nombre de messages d’un fragment multimédia reçus. Les propriétés correspondant à des débits représentent un instantané du débit actuel dont la moyenne est établie sur quelques secondes. Ces types de propriétés incluent le débit auquel un nœud local reçoit les données. </p>

<p class="- topic/p ">Pour afficher la liste de valeurs contenues dans l’objet NetStreamMulticastInfo, utilisez la méthode <codeph class="+ topic/ph pr-d/codeph ">NetStreamMulticastInfo.toString()</codeph>.</p>

</apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStreamMulticastInfo/toString()" class="- topic/link "><linktext class="- topic/linktext ">toString()</linktext></link><link href="flash.net.xml#NetStream/multicastInfo" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetStream.multicastInfo</linktext></link></related-links><apiOperation id="flash.net:NetStreamMulticastInfo:toString" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">toString</apiName><shortdesc class="- topic/shortdesc ">
    Renvoie une chaîne répertoriant les propriétés de l’objet NetStreamMulticastInfo.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Chaîne contenant les valeurs des propriétés de l’objet NetStreamMulticastInfo.
    
    </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Renvoie une chaîne répertoriant les propriétés de l’objet NetStreamMulticastInfo.
    
    </apiDesc></apiOperationDetail></apiOperation><apiValue id="flash.net:NetStreamMulticastInfo:bytesPushedFromPeers:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">bytesPushedFromPeers</apiName><shortdesc class="- topic/shortdesc ">
    Spécifie le nombre d’octets multimédias envoyés par les homologues et reçus par le nœud local.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Spécifie le nombre d’octets multimédias envoyés par les homologues et reçus par le nœud local.
    
    </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStreamMulticastInfo/bytesRequestedFromPeers" class="- topic/link "><linktext class="- topic/linktext ">bytesRequestedFromPeers</linktext></link><link href="flash.net.xml#NetStreamMulticastInfo/fragmentsPushedFromPeers" class="- topic/link "><linktext class="- topic/linktext ">fragmentsPushedFromPeers</linktext></link><link href="flash.net.xml#NetStreamMulticastInfo/fragmentsRequestedFromPeers" class="- topic/link "><linktext class="- topic/linktext ">fragmentsRequestedFromPeers</linktext></link></related-links></apiValue><apiValue id="flash.net:NetStreamMulticastInfo:bytesPushedToPeers:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">bytesPushedToPeers</apiName><shortdesc class="- topic/shortdesc ">
    Spécifie le nombre d’octets multimédias que le nœud local a envoyé aux homologues.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Spécifie le nombre d’octets multimédias que le nœud local a envoyé aux homologues.
    
    </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStreamMulticastInfo/bytesRequestedByPeers" class="- topic/link "><linktext class="- topic/linktext ">bytesRequestedByPeers</linktext></link><link href="flash.net.xml#NetStreamMulticastInfo/fragmentsPushedToPeers" class="- topic/link "><linktext class="- topic/linktext ">fragmentsPushedToPeers</linktext></link><link href="flash.net.xml#NetStreamMulticastInfo/fragmentsRequestedByPeers" class="- topic/link "><linktext class="- topic/linktext ">fragmentsRequestedByPeers</linktext></link></related-links></apiValue><apiValue id="flash.net:NetStreamMulticastInfo:bytesReceivedFromIPMulticast:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">bytesReceivedFromIPMulticast</apiName><shortdesc class="- topic/shortdesc ">
    Spécifie le nombre d’octets multimédias que le nœud local a reçu de la multidiffusion IP.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Spécifie le nombre d’octets multimédias que le nœud local a reçu de la multidiffusion IP.
    
    </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStreamMulticastInfo/bytesReceivedFromServer" class="- topic/link "><linktext class="- topic/linktext ">bytesReceivedFromServer</linktext></link><link href="flash.net.xml#NetStreamMulticastInfo/fragmentsReceivedFromIPMulticast" class="- topic/link "><linktext class="- topic/linktext ">fragmentsReceivedFromIPMulticast</linktext></link><link href="flash.net.xml#NetStreamMulticastInfo/fragmentsReceivedFromServer" class="- topic/link "><linktext class="- topic/linktext ">fragmentsReceivedFromServer</linktext></link><link href="flash.net.xml#NetStreamMulticastInfo/receiveDataBytesPerSecondFromIPMulticast" class="- topic/link "><linktext class="- topic/linktext ">receiveDataBytesPerSecondFromIPMulticast</linktext></link></related-links></apiValue><apiValue id="flash.net:NetStreamMulticastInfo:bytesReceivedFromServer:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">bytesReceivedFromServer</apiName><shortdesc class="- topic/shortdesc ">
    Spécifie le nombre d’octets multimédias que le nœud local a reçu du serveur.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Spécifie le nombre d’octets multimédias que le nœud local a reçu du serveur.
    
    </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStreamMulticastInfo/bytesReceivedFromIPMulticast" class="- topic/link "><linktext class="- topic/linktext ">bytesReceivedFromIPMulticast</linktext></link><link href="flash.net.xml#NetStreamMulticastInfo/fragmentsReceivedFromIPMulticast" class="- topic/link "><linktext class="- topic/linktext ">fragmentsReceivedFromIPMulticast</linktext></link><link href="flash.net.xml#NetStreamMulticastInfo/fragmentsReceivedFromServer" class="- topic/link "><linktext class="- topic/linktext ">fragmentsReceivedFromServer</linktext></link><link href="flash.net.xml#NetStreamMulticastInfo/receiveDataBytesPerSecondFromServer" class="- topic/link "><linktext class="- topic/linktext ">receiveDataBytesPerSecondFromServer</linktext></link></related-links></apiValue><apiValue id="flash.net:NetStreamMulticastInfo:bytesRequestedByPeers:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">bytesRequestedByPeers</apiName><shortdesc class="- topic/shortdesc ">
    Spécifie le nombre d’octets multimédias que le nœud local a envoyé aux homologues après que ceux-ci ont sollicité des fragments spécifiques.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Spécifie le nombre d’octets multimédias que le nœud local a envoyé aux homologues après que ceux-ci ont sollicité des fragments spécifiques.
    
    </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStreamMulticastInfo/bytesPushedToPeers" class="- topic/link "><linktext class="- topic/linktext ">bytesPushedToPeers</linktext></link><link href="flash.net.xml#NetStreamMulticastInfo/fragmentsPushedToPeers" class="- topic/link "><linktext class="- topic/linktext ">fragmentsPushedToPeers</linktext></link><link href="flash.net.xml#NetStreamMulticastInfo/fragmentsRequestedByPeers" class="- topic/link "><linktext class="- topic/linktext ">fragmentsRequestedByPeers</linktext></link></related-links></apiValue><apiValue id="flash.net:NetStreamMulticastInfo:bytesRequestedFromPeers:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">bytesRequestedFromPeers</apiName><shortdesc class="- topic/shortdesc ">
    Spécifie le nombre d’octets multimédias que le nœud local a sollicité et reçu des homologues.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Spécifie le nombre d’octets multimédias que le nœud local a sollicité et reçu des homologues.
    
    </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStreamMulticastInfo/bytesPushedFromPeers" class="- topic/link "><linktext class="- topic/linktext ">bytesPushedFromPeers</linktext></link><link href="flash.net.xml#NetStreamMulticastInfo/fragmentsPushedFromPeers" class="- topic/link "><linktext class="- topic/linktext ">fragmentsPushedFromPeers</linktext></link><link href="flash.net.xml#NetStreamMulticastInfo/fragmentsRequestedFromPeers" class="- topic/link "><linktext class="- topic/linktext ">fragmentsRequestedFromPeers</linktext></link></related-links></apiValue><apiValue id="flash.net:NetStreamMulticastInfo:fragmentsPushedFromPeers:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">fragmentsPushedFromPeers</apiName><shortdesc class="- topic/shortdesc ">
    Spécifie le nombre de messages de fragments multimédias ayant été envoyés aux homologues et reçus par le nœud local.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Spécifie le nombre de messages de fragments multimédias ayant été envoyés aux homologues et reçus par le nœud local.
    
    </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStreamMulticastInfo/bytesPushedFromPeers" class="- topic/link "><linktext class="- topic/linktext ">bytesPushedFromPeers</linktext></link><link href="flash.net.xml#NetStreamMulticastInfo/bytesRequestedFromPeers" class="- topic/link "><linktext class="- topic/linktext ">bytesRequestedFromPeers</linktext></link><link href="flash.net.xml#NetStreamMulticastInfo/fragmentsRequestedFromPeers" class="- topic/link "><linktext class="- topic/linktext ">fragmentsRequestedFromPeers</linktext></link></related-links></apiValue><apiValue id="flash.net:NetStreamMulticastInfo:fragmentsPushedToPeers:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">fragmentsPushedToPeers</apiName><shortdesc class="- topic/shortdesc ">
    Spécifie le nombre de messages de fragments multimédias que le nœud local a envoyé aux homologues.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Spécifie le nombre de messages de fragments multimédias que le nœud local a envoyé aux homologues.
    
    </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStreamMulticastInfo/bytesPushedToPeers" class="- topic/link "><linktext class="- topic/linktext ">bytesPushedToPeers</linktext></link><link href="flash.net.xml#NetStreamMulticastInfo/bytesRequestedByPeers" class="- topic/link "><linktext class="- topic/linktext ">bytesRequestedByPeers</linktext></link><link href="flash.net.xml#NetStreamMulticastInfo/fragmentsRequestedByPeers" class="- topic/link "><linktext class="- topic/linktext ">fragmentsRequestedByPeers</linktext></link></related-links></apiValue><apiValue id="flash.net:NetStreamMulticastInfo:fragmentsReceivedFromIPMulticast:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">fragmentsReceivedFromIPMulticast</apiName><shortdesc class="- topic/shortdesc ">
    Spécifie le nombre de messages de fragments multimédias que le nœud local a reçu de la multidiffusion IP.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Spécifie le nombre de messages de fragments multimédias que le nœud local a reçu de la multidiffusion IP.
    
    </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStreamMulticastInfo/bytesReceivedFromIPMulticast" class="- topic/link "><linktext class="- topic/linktext ">bytesReceivedFromIPMulticast</linktext></link><link href="flash.net.xml#NetStreamMulticastInfo/bytesReceivedFromServer" class="- topic/link "><linktext class="- topic/linktext ">bytesReceivedFromServer</linktext></link><link href="flash.net.xml#NetStreamMulticastInfo/fragmentsReceivedFromServer" class="- topic/link "><linktext class="- topic/linktext ">fragmentsReceivedFromServer</linktext></link><link href="flash.net.xml#NetStreamMulticastInfo/receiveDataBytesPerSecondFromIPMulticast" class="- topic/link "><linktext class="- topic/linktext ">receiveDataBytesPerSecondFromIPMulticast</linktext></link></related-links></apiValue><apiValue id="flash.net:NetStreamMulticastInfo:fragmentsReceivedFromServer:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">fragmentsReceivedFromServer</apiName><shortdesc class="- topic/shortdesc ">
    Spécifie le nombre de messages de fragments multimédias que le nœud local a reçu du serveur.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Spécifie le nombre de messages de fragments multimédias que le nœud local a reçu du serveur.
    
    </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStreamMulticastInfo/bytesReceivedFromIPMulticast" class="- topic/link "><linktext class="- topic/linktext ">bytesReceivedFromIPMulticast</linktext></link><link href="flash.net.xml#NetStreamMulticastInfo/bytesReceivedFromServer" class="- topic/link "><linktext class="- topic/linktext ">bytesReceivedFromServer</linktext></link><link href="flash.net.xml#NetStreamMulticastInfo/fragmentsReceivedFromIPMulticast" class="- topic/link "><linktext class="- topic/linktext ">fragmentsReceivedFromIPMulticast</linktext></link><link href="flash.net.xml#NetStreamMulticastInfo/receiveDataBytesPerSecondFromServer" class="- topic/link "><linktext class="- topic/linktext ">receiveDataBytesPerSecondFromServer</linktext></link></related-links></apiValue><apiValue id="flash.net:NetStreamMulticastInfo:fragmentsRequestedByPeers:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">fragmentsRequestedByPeers</apiName><shortdesc class="- topic/shortdesc ">
    Spécifie le nombre de messages de fragments multimédias que le nœud local a envoyé aux homologues après que ceux-ci ont sollicité des fragments spécifiques.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Spécifie le nombre de messages de fragments multimédias que le nœud local a envoyé aux homologues après que ceux-ci ont sollicité des fragments spécifiques.
    
    </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStreamMulticastInfo/bytesPushedToPeers" class="- topic/link "><linktext class="- topic/linktext ">bytesPushedToPeers</linktext></link><link href="flash.net.xml#NetStreamMulticastInfo/bytesRequestedByPeers" class="- topic/link "><linktext class="- topic/linktext ">bytesRequestedByPeers</linktext></link><link href="flash.net.xml#NetStreamMulticastInfo/fragmentsPushedToPeers" class="- topic/link "><linktext class="- topic/linktext ">fragmentsPushedToPeers</linktext></link></related-links></apiValue><apiValue id="flash.net:NetStreamMulticastInfo:fragmentsRequestedFromPeers:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">fragmentsRequestedFromPeers</apiName><shortdesc class="- topic/shortdesc ">
    Spécifie le nombre de messages de fragments multimédias que le nœud local a sollicité et reçu des homologues.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Spécifie le nombre de messages de fragments multimédias que le nœud local a sollicité et reçu des homologues.
    
    </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStreamMulticastInfo/bytesPushedFromPeers" class="- topic/link "><linktext class="- topic/linktext ">bytesPushedFromPeers</linktext></link><link href="flash.net.xml#NetStreamMulticastInfo/bytesRequestedFromPeers" class="- topic/link "><linktext class="- topic/linktext ">bytesRequestedFromPeers</linktext></link><link href="flash.net.xml#NetStreamMulticastInfo/fragmentsPushedFromPeers" class="- topic/link "><linktext class="- topic/linktext ">fragmentsPushedFromPeers</linktext></link></related-links></apiValue><apiValue id="flash.net:NetStreamMulticastInfo:receiveControlBytesPerSecond:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">receiveControlBytesPerSecond</apiName><shortdesc class="- topic/shortdesc ">
    Spécifie le débit, en octets par seconde, utilisé lorsque le nœud local reçoit les messages de surcharge de contrôle envoyés par les homologues.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Spécifie le débit, en octets par seconde, utilisé lorsque le nœud local reçoit les messages de surcharge de contrôle envoyés par les homologues.
    
    </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStreamMulticastInfo/receiveDataBytesPerSecond" class="- topic/link "><linktext class="- topic/linktext ">receiveDataBytesPerSecond</linktext></link><link href="flash.net.xml#NetStreamMulticastInfo/receiveDataBytesPerSecondFromServer" class="- topic/link "><linktext class="- topic/linktext ">receiveDataBytesPerSecondFromServer</linktext></link><link href="flash.net.xml#NetStreamMulticastInfo/receiveDataBytesPerSecondFromIPMulticast" class="- topic/link "><linktext class="- topic/linktext ">receiveDataBytesPerSecondFromIPMulticast</linktext></link><link href="flash.net.xml#NetStreamMulticastInfo/sendControlBytesPerSecond" class="- topic/link "><linktext class="- topic/linktext ">sendControlBytesPerSecond</linktext></link></related-links></apiValue><apiValue id="flash.net:NetStreamMulticastInfo:receiveDataBytesPerSecondFromIPMulticast:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">receiveDataBytesPerSecondFromIPMulticast</apiName><shortdesc class="- topic/shortdesc ">
    Spécifie le débit, en octets par seconde, utilisé lorsque le nœud local reçoit les données de la multidiffusion IP.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Spécifie le débit, en octets par seconde, utilisé lorsque le nœud local reçoit les données de la multidiffusion IP.
    
    </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStreamMulticastInfo/receiveControlBytesPerSecond" class="- topic/link "><linktext class="- topic/linktext ">receiveControlBytesPerSecond</linktext></link><link href="flash.net.xml#NetStreamMulticastInfo/receiveDataBytesPerSecond" class="- topic/link "><linktext class="- topic/linktext ">receiveDataBytesPerSecond</linktext></link><link href="flash.net.xml#NetStreamMulticastInfo/receiveDataBytesPerSecondFromServer" class="- topic/link "><linktext class="- topic/linktext ">receiveDataBytesPerSecondFromServer</linktext></link><link href="flash.net.xml#NetStreamMulticastInfo/sendDataBytesPerSecond" class="- topic/link "><linktext class="- topic/linktext ">sendDataBytesPerSecond</linktext></link></related-links></apiValue><apiValue id="flash.net:NetStreamMulticastInfo:receiveDataBytesPerSecondFromServer:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">receiveDataBytesPerSecondFromServer</apiName><shortdesc class="- topic/shortdesc ">
    Spécifie le débit, en octets par seconde, utilisé lorsque le nœud local reçoit les données multimédias envoyées par le serveur.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Spécifie le débit, en octets par seconde, utilisé lorsque le nœud local reçoit les données multimédias envoyées par le serveur.
    
    </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStreamMulticastInfo/receiveControlBytesPerSecond" class="- topic/link "><linktext class="- topic/linktext ">receiveControlBytesPerSecond</linktext></link><link href="flash.net.xml#NetStreamMulticastInfo/receiveDataBytesPerSecond" class="- topic/link "><linktext class="- topic/linktext ">receiveDataBytesPerSecond</linktext></link><link href="flash.net.xml#NetStreamMulticastInfo/receiveDataBytesPerSecondFromIPMulticast" class="- topic/link "><linktext class="- topic/linktext ">receiveDataBytesPerSecondFromIPMulticast</linktext></link><link href="flash.net.xml#NetStreamMulticastInfo/sendDataBytesPerSecond" class="- topic/link "><linktext class="- topic/linktext ">sendDataBytesPerSecond</linktext></link></related-links></apiValue><apiValue id="flash.net:NetStreamMulticastInfo:receiveDataBytesPerSecond:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">receiveDataBytesPerSecond</apiName><shortdesc class="- topic/shortdesc ">
    Spécifie le débit, en octets par seconde, utilisé lorsque le nœud local reçoit les données multimédias envoyées par les homologues, par le serveur et en multidiffusion IP.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Spécifie le débit, en octets par seconde, utilisé lorsque le nœud local reçoit les données multimédias envoyées par les homologues, par le serveur et en multidiffusion IP.
    
    </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStreamMulticastInfo/receiveControlBytesPerSecond" class="- topic/link "><linktext class="- topic/linktext ">receiveControlBytesPerSecond</linktext></link><link href="flash.net.xml#NetStreamMulticastInfo/receiveDataBytesPerSecondFromIPMulticast" class="- topic/link "><linktext class="- topic/linktext ">receiveDataBytesPerSecondFromIPMulticast</linktext></link><link href="flash.net.xml#NetStreamMulticastInfo/receiveDataBytesPerSecondFromServer" class="- topic/link "><linktext class="- topic/linktext ">receiveDataBytesPerSecondFromServer</linktext></link><link href="flash.net.xml#NetStreamMulticastInfo/sendDataBytesPerSecond" class="- topic/link "><linktext class="- topic/linktext ">sendDataBytesPerSecond</linktext></link></related-links></apiValue><apiValue id="flash.net:NetStreamMulticastInfo:sendControlBytesPerSecondToServer:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">sendControlBytesPerSecondToServer</apiName><shortdesc class="- topic/shortdesc ">
    Spécifie le débit, en octets par seconde, utilisé lorsque le nœud local envoie des messages de surcharge de contrôle au serveur.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Spécifie le débit, en octets par seconde, utilisé lorsque le nœud local envoie des messages de surcharge de contrôle au serveur.
    
    </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStreamMulticastInfo/receiveDataBytesPerSecondFromServer" class="- topic/link "><linktext class="- topic/linktext ">receiveDataBytesPerSecondFromServer</linktext></link><link href="flash.net.xml#NetStreamMulticastInfo/sendControlBytesPerSecond" class="- topic/link "><linktext class="- topic/linktext ">sendControlBytesPerSecond</linktext></link><link href="flash.net.xml#NetStreamMulticastInfo/sendDataBytesPerSecond" class="- topic/link "><linktext class="- topic/linktext ">sendDataBytesPerSecond</linktext></link></related-links></apiValue><apiValue id="flash.net:NetStreamMulticastInfo:sendControlBytesPerSecond:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">sendControlBytesPerSecond</apiName><shortdesc class="- topic/shortdesc ">
    Spécifie le débit, en octets par seconde, utilisé lorsque le nœud local envoie des messages de surcharge de contrôle aux homologues et au serveur.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Spécifie le débit, en octets par seconde, utilisé lorsque le nœud local envoie des messages de surcharge de contrôle aux homologues et au serveur.
    
    </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStreamMulticastInfo/receiveControlBytesPerSecond" class="- topic/link "><linktext class="- topic/linktext ">receiveControlBytesPerSecond</linktext></link><link href="flash.net.xml#NetStreamMulticastInfo/sendControlBytesPerSecondToServer" class="- topic/link "><linktext class="- topic/linktext ">sendControlBytesPerSecondToServer</linktext></link><link href="flash.net.xml#NetStreamMulticastInfo/sendDataBytesPerSecond" class="- topic/link "><linktext class="- topic/linktext ">sendDataBytesPerSecond</linktext></link></related-links></apiValue><apiValue id="flash.net:NetStreamMulticastInfo:sendDataBytesPerSecond:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">sendDataBytesPerSecond</apiName><shortdesc class="- topic/shortdesc ">
    Spécifie le débit, en octets par seconde, utilisé lorsque le nœud local envoie les données multimédias aux homologues.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Spécifie le débit, en octets par seconde, utilisé lorsque le nœud local envoie les données multimédias aux homologues.
    
    </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStreamMulticastInfo/receiveDataBytesPerSecond" class="- topic/link "><linktext class="- topic/linktext ">receiveDataBytesPerSecond</linktext></link><link href="flash.net.xml#NetStreamMulticastInfo/sendControlBytesPerSecond" class="- topic/link "><linktext class="- topic/linktext ">sendControlBytesPerSecond</linktext></link><link href="flash.net.xml#NetStreamMulticastInfo/sendControlBytesPerSecondToServer" class="- topic/link "><linktext class="- topic/linktext ">sendControlBytesPerSecondToServer</linktext></link></related-links></apiValue></apiClassifier><apiClassifier languages="" id="flash.net:NetworkInfo" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">NetworkInfo</apiName><shortdesc class="- topic/shortdesc ">
 La classe NetworkInfo fournit des informations sur les interfaces réseau d’un ordinateur.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:EventDispatcher</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 La classe NetworkInfo fournit des informations sur les interfaces réseau d’un ordinateur. 
 
 <p class="- topic/p "><i class="+ topic/ph hi-d/i ">Prise en charge du profil AIR :</i> cette fonctionnalité est prise en charge sur tous les systèmes d’exploitation de bureau et les périphériques AIR pour TV, mais ne l’est pas sur tous les périphériques mobiles. Vous pouvez tester la prise en charge lors de l’exécution à l’aide de la propriété <codeph class="+ topic/ph pr-d/codeph ">NetworkInfo.isSupported</codeph>. Voir <xref href="http://help.adobe.com/en_US/air/build/WS144092a96ffef7cc16ddeea2126bb46b82f-8000.html" class="- topic/xref ">Prise en charge du profil AIR</xref> pour plus d’informations sur la prise en charge de l’API dans plusieurs profils.</p>
 
 <p class="- topic/p ">L’objet NetworkInfo est un singleton. Pour obtenir l’objet NetworkInfo, utilisez la propriété statique <codeph class="+ topic/ph pr-d/codeph ">NetworkInfo.networkInfo</codeph>. N’appelez pas le constructeur de la classe <codeph class="+ topic/ph pr-d/codeph ">new NetworkInfo()</codeph>.</p>
 
 <p class="- topic/p ">La plupart des ordinateurs disposent d’une ou de plusieurs interfaces, par exemple d’une interface réseau sans fil et d’une interface réseau câblée. D’autres interfaces peuvent être présentes : VPN, interface de bouclage, interfaces virtuelles, etc.</p>
 
 <p class="- topic/p ">Un objet NetworkInfo distribue un événement change lorsque les interfaces disponibles changent. Appelez la méthode <codeph class="+ topic/ph pr-d/codeph ">findInterfaces()</codeph> pour obtenir les informations les plus récentes concernant le réseau.</p>
 
 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Remarque :</b> l’objet NativeApplication distribue également des événements de changement réseau.</p>
 
 </apiDesc><example conref="examples\NetInfoExample.as" class="- topic/example "/></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetworkInterface" class="- topic/link "><linktext class="- topic/linktext ">Classe NetworkInterface</linktext></link><link href="flash.net.xml#InterfaceAddress" class="- topic/link "><linktext class="- topic/linktext ">Classe InterfaceAddress</linktext></link></related-links><adobeApiEvent id="flash.net:NetworkInfo_flash.events.Event.NETWORK_CHANGE_networkChange" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">networkChange</apiName><shortdesc class="- topic/shortdesc ">
 Distribué lorsque les interfaces réseau ont changé.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.Event.NETWORK_CHANGE</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.Event</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Distribué lorsque les interfaces réseau ont changé.
 
 </apiDesc></adobeApiEventDetail></adobeApiEvent><apiOperation id="flash.net:NetworkInfo:findInterfaces" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">findInterfaces</apiName><shortdesc class="- topic/shortdesc ">
     Renvoie la liste des interfaces réseau associées à la machine.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Tableau d’objets NetworkInterface.
     
     </apiDesc><apiType value="Vector$flash.net:NetworkInterface" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Renvoie la liste des interfaces réseau associées à la machine. 
     
     </apiDesc></apiOperationDetail></apiOperation><apiValue id="flash.net:NetworkInfo:isSupported:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">isSupported</apiName><shortdesc class="- topic/shortdesc ">
	 Indique si l’accès aux informations de l’interface réseau est pris en charge sur le système client.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><language>3.0 
	 </language></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Indique si l’accès aux informations de l’interface réseau est pris en charge sur le système client.
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:NetworkInfo:networkInfo:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">networkInfo</apiName><shortdesc class="- topic/shortdesc ">
	 Occurrence singleton de l’objet NetworkInfo.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.net:NetworkInfo</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Indique si le contenu s’exécutant hors du sandbox de sécurité de l’application AIR accède à cette propriété.
	 
	 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">SecurityError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">SecurityError</apiOperationClassifier></apiException></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Occurrence singleton de l’objet NetworkInfo.
	 
	 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.net:URLVariables" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">URLVariables</apiName><shortdesc class="- topic/shortdesc ">
 
 La classe URLVariables vous permet de transférer des variables entre une application et un serveur.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">URLVariables, constructor
 
 </keyword></asCustoms></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 
 La classe URLVariables vous permet de transférer des variables entre une application et un serveur. Utilisez les objets URLVariables avec des méthodes de la classe URLLoader, avec la propriété <codeph class="+ topic/ph pr-d/codeph ">data</codeph> de la classe URLRequest et des fonctions de package flash.net.
 
 </apiDesc><example conref="examples\URLVariablesExample.as" class="- topic/example "> L’exemple suivant ouvre l’application distante hébergée à l’adresse http://www.[yourDomain].com/application.jsp dans une nouvelle fenêtre de navigateur et transmet à l’application des données relatives à une session utilisateur, capturées dans un objet URLVariables. 
  
 <p class="- topic/p ">Vous trouverez ci-dessous des extraits de l’exemple :</p>
 <ol class="- topic/ol "><li class="- topic/li ">La fonction constructeur crée une occurrence de URLRequest nommée <codeph class="+ topic/ph pr-d/codeph ">request</codeph>, en utilisant l’URL de l’application distante comme paramètre.</li><li class="- topic/li ">Un objet URLVariables est créé et des valeurs sont attribuées à deux de ses propriétés.</li><li class="- topic/li ">L’objet URLVariables est affecté à la propriété <codeph class="+ topic/ph pr-d/codeph ">data</codeph> de l’objet URLRequest.</li><li class="- topic/li ">L’exemple appelle <codeph class="+ topic/ph pr-d/codeph ">navigateToURL</codeph>, qui ouvre une nouvelle fenêtre de navigateur vers l’URL de l’application distante.</li></ol>
 <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Remarque :</b> pour exécuter l’exemple, l’URL de l’application distante de l’exemple doit être remplacée par une URL opérationnelle. En outre, du code serveur serait nécessaire pour traiter les informations capturées par Flash Player dans l’objet URLVariables.</p>
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
package {
    import flash.display.Sprite;
    import flash.net.navigateToURL;
    import flash.net.URLRequest;
    import flash.net.URLVariables;

    public class URLVariablesExample extends Sprite {

        public function URLVariablesExample() {
            var url:String = "http://www.[yourDomain].com/application.jsp";
            var request:URLRequest = new URLRequest(url);
            var variables:URLVariables = new URLVariables();
            variables.exampleSessionId = new Date().getTime();
            variables.exampleUserLabel = "guest";
            request.data = variables;
            navigateToURL(request);
        }
    }
}
</codeblock></example></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.net.xml#URLLoader" class="- topic/link "><linktext class="- topic/linktext ">URLLoader</linktext></link></related-links><apiConstructor id="flash.net:URLVariables:URLVariables" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">URLVariables</apiName><shortdesc class="- topic/shortdesc ">
	 Crée un nouvel objet URLVariables.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">source</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Chaîne codée au format URL contenant des paires nom/valeur.
	 </apiDesc></apiParam></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Crée un nouvel objet URLVariables. Vous transmettez des objets URLVariables à la propriété <codeph class="+ topic/ph pr-d/codeph ">data</codeph> des objets URLRequest.
	 
	 <p class="- topic/p ">Si vous appelez le constructeur URLVariables avec une chaîne, la méthode <codeph class="+ topic/ph pr-d/codeph ">decode()</codeph> est appelée automatiquement pour convertir la chaîne en propriétés de l’objet URLVariables.</p>
	 
	 </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="flash.net:URLVariables:decode" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">decode</apiName><shortdesc class="- topic/shortdesc ">
	 Convertit la chaîne de variables en propriétés de l’objet URLVariables spécifié.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">URLVariables, URLVariables.decode, decode
	 </keyword></asCustoms></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Le paramètre source doit être une chaîne de requête codée au format URL et contenant des paires nom/valeur.
	 
	 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">Error</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Error</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">source</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Chaîne de requête codée au format URL et contenant des paires nom/valeur.	 
	 
	 
	 </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Convertit la chaîne de variables en propriétés de l’objet URLVariables spécifié.
	 <p class="- topic/p ">Cette méthode est utilisée en interne par les événements URLVariables. La plupart des utilisateurs n’a pas besoin d’appeler cette méthode directement.</p>
	 
	 </apiDesc><example conref="examples\URLVariables_decode.as" class="- topic/example "> Les exemples suivants indiquent comment analyser les chaînes codées dans l’URL. Exemple fourni par <xref href="http://actionscriptexamples.com/2008/02/27/decoding-url-encoded-strings-in-a-flash-application-using-the-urlvariables-class-in-actionscript-30/" scope="_mmexternal" class="- topic/xref ">ActionScriptExamples.com</xref>. 
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
// The first method passes the string to be decoded to the URLVariables class constructor:
var urlVariables:URLVariables = new URLVariables("firstName=Tom&amp;lastName=Jones");
lbl.text = urlVariables.lastName + "," + urlVariables.firstName;

// The second method uses the decode() method to parse the URL encoded string:
var urlVariables:URLVariables = new URLVariables();
urlVariables.decode("firstName=Tom&amp;lastName=Jones");
lbl.text = urlVariables.lastName + "," + urlVariables.firstName;
</codeblock></example></apiOperationDetail></apiOperation><apiOperation id="flash.net:URLVariables:toString" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">toString</apiName><shortdesc class="- topic/shortdesc ">
	 Renvoie une chaîne contenant toutes les variables énumérables, au format de l’application de codage du contenu MIME/x-www-form-urlencoded.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">URLVariables, URLVariables.toString, toString
	  
	  </keyword></asCustoms></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Chaîne codée au format URL contenant des paires nom/valeur.
	 
	 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Renvoie une chaîne contenant toutes les variables énumérables, au format de l’application de codage du contenu MIME<i class="+ topic/ph hi-d/i ">/x-www-form-urlencoded</i>.
	 
	 </apiDesc></apiOperationDetail></apiOperation></apiClassifier><apiClassifier languages="" id="flash.net:IDynamicPropertyWriter" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">IDynamicPropertyWriter</apiName><shortdesc class="- topic/shortdesc ">
     Cette interface s’utilise avec l’interface IDynamicPropertyOutput pour contrôler la sérialisation des propriétés dynamiques des objets dynamiques.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiInterface class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiInterface "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier "/></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Cette interface s’utilise avec l’interface IDynamicPropertyOutput pour contrôler la sérialisation des propriétés dynamiques des objets dynamiques. Pour l’utiliser, affectez un objet qui implémente l’interface IDynamicPropertyWriter dans la propriété <codeph class="+ topic/ph pr-d/codeph ">ObjectEncoding.dynamicPropertyWriter</codeph>.
      
     </apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.net.xml#IDynamicPropertyOutput" class="- topic/link "><linktext class="- topic/linktext ">IDynamicPropertyOutput</linktext></link><link href="flash.net.xml#ObjectEncoding/dynamicPropertyWriter" class="- topic/link "><linktext class="- topic/linktext ">ObjectEncoding.dynamicPropertyWriter</linktext></link></related-links><apiOperation id="flash.net:IDynamicPropertyWriter:flash.net:IDynamicPropertyWriter:writeDynamicProperties" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">writeDynamicProperties</apiName><shortdesc class="- topic/shortdesc ">
         Ecrit le nom et la valeur d’un objet IDynamicPropertyOutput dans un objet doté de propriétés dynamiques.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">obj</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Object</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Objet dans lequel écrire.
		 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">output</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.net:IDynamicPropertyOutput</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Objet IDynamicPropertyOutput contenant le nom et la valeur à écrire dynamiquement dans l’objet.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
         Ecrit le nom et la valeur d’un objet IDynamicPropertyOutput dans un objet doté de propriétés dynamiques. Si la propriété <codeph class="+ topic/ph pr-d/codeph ">ObjectEncoding.dynamicPropertyWriter</codeph> est définie, cette méthode est appelée pour chaque objet doté de propriétés dynamiques. 
		 
		 </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#IDynamicPropertyOutput" class="- topic/link "><linktext class="- topic/linktext ">IDynamicPropertyOutput</linktext></link><link href="flash.net.xml#ObjectEncoding/dynamicPropertyWriter" class="- topic/link "><linktext class="- topic/linktext ">ObjectEncoding.dynamicPropertyWriter</linktext></link></related-links></apiOperation></apiClassifier><apiClassifier languages="" id="flash.net:DatagramSocket" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">DatagramSocket</apiName><shortdesc class="- topic/shortdesc ">
 La classe DatagramSocket permet au code d’envoyer et de recevoir des paquets UDP (Universal Datagram Protocol, protocole de datagramme utilisateur).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:EventDispatcher</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 La classe DatagramSocket permet au code d’envoyer et de recevoir des paquets UDP (Universal Datagram Protocol, protocole de datagramme utilisateur). 
 
 <p class="- topic/p "><i class="+ topic/ph hi-d/i ">Prise en charge du profil AIR :</i> cette fonctionnalité est prise en charge sur tous les systèmes d’exploitation de bureau, mais ne l’est pas sur les périphériques mobiles ou les périphériques AIR pour TV. Vous pouvez tester la prise en charge lors de l’exécution à l’aide de la propriété <codeph class="+ topic/ph pr-d/codeph ">DatagramSocket.isSupported</codeph>. Voir <xref href="http://help.adobe.com/en_US/air/build/WS144092a96ffef7cc16ddeea2126bb46b82f-8000.html" class="- topic/xref ">Prise en charge du profil AIR</xref> pour plus d’informations sur la prise en charge de l’API dans plusieurs profils.</p>
 
 <p class="- topic/p ">Les paquets de datagrammes sont transmis individuellement entre la source et la destination. Il est possible que les paquets ne soient pas reçus dans l’ordre dans lequel ils ont été envoyés. Les paquets perdus lors de la transmission ne sont pas retransmis ; il est même possible qu’ils ne soient pas détectés.</p>
 
 <p class="- topic/p ">Les données envoyées à l’aide d’un socket datagramme ne sont pas automatiquement divisées en paquets de taille transmissible. Si vous envoyez un paquet UDP qui dépasse la taille de l’unité maximale de transmission, le réseau refuse le paquet (sans avertissement). L’UTM limite correspond à la plus petite UTM d’une interface, d’un commutateur ou d’un router dans le chemin de transmission. Vous pouvez utiliser la classe NetworkInterface pour déterminer l’UTM de l’interface locale, bien que d’autres nœuds dans le réseau puissent avoir différentes valeurs d’UTM.</p>
 
 <p class="- topic/p ">La classe Socket utilise TCP, qui permet de garantir la livraison des paquets, ainsi que de diviser automatiquement et de reconstituer les paquets volumineux. TCP offre également une meilleure gestion de la bande passante du réseau. Ces fonctionnalités signifient que les données envoyées à l’aide d’un socket TCP impliquent un temps d’attente plus long, mais pour la plupart des utilisateurs, les avantages du protocole TCP compensent les coûts. La plupart des communications réseau doivent utiliser la classe Socket plutôt que la classe DatagramSocket.</p>
 
 <p class="- topic/p ">La classe DatagramSocket est utile lors de l’utilisation d’applications qui offrent un faible temps d’attente de transmission et qui tolèrent la perte de paquets. Par exemple, les opérations de réseau dans des applications VoIP (voix sur IP) et en temps réel, telles que les jeux multijoueurs, peuvent tirer profit du protocole UDP. La classe DatagramSocket est également utile pour certaines applications côté serveur. Etant donné que le protocole UDP est sans état, un serveur peut traiter davantage de requêtes provenant de plusieurs clients que s’il utilisait le protocole TCP.</p>
 
 <p class="- topic/p ">La classe DatagramSocket ne peut être utilisée dans les applications d’Adobe AIR et uniquement dans le sandbox de sécurité de l’application.</p>
 
 <p class="- topic/p ">Pour plus d’informations concernant la sécurité, voir la rubrique du Pôle de développement Flash Player : <xref href="http://www.adobe.com/go/devnet_security_fr" scope="external" class="- topic/xref ">Sécurité</xref> (disponible en anglais uniquement).</p>
 
 </apiDesc><example conref="examples\DatagramSocketExample.as" class="- topic/example "><codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
package
{
    import flash.display.Sprite;
    import flash.events.DatagramSocketDataEvent;
    import flash.events.Event;
    import flash.events.MouseEvent;
    import flash.events.TimerEvent;
    import flash.net.DatagramSocket;
    import flash.text.TextField;
    import flash.text.TextFieldAutoSize;
    import flash.text.TextFieldType;
    import flash.utils.ByteArray;
    import flash.utils.Timer;
    
    public class DatagramSocketExample extends Sprite
    {
        private var datagramSocket:DatagramSocket = new DatagramSocket();;

        private var localIP:TextField;
        private var localPort:TextField;
        private var logField:TextField;
        private var targetIP:TextField;
        private var targetPort:TextField;
        private var message:TextField;
        
        public function DatagramSocketExample()
        {
            setupUI();
        }

        private function bind( event:Event ):void
        {
            if( datagramSocket.bound ) 
            {
                datagramSocket.close();
                datagramSocket = new DatagramSocket();
                
            }
            datagramSocket.bind( parseInt( localPort.text ), localIP.text );
            datagramSocket.addEventListener( DatagramSocketDataEvent.DATA, dataReceived );
            datagramSocket.receive();
            log( "Bound to: " + datagramSocket.localAddress + ":" + datagramSocket.localPort );
        }
        
        private function dataReceived( event:DatagramSocketDataEvent ):void
        {
            //Read the data from the datagram
            log("Received from " + event.srcAddress + ":" + event.srcPort + "> " + 
                event.data.readUTFBytes( event.data.bytesAvailable ) );
        }
        
        private function send( event:Event ):void
        {
            //Create a message in a ByteArray
            var data:ByteArray = new ByteArray();
            data.writeUTFBytes( message.text );
            
            //Send a datagram to the target
            try
            {
                datagramSocket.send( data, 0, 0, targetIP.text, parseInt( targetPort.text )); 
                log( "Sent message to " + targetIP.text + ":" + targetPort.text );
            }
            catch ( error:Error )
            {
                log( error.message );
            }
        }
        
        private function log( text:String ):void
        {
            logField.appendText( text + "\n" );
            logField.scrollV = logField.maxScrollV;
            trace( text );
        }
        private function setupUI():void
        {
            targetIP = createTextField( 10, 10, "Target IP:", "192.168.0.1" );
            targetPort = createTextField( 10, 35, "Target port:", "8989" );
            message = createTextField( 10, 60, "Message:", "Lucy can't drink milk." );
            localIP = createTextField( 10, 85, "Local IP", "0.0.0.0");
            localPort = createTextField( 10, 110, "Local port:", "0" );
            createTextButton( 250, 135, "Bind", bind );
            createTextButton( 300, 135, "Send", send );
            logField = createTextField( 10, 160, "Log:", "", false, 200 )
                
            this.stage.nativeWindow.activate();
        }
        
        private function createTextField( x:int, y:int, label:String, defaultValue:String = '', editable:Boolean = true, height:int = 20 ):TextField
        {
            var labelField:TextField = new TextField();
            labelField.text = label;
            labelField.type = TextFieldType.DYNAMIC;
            labelField.width = 180;
            labelField.x = x;
            labelField.y = y;
            
            var input:TextField = new TextField();
            input.text = defaultValue;
            input.type = TextFieldType.INPUT;
            input.border = editable;
            input.selectable = editable;
            input.width = 280;
            input.height = height;
            input.x = x + labelField.width;
            input.y = y;
            
            this.addChild( labelField );
            this.addChild( input );
            
            return input;
        }
        
        private function createTextButton( x:int, y:int, label:String, clickHandler:Function ):TextField
        {
            var button:TextField = new TextField();
            button.htmlText = "&lt;u>&lt;b>" + label + "&lt;/b>&lt;/u>";
            button.type = TextFieldType.DYNAMIC;
            button.selectable = false;
            button.width = 180;
            button.x = x;
            button.y = y;
            button.addEventListener( MouseEvent.CLICK, clickHandler );
            
            this.addChild( button );
            return button;
            
        }
    }
}
</codeblock></example></apiClassifierDetail><related-links class="- topic/related-links "><link href="http://tools.ietf.org/html/rfc768" class="- topic/link "><linktext class="- topic/linktext ">RFC 768</linktext></link><link href="flash.net.xml#Socket" class="- topic/link "><linktext class="- topic/linktext ">Classe Socket</linktext></link><link href="flash.net.xml#XMLSocket" class="- topic/link "><linktext class="- topic/linktext ">Classe XMLSocket</linktext></link><link href="flash.net.xml#ServerSocket" class="- topic/link "><linktext class="- topic/linktext ">Classe ServerSocket</linktext></link></related-links><adobeApiEvent id="flash.net:DatagramSocket_flash.events.IOErrorEvent.IOERROR_ioError" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">ioError</apiName><shortdesc class="- topic/shortdesc ">
 Distribué lorsque ce socket reçoit une erreur E/S.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.IOErrorEvent.IOERROR</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.IOErrorEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Distribué lorsque ce socket reçoit une erreur E/S.
 </apiTipText></apiTipTexts></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Distribué lorsque ce socket reçoit une erreur E/S.
 
 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flash.net:DatagramSocket_flash.events.DatagramSocketDataEvent.DATA_data" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">data</apiName><shortdesc class="- topic/shortdesc ">
 Distribué lorsque ce socket reçoit un paquet de données.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.DatagramSocketDataEvent.DATA</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.DatagramSocketDataEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Distribué lorsque ce socket reçoit un paquet de données.
 
 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flash.net:DatagramSocket_flash.events.Event.CLOSE_close" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">close</apiName><shortdesc class="- topic/shortdesc ">
 Distribué lorsque le système d’exploitation ferme ce socket.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.Event.CLOSE</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.Event</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Distribué lorsque le système d’exploitation ferme ce socket.
  
 <p class="- topic/p ">L’événement <codeph class="+ topic/ph pr-d/codeph ">close</codeph> n’est pas distribué lorsque la méthode <codeph class="+ topic/ph pr-d/codeph ">close()</codeph> de DatagramSocket est appelée.</p>
 
 </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="flash.net:DatagramSocket:DatagramSocket" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">DatagramSocket</apiName><shortdesc class="- topic/shortdesc ">
     Crée un objet DatagramSocket.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">si le contenu situé hors du sandbox de sécurité de l’application AIR tente de créer un objet DatagramSocket.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">SecurityError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">SecurityError</apiOperationClassifier></apiException></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Crée un objet DatagramSocket.
     
     </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="flash.net:DatagramSocket:bind" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">bind</apiName><shortdesc class="- topic/shortdesc ">
     Lie ce socket à l’adresse et au port locaux spécifiés.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Cette erreur se produit lorsque le paramètre <codeph class="+ topic/ph pr-d/codeph ">localPort</codeph> est défini sur une valeur inférieure à 0 ou supérieure à 65535.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">RangeError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">RangeError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Cette erreur se produit lorsque <codeph class="+ topic/ph pr-d/codeph ">localAddress</codeph> n’est pas une adresse IP syntaxiquement correcte.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Cette erreur se produit si le socket ne peut pas être lié, notamment lorsque :
     <ol class="- topic/ol "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">localPort</codeph> est déjà utilisé par le socket ;</li><li class="- topic/li ">Le compte utilisateur sous lequel l’application est en cours d’exécution ne dispose pas des privilèges système suffisants pour se relier au port spécifié. (Les problèmes de privilèges se produisent généralement lorsque <codeph class="+ topic/ph pr-d/codeph ">localPort &lt; 1024</codeph>.)</li><li class="- topic/li ">Cet objet DatagramSocket est déjà lié.</li><li class="- topic/li ">Cet objet DatagramSocket a été fermé.</li></ol>
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IOError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IOError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Cette erreur se produit lorsque <codeph class="+ topic/ph pr-d/codeph ">localAddress</codeph> n’est pas une adresse locale valide.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">Error</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Error</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">localPort</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Numéro de port auquel se relier sur l’ordinateur local. Si <codeph class="+ topic/ph pr-d/codeph ">localPort</codeph> est définie sur 0 (valeur par défaut), le prochain port système disponible est lié. L’autorisation de se connecter à un numéro de port inférieur à 1024 est soumise à la stratégie de protection du système. Sous Mac et Linux, par exemple, l’application doit être exécutée avec des privilèges racines pour se connecter aux ports inférieurs à 1024.
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">localAddress</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0.0.0.0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Adresse IP sur la machine locale à laquelle se relier. Cette adresse peut être une adresse IPv4 ou une adresse IPv6. Si le paramètre <codeph class="+ topic/ph pr-d/codeph ">localAddress</codeph> est défini sur <codeph class="+ topic/ph pr-d/codeph ">0.0.0.0</codeph> (valeur par défaut), le socket écoute toutes les adresses IPv4 disponibles. Pour écouter toutes les adresses IPv6, vous devez spécifier "::" comme argument de <codeph class="+ topic/ph pr-d/codeph ">localAddress</codeph>. Pour utiliser une adresse IPv6, l’ordinateur et le réseau doivent tous deux être configurés de façon à prendre en charge le protocole IPv6. En outre, un socket lié à une adresse IPv4 ne peut pas se connecter à un socket avec une adresse IPv6. De même, un socket lié à une adresse IPv6 ne peut pas se connecter à un socket avec une adresse IPv4. Le type d’adresse doit correspondre. 
     
     </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Lie ce socket à l’adresse et au port locaux spécifiés.
     
     <p class="- topic/p ">La méthode <codeph class="+ topic/ph pr-d/codeph ">bind()</codeph> s’exécute en mode synchrone. L’opération de liaison se termine avant que la ligne de code suivante soit exécutée.</p>
     
	 </apiDesc><example conref="examples\DatagramSocket.bind.1.as" class="- topic/example "> L’exemple suivant illustre diverses façons de lier un objet DatagramSocket :
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">

udpSocket.bind(); //bind to any available port, listen on all IPv4 addresses
udpSocket.bind( 0, "0.0.0.0" ); //same as above
udpSocket.bind( 0, "127.0.0.1" ); //any available port on the localhost address
udpSocket.bind( 8989, "192.168.0.1" ); //port 8989 on a particular IPv4 address
udpSocket.bind( 0, "::" ); //any available port on all IPv6 address
udpSocket.bind( 8989, "::1" ); //port 8989 on the IPv6 localhost address
udpSocket.bind( 8989, "2001:1890:110b:1e19:f06b:72db:7026:3d7a" ); //port 8989 on a particular IPv6 address
</codeblock></example></apiOperationDetail></apiOperation><apiOperation id="flash.net:DatagramSocket:close" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">close</apiName><shortdesc class="- topic/shortdesc ">
     Ferme le socket.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Indique s’il s’avère impossible de fermer le socket (notamment en raison d’une mise en réseau interne ou d’une erreur du système d’exploitation), ou si ce dernier n’est pas ouvert.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IOError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IOError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Ferme le socket. 
     
     <p class="- topic/p ">Le socket est déconnecté de la machine distante et n’est plus lié à l’ordinateur local. Il est impossible de réutiliser un socket fermé.</p>
     
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.net:DatagramSocket:connect" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">connect</apiName><shortdesc class="- topic/shortdesc ">
     Connecte le socket à une adresse et un port distants spécifiés.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Cette erreur se produit lorsque le paramètre <codeph class="+ topic/ph pr-d/codeph ">localPort</codeph> est défini sur une valeur inférieure à 1 ou supérieure à 65535.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">RangeError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">RangeError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Cette erreur se produit lorsque <codeph class="+ topic/ph pr-d/codeph ">localAddress</codeph> n’est pas une adresse syntaxiquement valide, ou lors de l’utilisation d’une adresse de routage par défaut ("0.0.0.0" ou "::").
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Cette erreur se produit s’il est impossible de connecter le socket, notamment lorsque <codeph class="+ topic/ph pr-d/codeph ">bind()</codeph> n’a pas été appelée avant l’appel de <codeph class="+ topic/ph pr-d/codeph ">connect()</codeph> et que la liaison par défaut à la famille d’adresses distantes n’est pas possible. 
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IOError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IOError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">remoteAddress</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Adresse IP de l’ordinateur distant auquel établir une connexion. Cette adresse peut être une adresse IPv4 ou une adresse IPv6. Si la méthode <codeph class="+ topic/ph pr-d/codeph ">bind()</codeph> n’a pas été appelée, la famille de l’adresse <codeph class="+ topic/ph pr-d/codeph ">remoteAddress</codeph>, IPv4 ou IPv6, est utilisée lors de l’appel de la méthode <codeph class="+ topic/ph pr-d/codeph ">bind()</codeph> par défaut.
     
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">remotePort</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Numéro du port sur la machine distante pour établir une connexion. 
     
     </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Connecte le socket à une adresse et un port distants spécifiés. 
     
     <p class="- topic/p ">Lorsqu’un socket datagramme est « connecté », les paquets peuvent être envoyés et reçus uniquement à partir de la cible spécifiée. Les paquets provenant d’autres sources sont ignorés. Il n’est pas nécessaire de connecter un socket datagramme. Etablir une connexion peut supprimer la nécessité de filtrer les paquets superflus provenant d’autres sources. Cependant, une connexion socket UDP n’est pas une connexion réseau permanente (comme c’est le cas pour une connexion TCP). Il est possible que l’extrémité distante du socket n’existe même pas.</p>
     
     <p class="- topic/p ">Si la méthode <codeph class="+ topic/ph pr-d/codeph ">bind()</codeph> n’a pas été appelée, le socket est automatiquement lié à l’adresse et au port locaux par défaut.</p>
     
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.net:DatagramSocket:receive" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">receive</apiName><shortdesc class="- topic/shortdesc ">
     Autorise cet objet DatagramSocket à recevoir les paquets entrants sur l’adresse IP et le port liés.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Autorise cet objet DatagramSocket à recevoir les paquets entrants sur l’adresse IP et le port liés.
     
     <p class="- topic/p ">La fonction est immédiatement renvoyée. L’objet DatagramSocket distribue un événement <codeph class="+ topic/ph pr-d/codeph ">data</codeph> lors de la réception d’un paquet de données.</p>
     
     </apiDesc></apiOperationDetail><adobeApiEvent id="flash.net:DatagramSocket:receive_data" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">data</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:DatagramSocketDataEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">lorsqu’un paquet UDP est reçu.
     
     </apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">lorsqu’un paquet UDP est reçu.</shortdesc></adobeApiEvent></apiOperation><apiOperation id="flash.net:DatagramSocket:send" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">send</apiName><shortdesc class="- topic/shortdesc ">
     Envoie le paquet contenant les octets dans l’objet ByteArray via le protocole UDP.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Cette erreur se produit lorsque le paramètre <codeph class="+ topic/ph pr-d/codeph ">port</codeph> est défini sur une valeur inférieure à 1 ou supérieure à 65535.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">RangeError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">RangeError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Si le socket n’est pas connecté et si l’<codeph class="+ topic/ph pr-d/codeph ">adresse</codeph> n’est pas une adresse IP correctement formée.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Cette erreur se produit dans les cas suivants :
     <ol class="- topic/ol "><li class="- topic/li ">Si la méthode <codeph class="+ topic/ph pr-d/codeph ">bind()</codeph> n’a pas été appelée, et lorsque la liaison par défaut à la famille d’adresse de destination est impossible.</li><li class="- topic/li ">Sur certains systèmes d’exploitation, une erreur IOError est renvoyée si la méthode <codeph class="+ topic/ph pr-d/codeph ">connect()</codeph> est appelée alors que l’hôte cible a déjà reçu un message « Destination inaccessible » ICMP. (Ainsi, l’erreur est renvoyée lors de la deuxième tentative infructueuse d’envoi de données et non par lors de la première.) Les autres systèmes d’exploitation, tels que Windows, ignorent ces messages ICMP ; par conséquent, aucune erreur n’est renvoyée.</li></ol>
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IOError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IOError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">si le paramètre <codeph class="+ topic/ph pr-d/codeph ">bytes</codeph> est défini sur <codeph class="+ topic/ph pr-d/codeph ">null</codeph>. 
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">Error</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Error</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Si la valeur du paramètre <codeph class="+ topic/ph pr-d/codeph ">offset</codeph> est supérieure à la longueur de l’objet ByteArray spécifiée dans le paramètre <codeph class="+ topic/ph pr-d/codeph ">bytes</codeph> ou si la quantité de données spécifiée devant être écrites par <codeph class="+ topic/ph pr-d/codeph ">offset</codeph> et <codeph class="+ topic/ph pr-d/codeph ">length</codeph> dépasse les données disponibles.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">RangeError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">RangeError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Si le paramètre <codeph class="+ topic/ph pr-d/codeph ">address</codeph> ou <codeph class="+ topic/ph pr-d/codeph ">port</codeph> est spécifié lorsque le socket a déjà été connecté.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IllegalOperationError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IllegalOperationError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">bytes</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.utils:ByteArray</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">un objet ByteArray contenant les données du paquet.
     
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">offset</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">uint</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Décalage de base zéro dans l’objet ByteArray <codeph class="+ topic/ph pr-d/codeph ">bytes</codeph> à partir duquel le paquet commence.
     
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">length</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">uint</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Nombre d’octets dans le paquet. La valeur par défaut 0 provoque l’envoi de l’intégralité du ByteArray, à partir de la valeur spécifiée par le paramètre <codeph class="+ topic/ph pr-d/codeph ">offset</codeph>.
     
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">address</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Adresse IPv4 ou IPv6 de l’ordinateur distant. Une adresse est requise si aucune adresse n’a encore été spécifiée à l’aide de la méthode <codeph class="+ topic/ph pr-d/codeph ">connect()</codeph>.
     
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">port</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Numéro de port sur l’ordinateur distant. Une valeur supérieure à 0 et inférieure à 65536 est requise si le port n’a pas encore été spécifié à l’aide de la méthode <codeph class="+ topic/ph pr-d/codeph ">connect()</codeph>.
     
     
     </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Envoie le paquet contenant les octets dans l’objet ByteArray via le protocole UDP. 
     
     <p class="- topic/p ">Si le socket est connecté, le paquet est envoyé à l’adresse distante et au port spécifiés dans la méthode <codeph class="+ topic/ph pr-d/codeph ">connect()</codeph>, et il est impossible de spécifier une adresse IP et un port de destination. Si ce dernier n’est pas connecté, le paquet est envoyé à l’adresse et au port spécifiés, et vous devez fournir des valeurs valides pour les paramètres <codeph class="+ topic/ph pr-d/codeph ">address</codeph> et <codeph class="+ topic/ph pr-d/codeph ">port</codeph>. Si la méthode <codeph class="+ topic/ph pr-d/codeph ">bind()</codeph> n’a pas été appelée, le socket est automatiquement lié à l’adresse et au port locaux par défaut.</p>
     
     <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Remarque :</b> l’envoi de données à une adresse de diffusion n’est pas pris en charge.</p>
     
     </apiDesc></apiOperationDetail></apiOperation><apiValue id="flash.net:DatagramSocket:bound:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">bound</apiName><shortdesc class="- topic/shortdesc ">
     Indique si cet objet socket est actuellement lié à une adresse et à un port locaux.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Indique si cet objet socket est actuellement lié à une adresse et à un port locaux.
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#DatagramSocket/bind()" class="- topic/link "><linktext class="- topic/linktext ">bind()</linktext></link></related-links></apiValue><apiValue id="flash.net:DatagramSocket:connected:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">connected</apiName><shortdesc class="- topic/shortdesc ">
     Indique si cet objet socket est actuellement connecté à une adresse et à un port distants.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Indique si cet objet socket est actuellement connecté à une adresse et à un port distants.
     
     <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Remarque :</b> une valeur <codeph class="+ topic/ph pr-d/codeph ">true</codeph> ne signifie pas qu’un ordinateur distant écoute sur l’adresse et le port connectés. Cela signifie simplement que cet objet DataGramSocket enverra des données à (ou recevra des données de) cette adresse et à ce port.</p>
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#DatagramSocket/connect()" class="- topic/link "><linktext class="- topic/linktext ">connect()</linktext></link></related-links></apiValue><apiValue id="flash.net:DatagramSocket:isSupported:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">isSupported</apiName><shortdesc class="- topic/shortdesc ">
     Indique si les fonctions DatagramSocket sont prises en charge dans l’environnement d’exécution.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Indique si les fonctions DatagramSocket sont prises en charge dans l’environnement d’exécution.
     
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:DatagramSocket:localAddress:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">localAddress</apiName><shortdesc class="- topic/shortdesc ">
     Adresse IP à laquelle ce socket est lié sur la machine locale.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Adresse IP à laquelle ce socket est lié sur la machine locale.
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#DatagramSocket/bind()" class="- topic/link "><linktext class="- topic/linktext ">bind()</linktext></link></related-links></apiValue><apiValue id="flash.net:DatagramSocket:localPort:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">localPort</apiName><shortdesc class="- topic/shortdesc ">
     Port auquel ce socket est lié sur la machine locale.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">int</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Port auquel ce socket est lié sur la machine locale.
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#DatagramSocket/bind()" class="- topic/link "><linktext class="- topic/linktext ">bind()</linktext></link></related-links></apiValue><apiValue id="flash.net:DatagramSocket:remoteAddress:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">remoteAddress</apiName><shortdesc class="- topic/shortdesc ">
     Adresse IP de la machine distante à laquelle ce socket est connecté.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Adresse IP de la machine distante à laquelle ce socket est connecté.
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#DatagramSocket/connect()" class="- topic/link "><linktext class="- topic/linktext ">connect()</linktext></link></related-links></apiValue><apiValue id="flash.net:DatagramSocket:remotePort:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">remotePort</apiName><shortdesc class="- topic/shortdesc ">
     Port de la machine distante auquel ce socket est connecté.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">int</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Port de la machine distante auquel ce socket est connecté.
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#DatagramSocket/connect()" class="- topic/link "><linktext class="- topic/linktext ">connect()</linktext></link></related-links></apiValue></apiClassifier><apiClassifier languages="" id="flash.net:NetGroupSendResult" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">NetGroupSendResult</apiName><shortdesc class="- topic/shortdesc ">
La classe NetGroupSendResult est une énumération des valeurs constantes utilisées pour la valeur renvoyée par les méthodes de routage direct associées à une occurrence de NetGroup.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
La classe NetGroupSendResult est une énumération des valeurs constantes utilisées pour la valeur renvoyée par les méthodes de routage direct associées à une occurrence de NetGroup.

</apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetGroup/sendToNearest()" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetGroup.sendToNearest()</linktext></link><link href="flash.net.xml#NetGroup/sendToNeighbor()" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetGroup.sendToNeighbor()</linktext></link><link href="flash.net.xml#NetGroup/sendToAllNeighbors()" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetGroup.sendToAllNeighbors()</linktext></link></related-links><apiValue id="flash.net:NetGroupSendResult:ERROR" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">ERROR</apiName><shortdesc class="- topic/shortdesc "> 
    Indique qu’une erreur est survenue (par exemple, un refus d’autorisation) lors de l’utilisation d’une méthode de routage direct.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">error</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
    Indique qu’une erreur est survenue (par exemple, un refus d’autorisation) lors de l’utilisation d’une méthode de routage direct.
    
    </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:NetGroupSendResult:NO_ROUTE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">NO_ROUTE</apiName><shortdesc class="- topic/shortdesc "> 
    Indique qu’aucun voisin n’a été trouvé pour acheminer le message jusqu’à la destination requise.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">no route</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
    Indique qu’aucun voisin n’a été trouvé pour acheminer le message jusqu’à la destination requise.
    
    </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:NetGroupSendResult:SENT" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">SENT</apiName><shortdesc class="- topic/shortdesc "> 
    Indique qu’un chemin a été trouvé pour le message et que ce dernier a été envoyé vers sa destination.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">sent</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
    Indique qu’un chemin a été trouvé pour le message et que ce dernier a été envoyé vers sa destination.
    
    </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.net:URLRequestDefaults" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">URLRequestDefaults</apiName><shortdesc class="- topic/shortdesc ">
 La classe URLRequestDefaults inclut des propriétés statiques que vous pouvez utiliser pour définir les valeurs par défaut des propriétés de la classe URLRequest.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 La classe URLRequestDefaults inclut des propriétés statiques que vous pouvez utiliser pour définir les valeurs par défaut des propriétés de la classe URLRequest. Elle comprend également une méthode statique, <codeph class="+ topic/ph pr-d/codeph ">URLRequestDefaults.setLoginCredentialsForHost()</codeph>, qui vous permet de définir les informations d’authentification par défaut des requêtes. La classe URLRequest définit les informations devant être utilisées dans une requête HTTP. 
 
 <p class="- topic/p ">Les propriétés définies dans un objet URLRequest remplacent les propriétés statiques définies pour la classe URLRequestDefaults.</p>
 
 <p class="- topic/p ">Les paramètres de la classe URLRequestDefault ne s’appliquent qu’au contenu du domaine d’application de l’appelant, à une exception près : les paramètres définis lors de l’appel de <codeph class="+ topic/ph pr-d/codeph ">URLRequestDefaults.setLoginCredentialsForHost()</codeph> s’appliquent à tous les domaines d’application dans l’application en cours d’exécution.</p>
 
 <p class="- topic/p ">Seul le contenu Adobe<sup class="+ topic/ph hi-d/sup ">®</sup> AIR<sup class="+ topic/ph hi-d/sup ">®</sup> s’exécutant dans le sandbox de sécurité de l’application peut utiliser la classe URLRequestDefaults. L’utilisation d’autres contenus renvoie une exception SecurityError lors de l’accès aux membres ou aux propriétés de cette classe.</p>
 
 </apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.net.xml#URLRequest" class="- topic/link "><linktext class="- topic/linktext ">URLRequest</linktext></link></related-links><apiOperation id="flash.net:URLRequestDefaults:setLoginCredentialsForHost" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">setLoginCredentialsForHost</apiName><shortdesc class="- topic/shortdesc ">
	Définit le nom d’utilisateur et le mot de passe par défaut de l’hôte sélectionné.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">L’appelant ne se trouve pas dans le sandbox de sécurité de l’application AIR.
	
	</apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">SecurityError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">SecurityError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="any" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">hostname</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Le nom d’hôte auxquels sont appliqués le nom d’utilisateur et le mot de passe. Il peut s’agir d’un domaine, tel que <codeph class="+ topic/ph pr-d/codeph ">"www.example.com"</codeph>, ou d’un nom de domaine et d’un numéro de port, par exemple <codeph class="+ topic/ph pr-d/codeph ">"www.example.com:80"</codeph>. Notez que <codeph class="+ topic/ph pr-d/codeph ">"example.com"</codeph>, <codeph class="+ topic/ph pr-d/codeph ">"www.example.com"</codeph> et <codeph class="+ topic/ph pr-d/codeph ">"sales.example.com"</codeph> sont considérés comme hôtes uniques. 
	
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">user</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Nom d’utilisateur par défaut à utiliser lors de l’authentification d’une requête pour l’hôte spécifié.
	
	</apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">password</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Mot de passe par défaut à utiliser lors de l’authentification d’une requête pour l’hôte spécifié.
	
	</apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Définit le nom d’utilisateur et le mot de passe par défaut de l’hôte sélectionné. Ces paramètres s’appliquent aux objets URLRequest dans tous les domaines d’application de l’application, pas seulement à ceux du domaine d’application de l’objet appelant cette méthode (tandis que les propriétés statiques de la classe URLRequest s’appliquent uniquement au domaine d’application de l’appelant). Ceci permet une connexion au contenu de l’application (quel que soit le domaine d’application du contenu) lorsqu’une autre partie de l’application se connecte.
	
	<p class="- topic/p "><i class="+ topic/ph hi-d/i ">Remarque concernant les applications fonctionnant sous Mac OS :</i> lorsque vous appelez cette méthode sous Mac OS, l’application utilise ces informations d’identification pour l’hôte spécifié tant que celle-ci est ouverte, même si vous appelez par la suite la méthode <codeph class="+ topic/ph pr-d/codeph ">URLRequestDefaults.setLoginCredentialsForHost()</codeph> pour le même hôte. Cependant, si un serveur rejette les informations d’identification spécifiées par cette méthode, l’appel suivant à la méthode <codeph class="+ topic/ph pr-d/codeph ">URLRequestDefaults.setLoginCredentialsForHost()</codeph> (pour le même hôte) est reconnu.</p>
	
	<p class="- topic/p "><i class="+ topic/ph hi-d/i ">Remarque :</i> cette méthode ne s’applique pas aux objets URLRequest utilisés lors du chargement de fichiers ou dans des requêtes RTMP.</p>
	
	</apiDesc></apiOperationDetail></apiOperation><apiValue id="flash.net:URLRequestDefaults:authenticate:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">authenticate</apiName><shortdesc class="- topic/shortdesc ">
	Paramètre par défaut de la propriété authenticate des objets URLRequest.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">L’appelant ne se trouve pas dans le sandbox de sécurité de l’application AIR.
	
	</apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">SecurityError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">SecurityError</apiOperationClassifier></apiException><apiDefaultValue>true
	
	</apiDefaultValue></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Paramètre par défaut de la propriété <codeph class="+ topic/ph pr-d/codeph ">authenticate</codeph> des objets URLRequest. La définition de la propriété <codeph class="+ topic/ph pr-d/codeph ">authenticate</codeph> dans un objet URLRequest annule ce paramètre par défaut.
	
	<p class="- topic/p "><i class="+ topic/ph hi-d/i ">Remarque :</i> ce paramètre ne s’applique pas aux objets URLRequest utilisés lors du chargement de fichiers ou dans des requêtes RTMP.</p>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#URLRequest/authenticate" class="- topic/link "><linktext class="- topic/linktext ">URLRequest.authenticate</linktext></link></related-links></apiValue><apiValue id="flash.net:URLRequestDefaults:cacheResponse:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">cacheResponse</apiName><shortdesc class="- topic/shortdesc ">
	Paramètre par défaut de la propriété cacheResponse des objets URLRequest.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">L’appelant ne se trouve pas dans le sandbox de sécurité de l’application AIR.
	
	</apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">SecurityError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">SecurityError</apiOperationClassifier></apiException><apiDefaultValue>true
	
	</apiDefaultValue></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Paramètre par défaut de la propriété <codeph class="+ topic/ph pr-d/codeph ">cacheResponse</codeph> des objets URLRequest. La définition de la propriété <codeph class="+ topic/ph pr-d/codeph ">cacheResponse</codeph> dans un objet URLRequest annule ce paramètre par défaut. Si la valeur correspond à <codeph class="+ topic/ph pr-d/codeph ">true</codeph>, l’application AIR utilise par défaut le cache HTTP du système d’exploitation. Ce paramètre ne s’applique pas aux objets URLRequest utilisés lors du chargement de fichiers ou dans des requêtes RTMP.
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#URLRequest/cacheResponse" class="- topic/link "><linktext class="- topic/linktext ">URLRequest.cacheResponse</linktext></link></related-links></apiValue><apiValue id="flash.net:URLRequestDefaults:followRedirects:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">followRedirects</apiName><shortdesc class="- topic/shortdesc ">
	Paramètre par défaut de la propriété followRedirects des objets URLRequest.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">L’appelant ne se trouve pas dans le sandbox de sécurité de l’application AIR.
	
	</apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">SecurityError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">SecurityError</apiOperationClassifier></apiException><apiDefaultValue>true
	
	</apiDefaultValue></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Paramètre par défaut de la propriété <codeph class="+ topic/ph pr-d/codeph ">followRedirects</codeph> des objets URLRequest. La définition de la propriété <codeph class="+ topic/ph pr-d/codeph ">followRedirects</codeph> dans un objet URLRequest annule ce paramètre par défaut. Ce paramètre ne s’applique pas aux objets URLRequest utilisés lors du chargement de fichiers ou dans des requêtes RTMP.
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#URLRequest/followRedirects" class="- topic/link "><linktext class="- topic/linktext ">URLRequest.followRedirects</linktext></link></related-links></apiValue><apiValue id="flash.net:URLRequestDefaults:idleTimeout:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">idleTimeout</apiName><shortdesc class="- topic/shortdesc ">
	Paramètre par défaut de la propriété idleTimeout des objets URLRequest et des objets HTMLLoader.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">L’appelant ne se trouve pas dans le sandbox de sécurité de l’application AIR.
	</apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">SecurityError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">SecurityError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">La valeur idleTimeout est négative.
	
	</apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">RangeError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">RangeError</apiOperationClassifier></apiException><apiDefaultValue>0
	
	</apiDefaultValue></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Paramètre par défaut de la propriété <codeph class="+ topic/ph pr-d/codeph ">idleTimeout</codeph> des objets URLRequest et des objets HTMLLoader.
	
	<p class="- topic/p ">Le délai d’inactivité correspond au laps de temps (en millisecondes) que le client attend une réponse du serveur, une fois la connexion établie et avant l’abandon de la requête.</p>
	
	<p class="- topic/p ">Ce paramètre définit le délai d’inactivité par défaut utilisé par l’objet URLRequest ou par l’objet HTMLLoader. La définition de la propriété <codeph class="+ topic/ph pr-d/codeph ">idleTimeout</codeph> dans un objet URLRequest ou un objet HTMLLoader annule ce paramètre par défaut. </p>
	
	<p class="- topic/p ">Lorsque cette propriété est définie sur 0 (valeur par défaut), le moteur d’exécution utilise le délai d’inactivité par défaut défini par le système d’exploitation. Le délai d’inactivité par défaut varie selon le système d’exploitation (Mac OS, Linux ou Windows) ou selon la version du système d’exploitation.</p>
	
	<p class="- topic/p ">Ce paramètre ne s’applique pas aux objets URLRequest utilisés lors du chargement de fichiers ou dans des requêtes RTMP.</p>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="../../flash/html/HTMLLoader.html#idleTimeout" class="- topic/link "><linktext class="- topic/linktext ">HTMLLoader.idleTimeout</linktext></link><link href="flash.net.xml#URLRequest/idleTimeout" class="- topic/link "><linktext class="- topic/linktext ">URLRequest.idleTimeout</linktext></link></related-links></apiValue><apiValue id="flash.net:URLRequestDefaults:manageCookies:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">manageCookies</apiName><shortdesc class="- topic/shortdesc ">
	Paramètre par défaut de la propriété manageCookies des objets URLRequest.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">L’appelant ne se trouve pas dans le sandbox de sécurité de l’application AIR.
	
	</apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">SecurityError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">SecurityError</apiOperationClassifier></apiException><apiDefaultValue>true
	
	</apiDefaultValue></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Paramètre par défaut de la propriété <codeph class="+ topic/ph pr-d/codeph ">manageCookies</codeph> des objets URLRequest. La définition de la propriété <codeph class="+ topic/ph pr-d/codeph ">manageCookies</codeph> dans un objet URLRequest annule ce paramètre par défaut.
	
	<p class="- topic/p "><i class="+ topic/ph hi-d/i ">Remarque :</i> ce paramètre ne s’applique pas aux objets URLRequest utilisés lors du chargement de fichiers ou dans des requêtes RTMP.</p>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#URLRequest/manageCookies" class="- topic/link "><linktext class="- topic/linktext ">URLRequest.manageCookies</linktext></link></related-links></apiValue><apiValue id="flash.net:URLRequestDefaults:useCache:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">useCache</apiName><shortdesc class="- topic/shortdesc ">
	Paramètre par défaut de la propriété useCache des objets URLRequest.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">L’appelant ne se trouve pas dans le sandbox de sécurité de l’application AIR.
	
	</apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">SecurityError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">SecurityError</apiOperationClassifier></apiException><apiDefaultValue>true
	
	</apiDefaultValue></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Paramètre par défaut de la propriété <codeph class="+ topic/ph pr-d/codeph ">useCache</codeph> des objets URLRequest. La définition de la propriété <codeph class="+ topic/ph pr-d/codeph ">useCache</codeph> dans un objet URLRequest annule ce paramètre par défaut. Ce paramètre ne s’applique pas aux objets URLRequest utilisés lors du chargement de fichiers ou dans des requêtes RTMP.
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#URLRequest/useCache" class="- topic/link "><linktext class="- topic/linktext ">URLRequest.useCache</linktext></link></related-links></apiValue><apiValue id="flash.net:URLRequestDefaults:userAgent:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">userAgent</apiName><shortdesc class="- topic/shortdesc ">
	Paramètre par défaut de la propriété userAgent des objets URLRequest.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">L’appelant ne se trouve pas dans le sandbox de sécurité de l’application AIR.
	
	</apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">SecurityError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">SecurityError</apiOperationClassifier></apiException></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Paramètre par défaut de la propriété <codeph class="+ topic/ph pr-d/codeph ">userAgent</codeph> des objets URLRequest. La définition de la propriété <codeph class="+ topic/ph pr-d/codeph ">userAgent</codeph> dans un objet URLRequest annule ce paramètre par défaut.
	
	<p class="- topic/p ">Il s’agit également de la chaîne userAgent par défaut de tous les objets HTMLLoader (utilisés lors de l’appel de la méthode <codeph class="+ topic/ph pr-d/codeph ">load()</codeph> de l’objet HTMLLoader). La définition de la propriété <codeph class="+ topic/ph pr-d/codeph ">userAgent</codeph> de l’objet HTMLLoader annule le paramètre <codeph class="+ topic/ph pr-d/codeph ">URLRequestDefaults.userAgent</codeph>.</p>
	
	<p class="- topic/p ">Cette valeur par défaut varie selon le système d’exploitation du moteur d’exécution (par exemple, Mac OS, Linux ou Windows), ainsi que du langage et de la version du moteur d’exécution, comme le montrent les exemples suivants :</p>
	
	<ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">"Mozilla/5.0 (Macintosh; U; PPC Mac OS X; en) AppleWebKit/526.9+ (KHTML, like Gecko) AdobeAIR/1.5"</codeph></li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">"Mozilla/5.0 (Windows; U; en) AppleWebKit/526.9+ (KHTML, like Gecko) AdobeAIR/1.5"</codeph></li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">"Mozilla/5.0 (X11; U; Linux i686; en-US) AppleWebKit/526.9+ (KHTML, like Gecko) AdobeAIR/1.5"</codeph></li></ul>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#URLRequest/userAgent" class="- topic/link "><linktext class="- topic/linktext ">flash.net.URLRequest.userAgent</linktext></link><link href="../../flash/html/HTMLLoader.html#userAgent" class="- topic/link "><linktext class="- topic/linktext ">flash.html.HTMLLoader.userAgent</linktext></link></related-links></apiValue></apiClassifier><apiClassifier languages="" id="flash.net:NetGroup" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">NetGroup</apiName><shortdesc class="- topic/shortdesc ">
Les occurrences de la classe NetGroup représentent l’appartenance à un groupe RTMFP.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:EventDispatcher</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
Les occurrences de la classe NetGroup représentent l’appartenance à un groupe RTMFP. Utilisez cette classe pour effectuer les opérations suivantes :

<ul class="- topic/ul "><li class="- topic/li "><b class="+ topic/ph hi-d/b ">Contrôle de la qualité du service</b>. La propriété <codeph class="+ topic/ph pr-d/codeph ">info</codeph> contient un objet NetGroupInfo dont les propriétés fournissent des statistiques de qualité de service pour ce groupe.</li><li class="- topic/li "><b class="+ topic/ph hi-d/b ">Publication</b>. Appelez <codeph class="+ topic/ph pr-d/codeph ">post()</codeph> pour diffuser des messages ActionScript à tous les membres d’un groupe.</li><li class="- topic/li "><b class="+ topic/ph hi-d/b ">Routage direct</b>. Appelez <codeph class="+ topic/ph pr-d/codeph ">sendToNearest()</codeph>, <codeph class="+ topic/ph pr-d/codeph ">sendToNeighbor()</codeph> et <codeph class="+ topic/ph pr-d/codeph ">sendToAllNeighbors()</codeph> pour envoyer un court message de données à un membre spécifique d’un groupe homologue à homologue. Il n’est pas nécessaire que la source et la destination aient une connexion directe.</li><li class="- topic/li "><b class="+ topic/ph hi-d/b ">Réplication d’objets</b>. Appelez <codeph class="+ topic/ph pr-d/codeph ">addHaveObjects()</codeph>, <codeph class="+ topic/ph pr-d/codeph ">removeHaveObjects()</codeph>, <codeph class="+ topic/ph pr-d/codeph ">addWantObjects()</codeph>, <codeph class="+ topic/ph pr-d/codeph ">removeWantObjects()</codeph>, <codeph class="+ topic/ph pr-d/codeph ">writeRequestedObject()</codeph> et <codeph class="+ topic/ph pr-d/codeph ">denyRequestedObject()</codeph> pour diviser les données volumineuses en plusieurs fragments et les reproduire dans tous les nœuds d’un groupe homologue à homologue.</li></ul>

<p class="- topic/p ">Dans la classe NetGroup côté client, l’objet NetConnection distribue les événements suivants :</p>

<ul class="- topic/ul "><li class="- topic/li ">NetGroup.Connect.Success</li><li class="- topic/li ">NetGroup.Connect.Failed</li><li class="- topic/li ">NetGroup.Connect.Rejected</li></ul>

<p class="- topic/p ">La propriété <codeph class="+ topic/ph pr-d/codeph ">info.group</codeph> de l’objet d’événement contient une référence à l’événement source (l’objet NetGroup). L’objet NetGroup distribue tous les autres événements. Dans la classe NetGroup côté serveur, l’objet NetGroup distribue tous les événements.</p>

<p class="- topic/p ">Pour plus d’informations sur la mise en réseau coopérative, voir le didacticiel <xref href="http://www.flashrealtime.com/basics-of-p2p-in-flash/" scope="external" class="- topic/xref "> Basics of P2P in Flash</xref> par Tom Krcha (disponible en anglais uniquement). Pour plus d’informations sur l’utilisation de groupes avec la mise en réseau coopérative, voir le didacticiel <xref href="http://tv.adobe.com/watch/max-2009-develop/social-media-experiences-with-flash-media-and-rtmfp/" scope="external" class="- topic/xref ">Social Media Experiences with Flash Media and RTMFP</xref>, également par Tom Krcha (disponible en anglais uniquement).</p>

<p class="- topic/p ">Pour plus d’informations sur les détails techniques de la mise en réseau coopérative, voir le didacticiel <xref href="http://tv.adobe.com/watch/max-2009-develop/p2p-on-the-flash-platform-with-rtmfp" scope="external" class="- topic/xref ">P2P on the Flash Platform with RTMFP</xref> publié par l’informaticien d’Adobe, Matthieu Kaufman (disponible en anglais uniquement).</p>

</apiDesc><example conref="examples\NetGroupExample.as" class="- topic/example "> Il s’agit d’une application de conférence vidéo simple qui utilise la mise en réseau homologue à homologue. L’application se connecte à Flash Media Server via RTMFP. Le serveur conserve les empreintes des applications clientes et gère le groupe d’homologues lors de la connexion des clients. Cependant, toutes les données sont envoyées entre les clients (homologues), elles ne sont pas renvoyées au serveur.
 <p class="- topic/p ">Lorsque vous exécutez l’application, vous pouvez indiquer n’importe quel nom de groupe dans le champ de saisie de texte. La classe GroupSpecifier utilise le nom (ainsi que toutes les propriétés que vous avez définies) pour créer une chaîne qui est le nom toujours unique du groupe. Pour connecter un autre client au groupe, ce client doit utiliser le même nom de groupe. Par exemple, si le client A utilise le nom de groupe « firstmesh », les autres clients qui souhaitent communiquer avec le client A doivent également utiliser le nom de groupe « firstmesh ». Si le client B utilise le nom de groupe « kite », il parviendra à se connecter, mais il créera un nouveau groupe et ne sera pas en mesure de communiquer avec le client A ou les membres du groupe « firstmesh ».</p>

 <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">


&lt;?xml version="1.0" encoding="utf-8"?>
&lt;mx:Application xmlns:mx="http://www.adobe.com/2006/mxml" layout="absolute" width="100%" height="100%" applicationComplete="OnApplicationComplete()">
    &lt;mx:Script>
        &lt;![CDATA[
            private var netConnection:NetConnection = null;
            private var netStream:NetStream = null;
            private var netGroup:NetGroup = null;
            private var video:Video = null;
            private var sequenceNumber:uint = 0;
            private var resizeTimer:Timer = null;

            private const SERVER:String = "rtmfp://fms.example.com/someapp";

            [Bindable] private var connected:Boolean = false;
            [Bindable] private var joinedGroup:Boolean = false;

            private function OnApplicationComplete():void
            {
                userName.text = "user " + int(Math.random() * 65536);

                groupName.text = "channel" + (int(Math.random() * 899) + 101);

                resizeTimer = new Timer(2000.0);
                resizeTimer.addEventListener(TimerEvent.TIMER, DoResizeVideo);
                resizeTimer.start();
            }

            private function StatusMessage(msg:Object):void
            {
                statusLog.text += msg;
                statusLog.verticalScrollPosition = statusLog.textHeight;
                statusLog.validateNow();
            }

            private function NetStatusHandler(e:NetStatusEvent):void
            {
                StatusMessage(e.info.code);
                switch(e.info.code)
                {
                case "NetConnection.Connect.Success":
                    OnConnect();
                    break;

                case "NetConnection.Connect.Closed":
                case "NetConnection.Connect.Failed":
                case "NetConnection.Connect.Rejected":
                case "NetConnection.Connect.AppShutdown":
                case "NetConnection.Connect.InvalidApp":
                    OnDisconnect();
                    break;

                case "NetStream.Connect.Success": // e.info.stream
                    OnNetStreamConnect();
                    break;

                case "NetStream.Connect.Rejected": // e.info.stream
                case "NetStream.Connect.Failed": // e.info.stream
                    DoDisconnect();
                    break;

                case "NetGroup.Connect.Success": // e.info.group
                    OnNetGroupConnect();
                    break;

                case "NetGroup.Connect.Rejected": // e.info.group
                case "NetGroup.Connect.Failed": // e.info.group
                    DoDisconnect();
                    break;

                case "NetGroup.Posting.Notify": // e.info.message, e.info.messageID
                    OnPosting(e.info.message);
                    break;


                case "NetStream.MulticastStream.Reset":
                case "NetStream.Buffer.Full":
                    DoResizeVideo();
                    break;

                case "NetGroup.SendTo.Notify": // e.info.message, e.info.from, e.info.fromLocal
                case "NetGroup.LocalCoverage.Notify": //
                case "NetGroup.Neighbor.Connect": // e.info.neighbor
                case "NetGroup.Neighbor.Disconnect": // e.info.neighbor
                case "NetGroup.MulticastStream.PublishNotify": // e.info.name
                case "NetGroup.MulticastStream.UnpublishNotify": // e.info.name
                case "NetGroup.Replication.Fetch.SendNotify": // e.info.index
                case "NetGroup.Replication.Fetch.Failed": // e.info.index
                case "NetGroup.Replication.Fetch.Result": // e.info.index, e.info.object
                case "NetGroup.Replication.Request": // e.info.index, e.info.requestID
                default:
                    break;
                }
            }

            private function DoConnect():void
            {
                StatusMessage("Connecting to \"" + SERVER + "\" ...\n");
                netConnection = new NetConnection();
                netConnection.addEventListener(NetStatusEvent.NET_STATUS, NetStatusHandler);
                netConnection.connect(SERVER);
            }

            private function OnConnect():void
            {
                var groupSpecifier:GroupSpecifier;

                StatusMessage("Connected\n");
                connected = true;

                groupSpecifier = new GroupSpecifier("max2009lab/" + groupName.text);
                groupSpecifier.multicastEnabled = true;
                groupSpecifier.postingEnabled = true;
                groupSpecifier.serverChannelEnabled = true;

                netStream = new NetStream(netConnection, groupSpecifier.groupspecWithAuthorizations());
                netStream.addEventListener(NetStatusEvent.NET_STATUS, NetStatusHandler);

                netGroup = new NetGroup(netConnection, groupSpecifier.groupspecWithAuthorizations());
                netGroup.addEventListener(NetStatusEvent.NET_STATUS, NetStatusHandler);

                StatusMessage("Join \"" + groupSpecifier.groupspecWithAuthorizations() + "\"\n");
            }

            private function OnNetStreamConnect():void
            {
                netStream.client = this;

                var mic:Microphone = Microphone.getMicrophone();
                if(mic)
                {
                    mic.codec = SoundCodec.SPEEX;
                    mic.setSilenceLevel(0);

                    netStream.attachAudio(mic);

                    StatusMessage("got microphone\n");
                }

                var camera:Camera = Camera.getCamera();
                if(camera)
                {
                    camera.setMode(320, 240, 10);
                    camera.setQuality(30000, 0);
                    camera.setKeyFrameInterval(15);

                    videoDisplay.attachCamera(camera);
                    videoDisplay.maintainAspectRatio = true;

                    netStream.attachCamera(camera);

                    StatusMessage("got camera\n");
                }

                netStream.publish("stream");
            }

            private function OnNetGroupConnect():void
            {
                joinedGroup = true;
            }

            private function DoDisconnect():void
            {
                if(netConnection)
                    netConnection.close();
                videoDisplay.attachCamera(null);
            }

            private function OnDisconnect():void
            {
                StatusMessage("Disconnected\n");
                netConnection = null;
                netStream = null;
                netGroup = null;
                connected = false;
                joinedGroup = false;
            }

            private function ClearChatText():void
            {
                chatText.text = "";
            }

            private function DoPost():void
            {
                var message:Object = new Object;

                message.user = userName.text;
                message.text = chatText.text;
                message.sequence = sequenceNumber++;
                message.sender = netConnection.nearID;

                netGroup.post(message);

                StatusMessage("==> " + chatText.text + "\n");

                chatText.callLater(ClearChatText);
            }

            private function OnPosting(message:Object):void
            {
                StatusMessage("&lt;" + message.user + "> " + message.text + "\n");
            }

            private function DoResizeVideo(ignored:* = null):void
            {
                if(video)
                {
                    if( (0 == video.videoHeight)
                     || (0 == video.videoWidth)
                    )
                    {
                        video.height = videoDisplay.height;
                        video.width = videoDisplay.width;
                        video.x = 0;
                        video.y = 0;
                    }
                    else
                    {
                        var videoAspect:Number = Number(video.videoWidth) / Number(video.videoHeight);
                        var displayAspect:Number = Number(videoDisplay.width) / Number(videoDisplay.height);
                        var adjustFactor:Number;

                        if(videoAspect >= displayAspect) // video is wider than display
                        {
                            adjustFactor = Number(video.videoWidth) / Number(videoDisplay.width);
                            video.width = videoDisplay.width;
                            video.height = int(Number(video.videoHeight) / adjustFactor);
                            video.x = 0;
                            video.y = int((videoDisplay.height - video.height) / 2);
                        }
                        else
                        {
                            adjustFactor = Number(video.videoHeight) / Number(videoDisplay.height);
                            video.height = videoDisplay.height;
                            video.width = int(Number(video.videoWidth) / adjustFactor);
                            video.x = int((videoDisplay.width - video.width) / 2);
                            video.y = 0;
                        }
                    }
                }
            }

            public function onPlayStatus(info:Object):void {}
            public function onMetaData(info:Object):void {}
            public function onCuePoint(info:Object):void {}
            public function onTextData(info:Object):void {}

            public function ValidateConnectAllowed(isConnected:Boolean, groupNameText:String):Boolean
            {
                return (!isConnected) &amp;&amp; (groupNameText.length > 0);
            }
        ]]&gt;
    &lt;/mx:Script>

    &lt;mx:VBox top="10" right="10" left="10" bottom="10" verticalGap="6">
        &lt;mx:HBox width="100%">
            &lt;mx:Text text="Group:"/>
            &lt;mx:TextInput id="groupName" width="100%" text="default" enabled="{!connected}"/>
            &lt;mx:Button label="Connect" click="DoConnect()" enabled="{ValidateConnectAllowed(connected, groupName.text)}" />
            &lt;mx:Button label="Disconnect" click="DoDisconnect()" enabled="{connected}" />
        &lt;/mx:HBox>
        &lt;mx:VideoDisplay id="videoDisplay" width="320" height="240" resize="DoResizeVideo()"/>
        &lt;mx:TextArea id="statusLog" width="100%" height="100%"/>
        &lt;mx:HBox width="100%">
            &lt;mx:TextInput id="userName" width="160" />
            &lt;mx:TextInput id="chatText" width="100%" enabled="{joinedGroup}" enter="DoPost()"/>
        &lt;/mx:HBox>
    &lt;/mx:VBox>

&lt;/mx:Application>
</codeblock></example></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.net.xml#GroupSpecifier" class="- topic/link "><linktext class="- topic/linktext ">flash.net.GroupSpecifier</linktext></link><link href="flash.net.xml#NetStream" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetStream</linktext></link><link href="flash.events.xml#NetStatusEvent/info" class="- topic/link "><linktext class="- topic/linktext ">Valeurs de flash.events.NetStatusEvent info.code commençant par "NetGroup."</linktext></link></related-links><adobeApiEvent id="flash.net:NetGroup_flash.events.NetStatusEvent.NET_STATUS_netStatus" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">netStatus</apiName><shortdesc class="- topic/shortdesc ">
 Distribué lorsqu’un objet NetGroup publie son état ou signale une erreur.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.NetStatusEvent.NET_STATUS</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.NetStatusEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Distribué lorsqu’un objet NetGroup publie son état ou signale une erreur. L’événement <codeph class="+ topic/ph pr-d/codeph ">netStatus</codeph> contient une propriété <codeph class="+ topic/ph pr-d/codeph ">info</codeph>. La propriété <codeph class="+ topic/ph pr-d/codeph ">info</codeph> est un objet qui contient des informations sur l’événement, telles que la réussite ou l’échec d’une tentative de connexion.
 </apiDesc></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.events.xml#NetStatusEvent/info" class="- topic/link "><linktext class="- topic/linktext ">flash.events.NetStatusEvent.info</linktext></link></related-links></adobeApiEvent><apiConstructor id="flash.net:NetGroup:NetGroup" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">NetGroup</apiName><shortdesc class="- topic/shortdesc ">
     Construit un objet NetGroup sur l’objet NetConnection spécifié et le joint au groupe spécifié par le groupspec.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">NetGroup, constructor
     </keyword></asCustoms></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">L’occurrence de NetConnection n’est pas connectée.
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Le spécificateur de groupe n’est pas valide.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">Error</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Error</apiOperationClassifier></apiException><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">connection</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.net:NetConnection</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Objet NetConnection.
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">groupspec</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Chaîne spécifiant le groupe RTMFP homologue à homologue auquel se joindre, y compris son nom, ses fonctionnalités et ses restrictions, ainsi que les autorisations de ce membre.
     
     <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
     new NetGroup(myConnection, myGroupSpecifier.groupspecWithAuthorizations());
     </codeblock>
     
     </apiDesc></apiParam><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Construit un nouvel objet NetGroup sur l’objet NetConnection spécifié et le joint au groupe spécifié.
     
     </apiTipText></apiTipTexts></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Construit un objet NetGroup sur l’objet NetConnection spécifié et le joint au groupe spécifié par le <codeph class="+ topic/ph pr-d/codeph ">groupspec</codeph>.
     
     <p class="- topic/p ">Dans la plupart des cas, un <codeph class="+ topic/ph pr-d/codeph ">groupspec</codeph> peut utiliser la liaison montante du réseau sur le système local. Lorsqu’un objet NetStream ou NetGroup est construit avec un groupspec, Flash Player affiche une boîte de dialogue Confidentialité. Cette boîte de dialogue vous demande si Flash Player peut utiliser la connexion en vue de partager les données avec les homologues d’un utilisateur. Si l’utilisateur clique sur « Autoriser ce domaine », la boîte de dialogue n’apparaît pas la prochaine fois que l’utilisateur se connecte à cette application. Si un utilisateur n’autorise pas la mise en réseau coopérative, toutes les fonctions d’homologue dans le groupe (publication, routage direct, réplication d’objets et multidiffusion) sont désactivées. Si l’autorisation est accordée, un événement NetStatusEvent est envoyé à l’écouteur d’événement de NetConnection avec <codeph class="+ topic/ph pr-d/codeph ">NetGroup.Connect.Success</codeph> dans la propriété <codeph class="+ topic/ph pr-d/codeph ">code</codeph> de l’objet <codeph class="+ topic/ph pr-d/codeph ">info</codeph>. Si l’autorisation est refusée, la propriété <codeph class="+ topic/ph pr-d/codeph ">code</codeph> est définie sur <codeph class="+ topic/ph pr-d/codeph ">NetGroup.Connect.Rejected</codeph>. Tant qu’un événement <codeph class="+ topic/ph pr-d/codeph ">NetGroup.Connect.Success</codeph> n’est pas reçu, une exception est renvoyée si vous tentez d’appeler une méthode de l’objet NetGroup.</p>
     
     <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Remarque :</b> lorsqu’un client s’abonne au flux en multidiffusion d’une adresse IP native, la boîte de dialogue de sécurité n’est pas affichée.</p>
     
     </apiDesc></apiConstructorDetail><related-links class="- topic/related-links "><link href="flash.events.xml#NetStatusEvent/code_NetGroup_Connect_Success" class="- topic/link "><linktext class="- topic/linktext ">flash.events.NetStatusEvent.info.code="NetGroup.Connect.Success"</linktext></link><link href="flash.events.xml#NetStatusEvent/code_NetGroup_Connect_Rejected" class="- topic/link "><linktext class="- topic/linktext ">flash.events.NetStatusEvent.info.code="NetGroup.Connect.Rejected"</linktext></link><link href="flash.net.xml#NetConnection" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetConnection</linktext></link><link href="flash.net.xml#GroupSpecifier" class="- topic/link "><linktext class="- topic/linktext ">flash.net.GroupSpecifier</linktext></link></related-links></apiConstructor><apiOperation id="flash.net:NetGroup:addHaveObjects" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">addHaveObjects</apiName><shortdesc class="- topic/shortdesc ">
     Ajoute des objets depuis startIndex jusqu’à endIndex au jeu d’objets qui répondent aux demandes, comme l’indique ce nœud aux voisins.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Un nombre transmis à cette méthode est inférieur à 0 ou supérieur à 9007199254740992.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">RangeError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">RangeError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">startIndex</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Début de la plage d’index de l’objet à ajouter au jeu Have.
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">endIndex</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Fin de la plage d’index de l’objet à ajouter au jeu Have.
     
     </apiDesc></apiParam><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Ajoute des objets au jeu d’objets qui répondent aux demandes, comme l’indique ce nœud aux voisins.
     
     </apiTipText></apiTipTexts></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Ajoute des objets depuis <codeph class="+ topic/ph pr-d/codeph ">startIndex</codeph> jusqu’à <codeph class="+ topic/ph pr-d/codeph ">endIndex</codeph> au jeu d’objets qui répondent aux demandes, comme l’indique ce nœud aux voisins. Par défaut, le jeu Have est vide. Les index doivent être des nombres entiers compris entre 0 et 9 007 199 254 740 992.
     
     <p class="- topic/p ">Pour plus d’informations sur la réplication d’objets, voir la section <xref href="http://www.adobe.com/go/learn_fms_replicate_en" class="- topic/xref ">"Replicate an object within a group"</xref> du guide <i class="+ topic/ph hi-d/i ">Flash Media Server Developer’s Guide</i>.</p>
     
     <p class="- topic/p ">Cette méthode envoie un événement NetStatusEvent à l’écouteur d’événement de NetGroup avec <codeph class="+ topic/ph pr-d/codeph ">"NetGroup.Replication.Request"</codeph> dans la propriété <codeph class="+ topic/ph pr-d/codeph ">code</codeph> de l’objet <codeph class="+ topic/ph pr-d/codeph ">info</codeph>. </p>
     
     <p class="- topic/p "><b class="+ topic/ph hi-d/b ">REMARQUE :</b> testez l’événement <codeph class="+ topic/ph pr-d/codeph ">NetGroup.Neighbor.Connect</codeph> avant d’appeler cette méthode.</p> 
     
     </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetGroup/removeHaveObjects()" class="- topic/link "><linktext class="- topic/linktext ">removeHaveObjects()</linktext></link><link href="flash.net.xml#NetGroup/writeRequestedObject()" class="- topic/link "><linktext class="- topic/linktext ">writeRequestedObject()</linktext></link><link href="flash.net.xml#NetGroup/denyRequestedObject()" class="- topic/link "><linktext class="- topic/linktext ">denyRequestedObject()</linktext></link><link href="flash.events.xml#NetStatusEvent/code_NetGroup_Replication_Request" class="- topic/link "><linktext class="- topic/linktext ">flash.events.NetStatusEvent.info.code="NetGroup.Replication.Request"</linktext></link></related-links></apiOperation><apiOperation id="flash.net:NetGroup:addMemberHint" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">addMemberHint</apiName><shortdesc class="- topic/shortdesc ">
     Ajoute manuellement un enregistrement indiquant que peerID est un membre du groupe.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">TRUE pour une réussite, FALSE pour un échec.
     
     
     </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">peerID</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">ID homologue à ajouter au jeu de voisins potentiels.
     </apiDesc></apiParam><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Ajoute manuellement un enregistrement indiquant que peerID est un membre du groupe, mais qu’il ne se connecte pas nécessairement immédiatement.
     </apiTipText></apiTipTexts></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Ajoute manuellement un enregistrement indiquant que <codeph class="+ topic/ph pr-d/codeph ">peerID</codeph> est un membre du groupe. Une tentative de connexion immédiate est effectuée uniquement si la topologie le requiert.
     
     </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetGroup/addNeighbor()" class="- topic/link "><linktext class="- topic/linktext ">addNeighbor()</linktext></link></related-links></apiOperation><apiOperation id="flash.net:NetGroup:addNeighbor" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">addNeighbor</apiName><shortdesc class="- topic/shortdesc ">
     Ajoute manuellement un voisin en le connectant immédiatement au peerID spécifié, qui doit déjà se trouver dans ce groupe.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">TRUE pour une réussite, FALSE pour un échec.
     
     </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">peerID</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">L’ID homologue auquel se connecter immédiatement.
     </apiDesc></apiParam><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Ajoute manuellement un voisin en le connectant directement à l’ID homologue spécifié.
     </apiTipText></apiTipTexts></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Ajoute manuellement un voisin en le connectant immédiatement au <codeph class="+ topic/ph pr-d/codeph ">peerID</codeph> spécifié, qui doit déjà se trouver dans ce groupe. Cette connexion directe peut être abandonnée ultérieurement si la topologie n’en a pas besoin.
     
     </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetGroup/addMemberHint()" class="- topic/link "><linktext class="- topic/linktext ">addMemberHint()</linktext></link></related-links></apiOperation><apiOperation id="flash.net:NetGroup:addWantObjects" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">addWantObjects</apiName><shortdesc class="- topic/shortdesc ">
     Ajoute des objets depuis startIndex jusqu’à endIndex au jeu d’objets à extraire.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Un nombre transmis à cette méthode est inférieur à 0 ou supérieur à 9007199254740992.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">RangeError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">RangeError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">startIndex</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Début de la plage d’index d’objets à ajouter au jeu Want.
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">endIndex</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Fin de la plage d’index d’objets à ajouter au jeu Want.
     
     </apiDesc></apiParam><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Ajoute des objets au jeu d’objets à extraire.
     
     </apiTipText></apiTipTexts></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Ajoute des objets depuis <codeph class="+ topic/ph pr-d/codeph ">startIndex</codeph> jusqu’à <codeph class="+ topic/ph pr-d/codeph ">endIndex</codeph> au jeu d’objets à extraire. Les index doivent être des nombres entiers compris entre 0 et 9 007 199 254 740 992. Par défaut, le jeu Want est vide.
     
     <p class="- topic/p ">Pour plus d’informations sur la réplication d’objets, voir la section <xref href="http://www.adobe.com/go/learn_fms_replicate_en" class="- topic/xref ">"Replicate an object within a group"</xref> du guide <i class="+ topic/ph hi-d/i ">Flash Media Server Developer’s Guide</i>.</p>
     
     <p class="- topic/p ">Cette méthode envoie un événement NetStatusEvent à l’écouteur d’événement de NetGroup avec <codeph class="+ topic/ph pr-d/codeph ">NetGroup.Replication.Fetch.SendNotify</codeph> dans la propriété <codeph class="+ topic/ph pr-d/codeph ">info.code</codeph>. Cet événement est suivi d’un événement <codeph class="+ topic/ph pr-d/codeph ">NetGroup.Replication.Fetch.Failed</codeph> ou <codeph class="+ topic/ph pr-d/codeph ">NetGroup.Replication.Fetch.Result</codeph>.</p>
     
     <p class="- topic/p "><b class="+ topic/ph hi-d/b ">REMARQUE :</b> testez l’événement <codeph class="+ topic/ph pr-d/codeph ">NetGroup.Neighbor.Connect</codeph> avant d’appeler cette méthode.</p> 
     
     </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetGroup/removeWantObjects()" class="- topic/link "><linktext class="- topic/linktext ">removeWantObjects()</linktext></link><link href="flash.events.xml#NetStatusEvent/code_NetGroup_Replication_Fetch_SendNotify" class="- topic/link "><linktext class="- topic/linktext ">flash.events.NetStatusEvent.info.code="NetGroup.Replication.Fetch.SendNotify"</linktext></link><link href="flash.events.xml#NetStatusEvent/code_NetGroup_Replication_Fetch_Failed" class="- topic/link "><linktext class="- topic/linktext ">flash.events.NetStatusEvent.info.code="NetGroup.Replication.Fetch.Failed"</linktext></link><link href="flash.events.xml#NetStatusEvent/code_NetGroup_Replication_Fetch_Result" class="- topic/link "><linktext class="- topic/linktext ">flash.events.NetStatusEvent.info.code="NetGroup.Replication.Fetch.Result"</linktext></link></related-links></apiOperation><apiOperation id="flash.net:NetGroup:close" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">close</apiName><shortdesc class="- topic/shortdesc ">
     Se déconnecte du groupe et ferme cet objet NetGroup.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Se déconnecte du groupe et ferme cet objet NetGroup. Il est impossible d’utiliser cet objet NetGroup après l’appel de cette méthode.
     
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.net:NetGroup:convertPeerIDToGroupAddress" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">convertPeerIDToGroupAddress</apiName><shortdesc class="- topic/shortdesc ">
     Convertit un ID homologue en une adresse de groupe pouvant être utilisée avec la méthode sendToNearest().</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Adresse de groupe pour l’ID homologue.
     
     </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">peerID</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">ID homologue à convertir.
     </apiDesc></apiParam><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Convertit un ID homologue en une adresse de groupe pouvant être utilisée avec la méthode sendToNearest().
     </apiTipText></apiTipTexts></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Convertit un ID homologue en une adresse de groupe pouvant être utilisée avec la méthode <codeph class="+ topic/ph pr-d/codeph ">sendToNearest()</codeph>.
     
     </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetConnection/farID" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetConnection.farID</linktext></link><link href="flash.net.xml#NetConnection/nearID" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetConnection.nearID</linktext></link><link href="flash.net.xml#NetStream/farID" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetStream.farID</linktext></link><link href="flash.net.xml#NetGroup/sendToNearest()" class="- topic/link "><linktext class="- topic/linktext ">sendToNearest()</linktext></link></related-links></apiOperation><apiOperation id="flash.net:NetGroup:denyRequestedObject" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">denyRequestedObject</apiName><shortdesc class="- topic/shortdesc ">
     Refuse une demande reçue dans l’événement NetGroup.Replication.Request d’un NetStatusEvent pour un objet précédemment annoncé avec addHaveObjects().</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">requestID</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Identifiant de la demande, tel qu’indiqué dans l’événement <codeph class="+ topic/ph pr-d/codeph ">NetGroup.Replication.Request</codeph>.
     
     </apiDesc></apiParam><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Rejette la demande d’un objet précédemment annoncé.
     </apiTipText></apiTipTexts></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Refuse une demande reçue dans l’événement <codeph class="+ topic/ph pr-d/codeph ">NetGroup.Replication.Request</codeph> d’un NetStatusEvent pour un objet précédemment annoncé avec <codeph class="+ topic/ph pr-d/codeph ">addHaveObjects()</codeph>. Le demandant peut solliciter à nouveau cet objet à moins (ou jusqu’à ce) qu’il ne soit retiré du jeu Have.
     
     <p class="- topic/p ">Pour plus d’informations sur la réplication d’objets, voir la section <xref href="http://www.adobe.com/go/learn_fms_replicate_en" class="- topic/xref ">"Replicate an object within a group"</xref> du guide <i class="+ topic/ph hi-d/i ">Flash Media Server Developer’s Guide</i>.</p>
     
     <p class="- topic/p "><b class="+ topic/ph hi-d/b ">REMARQUE :</b> testez l’événement <codeph class="+ topic/ph pr-d/codeph ">NetGroup.Neighbor.Connect</codeph> avant d’appeler cette méthode.</p> 
     
     </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetGroup/addHaveObjects()" class="- topic/link "><linktext class="- topic/linktext ">addHaveObjects()</linktext></link><link href="flash.net.xml#NetGroup/writeRequestedObject()" class="- topic/link "><linktext class="- topic/linktext ">writeRequestedObject()</linktext></link><link href="flash.events.xml#NetStatusEvent/code_NetGroup_Replication_Request" class="- topic/link "><linktext class="- topic/linktext ">flash.events.NetStatusEvent.info.code="NetGroup.Replication.Request"</linktext></link></related-links></apiOperation><apiOperation id="flash.net:NetGroup:post" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">post</apiName><shortdesc class="- topic/shortdesc ">
     Envoie un message à tous les membres d’un groupe.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">L’ID de message correspondant au message, s’il est publié, ou <codeph class="+ topic/ph pr-d/codeph ">null</codeph> en cas d’erreur. L’ID de message est le code hexadécimal de l’algorithme SHA256 d’octets bruts de la sérialisation du message.
     
     </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">message</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Object</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Message à envoyer à tous les autres membres du groupe.
     </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Envoie un message à tous les membres d’un groupe. Pour appeler cette méthode, la propriété <codeph class="+ topic/ph pr-d/codeph ">GroupSpecifier.postingEnabled</codeph> doit être définie sur <codeph class="+ topic/ph pr-d/codeph ">true</codeph> dans le groupspec transmis au constructeur de NetGroup. Pour plus d’informations, voir la section <xref href="http://www.adobe.com/go/learn_fms_post_en" class="- topic/xref ">"Post messages to a group"</xref> du guide <i class="+ topic/ph hi-d/i ">Flash Media Server Developer’s Guide</i>.
     
     <p class="- topic/p ">Tous les messages doivent être uniques. Il est impossible de transmettre un message identique à l’un des messages envoyés précédemment. Utilisez un numéro de séquence pour rendre les messages uniques.</p>
     
     <p class="- topic/p ">La remise des messages n’est pas préconisée. La remise des messages n’est pas garantie.</p>
     
     <p class="- topic/p ">Les messages sont sérialisés au format AMF. Le message peut être de l’un des types suivants : Object, int, Number ou String. Le message ne peut pas être un objet MovieClip.</p>
     
     <p class="- topic/p ">Cette méthode envoie un événement NetStatusEvent à l’écouteur d’événement de NetGroup avec <codeph class="+ topic/ph pr-d/codeph ">"NetGroup.Posting.Notify"</codeph> dans la propriété <codeph class="+ topic/ph pr-d/codeph ">info.code</codeph>. L’événement <codeph class="+ topic/ph pr-d/codeph ">"NetGroup.Posting.Notify"</codeph> est distribué à l’objet NetGroup sur le client et sur le serveur.</p>
     
     <p class="- topic/p "><b class="+ topic/ph hi-d/b ">REMARQUE :</b> testez l’événement <codeph class="+ topic/ph pr-d/codeph ">NetGroup.Neighbor.Connect</codeph> avant d’appeler cette méthode.</p> 
     
     </apiDesc><example conref="examples\NetGroupPostExample.as" class="- topic/example "> Il s’agit d’une application de dialogue en ligne simple qui utilise la mise en réseau homologue à homologue. L’application se connecte à Flash Media Server via RTMFP. Le serveur conserve les empreintes des applications clientes et gère le groupe d’homologues lors de la connexion des clients. Cependant, toutes les données sont envoyées entre les clients (homologues), elles ne sont pas renvoyées au serveur.
 <p class="- topic/p ">Lorsque vous exécutez l’application, vous pouvez indiquer n’importe quel nom de groupe dans le champ de saisie de texte. La classe GroupSpecifier utilise le nom (ainsi que toutes les propriétés que vous avez définies) pour créer une chaîne qui est le nom toujours unique du groupe. Pour connecter un autre client au groupe, ce client doit utiliser le même nom de groupe. Par exemple, si le client A utilise le nom de groupe « firstmesh », les autres clients qui souhaitent communiquer avec le client A doivent également utiliser le nom de groupe « firstmesh ». Si le client B utilise le nom de groupe « kite », il parviendra à se connecter, mais il créera un nouveau groupe et ne sera pas en mesure de communiquer avec le client A ou les membres du groupe « firstmesh ».</p>
 <p class="- topic/p ">Pour exécuter cet exemple, ajoutez un composant Button, Label, TextInput et TextArea à la bibliothèque dans Flash Pro.</p>
 
 <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">



package  {

    import flash.display.Sprite;
    import flash.events.TextEvent;
    import flash.events.MouseEvent;
    import flash.events.NetStatusEvent;
    import fl.events.ComponentEvent;
    import fl.controls.Label;
    import fl.controls.Button;
    import fl.controls.TextInput;
    import fl.controls.TextArea;
    import flash.text.TextFieldAutoSize;
    import flash.net.*;

    public class NetGroupPostExample extends Sprite{

        private var connectButton:Button;
        private var disconnectButton:Button;
        private var groupNameText:TextInput;
        private var userNameText:TextInput;
        private var chatText:TextInput;
        private var statusLog:TextArea;
        private var groupLabel:Label;
        private var userLabel:Label;

        private var netConnection:NetConnection = null;
        private var netGroup:NetGroup = null;
        private var sequenceNumber:uint = 0;
        private var connected:Boolean = false;
        private var joinedGroup:Boolean = false;

        private const SERVER:String = "rtmfp://fms.example.com/someapp";

        public function NetGroupPostExample() {
            DoUI();
        }

        // Writes messages to the TextArea.
        private function StatusMessage(msg:Object):void{
            statusLog.text += msg;
            statusLog.verticalScrollPosition = statusLog.textHeight;
            statusLog.validateNow();
        }

        // Handles all NetStatusEvents for the NetConnection and the NetGroup.
        // This code includes cases it doesn't handle so you can see the cases
        // and their info objects for learning purposes.
        private function NetStatusHandler(e:NetStatusEvent):void{
            StatusMessage(e.info.code + "\n");
            switch(e.info.code){
                case "NetConnection.Connect.Success":
                    connectButton.enabled = false;
                    disconnectButton.enabled = true;
                    OnConnect();
                    break;

                case "NetConnection.Connect.Closed":
                    OnDisconnect();
                    break;

                case "NetGroup.Connect.Success": // e.info.group
                    OnNetGroupConnect();
                    break;

                case "NetGroup.Connect.Rejected": // e.info.group
                case "NetGroup.Connect.Failed": // e.info.group
                    break;

                case "NetGroup.Posting.Notify": // e.info.message, e.info.messageID
                    OnPosting(e.info.message);
                    break;

                case "NetStream.MulticastStream.Reset":
                case "NetStream.Buffer.Full":
                    break;

                case "NetGroup.SendTo.Notify": // e.info.message, e.info.from, e.info.fromLocal
                case "NetGroup.LocalCoverage.Notify": //
                case "NetGroup.Neighbor.Connect": // e.info.neighbor
                case "NetGroup.Neighbor.Disconnect": // e.info.neighbor
                case "NetGroup.MulticastStream.PublishNotify": // e.info.name
                case "NetGroup.MulticastStream.UnpublishNotify": // e.info.name
                case "NetGroup.Replication.Fetch.SendNotify": // e.info.index
                case "NetGroup.Replication.Fetch.Failed": // e.info.index
                case "NetGroup.Replication.Fetch.Result": // e.info.index, e.info.object
                case "NetGroup.Replication.Request": // e.info.index, e.info.requestID
                default:
                    break;
                }
            }
        // Creates a NetConnection to Flash Media Server if the app isn't already connected
        // and if there's a group name in the TextInput field.
        private function DoConnect(e:MouseEvent):void{
            if(!connected &amp;&amp; (groupNameText.length > 0)){
                StatusMessage("Connecting to \"" + SERVER + "\" ...\n");
                netConnection = new NetConnection();
                netConnection.addEventListener(NetStatusEvent.NET_STATUS, NetStatusHandler);
                // To connect to Flash Media Server, pass the server name.
                netConnection.connect(SERVER);
            }
            else
            {
                StatusMessage("Enter a group name");
            }
        }

        // Called in the "NetConnection.Connect.Success" case in the NetStatusEvent handler.
        private function OnConnect():void{

            StatusMessage("Connected\n");
            connected = true;

            // Create a GroupSpecifier object to pass to the NetGroup constructor.
            // The GroupSpecifier determines the properties of the group
            var groupSpecifier:GroupSpecifier;
            groupSpecifier = new GroupSpecifier("aslrexample/" + groupNameText.text);
            groupSpecifier.postingEnabled = true;
            groupSpecifier.serverChannelEnabled = true;

            netGroup = new NetGroup(netConnection, groupSpecifier.groupspecWithAuthorizations());
            netGroup.addEventListener(NetStatusEvent.NET_STATUS, NetStatusHandler);

            StatusMessage("Join \"" + groupSpecifier.groupspecWithAuthorizations() + "\"\n");

        }

        private function OnNetGroupConnect():void{
            joinedGroup = true;
        }

        private function DoDisconnect(e:MouseEvent):void{
            if(netConnection){
                netConnection.close();
            }
        }

        private function OnDisconnect():void{
            StatusMessage("Disconnected\n");
            netConnection = null;
            netGroup = null;
            connected = false;
            joinedGroup = false;
            connectButton.enabled = true;
            disconnectButton.enabled = false;
        }

        private function ClearChatText():void{
            chatText.text = "";
        }

        // Called when you the chatText field has focus and you press Enter.
        private function DoPost(e:ComponentEvent):void{
            if(joinedGroup){
                var message:Object = new Object;
                message.user = userNameText.text;
                message.text = chatText.text;
                message.sequence = sequenceNumber++;
                message.sender = netConnection.nearID;

                netGroup.post(message);
                StatusMessage("==> " + chatText.text + "\n");
            } else {
                StatusMessage("Click Connect before sending a chat message");
            }
            ClearChatText();
        }

        private function OnPosting(message:Object):void{
            StatusMessage("&lt;" + message.user + "> " + message.text + "\n");
        }

        private function DoUI():void {

            groupLabel = new Label();
            groupLabel.move(20, 10);
            groupLabel.autoSize = TextFieldAutoSize.LEFT
            groupLabel.text = "Group name:"
            addChild(groupLabel);

            groupNameText = new TextInput();
            groupNameText.move(90, 10);
            groupNameText.text = "channel" + (int(Math.random() * 899) + 101);
            addChild(groupNameText);

            connectButton = new Button();
            connectButton.addEventListener(MouseEvent.CLICK, DoConnect);
            connectButton.move(205, 10);
            connectButton.label = "Connect";
            addChild(connectButton);

            disconnectButton = new Button();
            disconnectButton.addEventListener(MouseEvent.CLICK, DoDisconnect);
            disconnectButton.move(310, 10);
            disconnectButton.label = "Disconnect";
            disconnectButton.enabled = false;
            addChild(disconnectButton);

            statusLog = new TextArea();
            statusLog.move(30, 38);
            statusLog.width = 360;
            statusLog.height = 215;
            statusLog.editable = false;
            addChild(statusLog);

            userLabel = new Label();
            userLabel.move(20, 270);
            userLabel.autoSize = TextFieldAutoSize.LEFT
            userLabel.text = "User name:"
            addChild(userLabel);

            userNameText = new TextInput();
            userNameText.move(80, 270);
            userNameText.text = "user " + int(Math.random() * 65536);
            addChild(userNameText);

            chatText = new TextInput();
            chatText.addEventListener(ComponentEvent.ENTER, DoPost);
            chatText.move(185, 270);
            chatText.maxChars = 255;
            chatText.width = 215;
            addChild(chatText);

        }

        public function onPlayStatus(info:Object):void {}
        public function onMetaData(info:Object):void {}
        public function onCuePoint(info:Object):void {}
        public function onTextData(info:Object):void {}

    }

}




</codeblock></example></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.events.xml#NetStatusEvent/code_NetGroup_Posting_Notify" class="- topic/link "><linktext class="- topic/linktext ">flash.events.NetStatusEvent.info.code="NetGroup.Posting.Notify"</linktext></link></related-links></apiOperation><apiOperation id="flash.net:NetGroup:removeHaveObjects" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">removeHaveObjects</apiName><shortdesc class="- topic/shortdesc ">
     Supprime des objets depuis startIndex jusqu’à endIndex du jeu d’objets qui répondent aux demandes, comme l’indique ce nœud aux voisins.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Un nombre transmis à cette méthode est inférieur à 0 ou supérieur à 9007199254740992.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">RangeError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">RangeError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">startIndex</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Début de la plage d’index d’objets à supprimer du jeu Have.
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">endIndex</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Fin de la plage d’index d’objets à supprimer du jeu Have.
     
     </apiDesc></apiParam><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Supprime des objets du jeu d’objets qui répondent aux demandes, comme l’indique ce nœud aux voisins.
     
     </apiTipText></apiTipTexts></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Supprime des objets depuis <codeph class="+ topic/ph pr-d/codeph ">startIndex</codeph> jusqu’à <codeph class="+ topic/ph pr-d/codeph ">endIndex</codeph> du jeu d’objets qui répondent aux demandes, comme l’indique ce nœud aux voisins. Les index doivent être des nombres entiers compris entre 0 et 9 007 199 254 740 992.
     
     <p class="- topic/p ">Pour plus d’informations sur la réplication d’objets, voir la section <xref href="http://www.adobe.com/go/learn_fms_replicate_en" class="- topic/xref ">"Replicate an object within a group"</xref> du guide <i class="+ topic/ph hi-d/i ">Flash Media Server Developer’s Guide</i>.</p>
     
     <p class="- topic/p "><b class="+ topic/ph hi-d/b ">REMARQUE :</b> testez l’événement <codeph class="+ topic/ph pr-d/codeph ">NetGroup.Neighbor.Connect</codeph> avant d’appeler cette méthode.</p> 
     
     </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetGroup/addHaveObjects()" class="- topic/link "><linktext class="- topic/linktext ">addHaveObjects()</linktext></link></related-links></apiOperation><apiOperation id="flash.net:NetGroup:removeWantObjects" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">removeWantObjects</apiName><shortdesc class="- topic/shortdesc ">
     Supprime des objets depuis startIndex jusqu’à endIndex du jeu d’objets à extraire.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Un nombre transmis à cette méthode est inférieur à 0 ou supérieur à 9007199254740992.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">RangeError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">RangeError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">startIndex</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Début de la plages d’index d’objets à supprimer du jeu Want.
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">endIndex</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Fin de la plages d’index d’objets à supprimer du jeu Want.
     
     </apiDesc></apiParam><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Supprime des objets du jeu d’objets à extraire.
     
     </apiTipText></apiTipTexts></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Supprime des objets depuis <codeph class="+ topic/ph pr-d/codeph ">startIndex</codeph> jusqu’à <codeph class="+ topic/ph pr-d/codeph ">endIndex</codeph> du jeu d’objets à extraire. Les index doivent être des nombres entiers compris entre 0 et 9 007 199 254 740 992.
     
     <p class="- topic/p ">Pour plus d’informations sur la réplication d’objets, voir la section <xref href="http://www.adobe.com/go/learn_fms_replicate_en" class="- topic/xref ">"Replicate an object within a group"</xref> du guide <i class="+ topic/ph hi-d/i ">Flash Media Server Developer’s Guide</i>.</p>
     
     <p class="- topic/p "><b class="+ topic/ph hi-d/b ">REMARQUE :</b> testez l’événement <codeph class="+ topic/ph pr-d/codeph ">NetGroup.Neighbor.Connect</codeph> avant d’appeler cette méthode.</p> 
     
     </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetGroup/addWantObjects()" class="- topic/link "><linktext class="- topic/linktext ">addWantObjects()</linktext></link></related-links></apiOperation><apiOperation id="flash.net:NetGroup:sendToAllNeighbors" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">sendToAllNeighbors</apiName><shortdesc class="- topic/shortdesc ">
     Envoie un message à tous les voisins.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Propriété de la classe d’énumération NetGroupSendResult indiquant la réussite ou l’échec de l’envoi.
     
     </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">message</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Object</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Message à envoyer.
     </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Envoie un message à tous les voisins. Renvoie <codeph class="+ topic/ph pr-d/codeph ">NetGroupSendResult.SENT</codeph> si au moins un voisin a été sélectionné.
     
     <p class="- topic/p ">Pour plus d’informations sur l’acheminement des messages, voir la section <xref href="http://www.adobe.com/go/learn_fms_direct_routing_en" class="- topic/xref ">"Route messages directly to a peer"</xref> du guide <i class="+ topic/ph hi-d/i ">Flash Media Server Developer’s Guide</i>.</p>
     
     <p class="- topic/p ">Lorsqu’un nœud reçoit un message, un événement NetStatusEvent est envoyé à l’écouteur d’événement de NetGroup avec <codeph class="+ topic/ph pr-d/codeph ">NetGroup.SendTo.Notify</codeph> dans la propriété <codeph class="+ topic/ph pr-d/codeph ">code</codeph> de l’objet <codeph class="+ topic/ph pr-d/codeph ">info</codeph>. </p>
     
     <p class="- topic/p "><b class="+ topic/ph hi-d/b ">REMARQUE :</b> testez l’événement <codeph class="+ topic/ph pr-d/codeph ">NetGroup.Neighbor.Connect</codeph> avant d’appeler cette méthode.</p> 
     
     </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetGroup/sendToNeighbor()" class="- topic/link "><linktext class="- topic/linktext ">sendToNeighbor()</linktext></link><link href="flash.events.xml#NetStatusEvent/code_NetGroup_SendTo_Notify" class="- topic/link "><linktext class="- topic/linktext ">flash.events.NetStatusEvent.info.code="NetGroup.SendTo.Notify"</linktext></link><link href="flash.net.xml#NetGroupSendResult" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetGroupSendResult</linktext></link></related-links></apiOperation><apiOperation id="flash.net:NetGroup:sendToNearest" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">sendToNearest</apiName><shortdesc class="- topic/shortdesc ">
     Envoie un message au voisin (ou au nœud local) le plus proche de l’adresse de groupe spécifiée. </shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Propriété de la classe d’énumération NetGroupSendResult indiquant la réussite ou l’échec de l’envoi.
     
     </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">message</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Object</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Message à envoyer.
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">groupAddress</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Adresse de groupe vers laquelle diriger le message.
     </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Envoie un message au voisin (ou au nœud local) le plus proche de l’adresse de groupe spécifiée. Prend en compte les voisins de l’ensemble de l’anneau. Renvoie <codeph class="+ topic/ph pr-d/codeph ">NetGroupSendResult.SENT</codeph> si le message a été correctement envoyé vers sa destination. 
     
     <p class="- topic/p ">Pour plus d’informations sur l’acheminement des messages, voir la section <xref href="http://www.adobe.com/go/learn_fms_direct_routing_en" class="- topic/xref ">"Route messages directly to a peer"</xref> du guide <i class="+ topic/ph hi-d/i ">Flash Media Server Developer’s Guide</i>.</p>
     
     <p class="- topic/p ">Lorsqu’un nœud reçoit un message, un événement NetStatusEvent est envoyé à l’écouteur d’événement de NetGroup avec <codeph class="+ topic/ph pr-d/codeph ">NetGroup.SendTo.Notify</codeph> dans la propriété <codeph class="+ topic/ph pr-d/codeph ">code</codeph> de l’objet <codeph class="+ topic/ph pr-d/codeph ">info</codeph>. </p>
     
     <p class="- topic/p "><b class="+ topic/ph hi-d/b ">REMARQUE :</b> testez l’événement <codeph class="+ topic/ph pr-d/codeph ">NetGroup.Neighbor.Connect</codeph> avant d’appeler cette méthode.</p> 
     
     </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetGroup/convertPeerIDToGroupAddress()" class="- topic/link "><linktext class="- topic/linktext ">convertPeerIDToGroupAddress()</linktext></link><link href="flash.net.xml#NetGroup/receiveMode" class="- topic/link "><linktext class="- topic/linktext ">receiveMode</linktext></link><link href="flash.net.xml#NetGroupSendResult" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetGroupSendResult</linktext></link><link href="flash.events.xml#NetStatusEvent/code_NetGroup_SendTo_Notify" class="- topic/link "><linktext class="- topic/linktext ">flash.events.NetStatusEvent.info.code="NetGroup.SendTo.Notify"</linktext></link></related-links></apiOperation><apiOperation id="flash.net:NetGroup:sendToNeighbor" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">sendToNeighbor</apiName><shortdesc class="- topic/shortdesc ">
     Envoie un message au voisin spécifié par le paramètre sendMode.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Propriété de la classe d’énumération NetGroupSendResult indiquant la réussite ou l’échec de l’envoi.
     
     </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">message</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Object</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Message à envoyer.
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">sendMode</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Propriété de la classe d’énumération NetGroupSendMode spécifiant le voisin auquel envoyer le message.
     </apiDesc></apiParam><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Envoie un message au voisin spécifié par le paramètre sendMode.
     </apiTipText></apiTipTexts></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Envoie un message au voisin spécifié par le paramètre <codeph class="+ topic/ph pr-d/codeph ">sendMode</codeph>. Renvoie <codeph class="+ topic/ph pr-d/codeph ">NetGroupSendResult.SENT</codeph> si le message a été correctement envoyé vers la destination requise.
     
     <p class="- topic/p ">Pour plus d’informations sur l’acheminement des messages, voir la section <xref href="http://www.adobe.com/go/learn_fms_direct_routing_en" class="- topic/xref ">"Route messages directly to a peer"</xref> du guide <i class="+ topic/ph hi-d/i ">Flash Media Server Developer’s Guide</i>.</p>
     
     <p class="- topic/p ">Lorsqu’un nœud reçoit un message, un événement NetStatusEvent est envoyé à l’écouteur d’événement de NetGroup avec <codeph class="+ topic/ph pr-d/codeph ">NetGroup.SendTo.Notify</codeph> dans la propriété <codeph class="+ topic/ph pr-d/codeph ">code</codeph> de l’objet <codeph class="+ topic/ph pr-d/codeph ">info</codeph>. </p>
     
     <p class="- topic/p "><b class="+ topic/ph hi-d/b ">REMARQUE :</b> testez l’événement <codeph class="+ topic/ph pr-d/codeph ">NetGroup.Neighbor.Connect</codeph> avant d’appeler cette méthode.</p> 
     
     </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetGroup/sendToAllNeighbors()" class="- topic/link "><linktext class="- topic/linktext ">sendToAllNeighbors()</linktext></link><link href="flash.events.xml#NetStatusEvent/code_NetGroup_SendTo_Notify" class="- topic/link "><linktext class="- topic/linktext ">flash.events.NetStatusEvent.info.code="NetGroup.SendTo.Notify"</linktext></link><link href="flash.net.xml#NetGroupSendMode" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetGroupSendMode</linktext></link><link href="flash.net.xml#NetGroupSendResult" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetGroupSendResult</linktext></link></related-links></apiOperation><apiOperation id="flash.net:NetGroup:writeRequestedObject" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">writeRequestedObject</apiName><shortdesc class="- topic/shortdesc ">
     Répond à la requête dès qu’elle est reçue par NetStatusEvent NetGroup.Replication.Request pour un objet précédemment annoncé via la méthode addHaveObjects().</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">requestID</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Identifiant de la demande, tel qu’indiqué dans l’événement <codeph class="+ topic/ph pr-d/codeph ">NetGroup.Replication.Request</codeph>.
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">object</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Object</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Objet correspondant à l’index fourni dans l’événement <codeph class="+ topic/ph pr-d/codeph ">NetGroup.Replication.Request</codeph>.
     
     </apiDesc></apiParam><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Répond à la demande d’un objet précédemment annoncé.
     
     </apiTipText></apiTipTexts></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Répond à la demande dès sa réception par <codeph class="+ topic/ph pr-d/codeph ">NetGroup.Replication.Request</codeph> de NetStatusEvent pour un objet précédemment annoncé avec la méthode <codeph class="+ topic/ph pr-d/codeph ">addHaveObjects()</codeph>. L’<codeph class="+ topic/ph pr-d/codeph ">objet</codeph> peut être de l’un des types suivants : Object, int, Number et String. L’<codeph class="+ topic/ph pr-d/codeph ">objet</codeph> ne peut pas être un objet MovieClip.
     
     <p class="- topic/p ">Pour plus d’informations sur la réplication d’objets, voir la section <xref href="http://www.adobe.com/go/learn_fms_replicate_en" class="- topic/xref ">"Replicate an object within a group"</xref> du guide <i class="+ topic/ph hi-d/i ">Flash Media Server Developer’s Guide</i>.</p>
     
     <p class="- topic/p "><b class="+ topic/ph hi-d/b ">REMARQUE :</b> testez l’événement <codeph class="+ topic/ph pr-d/codeph ">NetGroup.Neighbor.Connect</codeph> avant d’appeler cette méthode.</p> 
     
     </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetGroup/addHaveObjects()" class="- topic/link "><linktext class="- topic/linktext ">addHaveObjects()</linktext></link><link href="flash.net.xml#NetGroup/denyRequestedObject()" class="- topic/link "><linktext class="- topic/linktext ">denyRequestedObject()</linktext></link><link href="flash.events.xml#NetStatusEvent/code_NetGroup_Replication_Request" class="- topic/link "><linktext class="- topic/linktext ">flash.events.NetStatusEvent.info.code="NetGroup.Replication.Request"</linktext></link></related-links></apiOperation><apiValue id="flash.net:NetGroup:estimatedMemberCount:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">estimatedMemberCount</apiName><shortdesc class="- topic/shortdesc ">
     Indique le nombre approximatif de membres du groupe, en fonction de la densité du voisinage et d’une distribution uniforme des adresses de groupe.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><internal>Q for dev: why would someone use this instead of neighborcount? --brs
     </internal></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Indique le nombre approximatif de membres du groupe.
     
     </apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Indique le nombre approximatif de membres du groupe, en fonction de la densité du voisinage et d’une distribution uniforme des adresses de groupe.
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetGroup/neighborCount" class="- topic/link "><linktext class="- topic/linktext ">neighborCount</linktext></link></related-links></apiValue><apiValue id="flash.net:NetGroup:info:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">info</apiName><shortdesc class="- topic/shortdesc ">
     Renvoie un objet NetGroupInfo dont les propriétés fournissent des statistiques de qualité de service (QoS) liées à la transmission de données RTMFP homologue à homologue de cet objet NetGroup.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.net:NetGroupInfo</apiValueClassifier><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Renvoie un objet NetGroupInfo dont les propriétés fournissent des statistiques de qualité de service.
     
     </apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Renvoie un objet NetGroupInfo dont les propriétés fournissent des statistiques de qualité de service (QoS) liées à la transmission de données RTMFP homologue à homologue de cet objet NetGroup.
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetGroupInfo" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetGroupInfo</linktext></link></related-links></apiValue><apiValue id="flash.net:NetGroup:localCoverageFrom:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">localCoverageFrom</apiName><shortdesc class="- topic/shortdesc ">
     Spécifie le début de la plage d’adresses de groupe pour laquelle ce nœud est « le plus proche » et dont il est responsable.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Spécifie le début de la plage d’adresses de groupe pour laquelle ce nœud est « le plus proche » et dont il est responsable. La plage est spécifiée dans le sens ascendant le long de l’anneau d’adresses de groupe mod 2<sup class="+ topic/ph hi-d/sup ">256</sup>.
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetGroup/localCoverageTo" class="- topic/link "><linktext class="- topic/linktext ">localCoverageTo</linktext></link><link href="flash.net.xml#NetGroup/receiveMode" class="- topic/link "><linktext class="- topic/linktext ">receiveMode</linktext></link><link href="flash.net.xml#NetGroup/sendToNearest()" class="- topic/link "><linktext class="- topic/linktext ">sendToNearest()</linktext></link><link href="flash.events.xml#NetStatusEvent/code_NetGroup_LocalCoverage_Notify" class="- topic/link "><linktext class="- topic/linktext ">flash.events.NetStatusEvent.info.code="NetGroup.LocalCoverage.Notify"</linktext></link></related-links></apiValue><apiValue id="flash.net:NetGroup:localCoverageTo:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">localCoverageTo</apiName><shortdesc class="- topic/shortdesc ">
     Spécifie la fin de la plage d’adresses de groupe pour laquelle ce nœud est « le plus proche » et dont il est responsable.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Spécifie la fin de la plage d’adresses de groupe pour laquelle ce nœud est « le plus proche » et dont il est responsable. La plage est spécifiée dans le sens ascendant le long de l’anneau d’adresses de groupe mod 2<sup class="+ topic/ph hi-d/sup ">256</sup>.
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetGroup/localCoverageFrom" class="- topic/link "><linktext class="- topic/linktext ">localCoverageFrom</linktext></link><link href="flash.net.xml#NetGroup/receiveMode" class="- topic/link "><linktext class="- topic/linktext ">receiveMode</linktext></link><link href="flash.net.xml#NetGroup/sendToNearest()" class="- topic/link "><linktext class="- topic/linktext ">sendToNearest()</linktext></link><link href="flash.events.xml#NetStatusEvent/code_NetGroup_LocalCoverage_Notify" class="- topic/link "><linktext class="- topic/linktext ">flash.events.NetStatusEvent.info.code="NetGroup.LocalCoverage.Notify"</linktext></link></related-links></apiValue><apiValue id="flash.net:NetGroup:neighborCount:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">neighborCount</apiName><shortdesc class="- topic/shortdesc ">
     Indique le nombre de membres du groupe auxquels ce nœud est directement connecté.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Indique le nombre de membres du groupe auxquels ce nœud est directement connecté.
     
     </apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Indique le nombre de membres du groupe auxquels ce nœud est directement connecté.
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetGroup/addNeighbor()" class="- topic/link "><linktext class="- topic/linktext ">addNeighbor()</linktext></link><link href="flash.net.xml#NetGroup/estimatedMemberCount" class="- topic/link "><linktext class="- topic/linktext ">estimatedMemberCount</linktext></link><link href="flash.events.xml#NetStatusEvent/code_NetGroup_Neighbor_Connect" class="- topic/link "><linktext class="- topic/linktext ">flash.events.NetStatusEvent.info.code="NetGroup.Neighbor.Connect"</linktext></link><link href="flash.events.xml#NetStatusEvent/code_NetGroup_Neighbor_Disconnect" class="- topic/link "><linktext class="- topic/linktext ">flash.events.NetStatusEvent.info.code="NetGroup.Neighbor.Disconnect"</linktext></link></related-links></apiValue><apiValue id="flash.net:NetGroup:receiveMode:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">receiveMode</apiName><shortdesc class="- topic/shortdesc ">
     Spécifie le mode de réception de routage de ce nœud comme étant l’une des valeurs de la classe d’énumération NetGroupReceiveMode.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Spécifie le mode de réception de routage de ce nœud comme étant l’une des valeurs de la classe d’énumération NetGroupReceiveMode.
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetGroup/localCoverageFrom" class="- topic/link "><linktext class="- topic/linktext ">localCoverageFrom</linktext></link><link href="flash.net.xml#NetGroup/localCoverageTo" class="- topic/link "><linktext class="- topic/linktext ">localCoverageTo</linktext></link><link href="flash.net.xml#NetGroup/sendToNearest()" class="- topic/link "><linktext class="- topic/linktext ">sendToNearest()</linktext></link><link href="flash.net.xml#NetGroupReceiveMode" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetGroupReceiveMode</linktext></link></related-links></apiValue><apiValue id="flash.net:NetGroup:replicationStrategy:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">replicationStrategy</apiName><shortdesc class="- topic/shortdesc ">
     Spécifie la stratégie d’extraction de la réplication d’objets. </shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Spécifie la stratégie d’extraction de la réplication d’objets. La valeur est l’une des valeurs énumérées dans la classe NetGroupReplicationStrategy.
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetGroupReplicationStrategy" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetGroupReplicationStrategy</linktext></link></related-links></apiValue></apiClassifier><apiOperation id="globalOperation:flash.net:getClassByAlias" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">getClassByAlias</apiName><shortdesc class="- topic/shortdesc ">
     Recherche une classe pour laquelle un alias a été enregistré par le biais d’un appel de la méthode registerClassAlias().</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><internal>includeExample examples\GetClassByAliasExample.as -noswf
      
      </internal></asCustoms></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">L’alias n’avait pas été enregistré.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ReferenceError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ReferenceError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Classe associée à l’alias indiqué. Si elle est introuvable, une exception est renvoyée.
     
     </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Class</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">aliasName</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Alias à rechercher.
     
     </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Recherche une classe pour laquelle un alias a été enregistré par le biais d’un appel de la méthode <codeph class="+ topic/ph pr-d/codeph ">registerClassAlias()</codeph>.
     <p class="- topic/p ">Cette méthode n’interagit pas avec la méthode <codeph class="+ topic/ph pr-d/codeph ">flash.utils.getDefinitionByName()</codeph>.</p>
     
     </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#/registerClassAlias()" class="- topic/link "><linktext class="- topic/linktext ">registerClassAlias()</linktext></link></related-links></apiOperation><apiOperation id="globalOperation:flash.net:navigateToURL" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">navigateToURL</apiName><shortdesc class="- topic/shortdesc ">
     Ouvre ou remplace une fenêtre dans l’application qui héberge le conteneur Flash Player (en règle générale, un navigateur).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><internal>throws IOError The "digest" and "importToSandbox" properties of URLRequest
     are not supported by URLLoader.navigate.
     
     </internal></asCustoms></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">La propriété <codeph class="+ topic/ph pr-d/codeph ">digest</codeph> de l’objet <codeph class="+ topic/ph pr-d/codeph ">request</codeph> n’est pas définie sur <codeph class="+ topic/ph pr-d/codeph ">null</codeph>. Vous devez définir la propriété <codeph class="+ topic/ph pr-d/codeph ">digest</codeph> d’un objet URLRequest uniquement lorsque vous appelez la méthode <codeph class="+ topic/ph pr-d/codeph ">URLLoader.load()</codeph> pour charger un fichier SWZ (composant de la plateforme Adobe).
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IOError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IOError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Dans Flash Player (et dans le contenu d’un sandbox non-applicatif dans Adobe AIR), cette erreur est renvoyée dans les cas suivants :
     <ul class="- topic/ul "><li class="- topic/li ">Les fichiers SWF non approuvés au niveau local ne peuvent pas communiquer avec Internet. Pour contourner ce problème, reclassifiez le fichier SWF en tant que fichier local avec accès au réseau ou en tant que fichier approuvé.</li><li class="- topic/li ">Une opération de navigation a tenté d’évaluer une pseudo-URL de script, mais le document la contenant (en règle générale, un document HTML dans un navigateur) se trouve sur un sandbox auquel vous n’avez pas accès. Pour éviter ce cas de figure, spécifiez <codeph class="+ topic/ph pr-d/codeph ">allowScriptAccess="always"</codeph> dans le document conteneur.</li><li class="- topic/li ">Vous ne pouvez pas naviguer dans les fenêtres spéciales <codeph class="+ topic/ph pr-d/codeph ">"_self"</codeph>, <codeph class="+ topic/ph pr-d/codeph ">"_top"</codeph> ou <codeph class="+ topic/ph pr-d/codeph ">"_parent"</codeph> si votre fichier SWF figure sur une page HTML qui règle <codeph class="+ topic/ph pr-d/codeph ">allowScriptAccess</codeph> sur <codeph class="+ topic/ph pr-d/codeph ">"none"</codeph> ou sur <codeph class="+ topic/ph pr-d/codeph ">"sameDomain"</codeph> alors que les fichiers HTML et SWF n’appartiennent pas au même domaine.</li><li class="- topic/li ">Vous ne pouvez pas naviguer, à partir d’un fichier SWF se trouvant sur le sandbox local avec système de fichiers, dans une fenêtre dont le nom n’est pas le nom par défaut.</li><li class="- topic/li ">Vous ne pouvez pas vous connecter aux ports généralement réservés. Pour obtenir une liste complète des ports bloqués, voir la rubrique « Restriction des API de réseau » dans le <i class="+ topic/ph hi-d/i ">Guide du développeur d’ActionScript 3.0</i>.</li></ul>
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">SecurityError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">SecurityError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Si la méthode n’est pas appelée en réponse à l’action d’un utilisateur, notamment à un événement de type souris ou pression de touche. Cette condition ne s’applique qu’au contenu dans Flash Player et au contenu d’un sandbox non-applicatif dans Adobe AIR.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">Error</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Error</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">request</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.net:URLRequest</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Objet URLRequest indiquant l’URL à atteindre.
     
     <p class="- topic/p "><ph class="- topic/ph ">Pour le contenu s’exécutant dans Adobe AIR, </ph>lors de l’utilisation de la fonction <codeph class="+ topic/ph pr-d/codeph ">navigateToURL()</codeph>, le moteur d’exécution traite un objet URLRequest qui utilise la méthode POST (objet dont la propriété <codeph class="+ topic/ph pr-d/codeph ">method</codeph> est définie sur <codeph class="+ topic/ph pr-d/codeph ">URLRequestMethod.POST</codeph>) comme s’il utilisait la méthode GET.</p>
     
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">window</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Fenêtre de navigateur ou cadre HTML dans lequel afficher le document désigné par le paramètre <codeph class="+ topic/ph pr-d/codeph ">request</codeph>. Vous pouvez entrer le nom d’une fenêtre spécifique ou utiliser l’une des valeurs suivantes :
     <ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">"_self"</codeph> indique le cadre qui est actif dans la fenêtre ouverte.</li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">"_blank"</codeph> indique une nouvelle fenêtre.</li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">"_parent"</codeph> indique le parent du cadre actif.</li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">"_top"</codeph> désigne le cadre de plus haut niveau dans la fenêtre ouverte.</li></ul>
     <p class="- topic/p ">Si vous ne renseignez pas la valeur de ce paramètre, une fenêtre vide est créée. Dans le lecteur autonome, vous pouvez spécifier une nouvelle fenêtre (<codeph class="+ topic/ph pr-d/codeph ">"_blank"</codeph>) ou une fenêtre nommée. Les autres valeurs ne sont pas applicables.</p>
     
     <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Remarque :</b> si le code d’un fichier SWF s’exécutant dans le sandbox local avec système de fichiers appelle la fonction <codeph class="+ topic/ph pr-d/codeph ">navigateToURL()</codeph> et spécifie un nom de fenêtre personnalisé pour le paramètre <codeph class="+ topic/ph pr-d/codeph ">window</codeph>, le nom de la fenêtre est transféré en tant que nom aléatoire. Le format du nom est <codeph class="+ topic/ph pr-d/codeph ">"_flashXXXXXXXX"</codeph>, où chaque X représente un chiffre hexadécimal aléatoire. Au sein de la même session (jusqu’à ce que vous fermiez la fenêtre du navigateur), si vous rappelez la fonction et spécifiez le même nom pour le paramètre <codeph class="+ topic/ph pr-d/codeph ">window</codeph>, la même chaîne aléatoire est utilisée.</p>
     
     </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     <ph class="- topic/ph ">Ouvre ou remplace une fenêtre dans l’application qui héberge le conteneur Flash Player (en règle générale, un navigateur). Dans Adobe AIR, la fonction ouvre une URL dans le navigateur Web par défaut du système</ph>
     
     
      <p class="- topic/p ">  <b class="+ topic/ph hi-d/b "><i class="+ topic/ph hi-d/i ">Remarque de sécurité importante </i></b> </p>
      <p class="- topic/p ">Les développeurs transmettent souvent des valeurs d’URL à la fonction <codeph class="+ topic/ph pr-d/codeph ">navigateToURL()</codeph> obtenues à partir de source externes, telles que FlashVars. Il est possible que des pirates informatiques tentent de manipuler ces sources externes, notamment par programmation croisée. Par conséquent, les développeurs doivent valider toutes les URL avant de les transmettre à la fonction. </p>
      
     <p class="- topic/p ">Il existe plusieurs façons de valider correctement les données d’URL selon l’utilisation des URL dans l’application. L’une des techniques de validation de données les plus courantes consiste à vérifier que l’URL appartient au modèle d’URL adéquat. Par exemple, l’autorisation non intentionnelle d’URL javascript: peut entraîner des manipulations par programmation croisée. Vous pouvez également vérifier que l’URL se trouve dans votre domaine afin de vous assurer que les personnes qui pratiquent l’hameçonnage ne puissent pas utiliser le fichier SWF comme redirecteur ouvert. Pour plus de sécurité, vous pouvez par ailleurs choisir de valider le chemin de l’URL et de vérifier que l’URL est conforme aux RFC.</p>
     
     <p class="- topic/p ">Le code suivant montre un exemple simple de validation de données : toute URL ne commençant pas par http:// ou https:// est rejetée et les URL sont analysées afin de vérifier qu’elles se trouvent dans votre nom de domaine. Il est possible que cet exemple ne soit pas valable pour toutes les applications Web ; vous devez donc évaluer s’il est nécessaire de procéder à des vérifications supplémentaires. </p>
     
      <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
     // AS3 Regular expression pattern match for URLs that start with http:// and https:// plus your domain name.
     function checkProtocol (flashVarURL:String):Boolean {
        // Get the domain name for the SWF if it is not known at compile time.
        // If the domain is known at compile time, then the following two lines can be replaced with a hard coded string.
        var my_lc:LocalConnection = new LocalConnection();
        var domainName:String = my_lc.domain;
        // Build the RegEx to test the URL.
        // This RegEx assumes that there is at least one "/" after the
        // domain. http://www.mysite.com will not match.
        var pattern:RegExp = new RegExp("^http[s]?\:\\/\\/([^\\/]+)\\/");
        var result:Object = pattern.exec(flashVarURL);
        if (result == null || result[1] != domainName || flashVarURL.length >= 4096) {
          return (false);
        }
        return (true);
     }  
     
      </codeblock>
     <p class="- topic/p ">Dans le cas d’un contenu <i class="+ topic/ph hi-d/i ">local</i> s’exécutant dans un navigateur, les appels à la méthode <codeph class="+ topic/ph pr-d/codeph ">navigateToURL()</codeph> qui spécifient un pseudo-protocole <codeph class="+ topic/ph pr-d/codeph ">"javascript:"</codeph> (via un objet <codeph class="+ topic/ph pr-d/codeph ">URLRequest</codeph> transmis en tant que premier paramètre) ne sont autorisés que si le fichier SWF et la page Web qui le contient (le cas échéant) se trouvent dans le sandbox de sécurité approuvé localement. Certains navigateurs ne prennent pas en charge l’utilisation du protocole javascript avec la méthode <codeph class="+ topic/ph pr-d/codeph ">navigateToURL()</codeph>. Envisagez plutôt d’utiliser la méthode <codeph class="+ topic/ph pr-d/codeph ">call()</codeph> de l’API <codeph class="+ topic/ph pr-d/codeph ">ExternalInterface</codeph> pour appeler les méthodes JavaScript dans la page HTML.</p>
     
      <p class="- topic/p ">Dans Flash Player et dans les sandbox non-applicatifs d’Adobe AIR, vous ne pouvez pas utiliser les ports habituellement réservés. Pour obtenir une liste complète des ports bloqués, voir la rubrique « Restriction des API de réseau » dans le <i class="+ topic/ph hi-d/i ">Guide du développeur d’ActionScript 3.0</i>.</p>
     
     <p class="- topic/p ">Dans Flash Player versions 10 et ultérieures s’exécutant dans un navigateur, il est possible que vous ne puissiez pas utiliser cette méthode par programmation pour ouvrir une fenêtre contextuelle. Certains navigateurs (et configurations de navigateur) peuvent bloquer les fenêtres contextuelles ; il n’est donc pas possible de garantir l’ouverture de toutes les fenêtres contextuelles. Toutefois, pour un résultat optimal, utilisez cette méthode pour ouvrir une fenêtre contextuelle uniquement dans le code qui s’exécute comme conséquence directe de l’action d’un utilisateur (par exemple, un événement de type clic de souris ou pression de touche).</p>
     
     <p class="- topic/p "> Dans Flash Player versions 10 et ultérieures, si vous utilisez un Content-Type en plusieurs parties (par exemple « multipart/form-data ») qui contient un chargement (indiqué par un paramètre « filename » dans un en-tête « content-disposition » au sein du corps POST), l’opération POST est soumise aux règles de sécurité appliquées aux chargements :</p>
     <ul class="- topic/ul "><li class="- topic/li ">L’opération POST doit être effectuée en réponse à l’action d’un utilisateur, comme un clic de souris ou la pression d’une touche.</li><li class="- topic/li ">Si l’opération POST se fait entre plusieurs domaines (la cible POST ne se trouve pas sur le même serveur que le fichier SWF qui envoie la demande POST), le serveur cible doit fournir un fichier de régulation d’URL qui permette l’accès interdomaines.</li></ul>
     <p class="- topic/p ">Par ailleurs, la syntaxe de tous les Content-Type en plusieurs parties doit être correcte (selon la norme RFC2046). Si la syntaxe s’avère incorrecte, l’opération POST est soumise aux règles de sécurité appliquées aux chargements.</p>
     
     
     
     <p class="- topic/p ">Dans AIR installé sur les plates-formes mobiles, les modèles d’URI sms: et tel: sont pris en charge. Sous Android, les modèles d’URI vipaccess:, connectpro: et market: sont pris en charge. La syntaxe de l’URL est soumise aux conventions de la plate-forme. Par exemple, sur Android, le modèle d’URI doit être en minuscules. Lorsque vous accédez à une URL à l’aide de l’un de ces modèles, le moteur d’exécution ouvre l’URL dans l’application par défaut pour la gérer le modèle. Ainsi, l’accès à <codeph class="+ topic/ph pr-d/codeph ">tel:+5555555555</codeph> ouvre le numéroteur téléphonique avec le numéro spécifié déjà saisi. Une autre application ou un autre utilitaire, par exemple un numéroteur téléphonique, doit être disponible pour traiter l’URL.</p>
     
     <p class="- topic/p ">Le code suivant explique comment appeler les applications VIP Access et Connect Pro sous Android :</p>
     
      <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
       //Invoke the VIP Access Application.
       navigateToURL(new URLRequest("vipaccess://com.verisign.mvip.main?action=securitycode"));
     
       //Invoke the Connect Pro Application.
       navigateToURL(new URLRequest("connectpro://"));
     
      </codeblock>
     
     </apiDesc><example conref="examples\NavigateToURLExample.as" class="- topic/example "> L’exemple suivant ouvre l’URL http://www.adobe.com dans une nouvelle fenêtre de navigateur et transmet au serveur Web des données relatives à une session utilisateur, capturées dans un objet URLVariables.
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
package {
    import flash.display.Sprite;
    import flash.net.navigateToURL;
    import flash.net.URLRequest;
    import flash.net.URLVariables;

    public class NavigateToURLExample extends Sprite {

        public function NavigateToURLExample() {
            var url:String = "http://www.adobe.com";
            var variables:URLVariables = new URLVariables();
            variables.exampleSessionId = new Date().getTime();
            variables.exampleUserLabel = "Your Name";
            var request:URLRequest = new URLRequest(url);
            request.data = variables;
            try {            
                navigateToURL(request);
            }
            catch (e:Error) {
                // handle error here
            }
        }
    }
}
</codeblock></example><example conref="examples\URLRequest_example.as" class="- topic/example "> L’exemple suivant indique comment ouvrir de nouvelles fenêtres de navigateur à partir de Flash Player à l’aide de la méthode navigateToURL(). Exemple fourni par <xref href="http://actionscriptexamples.com/2008/12/08/opening-urls-in-new-browser-windows-using-actionscript-30-and-actionscript-20/" scope="_mmexternal" class="- topic/xref ">ActionScriptExamples.com</xref>. 
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
// Requires
// - Button symbol on Stage (or a display object, such as a MovieClip) with instance name "buttonSymbol"
//
buttonSymbol.addEventListener(MouseEvent.CLICK, buttonSymbol_click);
 
function buttonSymbol_click(evt:MouseEvent):void {
    var req:URLRequest = new URLRequest("http://www.adobe.com/");
    navigateToURL(req, "_blank");
}
</codeblock></example><example conref="examples\NavigateToURL.tel.1.as" class="- topic/example "> L’exemple suivant illustre la syntaxe permettant d’activer le numéroteur téléphonique du périphérique avec un numéro spécifique.
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
var request:URLRequest = new URLRequest( "tel:+5555555555" );
navigateToURL( request );
</codeblock></example><example conref="examples\NavigateToURL.sms.1.as" class="- topic/example "> L’exemple suivant illustre la syntaxe permettant d’ouvrir l’application SMS du périphérique avec un destinataire spécifique.
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
var request:URLRequest = new URLRequest( "sms:+5555555555" );
navigateToURL( request );
</codeblock></example><example conref="examples\NavigateToURL.market.1.as" class="- topic/example "> L’exemple suivant illustre la syntaxe permettant d’ouvrir l’application d’Android Market. Le paramètre de recherche est défini pour trouver l’application Flash Player.
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
var request:URLRequest = new URLRequest( "market://search?q=pname:com.adobe.flashplayer" );
navigateToURL( request );
</codeblock></example></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.external.xml#ExternalInterface/call()" class="- topic/link "><linktext class="- topic/linktext ">flash.external.ExternalInterface.call()</linktext></link></related-links></apiOperation><apiOperation id="globalOperation:flash.net:registerClassAlias" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">registerClassAlias</apiName><shortdesc class="- topic/shortdesc ">
     Préserve la classe (type) d’un objet lors de son codage au format AMF (Action Message Format).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Indique si l’un ou l’autre des paramètres est réglé sur <codeph class="+ topic/ph pr-d/codeph ">null</codeph>.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">TypeError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">TypeError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">aliasName</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Alias à utiliser.
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">classObject</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Class</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Classe associée à l’alias indiqué.
     
     </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Préserve la classe (type) d’un objet lors de son codage au format AMF (Action Message Format). Lorsque vous codez un objet au format AMF, cette fonction enregistre l’alias de sa classe, ce qui vous permet de la récupérer lors du décodage de l’objet. Si le contexte d’encodage n’a pas enregistré d’alias pour la classe d’un objet, celui-ci est codé en tant qu’objet anonyme. De même, si l’alias n’est pas enregistré dans le contexte de décodage, un objet anonyme est créé au décodage.
     
     <p class="- topic/p ">Toutes les classes LocalConnection, ByteArray, SharedObject, NetConnection et NetStream codent les objets au format AMF.</p>
     
     <p class="- topic/p ">Il n’est pas nécessaire que les contextes utilisent une même classe pour un alias. Ils peuvent changer de classe intentionnellement, à condition que la classe de destination contienne tous les membres sérialisés par la classe source.</p>
     
     </apiDesc><example conref="examples\RegisterClassAliasExample.as" class="- topic/example "> Cet exemple utilise la fonction <codeph class="+ topic/ph pr-d/codeph ">registerClassAlias()</codeph> pour enregistrer un alias (<codeph class="+ topic/ph pr-d/codeph ">com.example.eg</codeph>) pour la classe ExampleClass. Un alias étant enregistré pour la classe, l’objet peut être désérialisé en tant qu’occurrence de la classe ExampleClass, et le code renvoie <codeph class="+ topic/ph pr-d/codeph ">true</codeph>. Si l’appel de <codeph class="+ topic/ph pr-d/codeph ">registerClassAlias()</codeph> était supprimé, le code renverrait <codeph class="+ topic/ph pr-d/codeph ">false</codeph>. 
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
package {
    import flash.display.Sprite;
    import flash.net.registerClassAlias;
    import flash.utils.ByteArray;

    public class RegisterClassAliasExample extends Sprite {
        public function RegisterClassAliasExample() {
            registerClassAlias("com.example.eg", ExampleClass);
            var eg1:ExampleClass = new ExampleClass();
            var ba:ByteArray = new ByteArray();
            ba.writeObject(eg1);
            ba.position = 0;
            var eg2:* = ba.readObject();
            trace(eg2 is ExampleClass); // true
        }
    }
}

class ExampleClass {}
</codeblock></example></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#ObjectEncoding" class="- topic/link "><linktext class="- topic/linktext ">Classe ObjectEncoding</linktext></link></related-links></apiOperation><apiOperation id="globalOperation:flash.net:sendToURL" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">sendToURL</apiName><shortdesc class="- topic/shortdesc ">
     Envoie une requête d’URL à un serveur, mais ne tient pas compte de la réponse.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><internal>throws IOError The "digest" and "importToSandbox" properties of URLRequest
     are not supported by URLLoader.send.
     
     </internal></asCustoms></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Les fichiers SWF locaux et non approuvés ne peuvent pas communiquer avec Internet. Pour contourner ce problème, reclassifiez le fichier SWF en tant que fichier local avec accès au réseau ou en tant que fichier approuvé.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">SecurityError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">SecurityError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Vous ne pouvez pas vous connecter aux ports généralement réservés. Pour obtenir une liste complète des ports bloqués, voir la rubrique « Restriction des API de réseau » dans le <i class="+ topic/ph hi-d/i ">Guide du développeur d’ActionScript 3.0</i>.
      
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">SecurityError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">SecurityError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">request</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.net:URLRequest</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Objet URLRequest indiquant l’URL à laquelle envoyer des données.
     </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Envoie une requête d’URL à un serveur, mais ne tient pas compte de la réponse.
     <p class="- topic/p ">Pour examiner la réponse du serveur, utilisez plutôt la méthode <codeph class="+ topic/ph pr-d/codeph ">URLLoader.load()</codeph>.</p>
     
     <p class="- topic/p ">Vous ne pouvez pas vous connecter aux ports généralement réservés. Pour obtenir une liste complète des ports bloqués, voir la rubrique « Restriction des API de réseau » dans le <i class="+ topic/ph hi-d/i ">Guide du développeur d’ActionScript 3.0</i>.</p>
     
     <p class="- topic/p ">Vous pouvez empêcher un fichier SWF d’utiliser cette méthode en définissant le paramètre <codeph class="+ topic/ph pr-d/codeph ">allowNetworking</codeph> des balises <codeph class="+ topic/ph pr-d/codeph ">object</codeph> et <codeph class="+ topic/ph pr-d/codeph ">embed</codeph> dans la page HTML qui comporte le contenu SWF.</p>
     
     <p class="- topic/p "> Dans Flash Player versions 10 et ultérieures, si vous utilisez un Content-Type en plusieurs parties (par exemple « multipart/form-data ») qui contient un chargement (indiqué par un paramètre « filename » dans un en-tête « content-disposition » au sein du corps POST), l’opération POST est soumise aux règles de sécurité appliquées aux chargements :</p>
     <ul class="- topic/ul "><li class="- topic/li ">L’opération POST doit être effectuée en réponse à l’action d’un utilisateur, comme un clic de souris ou la pression d’une touche.</li><li class="- topic/li ">Si l’opération POST se fait entre plusieurs domaines (la cible POST ne se trouve pas sur le même serveur que le fichier SWF qui envoie la demande POST), le serveur cible doit fournir un fichier de régulation d’URL qui permette l’accès interdomaines.</li></ul>
     <p class="- topic/p ">Par ailleurs, la syntaxe de tous les Content-Type en plusieurs parties doit être correcte (selon la norme RFC2046). Si la syntaxe s’avère incorrecte, l’opération POST est soumise aux règles de sécurité appliquées aux chargements.</p>
     
     <p class="- topic/p ">Pour plus d’informations concernant la sécurité, voir la rubrique du Pôle de développement Flash Player : <xref href="http://www.adobe.com/go/devnet_security_fr" scope="external" class="- topic/xref ">Sécurité</xref> (disponible en anglais uniquement).</p>
     
     </apiDesc><example conref="examples\SendToURLExample.as" class="- topic/example "> L’exemple suivant transmet des données relatives à une session utilisateur, capturées dans un objet URLVariables, à l’application qui se trouve à l’adresse http://www.yourDomain.com/application.jsp.
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
 package {
    import flash.display.Sprite;
    import flash.net.URLRequest;
    import flash.net.URLVariables;
    import flash.net.sendToURL;

    public class SendToURLExample extends Sprite {

        public function SendToURLExample() {
            var url:String = "http://www.yourDomain.com/application.jsp";
            var variables:URLVariables = new URLVariables();
            variables.sessionId = new Date().getTime();
            variables.userLabel = "Your Name";

            var request:URLRequest = new URLRequest(url);
            request.data = variables;
            trace("sendToURL: " + request.url + "?" + request.data);
            try {
                sendToURL(request);
            }
            catch (e:Error) {
                // handle error here
            }
        }
    }
}
</codeblock></example></apiOperationDetail></apiOperation><apiClassifier languages="" id="flash.net:NetGroupReceiveMode" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">NetGroupReceiveMode</apiName><shortdesc class="- topic/shortdesc ">
La classe NetGroupReceiveMode est une énumération des valeurs constantes utilisées pour la propriété receiveMode de la classe NetGroup.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Enumération des valeurs constantes utilisées pour la propriété receiveMode de la classe NetGroup.

</apiTipText></apiTipTexts><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
La classe NetGroupReceiveMode est une énumération des valeurs constantes utilisées pour la propriété <codeph class="+ topic/ph pr-d/codeph ">receiveMode</codeph> de la classe NetGroup.

</apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetGroup/receiveMode" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetGroup.receiveMode</linktext></link><link href="flash.net.xml#NetGroup/sendToNearest()" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetGroup.sendToNearest()</linktext></link></related-links><apiValue id="flash.net:NetGroupReceiveMode:EXACT" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">EXACT</apiName><shortdesc class="- topic/shortdesc "> 
    Indique que ce nœud prend en charge les messages locaux des voisins uniquement si l’adresse qu’utilise le voisin correspond exactement à l’adresse de ce nœud.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">exact</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
    Indique que ce nœud prend en charge les messages locaux des voisins uniquement si l’adresse qu’utilise le voisin correspond exactement à l’adresse de ce nœud. En d’autres termes, ce nœud se considère lui-même comme le nœud le plus proche de tout appel de la méthode <codeph class="+ topic/ph pr-d/codeph ">NetGroup.sendToNearest()</codeph> uniquement si le paramètre <codeph class="+ topic/ph pr-d/codeph ">groupAddress</codeph> transmis à <codeph class="+ topic/ph pr-d/codeph ">NetGroup.sendToNearest()</codeph> correspond à l’adresse de groupe de ce nœud. Cette valeur est le paramètre par défaut. 
    
    <p class="- topic/p ">Si vous souhaitez activer le comportement de routage direct, définissez cette valeur sur <codeph class="+ topic/ph pr-d/codeph ">NetGroupReceiveMode.NEAREST</codeph>. Lorsque cette valeur est ainsi définie, un nœud attend que sa connectivité se stabilise avant de participer au maillage de routage direct.</p>
    
    
    </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetGroup/sendToNearest()" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetGroup.sendToNearest()</linktext></link></related-links></apiValue><apiValue id="flash.net:NetGroupReceiveMode:NEAREST" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">NEAREST</apiName><shortdesc class="- topic/shortdesc "> 
    Indique que ce nœud prend en charge les messages locaux de voisins qui envoient des messages à des adresses de groupe ne correspondant pas exactement à cette adresse de nœud.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">nearest</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
    Indique que ce nœud prend en charge les messages locaux de voisins qui envoient des messages à des adresses de groupe ne correspondant pas exactement à cette adresse de nœud. Les messages sont reçus lorsque ce nœud est le plus proche parmi tous les voisins dont le mode de réception est défini sur <codeph class="+ topic/ph pr-d/codeph ">NetGroupReceiveMode.NEAREST</codeph>. La distance est mesurée entre les adresses sur l’anneau mod 2<sup class="+ topic/ph hi-d/sup ">256</sup>.
    
    </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetGroup/sendToNearest()" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetGroup.sendToNearest()</linktext></link></related-links></apiValue></apiClassifier><apiClassifier languages="" id="flash.net:Responder" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">Responder</apiName><shortdesc class="- topic/shortdesc ">
 La classe Responder fournit un objet utilisé dans NetConnection.call() pour gérer les valeurs renvoyées par le serveur selon la réussite ou l’échec de certaines opérations.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 La classe Responder fournit un objet utilisé dans <codeph class="+ topic/ph pr-d/codeph ">NetConnection.call()</codeph> pour gérer les valeurs renvoyées par le serveur selon la réussite ou l’échec de certaines opérations. Lors de l’utilisation de <codeph class="+ topic/ph pr-d/codeph ">NetConnection.call()</codeph>, il se peut que vous rencontriez une erreur d’opération réseau spécifique à l’opération en cours ou une erreur liée à l’état actuel de la connexion. Les erreurs d’opération ciblent l’objet Responder et non l’objet NetConnection pour faciliter le traitement des erreurs.
 
 
 </apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetConnection/call()" class="- topic/link "><linktext class="- topic/linktext ">NetConnection.call()</linktext></link></related-links><apiConstructor id="flash.net:Responder:Responder" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">Responder</apiName><shortdesc class="- topic/shortdesc ">
	 Crée un objet Responder.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">result</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Function</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Fonction invoquée si l’appel du serveur aboutit et renvoie un résultat.
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">status</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Function</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Fonction appelée si le serveur renvoie une erreur.
	 </apiDesc></apiParam></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Crée un objet Responder. Vous transmettez un objet Responder à la méthode <codeph class="+ topic/ph pr-d/codeph ">NetConnection.call()</codeph> pour gérer les valeurs renvoyées par le serveur. Vous pouvez transmettre la valeur <codeph class="+ topic/ph pr-d/codeph ">null</codeph> pour l’un et/ou l’autre des paramètres.
	 
	 </apiDesc></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier languages="" id="flash.net:URLRequestHeader" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">URLRequestHeader</apiName><shortdesc class="- topic/shortdesc ">
 Un objet URLRequestHeader encapsule un en-tête de requête HTTP unique et se compose d’une paire nom/valeur.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Un objet URLRequestHeader encapsule un en-tête de requête HTTP unique et se compose d’une paire nom/valeur. Les objets URLRequestHeader sont utilisés dans la propriété <codeph class="+ topic/ph pr-d/codeph ">requestHeaders</codeph> de la classe URLRequest.
 
 <p class="- topic/p ">Dans Adobe<sup class="+ topic/ph hi-d/sup ">®</sup> AIR<sup class="+ topic/ph hi-d/sup ">®</sup>, le contenu du sandbox de sécurité de l’application (par exemple, le contenu installé avec l’application AIR) peut utiliser n’importe quel en-tête de requête, sans qu’aucune erreur ne se produise. En revanche, dans le cas de contenu s’exécutant dans Adobe AIR et se trouvant dans un sandbox de sécurité différent <ph class="- topic/ph ">ou dans le cas de contenu s’exécutant dans Flash<sup class="+ topic/ph hi-d/sup ">®</sup> Player,</ph> l’utilisation de ces en-têtes de requête entraîne le renvoi d’une erreur d’exécution ; en outre, les termes restreints ne sont pas sensibles à la casse (par exemple, <codeph class="+ topic/ph pr-d/codeph ">Get</codeph>, <codeph class="+ topic/ph pr-d/codeph ">get</codeph> et <codeph class="+ topic/ph pr-d/codeph ">GET</codeph> ne sont pas tous autorisés) : </p>
 
 <p class="- topic/p ">Dans le cas de contenu s’exécutant dans Flash Player ou de contenu s’exécutant dans Adobe AIR hors du sandbox de sécurité de l’application, les en-têtes de requête suivants ne peuvent pas être utilisés et les termes restreints ne sont pas sensibles à la casse (par exemple, <codeph class="+ topic/ph pr-d/codeph ">Get</codeph>, <codeph class="+ topic/ph pr-d/codeph ">get</codeph> et <codeph class="+ topic/ph pr-d/codeph ">GET</codeph> ne sont pas tous autorisés). De même, les termes composés s’appliquent lorsqu’un caractère de soulignement est utilisé (par exemple, <codeph class="+ topic/ph pr-d/codeph ">Content-Length</codeph> et <codeph class="+ topic/ph pr-d/codeph ">Content_Length</codeph> ne sont pas autorisés tous les deux) : </p>
 
 <p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">Accept-Charset</codeph>, <codeph class="+ topic/ph pr-d/codeph ">Accept-Encoding</codeph>, <codeph class="+ topic/ph pr-d/codeph ">Accept-Ranges</codeph>, <codeph class="+ topic/ph pr-d/codeph ">Age</codeph>, <codeph class="+ topic/ph pr-d/codeph ">Allow</codeph>, <codeph class="+ topic/ph pr-d/codeph ">Allowed</codeph>, <codeph class="+ topic/ph pr-d/codeph ">Authorization</codeph>, <codeph class="+ topic/ph pr-d/codeph ">Charge-To</codeph>, <codeph class="+ topic/ph pr-d/codeph ">Connect</codeph>, <codeph class="+ topic/ph pr-d/codeph ">Connection</codeph>, <codeph class="+ topic/ph pr-d/codeph ">Content-Length</codeph>, <codeph class="+ topic/ph pr-d/codeph ">Content-Location</codeph>, <codeph class="+ topic/ph pr-d/codeph ">Content-Range</codeph>, <codeph class="+ topic/ph pr-d/codeph ">Cookie</codeph>, <codeph class="+ topic/ph pr-d/codeph ">Date</codeph>, <codeph class="+ topic/ph pr-d/codeph ">Delete</codeph>, <codeph class="+ topic/ph pr-d/codeph ">ETag</codeph>, <codeph class="+ topic/ph pr-d/codeph ">Expect</codeph>, <codeph class="+ topic/ph pr-d/codeph ">Get</codeph>, <codeph class="+ topic/ph pr-d/codeph ">Head</codeph>, <codeph class="+ topic/ph pr-d/codeph ">Host</codeph>, <codeph class="+ topic/ph pr-d/codeph ">If-Modified-Since</codeph>, <codeph class="+ topic/ph pr-d/codeph ">Keep-Alive</codeph>, <codeph class="+ topic/ph pr-d/codeph ">Last-Modified</codeph>, <codeph class="+ topic/ph pr-d/codeph ">Location</codeph>, <codeph class="+ topic/ph pr-d/codeph ">Max-Forwards</codeph>, <codeph class="+ topic/ph pr-d/codeph ">Options</codeph>, <codeph class="+ topic/ph pr-d/codeph ">Origin</codeph>, <codeph class="+ topic/ph pr-d/codeph ">Post</codeph>, <codeph class="+ topic/ph pr-d/codeph ">Proxy-Authenticate</codeph>, <codeph class="+ topic/ph pr-d/codeph ">Proxy-Authorization</codeph>, <codeph class="+ topic/ph pr-d/codeph ">Proxy-Connection</codeph>, <codeph class="+ topic/ph pr-d/codeph ">Public</codeph>, <codeph class="+ topic/ph pr-d/codeph ">Put</codeph>, <codeph class="+ topic/ph pr-d/codeph ">Range</codeph>, <codeph class="+ topic/ph pr-d/codeph ">Referer</codeph>, <codeph class="+ topic/ph pr-d/codeph ">Request-Range</codeph>, <codeph class="+ topic/ph pr-d/codeph ">Retry-After</codeph>, <codeph class="+ topic/ph pr-d/codeph ">Server</codeph>, <codeph class="+ topic/ph pr-d/codeph ">TE</codeph>, <codeph class="+ topic/ph pr-d/codeph ">Trace</codeph>, <codeph class="+ topic/ph pr-d/codeph ">Trailer</codeph>, <codeph class="+ topic/ph pr-d/codeph ">Transfer-Encoding</codeph>, <codeph class="+ topic/ph pr-d/codeph ">Upgrade</codeph>, <codeph class="+ topic/ph pr-d/codeph ">URI</codeph>, <codeph class="+ topic/ph pr-d/codeph ">User-Agent</codeph>, <codeph class="+ topic/ph pr-d/codeph ">Vary</codeph>, <codeph class="+ topic/ph pr-d/codeph ">Via</codeph>, <codeph class="+ topic/ph pr-d/codeph ">Warning</codeph>, <codeph class="+ topic/ph pr-d/codeph ">WWW-Authenticate</codeph>, <codeph class="+ topic/ph pr-d/codeph ">x-flash-version</codeph>.</p>
 
 <p class="- topic/p ">La longueur des objets URLRequestHeader est limitée. Si la longueur totale d’un objet URLRequestHeader (longueur de la propriété <codeph class="+ topic/ph pr-d/codeph ">name</codeph> et de la propriété <codeph class="+ topic/ph pr-d/codeph ">value</codeph>) ou d’un tableau d’objets URLRequestHeader utilisé dans la propriété <codeph class="+ topic/ph pr-d/codeph ">URLRequest.requestHeaders</codeph> est supérieure à la longueur prise en charge, une exception est renvoyée.</p>
 
 <p class="- topic/p ">Le contenu s’exécutant dans Adobe AIR définit l’en-tête <codeph class="+ topic/ph pr-d/codeph ">ACCEPT</codeph> de la façon suivante, à moins que vous ne spécifiez un paramètre pour l’en-tête <codeph class="+ topic/ph pr-d/codeph ">ACCEPT</codeph> dans la propriété <codeph class="+ topic/ph pr-d/codeph ">requestHeaders</codeph> de la classe URLRequest :</p>
 
 <codeph class="+ topic/ph pr-d/codeph ">text/xml, application/xml, application/xhtml+xml, text/html;q=0.9, text/plain;q=0.8, image/png, application/x-shockwave-flash, video/mp4;q=0.9, flv-application/octet-stream;q=0.8, video/x-flv;q=0.7, audio/mp4, ~~/~~;q=0.5</codeph>
 <p class="- topic/p ">Toutes les méthodes qui acceptent des paramètres URLRequest ne prennent pas en charge la propriété <codeph class="+ topic/ph pr-d/codeph ">requestHeaders</codeph> ; consultez la documentation de la méthode que vous appelez. Par exemple, les méthodes <codeph class="+ topic/ph pr-d/codeph ">FileReference.upload()</codeph> et <codeph class="+ topic/ph pr-d/codeph ">FileReference.download()</codeph> ne prennent pas en charge la propriété <codeph class="+ topic/ph pr-d/codeph ">URLRequest.requestHeaders</codeph>.</p>
 <p class="- topic/p ">Du fait des limites des navigateurs, les en-têtes de requête HTTP personnalisées ne sont prises en charge que pour les requêtes <codeph class="+ topic/ph pr-d/codeph ">POST</codeph>, pas pour les requêtes <codeph class="+ topic/ph pr-d/codeph ">GET</codeph>.</p>  
 
 </apiDesc><example conref="examples\URLRequestHeaderExample.as" class="- topic/example "> L’exemple suivant ajoute un seul en-tête de requête HTTP <codeph class="+ topic/ph pr-d/codeph ">header</codeph> au tableau de la propriété <codeph class="+ topic/ph pr-d/codeph ">requestHeaders</codeph>. L’en-tête indique que l’application doit transférer la requête au serveur d’origine, même si elle en possède une copie mise en cache.
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
package {
    import flash.display.Sprite;
    import flash.events.*;
    import flash.net.URLLoader;
    import flash.net.URLRequest;
    import flash.net.URLRequestHeader;
    import flash.net.URLRequestMethod;
    import flash.net.URLVariables;

    public class URLRequestHeaderExample extends Sprite {
        public function URLRequestHeaderExample() {
            var loader:URLLoader = new URLLoader();
            configureListeners(loader);

            var header:URLRequestHeader = new URLRequestHeader("pragma", "no-cache");
            var request:URLRequest = new URLRequest("http://www.[yourdomain].com/greeting.cfm");
            request.data = new URLVariables("name=John+Doe");
            request.method = URLRequestMethod.POST;
            request.requestHeaders.push(header);
            try {
                loader.load(request);
            } catch (error:Error) {
                trace("Unable to load requested document.");
            }
        }

        private function configureListeners(dispatcher:IEventDispatcher):void {
            dispatcher.addEventListener(Event.COMPLETE, completeHandler);
            dispatcher.addEventListener(Event.OPEN, openHandler);
            dispatcher.addEventListener(ProgressEvent.PROGRESS, progressHandler);
            dispatcher.addEventListener(SecurityErrorEvent.SECURITY_ERROR, securityErrorHandler);
            dispatcher.addEventListener(HTTPStatusEvent.HTTP_STATUS, httpStatusHandler);
            dispatcher.addEventListener(IOErrorEvent.IO_ERROR, ioErrorHandler);
        }

        private function completeHandler(event:Event):void {
            var loader:URLLoader = URLLoader(event.target);
            trace("completeHandler: " + loader.data);
        }

        private function openHandler(event:Event):void {
            trace("openHandler: " + event);
        }

        private function progressHandler(event:ProgressEvent):void {
            trace("progressHandler loaded:" + event.bytesLoaded + " total: " + event.bytesTotal);
        }

        private function securityErrorHandler(event:SecurityErrorEvent):void {
            trace("securityErrorHandler: " + event);
        }

        private function httpStatusHandler(event:HTTPStatusEvent):void {
            trace("httpStatusHandler: " + event);
        }

        private function ioErrorHandler(event:IOErrorEvent):void {
            trace("ioErrorHandler: " + event);
        }
    }
}
</codeblock></example></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.net.xml#URLRequest" class="- topic/link "><linktext class="- topic/linktext ">URLRequest</linktext></link><link href="flash.net.xml#URLLoader" class="- topic/link "><linktext class="- topic/linktext ">URLLoader</linktext></link></related-links><apiConstructor id="flash.net:URLRequestHeader:URLRequestHeader" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">URLRequestHeader</apiName><shortdesc class="- topic/shortdesc ">
	 Crée un objet URLRequestHeader qui encapsule un en-tête de requête HTTP unique.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">name</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData "/><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Nom d’en-tête de requête HTTP (<codeph class="+ topic/ph pr-d/codeph ">Content-Type</codeph> ou <codeph class="+ topic/ph pr-d/codeph ">SOAPAction</codeph>, par exemple).
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">value</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData "/><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Valeur associée à la propriété <codeph class="+ topic/ph pr-d/codeph ">name</codeph> (<codeph class="+ topic/ph pr-d/codeph ">text/plain</codeph>, par exemple).
	 </apiDesc></apiParam></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Crée un objet URLRequestHeader qui encapsule un en-tête de requête HTTP unique. Les objets URLRequestHeader sont utilisés dans la propriété <codeph class="+ topic/ph pr-d/codeph ">requestHeaders</codeph> de la classe URLRequest.
     
	 </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="flash.net:URLRequestHeader:name" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">name</apiName><shortdesc class="- topic/shortdesc ">
	 Nom d’en-tête de requête HTTP (tel que Contenu-Type ou SOAPAction).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Nom d’en-tête de requête HTTP (<codeph class="+ topic/ph pr-d/codeph ">Content-Type</codeph> ou <codeph class="+ topic/ph pr-d/codeph ">SOAPAction</codeph>, par exemple).
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:URLRequestHeader:value" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">value</apiName><shortdesc class="- topic/shortdesc ">
	 Valeur associée à la propriété name (telle que text/plain).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Valeur associée à la propriété <codeph class="+ topic/ph pr-d/codeph ">name</codeph> (<codeph class="+ topic/ph pr-d/codeph ">text/plain</codeph>, par exemple).
	 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.net:URLRequestMethod" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">URLRequestMethod</apiName><shortdesc class="- topic/shortdesc ">
 La classe URLRequestMethod fournit des valeurs qui spécifient si l’objet URLRequest doit utiliser la méthode POST ou GET pour envoyer des données à un serveur.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 La classe URLRequestMethod fournit des valeurs qui spécifient si l’objet URLRequest doit utiliser la méthode <codeph class="+ topic/ph pr-d/codeph ">POST</codeph> ou <codeph class="+ topic/ph pr-d/codeph ">GET</codeph> pour envoyer des données à un serveur.
 
 </apiDesc><example conref="examples\URLRequestMethodExample.as" class="- topic/example "> L’exemple suivant charge et affiche les données détectées dans un fichier texte local. Il assure également le suivi des informations de gestion des événements.
 
 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Remarque :</b> pour exécuter cet exemple, placez un fichier nommé example.txt dans le même répertoire que votre fichier SWF. Il doit s’agir d’un fichier de texte contenant simplement quelques mots ou lignes de texte.
 </p>
 <p class="- topic/p ">Le code de l’exemple effectue les opérations suivantes :</p>
 <ol class="- topic/ol "><li class="- topic/li ">La fonction constructeur crée une occurrence de URLLoader nommée <codeph class="+ topic/ph pr-d/codeph ">loader</codeph>.</li><li class="- topic/li ">L’objet <codeph class="+ topic/ph pr-d/codeph ">loader</codeph> est transmis à la méthode <codeph class="+ topic/ph pr-d/codeph ">configureListeners()</codeph>, qui ajoute des écouteurs à chacun des événements URLLoader pris en charge.</li><li class="- topic/li ">Une occurrence de URLRequest appelée <codeph class="+ topic/ph pr-d/codeph ">request</codeph> est créée. Elle représente le nom du fichier à charger.</li><li class="- topic/li ">La propriété <codeph class="+ topic/ph pr-d/codeph ">method</codeph> de la requête est définie sur <codeph class="+ topic/ph pr-d/codeph ">URLRequestMethod.POST</codeph>.</li><li class="- topic/li ">L’objet <codeph class="+ topic/ph pr-d/codeph ">request</codeph> est ensuite transmis à la méthode <codeph class="+ topic/ph pr-d/codeph ">loader.load()</codeph>, qui charge le fichier texte.</li><li class="- topic/li ">Lorsque l’URLLoader a terminé de chargé le fichier texte, l’événement <codeph class="+ topic/ph pr-d/codeph ">Event.COMPLETE</codeph> se produit et déclenche la méthode <codeph class="+ topic/ph pr-d/codeph ">completeHandler()</codeph>. La méthode <codeph class="+ topic/ph pr-d/codeph ">completeHandler()</codeph> recherche simplement la propriété <codeph class="+ topic/ph pr-d/codeph ">data</codeph>, qui représente le contenu du fichier.</li></ol>
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">


package {
    import flash.display.Sprite;
    import flash.events.*;
    import flash.net.*;

    public class URLRequestMethodExample extends Sprite {

        public function URLRequestMethodExample() {
            var loader:URLLoader = new URLLoader();
            configureListeners(loader);

            var request:URLRequest = new URLRequest("example.txt");
            
            request.method = URLRequestMethod.POST;
            loader.load(request);
        }

        private function configureListeners(dispatcher:IEventDispatcher):void {
            dispatcher.addEventListener(Event.COMPLETE, completeHandler);
            dispatcher.addEventListener(Event.OPEN, openHandler);
            dispatcher.addEventListener(ProgressEvent.PROGRESS, progressHandler);
            dispatcher.addEventListener(SecurityErrorEvent.SECURITY_ERROR, securityErrorHandler);
            dispatcher.addEventListener(HTTPStatusEvent.HTTP_STATUS, httpStatusHandler);
            dispatcher.addEventListener(IOErrorEvent.IO_ERROR, ioErrorHandler);
        }

        private function completeHandler(event:Event):void {
            var loader:URLLoader = URLLoader(event.target);
            trace("completeHandler: " + loader.data);
        }

        private function openHandler(event:Event):void {
            trace("openHandler: " + event);
        }

        private function progressHandler(event:ProgressEvent):void {
            trace("progressHandler loaded:" + event.bytesLoaded + " total: " + event.bytesTotal);
        }

        private function securityErrorHandler(event:SecurityErrorEvent):void {
            trace("securityErrorHandler: " + event);
        }

        private function httpStatusHandler(event:HTTPStatusEvent):void {
            trace("httpStatusHandler: " + event);
        }

        private function ioErrorHandler(event:IOErrorEvent):void {
            trace("ioErrorHandler: " + event);
        }
    }
}
</codeblock></example></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.net.xml#URLRequest" class="- topic/link "><linktext class="- topic/linktext ">URLRequest</linktext></link><link href="flash.net.xml#URLVariables" class="- topic/link "><linktext class="- topic/linktext ">URLVariables</linktext></link></related-links><apiValue id="flash.net:URLRequestMethod:DELETE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">DELETE</apiName><shortdesc class="- topic/shortdesc ">
	 Indique que l’objet URLRequest correspond à DELETE.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">DELETE</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Indique que l’objet URLRequest correspond à DELETE.
     </apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Indique que l’objet URLRequest correspond à <codeph class="+ topic/ph pr-d/codeph ">DELETE</codeph>.
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:URLRequestMethod:GET" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">GET</apiName><shortdesc class="- topic/shortdesc ">
	 Indique que l’objet URLRequest correspond à GET.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">GET</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Indique que l’objet URLRequest correspond à GET.
	 
	 </apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Indique que l’objet URLRequest correspond à <codeph class="+ topic/ph pr-d/codeph ">GET</codeph>.
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:URLRequestMethod:HEAD" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">HEAD</apiName><shortdesc class="- topic/shortdesc ">
	 Indique que l’objet URLRequest correspond à HEAD.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">HEAD</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Indique que l’objet URLRequest correspond à HEAD.
     </apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Indique que l’objet URLRequest correspond à <codeph class="+ topic/ph pr-d/codeph ">HEAD</codeph>.
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:URLRequestMethod:OPTIONS" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">OPTIONS</apiName><shortdesc class="- topic/shortdesc ">
	 Indique que l’objet URLRequest correspond à OPTIONS.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">OPTIONS</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Indique que l’objet URLRequest correspond à OPTIONS.
     </apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Indique que l’objet URLRequest correspond à <codeph class="+ topic/ph pr-d/codeph ">OPTIONS</codeph>.
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:URLRequestMethod:POST" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">POST</apiName><shortdesc class="- topic/shortdesc ">
	 Indique que l’objet URLRequest correspond à POST.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">POST</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Indique que l’objet URLRequest correspond à POST.
	 
	 </apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Indique que l’objet URLRequest correspond à <codeph class="+ topic/ph pr-d/codeph ">POST</codeph>.
	 
	 <p class="- topic/p "><i class="+ topic/ph hi-d/i ">Remarque :</i> <ph class="- topic/ph ">pour le contenu s’exécutant dans Adobe AIR, lors de</ph> l’utilisation de la fonction <codeph class="+ topic/ph pr-d/codeph ">navigateToURL()</codeph>, le moteur d’exécution traite un objet URLRequest qui utilise la méthode POST (objet dont la propriété <codeph class="+ topic/ph pr-d/codeph ">method</codeph> est définie sur <codeph class="+ topic/ph pr-d/codeph ">URLRequestMethod.POST</codeph>) comme s’il utilisait la méthode GET.</p>
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:URLRequestMethod:PUT" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">PUT</apiName><shortdesc class="- topic/shortdesc ">
	 Indique que l’objet URLRequest correspond à PUT.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">PUT</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Indique que l’objet URLRequest correspond à PUT.
     
     </apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Indique que l’objet URLRequest correspond à <codeph class="+ topic/ph pr-d/codeph ">PUT</codeph>.
     
     </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.net:FileReference" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">FileReference</apiName><shortdesc class="- topic/shortdesc ">
  La classe FileReference permet de charger et télécharger des fichiers entre l’ordinateur d’un utilisateur et un serveur.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">FileReference, FileReference.browse, FileReference.download, FileReference.create, browse, download, create
  </keyword></asCustoms></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:EventDispatcher</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
  La classe FileReference permet de charger et télécharger des fichiers entre l’ordinateur d’un utilisateur et un serveur. Une boîte de dialogue du système d’exploitation invite l’utilisateur à sélectionner un fichier pour le charger ou à choisir un emplacement pour le télécharger. Chaque objet FileReference fait référence à un seul fichier sur le disque dur de l’utilisateur et inclut des propriétés contenant des informations sur la taille, le type, le nom, la date de création, la date de modification et le type de créateur (Macintosh uniquement) du fichier. 
  
  <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Remarque :</b> dans Adobe AIR, la classe File, qui étend la classe FileReference, offre davantage de fonctionnalités et moins de restrictions de sécurité que la classe FileReference.</p>
  
  <p class="- topic/p ">Les occurrences de FileReference sont créées de diverses manières :</p>
  <ul class="- topic/ul "><li class="- topic/li ">Lorsque vous utilisez l’opérateur <codeph class="+ topic/ph pr-d/codeph ">new</codeph> avec le constructeur FileReference : <codeph class="+ topic/ph pr-d/codeph ">var myFileReference = new FileReference();</codeph></li><li class="- topic/li ">Lorsque vous appelez la méthode <codeph class="+ topic/ph pr-d/codeph ">FileReferenceList.browse()</codeph>, ce qui crée un tableau d’objets FileReference.</li></ul>
  
  <p class="- topic/p ">Pendant une opération de chargement, toutes les propriétés d’un objet FileReference sont renseignées par des appels des méthodes <codeph class="+ topic/ph pr-d/codeph ">FileReference.browse()</codeph> ou <codeph class="+ topic/ph pr-d/codeph ">FileReferenceList.browse()</codeph>. Pendant une opération de téléchargement, la propriété <codeph class="+ topic/ph pr-d/codeph ">name</codeph> est renseignée lors de la distribution de l’événement <codeph class="+ topic/ph pr-d/codeph ">select</codeph>. Toutes les autres propriétés sont renseignées lors de la distribution de l’événement <codeph class="+ topic/ph pr-d/codeph ">complete</codeph>.</p>
  
  <p class="- topic/p ">La méthode <codeph class="+ topic/ph pr-d/codeph ">browse()</codeph> ouvre une boîte de dialogue du système d’exploitation qui invite l’utilisateur à sélectionner un fichier en vue de le charger. La méthode <codeph class="+ topic/ph pr-d/codeph ">FileReference.browse()</codeph> permet à l’utilisateur de choisir un seul fichier ; la méthode <codeph class="+ topic/ph pr-d/codeph ">FileReferenceList.browse()</codeph> lui permet d’en sélectionner plusieurs. Lorsque l’appel de la méthode <codeph class="+ topic/ph pr-d/codeph ">browse()</codeph> a réussi, appelez la méthode <codeph class="+ topic/ph pr-d/codeph ">FileReference.upload()</codeph> pour charger un seul fichier à la fois. La méthode <codeph class="+ topic/ph pr-d/codeph ">FileReference.download()</codeph> invite l’utilisateur à sélectionner un emplacement pour enregistrer le fichier et initialise le téléchargement à partir d’une URL distante.</p>
  
  <p class="- topic/p ">Les classes FileReference et FileReferenceList ne vous permettent pas de définir un emplacement de fichier par défaut pour la boîte de dialogue générée par les méthodes <codeph class="+ topic/ph pr-d/codeph ">browse()</codeph> et <codeph class="+ topic/ph pr-d/codeph ">download()</codeph>. L’emplacement par défaut indiqué dans la boîte de dialogue est le dernier dossier parcouru, dans la mesure où il est possible de déterminer cet emplacement, ou le Bureau. Les classes ne vous permettent pas d’accéder aux fichiers transférés en lecture ou en écriture. Elles ne permettent pas au fichier SWF qui a initié le chargement ou le téléchargement d’accéder au fichier chargé ou à l’emplacement du fichier sur le disque de l’utilisateur.</p>
  
  <p class="- topic/p ">Par ailleurs, les classes FileReference et FileReferenceList ne proposent pas de méthode d’authentification. Pour les serveurs ayant besoin d’une authentification, vous pouvez télécharger des fichiers avec le plug-in de navigation de Flash<sup class="+ topic/ph hi-d/sup ">®</sup> Player, mais le chargement (sur tous les lecteurs) et le téléchargement (sur les lecteurs autonomes ou externes) échouent. Utilisez les écouteurs d’événement FileReference afin de déterminer si les opérations ont réussi, ou non, et pour traiter les erreurs.</p>
  
  <p class="- topic/p ">Dans le cas de contenus s’exécutant dans <ph class="- topic/ph ">Flash Player ou </ph>Adobe AIR hors du sandbox de sécurité de l’application, les opérations de chargement ou de téléchargement permettent d’accéder uniquement aux fichiers de leur propre domaine et de tous les domaines spécifiés par un fichier de régulation d’URL. Si le contenu qui initialise le chargement ou le téléchargement n’appartient pas au même domaine que le serveur de fichiers, placez un fichier de régulation dans ce dernier.</p>
  
  <p class="- topic/p ">Notez que lors de la publication dans Flash Player 10, les nouvelles fonctionnalités ajoutées au lecteur ne vous permettent d’exécuter qu’une seule opération à la fois : <codeph class="+ topic/ph pr-d/codeph ">FileReference.browse()</codeph>, <codeph class="+ topic/ph pr-d/codeph ">FileReference.upload()</codeph>, <codeph class="+ topic/ph pr-d/codeph ">FileReference.download()</codeph>, <codeph class="+ topic/ph pr-d/codeph ">FileReference.load()</codeph> ou <codeph class="+ topic/ph pr-d/codeph ">FileReference.save()</codeph>. Dans le cas contraire, Flash Player renvoie une erreur d’exécution (code 2174). Utilisez <codeph class="+ topic/ph pr-d/codeph ">FileReference.cancel()</codeph> pour arrêter une opération en cours. Cette restriction s’applique uniquement à Flash Player 10. Cette restriction sur l’exécution simultanée de plusieurs opérations ne s’applique pas aux versions précédentes de Flash Player.</p>
  
  <p class="- topic/p ">Pendant l’exécution des appels aux méthodes <codeph class="+ topic/ph pr-d/codeph ">FileReference.browse()</codeph>, <codeph class="+ topic/ph pr-d/codeph ">FileReferenceList.browse()</codeph> ou <codeph class="+ topic/ph pr-d/codeph ">FileReference.download()</codeph>, la lecture du fichier SWF s’interrompt dans les versions autonomes et externes de Flash Player et AIR pour Linux, et Mac OS X version 10.1 et antérieures.</p>
  
  <p class="- topic/p ">Flash Player envoie la requête HTTP <codeph class="+ topic/ph pr-d/codeph ">POST</codeph> suivante, par exemple, à un script côté serveur en l’absence de paramètres :
  </p>
  
  <pre xml:space="preserve" class="- topic/pre ">
  POST /handler.cfm HTTP/1.1 
  Accept: text/~~
  Content-Type: multipart/form-data; 
  boundary=----------Ij5ae0ae0KM7GI3KM7 
  User-Agent: Shockwave Flash 
  Host: www.example.com 
  Content-Length: 421 
  Connection: Keep-Alive 
  Cache-Control: no-cache
  
  ------------Ij5GI3GI3ei4GI3ei4KM7GI3KM7KM7
  Content-Disposition: form-data; name="Filename"
  
  MyFile.jpg
  ------------Ij5GI3GI3ei4GI3ei4KM7GI3KM7KM7
  Content-Disposition: form-data; name="Filedata"; filename="MyFile.jpg"
  Content-Type: application/octet-stream
  
  FileDataHere
  ------------Ij5GI3GI3ei4GI3ei4KM7GI3KM7KM7
  Content-Disposition: form-data; name="Upload"
  
  Submit Query
  ------------Ij5GI3GI3ei4GI3ei4KM7GI3KM7KM7--
  </pre>
  
  <p class="- topic/p ">Flash Player envoie la requête HTTP <codeph class="+ topic/ph pr-d/codeph ">POST</codeph> suivante si l’utilisateur spécifie les paramètres <codeph class="+ topic/ph pr-d/codeph ">api_sig</codeph>, <codeph class="+ topic/ph pr-d/codeph ">api_key</codeph> et <codeph class="+ topic/ph pr-d/codeph ">auth_token</codeph> :
  </p>
  
  <pre xml:space="preserve" class="- topic/pre ">
  POST /handler.cfm HTTP/1.1 
  Accept: text/~~
  Content-Type: multipart/form-data; 
  boundary=----------Ij5ae0ae0KM7GI3KM7 
  User-Agent: Shockwave Flash 
  Host: www.example.com 
  Content-Length: 421 
  Connection: Keep-Alive 
  Cache-Control: no-cache
  
  ------------Ij5GI3GI3ei4GI3ei4KM7GI3KM7KM7
  Content-Disposition: form-data; name="Filename"
  
  MyFile.jpg
  ------------Ij5GI3GI3ei4GI3ei4KM7GI3KM7KM7
  Content-Disposition: form-data; name="api_sig"
  
  XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
  ------------Ij5GI3GI3ei4GI3ei4KM7GI3KM7KM7
  Content-Disposition: form-data; name="api_key"
  
  XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
  ------------Ij5GI3GI3ei4GI3ei4KM7GI3KM7KM7
  Content-Disposition: form-data; name="auth_token"
  
  XXXXXXXXXXXXXXXXXXXXXX
  ------------Ij5GI3GI3ei4GI3ei4KM7GI3KM7KM7
  Content-Disposition: form-data; name="Filedata"; filename="MyFile.jpg"
  Content-Type: application/octet-stream
  
  FileDataHere
  ------------Ij5GI3GI3ei4GI3ei4KM7GI3KM7KM7
  Content-Disposition: form-data; name="Upload"
  
  Submit Query
  ------------Ij5GI3GI3ei4GI3ei4KM7GI3KM7KM7--
  </pre>
  </apiDesc><example conref="examples\FileReferenceExample.as" class="- topic/example "> L’exemple suivant affiche le format de données et l’état d’un fichier chargé à l’exécution.  
 <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Remarque :</b> pour exécuter cet exemple, modifiez la propriété uploadURL.url pour qu’elle pointe sur une URL réelle, au lieu de l’adresse fictive de l’exemple. L’URL doit pointer sur un fichier nommé <codeph class="+ topic/ph pr-d/codeph ">yourUploadHandlerScript.cfm</codeph> dans le répertoire Web racine de l’URL spécifiée. Selon votre configuration, vous aurez peut-être besoin de compiler le fichier SWF avec l’option Protection de lecture locale définie sur Accéder au réseau seulement ou de mettre à jour vos paramètres de sécurité Flash Player pour autoriser ce fichier à accéder au réseau.
 </p>
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
package {
    import flash.display.Sprite;
    import flash.events.*;
    import flash.net.FileFilter;
    import flash.net.FileReference;
    import flash.net.URLRequest;

    public class FileReferenceExample extends Sprite {
        private var uploadURL:URLRequest;
        private var file:FileReference;

        public function FileReferenceExample() {
            uploadURL = new URLRequest();
            uploadURL.url = "http://www.[yourDomain].com/yourUploadHandlerScript.cfm";
            file = new FileReference();
            configureListeners(file);
            file.browse(getTypes());
        }

        private function configureListeners(dispatcher:IEventDispatcher):void {
            dispatcher.addEventListener(Event.CANCEL, cancelHandler);
            dispatcher.addEventListener(Event.COMPLETE, completeHandler);
            dispatcher.addEventListener(HTTPStatusEvent.HTTP_STATUS, httpStatusHandler);
            dispatcher.addEventListener(IOErrorEvent.IO_ERROR, ioErrorHandler);
            dispatcher.addEventListener(Event.OPEN, openHandler);
            dispatcher.addEventListener(ProgressEvent.PROGRESS, progressHandler);
            dispatcher.addEventListener(SecurityErrorEvent.SECURITY_ERROR, securityErrorHandler);
            dispatcher.addEventListener(Event.SELECT, selectHandler);
            dispatcher.addEventListener(DataEvent.UPLOAD_COMPLETE_DATA,uploadCompleteDataHandler);
        }

        private function getTypes():Array {
            var allTypes:Array = new Array(getImageTypeFilter(), getTextTypeFilter());
            return allTypes;
        }

        private function getImageTypeFilter():FileFilter {
            return new FileFilter("Images (*.jpg, *.jpeg, *.gif, *.png)", "*.jpg;*.jpeg;*.gif;*.png");
        }

        private function getTextTypeFilter():FileFilter {
            return new FileFilter("Text Files (*.txt, *.rtf)", "*.txt;*.rtf");
        }

        private function cancelHandler(event:Event):void {
            trace("cancelHandler: " + event);
        }

        private function completeHandler(event:Event):void {
            trace("completeHandler: " + event);
        }

        private function uploadCompleteDataHandler(event:DataEvent):void {
            trace("uploadCompleteData: " + event);
        }

        private function httpStatusHandler(event:HTTPStatusEvent):void {
            trace("httpStatusHandler: " + event);
        }
        
        private function ioErrorHandler(event:IOErrorEvent):void {
            trace("ioErrorHandler: " + event);
        }

        private function openHandler(event:Event):void {
            trace("openHandler: " + event);
        }

        private function progressHandler(event:ProgressEvent):void {
            var file:FileReference = FileReference(event.target);
            trace("progressHandler name=" + file.name + " bytesLoaded=" + event.bytesLoaded + " bytesTotal=" + event.bytesTotal);
        }

        private function securityErrorHandler(event:SecurityErrorEvent):void {
            trace("securityErrorHandler: " + event);
        }

        private function selectHandler(event:Event):void {
            var file:FileReference = FileReference(event.target);
            trace("selectHandler: name=" + file.name + " URL=" + uploadURL.url);
            file.upload(uploadURL);
        }
    }
}
</codeblock></example></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.net.xml#FileReferenceList" class="- topic/link "><linktext class="- topic/linktext ">flash.net.FileReferenceList</linktext></link><link href="flash.filesystem.xml#File" class="- topic/link "><linktext class="- topic/linktext ">flash.filesystem.File</linktext></link></related-links><adobeApiEvent id="flash.net:FileReference_flash.events.DataEvent.UPLOAD_COMPLETE_DATA_uploadCompleteData" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">uploadCompleteData</apiName><shortdesc class="- topic/shortdesc ">
    Distribué après réception des données par le serveur suite à un chargement réussi.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9.0.28.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.DataEvent.UPLOAD_COMPLETE_DATA</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.DataEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Distribué après réception des données par le serveur suite à un chargement réussi. Cet événement n’est pas distribué si le serveur ne renvoie pas les données.
    </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flash.net:FileReference_flash.events.HTTPStatusEvent.HTTP_RESPONSE_STATUS_httpResponseStatus" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">httpResponseStatus</apiName><shortdesc class="- topic/shortdesc ">
     Distribué si un appel de la méthode upload() ou uploadUnencoded() tente d’accéder aux données via HTTP, et si Adobe AIR est capable de détecter et de renvoyer le code d’état de la requête.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.HTTPStatusEvent.HTTP_RESPONSE_STATUS</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.HTTPStatusEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Distribué si un appel de la méthode <codeph class="+ topic/ph pr-d/codeph ">upload()</codeph> ou <codeph class="+ topic/ph pr-d/codeph ">uploadUnencoded()</codeph> tente d’accéder aux données via HTTP, et si Adobe AIR est capable de détecter et de renvoyer le code d’état de la requête. 
     
     </apiDesc></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.net.xml#FileReference/upload()" class="- topic/link "><linktext class="- topic/linktext ">upload()</linktext></link><link href="flash.net.xml#FileReference/uploadUnencoded()" class="- topic/link "><linktext class="- topic/linktext ">uploadUnencoded()</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.net:FileReference_flash.events.HTTPStatusEvent.HTTP_STATUS_httpStatus" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">httpStatus</apiName><shortdesc class="- topic/shortdesc ">
     Distribué lorsqu’un chargement échoue et qu’il existe un code d’état HTTP décrivant l’échec. </shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.HTTPStatusEvent.HTTP_STATUS</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.HTTPStatusEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Distribué lorsqu’un chargement échoue et qu’il existe un code d’état HTTP décrivant l’échec. L’événement <codeph class="+ topic/ph pr-d/codeph ">httpStatus</codeph> est distribué et suivi de l’événement <codeph class="+ topic/ph pr-d/codeph ">ioError</codeph>.
     
     <p class="- topic/p ">L’événement <codeph class="+ topic/ph pr-d/codeph ">httpStatus</codeph> est uniquement distribué en cas d’échec d’un chargement. Dans le cas de contenu s’exécutant dans Flash Player, cet événement ne s’applique pas aux échecs de téléchargement. Si un téléchargement échoue en raison d’une erreur HTTP, l’erreur est signalée en tant qu’erreur d’E/S.</p>
     
     </apiDesc></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.net.xml#FileReference/upload()" class="- topic/link "><linktext class="- topic/linktext ">FileReference.upload()</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.net:FileReference_flash.events.Event.SELECT_select" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">select</apiName><shortdesc class="- topic/shortdesc ">
    Distribué lorsque l’utilisateur sélectionne un fichier à charger ou télécharger dans la ﻿﻿﻿boîte de dialogue de recherche de fichiers.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><helpid>
    </helpid></asCustoms></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.Event.SELECT</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.Event</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Distribué lorsque l’utilisateur sélectionne un fichier à charger ou télécharger dans la boîte de dialogue de recherche de fichiers (cette boîte de dialogue s’ouvre quand vous appelez la méthode <codeph class="+ topic/ph pr-d/codeph ">FileReference.browse()</codeph>, <codeph class="+ topic/ph pr-d/codeph ">FileReferenceList.browse()</codeph> ou <codeph class="+ topic/ph pr-d/codeph ">FileReference.download()</codeph>). Lorsque l’utilisateur sélectionne un fichier et confirme l’opération (par exemple, en cliquant sur OK), les propriétés de l’objet FileReference sont renseignées.
    
    <p class="- topic/p ">Dans le cas de contenu s’exécutant <ph class="- topic/ph ">dans Flash Player ou </ph>hors du sandbox de sécurité de l’application<ph class="- topic/ph "> dans le moteur d’exécution Adobe AIR</ph>, l’événement <codeph class="+ topic/ph pr-d/codeph ">select</codeph> fonctionne légèrement différemment selon la méthode qui l’appelle. Lorsque l’événement <codeph class="+ topic/ph pr-d/codeph ">select</codeph> est distribué après un appel à <codeph class="+ topic/ph pr-d/codeph ">browse()</codeph>, <ph class="- topic/ph ">Flash Player </ph>ou l’application AIR peut lire toutes les propriétés de l’objet FileReference, car le fichier choisi se trouve dans le système de fichiers local. Lorsque l’événement <codeph class="+ topic/ph pr-d/codeph ">select</codeph> se produit après un appel à <codeph class="+ topic/ph pr-d/codeph ">download()</codeph>, <ph class="- topic/ph ">Flash Player ou </ph>l’application AIR peut uniquement lire la propriété <codeph class="+ topic/ph pr-d/codeph ">name</codeph>, car le fichier n’a pas encore été téléchargé dans le système de fichiers local au moment où l’événement <codeph class="+ topic/ph pr-d/codeph ">select</codeph> se produit. Une fois le fichier téléchargé et l’événement <codeph class="+ topic/ph pr-d/codeph ">complete</codeph> distribué, <ph class="- topic/ph ">Flash Player ou </ph>l’application AIR peut lire toutes les autres propriétés de l’objet FileReference.</p>
    
    </apiDesc><example conref="examples\FileReference_event_select.as" class="- topic/example "> L’exemple suivant illustre l’utilisation de l’objet d’événement <codeph class="+ topic/ph pr-d/codeph ">select</codeph>. Pour exécuter cet exemple, modifiez la propriété <codeph class="+ topic/ph pr-d/codeph ">downloadURL.url</codeph> de sorte qu’elle pointe vers un domaine et un fichier réels, au lieu de l’adresse fictive http://www.[votreDomaine].com/SomeFile.pdf. Il se peut que vous deviez également compiler le fichier SWF en réglant Sécurité de lecture locale sur Accès au réseau uniquement ou mettre à jour les paramètres de sécurité de Flash Player de façon à permettre un accès réseau à ce fichier. Pour que cet exemple s’exécute à partir de votre bureau, un fichier crossdomain.xml doit également résider sur votre serveur. Si la fonction <codeph class="+ topic/ph pr-d/codeph ">ioErrorHandler()</codeph> est déclenchée, vous devrez probablement mettre à jour la définition de la propriété <codeph class="+ topic/ph pr-d/codeph ">uploadURL</codeph> avec une URL valide configurée pour recevoir les chargements.
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
 
package {
    import flash.display.Sprite;
    import flash.events.*;
    import flash.net.FileReference;
    import flash.net.URLRequest;

    public class FileReference_event_select extends Sprite {
        private var uploadURL:URLRequest;
        private var file:FileReference;

        public function FileReference_event_select() {
            uploadURL = new URLRequest();
            uploadURL.url = "http://www.[yourDomain].com/yourUploadHandlerScript.cfm";
            file = new FileReference();
            file.addEventListener(Event.SELECT, selectHandler);
            file.addEventListener(IOErrorEvent.IO_ERROR, ioErrorHandler);
            file.addEventListener(ProgressEvent.PROGRESS, progressHandler);
            file.addEventListener(Event.COMPLETE, completeHandler);
            file.browse();
        }

        private function selectHandler(event:Event):void {
            var file:FileReference = FileReference(event.target);
            trace("selectHandler: name=" + file.name + " URL=" + uploadURL.url);
            file.upload(uploadURL);
        }

        private function ioErrorHandler(event:IOErrorEvent):void {
            trace("ioErrorHandler: " + event);
        }

        private function progressHandler(event:ProgressEvent):void {
            var file:FileReference = FileReference(event.target);
            trace("progressHandler: name=" + file.name + " bytesLoaded=" + event.bytesLoaded + " bytesTotal=" + event.bytesTotal);
        }

        private function completeHandler(event:Event):void {
            trace("completeHandler: " + event);
        }
    }
}
</codeblock></example></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flash.net:FileReference_flash.events.SecurityErrorEvent.SECURITY_ERROR_securityError" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">securityError</apiName><shortdesc class="- topic/shortdesc ">
     Distribué lorsqu’un appel de la méthode FileReference.upload() ou FileReference.download() tente de charger un fichier sur un serveur ou d’extraire un fichier d’un serveur qui se trouve hors du sandbox de sécurité de l’appelant.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><helpid>
     
     </helpid></asCustoms></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.SecurityErrorEvent.SECURITY_ERROR</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.SecurityErrorEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Distribué lorsqu’un appel de la méthode <codeph class="+ topic/ph pr-d/codeph ">FileReference.upload()</codeph> ou <codeph class="+ topic/ph pr-d/codeph ">FileReference.download()</codeph> tente de charger un fichier sur un serveur ou d’extraire un fichier d’un serveur qui se trouve hors du sandbox de sécurité de l’appelant. En règle générale, la valeur de la propriété text qui décrit l’erreur spécifique qui s’est produite correspond à <codeph class="+ topic/ph pr-d/codeph ">securitySandboxError</codeph>. Le fichier SWF effectuant l’appel a peut-être tenté d’accéder à un fichier SWF hors de son domaine et sans l’autorisation nécessaire. Vous pouvez tenter de remédier à cette erreur à l’aide d’un fichier de régulation d’URL.
     
     <p class="- topic/p ">Dans Adobe AIR, le contenu du sandbox de sécurité de l’application n’est pas soumis à ces restrictions de sécurité.</p>
     
     <p class="- topic/p ">Dans Adobe AIR, le contenu du sandbox de sécurité de l’application n’est pas soumis à ces restrictions de sécurité.</p>
     
     </apiDesc></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.net.xml#FileReference/download()" class="- topic/link "><linktext class="- topic/linktext ">FileReference.download()</linktext></link><link href="flash.net.xml#FileReference/upload()" class="- topic/link "><linktext class="- topic/linktext ">FileReference.upload()</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.net:FileReference_flash.events.ProgressEvent.PROGRESS_progress" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">progress</apiName><shortdesc class="- topic/shortdesc ">
    Distribué régulièrement pendant l’opération de chargement ou de téléchargement.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><helpid>
    </helpid></asCustoms></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.ProgressEvent.PROGRESS</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.ProgressEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Distribué régulièrement pendant l’opération de chargement ou de téléchargement. L’événement <codeph class="+ topic/ph pr-d/codeph ">progress</codeph> est distribué pendant que Flash Player transmet des octets à un serveur, et il est déclenché régulièrement pendant la transmission, même si, au final, elle n’aboutit pas. Pour déterminer si la transmission du fichier est entièrement terminée, et à quel moment, écoutez l’événement <codeph class="+ topic/ph pr-d/codeph ">complete</codeph>.
    
    <p class="- topic/p ">Il arrive que des événements <codeph class="+ topic/ph pr-d/codeph ">progress</codeph> ne soient pas reçus. Lorsque le fichier transmis est très petit ou lorsque le chargement ou le téléchargement se déroule très rapidement, par exemple, il se peut qu’aucun événement <codeph class="+ topic/ph pr-d/codeph ">progress</codeph> ne soit distribué.</p>
    
    <p class="- topic/p ">La progression du chargement d’un fichier ne peut pas être déterminée sur les plateformes Macintosh avec version antérieure à OS X 10.3. L’événement <codeph class="+ topic/ph pr-d/codeph ">progress</codeph> est appelé au cours du chargement, mais la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">bytesLoaded</codeph> de l’événement progress correspond à -1, ce qui indique que la progression ne peut pas être identifiée.</p>
    
    </apiDesc><example conref="examples\FileReference_event_progress.as" class="- topic/example "> L’exemple suivant illustre l’utilisation de l’objet d’événement <codeph class="+ topic/ph pr-d/codeph ">progress</codeph>. Pour exécuter cet exemple, modifiez la propriété <codeph class="+ topic/ph pr-d/codeph ">downloadURL.url</codeph> pour qu’elle pointe sur une URL et un domaine existants, au lieu de l’adresse http://www fictive.[votreDomaine].com/SomeFile.pdf. Vous aurez peut-être besoin de compiler le fichier SWF avec l’option Protection de lecture locale définie sur Accéder au réseau seulement ou de mettre à jour vos paramètres de sécurité Flash Player pour autoriser ce fichier à accéder au réseau.
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">

package {
    import flash.display.Sprite;
    import flash.events.*;
    import flash.net.FileReference;
    import flash.net.URLRequest;

    public class FileReference_event_progress extends Sprite {
        private var downloadURL:URLRequest;
        private var fileName:String = "SomeFile.pdf";
        private var file:FileReference;

        public function FileReference_event_progress() {
            downloadURL = new URLRequest();
            downloadURL.url = "http://www.[yourDomain].com/SomeFile.pdf";
            file = new FileReference();
            file.addEventListener(ProgressEvent.PROGRESS, progressHandler);
            file.addEventListener(IOErrorEvent.IO_ERROR, ioErrorHandler);
            file.addEventListener(Event.COMPLETE, completeHandler);
            file.download(downloadURL, fileName);
        }

        private function progressHandler(event:ProgressEvent):void {
            var file:FileReference = FileReference(event.target);
            trace("progressHandler: name=" + file.name + " bytesLoaded=" + event.bytesLoaded + " bytesTotal=" + event.bytesTotal);
        }
        
        private function ioErrorHandler(event:IOErrorEvent):void {
            trace("ioErrorHandler: " + event);
        }
        
        private function completeHandler(event:Event):void {
            trace("completeHandler: " + event);
        }
    }
}
</codeblock></example></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.net.xml#FileReference/event:complete" class="- topic/link "><linktext class="- topic/linktext ">FileReference.complete</linktext></link><link href="flash.events.xml#ProgressEvent" class="- topic/link "><linktext class="- topic/linktext ">flash.events.ProgressEvent</linktext></link><link href="flash.net.xml#FileReference/download()" class="- topic/link "><linktext class="- topic/linktext ">FileReference.download()</linktext></link><link href="flash.net.xml#FileReference/upload()" class="- topic/link "><linktext class="- topic/linktext ">FileReference.upload()</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.net:FileReference_flash.events.Event.OPEN_open" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">open</apiName><shortdesc class="- topic/shortdesc ">
    Distribué au début d’une opération de chargement ou de téléchargement.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><maelexample>The following example shows the usage of the <code>open</code> event.
    It should be made clear that there is no way to actually track the progress
    of a download, just that it hasn't yet finished or failed.
    
    <listing version="2.0">
    import flash.net.FileReference;
    
    var listener:Object = new Object();
    
    listener.onOpen = function(file:FileReference):void {
      trace("onOpen: " + file.name);
    }
    
    var fileRef:FileReference = new FileReference();
    fileRef.addListener(listener);
    var url:String = "http://www.adobe.com/platform/whitepapers/platform_overview.pdf";
    fileRef.download(url, "FlashPlatform.pdf");
    </listing>
    </maelexample></asCustoms></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.Event.OPEN</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.Event</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Distribué au début d’une opération de chargement ou de téléchargement.
    
    
    </apiDesc><example conref="examples\FileReference_download.as" class="- topic/example "> L’exemple suivant illustre l’emploi de l’objet événement <codeph class="+ topic/ph pr-d/codeph ">download</codeph>. Pour exécuter cet exemple, modifiez la propriété <codeph class="+ topic/ph pr-d/codeph ">downloadURL.url</codeph> pour qu’elle pointe sur une URL et un domaine existants, au lieu de l’adresse http://www fictive.[votreDomaine].com/SomeFile.pdf. Vous aurez peut-être besoin de compiler le fichier SWF avec l’option Protection de lecture locale définie sur Accéder au réseau seulement ou de mettre à jour vos paramètres de sécurité Flash Player pour autoriser ce fichier à accéder au réseau.
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">

package {
    import flash.display.Sprite;
    import flash.events.*;
    import flash.net.FileReference;
    import flash.net.URLRequest;
    import flash.net.FileFilter;

    public class FileReference_download extends Sprite {
        private var downloadURL:URLRequest;
        private var fileName:String = "SomeFile.pdf";
        private var file:FileReference;

        public function FileReference_download() {
            downloadURL = new URLRequest();
            downloadURL.url = "http://www.[yourDomain].com/SomeFile.pdf";
            file = new FileReference();
            configureListeners(file);
            file.download(downloadURL, fileName);
        }

        private function configureListeners(dispatcher:IEventDispatcher):void {
            dispatcher.addEventListener(Event.CANCEL, cancelHandler);
            dispatcher.addEventListener(Event.COMPLETE, completeHandler);
            dispatcher.addEventListener(IOErrorEvent.IO_ERROR, ioErrorHandler);
            dispatcher.addEventListener(Event.OPEN, openHandler);
            dispatcher.addEventListener(ProgressEvent.PROGRESS, progressHandler);
            dispatcher.addEventListener(SecurityErrorEvent.SECURITY_ERROR, securityErrorHandler);
            dispatcher.addEventListener(Event.SELECT, selectHandler);
        }

        private function cancelHandler(event:Event):void {
            trace("cancelHandler: " + event);
        }

        private function completeHandler(event:Event):void {
            trace("completeHandler: " + event);
        }

        private function ioErrorHandler(event:IOErrorEvent):void {
            trace("ioErrorHandler: " + event);
        }

        private function openHandler(event:Event):void {
            trace("openHandler: " + event);
        }

        private function progressHandler(event:ProgressEvent):void {
            var file:FileReference = FileReference(event.target);
            trace("progressHandler name=" + file.name + " bytesLoaded=" + event.bytesLoaded + " bytesTotal=" + event.bytesTotal);
        }

        private function securityErrorHandler(event:SecurityErrorEvent):void {
            trace("securityErrorHandler: " + event);
        }

        private function selectHandler(event:Event):void {
            var file:FileReference = FileReference(event.target);
            trace("selectHandler: name=" + file.name + " URL=" + downloadURL.url);
        }
    }
}
</codeblock></example></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.net.xml#FileReference/download()" class="- topic/link "><linktext class="- topic/linktext ">FileReference.download()</linktext></link><link href="flash.net.xml#FileReference/upload()" class="- topic/link "><linktext class="- topic/linktext ">FileReference.upload()</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.net:FileReference_flash.events.IOErrorEvent.IO_ERROR_ioError" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">ioError</apiName><shortdesc class="- topic/shortdesc ">
    Distribué lors de l’échec de l’opération de chargement ou de téléchargement. </shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><maelexample>The following example shows the usage of the <code>ioError</code> event. 
    Note that for simplicity, none of the other event types are used in this
    example.
    
    <listing version="2.0">
    import flash.net.FileReference;
    
    var listener:Object = new Object();
    
    listener.onIOError = function(file:FileReference):void {
      trace("onIOError");
    }
    
    var fileRef:FileReference = new FileReference();
    fileRef.addListener(listener);
    fileRef.download("http://www.adobe.com/NonExistentFile.pdf", "NonExistentFile.pdf");
    
    </listing>
    
    </maelexample></asCustoms></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.IOErrorEvent.IO_ERROR</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.IOErrorEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Distribué lors de l’échec de l’opération de chargement ou de téléchargement. Un transfert de fichiers peut échouer pour l’une des raisons suivantes :
    
    <ul class="- topic/ul "><li class="- topic/li ">Une erreur d’entrée/sortie se produit lors de la lecture, l’écriture ou la transmission du fichier.</li><li class="- topic/li ">Le <ph class="- topic/ph ">fichier SWF</ph> tente de charger un fichier sur un serveur nécessitant une authentification (un nom d’utilisateur et un mot de passe, par exemple). Au cours du chargement, <ph class="- topic/ph ">Flash Player ou </ph>Adobe AIR ne permet pas aux utilisateurs d’entrer des mots de passe. Si un <ph class="- topic/ph ">fichier SWF</ph> tente de charger un fichier vers un serveur nécessitant une authentification, le chargement échoue.</li><li class="- topic/li ">Le <ph class="- topic/ph ">fichier SWF</ph> tente de télécharger un fichier à partir d’un serveur nécessitant une authentification, dans le lecteur autonome ou externe. Au cours du téléchargement, les lecteurs autonomes et externes ne permettent pas aux utilisateurs d’entrer des mots de passe. Si un <ph class="- topic/ph ">fichier SWF</ph> présent dans ces lecteurs tente de télécharger un fichier à partir d’un serveur nécessitant une authentification, le téléchargement échoue. <ph class="- topic/ph ">Le téléchargement de fichiers réussit uniquement via les lecteurs avec contrôle ActiveX et plug-in de navigation, ainsi que dans le moteur d’exécution Adobe AIR.</ph></li><li class="- topic/li ">La valeur transmise au paramètre <codeph class="+ topic/ph pr-d/codeph ">url</codeph> dans la méthode <codeph class="+ topic/ph pr-d/codeph ">upload()</codeph> contient un protocole non valide. Les protocoles valides sont HTTP et HTTPS.</li></ul>
    
    <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Important :</b> seules les applications s’exécutant dans un navigateur (via le module de navigation ou le contrôle ActiveX), ainsi que le contenu s’exécutant dans Adobe AIR, peuvent proposer une boîte de dialogue pour inviter l’utilisateur à s’authentifier avec un nom d’utilisateur et un mot de passe, et ceci uniquement pour les téléchargements. Le transfert de fichiers échoue si le chargement est effectué à l’aide du plug-in ou du contrôle ActiveX de Flash Player, ou si un chargement/téléchargement est effectué par le biais du lecteur autonome ou externe.</p>
    
    </apiDesc></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.net.xml#FileReference/download()" class="- topic/link "><linktext class="- topic/linktext ">FileReference.download()</linktext></link><link href="flash.net.xml#FileReference/upload()" class="- topic/link "><linktext class="- topic/linktext ">FileReference.upload()</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.net:FileReference_flash.events.Event.COMPLETE_complete" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">complete</apiName><shortdesc class="- topic/shortdesc ">
    Distribué à la fin d’un téléchargement ou lorsqu’un chargement génère le code d’état HTTP 200.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><maelexample>The following example shows usage of the <code>complete</code> event 
    listener. It should be made clear that there is no way to actually track the progress
    of a download, just that it hasn't yet finished or failed.
    
    <listing version="2.0">
    import flash.net.FileReference;
    
    var listener:Object = new Object();
    
    listener.onComplete = function(file:FileReference):void {
      trace("onComplete: " + file.name);
    }
    
    var fileRef:FileReference = new FileReference();
    fileRef.addListener(listener);
    var url:String = "http://www.adobe.com/platform/whitepapers/platform_overview.pdf";
    fileRef.download(url, "FlashPlatform.pdf");
    </listing>
    </maelexample></asCustoms></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.Event.COMPLETE</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.Event</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Distribué à la fin d’un téléchargement ou lorsqu’un chargement génère le code d’état HTTP 200. Dans le cas d’un téléchargement, cet événement est distribué lorsque <ph class="- topic/ph ">Flash Player ou </ph>Adobe AIR achève la totalité du téléchargement du fichier dans le disque. Dans le cas d’un chargement, cet événement est distribué lorsque <ph class="- topic/ph ">Flash Player ou </ph>Adobe AIR reçoit le code d’état HTTP 200 du serveur recevant la transmission.
    
    </apiDesc><example conref="examples\FileReference_event_complete.as" class="- topic/example "> L’exemple suivant illustre l’utilisation de l’objet d’événement <codeph class="+ topic/ph pr-d/codeph ">complete</codeph>. Pour exécuter cet exemple, modifiez la propriété <codeph class="+ topic/ph pr-d/codeph ">downloadURL.url</codeph> pour qu’elle pointe sur une URL et un domaine existants, au lieu de l’adresse http://www fictive.[votreDomaine].com/SomeFile.pdf. Vous aurez peut-être besoin de compiler le fichier SWF avec l’option Protection de lecture locale définie sur Accéder au réseau seulement ou de mettre à jour vos paramètres de sécurité Flash Player pour autoriser ce fichier à accéder au réseau.
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">

package {
    import flash.display.Sprite;
    import flash.events.*;
    import flash.net.FileReference;
    import flash.net.URLRequest;

    public class FileReference_event_complete extends Sprite {
        private var downloadURL:URLRequest;
        private var fileName:String = "SomeFile.pdf";
        private var file:FileReference;

        public function FileReference_event_complete() {
            downloadURL = new URLRequest();
            downloadURL.url = "http://www.[yourDomain].com/SomeFile.pdf";
            file = new FileReference();
            configureListeners(file);
            file.download(downloadURL, fileName);
        }

        private function configureListeners(dispatcher:IEventDispatcher):void {
            dispatcher.addEventListener(Event.CANCEL, cancelHandler);
            dispatcher.addEventListener(Event.COMPLETE, completeHandler);
            dispatcher.addEventListener(IOErrorEvent.IO_ERROR, ioErrorHandler);
            dispatcher.addEventListener(Event.OPEN, openHandler);
            dispatcher.addEventListener(ProgressEvent.PROGRESS, progressHandler);
            dispatcher.addEventListener(SecurityErrorEvent.SECURITY_ERROR, securityErrorHandler);
            dispatcher.addEventListener(Event.SELECT, selectHandler);
        }

        private function cancelHandler(event:Event):void {
            trace("cancelHandler: " + event);
        }

        private function completeHandler(event:Event):void {
            trace("completeHandler: " + event);
        }

        private function ioErrorHandler(event:IOErrorEvent):void {
            trace("ioErrorHandler: " + event);
        }

        private function openHandler(event:Event):void {
            trace("openHandler: " + event);
        }

        private function progressHandler(event:ProgressEvent):void {
            var file:FileReference = FileReference(event.target);
            trace("progressHandler name=" + file.name + " bytesLoaded=" + event.bytesLoaded + " bytesTotal=" + event.bytesTotal);
        }

        private function securityErrorHandler(event:SecurityErrorEvent):void {
            trace("securityErrorHandler: " + event);
        }

        private function selectHandler(event:Event):void {
            var file:FileReference = FileReference(event.target);
            trace("selectHandler: name=" + file.name + " URL=" + downloadURL.url);
        }
    }
}
</codeblock></example></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.net.xml#FileReference/download()" class="- topic/link "><linktext class="- topic/linktext ">FileReference.download()</linktext></link><link href="flash.net.xml#FileReference/upload()" class="- topic/link "><linktext class="- topic/linktext ">FileReference.upload()</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.net:FileReference_flash.events.Event.CANCEL_cancel" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">cancel</apiName><shortdesc class="- topic/shortdesc ">
    Distribué lorsqu’un chargement ou un téléchargement de fichiers est annulé par l’utilisateur via la boîte de dialogue de recherche de fichiers.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><maelexample>The following example traces a message if the user dismisses the file-
    browsing dialog box. This method
    is triggered only if the user selects Cancel or presses the escape key after
    the dialog box opens.
    
    <listing version="2.0">
    import flash.net.FileReference;
    
    var listener:Object = new Object();
    
    listener.onCancel = function(file:FileReference):void {
      trace("onCancel");
    }
    
    var fileRef:FileReference = new FileReference();
    fileRef.addListener(listener);
    var url:String = "http://www.adobe.com/platform/whitepapers/platform_overview.pdf";
    if(!fileRef.download(url, "FlashPlatform.pdf")) {
      trace("dialog box failed to open.");
    }
    </listing>
    
    </maelexample></asCustoms></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.Event.CANCEL</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.Event</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Distribué lorsqu’un chargement ou un téléchargement de fichiers est annulé par l’utilisateur via la boîte de dialogue de recherche de fichiers. Flash Player ne distribue pas cet événement si l’utilisateur annule un chargement ou un téléchargement selon un autre procédé (en fermant le navigateur ou en arrêtant l’application active).
    
    </apiDesc><example conref="examples\FileReference_event_cancel.as" class="- topic/example "> L’exemple suivant illustre l’utilisation de l’objet d’événement <codeph class="+ topic/ph pr-d/codeph ">download</codeph>. Pour exécuter cet exemple, modifiez la propriété <codeph class="+ topic/ph pr-d/codeph ">downloadURL.url</codeph> pour qu’elle pointe sur une URL et un domaine existants, au lieu de l’adresse http://www fictive.[votreDomaine].com/SomeFile.pdf. Vous aurez peut-être besoin de compiler le fichier SWF avec l’option Protection de lecture locale définie sur Accéder au réseau seulement ou de mettre à jour vos paramètres de sécurité Flash Player pour autoriser ce fichier à accéder au réseau.
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">

package {
    import flash.display.Sprite;
    import flash.events.*;
    import flash.net.FileReference;
    import flash.net.URLRequest;

    public class FileReference_event_cancel extends Sprite {
        private var downloadURL:URLRequest;
        private var fileName:String = "SomeFile.pdf";
        private var file:FileReference;

        public function FileReference_event_cancel() {
            downloadURL = new URLRequest();
            downloadURL.url = "http://www.[yourDomain].com/SomeFile.pdf";
            file = new FileReference();
            file.addEventListener(Event.CANCEL, cancelHandler);
            file.download(downloadURL, fileName);
        }
        private function cancelHandler(event:Event):void {
            trace("cancelHandler: " + event);
        }
    }
}
</codeblock></example></adobeApiEventDetail></adobeApiEvent><apiConstructor id="flash.net:FileReference:FileReference" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">FileReference</apiName><shortdesc class="- topic/shortdesc ">
    Crée un nouvel objet FileReference.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><maelexample>The following example creates a new <code>FileReference</code> object and 
    initiates the download of a pdf file.
    <listing version="2.0">
    import flash.net.FileReference;
    
    var listener:Object = new Object();
    listener.onComplete = function(file:FileReference) {
      trace("onComplete : " + file.name);
    }
    
    var url:String = "http://www.adobe.com/platform/whitepapers/platform_overview.pdf";
    var fileRef:FileReference = new FileReference();
    fileRef.addListener(listener);
    fileRef.download(url, "FlashPlatform.pdf");
    </listing>
    
    </maelexample></asCustoms></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Crée un nouvel objet FileReference. Quand il est renseigné, un objet FileReference représente un fichier du disque local de l’utilisateur.
    
    </apiDesc></apiConstructorDetail><related-links class="- topic/related-links "><link href="flash.net.xml#FileReference/browse()" class="- topic/link "><linktext class="- topic/linktext ">FileReference.browse()</linktext></link></related-links></apiConstructor><apiOperation id="flash.net:FileReference:browse" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">browse</apiName><shortdesc class="- topic/shortdesc ">
    Affiche une boîte de dialogue de recherche de fichiers dans laquelle l’utilisateur peut sélectionner un fichier à charger.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">browse, FileReference.browse
  </keyword></asCustoms></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Renvoyé dans les cas suivants : 1) Une autre session browse FileReference ou FileReferenceList est en cours. Il est impossible d’exécuter plusieurs sessions de recherche de fichiers simultanément. 2) Un paramètre du fichier mms.cfg de l’utilisateur bloque cette opération.
  
  </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IllegalOperationError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IllegalOperationError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Une exception est renvoyée si le tableau <codeph class="+ topic/ph pr-d/codeph ">typeFilter</codeph> contient des objets FileFilter incorrectement formatés. Pour plus d’informations sur le format correct des objets FileFilter, voir la classe <xref href="FileFilter.html" class="- topic/xref ">FileFilter</xref>.
  
    </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Si la méthode n’est pas appelée en réponse à l’action d’un utilisateur, notamment à un événement de type souris ou pression de touche.
    
    </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">Error</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Error</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Renvoie <codeph class="+ topic/ph pr-d/codeph ">true</codeph> si les paramètres sont valides et que la boîte de dialogue de recherche de fichiers est ouverte.  
  
  </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">typeFilter</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Array</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Tableau d’occurrences de FileFilter utilisé pour filtrer les fichiers qui s’affichent dans la boîte de dialogue. Si vous omettez ce paramètre, tous les fichiers s’affichent. Pour plus d’informations, voir la classe <xref href="FileFilter.html" class="- topic/xref ">FileFilter</xref>.
    
    
    </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Affiche une boîte de dialogue de recherche de fichiers dans laquelle l’utilisateur peut sélectionner un fichier à charger. La boîte de dialogue est spécifique au système d’exploitation de l’utilisateur. L’utilisateur peut sélectionner un fichier dans l’ordinateur local ou dans d’autres systèmes, via un chemin UNC sur Windows, par exemple.
    
    <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Remarque :</b> la classe File, disponible dans Adobe AIR, comprend des méthodes permettant d’accéder à des boîtes de dialogue de sélection de systèmes de fichiers plus spécifiques. Ces méthodes sont les suivantes : <codeph class="+ topic/ph pr-d/codeph ">File.browseForDirectory()</codeph>, <codeph class="+ topic/ph pr-d/codeph ">File.browseForOpen()</codeph>, <codeph class="+ topic/ph pr-d/codeph ">File.browseForOpenMultiple()</codeph>et <codeph class="+ topic/ph pr-d/codeph ">File.browseForSave()</codeph>.</p>
    
    <p class="- topic/p ">Lorsque vous appelez cette méthode et que l’utilisateur réussit à sélectionner un fichier, les propriétés de l’objet FileReference sont renseignées par les propriétés de ce fichier. Par la suite, à chaque appel de la méthode <codeph class="+ topic/ph pr-d/codeph ">FileReference.browse()</codeph>, les propriétés de l’objet FileReference sont réinitialisées en fonction du fichier choisi par l’utilisateur dans la boîte de dialogue. Une seule session <codeph class="+ topic/ph pr-d/codeph ">browse()</codeph> ou <codeph class="+ topic/ph pr-d/codeph ">download()</codeph> peut être effectuée à la fois (car une seule boîte de dialogue peut être appelée à la fois).</p>
    
    <p class="- topic/p ">Le paramètre <codeph class="+ topic/ph pr-d/codeph ">typeFilter</codeph> vous permet de déterminer les fichiers répertoriés dans la boîte de dialogue.</p>
    
    <p class="- topic/p ">Dans Flash Player 10 et Flash Player 9 Mise à jour 5, l’appel de cette méthode aboutit uniquement en réponse à un événement utilisateur (par exemple, un événement de type clic de souris ou pression de touche). Dans les autres cas, Flash Player renvoie une exception Error à l’appel de cette méthode.</p>
    
    <p class="- topic/p ">Notez que lors de la publication dans Flash Player 10, les nouvelles fonctionnalités ajoutées au lecteur ne vous permettent d’exécuter qu’une seule opération à la fois : <codeph class="+ topic/ph pr-d/codeph ">FileReference.browse()</codeph>, <codeph class="+ topic/ph pr-d/codeph ">FileReference.upload()</codeph>, <codeph class="+ topic/ph pr-d/codeph ">FileReference.download()</codeph>, <codeph class="+ topic/ph pr-d/codeph ">FileReference.load()</codeph> ou <codeph class="+ topic/ph pr-d/codeph ">FileReference.save()</codeph>. Dans le cas contraire, Flash Player renvoie une erreur d’exécution (code 2174). Utilisez <codeph class="+ topic/ph pr-d/codeph ">FileReference.cancel()</codeph> pour arrêter une opération en cours. Cette restriction s’applique uniquement à Flash Player 10. Cette restriction sur l’exécution simultanée de plusieurs opérations ne s’applique pas aux versions précédentes de Flash Player.</p> 
 	
	<p class="- topic/p ">Dans Adobe AIR, la boîte de dialogue de recherche de fichiers n’est pas toujours affichée devant les fenêtres appartenant à une autre fenêtre (fenêtres dont la propriété <codeph class="+ topic/ph pr-d/codeph ">owner</codeph> n’est pas nulle). Pour éviter des problèmes de classement de fenêtres, masquez les fenêtres possédées avant d’appeler cette méthode.</p>
	
  	</apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#FileReferenceList/event:select" class="- topic/link "><linktext class="- topic/linktext ">select, événement</linktext></link><link href="flash.net.xml#FileReference/event:cancel" class="- topic/link "><linktext class="- topic/linktext ">cancel, événement</linktext></link><link href="flash.net.xml#FileReference/download()" class="- topic/link "><linktext class="- topic/linktext ">FileReference.download()</linktext></link><link href="flash.net.xml#FileReferenceList/browse()" class="- topic/link "><linktext class="- topic/linktext ">FileReferenceList.browse()</linktext></link><link href="" invalidHref="flash.filesystem.File.browseForDirectory().xml" class="- topic/link "><linktext class="- topic/linktext ">File.browseForDirectory()</linktext></link><link href="" invalidHref="flash.filesystem.File.browseForOpen().xml" class="- topic/link "><linktext class="- topic/linktext ">File.browseForOpen()</linktext></link><link href="" invalidHref="flash.filesystem.File.browseForOpenMultiple().xml" class="- topic/link "><linktext class="- topic/linktext ">File.browseForOpenMultiple()</linktext></link><link href="" invalidHref="flash.filesystem.File.browseForSave().xml" class="- topic/link "><linktext class="- topic/linktext ">File.browseForSave()</linktext></link></related-links><adobeApiEvent id="flash.net:FileReference:browse_select" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">select</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:Event</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Distribué lorsque l’utilisateur sélectionne un élément dans la boîte de dialogue de recherche de fichiers.
  </apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">Distribué lorsque l’utilisateur sélectionne un élément dans la boîte de dialogue de recherche de fichiers.</shortdesc></adobeApiEvent><adobeApiEvent id="flash.net:FileReference:browse_cancel" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">cancel</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:Event</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Distribué lorsque l’utilisateur annule le chargement du fichier dans la fenêtre de recherche de fichiers.
  
  </apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">Distribué lorsque l’utilisateur annule le chargement du fichier dans la fenêtre de recherche de fichiers.</shortdesc></adobeApiEvent></apiOperation><apiOperation id="flash.net:FileReference:cancel" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">cancel</apiName><shortdesc class="- topic/shortdesc ">
  Annule une opération de chargement ou de téléchargement en cours sur cet objet FileReference.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">cancel, FileReference.cancel
  </keyword></asCustoms></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Annule le chargement ou le téléchargement en cours.
  </apiTipText></apiTipTexts></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
  Annule une opération de chargement ou de téléchargement en cours sur cet objet FileReference. L’appel de cette méthode n’entraîne pas la distribution de l’événement <codeph class="+ topic/ph pr-d/codeph ">cancel</codeph>. Celui-ci n’est distribué que si l’utilisateur annule l’opération en fermant la boîte de dialogue de sélection des fichiers à charger ou télécharger.
  
    </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.net:FileReference:download" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">download</apiName><shortdesc class="- topic/shortdesc ">
    Affiche une boîte de dialogue permettant à l’utilisateur de télécharger un fichier à partir d’un serveur distant.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Renvoyé dans les cas suivants : 1) Une autre session browse est en cours. Il est impossible d’exécuter plusieurs sessions de recherche de fichiers simultanément. 2) La valeur transmise à <codeph class="+ topic/ph pr-d/codeph ">request</codeph> ne contient ni un chemin ni un protocole valide. 3) Le nom de fichier à télécharger contient des caractères interdits. 4) Un paramètre du fichier mms.cfg de l’utilisateur bloque cette opération.
    
        </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IllegalOperationError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IllegalOperationError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Tout contenu non approuvé au niveau local ne peut pas communiquer avec Internet. Pour contourner cette restriction, reclassifiez le fichier SWF en tant que fichier local avec accès au réseau ou en tant que fichier approuvé. Cette exception est renvoyée, accompagnée d’un message indiquant le nom de fichier et l’URL qui ne sont pas accessibles en raison des restrictions relatives à la sécurité des fichiers locaux.
    
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">SecurityError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">SecurityError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Vous ne pouvez pas vous connecter aux ports généralement réservés. Pour obtenir une liste complète des ports bloqués, voir la rubrique « Restriction des API de réseau » dans le <i class="+ topic/ph hi-d/i ">Guide du développeur d’ActionScript 3.0</i>.
    
    </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">SecurityError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">SecurityError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Si <codeph class="+ topic/ph pr-d/codeph ">url.data</codeph> est de type ByteArray, une exception est renvoyée. Lorsqu’il est utilisé avec les méthodes <codeph class="+ topic/ph pr-d/codeph ">FileReference.upload()</codeph> et <codeph class="+ topic/ph pr-d/codeph ">FileReference.download()</codeph>, <codeph class="+ topic/ph pr-d/codeph ">url.data</codeph> peut uniquement être de type URLVariables ou String.
    
    </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Cette erreur peut se produire pour les raisons suivantes : 1) Flash Player ne peut pas convertir le paramètre <codeph class="+ topic/ph pr-d/codeph ">URLRequest.data</codeph> du format UTF8 au format MBCS. Cette erreur se produit si l’objet URLRequest transmis à la méthode <codeph class="+ topic/ph pr-d/codeph ">FileReference.download()</codeph> est configuré pour exécuter une opération GET et si <codeph class="+ topic/ph pr-d/codeph ">System.useCodePage</codeph> est réglé sur <codeph class="+ topic/ph pr-d/codeph ">true</codeph>. 2) Flash Player ne peut pas allouer de mémoire aux données <codeph class="+ topic/ph pr-d/codeph ">POST</codeph>. Cette erreur se produit si l’objet URLRequest transmis à la méthode <codeph class="+ topic/ph pr-d/codeph ">FileReference.download()</codeph> est configuré pour exécuter une opération <codeph class="+ topic/ph pr-d/codeph ">POST</codeph>.
    
    </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">MemoryError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:MemoryError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Si la méthode n’est pas appelée en réponse à l’action d’un utilisateur, notamment à un événement de type souris ou pression de touche.
    
    </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">Error</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Error</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">request</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.net:URLRequest</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">L’objet URLRequest. La propriété <codeph class="+ topic/ph pr-d/codeph ">url</codeph> de l’objet URLRequest doit contenir l’URL du fichier à télécharger sur l’ordinateur local. Si la valeur de ce paramètre est <codeph class="+ topic/ph pr-d/codeph ">null</codeph>, une exception est renvoyée. La propriété <codeph class="+ topic/ph pr-d/codeph ">requestHeaders</codeph> de l’objet URLRequest est ignorée ; les en-têtes de requête HTTP personnalisés ne sont pas pris en charge dans les chargements et les téléchargements. Pour envoyer des paramètres <codeph class="+ topic/ph pr-d/codeph ">POST</codeph> ou GET au serveur, réglez la valeur de <codeph class="+ topic/ph pr-d/codeph ">URLRequest.data</codeph> sur vos paramètres et <codeph class="+ topic/ph pr-d/codeph ">URLRequest.method</codeph> sur <codeph class="+ topic/ph pr-d/codeph ">URLRequestMethod.POST</codeph> ou <codeph class="+ topic/ph pr-d/codeph ">URLRequestMethod.GET</codeph>.
    
        <p class="- topic/p ">Dans certains navigateurs, la longueur des chaînes d’URL est limitée. Une longueur supérieure à 256 caractères peut échouer avec certains navigateurs ou serveurs.</p>
    
    </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">defaultFileName</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Nom de fichier par défaut affiché dans la boîte de dialogue pour le fichier à télécharger. Les caractères suivants sont interdits dans cette chaîne : / \ : ~~ ? " &lt; > | %
    <p class="- topic/p ">Si vous omettez ce paramètre, le nom de fichier de l’URL distante est analysé et utilisé par défaut. </p>
    
    </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Affiche une boîte de dialogue permettant à l’utilisateur de télécharger un fichier à partir d’un serveur distant. <ph class="- topic/ph ">Flash Player n’impose pas de restrictions au niveau de la taille des fichiers chargés ou téléchargés ; en revanche, le lecteur prend en charge des chargements ou des téléchargements de 100 Mo au maximum.</ph>
    
    <p class="- topic/p ">La méthode <codeph class="+ topic/ph pr-d/codeph ">download()</codeph> ouvre d’abord une boîte de dialogue du système d’exploitation demandant à l’utilisateur d’entrer un nom de fichier et de sélectionner l’emplacement où enregistrer le fichier dans l’ordinateur local. Quand l’utilisateur choisit un emplacement et confirme le téléchargement (en cliquant sur Enregistrer, par exemple), celui-ci commence sur le serveur distant. Les écouteurs reçoivent des événements indiquant la progression du téléchargement, ainsi que sa réussite ou son échec. Pour déterminer l’état de la boîte de dialogue et de l’opération de téléchargement après avoir appelé la méthode <codeph class="+ topic/ph pr-d/codeph ">download()</codeph>, votre code doit écouter les événements tels que <codeph class="+ topic/ph pr-d/codeph ">cancel</codeph>, <codeph class="+ topic/ph pr-d/codeph ">open</codeph>, <codeph class="+ topic/ph pr-d/codeph ">progress</codeph> et <codeph class="+ topic/ph pr-d/codeph ">complete</codeph>.
    </p>
    
    <p class="- topic/p ">Les fonctions <codeph class="+ topic/ph pr-d/codeph ">FileReference.upload()</codeph> et <codeph class="+ topic/ph pr-d/codeph ">FileReference.download()</codeph> ne sont pas bloquantes. Elles sont renvoyées après leur appel, avant la fin de la transmission de fichiers. En outre, si l’objet FileReference sort de son domaine, tout chargement ou téléchargement qui n’est pas encore terminé sur cet objet est annulé à ce moment-là. Veillez à ce que l’objet FileReference demeure dans son domaine pendant toute la durée prévue du chargement ou du téléchargement.</p>
    
    <p class="- topic/p ">Une fois le fichier téléchargé, les propriétés de l’objet FileReference sont renseignées par les propriétés du fichier local. L’événement <codeph class="+ topic/ph pr-d/codeph ">complete</codeph> est distribué si le téléchargement aboutit.</p>
    
    <p class="- topic/p ">Une seule session <codeph class="+ topic/ph pr-d/codeph ">browse()</codeph> ou <codeph class="+ topic/ph pr-d/codeph ">download()</codeph> peut être effectuée à la fois (car une seule boîte de dialogue peut être appelée à la fois).</p>
    
    <p class="- topic/p ">Cette méthode prend en charge le téléchargement de tout type de fichier, via HTTP ou HTTPS.</p>
    
    <p class="- topic/p ">Vous ne pouvez pas vous connecter aux ports généralement réservés. Pour obtenir une liste complète des ports bloqués, voir la rubrique « Restriction des API de réseau » dans le <i class="+ topic/ph hi-d/i ">Guide du développeur d’ActionScript 3.0</i>.</p>
    
    <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Remarque</b> : si votre serveur requiert l’authentification des utilisateurs, seuls les fichiers SWF s’exécutant dans un navigateur (c’est-à-dire avec le plug-in de navigation ou un contrôle ActiveX), peuvent fournir une boîte de dialogue qui demande à l’utilisateur son identifiant et son mot de passe d’authentification, ceci uniquement pour les téléchargements. Le transfert de fichiers échoue si le chargement est effectué à l’aide du plug-in ou d’un contrôle ActiveX, ou si un chargement/téléchargement est effectué par le biais du lecteur autonome ou externe.</p>
    
    <p class="- topic/p ">Lorsque vous employez cette méthode, tenez compte du modèle de sécurité de <ph class="- topic/ph ">Flash Player</ph> : </p>
    
    <ul class="- topic/ul "><li class="- topic/li ">Les opérations de chargement sont interdites si le fichier SWF appelant se trouve dans un sandbox local non approuvé.</li><li class="- topic/li ">Par défaut, l’accès entre les sandbox est refusé. Un site Web peut autoriser l’accès à une ressource en ajoutant un fichier de régulation d’URL.</li><li class="- topic/li ">Vous pouvez empêcher un fichier SWF d’utiliser cette méthode en définissant le paramètre <codeph class="+ topic/ph pr-d/codeph ">allowNetworking</codeph> des balises <codeph class="+ topic/ph pr-d/codeph ">object</codeph> et <codeph class="+ topic/ph pr-d/codeph ">embed</codeph> dans la page HTML qui comporte le contenu SWF.</li><li class="- topic/li ">Dans Flash Player 10 et Flash Player 9 Mise à jour 5, l’appel de cette méthode aboutit uniquement en réponse à un événement utilisateur (par exemple, un événement de type clic de souris ou pression de touche). Dans les autres cas, Flash Player renvoie une exception Error à l’appel de cette méthode.</li></ul>
    
    <p class="- topic/p ">Néanmoins, <ph class="- topic/ph ">dans Adobe AIR,</ph> le contenu du sandbox de sécurité<codeph class="+ topic/ph pr-d/codeph "> de l’application </codeph>(contenu installé avec l’application AIR) n’est pas soumis à ces restrictions de sécurité.</p>
    
    <p class="- topic/p ">Pour plus d’informations concernant la sécurité, voir la rubrique du Pôle de développement Flash Player : <xref href="http://www.adobe.com/go/devnet_security_fr" scope="external" class="- topic/xref ">Sécurité</xref> (disponible en anglais uniquement).</p>
    
    
    <p class="- topic/p ">Lorsque vous téléchargez un fichier à l’aide de cette méthode, il est alors marqué comme téléchargé sur les systèmes d’exploitation qui marquent les fichiers téléchargés :</p>
           
    <ul class="- topic/ul "><li class="- topic/li ">Windows XP Service Pack 2 et versions ultérieures, et Windows Vista</li><li class="- topic/li ">Mac OS 10.5 et versions ultérieures</li></ul>
           
    <p class="- topic/p ">Certains systèmes d’exploitation, tels que Linux, ne marquent pas les fichiers téléchargés.</p>
    
    <p class="- topic/p ">Notez que lors de la publication dans Flash Player 10, les nouvelles fonctionnalités ajoutées au lecteur ne vous permettent d’exécuter qu’une seule opération à la fois : <codeph class="+ topic/ph pr-d/codeph ">FileReference.browse()</codeph>, <codeph class="+ topic/ph pr-d/codeph ">FileReference.upload()</codeph>, <codeph class="+ topic/ph pr-d/codeph ">FileReference.download()</codeph>, <codeph class="+ topic/ph pr-d/codeph ">FileReference.load()</codeph> ou <codeph class="+ topic/ph pr-d/codeph ">FileReference.save()</codeph>. Dans le cas contraire, Flash Player renvoie une erreur d’exécution (code 2174). Utilisez <codeph class="+ topic/ph pr-d/codeph ">FileReference.cancel()</codeph> pour arrêter une opération en cours. Cette restriction s’applique uniquement à Flash Player 10. Cette restriction sur l’exécution simultanée de plusieurs opérations ne s’applique pas aux versions précédentes de Flash Player.</p> 
    
 	
	<p class="- topic/p ">Dans Adobe AIR, la boîte de dialogue de téléchargement n’est pas toujours affichée devant les fenêtres appartenant à une autre fenêtre (fenêtres dont la propriété <codeph class="+ topic/ph pr-d/codeph ">owner</codeph> n’est pas nulle). Pour éviter des problèmes de classement de fenêtres, masquez les fenêtres possédées avant d’appeler cette méthode.</p>
	 
    </apiDesc><example conref="examples\FileReference_download.as" class="- topic/example "> L’exemple suivant illustre l’emploi de l’objet événement <codeph class="+ topic/ph pr-d/codeph ">download</codeph>. Pour exécuter cet exemple, modifiez la propriété <codeph class="+ topic/ph pr-d/codeph ">downloadURL.url</codeph> pour qu’elle pointe sur une URL et un domaine existants, au lieu de l’adresse http://www fictive.[votreDomaine].com/SomeFile.pdf. Vous aurez peut-être besoin de compiler le fichier SWF avec l’option Protection de lecture locale définie sur Accéder au réseau seulement ou de mettre à jour vos paramètres de sécurité Flash Player pour autoriser ce fichier à accéder au réseau.
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">

package {
    import flash.display.Sprite;
    import flash.events.*;
    import flash.net.FileReference;
    import flash.net.URLRequest;
    import flash.net.FileFilter;

    public class FileReference_download extends Sprite {
        private var downloadURL:URLRequest;
        private var fileName:String = "SomeFile.pdf";
        private var file:FileReference;

        public function FileReference_download() {
            downloadURL = new URLRequest();
            downloadURL.url = "http://www.[yourDomain].com/SomeFile.pdf";
            file = new FileReference();
            configureListeners(file);
            file.download(downloadURL, fileName);
        }

        private function configureListeners(dispatcher:IEventDispatcher):void {
            dispatcher.addEventListener(Event.CANCEL, cancelHandler);
            dispatcher.addEventListener(Event.COMPLETE, completeHandler);
            dispatcher.addEventListener(IOErrorEvent.IO_ERROR, ioErrorHandler);
            dispatcher.addEventListener(Event.OPEN, openHandler);
            dispatcher.addEventListener(ProgressEvent.PROGRESS, progressHandler);
            dispatcher.addEventListener(SecurityErrorEvent.SECURITY_ERROR, securityErrorHandler);
            dispatcher.addEventListener(Event.SELECT, selectHandler);
        }

        private function cancelHandler(event:Event):void {
            trace("cancelHandler: " + event);
        }

        private function completeHandler(event:Event):void {
            trace("completeHandler: " + event);
        }

        private function ioErrorHandler(event:IOErrorEvent):void {
            trace("ioErrorHandler: " + event);
        }

        private function openHandler(event:Event):void {
            trace("openHandler: " + event);
        }

        private function progressHandler(event:ProgressEvent):void {
            var file:FileReference = FileReference(event.target);
            trace("progressHandler name=" + file.name + " bytesLoaded=" + event.bytesLoaded + " bytesTotal=" + event.bytesTotal);
        }

        private function securityErrorHandler(event:SecurityErrorEvent):void {
            trace("securityErrorHandler: " + event);
        }

        private function selectHandler(event:Event):void {
            var file:FileReference = FileReference(event.target);
            trace("selectHandler: name=" + file.name + " URL=" + downloadURL.url);
        }
    }
}
</codeblock></example></apiOperationDetail><related-links class="- topic/related-links "><link href="../../flash/filesystem/File.html#downloaded" class="- topic/link "><linktext class="- topic/linktext ">File.downloaded</linktext></link><link href="flash.net.xml#FileReference/browse()" class="- topic/link "><linktext class="- topic/linktext ">FileReference.browse()</linktext></link><link href="flash.net.xml#FileReferenceList/browse()" class="- topic/link "><linktext class="- topic/linktext ">FileReferenceList.browse()</linktext></link><link href="flash.net.xml#FileReference/upload()" class="- topic/link "><linktext class="- topic/linktext ">FileReference.upload()</linktext></link><link href="flash.net.xml#FileReference/save()" class="- topic/link "><linktext class="- topic/linktext ">FileReference.save()</linktext></link></related-links><adobeApiEvent id="flash.net:FileReference:download_open" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">open</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:Event</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Distribué lors du démarrage d’une opération de téléchargement.
    </apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">Distribué lors du démarrage d’une opération de téléchargement.</shortdesc></adobeApiEvent><adobeApiEvent id="flash.net:FileReference:download_progress" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">progress</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:ProgressEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Distribué régulièrement pendant le téléchargement du fichier.
    </apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">Distribué régulièrement pendant le téléchargement du fichier.</shortdesc></adobeApiEvent><adobeApiEvent id="flash.net:FileReference:download_complete" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">complete</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:Event</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Distribué en cas de réussite de l’opération de téléchargement.
    </apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">Distribué en cas de réussite de l’opération de téléchargement.</shortdesc></adobeApiEvent><adobeApiEvent id="flash.net:FileReference:download_cancel" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">cancel</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:Event</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Distribué lorsque l’utilisateur ferme la boîte de dialogue.
    </apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">Distribué lorsque l’utilisateur ferme la boîte de dialogue.</shortdesc></adobeApiEvent><adobeApiEvent id="flash.net:FileReference:download_select" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">select</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:Event</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Distribué lorsque l’utilisateur sélectionne un fichier à télécharger dans la boîte de dialogue. 
    </apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">Distribué lorsque l’utilisateur sélectionne un fichier à télécharger dans la boîte de dialogue.</shortdesc></adobeApiEvent><adobeApiEvent id="flash.net:FileReference:download_securityError" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">securityError</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:SecurityErrorEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Distribué lorsqu’un téléchargement échoue en raison d’une erreur de sécurité.
    </apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">Distribué lorsqu’un téléchargement échoue en raison d’une erreur de sécurité.</shortdesc></adobeApiEvent><adobeApiEvent id="flash.net:FileReference:download_ioError" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">ioError</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:IOErrorEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Distribué pour l’une des raisons suivantes :
    <ul class="- topic/ul "><li class="- topic/li ">Une erreur d’entrée/de sortie se produit pendant la lecture ou la transmission du fichier.</li><li class="- topic/li ">Le contenu SWF s’exécutant dans les versions autonome et externe de Flash Player tente de télécharger un fichier depuis un serveur nécessitant une authentification. Au cours du téléchargement, les lecteurs autonomes et externes ne permettent pas aux utilisateurs d’entrer des mots de passe. Si un fichier SWF présent dans ces lecteurs tente de télécharger un fichier à partir d’un serveur nécessitant une authentification, le téléchargement échoue. Le téléchargement de fichiers réussit uniquement via les lecteurs avec contrôle ActiveX et plug-in de navigation.</li></ul>
    
    </apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">Distribué pour l’une des raisons suivantes : Une erreur d’entrée/sortie se produit pendant la lecture ou la transmission du fichier. Le contenu SWF s’exécutant dans les versions autonome et externe de Flash Player tente de télécharger un fichier depuis un serveur nécessitant une authentification.</shortdesc></adobeApiEvent></apiOperation><apiOperation id="flash.net:FileReference:load" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">load</apiName><shortdesc class="- topic/shortdesc ">
    Démarre le chargement d’un fichier local sélectionné par un utilisateur.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">load, FileReference.load
	</keyword></asCustoms></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Renvoyé dans les cas suivants : 1) Une autre session browse FileReference ou FileReferenceList est en cours. Il est impossible d’exécuter plusieurs sessions de recherche de fichiers simultanément. 2) Un paramètre du fichier mms.cfg de l’utilisateur bloque cette opération.
    
    </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IllegalOperationError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IllegalOperationError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Cette erreur peut se produire si l’application ne peut pas allouer de mémoire pour le fichier. Le fichier peut être trop volumineux ou la quantité de mémoire disponible insuffisante.
    
    </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">MemoryError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:MemoryError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Démarre le chargement d’un fichier local.
    
    </apiTipText></apiTipTexts></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Démarre le chargement d’un fichier local sélectionné par un utilisateur. <ph class="- topic/ph ">Flash Player n’impose pas de restrictions au niveau de la taille des fichiers chargés, téléchargés ou enregistrés, mais officiellement prend en charge des tailles de 100 Mo au maximum. Pour le contenu s’exécutant dans Flash Player, vous devez appeler la méthode <codeph class="+ topic/ph pr-d/codeph ">FileReference.browse()</codeph> ou <codeph class="+ topic/ph pr-d/codeph ">FileReferenceList.browse()</codeph> avant d’appeler la méthode <codeph class="+ topic/ph pr-d/codeph ">load()</codeph>. Néanmoins, le contenu exécuté dans AIR dans le sandbox de l’application peut appeler la méthode <codeph class="+ topic/ph pr-d/codeph ">load()</codeph> d’un objet File sans appeler au préalable la méthode <codeph class="+ topic/ph pr-d/codeph ">browse()</codeph> (la classe File d’AIR étend la classe FileReference).</ph>
    
    <p class="- topic/p ">Les écouteurs reçoivent des événements indiquant la progression du chargement, ainsi que sa réussite ou son échec. Bien que vous puissiez utiliser l’objet FileReferenceList permettant aux utilisateurs un choix multiple de fichiers à charger, vous devez charger les fichiers un par un. Pour charger les fichiers un par un, parcourez en boucle le tableau <codeph class="+ topic/ph pr-d/codeph ">FileReferenceList.fileList</codeph> des objets FileReference.</p>
    
    <p class="- topic/p ">Adobe AIR comprend également la classe FileStream, qui propose davantage d’options de lecture de fichiers.</p>
    
    <p class="- topic/p ">Les fonctions <codeph class="+ topic/ph pr-d/codeph ">FileReference.upload()</codeph>, <codeph class="+ topic/ph pr-d/codeph ">FileReference.download()</codeph>, <codeph class="+ topic/ph pr-d/codeph ">FileReference.load()</codeph> et <codeph class="+ topic/ph pr-d/codeph ">FileReference.save()</codeph> ne sont pas bloquantes. Elles sont renvoyées après leur appel, avant la fin de la transmission de fichiers. En outre, si l’objet FileReference sort de son domaine, toute transaction qui n’est pas encore terminée sur cet objet est annulée à ce moment-là. Veillez à ce que l’objet FileReference demeure dans son domaine pendant toute la durée prévue du chargement, téléchargement ou enregistrement.</p>
    
    <p class="- topic/p ">Si le téléchargement du fichier aboutit, son contenu est stocké en tant que tableau d’octets dans la propriété <codeph class="+ topic/ph pr-d/codeph ">data</codeph> de l’objet FileReference.</p>
    
    <p class="- topic/p ">Il faut tenir compte des considérations de sécurité suivantes :</p>
    
    <ul class="- topic/ul "><li class="- topic/li ">Les opérations de chargement sont interdites si le fichier SWF appelant se trouve dans un sandbox local non approuvé.</li><li class="- topic/li ">Par défaut, l’accès entre les sandbox est refusé. Un site Web peut autoriser l’accès à une ressource en ajoutant un fichier de régulation interdomaines.</li><li class="- topic/li ">Vous pouvez empêcher un fichier d’utiliser cette méthode en définissant le paramètre <codeph class="+ topic/ph pr-d/codeph ">allowNetworking</codeph> des balises <codeph class="+ topic/ph pr-d/codeph ">object</codeph> et <codeph class="+ topic/ph pr-d/codeph ">embed</codeph> dans la page HTML qui comporte le contenu SWF.</li></ul>
    
    <p class="- topic/p ">Toutefois, ces considérations ne s’appliquent pas au contenu AIR dans le sandbox de l’application.</p>
    
    <p class="- topic/p ">Notez que lors de la publication dans Flash Player 10 ou AIR 1.5, une seule des opérations suivantes peut être exécutée à la fois : <codeph class="+ topic/ph pr-d/codeph ">FileReference.browse()</codeph>, <codeph class="+ topic/ph pr-d/codeph ">FileReference.upload()</codeph>, <codeph class="+ topic/ph pr-d/codeph ">FileReference.download()</codeph>, <codeph class="+ topic/ph pr-d/codeph ">FileReference.load()</codeph>, <codeph class="+ topic/ph pr-d/codeph ">FileReference.save()</codeph>. Dans le cas contraire, l’application renvoie une erreur d’exécution (code 2174). Utilisez <codeph class="+ topic/ph pr-d/codeph ">FileReference.cancel()</codeph> pour arrêter une opération en cours. Cette restriction s’applique uniquement à Flash Player 10 et AIR 1.5. Les versions antérieures de Flash Player ou AIR ne sont pas concernées par cette restriction sur l’exécution simultanée de plusieurs opérations.</p>
    
 	
	<p class="- topic/p ">Dans Adobe AIR, la boîte de dialogue de recherche de fichiers n’est pas toujours affichée devant les fenêtres appartenant à une autre fenêtre (fenêtres dont la propriété <codeph class="+ topic/ph pr-d/codeph ">owner</codeph> n’est pas nulle). Pour éviter des problèmes de classement de fenêtres, masquez les fenêtres possédées avant d’appeler cette méthode.</p>
	
    </apiDesc><example conref="examples\FileFilter.as" class="- topic/example "> L’exemple suivant charge une image à partir de votre système de fichiers local sur l’objet d’affichage racine (dans ce cas, la scène). Exemple fourni par <xref href="http://blog.andrevenancio.com/" scope="external" class="- topic/xref ">André Venancio</xref> (disponible en anglais uniquement).
 
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
var buttonShape:Shape = new Shape();
buttonShape.graphics.beginFill(0x336699);
buttonShape.graphics.drawCircle(50, 50, 25);
var button = new SimpleButton(buttonShape, buttonShape, buttonShape, buttonShape);
addChild(button);

var fileRef:FileReference= new FileReference();
button.addEventListener(MouseEvent.CLICK, onButtonClick);

function onButtonClick(e:MouseEvent):void {
fileRef.browse([new FileFilter("Images", "*.jpg;*.gif;*.png")]);
fileRef.addEventListener(Event.SELECT, onFileSelected);
}

function onFileSelected(e:Event):void {
fileRef.addEventListener(Event.COMPLETE, onFileLoaded);
fileRef.load();
}

function onFileLoaded(e:Event):void {
var loader:Loader = new Loader();
loader.loadBytes(e.target.data);
addChild(loader);
}
</codeblock></example></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#FileReference/browse()" class="- topic/link "><linktext class="- topic/linktext ">FileReference.browse()</linktext></link><link href="flash.net.xml#FileReferenceList/browse()" class="- topic/link "><linktext class="- topic/linktext ">FileReferenceList.browse()</linktext></link><link href="flash.net.xml#FileReference/data" class="- topic/link "><linktext class="- topic/linktext ">FileReference.data</linktext></link><link href="flash.net.xml#FileReferenceList/fileList" class="- topic/link "><linktext class="- topic/linktext ">FileReferenceList.fileList</linktext></link><link href="flash.net.xml#FileReference/save()" class="- topic/link "><linktext class="- topic/linktext ">FileReference.save()</linktext></link><link href="flash.filesystem.xml#FileStream" class="- topic/link "><linktext class="- topic/linktext ">FileStream</linktext></link></related-links><adobeApiEvent id="flash.net:FileReference:load_open" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">open</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:Event</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Distribué lors du démarrage d’une opération de chargement.
    </apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">Distribué lors du démarrage d’une opération de chargement.</shortdesc></adobeApiEvent><adobeApiEvent id="flash.net:FileReference:load_progress" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">progress</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:ProgressEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Distribué régulièrement pendant le chargement du fichier.
    </apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">Distribué régulièrement pendant le chargement du fichier.</shortdesc></adobeApiEvent><adobeApiEvent id="flash.net:FileReference:load_complete" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">complete</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:Event</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Distribué lorsque l’opération de chargement de fichier aboutit.
    </apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">Distribué lorsque l’opération de chargement de fichier aboutit.</shortdesc></adobeApiEvent><adobeApiEvent id="flash.net:FileReference:load_ioError" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">ioError</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:IOErrorEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Invoqué si le chargement échoue du fait d’une erreur d’entrée/sortie lors de la lecture ou de l’écriture du fichier par l’application.
    
    </apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">Invoqué si le chargement échoue du fait d’une erreur d’entrée/sortie lors de la lecture ou de l’écriture du fichier par l’application.</shortdesc></adobeApiEvent></apiOperation><apiOperation id="flash.net:FileReference:save" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">save</apiName><shortdesc class="- topic/shortdesc ">
    Ouvre une boîte de dialogue qui permet à l’utilisateur d’enregistrer un fichier dans le système de fichiers local.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Renvoyé dans les cas suivants : 1) Une autre session browse est en cours. Il est impossible d’exécuter plusieurs sessions de recherche de fichiers simultanément. 2) Le nom de fichier à télécharger contient des caractères interdits. 3) Un paramètre du fichier mms.cfg de l’utilisateur bloque cette opération.
    
    </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IllegalOperationError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IllegalOperationError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Si <codeph class="+ topic/ph pr-d/codeph ">data</codeph> n’est pas de type ByteArray et ne dispose pas d’une méthode <codeph class="+ topic/ph pr-d/codeph ">toString()</codeph>, une exception est renvoyée. Si <codeph class="+ topic/ph pr-d/codeph ">data</codeph> n’est pas de type XML et ne dispose pas d’une méthode <codeph class="+ topic/ph pr-d/codeph ">toXMLString()</codeph>, une exception est renvoyée.
    
    </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Si la méthode n’est pas appelée en réponse à l’action d’un utilisateur, notamment à un événement de type souris ou pression de touche.
    
    </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">Error</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Error</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Cette erreur peut se produire si Flash Player ne peut pas allouer de la mémoire pour le fichier. Le fichier peut être trop volumineux ou la quantité de mémoire disponible insuffisante.
    
    </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">MemoryError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:MemoryError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">data</apiItemName><apiType value="any" name="type" class="- topic/state reference/state apiRef/apiType "/><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Données à enregistrer. Les données peuvent être de divers formats et sont traitées de façon appropriée :
    <ul class="- topic/ul "><li class="- topic/li ">Si la valeur est <codeph class="+ topic/ph pr-d/codeph ">null</codeph>, l’application renvoie une exception ArgumentError.</li><li class="- topic/li ">Si cette valeur est une chaîne, les données sont enregistrées sous forme de fichier texte UTF-8.</li><li class="- topic/li ">Si cette valeur est XML, les données sont écrites dans un fichier texte au format XML et le formatage est préservé.</li><li class="- topic/li ">Si cette valeur est un objet ByteArray, les données sont écrites textuellement dans un fichier de données.</li><li class="- topic/li ">Si la valeur ne correspond à aucune des descriptions ci-dessus, la méthode <codeph class="+ topic/ph pr-d/codeph ">save()</codeph> appelle la méthode <codeph class="+ topic/ph pr-d/codeph ">toString()</codeph> de l’objet pour convertir les données en chaîne, puis enregistre les données sous forme de fichier texte. En cas d’échec, l’application renvoie une exception AurgmentError.</li></ul>
    
    </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">defaultFileName</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Nom de fichier par défaut affiché dans la boîte de dialogue pour le fichier à enregistrer. Les caractères suivants sont interdits dans cette chaîne : / \ : ~~ ? " &lt; > | %
    <p class="- topic/p ">
    Si un objet File appelle cette méthode, le nom de fichier correspond à celui du fichier auquel l’objet File fait référence. (la classe File d’AIR étend la classe FileReference).</p>
    
    </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Ouvre une boîte de dialogue qui permet à l’utilisateur d’enregistrer un fichier dans le système de fichiers local. <ph class="- topic/ph ">Flash Player n’impose pas de restrictions au niveau de la taille des fichiers chargés, téléchargés ou enregistrés, mais officiellement le lecteur prend en charge des tailles de 100 Mo au maximum.</ph>
    
    <p class="- topic/p ">La méthode <codeph class="+ topic/ph pr-d/codeph ">save()</codeph> ouvre d’abord une boîte de dialogue du système d’exploitation demandant à l’utilisateur d’entrer un nom de fichier et de sélectionner l’emplacement où l’enregistrer dans l’ordinateur local. Lorsque l’utilisateur sélectionne un emplacement et confirme l’enregistrement (par exemple en cliquant sur Enregistrer), le processus d’enregistrement commence. Les écouteurs reçoivent des événements indiquant la progression de l’enregistrement, ainsi que sa réussite ou son échec. Pour déterminer l’état de la boîte de dialogue et de l’opération d’enregistrement après avoir appelé la méthode <codeph class="+ topic/ph pr-d/codeph ">save()</codeph>, votre code doit écouter les événements tels que <codeph class="+ topic/ph pr-d/codeph ">cancel</codeph>, <codeph class="+ topic/ph pr-d/codeph ">open</codeph>, <codeph class="+ topic/ph pr-d/codeph ">progress</codeph> et <codeph class="+ topic/ph pr-d/codeph ">complete</codeph>.
    </p>
    
    <p class="- topic/p ">Adobe AIR comprend également la classe FileStream, qui propose davantage d’options d’enregistrement de fichiers au niveau local.</p>
    
    <p class="- topic/p ">Les fonctions <codeph class="+ topic/ph pr-d/codeph ">FileReference.upload()</codeph>, <codeph class="+ topic/ph pr-d/codeph ">FileReference.download()</codeph>, <codeph class="+ topic/ph pr-d/codeph ">FileReference.load()</codeph> et <codeph class="+ topic/ph pr-d/codeph ">FileReference.save()</codeph> ne sont pas bloquantes. Elles sont renvoyées après leur appel, avant la fin de la transmission de fichiers. En outre, si l’objet FileReference sort de son domaine, toute transaction qui n’est pas encore terminée sur cet objet est annulée à ce moment-là. Veillez à ce que l’objet FileReference demeure dans son domaine pendant toute la durée prévue du chargement, téléchargement ou enregistrement.</p>
    
    <p class="- topic/p ">Une fois le fichier enregistré, les propriétés de l’objet FileReference sont renseignées avec les propriétés du fichier local. L’événement <codeph class="+ topic/ph pr-d/codeph ">complete</codeph> est distribué si l’enregistrement aboutit.</p>
    
    <p class="- topic/p ">Une seule session <codeph class="+ topic/ph pr-d/codeph ">browse()</codeph> ou <codeph class="+ topic/ph pr-d/codeph ">save()</codeph> peut être effectuée à la fois (car une seule boîte de dialogue peut être appelée à la fois).</p>
    
    <p class="- topic/p ">Dans Flash Player, l’appel de cette méthode aboutit uniquement en réponse à un événement utilisateur (par exemple, un événement de type clic de souris ou pression de touche). Dans les autres cas, Flash Player renvoie une exception Error à l’appel de cette méthode. Le contenu AIR s’exécutant dans le sandbox de l’application n’est pas soumis à cette restriction.</p>
    
 	
	<p class="- topic/p ">Dans Adobe AIR, la boîte de dialogue d’enregistrement n’est pas toujours affichée devant les fenêtres appartenant à une autre fenêtre (fenêtres dont la propriété <codeph class="+ topic/ph pr-d/codeph ">owner</codeph> n’est pas nulle). Pour éviter des problèmes de classement de fenêtres, masquez les fenêtres possédées avant d’appeler cette méthode.</p>
	
    </apiDesc><example conref="examples\FileReference_save.as" class="- topic/example "> L’exemple suivant enregistre le contenu saisi dans un champ de texte dans un fichier. L’exemple crée un champ de texte modifiable (<codeph class="+ topic/ph pr-d/codeph ">MyTextField</codeph>) et un autre champ de texte non modifiable (<codeph class="+ topic/ph pr-d/codeph ">MyButtonField</codeph>) pour servir de « bouton » afin de répondre à un clic de souris. L’utilisateur peut modifier le premier champ de texte et cliquer sur le bouton pour enregistrer le contenu du champ de texte dans un fichier local. Le gestionnaire d’événement de type clip de souris <codeph class="+ topic/ph pr-d/codeph ">clickhandler</codeph> utilise la méthode <codeph class="+ topic/ph pr-d/codeph ">FileReference.save(),</codeph> (pour un objet FileReference appelé <codeph class="+ topic/ph pr-d/codeph ">MyFileReference</codeph>) pour ouvrir une boîte de dialogue sur le système d’exploitation de l’utilisateur afin que ce dernier puisse enregistrer le contenu dans un fichier local avec le nom attribué.
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
var MyTextField:TextField = new TextField();
var MyButtonField:TextField = new TextField();
var MyFile:FileReference = new FileReference();

MyTextField.border = true;
MyTextField.type = TextFieldType.INPUT;

MyButtonField.background = true;
MyButtonField.backgroundColor = 0x339933;
MyButtonField.x = 150;
MyButtonField.height = 20;
MyButtonField.text = "Click here to save";

addChild(MyTextField);
addChild(MyButtonField);
MyButtonField.addEventListener(MouseEvent.CLICK, clickhandler);

function clickhandler(e:MouseEvent): void {
    MyFile.save(MyTextField.text);
}
</codeblock></example></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#FileReferenceList/browse()" class="- topic/link "><linktext class="- topic/linktext ">FileReferenceList.browse()</linktext></link><link href="flash.net.xml#FileReference/load()" class="- topic/link "><linktext class="- topic/linktext ">FileReference.load()</linktext></link><link href="flash.net.xml#FileReference/data" class="- topic/link "><linktext class="- topic/linktext ">FileReference.data</linktext></link><link href="flash.net.xml#FileReference/upload()" class="- topic/link "><linktext class="- topic/linktext ">FileReference.upload()</linktext></link><link href="flash.net.xml#FileReference/download()" class="- topic/link "><linktext class="- topic/linktext ">FileReference.download()</linktext></link><link href="flash.filesystem.xml#FileStream" class="- topic/link "><linktext class="- topic/linktext ">FileStream</linktext></link></related-links><adobeApiEvent id="flash.net:FileReference:save_open" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">open</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:Event</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Distribué lors du démarrage d’une opération de téléchargement.
    </apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">Distribué lors du démarrage d’une opération de téléchargement.</shortdesc></adobeApiEvent><adobeApiEvent id="flash.net:FileReference:save_progress" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">progress</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:ProgressEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Distribué régulièrement pendant le téléchargement du fichier.
    </apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">Distribué régulièrement pendant le téléchargement du fichier.</shortdesc></adobeApiEvent><adobeApiEvent id="flash.net:FileReference:save_complete" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">complete</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:Event</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Distribué en cas de réussite de l’opération de téléchargement.
    </apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">Distribué en cas de réussite de l’opération de téléchargement.</shortdesc></adobeApiEvent><adobeApiEvent id="flash.net:FileReference:save_cancel" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">cancel</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:Event</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Distribué lorsque l’utilisateur ferme la boîte de dialogue.
    </apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">Distribué lorsque l’utilisateur ferme la boîte de dialogue.</shortdesc></adobeApiEvent><adobeApiEvent id="flash.net:FileReference:save_select" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">select</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:Event</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Distribué lorsque l’utilisateur sélectionne un fichier à télécharger dans la boîte de dialogue. 
    </apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">Distribué lorsque l’utilisateur sélectionne un fichier à télécharger dans la boîte de dialogue.</shortdesc></adobeApiEvent><adobeApiEvent id="flash.net:FileReference:save_ioError" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">ioError</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:IOErrorEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Distribué si une erreur d’entrée/sortie se produit pendant la lecture ou la transmission du fichier.
    
    </apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">Distribué si une erreur d’entrée/sortie se produit pendant la lecture ou la transmission du fichier.</shortdesc></adobeApiEvent></apiOperation><apiOperation id="flash.net:FileReference:uploadUnencoded" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">uploadUnencoded</apiName><shortdesc class="- topic/shortdesc ">
    Lance le chargement d’un fichier dans une URL sans aucun encodage.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Les fichiers SWF non approuvés au niveau local ne peuvent pas communiquer avec Internet. Pour contourner cette restriction, reclassifiez le fichier SWF en tant que fichier local avec accès au réseau ou en tant que fichier approuvé. Cette exception est renvoyée, accompagnée d’un message indiquant le nom du fichier local et l’URL qui ne sont pas accessibles.
    
    </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">SecurityError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">SecurityError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Renvoyé dans les cas suivants : 1) Une autre session browse FileReference ou FileReferenceList est en cours. Il est impossible d’exécuter plusieurs sessions de recherche de fichiers simultanément. 2) Le paramètre URL n’est pas un chemin ou un protocole valide. Le chargement des fichiers doit se faire via HTTP.
    
    </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IllegalOperationError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IllegalOperationError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">request</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.net:URLRequest</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">L’objet URLRequest. La propriété <codeph class="+ topic/ph pr-d/codeph ">url</codeph> de cet objet doit contenir l’URL du script serveur configuré pour traiter le chargement via les appels HTTP <codeph class="+ topic/ph pr-d/codeph ">POST</codeph>. Dans certains navigateurs, la longueur des chaînes d’URL est limitée. Une longueur supérieure à 256 caractères peut échouer avec certains navigateurs ou serveurs. Si la valeur de ce paramètre est <codeph class="+ topic/ph pr-d/codeph ">null</codeph>, une exception est renvoyée.  
     
    <p class="- topic/p ">L’URL peut être de type HTTP ou, pour les chargements sécurisés, de type HTTPS. Pour utiliser HTTPS, entrez une URL HTTPS dans le paramètre <codeph class="+ topic/ph pr-d/codeph ">url</codeph>. Si vous ne spécifiez pas de numéro de port dans le paramètre <codeph class="+ topic/ph pr-d/codeph ">url</codeph>, le port 80 pour HTTP et le port 443 pour HTTPS sont utilisés par défaut.</p>
    
    <p class="- topic/p ">Pour envoyer des paramètres <codeph class="+ topic/ph pr-d/codeph ">POST</codeph> or <codeph class="+ topic/ph pr-d/codeph ">GET</codeph> au serveur, réglez la propriété <codeph class="+ topic/ph pr-d/codeph ">data</codeph> de l’objet URLRequest sur vos paramètres et la propriété <codeph class="+ topic/ph pr-d/codeph ">method</codeph> sur <codeph class="+ topic/ph pr-d/codeph ">URLRequestMethod.POST</codeph> ou <codeph class="+ topic/ph pr-d/codeph ">URLRequestMethod.GET</codeph>.</p>
    
    </apiDesc></apiParam><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Procède au chargement d’un fichier sur un serveur distant sans encodage. 
    
    </apiTipText></apiTipTexts></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Lance le chargement d’un fichier dans une URL sans aucun encodage. Tandis que la méthode <codeph class="+ topic/ph pr-d/codeph ">upload()</codeph> convertit le fichier en enveloppe de données de formulaire, la méthode <codeph class="+ topic/ph pr-d/codeph ">uploadUnencoded()</codeph> transmet le contenu du fichier tel quel dans le corps de la requête HTTP. Utilisez la méthode uploadUnencoded() si les données que vous souhaitez envoyer sont déjà codées dans un format pris en charge par le serveur de réception. En règle générale, la méthode <codeph class="+ topic/ph pr-d/codeph ">uploadeUnencoded()</codeph> est utilisée avec la méthode <codeph class="+ topic/ph pr-d/codeph ">HTTP/WebDAV PUT</codeph>.
    
    </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#FileReference/browse()" class="- topic/link "><linktext class="- topic/linktext ">FileReference.browse()</linktext></link><link href="flash.net.xml#FileReferenceList/browse()" class="- topic/link "><linktext class="- topic/linktext ">FileReferenceList.browse()</linktext></link><link href="flash.net.xml#FileReference/download()" class="- topic/link "><linktext class="- topic/linktext ">FileReference.download()</linktext></link><link href="flash.net.xml#FileReferenceList/fileList" class="- topic/link "><linktext class="- topic/linktext ">FileReferenceList.fileList</linktext></link><link href="flash.net.xml#FileReference/upload()" class="- topic/link "><linktext class="- topic/linktext ">upload()</linktext></link></related-links><adobeApiEvent id="flash.net:FileReference:uploadUnencoded_open" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">open</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:Event</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Distribué lors du démarrage d’une opération de chargement.
    
    </apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">Distribué lors du démarrage d’une opération de chargement.</shortdesc></adobeApiEvent><adobeApiEvent id="flash.net:FileReference:uploadUnencoded_progress" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">progress</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:ProgressEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Distribué régulièrement pendant l’opération de chargement de fichier.
    
    </apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">Distribué régulièrement pendant l’opération de chargement de fichier.</shortdesc></adobeApiEvent><adobeApiEvent id="flash.net:FileReference:uploadUnencoded_complete" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">complete</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:Event</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Distribué en cas de réussite de l’opération de chargement.
    
    </apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">Distribué en cas de réussite de l’opération de chargement.</shortdesc></adobeApiEvent><adobeApiEvent id="flash.net:FileReference:uploadUnencoded_uploadCompleteData" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">uploadCompleteData</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:DataEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Distribué après réception des données par le serveur suite à un chargement de fichier réussi.
    
    </apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">Distribué après réception des données par le serveur suite à un chargement de fichier réussi.</shortdesc></adobeApiEvent><adobeApiEvent id="flash.net:FileReference:uploadUnencoded_securityError" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">securityError</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:SecurityErrorEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Distribué lorsqu’un chargement échoue en raison d’une violation de la sécurité.
    
    </apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">Distribué lorsqu’un chargement échoue en raison d’une violation de la sécurité.</shortdesc></adobeApiEvent><adobeApiEvent id="flash.net:FileReference:uploadUnencoded_httpStatus" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">httpStatus</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:HTTPStatusEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Distribué lorsqu’un chargement échoue en raison d’une erreur HTTP.
    
    </apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">Distribué lorsqu’un chargement échoue en raison d’une erreur HTTP.</shortdesc></adobeApiEvent><adobeApiEvent id="flash.net:FileReference:uploadUnencoded_httpResponseStatus" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">httpResponseStatus</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:HTTPStatusEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">L’opération de chargement aboutit et le serveur renvoie une URL de réponse, ainsi que des en-têtes de réponse.
    
    </apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">L’opération de chargement aboutit et le serveur renvoie une URL de réponse, ainsi que des en-têtes de réponse.</shortdesc></adobeApiEvent><adobeApiEvent id="flash.net:FileReference:uploadUnencoded_ioError" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">ioError</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:IOErrorEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Invoqué dans l’un des cas suivants :
    <ul class="- topic/ul "><li class="- topic/li ">Le chargement échoue à la suite d’une erreur d’entrée/de sortie survenue au cours de la lecture, de l’écriture ou de la transmission du fichier par Adobe AIR.</li><li class="- topic/li ">Le chargement échoue en raison d’une tentative de chargement d’un fichier vers un serveur nécessitant une authentification (un nom d’utilisateur et un mot de passe, par exemple). Lors du chargement, les utilisateurs ne peuvent pas entrer des mots de passe.</li><li class="- topic/li ">Le chargement échoue car le paramètre <codeph class="+ topic/ph pr-d/codeph ">url</codeph> contient un protocole non valide. La méthode <codeph class="+ topic/ph pr-d/codeph ">FileReference.upload()</codeph> doit utiliser HTTP ou HTTPS.</li></ul>
    
    </apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">Appelée dans l’un des cas suivants : Le chargement échoue en raison d’une erreur d’entrée/sortie survenue pendant la lecture, l’écriture ou la transmission du fichier par Adobe AIR. Le chargement échoue en raison d’une tentative de chargement d’un fichier vers un serveur nécessitant une authentification (un nom d’utilisateur et un mot de passe, par exemple).</shortdesc></adobeApiEvent></apiOperation><apiOperation id="flash.net:FileReference:upload" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">upload</apiName><shortdesc class="- topic/shortdesc ">
    Procède au chargement du fichier sur un serveur distant.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">upload, FileReference.upload
    </keyword></asCustoms></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Les fichiers SWF non approuvés au niveau local ne peuvent pas communiquer avec Internet. Pour contourner cette restriction, reclassifiez le fichier SWF en tant que fichier local avec accès au réseau ou en tant que fichier approuvé. Cette exception est renvoyée, accompagnée d’un message indiquant le nom du fichier local et l’URL qui ne sont pas accessibles.
    
      </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">SecurityError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">SecurityError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Vous ne pouvez pas vous connecter aux ports généralement réservés. Pour obtenir une liste complète des ports bloqués, voir la rubrique « Restriction des API de réseau » dans le <i class="+ topic/ph hi-d/i ">Guide du développeur d’ActionScript 3.0</i>.
     
    </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">SecurityError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">SecurityError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Renvoyé dans les cas suivants : 1) Une autre session browse FileReference ou FileReferenceList est en cours. Il est impossible d’exécuter plusieurs sessions de recherche de fichiers simultanément. 2) Le paramètre URL n’est pas un chemin ou un protocole valide. Les chargements de fichiers doivent utiliser HTTP, les téléchargements FTP ou HTTP. 3) Le paramètre <codeph class="+ topic/ph pr-d/codeph ">uploadDataFieldName</codeph> est réglé sur <codeph class="+ topic/ph pr-d/codeph ">null</codeph>. 4) Un paramètre du fichier mms.cfg de l’utilisateur bloque cette opération.
    
    </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IllegalOperationError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IllegalOperationError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Renvoyé dans les cas suivants : 1) Le paramètre <codeph class="+ topic/ph pr-d/codeph ">uploadDataFieldName</codeph> est une chaîne vide. 2) Le paramètre <codeph class="+ topic/ph pr-d/codeph ">url.data</codeph> est de type ByteArray. Lorsqu’il est utilisé avec les méthodes <codeph class="+ topic/ph pr-d/codeph ">FileReference.upload()</codeph> et <codeph class="+ topic/ph pr-d/codeph ">FileReference.download()</codeph>, le paramètre <codeph class="+ topic/ph pr-d/codeph ">url.data</codeph> peut uniquement être de type URLVariables ou String. 3) Dans le moteur d’exécution AIR (sandbox de sécurité de l’application), la méthode de l’objet URLRequest n’est ni GET ni POST (utilisez plutôt <codeph class="+ topic/ph pr-d/codeph ">uploadEncoded()</codeph>).
    
    </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Cette erreur peut se produire pour les raisons suivantes : 1) Flash Player ne peut pas convertir le paramètre <codeph class="+ topic/ph pr-d/codeph ">URLRequest.data</codeph> du format UTF8 au format MBCS. Cette erreur se produit si l’objet URLRequest transmis à <codeph class="+ topic/ph pr-d/codeph ">FileReference.upload()</codeph> est configuré pour exécuter une opération GET et si <codeph class="+ topic/ph pr-d/codeph ">System.useCodePage</codeph> est réglé sur <codeph class="+ topic/ph pr-d/codeph ">true</codeph>. 2) Flash Player ne peut pas allouer de mémoire aux données <codeph class="+ topic/ph pr-d/codeph ">POST</codeph>. Cette erreur est applicable si l’objet URLRequest transmis à <codeph class="+ topic/ph pr-d/codeph ">FileReference.upload()</codeph> est configuré pour exécuter une opération <codeph class="+ topic/ph pr-d/codeph ">POST</codeph>.
    
    </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">MemoryError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:MemoryError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">request</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.net:URLRequest</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">L’objet URLRequest. La propriété <codeph class="+ topic/ph pr-d/codeph ">url</codeph> de cet objet doit contenir l’URL du script serveur configuré pour traiter le chargement via les appels HTTP <codeph class="+ topic/ph pr-d/codeph ">POST</codeph>. Dans certains navigateurs, la longueur des chaînes d’URL est limitée. Une longueur supérieure à 256 caractères peut échouer avec certains navigateurs ou serveurs. Si la valeur de ce paramètre est <codeph class="+ topic/ph pr-d/codeph ">null</codeph>, une exception est renvoyée. La propriété <codeph class="+ topic/ph pr-d/codeph ">requestHeaders</codeph> de l’objet URLRequest est ignorée ; les en-têtes de requête HTTP personnalisés ne sont pas pris en charge dans les chargements et les téléchargements. 
     
    <p class="- topic/p ">L’URL peut être de type HTTP ou, pour les chargements sécurisés, de type HTTPS. Pour utiliser HTTPS, entrez une URL HTTPS dans le paramètre <codeph class="+ topic/ph pr-d/codeph ">url</codeph>. Si vous ne spécifiez pas de numéro de port dans le paramètre <codeph class="+ topic/ph pr-d/codeph ">url</codeph>, le port 80 pour HTTP et le port 443 pour HTTPS sont utilisés par défaut.</p>
    
    <p class="- topic/p ">Pour envoyer des paramètres <codeph class="+ topic/ph pr-d/codeph ">POST</codeph> or <codeph class="+ topic/ph pr-d/codeph ">GET</codeph> au serveur, réglez la propriété <codeph class="+ topic/ph pr-d/codeph ">data</codeph> de l’objet URLRequest sur vos paramètres et la propriété <codeph class="+ topic/ph pr-d/codeph ">method</codeph> sur <codeph class="+ topic/ph pr-d/codeph ">URLRequestMethod.POST</codeph> ou <codeph class="+ topic/ph pr-d/codeph ">URLRequestMethod.GET</codeph>.</p>
    
    
    </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">uploadDataFieldName</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">Filedata</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Nom de champ qui précède les données du fichier dans l’opération de chargement <codeph class="+ topic/ph pr-d/codeph ">POST</codeph>. La valeur de <codeph class="+ topic/ph pr-d/codeph ">uploadDataFieldName</codeph> doit être chaîne non vide et dont la valeur n’est pas null. Par défaut, la valeur de <codeph class="+ topic/ph pr-d/codeph ">uploadDataFieldName</codeph> correspond à <codeph class="+ topic/ph pr-d/codeph ">Filedata</codeph>, comme illustré dans l’exemple de requête <codeph class="+ topic/ph pr-d/codeph ">POST</codeph> ci-dessous :
    <pre xml:space="preserve" class="- topic/pre ">
    Content-Type: multipart/form-data; boundary=AaB03x
    --AaB03x 
    Content-Disposition: form-data; name="Filedata"; filename="example.jpg" 
    Content-Type: application/octet-stream
    ... contents of example.jpg ... 
    --AaB03x-- 
    </pre>
    
    </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">testUpload</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Paramètre permettant de demander le chargement d’un fichier de test. Si la valeur de <codeph class="+ topic/ph pr-d/codeph ">testUpload</codeph> est <codeph class="+ topic/ph pr-d/codeph ">true</codeph>, pour les fichiers supérieurs à 10 Ko, Flash Player tente de charger un fichier test <codeph class="+ topic/ph pr-d/codeph ">POST</codeph> avec une valeur Content-Length de 0. Le chargement de test vérifie si le chargement du fichier réel peut réussir et si l’authentification du serveur se passera bien, le cas échéant. Seuls les lecteurs Windows prennent en charge les chargements de test.
    
    
    </apiDesc></apiParam><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Procède au chargement d’un fichier sur un serveur distant.
    
    </apiTipText></apiTipTexts></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Procède au chargement du fichier sur un serveur distant. <ph class="- topic/ph ">Flash Player n’impose pas de restrictions au niveau de la taille des fichiers chargés ou téléchargés ; en revanche, le lecteur prend en charge des chargements/téléchargements de 100 Mo au maximum.</ph> Vous devez appeler la méthode <codeph class="+ topic/ph pr-d/codeph ">FileReference.browse()</codeph> ou <codeph class="+ topic/ph pr-d/codeph ">FileReferenceList.browse()</codeph> avant d’appeler cette méthode.
    
    <p class="- topic/p ">Pour la classe File d’Adobe AIR, qui étend la classe FileReference, vous pouvez utiliser la méthode <codeph class="+ topic/ph pr-d/codeph ">upload()</codeph> pour charger n’importe quel fichier. Pour la classe FileReference (utilisée dans Flash Player), l’utilisateur doit tout d’abord sélectionner un fichier.</p>
    
    <p class="- topic/p ">Les écouteurs reçoivent des événements indiquant la progression du chargement, ainsi que sa réussite ou son échec. Bien que vous puissiez employer l’objet FileReferenceList pour permettre aux utilisateurs de sélectionner plusieurs fichiers à charger, vous devez charger ces fichiers un par un. Pour ce faire, exécutez une itération dans le tableau <codeph class="+ topic/ph pr-d/codeph ">FileReferenceList.fileList</codeph> des objets FileReference.</p>
    
    <p class="- topic/p ">Les fonctions <codeph class="+ topic/ph pr-d/codeph ">FileReference.upload()</codeph> et <codeph class="+ topic/ph pr-d/codeph ">FileReference.download()</codeph> ne sont pas bloquantes. Elles sont renvoyées après leur appel, avant la fin de la transmission de fichiers. En outre, si l’objet FileReference sort de son domaine, tout chargement ou téléchargement qui n’est pas encore terminé sur cet objet est annulé à ce moment-là. Veillez à ce que l’objet FileReference demeure dans son domaine pendant toute la durée prévue du chargement ou du téléchargement.</p>
    
    <p class="- topic/p ">Le fichier est chargé dans l’URL transmise dans le paramètre <codeph class="+ topic/ph pr-d/codeph ">url</codeph>. L’URL doit être un script serveur configuré pour accepter les chargements. Flash Player charge les fichiers à l’aide de la méthode HTTP <codeph class="+ topic/ph pr-d/codeph ">POST</codeph>. Le script serveur qui gère le chargement doit attendre une requête <codeph class="+ topic/ph pr-d/codeph ">POST</codeph> comportant les éléments suivants :</p>
    <ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">Content-Type</codeph> de <codeph class="+ topic/ph pr-d/codeph ">multipart/form-data</codeph></li><li class="- topic/li ">Un élément <codeph class="+ topic/ph pr-d/codeph ">Content-Disposition</codeph> avec un attribut <codeph class="+ topic/ph pr-d/codeph ">name</codeph> défini sur <codeph class="+ topic/ph pr-d/codeph ">Filedata</codeph> par défaut et <codeph class="+ topic/ph pr-d/codeph ">filename</codeph> réglé sur le nom du fichier d’origine</li><li class="- topic/li ">Le contenu binaire du fichier</li></ul>
    
     <p class="- topic/p ">Vous ne pouvez pas vous connecter aux ports généralement réservés. Pour obtenir une liste complète des ports bloqués, voir la rubrique « Restriction des API de réseau » dans le <i class="+ topic/ph hi-d/i ">Guide du développeur d’ActionScript 3.0</i>.</p>
     
    <p class="- topic/p ">Vous trouverez un exemple de requête <codeph class="+ topic/ph pr-d/codeph ">POST</codeph> dans la description du paramètre <codeph class="+ topic/ph pr-d/codeph ">uploadDataFieldName</codeph>. Vous pouvez envoyer les paramètres <codeph class="+ topic/ph pr-d/codeph ">POST</codeph> ou <codeph class="+ topic/ph pr-d/codeph ">GET</codeph> au serveur à l’aide de la méthode <codeph class="+ topic/ph pr-d/codeph ">upload()</codeph>. Consultez la description du paramètre <codeph class="+ topic/ph pr-d/codeph ">request</codeph>.</p>
    
    <p class="- topic/p ">Si le paramètre <codeph class="+ topic/ph pr-d/codeph ">testUpload</codeph> est réglé sur <codeph class="+ topic/ph pr-d/codeph ">true</codeph> et que la taille du fichier à charger est supérieure à 10 Ko environ, sous Windows, Flash Player envoie d’abord une opération <codeph class="+ topic/ph pr-d/codeph ">POST</codeph> de test vide, avant le fichier lui-même, pour vérifier si la transmission est susceptible d’aboutir. Flash Player envoie ensuite une seconde opération <codeph class="+ topic/ph pr-d/codeph ">POST</codeph> contenant le fichier lui-même. Si la taille du fichier est inférieure à 10 Ko, Flash Player exécute une seule opération <codeph class="+ topic/ph pr-d/codeph ">POST</codeph> contenant le fichier lui-même. Sous Macintosh, Flash Player n’exécute pas d’opérations de chargement <codeph class="+ topic/ph pr-d/codeph ">POST</codeph> de test.</p>
    
    <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Remarque</b> : si votre serveur requiert l’authentification des utilisateurs, seuls les fichiers SWF s’exécutant dans un navigateur (c’est-à-dire avec le plug-in de navigation ou un contrôle ActiveX), peuvent fournir une boîte de dialogue qui demande à l’utilisateur son identifiant et son mot de passe d’authentification, ceci uniquement pour les téléchargements. Le transfert de fichiers échoue si le chargement est effectué à l’aide du plug-in ou d’un contrôle ActiveX, ou si un chargement/téléchargement est effectué par le biais du lecteur autonome ou externe.</p>
    
    <p class="- topic/p ">Lorsque vous employez cette méthode, tenez compte du modèle de sécurité de <ph class="- topic/ph ">Flash Player</ph> : </p>
    
    
    <ul class="- topic/ul "><li class="- topic/li ">Les opérations de chargement sont interdites si le fichier SWF appelant se trouve dans un sandbox local non approuvé.</li><li class="- topic/li ">Par défaut, l’accès entre les sandbox est refusé. Un site Web peut autoriser l’accès à une ressource en ajoutant un fichier de régulation d’URL.</li><li class="- topic/li ">Vous pouvez empêcher un fichier SWF d’utiliser cette méthode en définissant le paramètre <codeph class="+ topic/ph pr-d/codeph ">allowNetworking</codeph> des balises <codeph class="+ topic/ph pr-d/codeph ">object</codeph> et <codeph class="+ topic/ph pr-d/codeph ">embed</codeph> dans la page HTML qui comporte le contenu SWF.</li></ul>
    
    <p class="- topic/p ">Néanmoins, dans Adobe AIR, le contenu du sandbox de sécurité <codeph class="+ topic/ph pr-d/codeph ">application</codeph> (contenu installé avec l’application AIR) n’est pas soumis à ces restrictions de sécurité.</p>
    
    <p class="- topic/p ">Pour plus d’informations concernant la sécurité, voir la rubrique du Pôle de développement Flash Player : <xref href="http://www.adobe.com/go/devnet_security_fr" scope="external" class="- topic/xref ">Sécurité</xref> (disponible en anglais uniquement).</p>
    
    <p class="- topic/p ">Notez que lors de la publication dans Flash Player 10, les nouvelles fonctionnalités ajoutées au lecteur ne vous permettent d’exécuter qu’une seule opération à la fois : <codeph class="+ topic/ph pr-d/codeph ">FileReference.browse()</codeph>, <codeph class="+ topic/ph pr-d/codeph ">FileReference.upload()</codeph>, <codeph class="+ topic/ph pr-d/codeph ">FileReference.download()</codeph>, <codeph class="+ topic/ph pr-d/codeph ">FileReference.load()</codeph> ou <codeph class="+ topic/ph pr-d/codeph ">FileReference.save()</codeph>. Dans le cas contraire, Flash Player renvoie une erreur d’exécution (code 2174). Utilisez <codeph class="+ topic/ph pr-d/codeph ">FileReference.cancel()</codeph> pour arrêter une opération en cours. Cette restriction s’applique uniquement à Flash Player 10. Cette restriction sur l’exécution simultanée de plusieurs opérations ne s’applique pas aux versions précédentes de Flash Player.</p>
    
    </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#FileReference/browse()" class="- topic/link "><linktext class="- topic/linktext ">FileReference.browse()</linktext></link><link href="flash.net.xml#FileReferenceList/browse()" class="- topic/link "><linktext class="- topic/linktext ">FileReferenceList.browse()</linktext></link><link href="flash.net.xml#FileReference/download()" class="- topic/link "><linktext class="- topic/linktext ">FileReference.download()</linktext></link><link href="flash.net.xml#FileReferenceList/fileList" class="- topic/link "><linktext class="- topic/linktext ">FileReferenceList.fileList</linktext></link><link href="flash.net.xml#FileReference/load()" class="- topic/link "><linktext class="- topic/linktext ">FileReference.load()</linktext></link></related-links><adobeApiEvent id="flash.net:FileReference:upload_open" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">open</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:Event</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Distribué lors du démarrage d’une opération de chargement.
    
    </apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">Distribué lors du démarrage d’une opération de chargement.</shortdesc></adobeApiEvent><adobeApiEvent id="flash.net:FileReference:upload_progress" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">progress</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:ProgressEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Distribué régulièrement pendant l’opération de chargement de fichier.
    
    </apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">Distribué régulièrement pendant l’opération de chargement de fichier.</shortdesc></adobeApiEvent><adobeApiEvent id="flash.net:FileReference:upload_complete" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">complete</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:Event</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Distribué en cas de réussite de l’opération de chargement.
    
    </apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">Distribué en cas de réussite de l’opération de chargement.</shortdesc></adobeApiEvent><adobeApiEvent id="flash.net:FileReference:upload_uploadCompleteData" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">uploadCompleteData</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:DataEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Distribué après réception des données par le serveur suite à un chargement de fichier réussi.
    
    </apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">Distribué après réception des données par le serveur suite à un chargement de fichier réussi.</shortdesc></adobeApiEvent><adobeApiEvent id="flash.net:FileReference:upload_securityError" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">securityError</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:SecurityErrorEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Distribué lorsqu’un chargement échoue en raison d’une violation de la sécurité.
    
    </apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">Distribué lorsqu’un chargement échoue en raison d’une violation de la sécurité.</shortdesc></adobeApiEvent><adobeApiEvent id="flash.net:FileReference:upload_httpStatus" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">httpStatus</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:HTTPStatusEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Distribué lorsqu’un chargement échoue en raison d’une erreur HTTP.
    
    </apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">Distribué lorsqu’un chargement échoue en raison d’une erreur HTTP.</shortdesc></adobeApiEvent><adobeApiEvent id="flash.net:FileReference:upload_httpResponseStatus" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">httpResponseStatus</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:HTTPStatusEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">L’opération de chargement aboutit et le serveur renvoie une URL de réponse, ainsi que des en-têtes de réponse.
    
    </apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">L’opération de chargement aboutit et le serveur renvoie une URL de réponse, ainsi que des en-têtes de réponse.</shortdesc></adobeApiEvent><adobeApiEvent id="flash.net:FileReference:upload_ioError" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">ioError</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:IOErrorEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Invoqué dans l’un des cas suivants :
    <ul class="- topic/ul "><li class="- topic/li ">Le chargement échoue à la suite d’une erreur d’entrée/de sortie survenue au cours de la lecture, de l’écriture ou de la transmission du fichier par <ph class="- topic/ph ">Flash Player ou </ph>Adobe AIR.</li><li class="- topic/li ">Le chargement échoue en raison d’une tentative de chargement d’un fichier vers un serveur nécessitant une authentification (un nom d’utilisateur et un mot de passe, par exemple). Lors du chargement, les utilisateurs ne peuvent pas entrer des mots de passe.</li><li class="- topic/li ">Le chargement échoue car le paramètre <codeph class="+ topic/ph pr-d/codeph ">url</codeph> contient un protocole non valide. La méthode <codeph class="+ topic/ph pr-d/codeph ">FileReference.upload()</codeph> doit utiliser HTTP ou HTTPS.</li></ul>
    
    </apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">Appelée dans l’un des cas suivants : Le chargement échoue en raison d’une erreur d’entrée/sortie survenue pendant la lecture, l’écriture ou la transmission du fichier par Flash Player ou Adobe AIR. Le chargement échoue en raison d’une tentative de chargement d’un fichier vers un serveur nécessitant une authentification (un nom d’utilisateur et un mot de passe, par exemple).</shortdesc></adobeApiEvent></apiOperation><apiValue id="flash.net:FileReference:creationDate:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">creationDate</apiName><shortdesc class="- topic/shortdesc ">
    Date de création du fichier dans le disque local.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">creationDate, FileReference.creationDate
    
    </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Date</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Si l’appel de la méthode <codeph class="+ topic/ph pr-d/codeph ">FileReference.browse()</codeph>, <codeph class="+ topic/ph pr-d/codeph ">FileReferenceList.browse()</codeph> ou <codeph class="+ topic/ph pr-d/codeph ">FileReference.download()</codeph> n’a pas abouti, une exception est renvoyée, accompagnée d’un message indiquant que des fonctions ont été appelées dans un ordre incorrect ou qu’un appel antérieur a échoué. Dans ce cas, la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">creationDate</codeph> correspond à <codeph class="+ topic/ph pr-d/codeph ">null</codeph>.
    
    </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IllegalOperationError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IllegalOperationError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">S’il est impossible d’accéder aux informations relatives au fichier, une exception indiquant qu’une erreur d’E/S s’est produite sur un fichier est renvoyée.
    
    </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IOError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IOError</apiOperationClassifier></apiException><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Obtient la date de création du fichier en tant qu’objet Date.
    
    </apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Date de création du fichier dans le disque local. Si l’objet n’a pas été renseigné, l’appel effectué pour obtenir la valeur de cette propriété renvoie <codeph class="+ topic/ph pr-d/codeph ">null</codeph>.
    
    </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#FileReference/browse()" class="- topic/link "><linktext class="- topic/linktext ">FileReference.browse()</linktext></link></related-links></apiValue><apiValue id="flash.net:FileReference:creator:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">creator</apiName><shortdesc class="- topic/shortdesc ">
    Type de créateur Macintosh du fichier, uniquement utilisé dans les versions Mac OS antérieures à Mac OS X.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">creator, FileReference.creator
    </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Sous Macintosh, si l’appel de la méthode <codeph class="+ topic/ph pr-d/codeph ">FileReference.browse()</codeph>, <codeph class="+ topic/ph pr-d/codeph ">FileReferenceList.browse()</codeph> ou <codeph class="+ topic/ph pr-d/codeph ">FileReference.download()</codeph> n’a pas abouti, une exception est renvoyée, accompagnée d’un message indiquant que des fonctions ont été appelées dans un ordre incorrect ou qu’un appel antérieur a échoué. Dans ce cas, la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">creator</codeph> correspond à <codeph class="+ topic/ph pr-d/codeph ">null</codeph>.
    
    </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IllegalOperationError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IllegalOperationError</apiOperationClassifier></apiException><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Type de créateur Macintosh.
    </apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Type de créateur Macintosh du fichier, uniquement utilisé dans les versions Mac OS antérieures à Mac OS X. Sous Windows ou Linux, cette propriété est <codeph class="+ topic/ph pr-d/codeph ">null</codeph>. Si l’objet FileReference n’a pas été renseigné, l’appel effectué pour obtenir la valeur de cette propriété renvoie <codeph class="+ topic/ph pr-d/codeph ">null</codeph>.
    
    </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#FileReference/browse()" class="- topic/link "><linktext class="- topic/linktext ">FileReference.browse()</linktext></link><link href="flash.net.xml#FileReference/extension" class="- topic/link "><linktext class="- topic/linktext ">FileReference.extension</linktext></link></related-links></apiValue><apiValue id="flash.net:FileReference:data:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">data</apiName><shortdesc class="- topic/shortdesc ">
    L’objet ByteArray représentant les données du fichier chargé après l’aboutissement d’un appel de la méthode load().</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><refpath>
    </refpath></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.utils:ByteArray</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Si l’appel de la méthode <codeph class="+ topic/ph pr-d/codeph ">load()</codeph> n’a pas abouti, une exception est renvoyée, accompagnée d’un message indiquant que des fonctions ont été appelées dans un ordre incorrect ou qu’un appel antérieur a échoué. Dans ce cas, la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">data</codeph> est <codeph class="+ topic/ph pr-d/codeph ">null</codeph>.
    
    </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IllegalOperationError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IllegalOperationError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Si l’ouverture ou la lecture du fichier est impossible, ou qu’une autre erreur d’accès au fichier survient, une exception indiquant qu’une erreur d’entrée ou de sortie s’est produite dans le fichier est renvoyée. Dans ce cas, la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">data</codeph> est <codeph class="+ topic/ph pr-d/codeph ">null</codeph>.
    
    </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IOError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IOError</apiOperationClassifier></apiException><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Données chargées du fichier, sous forme de ByteArray.
    </apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    L’objet ByteArray représentant les données du fichier chargé après l’aboutissement d’un appel de la méthode <codeph class="+ topic/ph pr-d/codeph ">load()</codeph>.
    
    </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#FileReference/browse()" class="- topic/link "><linktext class="- topic/linktext ">FileReference.browse()</linktext></link><link href="flash.net.xml#FileReference/load()" class="- topic/link "><linktext class="- topic/linktext ">FileReference.load()</linktext></link></related-links></apiValue><apiValue id="flash.net:FileReference:extension:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">extension</apiName><shortdesc class="- topic/shortdesc ">
     Extension du fichier.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Si la référence n’est pas initialisée.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IllegalOperationError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IllegalOperationError</apiOperationClassifier></apiException></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Extension du fichier.
     
     <p class="- topic/p ">L’extension d’un fichier correspond à la partie du nom qui suit le point final (« . »), sans inclure ce dernier. Si le nom du fichier ne comporte aucun point, l’extension est <codeph class="+ topic/ph pr-d/codeph ">null</codeph>.</p>
     
     <p class="- topic/p "><i class="+ topic/ph hi-d/i ">Remarque :</i> vous devez utiliser la propriété <codeph class="+ topic/ph pr-d/codeph ">extension</codeph> pour déterminer le type d’un fichier ; n’utilisez pas les propriétés <codeph class="+ topic/ph pr-d/codeph ">creator</codeph> et <codeph class="+ topic/ph pr-d/codeph ">type</codeph>. Ces propriétés<codeph class="+ topic/ph pr-d/codeph "> </codeph>sont<codeph class="+ topic/ph pr-d/codeph "> </codeph>en effet déconseillées, car elles s’appliquent à d’anciennes versions de Mac OS.</p>
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:FileReference:modificationDate:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">modificationDate</apiName><shortdesc class="- topic/shortdesc ">
   Date de la dernière modification du fichier dans le disque local.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">modificationDate, FileReference.modificationDate
   
   </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Date</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Si l’appel de la méthode <codeph class="+ topic/ph pr-d/codeph ">FileReference.browse()</codeph>, <codeph class="+ topic/ph pr-d/codeph ">FileReferenceList.browse()</codeph> ou <codeph class="+ topic/ph pr-d/codeph ">FileReference.download()</codeph> n’a pas abouti, une exception est renvoyée, accompagnée d’un message indiquant que des fonctions ont été appelées dans un ordre incorrect ou qu’un appel antérieur a échoué. Dans ce cas, la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">modificationDate</codeph> correspond à <codeph class="+ topic/ph pr-d/codeph ">null</codeph>.
   
   </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IllegalOperationError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IllegalOperationError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">S’il est impossible d’accéder aux informations relatives au fichier, une exception indiquant qu’une erreur d’E/S s’est produite sur un fichier est renvoyée.
   
   </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IOError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IOError</apiOperationClassifier></apiException><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Obtient la date de modification du fichier en tant qu’objet Date.
   </apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
   Date de la dernière modification du fichier dans le disque local. Si l’objet FileReference n’a pas été renseigné, l’appel effectué pour obtenir la valeur de cette propriété renvoie <codeph class="+ topic/ph pr-d/codeph ">null</codeph>.
   
   </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#FileReference/browse()" class="- topic/link "><linktext class="- topic/linktext ">FileReference.browse()</linktext></link></related-links></apiValue><apiValue id="flash.net:FileReference:name:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">name</apiName><shortdesc class="- topic/shortdesc ">
   Nom du fichier dans le disque local.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><refpath>
   </refpath></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Si l’appel de la méthode <codeph class="+ topic/ph pr-d/codeph ">FileReference.browse()</codeph>, <codeph class="+ topic/ph pr-d/codeph ">FileReferenceList.browse()</codeph> ou <codeph class="+ topic/ph pr-d/codeph ">FileReference.download()</codeph> n’a pas abouti, une exception est renvoyée, accompagnée d’un message indiquant que des fonctions ont été appelées dans un ordre incorrect ou qu’un appel antérieur a échoué.
   
   </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IllegalOperationError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IllegalOperationError</apiOperationClassifier></apiException><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Obtient le nom du fichier sous forme de chaîne.
   </apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
   Nom du fichier dans le disque local. Si l’objet FileReference n’a pas été renseigné (via un appel valide à <codeph class="+ topic/ph pr-d/codeph ">FileReference.download()</codeph> ou à <codeph class="+ topic/ph pr-d/codeph "> FileReference.browse()</codeph>), Flash Player renvoie une erreur lorsque vous tentez d’obtenir la valeur de cette propriété.
   <p class="- topic/p ">Toutes les propriétés d’un objet FileReference sont renseignées par appel de la méthode <codeph class="+ topic/ph pr-d/codeph ">browse()</codeph>. A la différence des autres propriétés FileReference, si vous appelez la méthode <codeph class="+ topic/ph pr-d/codeph ">download()</codeph>, la propriété <codeph class="+ topic/ph pr-d/codeph ">name</codeph> est renseignée lors de la distribution de l’événement <codeph class="+ topic/ph pr-d/codeph ">select</codeph>.</p>
   
   </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#FileReference/browse()" class="- topic/link "><linktext class="- topic/linktext ">FileReference.browse()</linktext></link></related-links></apiValue><apiValue id="flash.net:FileReference:size:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">size</apiName><shortdesc class="- topic/shortdesc ">
  Taille du fichier dans le disque local, en octets.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><refpath>
  </refpath></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Si l’appel de la méthode <codeph class="+ topic/ph pr-d/codeph ">FileReference.browse()</codeph>, <codeph class="+ topic/ph pr-d/codeph ">FileReferenceList.browse()</codeph> ou <codeph class="+ topic/ph pr-d/codeph ">FileReference.download()</codeph> n’a pas abouti, une exception est renvoyée, accompagnée d’un message indiquant que des fonctions ont été appelées dans un ordre incorrect ou qu’un appel antérieur a échoué.
  
  </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IllegalOperationError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IllegalOperationError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Si l’ouverture ou la lecture du fichier est impossible, ou qu’une autre erreur d’accès au fichier survient, une exception indiquant qu’une erreur d’entrée ou de sortie s’est produite dans le fichier est renvoyée.
  
  </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IOError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IOError</apiOperationClassifier></apiException><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">La taille du fichier en octets.
  </apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
  Taille du fichier dans le disque local, en octets. <ph class="- topic/ph ">Si la propriété <codeph class="+ topic/ph pr-d/codeph ">size</codeph> est définie sur 0, une exception est renvoyée.</ph>
  
  <p class="- topic/p "><i class="+ topic/ph hi-d/i ">Remarque :</i> dans la version initiale d’ActionScript 3.0, la propriété <codeph class="+ topic/ph pr-d/codeph ">size</codeph> était définie en tant qu’objet uint, qui prenait en charge des fichiers pouvant atteindre 4 Go. Elle est désormais désignée comme objet Number afin de prendre en charge des fichiers plus volumineux. </p>
  
  </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#FileReference/browse()" class="- topic/link "><linktext class="- topic/linktext ">FileReference.browse()</linktext></link></related-links></apiValue><apiValue id="flash.net:FileReference:type:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">type</apiName><shortdesc class="- topic/shortdesc ">
  Type de fichier.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">type, FileReference.type
  </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Si l’appel de la méthode <codeph class="+ topic/ph pr-d/codeph ">FileReference.browse()</codeph>, <codeph class="+ topic/ph pr-d/codeph ">FileReferenceList.browse()</codeph> ou <codeph class="+ topic/ph pr-d/codeph ">FileReference.download()</codeph> n’a pas abouti, une exception est renvoyée, accompagnée d’un message indiquant que des fonctions ont été appelées dans un ordre incorrect ou qu’un appel antérieur a échoué. Dans ce cas, la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">type</codeph> correspond à <codeph class="+ topic/ph pr-d/codeph ">null</codeph>.
  
  </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IllegalOperationError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IllegalOperationError</apiOperationClassifier></apiException><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Récupère le type ou l’extension du fichier.
  </apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
  Type de fichier. 
  
  <p class="- topic/p ">Sous Windows ou Linux, cette propriété correspond à l’extension de fichier. Sous Macintosh, cette propriété correspond au type de fichier à quatre caractères, uniquement utilisé dans les versions de Mac OS antérieures à Mac OS X. Si l’objet FileReference n’a pas été renseigné, un appel permettant d’obtenir la valeur de cette propriété renvoie <codeph class="+ topic/ph pr-d/codeph ">null</codeph>.</p>
    
    <p class="- topic/p ">Sous Windows, Linux et Mac OS X, l’extension du fichier, c’est-à-dire la partie de la propriété <codeph class="+ topic/ph pr-d/codeph ">name</codeph> qui suit la dernière occurrence du point (.), permet d’identifier le type de fichier.</p>
    
  </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#FileReference/extension" class="- topic/link "><linktext class="- topic/linktext ">FileReference.extension</linktext></link></related-links></apiValue></apiClassifier><apiClassifier languages="" id="flash.net:FileReferenceList" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">FileReferenceList</apiName><shortdesc class="- topic/shortdesc ">
 La classe FileReferenceList permet aux utilisateurs de sélectionner un ou plusieurs fichiers à charger.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">FileReferenceList
 
 </keyword></asCustoms></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Permet de charger un ou plusieurs fichiers.
 
 </apiTipText></apiTipTexts><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:EventDispatcher</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 La classe FileReferenceList permet aux utilisateurs de sélectionner un ou plusieurs fichiers à charger. Un objet FileReferenceList représente un groupe de fichiers locaux présents dans le disque de l’utilisateur sous forme de tableau d’objets FileReference. Pour obtenir des informations détaillées et les principales caractéristiques relatives aux objets et à la classe FileReference, que vous utilisez avec FileReferenceList, voir la classe FileReference.
 
 <p class="- topic/p ">Pour utiliser la classe FileReferenceList :</p>
 <ul class="- topic/ul "><li class="- topic/li ">Instanciez la classe : <codeph class="+ topic/ph pr-d/codeph ">var myFileRef = new FileReferenceList();</codeph></li><li class="- topic/li ">Appelez la méthode <codeph class="+ topic/ph pr-d/codeph ">FileReferenceList.browse()</codeph>, pour afficher une boîte de dialogue dans laquelle l’utilisateur peut choisir un ou plusieurs fichiers à charger : <codeph class="+ topic/ph pr-d/codeph ">myFileRef.browse();</codeph></li><li class="- topic/li ">Après l’appel de la méthode <codeph class="+ topic/ph pr-d/codeph ">browse()</codeph>, la propriété <codeph class="+ topic/ph pr-d/codeph ">fileList</codeph> de l’objet FileReferenceList est renseignée à l’aide d’un tableau d’objets FileReference.</li><li class="- topic/li ">Appelez <codeph class="+ topic/ph pr-d/codeph ">FileReference.upload()</codeph> sur chaque élément du tableau <codeph class="+ topic/ph pr-d/codeph ">fileList</codeph>.</li></ul>
 
 <p class="- topic/p ">La classe FileReferenceList comprend une méthode <codeph class="+ topic/ph pr-d/codeph ">browse()</codeph> et une propriété <codeph class="+ topic/ph pr-d/codeph ">fileList</codeph> pour travailler avec plusieurs fichiers. Lors de l’exécution d’un appel à la méthode <codeph class="+ topic/ph pr-d/codeph ">FileReferenceList.browse()</codeph>, la lecture du fichier SWF s’interrompt dans les versions autonomes et externes de Flash Player et AIR pour Linux, et Mac OS X version 10.1 et antérieures.</p>
 
 </apiDesc><example conref="examples\FileReferenceListExample.as" class="- topic/example "> L’exemple suivant indique comment utiliser des événements pour gérer le chargement de plusieurs fichiers. La classe CustomFileReferenceList étend FileReferenceList et comprend un événement <codeph class="+ topic/ph pr-d/codeph ">complete</codeph>, distribué au chargement de chaque fichier que contient l’objet FileReferenceList. L’événement <codeph class="+ topic/ph pr-d/codeph ">LIST_COMPLETE</codeph> de la classe FileReferenceListExample est distribué après le chargement de tous les fichiers de l’objet FileReferenceList.
 
 <p class="- topic/p ">Pour exécuter cet exemple, placez un script conçu pour accepter un chargement de fichiers à l’adresse http://www.[yourDomain].com/yourUploadHandlerScript.cfm. Selon l’emplacement de votre fichier SWF et la destination des fichiers à charger, vous aurez peut-être besoin de compiler le fichier SWF avec l’option Protection de lecture locale définie sur Accéder au réseau seulement ou de mettre à jour vos paramètres de sécurité Flash<sup class="+ topic/ph hi-d/sup ">®</sup> Player pour autoriser ce fichier à accéder au réseau. Si le serveur de chargement est distant et que vous exécutez cet exemple depuis votre ordinateur de bureau, assurez-vous que le serveur contienne un fichier crossdomain.xml.</p>
 
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">

package {
    import flash.display.Sprite;
    import flash.events.*;
    import flash.net.FileReference;
    import flash.net.FileReferenceList;
 
    public class FileReferenceListExample extends Sprite {
        public static var LIST_COMPLETE:String = "listComplete";
        public function FileReferenceListExample() {
            initiateFileUpload();
        }

        private function initiateFileUpload():void {
            var fileRef:CustomFileReferenceList = new CustomFileReferenceList();
            fileRef.addEventListener(FileReferenceListExample.LIST_COMPLETE, listCompleteHandler);
            fileRef.browse(fileRef.getTypes());
        }

        private function listCompleteHandler(event:Event):void {
            trace("listCompleteHandler");
        }
    }
}
 
import flash.events.*;
import flash.net.FileReference;
import flash.net.FileReferenceList;
import flash.net.FileFilter;
import flash.net.URLRequest;
 
class CustomFileReferenceList extends FileReferenceList {
    private var uploadURL:URLRequest;
    private var pendingFiles:Array;

    public function CustomFileReferenceList() {
        uploadURL = new URLRequest();
        uploadURL.url = "http://www.[yourDomain].com/yourUploadHandlerScript.cfm";
        initializeListListeners();
    }

    private function initializeListListeners():void {
        addEventListener(Event.SELECT, selectHandler);
        addEventListener(Event.CANCEL, cancelHandler);
    }

    public function getTypes():Array {
        var allTypes:Array = new Array();
        allTypes.push(getImageTypeFilter());
        allTypes.push(getTextTypeFilter());
        return allTypes;
    }
 
    private function getImageTypeFilter():FileFilter {
        return new FileFilter("Images (*.jpg, *.jpeg, *.gif, *.png)", "*.jpg;*.jpeg;*.gif;*.png");
    }
 
    private function getTextTypeFilter():FileFilter {
        return new FileFilter("Text Files (*.txt, *.rtf)", "*.txt;*.rtf");
    }
 
    private function doOnComplete():void {
        var event:Event = new Event(FileReferenceListExample.LIST_COMPLETE);
        dispatchEvent(event);
    }
 
    private function addPendingFile(file:FileReference):void {
        trace("addPendingFile: name=" + file.name);
        pendingFiles.push(file);
        file.addEventListener(Event.OPEN, openHandler);
        file.addEventListener(Event.COMPLETE, completeHandler);
        file.addEventListener(IOErrorEvent.IO_ERROR, ioErrorHandler);
        file.addEventListener(ProgressEvent.PROGRESS, progressHandler);
        file.addEventListener(SecurityErrorEvent.SECURITY_ERROR, securityErrorHandler);
        file.upload(uploadURL);
    }
 
    private function removePendingFile(file:FileReference):void {
        for (var i:uint; i &lt; pendingFiles.length; i++) {
            if (pendingFiles[i].name == file.name) {
                pendingFiles.splice(i, 1);
                if (pendingFiles.length == 0) {
                    doOnComplete();
                }
                return;
            }
        }
    }
 
    private function selectHandler(event:Event):void {
        trace("selectHandler: " + fileList.length + " files");
        pendingFiles = new Array();
        var file:FileReference;
        for (var i:uint = 0; i &lt; fileList.length; i++) {
            file = FileReference(fileList[i]);
            addPendingFile(file);
        }
    }
 
    private function cancelHandler(event:Event):void {
        var file:FileReference = FileReference(event.target);
        trace("cancelHandler: name=" + file.name);
    }
 
    private function openHandler(event:Event):void {
        var file:FileReference = FileReference(event.target);
        trace("openHandler: name=" + file.name);
    }
 
    private function progressHandler(event:ProgressEvent):void {
        var file:FileReference = FileReference(event.target);
        trace("progressHandler: name=" + file.name + " bytesLoaded=" + event.bytesLoaded + " bytesTotal=" + event.bytesTotal);
    }
 
    private function completeHandler(event:Event):void {
        var file:FileReference = FileReference(event.target);
        trace("completeHandler: name=" + file.name);
        removePendingFile(file);
    }
 
    private function httpErrorHandler(event:Event):void {
        var file:FileReference = FileReference(event.target);
        trace("httpErrorHandler: name=" + file.name);
    }
 
    private function ioErrorHandler(event:Event):void {
        var file:FileReference = FileReference(event.target);
        trace("ioErrorHandler: name=" + file.name);
    }
 
    private function securityErrorHandler(event:Event):void {
        var file:FileReference = FileReference(event.target);
        trace("securityErrorHandler: name=" + file.name + " event=" + event.toString());
    }
}
</codeblock></example></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.net.xml#FileReference" class="- topic/link "><linktext class="- topic/linktext ">FileReference</linktext></link></related-links><adobeApiEvent id="flash.net:FileReferenceList_flash.events.Event.SELECT_select" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">select</apiName><shortdesc class="- topic/shortdesc ">
 Distribué lorsque l’utilisateur sélectionne un ou plusieurs fichiers à charger dans la boîte de dialogue de recherche de fichiers.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><maelexample>The following example demonstrates the usage of the <code>select</code> event.
 <listing version="2.0">
 import flash.net.FileReferenceList;
 import flash.net.FileReference;
 
 var listener:Object = new Object();
 
 listener.onSelect = function(fileRefList:FileReferenceList) {
 	trace("onSelect");
 	var list:Array = fileRefList.fileList;
 	var item:FileReference;
 	for(var i:Number = 0; i &lt; list.length; i++) {
 		item = list[i];
 		trace("name: " + item.name);
 		trace(item.addListener(this));
 		item.upload("http://www.yourdomain.com/");
 	}
 }
 
 listener.onComplete = function(file:FileReference):void {
 	trace("onComplete: " + file.name);
 }
 
 var fileRef:FileReferenceList = new FileReferenceList();
 fileRef.addListener(listener);
 fileRef.browse();
 </listing>
 </maelexample></asCustoms></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.Event.SELECT</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.Event</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Distribué lorsque l’utilisateur sélectionne un ou plusieurs fichiers à charger dans la boîte de dialogue de recherche de fichiers (cette boîte de dialogue s’ouvre quand vous appelez la méthode <codeph class="+ topic/ph pr-d/codeph ">FileReferenceList.browse()</codeph>, <codeph class="+ topic/ph pr-d/codeph ">FileReference.browse()</codeph> ou <codeph class="+ topic/ph pr-d/codeph ">FileReference.download()</codeph>). Lorsque l’utilisateur sélectionne un fichier et confirme l’opération (par exemple, en cliquant sur Enregistrer), l’objet <codeph class="+ topic/ph pr-d/codeph ">FileReferenceList</codeph> est renseigné par les objets FileReference représentant les fichiers sélectionnés par l’utilisateur.
 
 </apiDesc></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.net.xml#FileReferenceList/browse()" class="- topic/link "><linktext class="- topic/linktext ">FileReferenceList.browse()</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.net:FileReferenceList_flash.events.Event.CANCEL_cancel" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">cancel</apiName><shortdesc class="- topic/shortdesc ">
 Distribué lorsque l’utilisateur ferme la boîte de dialogue de recherche de fichiers.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><helpid>
 </helpid></asCustoms></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.Event.CANCEL</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.Event</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Distribué lorsque l’utilisateur ferme la boîte de dialogue de recherche de fichiers (cette boîte de dialogue s’ouvre quand vous appelez la méthode <codeph class="+ topic/ph pr-d/codeph ">FileReferenceList.browse()</codeph>, <codeph class="+ topic/ph pr-d/codeph ">FileReference.browse()</codeph> ou <codeph class="+ topic/ph pr-d/codeph ">FileReference.download()</codeph>).
 
 </apiDesc></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.net.xml#FileReferenceList/browse()" class="- topic/link "><linktext class="- topic/linktext ">FileReferenceList.browse()</linktext></link></related-links></adobeApiEvent><apiConstructor id="flash.net:FileReferenceList:FileReferenceList" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">FileReferenceList</apiName><shortdesc class="- topic/shortdesc ">
 	 Crée un nouvel objet FileReferenceList.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><maelexample>The following example creates a new <code>FileReferenceList</code> object,
	 iterates over each selected file, and outputs their names.
	 <listing version="2.0">
	 import flash.net.FileReferenceList;
	 
	 var listener:Object = new Object();
	 listener.onSelect = function(fileRefList:FileReferenceList) {
	 	trace("onSelect");
	 	var arr:Array = fileRefList.fileList;
	 	for(var i:Number = 0; i &lt; arr.length; i++) {
	 		trace("name: " + arr[i].name);
	 	}
	 }
	 
	 var fileRef:FileReferenceList = new FileReferenceList();
	 fileRef.addListener(listener);
	 fileRef.browse();
	 </listing>
  	 
  	 </maelexample></asCustoms></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 	 Crée un nouvel objet FileReferenceList. Tout objet FileReferenceList reste vide tant que vous n’avez pas appelé pour lui la méthode <codeph class="+ topic/ph pr-d/codeph ">browse()</codeph> et que l’utilisateur n’a pas sélectionné de fichiers. Quand vous appelez <codeph class="+ topic/ph pr-d/codeph ">browse()</codeph> sur l’objet FileReference, sa propriété <codeph class="+ topic/ph pr-d/codeph ">fileList</codeph> est renseignée par un tableau d’objets <codeph class="+ topic/ph pr-d/codeph ">FileReference</codeph>.
	 
	 </apiDesc></apiConstructorDetail><related-links class="- topic/related-links "><link href="flash.net.xml#FileReference" class="- topic/link "><linktext class="- topic/linktext ">FileReference</linktext></link><link href="flash.net.xml#FileReferenceList/browse()" class="- topic/link "><linktext class="- topic/linktext ">FileReferenceList.browse()</linktext></link></related-links></apiConstructor><apiOperation id="flash.net:FileReferenceList:browse" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">browse</apiName><shortdesc class="- topic/shortdesc ">
	 Affiche une boîte de dialogue de recherche de fichiers dans laquelle l’utilisateur peut sélectionner un ou plusieurs fichiers locaux à charger.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><oldexample><pre xml:space="preserve" class="- topic/pre ">
	 // ask the user to choose an image file for upload
	 var fileRef = new FileReference();
	 if (fileRef.browse(["Images", "jpg;gif;png", "Flash Movies", "swf"])) {
	   trace("Opened " + fileRef.name);
	 } else {
	   trace("User canceled");
	 }
	 </pre>
	 
	 
	 </oldexample></asCustoms></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Renvoyé dans les cas suivants : 1) Une autre session browse FileReference ou FileReferenceList est en cours. Il est impossible d’exécuter plusieurs sessions de recherche de fichiers simultanément. 2) Un paramètre du fichier mms.cfg de l’utilisateur bloque cette opération. 
	 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IllegalOperationError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IllegalOperationError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Une exception est renvoyée si le tableau <codeph class="+ topic/ph pr-d/codeph ">typeFilter</codeph> contient des objets FileFilter incorrectement formatés. Pour plus d’informations sur le formatage correct des filtres, voir la documentation FileFilter.
	 
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Si la méthode n’est pas appelée en réponse à l’action d’un utilisateur, notamment à un événement de type souris ou pression de touche.
     
	 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">Error</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Error</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Renvoie <codeph class="+ topic/ph pr-d/codeph ">true</codeph> si les paramètres sont valides et que la boîte de dialogue de recherche de fichiers est ouverte.
	 
	 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">typeFilter</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Array</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Tableau d’occurrences de FileFilter utilisé pour filtrer les fichiers qui s’affichent dans la boîte de dialogue. Si vous omettez ce paramètre, tous les fichiers s’affichent. Pour plus d’informations, voir la classe <xref href="FileFilter.html" class="- topic/xref ">FileFilter</xref>. 
	 
	 </apiDesc></apiParam><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Affiche une boîte de dialogue de recherche de fichiers dans laquelle l’utilisateur peut sélectionner des fichiers locaux à charger.
	 
	 </apiTipText></apiTipTexts></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Affiche une boîte de dialogue de recherche de fichiers dans laquelle l’utilisateur peut sélectionner un ou plusieurs fichiers locaux à charger. La boîte de dialogue est spécifique au système d’exploitation de l’utilisateur.
	 
	 <p class="- topic/p ">Dans Flash Player versions 10 et ultérieures, l’appel de cette méthode aboutit uniquement en réponse à un événement utilisateur (par exemple, un événement de type clic de souris ou pression de touche). Dans les autres cas, Flash Player renvoie une erreur à l’appel de cette méthode.</p>
	 
	 <p class="- topic/p ">Lorsque vous appelez cette méthode et que l’utilisateur réussit à sélectionner des fichiers, la propriété <codeph class="+ topic/ph pr-d/codeph ">fileList</codeph> de cet objet FileReferenceList est renseignée par un tableau d’objets FileReference, à raison d’un objet pour chaque fichier sélectionné par l’utilisateur. Par la suite, à chaque appel de la méthode FileReferenceList.browse(), la propriété <codeph class="+ topic/ph pr-d/codeph ">FileReferenceList.fileList</codeph> est réinitialisée en fonction des fichiers sélectionnés par l’utilisateur dans la boîte de dialogue.</p>
	 
	 <p class="- topic/p ">Le paramètre <codeph class="+ topic/ph pr-d/codeph ">typeFilter</codeph> vous permet de déterminer les fichiers répertoriés dans la boîte de dialogue.</p>
	 
	 <p class="- topic/p ">Une seule session <codeph class="+ topic/ph pr-d/codeph ">FileReference.browse()</codeph>, <codeph class="+ topic/ph pr-d/codeph ">FileReference.download()</codeph> ou <codeph class="+ topic/ph pr-d/codeph ">FileReferenceList.browse()</codeph> peut être effectuée à la fois sur un objet FileReferenceList (car une seule boîte de dialogue peut être ouverte à la fois).</p>
	 
	 </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#FileReference/browse()" class="- topic/link "><linktext class="- topic/linktext ">FileReference.browse()</linktext></link><link href="flash.net.xml#FileReference" class="- topic/link "><linktext class="- topic/linktext ">Classe FileReference</linktext></link><link href="flash.net.xml#FileFilter" class="- topic/link "><linktext class="- topic/linktext ">FileFilter, classe</linktext></link></related-links><adobeApiEvent id="flash.net:FileReferenceList:browse_select" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">select</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:Event</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Appelé quand l’utilisateur réussit à sélectionner un élément à charger dans la boîte de dialogue.
	 </apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">Appelé quand l’utilisateur réussit à sélectionner un élément à charger dans la boîte de dialogue.</shortdesc></adobeApiEvent><adobeApiEvent id="flash.net:FileReferenceList:browse_cancel" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">cancel</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:Event</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Appelé quand l’utilisateur quitte la boîte de dialogue en cliquant sur Annuler ou en la fermant.
	 
	 </apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">Appelé quand l’utilisateur quitte la boîte de dialogue en cliquant sur Annuler ou en la fermant.</shortdesc></adobeApiEvent></apiOperation><apiValue id="flash.net:FileReferenceList:fileList:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">fileList</apiName><shortdesc class="- topic/shortdesc ">
	 Un tableau d’objets FileReference.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><oldexample>The following example demonstrates the <code>fileList</code> property.
	 <listing version="2.0">
	 import flash.net.FileReferenceList;
	 import flash.net.FileReference;
	 
	 var listener:Object = new Object();
	 listener.onSelect = function(fileRefList:FileReferenceList) {
	 	trace("onSelect");
	 	var list:Array = fileRefList.fileList;
	 	var item:FileReference;
	 	for(var i:Number = 0; i &lt; list.length; i++) {
	 		item = list[i];
	 		trace("name: " + item.name);
	 	}
	 }
	 
	 var fileRef:FileReferenceList = new FileReferenceList();
	 fileRef.addListener(listener);
	 fileRef.browse();
	 </listing>
	 
	 </oldexample></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Array</apiValueClassifier><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Un tableau d’objets FileReference.
	 
	 </apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Tableau d’objets <codeph class="+ topic/ph pr-d/codeph ">FileReference</codeph>.
	 
	 <p class="- topic/p ">Quand la méthode <codeph class="+ topic/ph pr-d/codeph ">FileReferenceList.browse()</codeph> est appelée et que l’utilisateur a sélectionné un ou plusieurs fichiers dans la boîte de dialogue ouverte par la méthode <codeph class="+ topic/ph pr-d/codeph ">browse()</codeph>, cette propriété est renseignée par un tableau d’objets FileReference qui représentent les fichiers que l’utilisateur a sélectionnés. Vous pouvez ensuite utiliser ce tableau pour charger les fichiers par le biais de la méthode <codeph class="+ topic/ph pr-d/codeph ">FileReference.upload()</codeph>. Vous devez charger les fichiers un par un.</p>
	 
	 <p class="- topic/p ">La propriété <codeph class="+ topic/ph pr-d/codeph ">fileList</codeph> est renseignée à nouveau à chaque appel de la méthode browse() sur cet objet FileReferenceList.</p>
	 
	 <p class="- topic/p ">Les propriétés des objets <codeph class="+ topic/ph pr-d/codeph ">FileReference</codeph> sont décrites dans la documentation relative à la classe FileReference.</p>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#FileReference" class="- topic/link "><linktext class="- topic/linktext ">FileReference</linktext></link><link href="flash.net.xml#FileReference/upload()" class="- topic/link "><linktext class="- topic/linktext ">FileReference.upload()</linktext></link><link href="flash.net.xml#FileReferenceList/browse()" class="- topic/link "><linktext class="- topic/linktext ">FileReferenceList.browse()</linktext></link></related-links></apiValue></apiClassifier><apiClassifier languages="" id="flash.net:NetworkInterface" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">NetworkInterface</apiName><shortdesc class="- topic/shortdesc ">
 La classe NetworkInterface décrit une interface réseau.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 La classe NetworkInterface décrit une interface réseau.
 
 <p class="- topic/p ">Vous pouvez obtenir une liste des interfaces réseau en appelant la méthode <codeph class="+ topic/ph pr-d/codeph ">findInterfaces()</codeph> d’un objet NetworkInfo.</p>
 
 </apiDesc><example conref="examples\NetworkInterfaceExample.as" class="- topic/example "/></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetworkInfo" class="- topic/link "><linktext class="- topic/linktext ">NetworkInfo</linktext></link><link href="flash.net.xml#InterfaceAddress" class="- topic/link "><linktext class="- topic/linktext ">InterfaceAddress</linktext></link></related-links><apiValue id="flash.net:NetworkInterface:active:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">active</apiName><shortdesc class="- topic/shortdesc ">
     Indique si cette interface est active.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Indique si cette interface est active.
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:NetworkInterface:addresses:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">addresses</apiName><shortdesc class="- topic/shortdesc ">
     Liste des adresses liées à cette interface réseau.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiType value="Vector$flash.net:InterfaceAddress" name="type" class="- topic/state reference/state apiRef/apiType "/></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Liste des adresses liées à cette interface réseau.
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:NetworkInterface:displayName:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">displayName</apiName><shortdesc class="- topic/shortdesc ">
     Nom d’affichage de cette interface réseau.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Nom d’affichage de cette interface réseau.
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:NetworkInterface:hardwareAddress:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">hardwareAddress</apiName><shortdesc class="- topic/shortdesc ">
     Adresse matérielle de cette interface réseau.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Adresse matérielle de cette interface réseau.
     
     <p class="- topic/p ">L’adresse matérielle correspond généralement à l’adresse MAC (Media Access Control, contrôle d’accès au média) de l’adaptateur ou de la carte réseau.</p>
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:NetworkInterface:mtu:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">mtu</apiName><shortdesc class="- topic/shortdesc ">
     Unité de transmission maximale (UTM) de cette interface réseau.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">int</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Unité de transmission maximale (UTM) de cette interface réseau. 
     
     <p class="- topic/p ">Si la valeur <codeph class="+ topic/ph pr-d/codeph ">mtu</codeph> est <codeph class="+ topic/ph pr-d/codeph ">-1</codeph>, l’UTM actuelle est inconnue.</p>
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:NetworkInterface:name:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">name</apiName><shortdesc class="- topic/shortdesc ">
     Nom de cette interface réseau.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Nom de cette interface réseau.
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:NetworkInterface:parent:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">parent</apiName><shortdesc class="- topic/shortdesc ">
     Objet NetworkInterface représentant l’interface parent (si cette interface a un parent).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.net:NetworkInterface</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Objet NetworkInterface représentant l’interface parent (si cette interface a un parent).
     
     <p class="- topic/p ">Cette interface peut avoir un parent s’il s’agit d’une sous-interface. La propriété <codeph class="+ topic/ph pr-d/codeph ">parent</codeph> est définie sur <codeph class="+ topic/ph pr-d/codeph ">null</codeph> si cette interface n’a pas de parent.</p>
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:NetworkInterface:subInterfaces:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">subInterfaces</apiName><shortdesc class="- topic/shortdesc ">
     Liste des sous-interfaces associées à cette interface réseau.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiType value="Vector$flash.net:NetworkInterface" name="type" class="- topic/state reference/state apiRef/apiType "/></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Liste des sous-interfaces associées à cette interface réseau.
     
     <p class="- topic/p ">Les sous-interfaces sont souvent des interfaces virtuelles. La propriété <codeph class="+ topic/ph pr-d/codeph ">subInterfaces</codeph> est définie sur <codeph class="+ topic/ph pr-d/codeph ">null</codeph> si cette interface ne possède aucune sous-interface.</p>
     </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.net:SharedObjectFlushStatus" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">SharedObjectFlushStatus</apiName><shortdesc class="- topic/shortdesc ">
 La classe SharedObjectFlushStatus fournit des valeurs pour le code renvoyé par un appel à la méthode SharedObject.flush().</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 La classe SharedObjectFlushStatus fournit des valeurs pour le code renvoyé par un appel à la méthode <codeph class="+ topic/ph pr-d/codeph ">SharedObject.flush()</codeph>.
 
 </apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.net.xml#SharedObject/flush()" class="- topic/link "><linktext class="- topic/linktext ">SharedObject.flush()</linktext></link></related-links><apiValue id="flash.net:SharedObjectFlushStatus:FLUSHED" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">FLUSHED</apiName><shortdesc class="- topic/shortdesc ">
 Indique que la purge s’est bien terminée.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">flushed</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Indique que la purge s’est bien terminée.
 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#SharedObject/flush()" class="- topic/link "><linktext class="- topic/linktext ">SharedObject.flush()</linktext></link></related-links></apiValue><apiValue id="flash.net:SharedObjectFlushStatus:PENDING" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">PENDING</apiName><shortdesc class="- topic/shortdesc ">
 Indique que l’utilisateur a été invité à augmenter l’espace disque pour l’objet partagé avant la purge.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">pending</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Indique que l’utilisateur a été invité à augmenter l’espace disque pour l’objet partagé avant la purge.
 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#SharedObject/flush()" class="- topic/link "><linktext class="- topic/linktext ">SharedObject.flush()</linktext></link></related-links></apiValue></apiClassifier><apiClassifier languages="" id="flash.net:SecureSocket" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">SecureSocket</apiName><shortdesc class="- topic/shortdesc ">
 La classe SecureSocket permet au code d’établir des connexions socket à l’aide des protocoles SSL (Secure Sockets Layer) et TLS (Transport Layer Security). </shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.net:Socket</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 La classe SecureSocket permet au code d’établir des connexions socket à l’aide des protocoles SSL (Secure Sockets Layer) et TLS (Transport Layer Security).  
 
 <p class="- topic/p "><i class="+ topic/ph hi-d/i ">Prise en charge du profil AIR :</i> cette fonctionnalité est prise en charge sur tous les systèmes d’exploitation de bureau, mais ne l’est pas sur tous les périphériques AIR pour TV. Elle n’est pas prise en charge sur les périphériques mobiles. Vous pouvez tester la prise en charge lors de l’exécution à l’aide de la propriété <codeph class="+ topic/ph pr-d/codeph ">SecureSocket.isSupported</codeph>. Voir <xref href="http://help.adobe.com/en_US/air/build/WS144092a96ffef7cc16ddeea2126bb46b82f-8000.html" class="- topic/xref ">Prise en charge du profil AIR</xref> pour plus d’informations sur la prise en charge de l’API dans plusieurs profils.</p>
 
 <p class="- topic/p ">Les protocoles SSL/TLS fournissent un mécanisme grâce auquel il est possible d’authentifier l’identité d’un hôte par le biais de son certificat et offrent une communication chiffrée sur le socket. SSLv3 et TLSv1 sont pris en charge. Le certificat de serveur est validé à l’aide du magasin d’approbations et de la fonction de validation de certificat de la plate-forme client.</p> 
 
 <p class="- topic/p ">La classe SecureSocket ne se connecte aux serveurs qu’avec des certificats valides et approuvés. Vous ne pouvez pas vous connecter à un serveur si son certificat pose problème. Par exemple, il est impossible de se connecter à un serveur avec un certificat périmé ou avec un certificat qui n’est pas lié à un certificat racine approuvé, même si ce certificat serait valide dans d’autres cas.</p>
 
 <p class="- topic/p ">La classe SecureSocket est utile pour établir la communication chiffrée à un serveur approuvé. A d’autres égards, un objet SecureSocket se comporte comme un objet Socket standard.</p>
 
 <p class="- topic/p ">Pour utiliser les méthodes de la classe SecureSocket, utilisez tout d’abord le constructeur, <codeph class="+ topic/ph pr-d/codeph ">new SecureSocket()</codeph>, pour créer un objet SecureSocket. Lorsque vous vous connectez à un serveur, le certificat de serveur est validé. Si le certificat est validé et approuvé, la connexion est établie et le socket distribue un événement <codeph class="+ topic/ph pr-d/codeph ">connect</codeph>. S’il est impossible de valider le certificat, le socket distribue un événement <codeph class="+ topic/ph pr-d/codeph ">IOError</codeph>.</p>
 
 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Important :</b> le protocole OCSP (Online Certificate Status Protocol) n’est pas pris en charge sur tous les systèmes d’exploitation. Les utilisateurs peuvent également désactiver la vérification OCSP sur des ordinateurs individuels. Si le protocole OCSP n’est pas pris en charge ou s’il est désactivé et si un certificat ne contient pas les informations nécessaires permettant de vérifier la révocation à l’aide d’une liste de révocation de certificats, la révocation des certificats n’est pas vérifiée. Le certificat est accepté s’il est valide. Cela pourrait autoriser un serveur à utiliser un certificat révoqué.</p>
 
 </apiDesc><example conref="examples\SecureSocketExample.as" class="- topic/example "> L’exemple suivant explique comment créer et connecter un objet SecureSocket.
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">package
{
    import flash.display.Sprite;
    import flash.errors.IOError;
    import flash.events.Event;
    import flash.events.IOErrorEvent;
    import flash.net.SecureSocket;
    
    public class SecureSocketExample extends Sprite
    {
        private var secureSocket:SecureSocket = new SecureSocket();
        
        public function SecureSocketExample()
        {
            secureSocket.addEventListener( Event.CONNECT, onConnect )
            secureSocket.addEventListener( IOErrorEvent.IO_ERROR, onError );
            
            try
            {
                secureSocket.connect( "208.77.188.166", 443 );
            }
            catch ( error:Error )
            {
                trace ( error.toString() );
            }
        }
        
        private function onConnect( event:Event ):void
        {
            trace("Connected.");
        }
        
        private function onError( error:IOErrorEvent ):void
        {
            trace( error.text + ", " + secureSocket.serverCertificateStatus );
        }
    }
}
</codeblock></example></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.net.xml#Socket" class="- topic/link "><linktext class="- topic/linktext ">Classe Socket</linktext></link></related-links><adobeApiEvent id="flash.net:SecureSocket_flash.events.ProgressEvent.SOCKET_DATA_socketData" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">socketData</apiName><shortdesc class="- topic/shortdesc ">
 Distribué lorsqu’un socket a reçu des données.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.ProgressEvent.SOCKET_DATA</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.ProgressEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Distribué lorsqu’un socket a reçu des données. Les événements de type <codeph class="+ topic/ph pr-d/codeph ">socketData</codeph> n’utilisent pas la propriété <codeph class="+ topic/ph pr-d/codeph ">ProgressEvent.bytesTotal</codeph>. 
 
 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flash.net:SecureSocket_flash.events.IOErrorEvent.IO_ERROR_ioError" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">ioError</apiName><shortdesc class="- topic/shortdesc ">
 Distribué lorsqu’il se produit une erreur d’entrée ou de sortie entraînant l’échec d’une opération d’envoi ou de réception.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.IOErrorEvent.IO_ERROR</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.IOErrorEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Distribué lorsqu’il se produit une erreur d’entrée ou de sortie entraînant l’échec d’une opération d’envoi ou de réception.
 
 <p class="- topic/p ">Lorsqu’il s’avère impossible de valider un certificat de serveur, l’événement d’erreur distribué est de type IOError. Dans ce cas, vous pouvez vérifier la propriété <codeph class="+ topic/ph pr-d/codeph ">serverCertificateStatus</codeph> pour déterminer la cause du problème.</p>
  
 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flash.net:SecureSocket_flash.events.Event.CONNECT_connect" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">connect</apiName><shortdesc class="- topic/shortdesc ">
 Distribué lorsqu’une connexion réseau est établie.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.Event.CONNECT</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.Event</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Distribué lorsqu’une connexion réseau est établie. 
 
 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flash.net:SecureSocket_flash.events.Event.CLOSE_close" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">close</apiName><shortdesc class="- topic/shortdesc ">
 Distribué lorsque le serveur ferme la connexion socket.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.Event.CLOSE</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.Event</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Distribué lorsque le serveur ferme la connexion socket. 
 
 <p class="- topic/p ">L’événement <codeph class="+ topic/ph pr-d/codeph ">close</codeph> se produit uniquement lorsque le serveur ferme la connexion. Il n’est pas distribué lorsque vous appelez la méthode <codeph class="+ topic/ph pr-d/codeph ">SecureSocket.close()</codeph>.</p>
 
 </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="flash.net:SecureSocket:SecureSocket" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">SecureSocket</apiName><shortdesc class="- topic/shortdesc ">
    Crée un nouvel objet SecureSocket.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Cette erreur se produit lorsque SSLv3 ou TLSv1 n’est pas pris en charge.
	
    </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IllegalOperationError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IllegalOperationError</apiOperationClassifier></apiException></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Crée un nouvel objet SecureSocket.
	
	<p class="- topic/p ">Vérifiez <codeph class="+ topic/ph pr-d/codeph ">SecureSocket.isSupported</codeph> avant toute tentative de création d’une occurrence de SecureSocket. Si le socket SSLv3 ou TLSv1 n’est pas pris en charge, le moteur d’exécution renvoie une erreur IllegalOperationError.</p>
    
	</apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="flash.net:SecureSocket:connect" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">connect</apiName><shortdesc class="- topic/shortdesc ">
     Connecte le socket à l’hôte et au port spécifiés à l’aide du protocole SSL ou TLS.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><internal>BRS compare this entire description with XMLSocket.connect() and make consistent
     </internal></asCustoms></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiIsOverride class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiIsOverride "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Aucun hôte n’a été spécifié et la connexion a échoué.
	 
	 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IOError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IOError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Cette erreur se produit si vous spécifiez un port de socket inférieur à zéro ou supérieur à 65535.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">SecurityError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">SecurityError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">host</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Nom ou adresse IP de l’hôte auquel la connexion doit être établie. 
     
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">port</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Numéro du port auquel établir la connexion.
     
     </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Connecte le socket à l’hôte et au port spécifiés à l’aide du protocole SSL ou TLS.
     
     <p class="- topic/p ">Lorsque vous appelez la méthode <codeph class="+ topic/ph pr-d/codeph ">connect()</codeph>, le certificat de serveur est validé. Si la connexion SSL/TLS aboutit, et si le certificat est valide et approuvé, la connexion est établie et le socket distribue un événement <codeph class="+ topic/ph pr-d/codeph ">connect</codeph>. Si la connexion échoue ou s’il est impossible de valider le certificat, le socket distribue un événement <codeph class="+ topic/ph pr-d/codeph ">IOError</codeph>. Vous pouvez vérifier les résultats de validation du certificat en lisant la propriété <codeph class="+ topic/ph pr-d/codeph ">serverCertificateStatus</codeph> après la distribution de l’un de ces événements. (Lorsqu’un événement <codeph class="+ topic/ph pr-d/codeph ">connect</codeph> est distribué, l’état du certificat est toujours <codeph class="+ topic/ph pr-d/codeph ">approuvé</codeph>.)</p>
	 
     <p class="- topic/p ">Si le socket est déjà connecté, la connexion existante est d’abord fermée.</p>
     
     </apiDesc></apiOperationDetail><adobeApiEvent id="flash.net:SecureSocket:connect_connect" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">connect</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:Event</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Distribué lorsqu’une connexion réseau est établie.
     </apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">Distribué lorsqu’une connexion réseau est établie.</shortdesc></adobeApiEvent><adobeApiEvent id="flash.net:SecureSocket:connect_ioError" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">ioError</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:IOErrorEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Distribué lorsqu’un hôte est spécifié et qu’il se produit une erreur d’entrée/sortie entraînant l’échec de la connexion. Il peut s’agir d’erreurs de communication SSL/TLS et de tout échec de validation du certificat de serveur de l’hôte.
	 
     </apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">Distribué lorsqu’un hôte est spécifié et qu’il se produit une erreur d’entrée/sortie entraînant l’échec de la connexion. </shortdesc></adobeApiEvent></apiOperation><apiValue id="flash.net:SecureSocket:isSupported:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">isSupported</apiName><shortdesc class="- topic/shortdesc ">
     Indique si les sockets sécurisés sont pris en charge sur le système actuel.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Indique si les sockets sécurisés sont pris en charge sur le système actuel.
     
     <p class="- topic/p ">Les sockets sécurisés ne sont pas pris en charge sur toutes les plates-formes. Vérifiez cette propriété avant toute tentative de création d’une nouvelle occurrence de SecureSocket.</p>
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:SecureSocket:serverCertificateStatus:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">serverCertificateStatus</apiName><shortdesc class="- topic/shortdesc ">
     Etat du certificat du serveur.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Etat du certificat du serveur.
     
     <p class="- topic/p ">L’état est <codeph class="+ topic/ph pr-d/codeph ">CertificateStatus.UNKNOWN</codeph> jusqu’à ce que le socket tente d’établir une connexion à un serveur. Après validation, l’état est l’une des chaînes énumérées par la classe CertificateStatus. La connexion aboutit uniquement lorsque le certificat est validé et approuvé. Par conséquent, après un événement <codeph class="+ topic/ph pr-d/codeph ">connect</codeph>, l’état est toujours <codeph class="+ topic/ph pr-d/codeph ">approuvé</codeph>. </p>
     
     <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Remarque :</b> une fois le certificat validé ou rejeté, la valeur d’état n’est pas mise à jour jusqu’au prochain appel de la méthode <codeph class="+ topic/ph pr-d/codeph ">connect()</codeph>. L’appel de la méthode <codeph class="+ topic/ph pr-d/codeph ">close()</codeph> ne rétablit pas l’état sur la valeur « unknown ».</p>
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.security.xml#CertificateStatus" class="- topic/link "><linktext class="- topic/linktext ">Classe CertificateStatus</linktext></link></related-links></apiValue></apiClassifier><apiClassifier languages="" id="flash.net:ServerSocket" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">ServerSocket</apiName><shortdesc class="- topic/shortdesc ">
 La classe ServerSocket permet au code d’agir comme un serveur pour les connexions TCP (Transport Control Protocol, protocole de contrôle de transmission).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:EventDispatcher</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 La classe ServerSocket permet au code d’agir comme un serveur pour les connexions TCP (Transport Control Protocol, protocole de contrôle de transmission). 
 
 <p class="- topic/p "><i class="+ topic/ph hi-d/i ">Prise en charge du profil AIR :</i> cette fonctionnalité est prise en charge sur tous les systèmes d’exploitation de bureau, mais ne l’est pas sur les périphériques mobiles ou les périphériques AIR pour TV. Vous pouvez tester la prise en charge lors de l’exécution à l’aide de la propriété <codeph class="+ topic/ph pr-d/codeph ">ServerSocket.isSupported</codeph>. Voir <xref href="http://help.adobe.com/en_US/air/build/WS144092a96ffef7cc16ddeea2126bb46b82f-8000.html" class="- topic/xref ">Prise en charge du profil AIR</xref> pour plus d’informations sur la prise en charge de l’API dans plusieurs profils.</p>
 
 <p class="- topic/p ">Un serveur TCP écoute les connexions entrantes de clients distants. Lorsqu’un client tente de se connecter, l’objet ServerSocket distribue un événement <codeph class="+ topic/ph pr-d/codeph ">connect</codeph>. L’objet ServerSocketConnectEvent distribué pour l’événement fournit un objet Socket représentant la connexion TCP entre le serveur et le client. Utilisez cet objet Socket pour les communications suivantes avec le client connecté. Le cas échéant, l’objet Socket peut vous fournir l’adresse et le port du client.</p> 
 
 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Remarque :</b> votre application est chargée de maintenir une référence à l’objet Socket du client. Dans le cas contraire, l’objet peut être nettoyé et détruit par le moteur d’exécution sans avertissement.</p>
 
 <p class="- topic/p ">Pour placer un objet ServerSocket en état d’écoute, appelez la méthode <codeph class="+ topic/ph pr-d/codeph ">listen()</codeph>. En état d’écoute, l’objet ServerSocket distribue des événements <codeph class="+ topic/ph pr-d/codeph ">connect</codeph> dès qu’un client qui utilise le protocole TCP tente de se connecter à l’adresse et au port liés. L’objet ServerSocket continue d’écouter les connexions jusqu’à ce que vous appeliez la méthode <codeph class="+ topic/ph pr-d/codeph ">close()</codeph>.</p>
 
 <p class="- topic/p ">Les connexions TCP sont continues. Elles sont maintenues jusqu’à ce que l’un des côtés de la connexion la ferme (ou en cas d’échec réseau grave). Toutes les données envoyées via la connexion sont divisées en paquets transmissibles, puis reconstituées à l’autre extrémité de la connexion. Dans la limite du possible, tous les paquets sont transmis et tous les paquets perdus sont retransmis. En général, le protocole TCP gère mieux la bande passante réseau disponible que le protocole UDP. La plupart des applications AIR qui nécessitent des communications socket doivent utiliser les classes ServerSocket et Socket plutôt que la classe DatagramSocket.</p>
 
 <p class="- topic/p ">La classe ServerSocket peut être utilisée uniquement dans les applications d’Adobe AIR et uniquement dans le sandbox de sécurité de l’application.</p>
 
 <p class="- topic/p ">Pour plus d’informations concernant la sécurité, voir la rubrique du Pôle de développement Flash Player : <xref href="http://www.adobe.com/go/devnet_security_fr" scope="external" class="- topic/xref ">Sécurité</xref> (disponible en anglais uniquement).</p>
 
 </apiDesc><example conref="examples\ServerSocketExample.as" class="- topic/example "> L’exemple suivant crée un serveur socket. Pour utiliser le serveur, liez le socket à un port local, puis connectez-vous à ce port à partir d’une autre application. Le serveur interprète uniquement les chaînes UTF-8.
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
package
{
    import flash.display.Sprite;
    import flash.events.Event;
    import flash.events.MouseEvent;
    import flash.events.ProgressEvent;
    import flash.events.ServerSocketConnectEvent;
    import flash.net.ServerSocket;
    import flash.net.Socket;
    import flash.text.TextField;
    import flash.text.TextFieldType;
    import flash.utils.ByteArray;
        
    public class ServerSocketExample extends Sprite
    {
        private var serverSocket:ServerSocket = new ServerSocket();
        private var clientSocket:Socket;

        private var localIP:TextField;
        private var localPort:TextField;
        private var logField:TextField;
        private var message:TextField;

        public function ServerSocketExample()
        {
            setupUI();
        }
        
        private function onConnect( event:ServerSocketConnectEvent ):void
        {
            clientSocket = event.socket;
            clientSocket.addEventListener( ProgressEvent.SOCKET_DATA, onClientSocketData );
            log( "Connection from " + clientSocket.remoteAddress + ":" + clientSocket.remotePort );
        }
        
        private function onClientSocketData( event:ProgressEvent ):void
        {
            var buffer:ByteArray = new ByteArray();
            clientSocket.readBytes( buffer, 0, clientSocket.bytesAvailable );
            log( "Received: " + buffer.toString() );
        }

        private function bind( event:Event ):void
        {
            if( serverSocket.bound ) 
            {
                serverSocket.close();
                serverSocket = new ServerSocket();
                
            }
            serverSocket.bind( parseInt( localPort.text ), localIP.text );
            serverSocket.addEventListener( ServerSocketConnectEvent.CONNECT, onConnect );
            serverSocket.listen();
            log( "Bound to: " + serverSocket.localAddress + ":" + serverSocket.localPort );
        }
        
        private function send( event:Event ):void
        {
            try
            {
                if( clientSocket != null &amp;&amp; clientSocket.connected )
                {
                    clientSocket.writeUTFBytes( message.text );
                    clientSocket.flush(); 
                    log( "Sent message to " + clientSocket.remoteAddress + ":" + clientSocket.remotePort );
                }
                else log("No socket connection.");
            }
            catch ( error:Error )
            {
                log( error.message );
            }
        }

        private function log( text:String ):void
        {
            logField.appendText( text + "\n" );
            logField.scrollV = logField.maxScrollV;
            trace( text );
        }

        private function setupUI():void
        {
            localIP = createTextField( 10, 10, "Local IP", "0.0.0.0");
            localPort = createTextField( 10, 35, "Local port", "0" );
            createTextButton( 170, 60, "Bind", bind );
            message = createTextField( 10, 85, "Message", "Lucy can't drink milk." );
            createTextButton( 170, 110, "Send", send );
            logField = createTextField( 10, 135, "Log", "", false, 200 )
            
            this.stage.nativeWindow.activate();
        }
        
        private function createTextField( x:int, y:int, label:String, defaultValue:String = '', editable:Boolean = true, height:int = 20 ):TextField
        {
            var labelField:TextField = new TextField();
            labelField.text = label;
            labelField.type = TextFieldType.DYNAMIC;
            labelField.width = 100;
            labelField.x = x;
            labelField.y = y;
            
            var input:TextField = new TextField();
            input.text = defaultValue;
            input.type = TextFieldType.INPUT;
            input.border = editable;
            input.selectable = editable;
            input.width = 280;
            input.height = height;
            input.x = x + labelField.width;
            input.y = y;
            
            this.addChild( labelField );
            this.addChild( input );
            
            return input;
        }
        
        private function createTextButton( x:int, y:int, label:String, clickHandler:Function ):TextField
        {
            var button:TextField = new TextField();
            button.htmlText = "&lt;u>&lt;b>" + label + "&lt;/b>&lt;/u>";
            button.type = TextFieldType.DYNAMIC;
            button.selectable = false;
            button.width = 180;
            button.x = x;
            button.y = y;
            button.addEventListener( MouseEvent.CLICK, clickHandler );
            
            this.addChild( button );
            return button;
        }        
    }
}
</codeblock></example></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.events.xml#ServerSocketConnectEvent" class="- topic/link "><linktext class="- topic/linktext ">Classe ServerSocketConnectEvent</linktext></link><link href="flash.net.xml#Socket" class="- topic/link "><linktext class="- topic/linktext ">Classe Socket</linktext></link><link href="flash.net.xml#XMLSocket" class="- topic/link "><linktext class="- topic/linktext ">Classe XMLSocket</linktext></link><link href="flash.net.xml#DatagramSocket" class="- topic/link "><linktext class="- topic/linktext ">Classe DatagramSocket</linktext></link></related-links><adobeApiEvent id="flash.net:ServerSocket_flash.events.ServerSocketConnectEvent.CONNECT_connect" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">connect</apiName><shortdesc class="- topic/shortdesc ">
 Distribué lorsqu’un socket distant tente de se connecter au socket de ce serveur.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.ServerSocketConnectEvent.CONNECT</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.ServerSocketConnectEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Distribué lorsqu’un socket distant tente de se connecter au socket de ce serveur.
 
 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flash.net:ServerSocket_flash.events.Event.CLOSE_close" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">close</apiName><shortdesc class="- topic/shortdesc ">
 Distribué lorsque le système d’exploitation ferme ce socket.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.Event.CLOSE</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.Event</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Distribué lorsque le système d’exploitation ferme ce socket.
  
 <p class="- topic/p ">L’événement <codeph class="+ topic/ph pr-d/codeph ">close</codeph> n’est pas distribué lorsque la méthode <codeph class="+ topic/ph pr-d/codeph ">close()</codeph> de l’objet ServerSocket est appelée. Si d’autres objets dans votre application reposent sur l’événement <codeph class="+ topic/ph pr-d/codeph ">close</codeph>, vous pouvez distribuer l’événement manuellement avant d’appeler la méthode <codeph class="+ topic/ph pr-d/codeph ">close()</codeph>.</p>
 
 </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="flash.net:ServerSocket:ServerSocket" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">ServerSocket</apiName><shortdesc class="- topic/shortdesc ">
     Crée un objet ServerSocket.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Cette erreur se produit si le contenu appelant est exécuté hors du sandbox de sécurité de l’application AIR.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">SecurityError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">SecurityError</apiOperationClassifier></apiException></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Crée un objet ServerSocket.
     
     </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="flash.net:ServerSocket:bind" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">bind</apiName><shortdesc class="- topic/shortdesc ">
     Lie ce socket à l’adresse et au port locaux spécifiés.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Cette erreur se produit lorsque le paramètre <codeph class="+ topic/ph pr-d/codeph ">localPort</codeph> est défini sur une valeur inférieure à 0 ou supérieure à 65535.
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">RangeError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">RangeError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Cette erreur se produit lorsque <codeph class="+ topic/ph pr-d/codeph ">localAddress</codeph> n’est pas une adresse IP syntaxiquement correcte.
     
    </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">S’il est impossible de lier le socket, notamment lorsque :
     <ul class="- topic/ul "><li class="- topic/li ">Le socket réseau sous-jacent (IP et port) est déjà lié par un autre objet ou processus.</li><li class="- topic/li ">L’application est exécutée sous un compte utilisateur qui ne dispose pas des privilèges nécessaires pour se lier à ce port. Les problèmes de privilèges se produisent généralement lorsque vous tentez d’effectuer la liaison à des ports connus (<codeph class="+ topic/ph pr-d/codeph ">localPort</codeph> &lt; 1024).</li><li class="- topic/li ">Cet objet ServerSocket est déjà lié. (Appelez <codeph class="+ topic/ph pr-d/codeph ">close()</codeph> avant de procéder à la liaison à un autre socket.)</li><li class="- topic/li ">Lorsque <codeph class="+ topic/ph pr-d/codeph ">localAddress</codeph> n’est pas une adresse locale valide.</li></ul>
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IOError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IOError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">localPort</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Numéro de port auquel se relier sur l’ordinateur local. Si <codeph class="+ topic/ph pr-d/codeph ">localPort</codeph> est définie sur 0 (valeur par défaut), le prochain port système disponible est lié. L’autorisation de se connecter à un numéro de port inférieur à 1024 est soumise à la stratégie de protection du système. Sous Mac et Linux, par exemple, l’application doit être exécutée avec des privilèges racines pour se connecter aux ports inférieurs à 1024.
     
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">localAddress</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0.0.0.0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Adresse IP sur la machine locale à laquelle se relier. Cette adresse peut être une adresse IPv4 ou une adresse IPv6. Si le paramètre <codeph class="+ topic/ph pr-d/codeph ">localAddress</codeph> est défini sur <codeph class="+ topic/ph pr-d/codeph ">0.0.0.0</codeph> (valeur par défaut), le socket écoute toutes les adresses IPv4 disponibles. Pour écouter toutes les adresses IPv6, vous devez spécifier "::" comme argument de <codeph class="+ topic/ph pr-d/codeph ">localAddress</codeph>. Pour utiliser une adresse IPv6, l’ordinateur et le réseau doivent tous deux être configurés de façon à prendre en charge le protocole IPv6. En outre, un socket lié à une adresse IPv4 ne peut pas se connecter à un socket avec une adresse IPv6. De même, un socket lié à une adresse IPv6 ne peut pas se connecter à un socket avec une adresse IPv4. Le type d’adresse doit correspondre.
     
     </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Lie ce socket à l’adresse et au port locaux spécifiés.
     
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.net:ServerSocket:close" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">close</apiName><shortdesc class="- topic/shortdesc ">
     Ferme le socket et cesse d’écouter les connexions.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Cette erreur se produit s’il s’avère impossible de fermer le socket ou si ce dernier n’a pas été ouvert.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">Error</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Error</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Ferme le socket et cesse d’écouter les connexions.
     
	 <p class="- topic/p ">Vous ne pouvez pas rouvrir les sockets fermés. Créez plutôt une nouvelle occurrence de ServerSocket.</p>
	 
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.net:ServerSocket:listen" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">listen</apiName><shortdesc class="- topic/shortdesc ">
     Lance l’écoute des connexions TCP entrantes sur l’adresse IP et le port liés.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Cette erreur se produit si le socket n’est pas ouvert ou lié. Cette erreur se produit si l’appel à <codeph class="+ topic/ph pr-d/codeph ">listen()</codeph> échoue pour toute autre raison.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IOError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IOError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Cette erreur se produit si le paramètre <codeph class="+ topic/ph pr-d/codeph ">backlog</codeph> est inférieur à zéro.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">RangeError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">RangeError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">backlog</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Longueur maximale de la file d’attente des connexions en attente. Si le paramètre <codeph class="+ topic/ph pr-d/codeph ">backlog</codeph> est défini sur 0, la longueur de la file est définie sur la valeur système maximale.
     
     </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Lance l’écoute des connexions TCP entrantes sur l’adresse IP et le port liés.
     
     <p class="- topic/p ">La méthode <codeph class="+ topic/ph pr-d/codeph ">listen()</codeph> est immédiatement renvoyée. Lorsque vous appelez <codeph class="+ topic/ph pr-d/codeph ">listen()</codeph>, l’objet ServerSocket distribue un événement <codeph class="+ topic/ph pr-d/codeph ">connect</codeph> à chaque tentative de connexion. La propriété <codeph class="+ topic/ph pr-d/codeph ">socket</codeph> de l’objet d’événement ServerSocketConnectEvent fait référence à un objet Socket représentant la connexion serveur-client.</p>
     
     <p class="- topic/p ">Le paramètre <codeph class="+ topic/ph pr-d/codeph ">backlog</codeph> indique le nombre de connexions placées en file d’attente pendant que votre application traite les événements <codeph class="+ topic/ph pr-d/codeph ">connect</codeph>. Si la file d’attente est pleine, d’autres connexions sont refusées sans qu’un événement <codeph class="+ topic/ph pr-d/codeph ">connect</codeph> ne soit distribué. Si la valeur par défaut de zéro est spécifiée, la longueur maximale de la file d’attente définie par le système est utilisée. Cette longueur varie en fonction de la plate-forme et peut être configurée sur chaque poste de travail. Si la valeur spécifiée dépasse la longueur maximale autorisée par le système, la longueur maximale définie par le système est utilisée. Il n’existe aucun moyen de connaître la valeur actuelle du paramètre backlog. (La valeur maximale définie par le système est déterminée par le paramètre SOMAXCONN du sous-système de réseau TCP sur l’ordinateur hôte.)</p>
     
     </apiDesc></apiOperationDetail></apiOperation><apiValue id="flash.net:ServerSocket:bound:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">bound</apiName><shortdesc class="- topic/shortdesc ">
     Indique si le socket est lié à une adresse et à un port locaux.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Indique si le socket est lié à une adresse et à un port locaux.
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#ServerSocket/bind()" class="- topic/link "><linktext class="- topic/linktext ">bind()</linktext></link></related-links></apiValue><apiValue id="flash.net:ServerSocket:isSupported:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">isSupported</apiName><shortdesc class="- topic/shortdesc ">
     Indique si les fonctions ServerSocket sont prises en charge dans l’environnement d’exécution.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Indique si les fonctions ServerSocket sont prises en charge dans l’environnement d’exécution.
     
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:ServerSocket:listening:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">listening</apiName><shortdesc class="- topic/shortdesc ">
     Indique si le socket du serveur écoute les connexions entrantes.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Indique si le socket du serveur écoute les connexions entrantes.
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#ServerSocket/listen()" class="- topic/link "><linktext class="- topic/linktext ">listen()</linktext></link></related-links></apiValue><apiValue id="flash.net:ServerSocket:localAddress:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">localAddress</apiName><shortdesc class="- topic/shortdesc ">
     Adresse IP via laquelle le socket écoute.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Adresse IP via laquelle le socket écoute.
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#ServerSocket/bind()" class="- topic/link "><linktext class="- topic/linktext ">bind()</linktext></link></related-links></apiValue><apiValue id="flash.net:ServerSocket:localPort:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">localPort</apiName><shortdesc class="- topic/shortdesc ">
     Port via lequel le socket écoute.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">int</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Port via lequel le socket écoute.
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#ServerSocket/bind()" class="- topic/link "><linktext class="- topic/linktext ">bind()</linktext></link></related-links></apiValue></apiClassifier><apiClassifier languages="" id="flash.net:FileFilter" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">FileFilter</apiName><shortdesc class="- topic/shortdesc ">
 La classe FileFilter permet d’indiquer quels fichiers du système utilisateur sont répertoriés dans la boîte de dialogue de recherche de fichiers qui s’affiche lors de l’appel de la méthode FileReference.browse(), de la méthode FileReferenceList.browse(), ou d’une méthode de recherche d’un objet File, FileReference ou FileReferenceList.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 La classe FileFilter permet d’indiquer quels fichiers du système utilisateur sont répertoriés dans la boîte de dialogue de recherche de fichiers qui s’affiche lors de l’appel de la méthode <codeph class="+ topic/ph pr-d/codeph ">FileReference.browse()</codeph>, de la méthode <codeph class="+ topic/ph pr-d/codeph ">FileReferenceList.browse()</codeph>, ou d’une méthode de recherche d’un objet File, FileReference ou FileReferenceList. Les occurrences de FileFilter sont transmises à la méthode comme une valeur du paramètre facultatif <codeph class="+ topic/ph pr-d/codeph ">typeFilter</codeph>. Si vous utilisez une occurrence de FileFilter, les extensions et les types de fichiers qu’elle ne spécifie pas sont omis. En d’autres termes, les utilisateurs ne peuvent pas les sélectionner. Si aucun objet FileFilter n’est transmis à la méthode, tous les fichiers sont répertoriés dans la boîte de dialogue.
 
 <p class="- topic/p ">Vous pouvez utiliser les occurrences de FileFilter de deux façons :</p>
 
 <ul class="- topic/ul "><li class="- topic/li ">Une description avec les extensions de fichier uniquement.</li><li class="- topic/li ">Une description avec les extensions de fichier et les types de fichiers Macintosh.</li></ul>
 
 <p class="- topic/p ">Ces deux formats ne sont pas interchangeables dans le même appel de la méthode browse. Vous devez utiliser l’un ou l’autre.</p>
 
 <p class="- topic/p ">Vous pouvez transmettre une ou plusieurs occurrences de FileFilter à la méthode browse, comme dans l’exemple suivant :</p>
 
 <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
 var imagesFilter:FileFilter = new FileFilter("Images", "~~.jpg;~~.gif;~~.png");
 var docFilter:FileFilter = new FileFilter("Documents", "~~.pdf;~~.doc;~~.txt");
 var myFileReference:FileReference = new FileReference();
 myFileReference.browse([imagesFilter, docFilter]);
 </codeblock>
 
 <p class="- topic/p ">Dans le cas d’une application AIR :</p>
 
 <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
 var imagesFilter:FileFilter = new FileFilter("Images", "~~.jpg;~~.gif;~~.png");
 var docFilter:FileFilter = new FileFilter("Documents", "~~.pdf;~~.doc;~~.txt");
 var myFile:File = new File();
 myFile.browseForOpen("Open", [imagesFilter, docFilter]);
 </codeblock>
 
 
 
 <p class="- topic/p ">La liste des extensions dans la propriété <codeph class="+ topic/ph pr-d/codeph ">FileFilter.extension</codeph> est utilisée pour filtrer les fichiers affichés dans la boîte de dialogue de recherche de fichiers. Cette liste n’est pas réellement affichée dans la boîte de dialogue. Pour afficher les types de fichiers aux utilisateurs, vous devez énumérer les types de fichiers dans la chaîne descriptive, ainsi que dans la liste d’extensions. Sous Windows et Linux, la chaîne descriptive est affichée dans la boîte de dialogue (elle n’est pas utilisée sous Macintosh <sup class="+ topic/ph hi-d/sup ">®</sup>). Sous Macintosh, une liste de types de fichier Macintosh est utilisée pour filtrer les fichiers, si vous la fournissez. Si elle n’est pas fournie, la liste d’extensions de fichier est utilisée par défaut. </p> 
 
 </apiDesc></apiClassifierDetail><apiConstructor id="flash.net:FileFilter:FileFilter" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">FileFilter</apiName><shortdesc class="- topic/shortdesc ">
	 Crée une occurrence de FileFilter.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">description</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Chaîne de description qui s’affiche lorsque les utilisateurs sélectionnent des fichiers à charger.
	 
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">extension</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Liste des extensions indiquant quels formats de fichier s’affichent lorsque les utilisateurs sélectionnent des fichiers à charger.
	 
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">macType</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Liste des types de fichiers Macintosh indiquant ceux qui s’affichent lorsque les utilisateurs sélectionnent des fichiers à charger. Si aucune valeur n’est transmise, ce paramètre est réglé sur <codeph class="+ topic/ph pr-d/codeph ">null</codeph>.
	 
	 </apiDesc></apiParam></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Crée une occurrence de FileFilter.
	 </apiDesc><example conref="examples\FileFilter.as" class="- topic/example "> L’exemple suivant charge une image à partir de votre système de fichiers local sur l’objet d’affichage racine (dans ce cas, la scène). Exemple fourni par <xref href="http://blog.andrevenancio.com/" scope="external" class="- topic/xref ">André Venancio</xref> (disponible en anglais uniquement).
 
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
var buttonShape:Shape = new Shape();
buttonShape.graphics.beginFill(0x336699);
buttonShape.graphics.drawCircle(50, 50, 25);
var button = new SimpleButton(buttonShape, buttonShape, buttonShape, buttonShape);
addChild(button);

var fileRef:FileReference= new FileReference();
button.addEventListener(MouseEvent.CLICK, onButtonClick);

function onButtonClick(e:MouseEvent):void {
fileRef.browse([new FileFilter("Images", "*.jpg;*.gif;*.png")]);
fileRef.addEventListener(Event.SELECT, onFileSelected);
}

function onFileSelected(e:Event):void {
fileRef.addEventListener(Event.COMPLETE, onFileLoaded);
fileRef.load();
}

function onFileLoaded(e:Event):void {
var loader:Loader = new Loader();
loader.loadBytes(e.target.data);
addChild(loader);
}
</codeblock></example></apiConstructorDetail></apiConstructor><apiValue id="flash.net:FileFilter:description:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">description</apiName><shortdesc class="- topic/shortdesc ">
	 Chaîne de description du filtre.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Chaîne de description du filtre. La description apparaît à l’utilisateur dans la boîte de dialogue qui s’affiche lors d’un appel de <codeph class="+ topic/ph pr-d/codeph ">FileReference.browse()</codeph> ou <codeph class="+ topic/ph pr-d/codeph ">FileReferenceList.browse()</codeph>. Elle contient une chaîne, telle que <codeph class="+ topic/ph pr-d/codeph ">Images (~~.gif, ~~.jpg, ~~.png)</codeph>, qui indique à l’utilisateur les types de fichiers qu’il peut charger ou télécharger. Sachez que les types de fichiers qui sont pris en charge par cet objet FileReference sont stockés dans la propriété <codeph class="+ topic/ph pr-d/codeph ">extension</codeph>.
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:FileFilter:extension:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">extension</apiName><shortdesc class="- topic/shortdesc ">
	 Liste d’extensions de fichier.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Liste d’extensions de fichier. Cette liste répertorie les types de fichiers à afficher dans la boîte de dialogue de recherche de fichiers (la liste n’apparaît pas à l’utilisateur, qui voit uniquement la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">description</codeph>). La propriété <codeph class="+ topic/ph pr-d/codeph ">extension</codeph> contient une liste d’extensions de fichier délimitées par des points-virgules et précédées d’un caractère générique (~~), comme suit : <codeph class="+ topic/ph pr-d/codeph ">~~.jpg;~~.gif;~~.png</codeph>.
	 
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:FileFilter:macType:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">macType</apiName><shortdesc class="- topic/shortdesc ">
	 Liste de types de fichiers Macintosh.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Liste de types de fichiers Macintosh. Cette liste répertorie les types de fichiers à afficher dans la boîte de dialogue de recherche de fichiers (la liste n’apparaît pas à l’utilisateur, qui voit uniquement la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">description</codeph>). La propriété <codeph class="+ topic/ph pr-d/codeph ">macType</codeph> contient une liste de types de fichiers Macintosh délimités par des points-virgules, comme suit : <codeph class="+ topic/ph pr-d/codeph ">JPEG;jp2_;GIFF</codeph>.
	 
	 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.net:URLRequest" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">URLRequest</apiName><shortdesc class="- topic/shortdesc ">
  La classe URLRequest capture toutes les informations dans une même requête HTTP.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><internal>The above include is not a mistake, but rather code re-use.
 
  </internal></asCustoms></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
  La classe URLRequest capture toutes les informations dans une même requête HTTP. Les objets URLRequest sont transmis aux méthodes <codeph class="+ topic/ph pr-d/codeph ">load()</codeph> des classes Loader, URLStream et URLLoader et autres opérations de chargement pour lancer les téléchargements d’URL. Ils sont également transmis aux méthodes <codeph class="+ topic/ph pr-d/codeph ">upload()</codeph> et <codeph class="+ topic/ph pr-d/codeph ">download()</codeph> de la classe FileReference.
 
  <p class="- topic/p ">Un fichier SWF du sandbox local avec système de fichiers risque de ne pas charger des données depuis une ressource située dans le sandbox réseau, ni lui en fournir. </p>
 
  <p class="- topic/p ">Par défaut, le fichier <ph class="- topic/ph ">SWF </ph>appelant et l’URL chargée doivent se trouver dans le même domaine. Par exemple, un fichier <ph class="- topic/ph ">SWF </ph>à l’adresse www.adobe.com peut charger uniquement des données provenant de sources situées également à l’adresse www.adobe.com. <ph class="- topic/ph ">Pour charger des données à partir d’un autre domaine, placez un fichier de régulation d’URL sur le serveur hébergeant les données.</ph></p>
 
  <p class="- topic/p "> Néanmoins, dans Adobe AIR, le contenu du sandbox de sécurité de l’application (contenu installé avec l’application AIR) n’est pas soumis à ces restrictions de sécurité. Dans le cas de contenu s’exécutant dans Adobe AIR, les fichiers du sandbox de sécurité de l’application peuvent accéder aux URL à l’aide de l’un des modèles d’URL suivants :</p>

  
 
 <ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">http</codeph> et <codeph class="+ topic/ph pr-d/codeph ">https</codeph> </li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">file</codeph> </li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">app-storage</codeph> </li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">à partir</codeph> </li></ul>
 
  <p class="- topic/p ">Le contenu <ph class="- topic/ph ">qui s’exécute dans Adobe AIR et </ph>qui n’est pas dans le sandbox de sécurité de l’application observe les mêmes restrictions que le contenu qui s’exécute dans le navigateur<ph class="- topic/ph "> (dans Flash Player)</ph>, et le chargement est régi par le domaine du contenu<ph class="- topic/ph "> et par les autorisations accordées dans les fichiers de régulation d’URL</ph>.</p>
 
 <p class="- topic/p ">Pour plus d’informations concernant la sécurité, voir la rubrique du Pôle de développement Flash Player : <xref href="http://www.adobe.com/go/devnet_security_fr" scope="external" class="- topic/xref ">Sécurité</xref> (disponible en anglais uniquement).</p>
 
 
 </apiDesc><example conref="examples\URLRequestExample.as" class="- topic/example "> L’exemple suivant crée un nouvel objet Loader et lui transmet un objet URLRequest contenant le chemin vers un fichier XML. Si le chargement réussit, un événement <codeph class="+ topic/ph pr-d/codeph ">complete</codeph> est distribué et les données du fichier XML sont écrites dans le résultat. Des gestionnaires d’événement supplémentaires capturent d’autres événements, y compris des événements d’erreur.
 <p class="- topic/p ">Pour exécuter cet exemple, placez un fichier nommé XMLFile.xml dans le même répertoire que votre fichier SWF.</p>
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">

package {
    import flash.display.Sprite;
    import flash.events.*;
    import flash.net.*;

    public class URLRequestExample extends Sprite {

        public function URLRequestExample() {
            var loader:URLLoader = new URLLoader();
            configureListeners(loader);

            var request:URLRequest = new URLRequest("XMLFile.xml");
            try {
                loader.load(request);
            } catch (error:Error) {
                trace("Unable to load requested document.");
            }
        }

        private function configureListeners(dispatcher:IEventDispatcher):void {
            dispatcher.addEventListener(Event.COMPLETE, completeHandler);
            dispatcher.addEventListener(Event.OPEN, openHandler);
            dispatcher.addEventListener(ProgressEvent.PROGRESS, progressHandler);
            dispatcher.addEventListener(SecurityErrorEvent.SECURITY_ERROR, securityErrorHandler);
            dispatcher.addEventListener(HTTPStatusEvent.HTTP_STATUS, httpStatusHandler);
            dispatcher.addEventListener(IOErrorEvent.IO_ERROR, ioErrorHandler);
        }

        private function completeHandler(event:Event):void {
            var loader:URLLoader = URLLoader(event.target);
            trace("completeHandler: " + loader.data);
        }

        private function openHandler(event:Event):void {
            trace("openHandler: " + event);
        }

        private function progressHandler(event:ProgressEvent):void {
            trace("progressHandler loaded:" + event.bytesLoaded + " total: " + event.bytesTotal);
        }

        private function securityErrorHandler(event:SecurityErrorEvent):void {
            trace("securityErrorHandler: " + event);
        }

        private function httpStatusHandler(event:HTTPStatusEvent):void {
            trace("httpStatusHandler: " + event);
        }

        private function ioErrorHandler(event:IOErrorEvent):void {
            trace("ioErrorHandler: " + event);
        }
    }
}
</codeblock></example></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.net.xml#FileReference" class="- topic/link "><linktext class="- topic/linktext ">FileReference</linktext></link><link href="flash.net.xml#URLRequestHeader" class="- topic/link "><linktext class="- topic/linktext ">URLRequestHeader</linktext></link><link href="flash.net.xml#URLRequestDefaults" class="- topic/link "><linktext class="- topic/linktext ">URLRequestDefaults</linktext></link><link href="flash.net.xml#URLLoader" class="- topic/link "><linktext class="- topic/linktext ">URLLoader</linktext></link><link href="flash.net.xml#URLStream" class="- topic/link "><linktext class="- topic/linktext ">URLStream</linktext></link><link href="../../flash/html/HTMLLoader.html" class="- topic/link "><linktext class="- topic/linktext ">Classe HTMLLoader</linktext></link></related-links><apiConstructor id="flash.net:URLRequest:URLRequest" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">URLRequest</apiName><shortdesc class="- topic/shortdesc ">
     Crée un objet URLRequest.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">url</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">URL à demander. Vous pourrez définir l’URL ultérieurement à l’aide de la propriété <codeph class="+ topic/ph pr-d/codeph ">url</codeph>.
     
     </apiDesc></apiParam></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Crée un objet URLRequest. Si <codeph class="+ topic/ph pr-d/codeph ">System.useCodePage</codeph> correspond à <codeph class="+ topic/ph pr-d/codeph ">true</codeph>, la requête est codée via la page de code système, plutôt que le format Unicode. Si <codeph class="+ topic/ph pr-d/codeph ">System.useCodePage</codeph> correspond à <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, la requête est codée via le format Unicode, plutôt que la page de code système.
     
     </apiDesc><example conref="examples\URLRequest_example.as" class="- topic/example "> L’exemple suivant indique comment ouvrir de nouvelles fenêtres de navigateur à partir de Flash Player à l’aide de la méthode navigateToURL(). Exemple fourni par <xref href="http://actionscriptexamples.com/2008/12/08/opening-urls-in-new-browser-windows-using-actionscript-30-and-actionscript-20/" scope="_mmexternal" class="- topic/xref ">ActionScriptExamples.com</xref>. 
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
// Requires
// - Button symbol on Stage (or a display object, such as a MovieClip) with instance name "buttonSymbol"
//
buttonSymbol.addEventListener(MouseEvent.CLICK, buttonSymbol_click);
 
function buttonSymbol_click(evt:MouseEvent):void {
    var req:URLRequest = new URLRequest("http://www.adobe.com/");
    navigateToURL(req, "_blank");
}
</codeblock></example></apiConstructorDetail><related-links class="- topic/related-links "><link href="flash.system.xml#System/useCodePage" class="- topic/link "><linktext class="- topic/linktext ">flash.system.System.useCodePage</linktext></link></related-links></apiConstructor><apiValue id="flash.net:URLRequest:authenticate:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">authenticate</apiName><shortdesc class="- topic/shortdesc ">
    Indique si les requêtes d’authentification doivent être traitées (true) ou non (false) pour cette requête.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">L’appelant ne se trouve pas dans le sandbox de sécurité de l’application AIR.
    
    </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">SecurityError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">SecurityError</apiOperationClassifier></apiException><apiDefaultValue>true
    </apiDefaultValue><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Indique si les requêtes d’authentification doivent être traitées ou non.
    
    </apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Indique si les requêtes d’authentification de cette requête doivent être traitées (<codeph class="+ topic/ph pr-d/codeph ">true</codeph>) ou non (<codeph class="+ topic/ph pr-d/codeph ">false</codeph>). Si la valeur est <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, les requêtes d’authentification renvoient une erreur HTTP.
    
    <p class="- topic/p ">Les méthodes d’authentification prises en charge sont les suivantes :</p>
    
    <ul class="- topic/ul "><li class="- topic/li ">Windows : authentification HTTP de base/Digest, authentification intégrée de Windows (authentifications NTLM et Kerberos comprises), authentification de certificats SSL.</li><li class="- topic/li ">Mac : authentification HTTP de base/Digest, NTLM, authentification de certificats SSL.</li></ul>
    
    <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Remarque</b> : les méthodes <codeph class="+ topic/ph pr-d/codeph ">FileReference.upload()</codeph>, <codeph class="+ topic/ph pr-d/codeph ">FileReference.download()</codeph> et <codeph class="+ topic/ph pr-d/codeph ">HTMLLoader.load()</codeph> ne prennent pas en charge la propriété <codeph class="+ topic/ph pr-d/codeph ">URLRequest.authenticate</codeph>.</p>
    
    </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#URLRequestDefaults/authenticate" class="- topic/link "><linktext class="- topic/linktext ">flash.net.URLRequestDefaults.authenticate</linktext></link></related-links></apiValue><apiValue id="flash.net:URLRequest:cacheResponse:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">cacheResponse</apiName><shortdesc class="- topic/shortdesc ">
    Indique si les données de réponse satisfaisantes doivent être mises en mémoire cache pour cette requête.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">L’appelant ne se trouve pas dans le sandbox de sécurité de l’application AIR.
    
    </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">SecurityError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">SecurityError</apiOperationClassifier></apiException><apiDefaultValue>true
    
    </apiDefaultValue></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Indique si les données de réponse satisfaisantes doivent être mises en mémoire cache pour cette requête. Lorsque la valeur <codeph class="+ topic/ph pr-d/codeph ">true</codeph> est définie, l’application AIR utilise le cache HTTP du système d’exploitation.
    
    <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Remarque</b> : la méthode <codeph class="+ topic/ph pr-d/codeph ">HTMLLoader.load()</codeph> ne prend pas en charge la propriété <codeph class="+ topic/ph pr-d/codeph ">URLRequest.cacheResponse</codeph>.</p>
    
    </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#URLRequestDefaults/cacheResponse" class="- topic/link "><linktext class="- topic/linktext ">flash.net.URLRequestDefaults.cacheResponse</linktext></link></related-links></apiValue><apiValue id="flash.net:URLRequest:contentType:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">contentType</apiName><shortdesc class="- topic/shortdesc ">
     Type MIME du contenu dans la propriété data.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Type de contenu MIME dans la propriété data.
     
     </apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Type MIME du contenu dans la propriété <codeph class="+ topic/ph pr-d/codeph ">data</codeph>.
     
     <p class="- topic/p ">La valeur par défaut est <codeph class="+ topic/ph pr-d/codeph ">application/x-www-form-urlencoded</codeph>.</p>
     
     <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Remarque</b> : les méthodes <codeph class="+ topic/ph pr-d/codeph ">FileReference.upload()</codeph>, <codeph class="+ topic/ph pr-d/codeph ">FileReference.download()</codeph> et <codeph class="+ topic/ph pr-d/codeph ">HTMLLoader.load()</codeph> ne prennent pas en charge la propriété <codeph class="+ topic/ph pr-d/codeph ">URLRequest.contentType</codeph>.</p>
     
     <p class="- topic/p ">Lors de l’envoi d’une requête POST, les valeurs des propriétés <codeph class="+ topic/ph pr-d/codeph ">contentType</codeph> et <codeph class="+ topic/ph pr-d/codeph ">data</codeph> doivent correctement correspondre. La valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">contentType</codeph> explique aux serveurs comment interpréter la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">data.</codeph> </p>
     
     <ul class="- topic/ul "><li class="- topic/li ">Si la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">data</codeph> est un objet URLVariables, la valeur de <codeph class="+ topic/ph pr-d/codeph ">contentType</codeph> doit être <codeph class="+ topic/ph pr-d/codeph ">application/x-www-form-urlencoded</codeph>. </li><li class="- topic/li "> Si la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">data</codeph> est d’un autre type, la valeur de <codeph class="+ topic/ph pr-d/codeph ">contentType</codeph> doit indiquer le type des données POST à envoyer (données binaires ou de chaîne contenues dans la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">data).</codeph> </li><li class="- topic/li ">Pour <codeph class="+ topic/ph pr-d/codeph ">FileReference.upload()</codeph>, le Content-Type de la requête est automatiquement défini sur <codeph class="+ topic/ph pr-d/codeph ">multipart/form-data</codeph>, et la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">contentType</codeph> est ignorée.</li></ul>
     
     <p class="- topic/p "> Dans Flash Player versions 10 et ultérieures, si vous utilisez un Content-Type en plusieurs parties (par exemple « multipart/form-data ») qui contient un chargement (indiqué par un paramètre « filename » dans un en-tête « content-disposition » au sein du corps POST), l’opération POST est soumise aux règles de sécurité appliquées aux chargements :</p>
     <ul class="- topic/ul "><li class="- topic/li ">L’opération POST doit être effectuée en réponse à l’action d’un utilisateur, comme un clic de souris ou la pression d’une touche.</li><li class="- topic/li ">Si l’opération POST se fait entre plusieurs domaines (la cible POST ne se trouve pas sur le même serveur que le fichier SWF qui envoie la demande POST), le serveur cible doit fournir un fichier de régulation d’URL qui permette l’accès interdomaines.</li></ul>
     <p class="- topic/p ">Par ailleurs, la syntaxe de tous les Content-Type en plusieurs parties doit être correcte (selon la norme RFC2046). Si la syntaxe s’avère incorrecte, l’opération POST est soumise aux règles de sécurité appliquées aux chargements.</p>
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#URLRequest/data" class="- topic/link "><linktext class="- topic/linktext ">data</linktext></link></related-links></apiValue><apiValue id="flash.net:URLRequest:data:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">data</apiName><shortdesc class="- topic/shortdesc ">
     Objet contenant des données à transmettre avec la demande d’URL.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Object</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Objet contenant des données à transmettre avec la demande d’URL.
     
     <p class="- topic/p ">Cette propriété s’utilise en combinaison avec la propriété <codeph class="+ topic/ph pr-d/codeph ">method</codeph>. Lorsque la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">method</codeph> est <codeph class="+ topic/ph pr-d/codeph ">GET</codeph>, la valeur de <codeph class="+ topic/ph pr-d/codeph ">data</codeph> est ajoutée à la valeur de <codeph class="+ topic/ph pr-d/codeph ">URLRequest.url</codeph>, avec une syntaxe de chaîne de requête HTTP. Lorsque la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">method</codeph> est <codeph class="+ topic/ph pr-d/codeph ">POST</codeph> (ou autre que <codeph class="+ topic/ph pr-d/codeph ">GET</codeph>), la valeur de <codeph class="+ topic/ph pr-d/codeph ">data</codeph> est transmise dans le corps de la requête HTTP.</p>
     
     <p class="- topic/p ">L’API URLRequest offre une prise en charge <codeph class="+ topic/ph pr-d/codeph ">POST</codeph> binaire et gère les variables de code URL, ainsi que les chaînes. Les objets de données peuvent être des objets ByteArray, URLVariables ou String.</p>
     
     <p class="- topic/p ">L’utilisation des données varie en fonction du type d’objet :</p>
     
     <ul class="- topic/ul "><li class="- topic/li ">Si l’objet est de type ByteArray, les données binaires correspondantes sont utilisées en tant que données <codeph class="+ topic/ph pr-d/codeph ">POST</codeph>. <codeph class="+ topic/ph pr-d/codeph ">GET</codeph> ne gère pas les données de type ByteArray. En outre, ces données ne sont pas prises en charge par <codeph class="+ topic/ph pr-d/codeph ">FileReference.upload()</codeph> et <codeph class="+ topic/ph pr-d/codeph ">FileReference.download()</codeph>.</li><li class="- topic/li ">Si l’objet est de type URLVariables et que la méthode est <codeph class="+ topic/ph pr-d/codeph ">POST</codeph>, les variables sont codées au format <i class="+ topic/ph hi-d/i ">x-www-form-urlencoded</i> et la chaîne résultante sert de données <codeph class="+ topic/ph pr-d/codeph ">POST</codeph>. Un appel de <codeph class="+ topic/ph pr-d/codeph ">FileReference.upload()</codeph> constitue une exception : les variables sont incluses en tant que champs distincts dans un envoi <codeph class="+ topic/ph pr-d/codeph ">multipart/form-data</codeph>.</li><li class="- topic/li ">Si l’objet est de type URLVariables et que la méthode correspond à <codeph class="+ topic/ph pr-d/codeph ">GET</codeph>, l’objet définit des variables à envoyer avec l’objet URLRequest.</li><li class="- topic/li ">Dans tous les autres cas, l’objet est converti en une chaîne, qui est utilisée comme données <codeph class="+ topic/ph pr-d/codeph ">POST</codeph> ou <codeph class="+ topic/ph pr-d/codeph ">GET</codeph>.</li></ul>
     
     <p class="- topic/p ">Les données ne sont pas envoyées tant qu’une méthode, telle que <codeph class="+ topic/ph pr-d/codeph ">navigateToURL()</codeph> ou <codeph class="+ topic/ph pr-d/codeph ">FileReference.upload()</codeph>, utilise l’objet URLRequest.</p>
     
     <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Remarque</b> : la valeur de <codeph class="+ topic/ph pr-d/codeph ">contentType</codeph> doit correspondre au type de données défini dans la propriété <codeph class="+ topic/ph pr-d/codeph ">data</codeph>. Consultez la remarque de la description de la propriété <codeph class="+ topic/ph pr-d/codeph ">contentType</codeph>.</p>
     
     </apiDesc><example conref="examples\URLVariablesExample.as" class="- topic/example "> L’exemple suivant ouvre l’application distante hébergée à l’adresse http://www.[yourDomain].com/application.jsp dans une nouvelle fenêtre de navigateur et transmet à l’application des données relatives à une session utilisateur, capturées dans un objet URLVariables. 
  
 <p class="- topic/p ">Vous trouverez ci-dessous des extraits de l’exemple :</p>
 <ol class="- topic/ol "><li class="- topic/li ">La fonction constructeur crée une occurrence de URLRequest nommée <codeph class="+ topic/ph pr-d/codeph ">request</codeph>, en utilisant l’URL de l’application distante comme paramètre.</li><li class="- topic/li ">Un objet URLVariables est créé et des valeurs sont attribuées à deux de ses propriétés.</li><li class="- topic/li ">L’objet URLVariables est affecté à la propriété <codeph class="+ topic/ph pr-d/codeph ">data</codeph> de l’objet URLRequest.</li><li class="- topic/li ">L’exemple appelle <codeph class="+ topic/ph pr-d/codeph ">navigateToURL</codeph>, qui ouvre une nouvelle fenêtre de navigateur vers l’URL de l’application distante.</li></ol>
 <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Remarque :</b> pour exécuter l’exemple, l’URL de l’application distante de l’exemple doit être remplacée par une URL opérationnelle. En outre, du code serveur serait nécessaire pour traiter les informations capturées par Flash Player dans l’objet URLVariables.</p>
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
package {
    import flash.display.Sprite;
    import flash.net.navigateToURL;
    import flash.net.URLRequest;
    import flash.net.URLVariables;

    public class URLVariablesExample extends Sprite {

        public function URLVariablesExample() {
            var url:String = "http://www.[yourDomain].com/application.jsp";
            var request:URLRequest = new URLRequest(url);
            var variables:URLVariables = new URLVariables();
            variables.exampleSessionId = new Date().getTime();
            variables.exampleUserLabel = "guest";
            request.data = variables;
            navigateToURL(request);
        }
    }
}
</codeblock></example></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#URLRequest/method" class="- topic/link "><linktext class="- topic/linktext ">URLRequest.method</linktext></link><link href="flash.net.xml#URLRequestMethod" class="- topic/link "><linktext class="- topic/linktext ">URLRequestMethod</linktext></link><link href="flash.net.xml#URLVariables" class="- topic/link "><linktext class="- topic/linktext ">URLVariables</linktext></link><link href="flash.utils.xml#ByteArray" class="- topic/link "><linktext class="- topic/linktext ">flash.utils.ByteArray</linktext></link><link href="flash.net.xml#URLRequest/contentType" class="- topic/link "><linktext class="- topic/linktext ">contentType</linktext></link></related-links></apiValue><apiValue id="flash.net:URLRequest:digest:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">digest</apiName><shortdesc class="- topic/shortdesc ">
     Chaîne qui identifie de façon unique le composant de la plateforme Adobe signé devant être enregistré dans (ou extrait de) la mémoire cache de Flash Player.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9.0.115.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Le résumé fourni ne correspond pas à celui du fichier extrait à partir du fichier signé téléchargé ou du fichier signé chargé hors de la mémoire cache. L’application renvoie également cette erreur si le résumé fourni est de longueur incorrecte ou s’il contient des caractères non valides (non hexadécimaux).
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Chaîne qui identifie de façon unique le composant de la plateforme Adobe signé devant être enregistré dans (ou extrait de) la mémoire cache de Flash Player. <ph class="- topic/ph ">Un composant de la plateforme Adobe est un fichier signé (un fichier SWZ) qui renferme le contenu SWF mis en cache de façon permanente sur l’ordinateur d’un utilisateur. Tous les fichiers SWZ sont signés par Adobe. Un résumé correspond à un seul fichier mis en cache ; si vous modifiez ce fichier de quelque manière que ce soit, son résumé risque de subir des modifications imprévisibles. L’utilisation d’un résumé vous permet de vérifier le fichier mis en cache dans plusieurs domaines. Deux fichiers possédant le même résumé correspondent au même fichier ; ce n’est pas le cas lorsque deux fichiers possèdent des résumés différents. Il est pratiquement impossible de créer un fichier pour « espionner » un résumé et prétendre en être un autre. </ph>
     
     <p class="- topic/p ">Le résumé est basé sur un algorithme Digest sécurisé SHA-256 (64 caractères en notation hexadécimale).</p>
     
     <p class="- topic/p ">Par exemple, le kit de développement Flex comprend un fichier SWZ pour le cadre d’application Flex (et il fournit la chaîne digest pour ce fichier SWZ). Vous pouvez envoyer ce fichier SWZ au serveur Web et le charger dans votre fichier SWF (à l’aide de la méthode <codeph class="+ topic/ph pr-d/codeph ">load()</codeph> d’un objet URLLoader). Si l’ordinateur de l’utilisateur final possède déjà le fichier SWZ mis en cache correspondant, l’application l’utilise (un fichier SWZ « correspond » lorsque son <codeph class="+ topic/ph pr-d/codeph ">digest</codeph> correspond à celui que vous avez fourni). Dans le cas contraire, l’application télécharge le fichier SWZ à partir de l’URL que vous avez spécifiée. </p>
     
     <p class="- topic/p ">Définissez le paramètre <codeph class="+ topic/ph pr-d/codeph ">digest</codeph> uniquement dans un objet URLRequest utilisé lors d’un appel de la méthode <codeph class="+ topic/ph pr-d/codeph ">URLLoader.load()</codeph> en vue de charger un fichier SWZ. Si la propriété <codeph class="+ topic/ph pr-d/codeph ">digest</codeph> d’un objet URLRequest est définie alors qu’elle est utilisée dans d’autres méthodes, l’application émet une exception IOError.</p>
     
     </apiDesc><example conref="examples\URLRequest_digest.as" class="- topic/example "> L’exemple suivant charge un fichier distant dans la mémoire cache. Une fois le chargement terminé, le tableau d’octets contient le fichier actuel (et non le fichier signé). L’exemple suivant termine l’opération de chargement en appelant <codeph class="+ topic/ph pr-d/codeph ">loadBytes()</codeph> :
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
 
var myURLReq:URLRequest = new URLRequest();
myURLReq.url = "http://yourdomain/users/jdoe/test01/_rsc/Automated/AssetCaching_rsc/test01/rsl.swz";
myURLReq.digest = "3B0AA28C7A990385E044D80F5637FB036317BB41E044D80F5637FB036317BB41";
var myURLLoader:URLLoader = new URLLoader();
myURLLoader.dataFormat = URLLoaderDataFormat.BINARY;
myURLLoader.addEventListener("complete", onC);

myURLLoad.load(myURLReq);

function onC(e) {
    var someLoader:Loader = new Loader();
    addChild(someLoader);
    someLoader.loadBytes((ByteArray)(myURLLoad.data)); 
}

</codeblock></example></apiValueDetail></apiValue><apiValue id="flash.net:URLRequest:followRedirects:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">followRedirects</apiName><shortdesc class="- topic/shortdesc ">
    Indique si des redirections sont utilisées (true) ou non (false).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">L’appelant ne se trouve pas dans le sandbox de sécurité de l’application AIR.
    
    </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">SecurityError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">SecurityError</apiOperationClassifier></apiException><apiDefaultValue>true
    
    </apiDefaultValue><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Indique si les redirections doivent être suivies.
    
    </apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Indique si des redirections sont utilisées (<codeph class="+ topic/ph pr-d/codeph ">true</codeph>) ou non (<codeph class="+ topic/ph pr-d/codeph ">false</codeph>).
    
    <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Remarque </b>: les méthodes <codeph class="+ topic/ph pr-d/codeph ">FileReference.upload()</codeph>, <codeph class="+ topic/ph pr-d/codeph ">FileReference.download()</codeph> et <codeph class="+ topic/ph pr-d/codeph ">HTMLLoader.load()</codeph> ne prennent pas en charge la propriété <codeph class="+ topic/ph pr-d/codeph ">URLRequest.followRedirects</codeph>.</p>
    
    </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#URLRequestDefaults/followRedirects" class="- topic/link "><linktext class="- topic/linktext ">URLRequestDefaults.followRedirects</linktext></link></related-links></apiValue><apiValue id="flash.net:URLRequest:idleTimeout:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">idleTimeout</apiName><shortdesc class="- topic/shortdesc ">
	    Spécifie la valeur du délai d’inactivité (en millisecondes) pour cette requête.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">L’appelant ne se trouve pas dans le sandbox de sécurité de l’application AIR.
	    
	    </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">SecurityError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">SecurityError</apiOperationClassifier></apiException><apiDefaultValue>initialized from the URLRequestDefaults.idleTimeout property
	    
	    </apiDefaultValue></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	    Spécifie la valeur du délai d’inactivité (en millisecondes) pour cette requête.
	    
	    <p class="- topic/p ">Le délai d’inactivité correspond au laps de temps que le client attend une réponse du serveur, une fois la connexion établie et avant l’abandon de la requête.</p>
	    
	    <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Remarque</b> : la méthode <codeph class="+ topic/ph pr-d/codeph ">HTMLLoader.load()</codeph> ne prend pas en charge la propriété <codeph class="+ topic/ph pr-d/codeph ">URLRequest.idleTimeout</codeph>. La classe HTMLLoader définit sa propre propriété <codeph class="+ topic/ph pr-d/codeph ">idleTimeout</codeph>.</p>
	    
	    </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#URLRequestDefaults/idleTimeout" class="- topic/link "><linktext class="- topic/linktext ">URLRequestDefaults.idleTimeout</linktext></link></related-links></apiValue><apiValue id="flash.net:URLRequest:manageCookies:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">manageCookies</apiName><shortdesc class="- topic/shortdesc ">
    Indique si la pile de protocole HTTP doit gérer les cookies pour cette requête. </shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">L’appelant ne se trouve pas dans le sandbox de sécurité de l’application AIR.
    
    </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">SecurityError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">SecurityError</apiOperationClassifier></apiException><apiDefaultValue>true
    
    </apiDefaultValue></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Indique si la pile de protocole HTTP doit gérer les cookies pour cette requête. Lorsque la valeur <codeph class="+ topic/ph pr-d/codeph ">true</codeph> est définie, les cookies sont ajoutés à la requête et les cookies de réponse sont pris en compte. Si la valeur <codeph class="+ topic/ph pr-d/codeph ">false</codeph> est définie, les cookies ne sont <i class="+ topic/ph hi-d/i ">pas</i> ajoutés à la requête et les cookies de réponse ne sont <i class="+ topic/ph hi-d/i ">pas</i> pris en compte ; toutefois, les utilisateurs peuvent gérer eux-mêmes les cookies en manipulant directement l’en-tête. <b class="+ topic/ph hi-d/b ">Remarque :</b> sous Windows, il n’est pas possible d’ajouter manuellement des cookies à une requête d’URL lorsque <codeph class="+ topic/ph pr-d/codeph ">manageCookies</codeph> est définie sur <codeph class="+ topic/ph pr-d/codeph ">true</codeph>. Sur d’autres systèmes d’exploitation, l’ajout de cookies à une requête est autorisée, que <codeph class="+ topic/ph pr-d/codeph ">manageCookies</codeph> soit définie sur <codeph class="+ topic/ph pr-d/codeph ">true</codeph> ou sur <codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Lorsque vous y êtes autorisé, vous pouvez ajouter manuellement des cookies à une requête en ajoutant un objet <codeph class="+ topic/ph pr-d/codeph ">URLRequestHeader</codeph> contenant les données de cookie au tableau <codeph class="+ topic/ph pr-d/codeph ">requestHeaders</codeph>.
    
    <p class="- topic/p ">Sous Mac OS, les cookies sont partagés avec Safari. Pour supprimer les cookies sous Mac OS :</p>
    
    <ol class="- topic/ol "><li class="- topic/li ">Ouvrez Safari.</li><li class="- topic/li ">Choisissez Safari > Préférences, puis cliquez sur le panneau Sécurité.</li><li class="- topic/li ">Cliquez sur le bouton Afficher les cookies.</li><li class="- topic/li ">Cliquez sur le bouton Tout supprimer.</li></ol>
    
    <p class="- topic/p ">Pour supprimer les cookies sous Windows :</p>
    
    <ol class="- topic/ol "><li class="- topic/li ">Dans la boîte de dialogue Propriétés Internet, cliquez sur l’onglet Général.</li><li class="- topic/li ">Cliquez sur le bouton Supprimer les cookies. </li></ol>
    
    </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#URLRequestDefaults/manageCookies" class="- topic/link "><linktext class="- topic/linktext ">flash.net.URLRequestDefaults.manageCookies</linktext></link></related-links></apiValue><apiValue id="flash.net:URLRequest:method:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">method</apiName><shortdesc class="- topic/shortdesc ">
     Spécifie la méthode de soumission du formulaire HTTP.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Si le paramètre <codeph class="+ topic/ph pr-d/codeph ">value</codeph> n’est pas <codeph class="+ topic/ph pr-d/codeph ">URLRequestMethod.GET</codeph> ou <codeph class="+ topic/ph pr-d/codeph ">URLRequestMethod.POST</codeph>.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiDefaultValue>URLRequestMethod.GET
     
     </apiDefaultValue></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Spécifie la méthode de soumission du formulaire HTTP.
     
     <p class="- topic/p "><ph class="- topic/ph ">Dans le cas de contenu SWF s’exécutant dans Flash Player (dans le navigateur), cette propriété est limitée à des opérations GET ou POST, et les valeurs valides sont <codeph class="+ topic/ph pr-d/codeph ">URLRequestMethod.GET</codeph> ou <codeph class="+ topic/ph pr-d/codeph ">URLRequestMethod.POST</codeph>.</ph></p>
     
     <p class="- topic/p "><ph class="- topic/ph ">Dans le cas de contenu s’exécutant dans Adobe AIR, vous </ph> pouvez utiliser n’importe quelle valeur de chaîne si le contenu se trouve dans le sandbox de sécurité de l’application. Dans le cas contraire, <ph class="- topic/ph ">comme dans le cas de contenu s’exécutant dans Flash Player,</ph> vous êtes limité aux opérations GET ou POST.</p>
     
     <p class="- topic/p "><ph class="- topic/ph ">Pour le contenu s’exécutant dans Adobe AIR, </ph>lors de l’utilisation de la fonction <codeph class="+ topic/ph pr-d/codeph ">navigateToURL()</codeph>, le moteur d’exécution traite un objet URLRequest qui utilise la méthode POST (objet dont la propriété <codeph class="+ topic/ph pr-d/codeph ">method</codeph> est définie sur <codeph class="+ topic/ph pr-d/codeph ">URLRequestMethod.POST</codeph>) comme s’il utilisait la méthode GET.</p>
     
     <p class="- topic/p "><ph class="- topic/ph "><b class="+ topic/ph hi-d/b ">Remarque :</b> dans le cas d’une exécution dans Flash Player et si la forme référencée n’a pas de corps, Flash Player utilise automatiquement une opération GET, même si la méthode est définie sur <codeph class="+ topic/ph pr-d/codeph ">URLRequestMethod.POST</codeph>. Il est donc conseillé de toujours inclure un corps factice pour être certain que la méthode correcte soit utilisée.</ph></p>
     
     </apiDesc><example conref="examples\URLRequest_method.as" class="- topic/example "> L’exemple suivant ouvre l’application distante hébergée à l’adresse http://www.[yourDomain].com/application.jsp dans une nouvelle fenêtre de navigateur et transmet à l’application des données relatives à une session utilisateur, capturées dans un objet URLVariables. Il définit explicitement la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">URLRequest.method</codeph> sur <codeph class="+ topic/ph pr-d/codeph ">URLRequestMethod.POST</codeph>.
 <p class="- topic/p ">Vous trouverez ci-dessous des extraits de l’exemple :</p>
 <ol class="- topic/ol "><li class="- topic/li ">La fonction constructeur crée une occurrence de URLRequest nommée <codeph class="+ topic/ph pr-d/codeph ">request</codeph>, en utilisant l’URL de l’application distante comme paramètre.</li><li class="- topic/li ">Un objet URLVariables est créé et des valeurs sont attribuées à deux de ses propriétés.</li><li class="- topic/li ">L’objet URLVariables est affecté à la propriété <codeph class="+ topic/ph pr-d/codeph ">data</codeph> de l’objet URLRequest.</li><li class="- topic/li ">La valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">URLRequest.method</codeph> est définie sur <codeph class="+ topic/ph pr-d/codeph ">URLRequestMethod.POST</codeph>.</li><li class="- topic/li ">L’exemple appelle <codeph class="+ topic/ph pr-d/codeph ">navigateToURL</codeph>, qui ouvre une nouvelle fenêtre de navigateur vers l’URL de l’application distante.</li></ol>
 <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Remarque :</b> pour exécuter l’exemple, l’URL de l’application distante de l’exemple doit être remplacée par une URL opérationnelle. En outre, du code serveur serait nécessaire pour traiter les informations capturées par Flash Player dans l’objet URLVariables.</p>
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
package {
    import flash.display.Sprite;
    import flash.net.navigateToURL;
    import flash.net.URLRequest;
    import flash.net.URLRequestMethod;
    import flash.net.URLVariables;

    public class URLRequest_method extends Sprite {

        public function URLRequest_method() {
            var url:String = "http://www.[yourDomain].com/application.jsp";
            var request:URLRequest = new URLRequest(url);
            
            var variables:URLVariables = new URLVariables();
            variables.exampleSessionId = new Date().getTime();
            variables.exampleUserLabel = "guest";
            request.data = variables;
            request.method = URLRequestMethod.POST;
            
            navigateToURL(request);
        }
    }
}
</codeblock></example></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#URLRequestMethod" class="- topic/link "><linktext class="- topic/linktext ">Classe URLRequestMethod</linktext></link></related-links></apiValue><apiValue id="flash.net:URLRequest:requestHeaders:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">requestHeaders</apiName><shortdesc class="- topic/shortdesc ">
     Tableau d’en-tête de requête HTTP à ajouter à la fin de la requête HTTP.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Array</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Tableau d’en-tête de requête HTTP à ajouter à la fin de la requête HTTP. Le tableau se compose d’objets URLRequestHeader. Tous les objets du tableau doivent être de type URLRequestHeader et contenir une chaîne de nom et une chaîne de valeur, comme suit :
     <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
     var rhArray:Array = new Array(new URLRequestHeader("Content-Type", "text/html"));
     </codeblock>
     
     <p class="- topic/p "><ph class="- topic/ph ">Flash Player et le moteur d’exécution AIR imposent</ph> certaines restrictions sur les en-têtes de requête. Pour plus d’informations, consultez la description de la classe URLRequestHeader.</p>
     
     <p class="- topic/p ">Toutes les méthodes qui acceptent des paramètres URLRequest ne prennent pas en charge la propriété <codeph class="+ topic/ph pr-d/codeph ">requestHeaders</codeph> ; consultez la documentation de la méthode que vous appelez. Par exemple, les méthodes <codeph class="+ topic/ph pr-d/codeph ">FileReference.upload()</codeph> et <codeph class="+ topic/ph pr-d/codeph ">FileReference.download()</codeph> ne prennent pas en charge la propriété <codeph class="+ topic/ph pr-d/codeph ">URLRequest.requestHeaders</codeph>.</p>
     <p class="- topic/p ">Du fait des limites des navigateurs, les en-têtes de requête HTTP personnalisées ne sont prises en charge que pour les requêtes <codeph class="+ topic/ph pr-d/codeph ">POST</codeph>, pas pour les requêtes <codeph class="+ topic/ph pr-d/codeph ">GET</codeph>.</p>
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#URLRequestHeader" class="- topic/link "><linktext class="- topic/linktext ">URLRequestHeader</linktext></link></related-links></apiValue><apiValue id="flash.net:URLRequest:url:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">url</apiName><shortdesc class="- topic/shortdesc ">
     URL à demander.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     URL à demander.
     
     <p class="- topic/p ">Veillez à coder tous les caractères définis comme non fiables dans le document Uniform Resource Locator (http://www.faqs.org/rfcs/rfc1738.html) ou ceux réservés dans le modèle URL de l’objet URLRequest (s’ils ne sont pas utilisés comme caractères réservés). Utilisez <codeph class="+ topic/ph pr-d/codeph ">"%25"</codeph> comme symbole du pourcentage (%) et <codeph class="+ topic/ph pr-d/codeph ">"%23"</codeph> comme signe numérique (#), comme dans l’exemple suivant :<codeph class="+ topic/ph pr-d/codeph "> "http://www.example.com/orderForm.cfm?item=%23B-3&amp;discount=50%25"</codeph>.</p>
     
      <p class="- topic/p ">Par défaut, l’URL doit être dans le même domaine que le fichier appelant, sauf si le contenu s’exécute dans le sandbox de sécurité de l’application<ph class="- topic/ph "> Adobe AIR</ph>. <ph class="- topic/ph ">Pour charger des données à partir d’un autre domaine, placez un fichier de régulation d’URL dans le serveur qui héberge les données</ph>. Pour plus d’informations, voir la description de la classe URLRequest.</p>
     
     <p class="- topic/p "><ph class="- topic/ph ">Dans le cas de contenu s’exécutant dans Adobe AIR, les fichiers </ph>du sandbox de sécurité de l’application, à savoir les fichiers installés avec l’application AIR, peuvent accéder aux URL à l’aide de l’un des modèles d’URL suivants :</p>
     
     <ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">http</codeph> et <codeph class="+ topic/ph pr-d/codeph ">https</codeph> </li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">file</codeph> </li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">app-storage</codeph> </li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">à partir</codeph> </li></ul>
     
     <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Remarque :</b> IPv6 (Internet Protocol version 6) est pris en charge<ph class="- topic/ph "> dans AIR et dans Flash Player 9.0.115.0 et versions ultérieures</ph>. IPv6 est une version du protocole IP (Internet Protocol) qui prend en charge les adresses 128 bits (amélioration du protocole IPv4 précédent qui prend en charge les adresses 32 bits). Vous devrez peut-être activer IPv6 sur vos interfaces de mise en réseau. Pour plus d’informations, voir l’Aide du système d’exploitation hébergeant les données. Si IPv6 est pris en charge sur le système hébergeant, vous pouvez spécifier des adresses littérales IPv6 numériques dans les URL entre crochets ([])<ph class="- topic/ph ">, comme suit</ph> : </p>
     
     <ph class="- topic/ph ">
     <pre xml:space="preserve" class="- topic/pre ">
     rtmp://[2001:db8:ccc3:ffff:0:444d:555e:666f]:1935/test
     </pre>
     </ph>
     
     </apiDesc><example conref="examples\Loader_load_url.as" class="- topic/example "> L’exemple suivant indique comment charger une image de façon dynamique à l’aide de la classe Loader dans ActionScript 3.0. Exemple fourni par <xref href="http://actionscriptexamples.com/2008/03/02/dynamically-loading-an-image-in-actionscript-20-and-actionscript-30/" scope="_mmexternal" class="- topic/xref ">ActionScriptExamples.com</xref>. 
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
var url:String = "http://www.helpexamples.com/flash/images/image2.jpg";
var urlRequest:URLRequest = new URLRequest(url);
var loader:Loader = new Loader();
loader.load(urlRequest);
addChild(loader);
</codeblock></example></apiValueDetail></apiValue><apiValue id="flash.net:URLRequest:useCache:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">useCache</apiName><shortdesc class="- topic/shortdesc ">
    Indique si le cache local doit être consulté avant que URLRequest récupère les données.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">L’appelant ne se trouve pas dans le sandbox de sécurité de l’application AIR.
    
    </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">SecurityError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">SecurityError</apiOperationClassifier></apiException><apiDefaultValue>true
    
    </apiDefaultValue></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Indique si le cache local doit être consulté avant que URLRequest récupère les données.
    
    <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Remarque </b>: la méthode <codeph class="+ topic/ph pr-d/codeph ">HTMLLoader.load()</codeph> ne prend pas en charge la propriété <codeph class="+ topic/ph pr-d/codeph ">URLRequest.useCache</codeph>.</p>
    
    </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#URLRequestDefaults/useCache" class="- topic/link "><linktext class="- topic/linktext ">flash.net.URLRequestDefaults.useCache</linktext></link></related-links></apiValue><apiValue id="flash.net:URLRequest:userAgent:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">userAgent</apiName><shortdesc class="- topic/shortdesc ">
    Indique la chaîne agent utilisateur à utiliser dans la requête HTTP.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">L’appelant ne se trouve pas dans le sandbox de sécurité de l’application AIR.
    
    </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">SecurityError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">SecurityError</apiOperationClassifier></apiException></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Indique la chaîne agent utilisateur à utiliser dans la requête HTTP.
    
    <p class="- topic/p ">La valeur par défaut correspond à la même chaîne agent utilisateur utilisée par Flash Player, différente dans Mac, Linux et Windows.</p>
    
    <p class="- topic/p "><i class="+ topic/ph hi-d/i ">Remarque :</i> cette propriété n’a pas d’incidence sur la chaîne agent utilisateur lors de l’utilisation de l’objet URLRequest avec la méthode <codeph class="+ topic/ph pr-d/codeph ">load()</codeph> d’un objet HTMLLoader. Pour définir la chaîne userAgent d’un objet HTMLLoader, définissez la propriété <codeph class="+ topic/ph pr-d/codeph ">userAgent</codeph> de l’objet HTMLLoader ou la propriété statique <codeph class="+ topic/ph pr-d/codeph ">URLRequestDefaults.userAgent</codeph>.</p>
    
    </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#URLRequestDefaults/userAgent" class="- topic/link "><linktext class="- topic/linktext ">flash.net.URLRequestDefaults.userAgent</linktext></link><link href="../../flash/html/HTMLLoader.html#userAgent" class="- topic/link "><linktext class="- topic/linktext ">flash.html.HTMLLoader.userAgent</linktext></link></related-links></apiValue></apiClassifier><apiClassifier languages="" id="flash.net:InterfaceAddress" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">InterfaceAddress</apiName><shortdesc class="- topic/shortdesc ">
 La classe InterfaceAddress indique les propriétés d’une adresse d’interface de réseau.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 La classe InterfaceAddress indique les propriétés d’une adresse d’interface de réseau.
 
 </apiDesc><example conref="examples\InterfaceAddressExample.as" class="- topic/example "/></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetworkInfo" class="- topic/link "><linktext class="- topic/linktext ">Classe NetworkInfo</linktext></link><link href="flash.net.xml#NetworkInterface" class="- topic/link "><linktext class="- topic/linktext ">Classe NetworkInterface</linktext></link></related-links><apiValue id="flash.net:InterfaceAddress:address:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">address</apiName><shortdesc class="- topic/shortdesc ">
     Adresse du protocole Internet (IP).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Adresse du protocole Internet (IP).
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:InterfaceAddress:broadcast:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">broadcast</apiName><shortdesc class="- topic/shortdesc ">
     Adresse de diffusion du segment de réseau local.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Adresse de diffusion du segment de réseau local.
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:InterfaceAddress:ipVersion:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">ipVersion</apiName><shortdesc class="- topic/shortdesc ">
	 Type d’adresse IP (IPv4 ou IPv6).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Type d’adresse IP (IPv4 ou IPv6).
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:InterfaceAddress:prefixLength:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">prefixLength</apiName><shortdesc class="- topic/shortdesc ">
     Longueur du préfixe de cette adresse.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">int</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Longueur du préfixe de cette adresse. 
     
     <p class="- topic/p ">Pour les adresses IPv4, il s’agit du masque de sous-réseau. Exemples de la longueur du préfixe pour les valeurs IPv4 : 8 (255.0.0.0), 16 (255.255.0.0) et 24 (255.255.255.0). Exemples des valeurs de longueur du préfixe IPv6 : 128 (::1/128) et 32 (2001:db8::/32), </p>
     
     <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Remarque :</b> si la longueur du préfixe de cette adresse n’est pas disponible, la valeur de <codeph class="+ topic/ph pr-d/codeph ">prefixLength</codeph> est <codeph class="+ topic/ph pr-d/codeph ">-1</codeph>. Une valeur de préfixe n’est pas toujours renvoyée par l’implémentation réseau d’un ordinateur client spécifique.</p>
     
     </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.net:GroupSpecifier" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">GroupSpecifier</apiName><shortdesc class="- topic/shortdesc ">
     La classe GroupSpecifier permet de construire les chaînes opaques groupspec pouvant être transmises aux constructeurs NetStream et NetGroup.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Construit les chaînes opaques groupspec transmises aux constructeurs NetStream et NetGroup.
     </apiTipText></apiTipTexts><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     La classe GroupSpecifier permet de construire les chaînes opaques <codeph class="+ topic/ph pr-d/codeph ">groupspec</codeph> pouvant être transmises aux constructeurs NetStream et NetGroup. Un <codeph class="+ topic/ph pr-d/codeph ">groupspec</codeph> spécifie un groupe RTMFP homologue à homologue, y compris les fonctionnalités, restrictions et autorisations du membre qui utilise ce <codeph class="+ topic/ph pr-d/codeph ">groupspec</codeph>.
     
     <p class="- topic/p ">Par défaut, toutes les fonctionnalités sont désactivées et les connexions homologue à homologue sont autorisées.</p>
     
     </apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetGroup" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetGroup</linktext></link><link href="flash.net.xml#NetStream" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetStream</linktext></link></related-links><apiConstructor id="flash.net:GroupSpecifier:GroupSpecifier" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">GroupSpecifier</apiName><shortdesc class="- topic/shortdesc ">
         Crée un nouvel objet GroupSpecifier.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">si <codeph class="+ topic/ph pr-d/codeph ">name</codeph> est vide ou <codeph class="+ topic/ph pr-d/codeph ">null</codeph>.
         
         </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">name</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Nom du groupe sur lequel tous les membres doivent se mettre d’accord.
         
         </apiDesc></apiParam></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
         Crée un nouvel objet GroupSpecifier. Par défaut, toutes les fonctionnalités sont désactivées et les connexions homologue à homologue sont autorisées.
         
         </apiDesc></apiConstructorDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetGroup" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetGroup</linktext></link><link href="flash.net.xml#NetStream" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetStream</linktext></link></related-links></apiConstructor><apiOperation id="flash.net:GroupSpecifier:addBootstrapPeer" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">addBootstrapPeer</apiName><shortdesc class="- topic/shortdesc ">
         Force l’objet NetStream ou NetGroup associé à effectuer une connexion voisine initiale à l’ID homologue spécifié.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">peerID</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">ID homologue auquel une connexion voisine initiale doit être effectuée pour amorcer le maillage homologue à homologue.
         
         </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
         Force l’objet NetStream ou NetGroup associé à effectuer une connexion voisine initiale à l’ID homologue spécifié.
         
         </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#GroupSpecifier/encodeBootstrapPeerIDSpec()" class="- topic/link "><linktext class="- topic/linktext ">encodeBootstrapPeerIDSpec()</linktext></link><link href="flash.net.xml#NetGroup/addMemberHint()" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetGroup.addMemberHint()</linktext></link><link href="flash.net.xml#NetGroup/addNeighbor()" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetGroup.addNeighbor()</linktext></link></related-links></apiOperation><apiOperation id="flash.net:GroupSpecifier:addIPMulticastAddress" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">addIPMulticastAddress</apiName><shortdesc class="- topic/shortdesc ">
         Force l’objet NetStream ou NetGroup associé à se joindre au groupe de multidiffusion IP spécifié et à écouter le port UDP spécifié.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">address</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Chaîne spécifiant l’adresse du groupe de multidiffusion IPv4 ou IPv6 auquel se joindre, éventuellement suivie du signe deux points (":") et du numéro de port UDP. Si vous spécifiez une adresse IPv6 et un port, l’adresse IPv6 <i class="+ topic/ph hi-d/i ">doit</i> être entre crochets. Exemples : <codeph class="+ topic/ph pr-d/codeph ">"224.0.0.254"</codeph>, <codeph class="+ topic/ph pr-d/codeph ">"224.0.0.254:30000"</codeph>, <codeph class="+ topic/ph pr-d/codeph ">"ff03::ffff"</codeph>, <codeph class="+ topic/ph pr-d/codeph ">"[ff03::ffff]:30000"</codeph>.
         
         </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">port</apiItemName><apiType value="any" name="type" class="- topic/state reference/state apiRef/apiType "/><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Port UDP sur lequel recevoir les datagrammes de multidiffusion IP. Si <codeph class="+ topic/ph pr-d/codeph ">port</codeph> est défini sur <codeph class="+ topic/ph pr-d/codeph ">null</codeph>, le port UDP <i class="+ topic/ph hi-d/i ">doit</i> être spécifié dans l’<codeph class="+ topic/ph pr-d/codeph ">adresse</codeph>. S’il n’est pas défini sur <codeph class="+ topic/ph pr-d/codeph ">null</codeph>, le port UDP <i class="+ topic/ph hi-d/i ">ne doit pas</i> être spécifié dans l’<codeph class="+ topic/ph pr-d/codeph ">adresse</codeph>.
         
         </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">source</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">S’il n’est pas défini sur <codeph class="+ topic/ph pr-d/codeph ">null</codeph>, chaîne spécifiant l’adresse IP source d’une multidiffusion propre à la source (SSM).
         
         </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
         Force l’objet NetStream ou NetGroup associé à se joindre au groupe de multidiffusion IP spécifié et à écouter le port UDP spécifié.
         
         </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#GroupSpecifier/encodeIPMulticastAddressSpec()" class="- topic/link "><linktext class="- topic/linktext ">encodeIPMulticastAddressSpec()</linktext></link><link href="flash.net.xml#GroupSpecifier/ipMulticastMemberUpdatesEnabled" class="- topic/link "><linktext class="- topic/linktext ">ipMulticastMemberUpdatesEnabled</linktext></link></related-links></apiOperation><apiOperation id="flash.net:GroupSpecifier:authorizations" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">authorizations</apiName><shortdesc class="- topic/shortdesc ">
         Renvoie une chaîne qui représente les mots de passe pour la publication en multidiffusion IP et pour la publication.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
         Renvoie une chaîne qui représente les mots de passe pour la publication en multidiffusion IP et pour la publication. Ajoute la chaîne à un <codeph class="+ topic/ph pr-d/codeph ">groupspec</codeph> non autorisé pour activer les fonctionnalités pour lesquelles le mot de passe a été défini.
         
         </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#GroupSpecifier/encodePostingAuthorization()" class="- topic/link "><linktext class="- topic/linktext ">encodePostingAuthorization()</linktext></link><link href="flash.net.xml#GroupSpecifier/encodePublishAuthorization()" class="- topic/link "><linktext class="- topic/linktext ">encodePublishAuthorization()</linktext></link><link href="flash.net.xml#GroupSpecifier/groupspecWithAuthorizations()" class="- topic/link "><linktext class="- topic/linktext ">groupspecWithAuthorizations()</linktext></link><link href="flash.net.xml#GroupSpecifier/groupspecWithoutAuthorizations()" class="- topic/link "><linktext class="- topic/linktext ">groupspecWithoutAuthorizations()</linktext></link><link href="flash.net.xml#GroupSpecifier/setPostingPassword()" class="- topic/link "><linktext class="- topic/linktext ">setPostingPassword()</linktext></link><link href="flash.net.xml#GroupSpecifier/setPublishPassword()" class="- topic/link "><linktext class="- topic/linktext ">setPublishPassword()</linktext></link></related-links></apiOperation><apiOperation id="flash.net:GroupSpecifier:encodeBootstrapPeerIDSpec" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">encodeBootstrapPeerIDSpec</apiName><shortdesc class="- topic/shortdesc ">
         Code et renvoie une chaîne qui représente un ID homologue de démarrage.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">peerID</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">ID homologue auquel une connexion voisine initiale doit être effectuée pour amorcer le maillage homologue à homologue.
         
         </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
         Code et renvoie une chaîne qui représente un ID homologue de démarrage. Si vous ajoutez la chaîne à un <codeph class="+ topic/ph pr-d/codeph ">groupspec</codeph>, l’objet NetStream ou NetGroup associé effectue une connexion de voisin initiale sur l’ID homologue spécifié.
         
         </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#GroupSpecifier/addBootstrapPeer()" class="- topic/link "><linktext class="- topic/linktext ">addBootstrapPeer()</linktext></link><link href="flash.net.xml#NetGroup/addMemberHint()" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetGroup.addMemberHint()</linktext></link><link href="flash.net.xml#NetGroup/addNeighbor()" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetGroup.addNeighbor()</linktext></link></related-links></apiOperation><apiOperation id="flash.net:GroupSpecifier:encodeIPMulticastAddressSpec" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">encodeIPMulticastAddressSpec</apiName><shortdesc class="- topic/shortdesc ">
         Code et renvoie une chaîne qui représente une adresse de socket de multidiffusion IP.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">address</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Chaîne spécifiant l’adresse du groupe de multidiffusion IPv4 ou IPv6 auquel se joindre, éventuellement suivie du signe deux points (":") et du numéro de port UDP. Si vous spécifiez une adresse IPv6 <i class="+ topic/ph hi-d/i ">et</i> un port, l’adresse IPv6 <i class="+ topic/ph hi-d/i ">doit</i> être entre crochets. Exemples : <codeph class="+ topic/ph pr-d/codeph ">"224.0.0.254"</codeph>, <codeph class="+ topic/ph pr-d/codeph ">"224.0.0.254:30000"</codeph>, <codeph class="+ topic/ph pr-d/codeph ">"ff03::ffff"</codeph>, <codeph class="+ topic/ph pr-d/codeph ">"[ff03::ffff]:30000"</codeph>.
         
         </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">port</apiItemName><apiType value="any" name="type" class="- topic/state reference/state apiRef/apiType "/><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Port UDP sur lequel recevoir les datagrammes de multidiffusion IP. Si <codeph class="+ topic/ph pr-d/codeph ">port</codeph> est défini sur <codeph class="+ topic/ph pr-d/codeph ">null</codeph>, le port UDP <i class="+ topic/ph hi-d/i ">doit</i> être spécifié dans l’<codeph class="+ topic/ph pr-d/codeph ">adresse</codeph>. S’il n’est pas défini sur <codeph class="+ topic/ph pr-d/codeph ">null</codeph>, le port UDP <i class="+ topic/ph hi-d/i ">ne doit pas</i> être spécifié dans l’<codeph class="+ topic/ph pr-d/codeph ">adresse</codeph>.
         
         </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">source</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">S’il n’est pas défini sur <codeph class="+ topic/ph pr-d/codeph ">null</codeph>, chaîne spécifiant l’adresse IP source d’une multidiffusion propre à la source (SSM).
         
         </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
         Code et renvoie une chaîne qui représente une adresse de socket de multidiffusion IP. Si vous ajoutez la chaîne à un <codeph class="+ topic/ph pr-d/codeph ">groupspec</codeph>, l’objet NetStream ou NetGroup associé joint le groupe de multidiffusion IP spécifié et écoute le port UDP spécifié.
         
         
         </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#GroupSpecifier/addIPMulticastAddress()" class="- topic/link "><linktext class="- topic/linktext ">addIPMulticastAddress()</linktext></link><link href="flash.net.xml#GroupSpecifier/ipMulticastMemberUpdatesEnabled" class="- topic/link "><linktext class="- topic/linktext ">ipMulticastMemberUpdatesEnabled</linktext></link></related-links></apiOperation><apiOperation id="flash.net:GroupSpecifier:encodePostingAuthorization" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">encodePostingAuthorization</apiName><shortdesc class="- topic/shortdesc ">
         Code et renvoie une chaîne qui représente un mot de passe de publication.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">password</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Mot de passe à coder, qui doit correspondre au mot de passe de publication (s’il a été défini) pour activer <codeph class="+ topic/ph pr-d/codeph ">NetGroup.post()</codeph>.
         
         </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
         Code et renvoie une chaîne qui représente un mot de passe de publication. Lorsque la publication est protégée par mot de passe, vous pouvez concaténer la chaîne à un <codeph class="+ topic/ph pr-d/codeph ">groupspec</codeph> pour activer la publication.
         
         </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#GroupSpecifier/groupspecWithoutAuthorizations()" class="- topic/link "><linktext class="- topic/linktext ">groupspecWithoutAuthorizations()</linktext></link><link href="flash.net.xml#GroupSpecifier/setPostingPassword()" class="- topic/link "><linktext class="- topic/linktext ">setPostingPassword()</linktext></link><link href="flash.net.xml#NetGroup/post()" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetGroup.post()</linktext></link></related-links></apiOperation><apiOperation id="flash.net:GroupSpecifier:encodePublishAuthorization" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">encodePublishAuthorization</apiName><shortdesc class="- topic/shortdesc ">
         Code et renvoie une chaîne qui représente le mot de passe d’une publication en multidiffusion.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">password</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Mot de passe à coder, qui doit correspondre au mot de passe de publication (s’il a été défini) pour activer <codeph class="+ topic/ph pr-d/codeph ">NetStream.publish()</codeph>.
         
         </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
         Code et renvoie une chaîne qui représente le mot de passe d’une publication en multidiffusion. Lorsque la publication en multidiffusion est protégée par mot de passe, vous pouvez concaténer la chaîne à un <codeph class="+ topic/ph pr-d/codeph ">groupspec</codeph> pour activer la publication.
         
         </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#GroupSpecifier/groupspecWithoutAuthorizations()" class="- topic/link "><linktext class="- topic/linktext ">groupspecWithoutAuthorizations()</linktext></link><link href="flash.net.xml#GroupSpecifier/setPublishPassword()" class="- topic/link "><linktext class="- topic/linktext ">setPublishPassword()</linktext></link><link href="flash.net.xml#NetStream/publish()" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetStream.publish()</linktext></link></related-links></apiOperation><apiOperation id="flash.net:GroupSpecifier:groupspecWithAuthorizations" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">groupspecWithAuthorizations</apiName><shortdesc class="- topic/shortdesc ">
         Renvoie la chaîne opaque groupspec (y compris les autorisations) pouvant être transmise aux constructeurs NetStream et NetGroup.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
         Renvoie la chaîne opaque <codeph class="+ topic/ph pr-d/codeph ">groupspec</codeph> (y compris les autorisations) pouvant être transmise aux constructeurs NetStream et NetGroup.
         
         </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#GroupSpecifier/authorizations()" class="- topic/link "><linktext class="- topic/linktext ">authorizations()</linktext></link><link href="flash.net.xml#GroupSpecifier/groupspecWithoutAuthorizations()" class="- topic/link "><linktext class="- topic/linktext ">groupspecWithoutAuthorizations()</linktext></link><link href="flash.net.xml#GroupSpecifier/setPostingPassword()" class="- topic/link "><linktext class="- topic/linktext ">setPostingPassword()</linktext></link><link href="flash.net.xml#GroupSpecifier/setPublishPassword()" class="- topic/link "><linktext class="- topic/linktext ">setPublishPassword()</linktext></link><link href="flash.net.xml#GroupSpecifier/toString()" class="- topic/link "><linktext class="- topic/linktext ">toString()</linktext></link></related-links></apiOperation><apiOperation id="flash.net:GroupSpecifier:groupspecWithoutAuthorizations" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">groupspecWithoutAuthorizations</apiName><shortdesc class="- topic/shortdesc ">
         Renvoie la chaîne opaque groupspec (sans les autorisations) pouvant être transmise aux constructeurs NetStream et NetGroup.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Renvoie la chaîne opaque groupspec (sans les autorisations) pouvant être transmise aux constructeurs NetStream et NetGroup.
         </apiTipText></apiTipTexts></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
         Renvoie la chaîne opaque <codeph class="+ topic/ph pr-d/codeph ">groupspec</codeph> (sans les autorisations) pouvant être transmise aux constructeurs NetStream et NetGroup.
         
         </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#GroupSpecifier/authorizations()" class="- topic/link "><linktext class="- topic/linktext ">authorizations()</linktext></link><link href="flash.net.xml#GroupSpecifier/encodePostingAuthorization()" class="- topic/link "><linktext class="- topic/linktext ">encodePostingAuthorization()</linktext></link><link href="flash.net.xml#GroupSpecifier/encodePublishAuthorization()" class="- topic/link "><linktext class="- topic/linktext ">encodePublishAuthorization()</linktext></link><link href="flash.net.xml#GroupSpecifier/groupspecWithAuthorizations()" class="- topic/link "><linktext class="- topic/linktext ">groupspecWithAuthorizations()</linktext></link></related-links></apiOperation><apiOperation id="flash.net:GroupSpecifier:makeUnique" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">makeUnique</apiName><shortdesc class="- topic/shortdesc ">
         Ajoute une balise pseudo-aléatoire forte au spécificateur de groupe pour le rendre unique.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Ajoute une balise pseudo-aléatoire forte au spécificateur de groupe pour le rendre unique.
         </apiTipText></apiTipTexts></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
         Ajoute une balise pseudo-aléatoire forte au <codeph class="+ topic/ph pr-d/codeph ">groupspec</codeph> pour le rendre unique. La chaîne opaque <codeph class="+ topic/ph pr-d/codeph ">groupspec</codeph> doit être transmise littéralement à d’autres membres potentiels du groupe susceptibles de se joindre correctement.
         
         </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.net:GroupSpecifier:setPostingPassword" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">setPostingPassword</apiName><shortdesc class="- topic/shortdesc ">
         Indique si un mot de passe est requis pour publier dans l’objet NetGroup.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">password</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Mot de passe devant être attribué pour utiliser <codeph class="+ topic/ph pr-d/codeph ">NetGroup.post()</codeph>. Si la valeur <codeph class="+ topic/ph pr-d/codeph ">null</codeph> est définie, aucun mot de passe n’est requis pour la publication. 
         
         </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">salt</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Modifie le hachage du mot de passe pour qu’il soit plus difficile à deviner. Pour plus de sécurité, ce paramètre doit être défini sur une valeur aléatoire.
         
         </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
         Indique si un mot de passe est requis pour publier dans l’objet NetGroup.
         
         </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#GroupSpecifier/encodePostingAuthorization()" class="- topic/link "><linktext class="- topic/linktext ">encodePostingAuthorization()</linktext></link><link href="flash.net.xml#GroupSpecifier/groupspecWithAuthorizations()" class="- topic/link "><linktext class="- topic/linktext ">groupspecWithAuthorizations()</linktext></link><link href="flash.net.xml#GroupSpecifier/groupspecWithoutAuthorizations()" class="- topic/link "><linktext class="- topic/linktext ">groupspecWithoutAuthorizations()</linktext></link><link href="flash.net.xml#NetGroup/post()" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetGroup.post()</linktext></link></related-links></apiOperation><apiOperation id="flash.net:GroupSpecifier:setPublishPassword" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">setPublishPassword</apiName><shortdesc class="- topic/shortdesc ">
         Indique si un mot de passe est requis pour publier un flux de multidiffusion dans l’objet NetStream.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">password</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Mot de passe devant être attribué pour utiliser <codeph class="+ topic/ph pr-d/codeph ">NetStream.publish()</codeph>. Si la valeur <codeph class="+ topic/ph pr-d/codeph ">null</codeph> est définie, aucun mot de passe n’est requis pour la publication.
         
         </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">salt</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Modifie le hachage du mot de passe pour qu’il soit plus difficile à deviner. Pour plus de sécurité, ce paramètre doit être défini sur une valeur aléatoire.
         
         </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
         Indique si un mot de passe est requis pour publier un flux de multidiffusion dans l’objet NetStream.
         
         </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#GroupSpecifier/encodePublishAuthorization()" class="- topic/link "><linktext class="- topic/linktext ">encodePublishAuthorization()</linktext></link><link href="flash.net.xml#GroupSpecifier/groupspecWithAuthorizations()" class="- topic/link "><linktext class="- topic/linktext ">groupspecWithAuthorizations()</linktext></link><link href="flash.net.xml#GroupSpecifier/groupspecWithoutAuthorizations()" class="- topic/link "><linktext class="- topic/linktext ">groupspecWithoutAuthorizations()</linktext></link><link href="flash.net.xml#NetStream/publish()" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetStream.publish()</linktext></link></related-links></apiOperation><apiOperation id="flash.net:GroupSpecifier:toString" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">toString</apiName><shortdesc class="- topic/shortdesc ">
         Identique à la méthode WithAuthorizations() du spécificateur de groupe.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Identique à la méthode WithAuthorizations() du spécificateur de groupe.
         </apiTipText></apiTipTexts></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
         Identique à la <codeph class="+ topic/ph pr-d/codeph ">groupspecWithAuthorizations()</codeph> méthode. Méthode adéquate pour renvoyer la chaîne opaque <codeph class="+ topic/ph pr-d/codeph ">groupspec</codeph> (y compris les autorisations) pouvant être transmise aux constructeurs NetStream et NetGroup.
         
         </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#GroupSpecifier/groupspecWithAuthorizations()" class="- topic/link "><linktext class="- topic/linktext ">groupspecWithAuthorizations()</linktext></link></related-links></apiOperation><apiValue id="flash.net:GroupSpecifier:ipMulticastMemberUpdatesEnabled:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">ipMulticastMemberUpdatesEnabled</apiName><shortdesc class="- topic/shortdesc ">
         Indique si les informations concernant l’adhésion au groupe peuvent être échangées sur des sockets de multidiffusion IP.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
         Indique si les informations concernant l’adhésion au groupe peuvent être échangées sur des sockets de multidiffusion IP. Les serveurs de multidiffusion IP peuvent envoyer des mises à jour d’adhésion au groupe afin de favoriser l’amorçage des maillages P2P ou de réparer les partitions. Les homologues peuvent envoyer des mises à jour d’adhésion sur le réseau local pour favoriser l’amorçage des maillages P2P et pour informer les voisins de réseau local appartenant à des maillages globaux de l’existence d’autres voisins de réseau local. Ces mises à jour peuvent améliorer les performances P2P.
         
         </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#GroupSpecifier/addIPMulticastAddress()" class="- topic/link "><linktext class="- topic/linktext ">addIPMulticastAddress()</linktext></link><link href="flash.net.xml#GroupSpecifier/peerToPeerDisabled" class="- topic/link "><linktext class="- topic/linktext ">peerToPeerDisabled</linktext></link></related-links></apiValue><apiValue id="flash.net:GroupSpecifier:multicastEnabled:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">multicastEnabled</apiName><shortdesc class="- topic/shortdesc ">
         Indique si la diffusion en continu est activée pour l’objet NetGroup.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
         Indique si la diffusion en continu est activée pour l’objet NetGroup. Les méthodes utilisées pour la diffusion en continu sont les suivantes : <codeph class="+ topic/ph pr-d/codeph ">NetStream.publish()</codeph>, <codeph class="+ topic/ph pr-d/codeph ">NetStream.play()</codeph> et <codeph class="+ topic/ph pr-d/codeph ">NetStream.play2()</codeph>. Par défaut, cette propriété est définie sur FALSE (la diffusion en continu est désactivée).
         
         </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#GroupSpecifier/setPublishPassword()" class="- topic/link "><linktext class="- topic/linktext ">setPublishPassword()</linktext></link><link href="flash.net.xml#NetStream/play()" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetStream.play()</linktext></link><link href="flash.net.xml#NetStream/play2()" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetStream.play2()</linktext></link><link href="flash.net.xml#NetStream/publish()" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetStream.publish()</linktext></link></related-links></apiValue><apiValue id="flash.net:GroupSpecifier:objectReplicationEnabled:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">objectReplicationEnabled</apiName><shortdesc class="- topic/shortdesc ">
         Indique si la réplication d’objets est activée pour l’objet NetGroup. </shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
         Indique si la réplication d’objets est activée pour l’objet NetGroup. Par défaut, cette propriété est définie sur FALSE (la réplication d’objets est désactivée).
         
         </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetGroup/addHaveObjects()" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetGroup.addHaveObjects()</linktext></link><link href="flash.net.xml#NetGroup/addWantObjects()" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetGroup.addWantObjects()</linktext></link><link href="flash.net.xml#NetGroup/denyRequestedObject()" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetGroup.denyRequestedObject()</linktext></link><link href="flash.net.xml#NetGroup/removeHaveObjects()" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetGroup.removeHaveObjects()</linktext></link><link href="flash.net.xml#NetGroup/removeWantObjects()" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetGroup.removeWantObjects()</linktext></link><link href="flash.net.xml#NetGroup/writeRequestedObject()" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetGroup.writeRequestedObject()</linktext></link></related-links></apiValue><apiValue id="flash.net:GroupSpecifier:peerToPeerDisabled:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">peerToPeerDisabled</apiName><shortdesc class="- topic/shortdesc ">
         Indique si les connexions homologue à homologue sont activées pour l’objet NetGroup ou NetStream. </shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
         Indique si les connexions homologue à homologue sont activées pour l’objet NetGroup ou NetStream. Par défaut, cette propriété est définie sur FALSE (les connexions P2P sont activées).
         
         <p class="- topic/p ">Si connexions P2P sont désactivées (vous pouvez définir cette propriété sur TRUE), la boîte de dialogue d’avertissement P2P est masquée. Dans ce cas, aucune connexion de voisin ne peut être établie et aucun membre du groupe ne peut utiliser la bande passante en amont. Il n’est généralement utile de désactiver les connexions P2P de cette manière que lors de la réception de flux multidiffusion via une multidiffusion IP pure.</p>
         
         </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:GroupSpecifier:postingEnabled:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">postingEnabled</apiName><shortdesc class="- topic/shortdesc ">
         Indique si la publication est activée pour l’objet NetGroup.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
         Indique si la publication est activée pour l’objet NetGroup. Par défaut, cette propriété est définie sur FALSE (la publication est désactivée).
         
         </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetGroup/post()" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetGroup.post()</linktext></link></related-links></apiValue><apiValue id="flash.net:GroupSpecifier:routingEnabled:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">routingEnabled</apiName><shortdesc class="- topic/shortdesc ">
         Indique si les méthodes de routage direct sont activées pour l’objet NetGroup. </shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
         Indique si les méthodes de routage direct sont activées pour l’objet NetGroup. Par défaut, cette propriété est définie sur FALSE (les méthodes de routage direct sont désactivées).
         
         </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetGroup/sendToNearest()" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetGroup.sendToNearest()</linktext></link></related-links></apiValue><apiValue id="flash.net:GroupSpecifier:serverChannelEnabled:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">serverChannelEnabled</apiName><shortdesc class="- topic/shortdesc ">
         Indique si les membres du groupe réseau peuvent ouvrir un canal vers le serveur.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
         Indique si les membres du groupe réseau peuvent ouvrir un canal vers le serveur. Par défaut, cette propriété est définie sur FALSE.
         
         <p class="- topic/p ">Il est nécessaire d’ouvrir un canal vers le serveur avant que le serveur puisse fournir des fonctions de prise en charge aux membres du groupe. Selon la configuration du serveur, les fonctions de prise en charge peuvent (ou non) être fournies sur ce canal.</p>
         
         </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.net:LocalConnection" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">LocalConnection</apiName><shortdesc class="- topic/shortdesc ">
 La classe LocalConnection vous permet de créer un objet LocalConnection capable d’invoquer une méthode dans un autre objet LocalConnection.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">LocalConnection
 
  </keyword></asCustoms></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:EventDispatcher</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 La classe LocalConnection vous permet de créer un objet LocalConnection capable d’invoquer une méthode dans un autre objet LocalConnection. La communication peut avoir lieu :
 
 <ul class="- topic/ul "><li class="- topic/li ">au sein d’un fichier SWF unique ;</li><li class="- topic/li ">entre plusieurs fichiers SWF ;</li><li class="- topic/li ">entre le contenu (de type SWF ou HTML) des applications AIR ;</li><li class="- topic/li ">entre le contenu (de type SWF ou HTML) d’une application AIR et le contenu SWF s’exécutant dans un navigateur.</li></ul>
 
 <p class="- topic/p "><i class="+ topic/ph hi-d/i ">Prise en charge du profil AIR :</i> cette fonctionnalité est prise en charge sur tous les systèmes d’exploitation de bureau et sur tous les périphériques AIR pour TV, mais ne l’est pas sur les périphériques mobiles. Vous pouvez tester la prise en charge lors de l’exécution à l’aide de la propriété <codeph class="+ topic/ph pr-d/codeph ">LocalConnection.isSupported</codeph>. Voir <xref href="http://help.adobe.com/en_US/air/build/WS144092a96ffef7cc16ddeea2126bb46b82f-8000.html" class="- topic/xref ">Prise en charge du profil AIR</xref> pour plus d’informations sur la prise en charge de l’API dans plusieurs profils.</p>
 
 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Remarque : </b>les périphériques AIR pour TV prennent en charge la communication uniquement entre le contenu basé sur SWF dans les applications AIR.</p>
 
 <p class="- topic/p ">Les connexions locales autorisent ce type de communication entre les fichiers SWF sans passer par <codeph class="+ topic/ph pr-d/codeph ">fscommand()</codeph> ni JavaScript. Les objets LocalConnection ne peuvent communiquer qu’avec les fichiers s’exécutant sur un même ordinateur client, mais peuvent s’exécuter dans diverses applications ; un fichier s’exécutant dans un navigateur et un autre dans Adobe AIR, par exemple. </p>
 
 <p class="- topic/p ">Les objets LocalConnection créés dans ActionScript 3.0 peuvent communiquer avec les objets LocalConnection créés dans ActionScript 1.0 ou 2.0. L’inverse est également vrai : les objets LocalConnection créés dans ActionScript 1.0 ou 2.0 peuvent communiquer avec les objets LocalConnection créés dans ActionScript 3.0. Flash Player gère automatiquement les communications entre les objets LocalConnection de versions différentes.</p>
 
 <p class="- topic/p ">Il existe trois façons d’ajouter des méthodes de rappel à un objet LocaConnection :</p>
 
 <ul class="- topic/ul "><li class="- topic/li ">Créer des sous-classes de LocalConnection et ajouter des méthodes</li><li class="- topic/li ">Définir la propriété <codeph class="+ topic/ph pr-d/codeph ">LocalConnection.client</codeph> sur un objet qui implémente ces méthodes</li><li class="- topic/li ">Créer une classe dynamique qui étend la classe LocalConnection et y joindre dynamiquement des méthodes</li></ul>
 
 <p class="- topic/p ">Pour comprendre comment utiliser les objets LocalConnection afin de permettre les communications entre deux fichiers, il est utile d’identifier les commandes utilisées dans chaque fichier. L’un des fichiers est appelé fichier <i class="+ topic/ph hi-d/i ">de réception</i>. Il contient la méthode à appeler. Le fichier de réception doit contenir un objet LocalConnection et un appel de la méthode <codeph class="+ topic/ph pr-d/codeph ">connect()</codeph>. L’autre fichier est dit <i class="+ topic/ph hi-d/i ">d’envoi</i>. Il s’agit de celui qui appelle la méthode. Le fichier d’envoi doit contenir un autre objet LocalConnection et un appel de la méthode <codeph class="+ topic/ph pr-d/codeph ">send()</codeph>.</p>
 
 <p class="- topic/p ">L’utilisation des méthodes <codeph class="+ topic/ph pr-d/codeph ">send()</codeph> et <codeph class="+ topic/ph pr-d/codeph ">connect()</codeph> varie selon que les fichiers se trouvent dans un même domaine, dans des domaines différents avec des noms prévisibles, ou dans des domaines différents avec des noms imprévisibles ou dynamiques. Les paragraphes ci-après décrivent ces trois situations et présentent des exemples de code pour chacune d’elles.</p>
 
 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Même domaine</b>. La manière la plus simple d’utiliser un objet LocalConnection est d’autoriser la communication uniquement entre les objets LocalConnection appartenant au même domaine, car les communications intra-domaine sont autorisées par défaut. Lorsque deux fichiers d’un même domaine communiquent, vous n’avez pas besoin d’implémenter des mesures de sécurité particulières. Vous transmettez simplement la même valeur pour le paramètre <codeph class="+ topic/ph pr-d/codeph ">connectionName</codeph> aux deux méthodes <codeph class="+ topic/ph pr-d/codeph ">connect()</codeph> et <codeph class="+ topic/ph pr-d/codeph ">send()</codeph> :</p>
 
 <p class="- topic/p "><adobeimage alt="Chargement depuis le même domaine" href="../../images/localconnection_samedomains.gif" placement="inline" class="+ topic/image adobe-d/adobeimage "/></p>
 
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
// receivingLC is in http://www.domain.com/receiving.swf
receivingLC.connect('myConnection');

// sendingLC is in http://www.domain.com/sending.swf
// myMethod() is defined in sending.swf
sendingLC.send('myConnection', 'myMethod');
</codeblock>
 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Domaines différents avec des noms prévisibles</b>. Lorsque deux fichiers SWF de domaines différents communiquent, vous devez autoriser les échanges entre ces derniers en appelant la méthode <codeph class="+ topic/ph pr-d/codeph ">allowDomain()</codeph>. Vous devez aussi qualifier le nom de la connexion dans la méthode <codeph class="+ topic/ph pr-d/codeph ">send()</codeph> à l’aide du nom du domaine de l’objet LocalConnection de réception :</p>
 
 <p class="- topic/p "><adobeimage alt="Chargement depuis des domaines distincts" href="../../images/localconnection_differentdomains.gif" placement="inline" class="+ topic/image adobe-d/adobeimage "/></p>
 
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
// receivingLC is in http://www.domain.com/receiving.swf
receivingLC.allowDomain('www.anotherdomain.com');
receivingLC.connect('myConnection');

// sendingLC is in http://www.anotherdomain.com/sending.swf
sendingLC.send('www.domain.com:myConnection', 'myMethod');
</codeblock>
 
 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Domaines différents avec des noms imprévisibles</b>. Il se peut que vous souhaitiez accroître la portabilité interdomaines du fichier contenant l’objet LocalConnection de réception. Pour éviter de spécifier le nom de domaine dans la méthode <codeph class="+ topic/ph pr-d/codeph ">send()</codeph> tout en indiquant que les objets LocalConnection d’envoi et de réception ne se trouvent pas dans le même domaine, faites précéder le nom de connexion d’un caractère de soulignement (_) dans les appels de <codeph class="+ topic/ph pr-d/codeph ">connect()</codeph> et <codeph class="+ topic/ph pr-d/codeph ">send()</codeph>. Pour autoriser les échanges entre les deux domaines, appelez la méthode <codeph class="+ topic/ph pr-d/codeph ">allowDomain()</codeph> et transmettez les domaines à partir desquels vous voulez autoriser les appels LocalConnection. Vous pouvez aussi transmettre l’argument générique (~~) pour autoriser les appels en provenance de tous les domaines :</p>
 
 <p class="- topic/p "><adobeimage alt="Chargement à partir de noms de domaine inconnus" href="../../images/localconnection_unknowndomains.gif" placement="inline" class="+ topic/image adobe-d/adobeimage "/></p>
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
// receivingLC is in http://www.domain.com/receiving.swf
receivingLC.allowDomain('~~');
receivingLC.connect('_myConnection');

// sendingLC is in http://www.anotherdomain.com/sending.swf
sendingLC.send('_myConnection', 'myMethod');
</codeblock>
 
 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">De Flash Player à une application AIR</b>. Un objet LocalConnection créé dans le sandbox de l’application AIR utilise une chaîne spéciale comme préfixe de connexion au lieu d’un nom de domaine. Cette chaîne à la forme suivante : <codeph class="+ topic/ph pr-d/codeph ">app#appID.pubID</codeph>, où appID correspond à l’ID d’application et pubID à l’ID d’éditeur de l’application. (Incluez l’ID de l’éditeur uniquement si l’application AIR en utilise un.) Par exemple, si une application AIR possède un ID d’application « com.example » mais pas d’ID d’éditeur, vous pouvez utiliser<codeph class="+ topic/ph pr-d/codeph ">app#com.example:myConnection</codeph> comme chaîne de connexion locale. L’application AIR doit également appeler la méthode <codeph class="+ topic/ph pr-d/codeph ">allowDomain()</codeph> en transmettant le domaine d’origine du fichier SWF appelant : </p>
 
 <p class="- topic/p "><adobeimage alt="Connexion de Flash Player à AIR" href="../../images/localconnection_flash2AIR.gif" placement="inline" class="+ topic/image adobe-d/adobeimage "/></p>
 
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
// receivingLC is an AIR application with app ID = com.example (and no publisher ID)
receivingLC.allowDomain('www.domain.com');
receivingLC.connect('myConnection');

// sendingLC is in http://www.domain.com/sending.swf
sendingLC.send('app#com.example:myConnection', 'myMethod');
</codeblock>
 
 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Remarque :</b> si une application AIR charge un fichier SWF en dehors du sandbox de l’application AIR, les règles permettant d’établir une connexion locale avec ce fichier SWF sont les mêmes que les règles permettant d’établir une connexion locale avec un fichier SWF s’exécutant dans Flash Player.</p>
 
 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">D’une application AIR à Flash Player</b>. Lorsqu’une application AIR communique avec un fichier SWF s’exécutant dans le moteur d’exécution de Flash Player, vous devez autoriser la communication entre les deux en appelant la méthode <codeph class="+ topic/ph pr-d/codeph ">allowDomain()</codeph> et en transmettant le préfixe de connexion de l’application AIR. Par exemple, si une application AIR a un ID d’application « com.example » et aucun ID d’éditeur, vous pouvez transmettre la chaîne <codeph class="+ topic/ph pr-d/codeph ">app#com.example</codeph> à la méthode <codeph class="+ topic/ph pr-d/codeph ">allowDomain()</codeph>. Vous devez par ailleurs qualifier le nom de la connexion dans la méthode <codeph class="+ topic/ph pr-d/codeph ">send()</codeph> avec le nom du domaine de l’objet LocalConnection récepteur (utilisez « localhost » comme domaine pour les fichiers SWF chargés à partir du système de fichiers local) :</p>
 
 <p class="- topic/p "><adobeimage alt="Communication entre AIR et Flash Player" href="../../images/localconnection_AIR2flash.gif" placement="inline" class="+ topic/image adobe-d/adobeimage "/></p>
 
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
// receivingLC is in http://www.domain.com/receiving.swf
receivingLC.allowDomain('app#com.example');
receivingLC.connect('myConnection');

// sendingLC is an AIR application with app ID = com.example (and no publisher ID)
sendingLC.send('www.domain.com:myConnection', 'myMethod');
</codeblock>
 
 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">D’une application AIR à une autre application AIR</b>. Pour communiquer entre deux applications AIR, vous devez autoriser la communication entre les deux en appelant la méthode <codeph class="+ topic/ph pr-d/codeph ">allowDomain()</codeph> et en transmettant le préfixe de connexion de l’application AIR émettrice. Par exemple, si l’application émettrice possède un ID d’application « com.example » mais pas d’ID d’éditeur, vous pouvez transmettre la chaîne <codeph class="+ topic/ph pr-d/codeph ">app#com.example</codeph> à la méthode <codeph class="+ topic/ph pr-d/codeph ">allowDomain()</codeph> de l’application réceptrice. Vous devez par ailleurs qualifier le nom de la connexion dans la méthode <codeph class="+ topic/ph pr-d/codeph ">send()</codeph> à l’aide du préfixe de connexion de l’objet LocalConnection récepteur :</p>
 
 <p class="- topic/p "><adobeimage alt="Communication AIR-AIR" href="../../images/localconnection_AIR2AIR.gif" placement="inline" class="+ topic/image adobe-d/adobeimage "/></p>
 
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
// receivingLC is an AIR application with app ID = com.sample (and no publisher ID)
receivingLC.allowDomain('app#com.example');
receivingLC.connect('myConnection');

// sendingLC is an AIR application with app ID = com.example (and no publisher ID)
sendingLC.send('app#com.sample:myConnection', 'myMethod');
</codeblock>
 
 <p class="- topic/p ">Vous pouvez utiliser les objets LocalConnection pour envoyer et recevoir des données au sein d’un même fichier, mais ce n’est pas l’implémentation la plus répandue.</p>
 
 <p class="- topic/p ">Pour plus d’informations sur les méthodes <codeph class="+ topic/ph pr-d/codeph ">send()</codeph> et <codeph class="+ topic/ph pr-d/codeph ">connect()</codeph>, voir description du paramètre <codeph class="+ topic/ph pr-d/codeph ">connectionName</codeph> dans les entrées de <codeph class="+ topic/ph pr-d/codeph ">LocalConnection.send()</codeph> et <codeph class="+ topic/ph pr-d/codeph ">LocalConnection.connect()</codeph>. Voir également les entrées de <codeph class="+ topic/ph pr-d/codeph ">allowDomain()</codeph> et <codeph class="+ topic/ph pr-d/codeph ">domain</codeph>.</p>
 
 </apiDesc><example conref="examples\LocalConnectionSenderExample.as" class="- topic/example "> Cet exemple comprend deux classes ActionScript qui doivent être compilées dans deux fichiers SWF distincts :
 
 <p class="- topic/p ">Une occurrence de LocalConnection est créée dans le fichier SWF LocalConnectionSenderExample. Lorsque l’utilisateur appuie sur le bouton, la méthode <codeph class="+ topic/ph pr-d/codeph ">call()</codeph> est utilisée pour appeler la méthode <codeph class="+ topic/ph pr-d/codeph ">lcHandler</codeph> dans le fichier SWF contenant le nom de connexion « myConnection » et le contenu de TextField est transmis en tant que paramètre.</p>
 
 <p class="- topic/p ">Une occurrence de LocalConnection est créée dans le fichier SWF LocalConnectionReceiverExample et la méthode<codeph class="+ topic/ph pr-d/codeph ">connect()</codeph> est appelée pour désigner ce fichier SWF comme destinataire des messages adressés à la connexion « myConnection ». En outre, cette classe comprend une méthode publique intitulée <codeph class="+ topic/ph pr-d/codeph ">lcHandler()</codeph>. Il s’agit de la méthode appelée par le fichier SWF LocalConnectionSenderExample. Lorsqu’elle est appelée, le texte reçu en tant que paramètre est ajouté à TextField sur la scène.</p>
 
 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Remarque :</b> pour tester l’exemple, chargez les deux fichiers SWF simultanément sur le même ordinateur.</p>
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">

// Code in LocalConnectionSenderExample.as
package {
    import flash.display.Sprite;
    import flash.events.MouseEvent;
    import flash.net.LocalConnection;
    import flash.text.TextField;
    import flash.text.TextFieldType;
    import flash.events.StatusEvent;
    import flash.text.TextFieldAutoSize;

    public class LocalConnectionSenderExample extends Sprite {
        private var conn:LocalConnection;
        
        // UI elements
        private var messageLabel:TextField;
        private var message:TextField;
        private var sendBtn:Sprite;
        
        public function LocalConnectionSenderExample() {
            buildUI();
            sendBtn.addEventListener(MouseEvent.CLICK, sendMessage);
            conn = new LocalConnection();
            conn.addEventListener(StatusEvent.STATUS, onStatus);
        }
        
        private function sendMessage(event:MouseEvent):void {
            conn.send("myConnection", "lcHandler", message.text);
        }
        
        private function onStatus(event:StatusEvent):void {
            switch (event.level) {
                case "status":
                    trace("LocalConnection.send() succeeded");
                    break;
                case "error":
                    trace("LocalConnection.send() failed");
                    break;
            }
        }
        
        private function buildUI():void {
            const hPadding:uint = 5;
            // messageLabel
            messageLabel = new TextField();
            messageLabel.x = 10;
            messageLabel.y = 10;
            messageLabel.text = "Text to send:";
            messageLabel.autoSize = TextFieldAutoSize.LEFT;
            addChild(messageLabel);
            
            // message
            message = new TextField();
            message.x = messageLabel.x + messageLabel.width + hPadding;
            message.y = 10;
            message.width = 120;
            message.height = 20;
            message.background = true;
            message.border = true;
            message.type = TextFieldType.INPUT;
            addChild(message);
            
            // sendBtn
            sendBtn = new Sprite();
            sendBtn.x = message.x + message.width + hPadding;
            sendBtn.y = 10;
            var sendLbl:TextField = new TextField();
            sendLbl.x = 1 + hPadding;
            sendLbl.y = 1;
            sendLbl.selectable = false;
            sendLbl.autoSize = TextFieldAutoSize.LEFT;
            sendLbl.text = "Send";
            sendBtn.addChild(sendLbl);
            sendBtn.graphics.lineStyle(1);
            sendBtn.graphics.beginFill(0xcccccc);
            sendBtn.graphics.drawRoundRect(0, 0, (sendLbl.width + 2 + hPadding + hPadding), (sendLbl.height + 2), 5, 5);
            sendBtn.graphics.endFill();
            addChild(sendBtn);
        }
    }
}
</codeblock></example><example conref="examples\LocalConnectionReceiverExample.as" class="- topic/example "><codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
// Code in LocalConnectionReceiverExample.as
package {
    import flash.display.Sprite;
    import flash.net.LocalConnection;
    import flash.text.TextField;

    public class LocalConnectionReceiverExample extends Sprite {
        private var conn:LocalConnection;
        private var output:TextField;
        
        public function LocalConnectionReceiverExample()     {
            buildUI();
            
            conn = new LocalConnection();
            conn.client = this;
            try {
                conn.connect("myConnection");
            } catch (error:ArgumentError) {
                trace("Can't connect...the connection name is already being used by another SWF");
            }
        }
        
        public function lcHandler(msg:String):void {
            output.appendText(msg + "\n");
        }
        
        private function buildUI():void {
            output = new TextField();
            output.background = true;
            output.border = true;
            output.wordWrap = true;
            addChild(output);
        }
    }
}
</codeblock></example></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.net.xml#LocalConnection/send()" class="- topic/link "><linktext class="- topic/linktext ">flash.net.LocalConnection.send()</linktext></link><link href="flash.net.xml#LocalConnection/allowDomain()" class="- topic/link "><linktext class="- topic/linktext ">flash.net.LocalConnection.allowDomain()</linktext></link><link href="flash.net.xml#LocalConnection/domain" class="- topic/link "><linktext class="- topic/linktext ">flash.net.LocalConnection.domain</linktext></link></related-links><adobeApiEvent id="flash.net:LocalConnection_flash.events.StatusEvent.STATUS_status" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">status</apiName><shortdesc class="- topic/shortdesc ">
 Distribué lorsqu’un objet LocalConnection publie son état.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.StatusEvent.STATUS</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.StatusEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Distribué lorsqu’un objet LocalConnection publie son état. Si <codeph class="+ topic/ph pr-d/codeph ">LocalConnection.send()</codeph> aboutit, la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">level</codeph> de l’objet d’événement <codeph class="+ topic/ph pr-d/codeph ">status</codeph> correspond à <codeph class="+ topic/ph pr-d/codeph ">"status"</codeph>. Dans le cas contraire, la propriété <codeph class="+ topic/ph pr-d/codeph ">level</codeph> correspond à <codeph class="+ topic/ph pr-d/codeph ">"error"</codeph>. Si le fichier de réception refuse la connexion, l’appel peut échouer sans que le fichier d’envoi n’en soit averti.
 
 </apiDesc></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.net.xml#LocalConnection/send()" class="- topic/link "><linktext class="- topic/linktext ">LocalConnection.send()</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.net:LocalConnection_flash.events.SecurityErrorEvent.SECURITY_ERROR_securityError" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">securityError</apiName><shortdesc class="- topic/shortdesc ">
 Distribué si un appel de LocalConnection.send() tente d’envoyer des données à un autre sandbox de sécurité.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.SecurityErrorEvent.SECURITY_ERROR</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.SecurityErrorEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Distribué si un appel de <codeph class="+ topic/ph pr-d/codeph ">LocalConnection.send()</codeph> tente d’envoyer des données à un autre sandbox de sécurité.
 </apiDesc></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.net.xml#LocalConnection/send()" class="- topic/link "><linktext class="- topic/linktext ">send()</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.net:LocalConnection_flash.events.AsyncErrorEvent.ASYNC_ERROR_asyncError" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">asyncError</apiName><shortdesc class="- topic/shortdesc ">
 Distribué lorsqu’une erreur est renvoyée de manière asynchrone ; autrement dit, lorsqu’elle provient du code asynchrone natif.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.AsyncErrorEvent.ASYNC_ERROR</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.AsyncErrorEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Distribué lorsqu’une erreur est renvoyée de manière asynchrone ; autrement dit, lorsqu’elle provient du code asynchrone natif.
 
 </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="flash.net:LocalConnection:LocalConnection" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">LocalConnection</apiName><shortdesc class="- topic/shortdesc ">
     Crée un objet LocalConnection.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><oldexample>The following example shows how receiving and sending files create LocalConnnection objects.
     The two files can use the same name or different names for their respective LocalConnection objects.
     In this example they use different names.
     
     <listing>
     // Code in the receiving file
     this.createTextField("result_txt", 1, 10, 10, 100, 22);
     result_txt.border = true;
     var receiving_lc:LocalConnection = new LocalConnection();
     receiving_lc.methodToExecute = function(param1:Number, param2:Number) {
       result_txt.text = param1+param2;
     };
     receiving_lc.connect("lc_name");
     </listing>
     
     <p class="- topic/p ">The following file sends the request to the first file.</p>
     
     <listing>
     // Code in the sending file
     var sending_lc:LocalConnection = new LocalConnection();
     sending_lc.send("lc_name", "methodToExecute", 5, 7);
     </listing>
     
     </oldexample></asCustoms></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Crée un objet LocalConnection. Les objets LocalConnection vous permettent d’activer les communications entre différents fichiers s’exécutant sur un même ordinateur client.
     
     </apiDesc></apiConstructorDetail><related-links class="- topic/related-links "><link href="flash.net.xml#LocalConnection/connect()" class="- topic/link "><linktext class="- topic/linktext ">flash.net.LocalConnection.connect()</linktext></link><link href="flash.net.xml#LocalConnection/send()" class="- topic/link "><linktext class="- topic/linktext ">flash.net.LocalConnection.send()</linktext></link></related-links></apiConstructor><apiOperation id="flash.net:LocalConnection:allowDomain" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">allowDomain</apiName><shortdesc class="- topic/shortdesc ">
     Spécifie un ou plusieurs domaines qui peuvent envoyer des appels LocalConnection à cette occurrence de LocalConnection.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><internal>Change the first example in the listing.
     </internal></asCustoms></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Les paramètres spécifiés doivent être des chaînes réglées sur une valeur autre que null.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">domains</apiItemName><apiType value="restParam" name="type" class="- topic/state reference/state apiRef/apiType "/><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Une ou plusieurs chaînes qui nomment les domaines à partir desquels les appels LocalConnection seront autorisés. Ce paramètre est associé à deux cas spéciaux :
     
     <ul class="- topic/ul "><li class="- topic/li ">Vous pouvez spécifier le caractère générique « ~~ » pour autoriser les appels en provenance de tous les domaines.</li><li class="- topic/li ">Vous pouvez spécifier la chaîne <codeph class="+ topic/ph pr-d/codeph ">localhost</codeph> pour autoriser les appels de ce fichier à partir de fichiers installés localement. <ph class="- topic/ph ">Dans Flash Player 8, des restrictions de sécurité relatives aux fichiers locaux ont été introduites. Par défaut, un fichier SWF s’exécutant dans Flash Player autorisé à accéder à Internet n’a pas accès au système de fichiers local. Dans Flash Player, si vous spécifiez <codeph class="+ topic/ph pr-d/codeph ">localhost</codeph>, tout fichier SWF local peut accéder à ce fichier SWF.</ph> </li></ul>
     
     </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Spécifie un ou plusieurs domaines qui peuvent envoyer des appels LocalConnection à cette occurrence de LocalConnection.
     
     <p class="- topic/p ">Vous ne pouvez pas utiliser cette méthode pour permettre aux fichiers hébergés à l’aide d’un protocole sécurisé (HTTPS) d’autoriser un accès à partir de fichiers hébergés avec des protocoles non sécurisés ; vous devez pour cela utiliser la méthode <codeph class="+ topic/ph pr-d/codeph ">allowInsecureDomain()</codeph>.</p>
     
     <p class="- topic/p ">Vous pouvez utiliser cette méthode pour faire en sorte qu’un fichier enfant issu d’un domaine différent puisse effectuer des appels LocalConnection vers le fichier parent, sans connaître le domaine final dont émanera le fichier enfant. Cela peut se produire, par exemple, lorsque vous utilisez des redirections d’équilibrage de charge ou des serveurs tiers. Dans ce cas, vous pouvez utiliser la propriété <codeph class="+ topic/ph pr-d/codeph ">url</codeph> de l’objet LoaderInfo utilisé avec le chargement de sorte que le domaine s’utilise avec la méthode <codeph class="+ topic/ph pr-d/codeph ">allowDomain()</codeph>. Par exemple, si vous chargez un fichier enfant à l’aide d’un objet Loader, à l’issue du chargement, vous pouvez vérifier la propriété <codeph class="+ topic/ph pr-d/codeph ">contentLoaderInfo.url</codeph> de l’objet Loader et analyser le domaine à travers la chaîne URL complète. Si vous procédez ainsi, veillez à attendre la fin du chargement du fichier, car la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">contentLoaderInfo.url</codeph> ne sera correcte et définitive qu’une fois le fichier entièrement chargé. </p>
     
     <p class="- topic/p ">Le cas contraire peut aussi se présenter : vous pouvez créer un fichier enfant qui souhaite accepter les appels LocalConnection émanant de son parent, mais qui ignore le domaine de ce dernier. Dans ce cas, mettez en œuvre cette méthode en vérifiant si l’argument de domaine correspond au domaine de la propriété <codeph class="+ topic/ph pr-d/codeph ">loaderInfo.url</codeph> dans le fichier chargé. Encore une fois, vous devez analyser le domaine à partir de l’adresse URL complète de <codeph class="+ topic/ph pr-d/codeph ">loaderInfo.url</codeph>. Dans ce cas, il n’est pas nécessaire d’attendre la fin du chargement du fichier parent ; le parent sera déjà chargé lorsque celui de l’enfant commencera.</p>
     
     <p class="- topic/p ">Lorsque vous employez cette méthode, tenez compte du modèle de sécurité de Flash Player. Par défaut, un objet LocalConnection est associé au sandbox du fichier qui l’a créé et les appels interdomaines des objets LocalConnection sont interdits, à moins que vous n’appeliez la méthode <codeph class="+ topic/ph pr-d/codeph ">LocalConnection.allowDomain()</codeph> dans le fichier de réception. Néanmoins, dans Adobe AIR, le contenu du sandbox de sécurité <codeph class="+ topic/ph pr-d/codeph ">application</codeph> (contenu installé avec l’application AIR) n’est pas soumis à ces restrictions de sécurité.</p>
     
     <p class="- topic/p ">Pour plus d’informations concernant la sécurité, voir la rubrique du Pôle de développement Flash Player : <xref href="http://www.adobe.com/go/devnet_security_fr" scope="external" class="- topic/xref ">Sécurité</xref> (disponible en anglais uniquement).</p>
     
     <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Remarque</b> : le format de la méthode <codeph class="+ topic/ph pr-d/codeph ">allowDomain()</codeph> n’est plus le même que dans ActionScript 1.0 et 2.0. Dans ces versions, <codeph class="+ topic/ph pr-d/codeph ">allowDomain</codeph> était une méthode de rappel que vous implémentiez. Dans ActionScript 3.0, <codeph class="+ topic/ph pr-d/codeph ">allowDomain()</codeph> est une méthode intégrée de LocalConnection que vous appelez. Le fonctionnement de la nouvelle version de <codeph class="+ topic/ph pr-d/codeph ">allowDomain()</codeph> est similaire à celui de <codeph class="+ topic/ph pr-d/codeph ">flash.system.Security.allowDomain()</codeph>.</p>
     
     </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#LocalConnection/allowInsecureDomain()" class="- topic/link "><linktext class="- topic/linktext ">flash.net.LocalConnection.allowInsecureDomain()</linktext></link><link href="flash.display.xml#LoaderInfo/url" class="- topic/link "><linktext class="- topic/linktext ">flash.display.LoaderInfo.url</linktext></link><link href="flash.system.xml#Security/allowDomain()" class="- topic/link "><linktext class="- topic/linktext ">flash.system.Security.allowDomain()</linktext></link></related-links></apiOperation><apiOperation id="flash.net:LocalConnection:allowInsecureDomain" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">allowInsecureDomain</apiName><shortdesc class="- topic/shortdesc ">
     Spécifie un ou plusieurs domaines qui peuvent envoyer des appels LocalConnection à cet objet LocalConnection.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><internal>Seems like a security note is in order here.
     </internal></asCustoms></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Les paramètres spécifiés doivent être des chaînes réglées sur une valeur autre que null.
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">domains</apiItemName><apiType value="restParam" name="type" class="- topic/state reference/state apiRef/apiType "/><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Une ou plusieurs chaînes qui nomment les domaines à partir desquels les appels LocalConnection seront autorisés. Ce paramètre est associé à deux cas spéciaux :
     <ul class="- topic/ul "><li class="- topic/li ">Vous pouvez spécifier le caractère générique « ~~ » pour autoriser les appels en provenance de tous les domaines. « ~~ » exclut les hôtes locaux.</li><li class="- topic/li ">Vous pouvez spécifier la chaîne <codeph class="+ topic/ph pr-d/codeph ">localhost</codeph> pour autoriser les appels de ce fichier SWF à partir de fichiers SWF installés localement. Dans Flash Player 8, des restrictions de sécurité relatives aux fichiers SWF locaux ont été introduites. Un fichier SWF autorisé à accéder à Internet n’a pas accès au système de fichiers local. Si vous spécifiez <codeph class="+ topic/ph pr-d/codeph ">localhost</codeph>, tout fichier SWF local peut accéder à ce fichier SWF. N’oubliez pas que vous devez également désigner le fichier SWF appelant comme fichier SWF local avec accès au réseau lors de la création.</li></ul>
     
     </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Spécifie un ou plusieurs domaines qui peuvent envoyer des appels LocalConnection à cet objet LocalConnection.
     
     <p class="- topic/p ">Le fonctionnement des méthodes <codeph class="+ topic/ph pr-d/codeph ">allowInsecureDomain()</codeph> et <codeph class="+ topic/ph pr-d/codeph ">allowDomain()</codeph> est identique, mais la méthode <codeph class="+ topic/ph pr-d/codeph ">allowInsecureDomain()</codeph> permet en outre aux fichiers de source non HTTPS d’envoyer des appels LocalConnection à des fichiers SWF de source HTTPS. Cette différence n’a d’importance que si vous appelez la méthode <codeph class="+ topic/ph pr-d/codeph ">allowInsecureDomain()</codeph> à partir d’un fichier chargé via HTTPS. Vous devez appeler la méthode <codeph class="+ topic/ph pr-d/codeph ">allowInsecureDomain()</codeph> même si vous franchissez une limite non HTTPS/HTTPS au sein du même domaine. Par défaut, les appels de LocalConnection entre les fichiers non HTTPS et les fichiers HTTPS sont systématiquement interdits, même au sein d’un même domaine.</p>
     
     <p class="- topic/p ">L’appel de <codeph class="+ topic/ph pr-d/codeph ">allowInsecureDomain()</codeph> est déconseillé, car il risque de compromettre la sécurité offerte par HTTPS. Lorsque vous chargez un fichier via HTTPS, vous avez la quasi-certitude qu’il ne sera pas altéré pendant sa mise en circulation dans le réseau. Si vous autorisez ensuite un fichier non HTTPS à effectuer des appels de LocalConnection vers le fichier HTTPS, vous acceptez des appels en provenance d’un fichier qui a pu être altéré pendant son transport. Vous devez donc redoubler de vigilance, car vous ne pouvez pas vous fier à l’authenticité des appels LocalConnection que reçoit votre fichier HTTPS.</p>
     
     <p class="- topic/p ">Par défaut, les fichiers hébergés via le protocole HTTPS sont accessibles uniquement aux autres fichiers hébergés également par l’intermédiaire du protocole HTTPS. Cette implémentation préserve l’intégrité fournie par le protocole HTTPS.</p>
     
     <p class="- topic/p ">Il n’est pas recommandé d’utiliser cette méthode pour annuler le comportement par défaut car elle compromet la sécurité HTTPS. Cependant, vous devrez peut-être l’utiliser, par exemple, si vous devez autoriser l’accès aux fichiers SWF publiés pour Flash Player 9 ou version ultérieure via HTTPS à partir de fichiers SWF publiés pour Flash Player 6 ou version antérieure via HTTP.</p>
     
     <p class="- topic/p ">Pour plus d’informations concernant la sécurité, voir la rubrique du Pôle de développement Flash Player : <xref href="http://www.adobe.com/go/devnet_security_fr" scope="external" class="- topic/xref ">Sécurité</xref> (disponible en anglais uniquement).</p>
     
     </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#LocalConnection/allowDomain()" class="- topic/link "><linktext class="- topic/linktext ">flash.net.LocalConnection.allowDomain()</linktext></link></related-links></apiOperation><apiOperation id="flash.net:LocalConnection:close" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">close</apiName><shortdesc class="- topic/shortdesc ">
     Ferme (déconnecte) un objet LocalConnection.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">LocalConnection, LocalConnection.close, close
     
      </keyword></asCustoms></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">L’occurrence de LocalConnection n’est pas connectée, elle ne peut donc pas être fermée.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Ferme (déconnecte) un objet LocalConnection. Appelez cette commande lorsque vous ne souhaitez plus que l’objet accepte de commandes, par exemple, lorsque vous souhaitez exécuter une commande <codeph class="+ topic/ph pr-d/codeph ">connect()</codeph> en utilisant le même paramètre <codeph class="+ topic/ph pr-d/codeph ">connectionName</codeph> dans un autre fichier SWF.
     
     </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#LocalConnection/connect()" class="- topic/link "><linktext class="- topic/linktext ">flash.net.LocalConnection.connect()</linktext></link></related-links></apiOperation><apiOperation id="flash.net:LocalConnection:connect" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">connect</apiName><shortdesc class="- topic/shortdesc ">
     Prépare un objet LocalConnection à recevoir les commandes envoyées à partir d’une commande send() (l’objet LocalConnection d’envoi).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">LocalConnection, LocalConnection.connect, connect
     
      </keyword></asCustoms></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">La valeur transmise au paramètre <codeph class="+ topic/ph pr-d/codeph ">connectionName</codeph> ne doit pas être nulle.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">TypeError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">TypeError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Cette erreur peut se produire pour trois raisons : 1) La valeur de chaîne transmise au paramètre <codeph class="+ topic/ph pr-d/codeph ">connectionName</codeph> était nulle. Utilisez une valeur non nulle. 2) La valeur transmise au paramètre <codeph class="+ topic/ph pr-d/codeph ">connectionName</codeph> contenait un deux-points (:). Les deux-points sont des caractères spéciaux utilisés pour séparer le super-domaine de la chaîne <codeph class="+ topic/ph pr-d/codeph ">connectionName</codeph> dans la méthode <codeph class="+ topic/ph pr-d/codeph ">send()</codeph>, pas dans la méthode <codeph class="+ topic/ph pr-d/codeph ">connect()</codeph>. 3) L’occurrence de LocalConnection est déjà connectée.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">connectionName</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Chaîne correspondant au nom de connexion spécifié dans la commande <codeph class="+ topic/ph pr-d/codeph ">send()</codeph> qui souhaite communiquer avec l’objet LocalConnection de réception.
     
     </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Prépare un objet LocalConnection à recevoir les commandes envoyées à partir d’une commande <codeph class="+ topic/ph pr-d/codeph ">send()</codeph> (l’<i class="+ topic/ph hi-d/i ">objet LocalConnection d’envoi</i>). L’objet utilisé avec la méthode <codeph class="+ topic/ph pr-d/codeph ">connect()</codeph> est appelé <i class="+ topic/ph hi-d/i ">objet LocalConnection de réception</i>. Les objets de réception et d’envoi doivent s’exécuter sur le même ordinateur client.
     
     <p class="- topic/p ">Pour éviter tout conflit, définissez les méthodes associées à l’objet LocalConnection de réception avant d’appeler cette méthode, comme illustré dans l’exemple de la classe LocalConnection. </p>
     
     <p class="- topic/p ">Par défaut, l’argument <codeph class="+ topic/ph pr-d/codeph ">connectionName</codeph> devient <codeph class="+ topic/ph pr-d/codeph ">"<i class="+ topic/ph hi-d/i ">superdomain</i>:connectionName"</codeph>, <codeph class="+ topic/ph pr-d/codeph "><i class="+ topic/ph hi-d/i ">superdomain</i></codeph> représentant le super-domaine du fichier qui contient la commande <codeph class="+ topic/ph pr-d/codeph ">connect()</codeph>. Par exemple, si le fichier contenant l’objet LocalConnection de réception se trouve à l’adresse www.someDomain.com, <codeph class="+ topic/ph pr-d/codeph ">connectionName</codeph> devient <codeph class="+ topic/ph pr-d/codeph ">"someDomain.com:connectionName"</codeph>. (si un fichier s’exécutant dans Flash Player se trouve sur l’ordinateur client, la valeur affectée au <codeph class="+ topic/ph pr-d/codeph ">superdomain</codeph> est <codeph class="+ topic/ph pr-d/codeph ">"localhost"</codeph>).</p>
     
     <p class="- topic/p ">Dans le cas de contenu s’exécutant dans le sandbox de sécurité <codeph class="+ topic/ph pr-d/codeph ">application</codeph> dans Adobe AIR (contenu installé avec l’application AIR), le moteur d’exécution remplace le super-domaine par la chaîne <codeph class="+ topic/ph pr-d/codeph ">app#</codeph> suivie de l’ID correspondant à l’application AIR (défini dans le fichier descripteur de l’application). Par exemple, l’argument <codeph class="+ topic/ph pr-d/codeph ">connectionName</codeph> d’une application dont l’ID est <codeph class="+ topic/ph pr-d/codeph ">com.example.air.MyApp</codeph> <codeph class="+ topic/ph pr-d/codeph ">connectionName</codeph> devient <codeph class="+ topic/ph pr-d/codeph ">"app#com.example.air.MyApp:connectionName"</codeph>.</p>
     
     <p class="- topic/p ">De même, par défaut, Flash Player ne permet à l’objet LocalConnection de réception de n’accepter que les commandes provenant d’objets LocalConnection d’envoi dont le nom de connexion correspond également à une valeur <codeph class="+ topic/ph pr-d/codeph ">"</codeph><codeph class="+ topic/ph pr-d/codeph "><i class="+ topic/ph hi-d/i ">superdomain</i></codeph><codeph class="+ topic/ph pr-d/codeph ">:connectionName"</codeph>. De cette manière, Flash Player facilite la communication entre les fichiers situés dans un même domaine.</p>
     
     <p class="- topic/p ">Si vous implémentez une communication uniquement entre des fichiers appartenant au même domaine, spécifiez pour <codeph class="+ topic/ph pr-d/codeph ">connectionName</codeph> une chaîne qui ne commence pas par un caractère de soulignement (_) et qui ne spécifie pas un nom de domaine (par exemple, <codeph class="+ topic/ph pr-d/codeph ">"myDomain:connectionName"</codeph>). Utilisez cette même chaîne dans la méthode <codeph class="+ topic/ph pr-d/codeph ">connect(connectionName)</codeph>.</p>
     
     <p class="- topic/p ">Si vous implémentez des communications entre des fichiers de domaines différents, la spécification pour <codeph class="+ topic/ph pr-d/codeph ">connectionName</codeph> d’une chaîne qui commence par un caractère de soulignement (_) accroît la portabilité interdomaines du fichier associé à l’objet LocalConnection de réception. Les cas de figure possibles sont les suivants :</p>
     
     <ul class="- topic/ul "><li class="- topic/li ">Si la chaîne dédiée à l’argument <codeph class="+ topic/ph pr-d/codeph ">connectionName</codeph> ne commence pas par un caractère de soulignement (_), un préfixe suivi de deux points est ajouté au super-domaine (par exemple, <codeph class="+ topic/ph pr-d/codeph ">"myDomain:connectionName"</codeph>). Vous avez ainsi la garantie que votre connexion n’entrera pas en conflit avec les connexions de même nom dans d’autres domaines. Cependant, tous les objets LocalConnection d’envoi doivent spécifier ce super-domaine (par exemple, <codeph class="+ topic/ph pr-d/codeph ">"myDomain:connectionName"</codeph>). Si le fichier associé à l’objet LocalConnection de réception est déplacé dans un autre domaine, Flash Player modifie le préfixe afin qu’il reflète le nouveau super-domaine (par exemple, <codeph class="+ topic/ph pr-d/codeph ">« anotherDomain:connectionName »</codeph>). Tous les objets LocalConnection d’envoi doivent être modifiés manuellement pour pointer vers le nouveau super-domaine.</li><li class="- topic/li ">Si la chaîne dédiée à l’argument <codeph class="+ topic/ph pr-d/codeph ">connectionName</codeph>commence par un caractère de soulignement (par exemple, <codeph class="+ topic/ph pr-d/codeph ">"_connectionName"</codeph>), aucun préfixe n’est ajouté à la chaîne. Les objets LocalConnection de réception et d’envoi utilisent donc des chaînes identiques pour <codeph class="+ topic/ph pr-d/codeph ">connectionName</codeph>. Si l’objet de réception utilise <codeph class="+ topic/ph pr-d/codeph ">allowDomain()</codeph> pour spécifier que les connexions seront acceptées à partir de tous les domaines, le fichier contenant l’objet LocalConnection de réception peut être déplacé dans un autre domaine, sans qu’il soit nécessaire de modifier les objets LocalConnection d’envoi.</li></ul>
     
     <p class="- topic/p ">Pour plus d’informations, voir la présentation de la classe et la section consacrée au paramètre <codeph class="+ topic/ph pr-d/codeph ">connectionName</codeph> de la méthode <codeph class="+ topic/ph pr-d/codeph ">send()</codeph>, ainsi que les entrées de <codeph class="+ topic/ph pr-d/codeph ">allowDomain()</codeph> et <codeph class="+ topic/ph pr-d/codeph ">domain</codeph>.</p>
     
     <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Remarque : </b>les deux-points sont utilisés en tant que caractères spéciaux pour séparer le super-domaine de la chaîne <codeph class="+ topic/ph pr-d/codeph ">connectionName</codeph>. Toute chaîne associée à <codeph class="+ topic/ph pr-d/codeph ">connectionName</codeph> contenant deux-points n’est pas valide.</p>
     
     <p class="- topic/p ">Lorsque vous utilisez cette méthode, tenez compte du modèle de sécurité <ph class="- topic/ph ">Flash Player</ph> : Par défaut, un objet LocalConnection est associé au sandbox du fichier qui l’a créé et les appels interdomaines des objets LocalConnection sont interdits, à moins que vous n’appeliez la méthode <codeph class="+ topic/ph pr-d/codeph ">LocalConnection.allowDomain()</codeph> dans le fichier de réception. <ph class="- topic/ph ">Vous pouvez empêcher un fichier d’utiliser cette méthode en définissant le paramètre <codeph class="+ topic/ph pr-d/codeph ">allowNetworking</codeph> des balises <codeph class="+ topic/ph pr-d/codeph ">object</codeph> et <codeph class="+ topic/ph pr-d/codeph ">embed</codeph> dans la page HTML qui comporte le contenu SWF.</ph> Néanmoins, dans Adobe AIR, le contenu du sandbox de sécurité <codeph class="+ topic/ph pr-d/codeph ">application</codeph> (contenu installé avec l’application AIR) n’est pas soumis à ces restrictions de sécurité.</p>
     
     <p class="- topic/p ">Pour plus d’informations concernant la sécurité, voir la rubrique du Pôle de développement Flash Player : <xref href="http://www.adobe.com/go/devnet_security_fr" scope="external" class="- topic/xref ">Sécurité</xref> (disponible en anglais uniquement).</p>
     
     </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#LocalConnection/send()" class="- topic/link "><linktext class="- topic/linktext ">flash.net.LocalConnection.send()</linktext></link><link href="flash.net.xml#LocalConnection/allowDomain()" class="- topic/link "><linktext class="- topic/linktext ">flash.net.LocalConnection.allowDomain()</linktext></link><link href="flash.net.xml#LocalConnection/domain" class="- topic/link "><linktext class="- topic/linktext ">flash.net.LocalConnection.domain</linktext></link></related-links></apiOperation><apiOperation id="flash.net:LocalConnection:send" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">send</apiName><shortdesc class="- topic/shortdesc ">
     Appelle la méthode nommée methodName sur une connexion établie à l’aide de la méthode connect(connectionName) (dans l’objet LocalConnection de réception).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">LocalConnection, LocalConnection.send, send
     
     
      </keyword></asCustoms></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">La valeur de <codeph class="+ topic/ph pr-d/codeph ">connectionName</codeph> ou de <codeph class="+ topic/ph pr-d/codeph ">methodName</codeph> est nulle. Transmettez des valeurs non nulles à ces paramètres.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">TypeError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">TypeError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Cette erreur peut se produire pour l’une des raisons suivantes : 1) La valeur de <codeph class="+ topic/ph pr-d/codeph ">connectionName</codeph> ou de <codeph class="+ topic/ph pr-d/codeph ">methodName</codeph> est une chaîne vide. Transmettez des chaînes valides pour ces paramètres. 2) La méthode spécifiée dans <codeph class="+ topic/ph pr-d/codeph ">methodName</codeph> est limitée. 3) Le message sérialisé envoyé est trop volumineux (plus de 40 Ko).
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">connectionName</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Correspond au nom de connexion spécifié dans la commande <codeph class="+ topic/ph pr-d/codeph ">connect()</codeph> qui souhaite communiquer avec l’objet LocalConnection d’envoi.
     
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">methodName</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Nom de la méthode à appeler dans l’objet LocalConnection de réception. Les noms de méthode suivants entraînent l’échec de la commande : <codeph class="+ topic/ph pr-d/codeph ">send</codeph>, <codeph class="+ topic/ph pr-d/codeph ">connect</codeph>, <codeph class="+ topic/ph pr-d/codeph ">close</codeph>, <codeph class="+ topic/ph pr-d/codeph ">allowDomain</codeph>, <codeph class="+ topic/ph pr-d/codeph ">allowInsecureDomain</codeph>, <codeph class="+ topic/ph pr-d/codeph ">client</codeph> et <codeph class="+ topic/ph pr-d/codeph ">domain</codeph>.
     
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">arguments</apiItemName><apiType value="restParam" name="type" class="- topic/state reference/state apiRef/apiType "/><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Paramètres facultatifs supplémentaires à transmettre à la méthode spécifiée.
     
     </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Appelle la méthode nommée <codeph class="+ topic/ph pr-d/codeph ">methodName</codeph> sur une connexion établie à l’aide de la méthode <codeph class="+ topic/ph pr-d/codeph ">connect(connectionName</codeph>) (dans l’<i class="+ topic/ph hi-d/i ">objet LocalConnection de réception</i>). L’objet utilisé avec la méthode <codeph class="+ topic/ph pr-d/codeph ">send()</codeph> est appelé <i class="+ topic/ph hi-d/i ">objet LocalConnection d’envoi</i>. Les fichiers SWF qui contiennent les objets d’envoi et de réception doivent s’exécuter sur le même ordinateur client.
     
     <p class="- topic/p ">La quantité de données que vous pouvez transmettre en tant que paramètres à cette commande est limitée à 40 Ko. Si <codeph class="+ topic/ph pr-d/codeph ">send()</codeph> émet une <codeph class="+ topic/ph pr-d/codeph ">ArgumentError</codeph> mais que votre syntaxe est correcte, tentez de répartir les requêtes <codeph class="+ topic/ph pr-d/codeph ">send()</codeph> dans plusieurs commandes, chacune comportant moins de 40 Ko de données.</p>
     
     <p class="- topic/p ">Comme nous l’avons vu à la rubrique <codeph class="+ topic/ph pr-d/codeph ">connect()</codeph>, le super-domaine actuel est ajouté à <codeph class="+ topic/ph pr-d/codeph ">connectionName</codeph> par défaut. Si vous implémentez la communication entre différents domaines, vous devez définir <codeph class="+ topic/ph pr-d/codeph ">connectionName</codeph> dans les objets LocalConnection d’envoi et de réception de sorte que le super-domaine actuel ne soit pas ajouté à <codeph class="+ topic/ph pr-d/codeph ">connectionName</codeph>. Pour ce faire, procédez de l’une des deux façons suivantes :</p>
     
     <ul class="- topic/ul "><li class="- topic/li ">Placez un caractère de soulignement (_) au début de <codeph class="+ topic/ph pr-d/codeph ">connectionName</codeph> dans les objets LocalConnection d’envoi et de réception. Dans le fichier contenant l’objet de réception, utilisez <codeph class="+ topic/ph pr-d/codeph ">LocalConnection.allowDomain()</codeph> pour spécifier que des connexions seront acceptées de tous les domaines. Cette implémentation vous permet de stocker vos fichiers d’envoi et de réception dans n’importe quel domaine.</li><li class="- topic/li ">Intégrez le super-domaine à <codeph class="+ topic/ph pr-d/codeph ">connectionName</codeph> dans l’objet LocalConnection d’envoi, par exemple, <codeph class="+ topic/ph pr-d/codeph ">myDomain.com:myConnectionName</codeph>. Dans l’objet de réception, utilisez <codeph class="+ topic/ph pr-d/codeph ">LocalConnection.allowDomain()</codeph> pour spécifier que les connexions à partir du super-domaine spécifié seront acceptées (dans ce cas, myDomain.com) ou que les connexions de tous les domaines seront acceptées.</li></ul>
     
     <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Remarque :</b> vous ne pouvez pas spécifier de super-domaine dans <codeph class="+ topic/ph pr-d/codeph ">connectionName</codeph> dans l’objet LocalConnection de réception ; vous ne pouvez le faire que dans celui d’envoi.</p>
     
     <p class="- topic/p ">Lorsque vous utilisez cette méthode, tenez compte du modèle de sécurité <ph class="- topic/ph ">Flash Player</ph> : Par défaut, un objet LocalConnection est associé au sandbox du fichier qui l’a créé et les appels interdomaines des objets LocalConnection sont interdits, à moins que vous n’appeliez la méthode <codeph class="+ topic/ph pr-d/codeph ">LocalConnection.allowDomain()</codeph> dans le fichier de réception. Dans le cas de contenu SWF s’exécutant dans le navigateur, vous pouvez empêcher un fichier d’utiliser cette méthode en définissant le paramètre <codeph class="+ topic/ph pr-d/codeph ">allowNetworking</codeph> des balises <codeph class="+ topic/ph pr-d/codeph ">object</codeph> et <codeph class="+ topic/ph pr-d/codeph ">embed</codeph> dans la page HTML qui héberge le contenu SWF. Néanmoins, dans Adobe AIR, le contenu du sandbox de sécurité <codeph class="+ topic/ph pr-d/codeph ">application</codeph> (contenu installé avec l’application AIR) n’est pas soumis à ces restrictions de sécurité.</p>
     
     <p class="- topic/p ">Pour plus d’informations concernant la sécurité, voir la rubrique du Pôle de développement Flash Player : <xref href="http://www.adobe.com/go/devnet_security_fr" scope="external" class="- topic/xref ">Sécurité</xref> (disponible en anglais uniquement).</p>
     
     </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#LocalConnection/allowDomain()" class="- topic/link "><linktext class="- topic/linktext ">flash.net.LocalConnection.allowDomain()</linktext></link><link href="flash.net.xml#LocalConnection/connect()" class="- topic/link "><linktext class="- topic/linktext ">flash.net.LocalConnection.connect()</linktext></link><link href="flash.net.xml#LocalConnection/domain" class="- topic/link "><linktext class="- topic/linktext ">flash.net.LocalConnection.domain</linktext></link></related-links><adobeApiEvent id="flash.net:LocalConnection:send_securityError" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">securityError</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:SecurityErrorEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">La méthode <codeph class="+ topic/ph pr-d/codeph ">LocalConnection.send()</codeph> a tenté de communiquer avec un fichier SWF appartenant à un sandbox de sécurité auquel le code effectuant l’appel n’a pas accès. Vous pouvez contourner ce problème dans l’implémentation de la méthode <codeph class="+ topic/ph pr-d/codeph ">LocalConnection.allowDomain()</codeph> du récepteur.
     
     </apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">LocalConnection.send() a tenté de communiquer avec un fichier SWF appartenant à un sandbox de sécurité auquel le code appelant n’a pas accès.</shortdesc></adobeApiEvent><adobeApiEvent id="flash.net:LocalConnection:send_status" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">status</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:StatusEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Si la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">level</codeph> correspond à <codeph class="+ topic/ph pr-d/codeph ">"status"</codeph>, l’appel a abouti. Si elle correspond à <codeph class="+ topic/ph pr-d/codeph ">"error"</codeph>, l’appel a échoué. L’appel peut échouer si le fichier SWF de réception refuse la connexion.
     
     </apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">Si la valeur de la propriété level correspond à « status », l’appel a abouti. Si elle correspond à « error », l’appel a échoué.</shortdesc></adobeApiEvent></apiOperation><apiValue id="flash.net:LocalConnection:client:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">client</apiName><shortdesc class="- topic/shortdesc ">
     Indique l’objet sur lequel des méthodes de rappel sont appelées.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Object</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">La propriété <codeph class="+ topic/ph pr-d/codeph ">client</codeph> ne peut pas être réglée sur l’objet null.
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">TypeError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">TypeError</apiOperationClassifier></apiException></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Indique l’objet sur lequel des méthodes de rappel sont appelées. L’objet par défaut correspond à <codeph class="+ topic/ph pr-d/codeph ">this</codeph>, la connexion locale en cours de création. Si vous réglez la propriété <codeph class="+ topic/ph pr-d/codeph ">client</codeph> sur un autre objet, les méthodes de rappel sont appelées sur celui-ci.
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:LocalConnection:domain:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">domain</apiName><shortdesc class="- topic/shortdesc ">
     Chaîne représentant le domaine de l’emplacement du fichier actuel.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">LocalConnection, LocalConnection.domain, domain
     
      </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Chaîne représentant le domaine de l’emplacement du fichier actuel.
     
     <p class="- topic/p ">Dans le cas de contenu s’exécutant dans le sandbox de sécurité <codeph class="+ topic/ph pr-d/codeph ">application</codeph> dans Adobe AIR (contenu installé avec l’application AIR), le moteur d’exécution remplace le super-domaine par la chaîne <codeph class="+ topic/ph pr-d/codeph ">app#</codeph> suivie de l’ID correspondant à l’application AIR (défini dans le fichier descripteur de l’application). Par exemple, l’argument <codeph class="+ topic/ph pr-d/codeph ">connectionName</codeph> d’une application dont l’ID est <codeph class="+ topic/ph pr-d/codeph ">com.example.air.MyApp</codeph> <codeph class="+ topic/ph pr-d/codeph ">connectionName</codeph> devient <codeph class="+ topic/ph pr-d/codeph ">"app#com.example.air.MyApp:connectionName"</codeph>.</p>
     
     <p class="- topic/p ">Dans les fichiers SWF publiés pour Flash Player 9 ou version ultérieure, la chaîne renvoyée correspond au domaine exact du fichier, y compris aux sous-domaines. Par exemple, si le fichier se trouve à l’adresse www.adobe.com, cette commande renvoie <codeph class="+ topic/ph pr-d/codeph ">"www.adobe.com"</codeph>. </p>
     
     <p class="- topic/p ">Si le fichier actuel est un fichier local résidant sur l’ordinateur client et s’exécutant dans Flash Player, cette commande renvoie <codeph class="+ topic/ph pr-d/codeph ">"localhost"</codeph>.</p>
     
     <p class="- topic/p ">Les emplois les plus courants de cette propriété consistent à inclure le nom de domaine de l’objet LocalConnection d’envoi en tant que paramètre de la méthode que vous comptez appeler dans l’objet LocalConnection de réception, ou conjointement avec <codeph class="+ topic/ph pr-d/codeph ">LocalConnection.allowDomain()</codeph> pour accepter les commandes issues d’un domaine spécifique. Si vous autorisez uniquement la communication entre les objets LocalConnection appartenant au même domaine, vous n’aurez probablement pas besoin d’utiliser cette propriété.</p>
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#LocalConnection/allowDomain()" class="- topic/link "><linktext class="- topic/linktext ">flash.net.LocalConnection.allowDomain()</linktext></link><link href="flash.net.xml#LocalConnection/connect()" class="- topic/link "><linktext class="- topic/linktext ">flash.net.LocalConnection.connect()</linktext></link></related-links></apiValue><apiValue id="flash.net:LocalConnection:isSupported:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">isSupported</apiName><shortdesc class="- topic/shortdesc ">
    La propriété isSupported est définie sur true si la classe LocalConnection est disponible sur la plate-forme actuelle ; dans le cas contraire, elle est définie sur false.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    La propriété <codeph class="+ topic/ph pr-d/codeph ">isSupported</codeph> est définie sur <codeph class="+ topic/ph pr-d/codeph ">true</codeph> si la classe LocalConnection est disponible sur la plate-forme actuelle ; dans le cas contraire, elle est définie sur <codeph class="+ topic/ph pr-d/codeph ">false</codeph>.
    
    </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:LocalConnection:isPerUser:set" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">isPerUser</apiName><shortdesc class="- topic/shortdesc "/><prolog class="- topic/prolog "/><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.net:NetStream" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">NetStream</apiName><shortdesc class="- topic/shortdesc ">
 La classe NetStream ouvre un canal de diffusion en continu à sens unique sur un objet NetConnection.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">NetStream
 
 </keyword></asCustoms></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:EventDispatcher</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 La classe NetStream ouvre un canal de diffusion en continu à sens unique sur un objet NetConnection.
 
 <p class="- topic/p "> Utilisez la classe NetStream pour effectuer les opérations suivantes :</p>
 
 <ul class="- topic/ul "><li class="- topic/li ">Appelez <codeph class="+ topic/ph pr-d/codeph ">NetStream.play()</codeph> pour lire un fichier multimédia à partir d’un disque local, d’un serveur Web ou de Flash Media Server.</li><li class="- topic/li ">Appelez <codeph class="+ topic/ph pr-d/codeph ">NetStream.publish()</codeph> pour publier des données vidéo, des données audio et un flux de données dans Flash Media Server.</li><li class="- topic/li ">Appelez <codeph class="+ topic/ph pr-d/codeph ">NetStream.send()</codeph> pour envoyer des messages de données à tous les clients abonnés.</li><li class="- topic/li ">Appelez <codeph class="+ topic/ph pr-d/codeph ">NetStream.send()</codeph> pour ajouter des métadonnées à un flux en direct.</li><li class="- topic/li ">Appelez <codeph class="+ topic/ph pr-d/codeph ">NetStream.appendBytes()</codeph> pour transmettre les données ByteArray dans l’objet NetStream.</li></ul>
 
 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Remarque :</b> vous ne pouvez pas afficher ni publier un flux de données sur le même objet NetStream.</p>
 
 <p class="- topic/p ">Adobe AIR, ainsi que Flash Player 9.0.115.0 et les versions ultérieures, prennent en charge les fichiers dérivés du format conteneur standard MPEG-4. Ces fichiers sont les suivants : F4V, MP4, M4A, MOV, MP4V, 3GP et 3G2, s’ils contiennent des images H.264 ou du son codé au format HEAAC v2, ou les deux. H.264 produit une qualité vidéo supérieure à une vitesse de transmission inférieure par rapport au même profil d’encodage dans Sorenson ou On2. AAC est un format audio standard défini dans la norme vidéo MPEG-4. HE-AAC v2 est une extension du format AAC qui utilise les techniques de réplique spectrale de bande (SBR - Spectral Band Replication) et de stéréo paramétrique pour optimiser l’efficacité de l’encodage à des vitesses de transmission inférieures.</p>
 
 <p class="- topic/p ">Pour plus d’informations sur les codecs et les formats de fichier pris en charge, voir les références suivantes :</p>
 
 <ul class="- topic/ul "><li class="- topic/li "><xref href="http://www.adobe.com/go/learn_fms_fileformats_fr" scope="external" class="- topic/xref ">Documentation de Flash Media Server</xref></li><li class="- topic/li "><xref href="http://www.adobe.com/go/hardware_scaling_fr" scope="external" class="- topic/xref ">Exploration de la prise en charge de Flash Player pour l’audio AAC et la vidéo H.264 haute définition</xref></li><li class="- topic/li "><xref href="http://www.adobe.com/go/video_file_format_fr" scope="external" class="- topic/xref ">FLV/F4V open specification documents</xref> (disponible en anglais uniquement)</li></ul>
 
 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Réception de données à partir d’un flux Flash Media Server, d’un fichier F4V ou d’un fichier FLV progressif</b></p>
 
 <p class="- topic/p ">Flash Media Server, les fichiers F4V et les fichiers FLV peuvent envoyer des objets d’événement contenant des données à des points de données spécifiques pendant la diffusion ou la lecture. Vous pouvez gérer les données d’un flux ou d’un fichier FLV pendant la lecture de deux manières :</p>
 
 <ul class="- topic/ul "><li class="- topic/li ">
 Associez une propriété client à un gestionnaire d’événement pour recevoir l’objet de données. Utilisez la propriété <codeph class="+ topic/ph pr-d/codeph ">NetStream.client</codeph> pour affecter un objet appelant des fonctions de gestion de données spécifiques. L’objet affecté à la propriété <codeph class="+ topic/ph pr-d/codeph ">NetStream.client</codeph> peut écouter les points de données suivants : <codeph class="+ topic/ph pr-d/codeph ">onCuePoint()</codeph>, <codeph class="+ topic/ph pr-d/codeph ">onImageData()</codeph>, <codeph class="+ topic/ph pr-d/codeph ">onMetaData()</codeph>, <codeph class="+ topic/ph pr-d/codeph ">onPlayStatus()</codeph>, <codeph class="+ topic/ph pr-d/codeph ">onSeekPoint()</codeph>, <codeph class="+ topic/ph pr-d/codeph ">onTextData()</codeph> et <codeph class="+ topic/ph pr-d/codeph ">onXMPData()</codeph>. Ecrivez des procédures au sein de ces fonctions pour gérer l’objet de données renvoyé par le flux pendant la lecture. Pour plus d’informations, voir la propriété <codeph class="+ topic/ph pr-d/codeph ">NetStream.client</codeph>.
 </li><li class="- topic/li ">
 Associez une propriété client à une sous-classe de la classe NetStream, puis écrivez un gestionnaire d’événement pour recevoir l’objet de données. NetStream est une classe scellée, ce qui signifie qu’il est impossible d’ajouter des propriétés ou des méthodes à un objet NetStream à l’exécution. Vous pouvez cependant créer une sous-classe de NetStream et définir votre gestionnaire d’événement dans la sous-classe. Vous pouvez par ailleurs faire de cette dernière une sous-classe dynamique et ajouter le gestionnaire d’événement à une occurrence de la sous-classe.
 </li></ul>
 
 <p class="- topic/p ">Attendez de recevoir un événement <codeph class="+ topic/ph pr-d/codeph ">NetGroup.Neighbor.Connect</codeph> avant d’utiliser la réplication d’objets, le routage direct ou les API de publication.</p>
 
 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Remarque :</b> pour envoyer des données par l’intermédiaire d’un fichier audio, tel qu’un fichier MP3, utilisez la classe Sound pour associer le fichier audio à un objet Sound. Ensuite, utilisez la propriété <codeph class="+ topic/ph pr-d/codeph ">Sound.id3</codeph> pour lire les métadonnées dans le fichier audio.</p>
 
 </apiDesc><example conref="examples\NetConnectionExample.as" class="- topic/example "> L’exemple suivant utilise un objet Video avec les classes NetConnection et NetStream pour charger et lire un fichier FLV. 
 <p class="- topic/p ">Dans cet exemple, le code qui crée les objets Video et NetStream et appelle les méthodes <codeph class="+ topic/ph pr-d/codeph ">Video.attachNetStream()</codeph> et <codeph class="+ topic/ph pr-d/codeph ">NetStream.play()</codeph> est placé dans une fonction de gestionnaire. Le gestionnaire n’est appelé que si la tentative de connexion à l’objet NetConnection a réussi ; c’est-à-dire lorsque l’événement <codeph class="+ topic/ph pr-d/codeph ">netStatus</codeph> renvoie un objet <codeph class="+ topic/ph pr-d/codeph ">info</codeph> avec une propriété <codeph class="+ topic/ph pr-d/codeph ">code</codeph> qui indique la réussite de l’opération. Il est recommandé d’attendre l’établissement d’une connexion avant d’appeler la méthode <codeph class="+ topic/ph pr-d/codeph ">NetStream.play()</codeph>. </p>
 <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
package {
    import flash.display.Sprite;
    import flash.events.NetStatusEvent;
    import flash.events.SecurityErrorEvent;
    import flash.media.Video;
    import flash.net.NetConnection;
    import flash.net.NetStream;
    import flash.events.Event;

    public class NetConnectionExample extends Sprite {
        private var videoURL:String = "http://www.helpexamples.com/flash/video/cuepoints.flv";
        private var connection:NetConnection;
        private var stream:NetStream;
        private var video:Video = new Video();        

        public function NetConnectionExample() {
            connection = new NetConnection();
            connection.addEventListener(NetStatusEvent.NET_STATUS, netStatusHandler);
            connection.addEventListener(SecurityErrorEvent.SECURITY_ERROR, securityErrorHandler);
            connection.connect(null);
        }

        private function netStatusHandler(event:NetStatusEvent):void {
            switch (event.info.code) {
                case "NetConnection.Connect.Success":
                    connectStream();
                    break;
                case "NetStream.Play.StreamNotFound":
                    trace("Stream not found: " + videoURL);
                    break;
            }
        }

        private function securityErrorHandler(event:SecurityErrorEvent):void {
            trace("securityErrorHandler: " + event);
        }

        private function connectStream():void {
            var stream:NetStream = new NetStream(connection);
            stream.addEventListener(NetStatusEvent.NET_STATUS, netStatusHandler);
            stream.client = new CustomClient();
            video.attachNetStream(stream);
            stream.play(videoURL);
            addChild(video);
        }
    }
}

class CustomClient {
    public function onMetaData(info:Object):void {
        trace("metadata: duration=" + info.duration + " width=" + info.width + " height=" + info.height + " framerate=" + info.framerate);
    }
    public function onCuePoint(info:Object):void {
        trace("cuepoint: time=" + info.time + " name=" + info.name + " type=" + info.type);
    }
}
</codeblock></example><example conref="examples\NetConnectionExample.2.as" class="- topic/example "> Vous pouvez obtenir des métadonnées à l'aide d'une fonction, au lieu de créer une classe personnalisée. Fournie par <xref href="http://www.sandlight.com" scope="external" class="- topic/xref ">Bill Sanders</xref>, la suggestion suivante indique la méthode de modification du code NetConnectionExample ci-dessus pour appeler des métadonnées dans une fonction. Dans ce cas, l'objet <codeph class="+ topic/ph pr-d/codeph ">mdata</codeph> permet de configurer la largeur et la hauteur d'une instance vidéo <codeph class="+ topic/ph pr-d/codeph ">video</codeph> :
 <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
  //Place the following in the connectStream() function
  //in the NetConnectionExample code
  var metaSniffer:Object=new Object();  
  stream.client=metaSniffer; //stream is the NetStream instance  
  metaSniffer.onMetaData=getMeta;  
      
   
  // Add the following function within the NetConnectionExample class  
  private function getMeta (mdata:Object):void  
  {  
     video.width=mdata.width/2;  
     video.height=mdata.height/2;  
  }  
</codeblock></example></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.media.xml#Video" class="- topic/link "><linktext class="- topic/linktext ">flash.media.Video</linktext></link><link href="flash.net.xml#NetConnection" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetConnection</linktext></link><link href="flash.net.xml#NetStream/appendBytes()" class="- topic/link "><linktext class="- topic/linktext ">appendBytes()</linktext></link><link href="flash.net.xml#NetStream/play()" class="- topic/link "><linktext class="- topic/linktext ">play()</linktext></link><link href="flash.net.xml#NetStream/publish()" class="- topic/link "><linktext class="- topic/linktext ">publish()</linktext></link><link href="flash.net.xml#NetStream/send()" class="- topic/link "><linktext class="- topic/linktext ">send()</linktext></link><link href="flash.net.xml#NetStream/event:onImageData" class="- topic/link "><linktext class="- topic/linktext ">onImageData</linktext></link><link href="flash.net.xml#NetStream/event:onMetaData" class="- topic/link "><linktext class="- topic/linktext ">onMetaData</linktext></link></related-links><adobeApiEvent id="flash.net:NetStream_flash.events.NetDataEvent_mediaTypeData" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">mediaTypeData</apiName><shortdesc class="- topic/shortdesc ">
 Distribué lors de la lecture de contenu vidéo et du traitement de certains types de messages.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.3" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2.7" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="3.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.NetDataEvent</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.NetDataEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Distribué lors de la lecture de contenu vidéo et du traitement de certains types de messages.
 
 <p class="- topic/p ">Un NetDataEvent est distribué pour les messages suivants :</p>
 <ul class="- topic/ul "><li class="- topic/li ">onCuePoint</li><li class="- topic/li ">onImageData</li><li class="- topic/li ">onMetaData</li><li class="- topic/li ">onPlayStatus (pour le code NetStream.Play.Complete)</li><li class="- topic/li ">onTextData</li><li class="- topic/li ">onXMPData</li></ul>
 
 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Remarque :</b> cet événement n’est pas distribué par le contenu qui s’exécute dans Flash Player dans le navigateur sur Android ou le système d’exploitation de la tablette Blackberry ou par le contenu s’exécutant dans AIR sur iOS.</p>
 
 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flash.net:NetStream__onSeekPoint" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">onSeekPoint</apiName><shortdesc class="- topic/shortdesc ">
 Appelée de façon synchrone par appendBytes() lorsque l’analyseur d’octets détecte un point pouvant faire l’objet d’une recherche (par exemple, une image-clé vidéo).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier "/><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Appelée de façon synchrone par <codeph class="+ topic/ph pr-d/codeph ">appendBytes()</codeph> lorsque l’analyseur d’octets détecte un point pouvant faire l’objet d’une recherche (par exemple, une image-clé vidéo). Utilisez cet événement pour construire un tableau de points de recherche. La propriété <codeph class="+ topic/ph pr-d/codeph ">byteCount</codeph> correspond à la propriété <codeph class="+ topic/ph pr-d/codeph ">byteCount</codeph> au premier octet du message analysable pour ce point de recherche, et est remise à zéro comme décrit ci-dessus. Pour effectuer une recherche, lors de l’événement <codeph class="+ topic/ph pr-d/codeph ">NetStream.Seek.Notify</codeph>, recherchez les octets qui commencent à partir d’un point pouvant faire l’objet d’une recherche et appelez <codeph class="+ topic/ph pr-d/codeph ">appendBytes(bytes)</codeph>. Si l’argument <codeph class="+ topic/ph pr-d/codeph ">bytes</codeph> est un <codeph class="+ topic/ph pr-d/codeph ">ByteArray</codeph> composé d’octets qui commencent à un point pouvant faire l’objet d’une recherche, la vidéo est lue à partir de ce point de recherche.
 
 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Remarque :</b> les appels de <codeph class="+ topic/ph pr-d/codeph ">appendBytes()</codeph> à partir de ce rappel sont ignorés.</p>
 
 <p class="- topic/p ">La propriété <codeph class="+ topic/ph pr-d/codeph ">onSeekPoint</codeph> est une propriété de l’objet <codeph class="+ topic/ph pr-d/codeph ">NetStream.client</codeph>. Cette propriété est répertoriée dans la section Events, car elle répond aux données transmises à la méthode <codeph class="+ topic/ph pr-d/codeph ">appendBytes()</codeph>. Pour plus d’informations, voir la description de la classe NetStream et de la propriété <codeph class="+ topic/ph pr-d/codeph ">NetStream.client</codeph>. Vous ne pouvez pas utiliser la méthode <codeph class="+ topic/ph pr-d/codeph ">addEventListener()</codeph>, ni aucune autre méthode EventDispatcher, pour écouter ou traiter <codeph class="+ topic/ph pr-d/codeph ">onSeekPoint</codeph> comme un événement. Pour utiliser <codeph class="+ topic/ph pr-d/codeph ">onSeekPoint</codeph>, définissez une fonction de rappel et associez-la à l’un des objets suivants :</p>
 
 <ul class="- topic/ul "><li class="- topic/li ">Objet auquel fait référence la propriété <codeph class="+ topic/ph pr-d/codeph ">client</codeph> d’une occurrence de NetStream.</li><li class="- topic/li ">Occurrence d’une sous-classe de NetStream. NetStream est une classe scellée, ce qui signifie qu’il est impossible d’ajouter des propriétés ou des méthodes à un objet NetStream à l’exécution. Vous pouvez cependant créer une sous-classe de NetStream et définir votre gestionnaire d’événement dans la sous-classe. Vous pouvez également faire de cette dernière une sous-classe dynamique et ajouter la fonction de gestionnaire d’événement à une occurrence de la sous-classe.</li></ul>
 
 </apiDesc></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStream/client" class="- topic/link "><linktext class="- topic/linktext ">client</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.net:NetStream_flash.events.DRMStatusEvent.DRM_STATUS_drmStatus" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">drmStatus</apiName><shortdesc class="- topic/shortdesc ">
 Distribué lorsque la lecture du contenu chiffré à l’aide de la gestion des droits numériques (DRM) commence, c’est-à-dire lorsque l’utilisateur est authentifié et autorisé à lire le contenu.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.DRMStatusEvent.DRM_STATUS</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.DRMStatusEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Distribué lorsque la lecture du contenu chiffré à l’aide de la gestion des droits numériques (DRM) commence, c’est-à-dire lorsque l’utilisateur est authentifié et autorisé à lire le contenu.
 <p class="- topic/p ">
 L’objet DRMStatusEvent contient des informations concernant le voucher : disponibilité du voucher hors connexion, date d’expiration du voucher, accessibilité du contenu aux utilisateurs, etc.
 </p>
 
 </apiDesc></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.events.xml#DRMStatusEvent" class="- topic/link "><linktext class="- topic/linktext ">flash.events.DRMStatusEvent</linktext></link><link href="flash.net.drm.xml#DRMManager/resetDRMVouchers()" class="- topic/link "><linktext class="- topic/linktext ">flash.net.drm.DRMManager.resetDRMVouchers()</linktext></link><link href="flash.net.xml#NetStream/setDRMAuthenticationCredentials()" class="- topic/link "><linktext class="- topic/linktext ">setDRMAuthenticationCredentials()</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.net:NetStream_flash.events.DRMErrorEvent.DRM_ERROR_drmError" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">drmError</apiName><shortdesc class="- topic/shortdesc ">
 Distribué lorsqu’un objet NetStream qui tente de lire un fichier chiffré à l’aide de la gestion des droits numériques (DRM) rencontre une erreur de type DRM.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.DRMErrorEvent.DRM_ERROR</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.DRMErrorEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Distribué lorsqu’un objet NetStream qui tente de lire un fichier chiffré à l’aide de la gestion des droits numériques (DRM) rencontre une erreur de type DRM. Par exemple, un objet DRMErrorEvent est distribué lorsque l’autorisation utilisateur échoue. Il est en effet possible que l’utilisateur n’ait pas acquis les droits nécessaires à l’affichage du contenu ou que le fournisseur de contenu ne prenne pas en charge l’application d’affichage.
 
 </apiDesc></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.events.xml#DRMErrorEvent" class="- topic/link "><linktext class="- topic/linktext ">flash.events.DRMErrorEvent</linktext></link><link href="flash.net.drm.xml#DRMManager/resetDRMVouchers()" class="- topic/link "><linktext class="- topic/linktext ">flash.net.drm.DRMManager.resetDRMVouchers()</linktext></link><link href="flash.net.xml#NetStream/setDRMAuthenticationCredentials()" class="- topic/link "><linktext class="- topic/linktext ">setDRMAuthenticationCredentials()</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.net:NetStream_flash.events.DRMAuthenticateEvent.DRM_AUTHENTICATE_drmAuthenticate" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">drmAuthenticate</apiName><shortdesc class="- topic/shortdesc ">
 Distribué lorsqu’un objet NetStream tente de lire un fichier chiffré à l’aide de la gestion des droits numériques (DRM) nécessitant l’obtention d’informations d’identification pour authentifier l’utilisateur avant la lecture.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.DRMAuthenticateEvent.DRM_AUTHENTICATE</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.DRMAuthenticateEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Distribué lorsqu’un objet NetStream tente de lire un fichier chiffré à l’aide de la gestion des droits numériques (DRM) nécessitant l’obtention d’informations d’identification pour authentifier l’utilisateur avant la lecture.
 
 <p class="- topic/p ">
 Utilisez la méthode <codeph class="+ topic/ph pr-d/codeph ">setDRMAuthenticationCredentials()</codeph> de l’objet NetStream pour authentifier l’utilisateur. En cas d’échec de l’authentification utilisateur, l’application tente de nouveau l’authentification et distribue un nouvel événement DRMAuthenticateEvent pour l’objet NetStream.
 </p>
 
 
 </apiDesc></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.events.xml#DRMAuthenticateEvent" class="- topic/link "><linktext class="- topic/linktext ">flash.events.DRMAuthenticateEvent</linktext></link><link href="flash.net.drm.xml#DRMManager/resetDRMVouchers()" class="- topic/link "><linktext class="- topic/linktext ">flash.net.drm.DRMManager.resetDRMVouchers()</linktext></link><link href="flash.net.xml#NetStream/setDRMAuthenticationCredentials()" class="- topic/link "><linktext class="- topic/linktext ">setDRMAuthenticationCredentials()</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.net:NetStream__onDRMContentData" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">onDRMContentData</apiName><shortdesc class="- topic/shortdesc ">
 Etablit un écouteur pour répondre lorsque AIR extrait les métadonnées de contenu DRM intégrées dans un fichier multimédia.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier "/><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Etablit un écouteur pour répondre lorsque AIR extrait les métadonnées de contenu DRM intégrées dans un fichier multimédia.
 
 <p class="- topic/p ">Un objet DRMContentData contient les informations nécessaires à l’obtention du voucher requis pour lire un fichier multimédia protégé par DRM. Utilisez la classe DRMManager pour télécharger le voucher avec ces informations.</p>
 
 <p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">onDRMContentData</codeph> est une propriété de l’objet <codeph class="+ topic/ph pr-d/codeph ">NetStream.client</codeph>. Cette propriété est répertoriée dans la section Events, car elle correspond à un événement data lors du préchargement des données incorporées depuis un fichier multimédia local. Pour plus d’informations, voir la description de la classe NetStream. Vous ne pouvez pas utiliser la méthode <codeph class="+ topic/ph pr-d/codeph ">addEventListener()</codeph>, ni toute autre méthode EventDispatcher pour écouter ou traiter <codeph class="+ topic/ph pr-d/codeph ">onDRMContentData</codeph> comme un événement. Vous devez en revanche définir une fonction de rappel unique et l’associer directement à l’un des objets suivants :</p>
 <ul class="- topic/ul "><li class="- topic/li ">Objet auquel fait référence la propriété <codeph class="+ topic/ph pr-d/codeph ">client</codeph> d’une occurrence de NetStream.</li><li class="- topic/li ">Occurrence d’une sous-classe de NetStream. NetStream est une classe scellée, ce qui signifie qu’il est impossible d’ajouter des propriétés ou des méthodes à un objet NetStream à l’exécution. Vous pouvez cependant créer une sous-classe de NetStream et définir votre gestionnaire d’événements dans la sous-classe ou faire de celle-ci une sous-classe dynamique et ajouter la fonction de gestionnaire d’événement à une de ses occurrences.</li></ul>
 
 </apiDesc></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.net.drm.xml#DRMContentData" class="- topic/link "><linktext class="- topic/linktext ">flash.net.drm.DRMContentData</linktext></link><link href="flash.net.xml#NetStream/preloadEmbeddedData()" class="- topic/link "><linktext class="- topic/linktext ">preloadEmbeddedData()</linktext></link><link href="flash.net.drm.xml#DRMManager" class="- topic/link "><linktext class="- topic/linktext ">flash.net.drm.DRMManager</linktext></link><link href="flash.net.drm.xml#DRMVoucher" class="- topic/link "><linktext class="- topic/linktext ">flash.net.drm.DRMVoucher</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.net:NetStream__onPlayStatus" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">onPlayStatus</apiName><shortdesc class="- topic/shortdesc ">
 Etablit un écouteur pour qu’il réponde lorsque un objet NetStream a terminé la lecture d’un flux.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier "/><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Etablit un écouteur pour qu’il réponde lorsque un objet NetStream a terminé la lecture d’un flux. L’objet d’événement associé fournit des informations autres que ce renvoie l’événement <codeph class="+ topic/ph pr-d/codeph ">netStatus</codeph>. Vous pouvez utiliser cette propriété pour déclencher des actions dans votre code lorsqu’un objet NetStream est passé d’un flux continu à un autre dans une liste de lecture (ce qu’indique l’objet d’informations <codeph class="+ topic/ph pr-d/codeph ">NetStream.Play.Switch</codeph>) ou lorsque l’objet NetStream a terminé la lecture du flux continu (ce qu’indique l’objet d’informations <codeph class="+ topic/ph pr-d/codeph ">NetStream.Play.Complete</codeph>).
 
 <p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">onPlayStaus</codeph> est en fait une propriété de l’objet <codeph class="+ topic/ph pr-d/codeph ">NetStream.client</codeph>. Cette propriété est répertoriée dans la section Events, car elle répond à un événement data, soit lors de la diffusion de données multimédias avec Flash Media Server soit lors de la lecture d’un fichier FLV. Pour plus d’informations, voir la description de la classe NetStream. Vous ne pouvez pas utiliser la méthode <codeph class="+ topic/ph pr-d/codeph ">addEventListener()</codeph>, ni toute autre méthode EventDispatcher pour écouter ou traiter <codeph class="+ topic/ph pr-d/codeph ">onPlayStatus</codeph> comme un événement. Définissez une fonction de rappel et associez-la à l’un des objets suivants :</p>
 
 <ul class="- topic/ul "><li class="- topic/li ">Objet auquel fait référence la propriété <codeph class="+ topic/ph pr-d/codeph ">client</codeph> d’une occurrence de NetStream.</li><li class="- topic/li ">Occurrence d’une sous-classe de NetStream. NetStream est une classe scellée, ce qui signifie qu’il est impossible d’ajouter des propriétés ou des méthodes à un objet NetStream à l’exécution. Créez une sous-classe de NetStream et définissez votre gestionnaire d’événement dans la sous-classe. Vous pouvez également faire de cette dernière une sous-classe dynamique et ajouter la fonction de gestionnaire d’événement à une occurrence de la sous-classe.</li></ul>
 
 <p class="- topic/p ">Cet événement peut renvoyer un objet d’informations doté des propriétés suivantes :</p>

 <adobetable class="innertable"><tgroup cols="3" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété du code</entry><entry class="- topic/entry ">Propriété de niveau</entry><entry class="- topic/entry ">Signification</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">NetStream.Play.Switch</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"status"</codeph></entry><entry class="- topic/entry ">L’abonné passe d’un flux continu à un autre dans une liste de lecture.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">NetStream.Play.Complete</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"status"</codeph></entry><entry class="- topic/entry ">La lecture est terminée.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">NetStream.Play.TransitionComplete</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"status"</codeph></entry><entry class="- topic/entry ">L’abonné bascule vers un nouveau flux en résultat du basculement du débit du flux.</entry></row></tbody></tgroup></adobetable>
 
 
 </apiDesc></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStream/client" class="- topic/link "><linktext class="- topic/linktext ">client</linktext></link><link href="flash.events.xml#NetStatusEvent/NET_STATUS" class="- topic/link "><linktext class="- topic/linktext ">flash.events.NetStatusEvent.NET_STATUS</linktext></link><link href="flash.net.xml#NetStream/event:asyncError" class="- topic/link "><linktext class="- topic/linktext ">asyncError</linktext></link><link href="flash.net.xml#NetStream/event:onMetaData" class="- topic/link "><linktext class="- topic/linktext ">onMetaData</linktext></link><link href="flash.net.xml#NetStream/event:onCuePoint" class="- topic/link "><linktext class="- topic/linktext ">onCuePoint</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.net:NetStream__onCuePoint" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">onCuePoint</apiName><shortdesc class="- topic/shortdesc ">
 Etablit un écouteur pour qu’il réponde lorsqu’un point de repère intégré est atteint pendant la lecture d’un fichier vidéo.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier "/><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Etablit un écouteur pour qu’il réponde lorsqu’un point de repère intégré est atteint pendant la lecture d’un fichier vidéo. Vous pouvez utiliser l’écouteur pour déclencher des actions dans votre code lorsque le fichier vidéo atteint un point de repère spécifique. Ceci vous permet de synchroniser d’autres actions dans votre application avec les événements de lecture vidéo. Pour plus d’informations sur les formats des fichiers vidéo pris en charge par Flash Media Server, voir <xref href="http://www.adobe.com/go/learn_fms_fileformats_en" scope="external" class="- topic/xref ">www.adobe.com/go/learn_fms_fileformats_en</xref>.

 
 <p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">onCuePoint</codeph> est en fait une propriété de l’objet <codeph class="+ topic/ph pr-d/codeph ">NetStream.client</codeph>. Cette propriété est répertoriée dans la section Events, car elle répond à un événement data, soit lors de la diffusion de données multimédias avec Flash Media Server soit lors de la lecture d’un fichier FLV. Pour plus d’informations, voir la description de la classe NetStream. Vous ne pouvez pas utiliser la méthode <codeph class="+ topic/ph pr-d/codeph ">addEventListener()</codeph>, ni toute autre méthode EventDispatcher pour écouter ou traiter <codeph class="+ topic/ph pr-d/codeph ">onCuePoint</codeph> comme un événement. Définissez une fonction de rappel et associez-la à l’un des objets suivants :</p>
 
 <ul class="- topic/ul "><li class="- topic/li ">Objet auquel fait référence la propriété <codeph class="+ topic/ph pr-d/codeph ">client</codeph> d’une occurrence de NetStream.</li><li class="- topic/li ">Occurrence d’une sous-classe de NetStream. NetStream est une classe scellée, ce qui signifie qu’il est impossible d’ajouter des propriétés ou des méthodes à un objet NetStream à l’exécution. Créez une sous-classe de NetStream et définissez votre gestionnaire d’événement dans la sous-classe. Vous pouvez également faire de cette dernière une sous-classe dynamique et ajouter la fonction de gestionnaire d’événement à une occurrence de la sous-classe.</li></ul>
 
 <p class="- topic/p ">L’écouteur d’événement associé est déclenché après un appel de la méthode <codeph class="+ topic/ph pr-d/codeph ">NetStream.play()</codeph>, mais avant que la tête de lecture vidéo n’ait avancé.</p>
 
 <p class="- topic/p ">Vous pouvez incorporer les types de points de repère suivants dans un fichier vidéo :</p>
 
 <ul class="- topic/ul "><li class="- topic/li ">Un point de repère de navigation spécifie, au sein du fichier vidéo, une image-clé à laquelle correspond la propriété <codeph class="+ topic/ph pr-d/codeph ">time</codeph> du point de repère. Les points de repère de navigation sont souvent utilisés comme signets ou points d’entrée pour permettre aux utilisateurs de parcourir le fichier vidéo.</li><li class="- topic/li ">Un point de repère d’événement spécifie une durée. La durée peut ou non correspondre à une image-clé spécifique. Un point de repère d’événement représente généralement dans le fichier vidéo un minutage auquel il se produit un événement qui pourrait être utilisé pour déclencher d’autres événements d’application.</li></ul>
 
 <p class="- topic/p ">L’objet d’événement <codeph class="+ topic/ph pr-d/codeph ">onCuePoint</codeph> possède les propriétés suivantes :</p>
 
 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Propriété</entry><entry class="- topic/entry ">Description</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">name</codeph></entry><entry class="- topic/entry ">Nom attribué au point de repère lors de son imbrication dans le fichier vidéo.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">paramètres</codeph></entry><entry class="- topic/entry ">Tableau associatif de chaînes constituées de paires nom/valeur spécifiées pour ce point de repère. Il est possible d’utiliser toute chaîne valide pour le paramètre de nom ou de valeur.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">time</codeph></entry><entry class="- topic/entry ">Durée (en secondes) jusqu’au point de repère qui survient dans le fichier vidéo au cours de la lecture.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">type</codeph></entry><entry class="- topic/entry ">Type de point de repère atteint, navigation ou événement.</entry></row></tbody></tgroup></adobetable>
 
 <p class="- topic/p ">Vous pouvez définir des points de repère dans un fichier vidéo lorsque vous encodez initialement celui-ci ou lorsque vous importez un clip vidéo dans l’outil de création de Flash à l’aide de l’assistant d’importation vidéo.</p>
 
 <p class="- topic/p ">L’événement <codeph class="+ topic/ph pr-d/codeph ">onMetaData</codeph> extrait également des informations sur les points de repère d’un fichier vidéo. Toutefois, l’événement <codeph class="+ topic/ph pr-d/codeph ">onMetaData</codeph> extrait des informations sur tous les points de repère avant le début de la lecture du fichier. L’événement <codeph class="+ topic/ph pr-d/codeph ">onCuePoint</codeph> extrait des informations sur un seul point de repère, au minutage spécifié pour ce point au cours de la lecture.</p>
 
 <p class="- topic/p ">En règle générale, pour que votre code réagisse à un certain point de repère au moment où il se produit, utilisez l’événement <codeph class="+ topic/ph pr-d/codeph ">onCuePoint</codeph> pour déclencher une action dans votre code.</p>
 
 <p class="- topic/p ">Vous pouvez utiliser la liste de points de repère fournie à l’événement <codeph class="+ topic/ph pr-d/codeph ">onMetaData</codeph> pour permettre à l’utilisateur de commencer à lire la vidéo à des points prédéfinis du flux vidéo. Transmettez la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">time</codeph> du point de repère à la méthode <codeph class="+ topic/ph pr-d/codeph ">NetStream.seek()</codeph> pour lire la vidéo à partir de ce dernier.</p>
 
 </apiDesc><example conref="examples\NetStream_onCuePoint.as" class="- topic/example "> L’exemple suivant indique comment charger des fichiers FLV externes, et répondre à des métadonnées et à des points de repère. Exemple fourni par <xref href="http://actionscriptexamples.com/2008/02/26/loading-flv-files-in-actionscript-30-using-the-netconnection-and-netstream-classes/" scope="_mmexternal" class="- topic/xref ">ActionScriptExamples.com</xref>. 
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
var video:Video = new Video();
addChild(video);
 
var nc:NetConnection = new NetConnection();
nc.connect(null);
 
var ns:NetStream = new NetStream(nc);
ns.client = {};
ns.client.onMetaData = ns_onMetaData;
ns.client.onCuePoint = ns_onCuePoint;
ns.play("http://www.helpexamples.com/flash/video/cuepoints.flv");
 
video.attachNetStream(ns);
 
function ns_onMetaData(item:Object):void {
    trace("metaData");
    // Resize video instance.
    video.width = item.width;
    video.height = item.height;
    // Center video instance on Stage.
    video.x = (stage.stageWidth - video.width) / 2;
    video.y = (stage.stageHeight - video.height) / 2;
}
 
function ns_onCuePoint(item:Object):void {
    trace("cuePoint");
    trace(item.name + "\t" + item.time);
}
</codeblock></example></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStream/client" class="- topic/link "><linktext class="- topic/linktext ">client</linktext></link><link href="flash.net.xml#NetStream/event:onMetaData" class="- topic/link "><linktext class="- topic/linktext ">onMetaData</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.net:NetStream__onTextData" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">onTextData</apiName><shortdesc class="- topic/shortdesc ">
  Etablit un écouteur pour qu’il réponde lorsque Flash Player reçoit des données texte intégrées dans un fichier multimédia en cours de lecture.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9.0.115.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier "/><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
  Etablit un écouteur pour qu’il réponde lorsque Flash Player reçoit des données texte intégrées dans un fichier multimédia en cours de lecture. Les données texte sont au format UTF-8 et peuvent contenir des informations sur le formatage basées sur la spécification Timed Text 3GP.
  <p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">onTextData</codeph> est en fait une propriété de l’objet <codeph class="+ topic/ph pr-d/codeph ">NetStream.client</codeph>. Cette propriété est répertoriée dans la section Events, car elle répond à un événement data, soit lors de la diffusion de données multimédias avec Flash Media Server soit lors de la lecture d’un fichier FLV. Pour plus d’informations, voir la description de la classe NetStream. Vous ne pouvez pas utiliser la méthode <codeph class="+ topic/ph pr-d/codeph ">addEventListener()</codeph>, ni toute autre méthode EventDispatcher pour écouter ou traiter <codeph class="+ topic/ph pr-d/codeph ">onTextData</codeph> comme un événement. Définissez une fonction de rappel et associez-la à l’un des objets suivants :</p>
 
 <ul class="- topic/ul "><li class="- topic/li ">Objet auquel fait référence la propriété <codeph class="+ topic/ph pr-d/codeph ">client</codeph> d’une occurrence de NetStream.</li><li class="- topic/li ">Occurrence d’une sous-classe de NetStream. NetStream est une classe scellée, ce qui signifie qu’il est impossible d’ajouter des propriétés ou des méthodes à un objet NetStream à l’exécution. Créez une sous-classe de NetStream et définissez votre gestionnaire d’événement dans la sous-classe. Vous pouvez également faire de cette dernière une sous-classe dynamique et ajouter la fonction de gestionnaire d’événement à une occurrence de la sous-classe.</li></ul>
 
 <p class="- topic/p ">L’écouteur d’événement associé est déclenché après un appel de la méthode <codeph class="+ topic/ph pr-d/codeph ">NetStream.play()</codeph>, mais avant que la tête de lecture vidéo n’ait avancé.</p>
  
  <p class="- topic/p ">L’objet d’événement onTextData contient une propriété pour chaque partie de données texte.</p>
  
  </apiDesc><example conref="examples\OnTextDataExample.as" class="- topic/example "> Le code de cet exemple utilise la propriété <codeph class="+ topic/ph pr-d/codeph ">Netstream.client</codeph> pour gérer les fonctions de rappel pour <codeph class="+ topic/ph pr-d/codeph ">onTextData</codeph> et <codeph class="+ topic/ph pr-d/codeph ">onImageData</codeph>. La fonction <codeph class="+ topic/ph pr-d/codeph ">onImageDataHandler()</codeph> utilise l’objet d’événement onImageData <codeph class="+ topic/ph pr-d/codeph ">imageData</codeph> pour stocker le tableau d’octets. Et la fonction <codeph class="+ topic/ph pr-d/codeph ">onTextDataHandler()</codeph> utilise l’objet d’événement onTextData <codeph class="+ topic/ph pr-d/codeph ">textData</codeph> pour stocker les morceaux de données texte (chaque morceau de données est une propriété de l’objet <codeph class="+ topic/ph pr-d/codeph ">textData</codeph>).
 <p class="- topic/p ">Vous devez remplacer l’emplacement <codeph class="+ topic/ph pr-d/codeph ">« yourURL »</codeph> de votre code par un emplacement réel conduisant vers un fichier multimédia avec métadonnées d’image ou de texte.</p>
 <p class="- topic/p "> Vous pouvez également gérer les données de texte et d’images à l’aide d’une classe personnalisée. Voir l’article <xref href="http://www.adobe.com/devnet/flash/quickstart" scope="external" class="- topic/xref ">Gestion des métadonnées et des points de repères dans Flash Video</xref> pour plus d’informations et d’exemples.</p>
 <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
package {
    import flash.display.*;
    import flash.net.*;
    import flash.media.*;
    import flash.system.*;
    import flash.events.*;

        public class OnTextDataExample extends Sprite {
                                              
            public function OnTextDataExample():void {

                var customClient:Object = new Object();
                customClient.onImageData = onImageDataHandler;           
                customClient.onTextData = onTextDataHandler;               

                var my_nc:NetConnection = new NetConnection();
                my_nc.connect(null);
                var my_ns:NetStream = new NetStream(my_nc);
                my_ns.play("yourURL");
                my_ns.client = customClient;

                var my_video:Video = new Video();
                my_video.attachNetStream(my_ns);
                addChild(my_video);

            }

            public function onImageDataHandler(imageData:Object):void {

                trace("imageData length: " + imageData.data.length);
                var imageloader:Loader = new Loader();           
                imageloader.loadBytes(imageData.data); // imageData.data is a ByteArray object.
                addChild(imageloader);
            }

    
            public function onTextDataHandler(textData:Object):void {

                trace("--- textData properties ----");
                var key:String;

                for (key in textData) {
                    trace(key + ": " + textData[key]);
                }
            }

        }

}

</codeblock></example></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetConnection" class="- topic/link "><linktext class="- topic/linktext ">NetConnection</linktext></link><link href="flash.net.xml#NetStream/client" class="- topic/link "><linktext class="- topic/linktext ">client</linktext></link><link href="flash.net.xml#NetStream/event:asyncError" class="- topic/link "><linktext class="- topic/linktext ">asyncError</linktext></link><link href="flash.net.xml#NetStream/play()" class="- topic/link "><linktext class="- topic/linktext ">play()</linktext></link><link href="flash.net.xml#NetStream/event:onImageData" class="- topic/link "><linktext class="- topic/linktext ">onImageData</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.net:NetStream__onImageData" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">onImageData</apiName><shortdesc class="- topic/shortdesc ">
 Etablit un écouteur pour qu’il réponde lorsque Flash Player reçoit des données d’images sous forme de tableau d’octets intégré dans un fichier multimédia en cours de lecture.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9.0.115.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier "/><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Etablit un écouteur pour qu’il réponde lorsque Flash Player reçoit des données d’images sous forme de tableau d’octets intégré dans un fichier multimédia en cours de lecture. Les données d’image peuvent produire du contenu JPEG, PNG ou GIF. Utilisez la méthode <codeph class="+ topic/ph pr-d/codeph ">flash.display.Loader.loadBytes()</codeph> pour charger le tableau d’octets dans un objet d’affichage.
 <p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">onImageData</codeph> est en fait une propriété de l’objet <codeph class="+ topic/ph pr-d/codeph ">NetStream.client</codeph>. Cette propriété est répertoriée dans la section Events, car elle répond à un événement data, soit lors de la diffusion de données multimédias avec Flash Media Server soit lors de la lecture d’un fichier FLV. Pour plus d’informations, voir la description de la classe NetStream. Vous ne pouvez pas utiliser la méthode <codeph class="+ topic/ph pr-d/codeph ">addEventListener()</codeph>, ni toute autre méthode EventDispatcher pour écouter ou traiter <codeph class="+ topic/ph pr-d/codeph ">onImageData</codeph> comme un événement. Définissez une fonction de rappel unique et associez-la à l’un des objets suivants :</p>
 
 <ul class="- topic/ul "><li class="- topic/li ">Objet auquel fait référence la propriété <codeph class="+ topic/ph pr-d/codeph ">client</codeph> d’une occurrence de NetStream.</li><li class="- topic/li ">Occurrence d’une sous-classe de NetStream. NetStream est une classe scellée, ce qui signifie qu’il est impossible d’ajouter des propriétés ou des méthodes à un objet NetStream à l’exécution. Créez une sous-classe de NetStream et définissez votre gestionnaire d’événement dans la sous-classe. Vous pouvez également faire de cette dernière une sous-classe dynamique et ajouter la fonction de gestionnaire d’événement à une occurrence de la sous-classe.</li></ul>
 
 <p class="- topic/p ">L’écouteur d’événement associé est déclenché après un appel de la méthode <codeph class="+ topic/ph pr-d/codeph ">NetStream.play()</codeph>, mais avant que la tête de lecture vidéo n’ait avancé.</p>
 
 <p class="- topic/p ">L’objet d’événement onImageData contient les données d’images sous la forme d’un tableau d’octets envoyé par l’intermédiaire d’un canal de données AMF0.</p>
 
 </apiDesc><example conref="examples\OnTextDataExample.as" class="- topic/example "> Le code de cet exemple utilise la propriété <codeph class="+ topic/ph pr-d/codeph ">Netstream.client</codeph> pour gérer les fonctions de rappel pour <codeph class="+ topic/ph pr-d/codeph ">onTextData</codeph> et <codeph class="+ topic/ph pr-d/codeph ">onImageData</codeph>. La fonction <codeph class="+ topic/ph pr-d/codeph ">onImageDataHandler()</codeph> utilise l’objet d’événement onImageData <codeph class="+ topic/ph pr-d/codeph ">imageData</codeph> pour stocker le tableau d’octets. Et la fonction <codeph class="+ topic/ph pr-d/codeph ">onTextDataHandler()</codeph> utilise l’objet d’événement onTextData <codeph class="+ topic/ph pr-d/codeph ">textData</codeph> pour stocker les morceaux de données texte (chaque morceau de données est une propriété de l’objet <codeph class="+ topic/ph pr-d/codeph ">textData</codeph>).
 <p class="- topic/p ">Vous devez remplacer l’emplacement <codeph class="+ topic/ph pr-d/codeph ">« yourURL »</codeph> de votre code par un emplacement réel conduisant vers un fichier multimédia avec métadonnées d’image ou de texte.</p>
 <p class="- topic/p "> Vous pouvez également gérer les données de texte et d’images à l’aide d’une classe personnalisée. Voir l’article <xref href="http://www.adobe.com/devnet/flash/quickstart" scope="external" class="- topic/xref ">Gestion des métadonnées et des points de repères dans Flash Video</xref> pour plus d’informations et d’exemples.</p>
 <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
package {
    import flash.display.*;
    import flash.net.*;
    import flash.media.*;
    import flash.system.*;
    import flash.events.*;

        public class OnTextDataExample extends Sprite {
                                              
            public function OnTextDataExample():void {

                var customClient:Object = new Object();
                customClient.onImageData = onImageDataHandler;           
                customClient.onTextData = onTextDataHandler;               

                var my_nc:NetConnection = new NetConnection();
                my_nc.connect(null);
                var my_ns:NetStream = new NetStream(my_nc);
                my_ns.play("yourURL");
                my_ns.client = customClient;

                var my_video:Video = new Video();
                my_video.attachNetStream(my_ns);
                addChild(my_video);

            }

            public function onImageDataHandler(imageData:Object):void {

                trace("imageData length: " + imageData.data.length);
                var imageloader:Loader = new Loader();           
                imageloader.loadBytes(imageData.data); // imageData.data is a ByteArray object.
                addChild(imageloader);
            }

    
            public function onTextDataHandler(textData:Object):void {

                trace("--- textData properties ----");
                var key:String;

                for (key in textData) {
                    trace(key + ": " + textData[key]);
                }
            }

        }

}

</codeblock></example></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetConnection" class="- topic/link "><linktext class="- topic/linktext ">NetConnection</linktext></link><link href="flash.display.xml#Loader/loadBytes()" class="- topic/link "><linktext class="- topic/linktext ">flash.display.Loader.loadBytes()</linktext></link><link href="flash.net.xml#NetStream/client" class="- topic/link "><linktext class="- topic/linktext ">client</linktext></link><link href="flash.net.xml#NetStream/event:asyncError" class="- topic/link "><linktext class="- topic/linktext ">asyncError</linktext></link><link href="flash.net.xml#NetStream/play()" class="- topic/link "><linktext class="- topic/linktext ">play()</linktext></link><link href="flash.net.xml#NetStream/event:onTextData" class="- topic/link "><linktext class="- topic/linktext ">onTextData</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.net:NetStream__onMetaData" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">onMetaData</apiName><shortdesc class="- topic/shortdesc ">
 Etablit un écouteur pour qu’il réponde lorsque Flash Player reçoit une description intégrée à la vidéo en cours de lecture.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier "/><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Etablit un écouteur pour qu’il réponde lorsque Flash Player reçoit une description intégrée à la vidéo en cours de lecture. Pour plus d’informations sur les formats des fichiers vidéo pris en charge par Flash Media Server, voir <xref href="http://www.adobe.com/go/learn_fms_fileformats_en" scope="external" class="- topic/xref ">www.adobe.com/go/learn_fms_fileformats_en</xref>.
 
 <p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">onMetaData</codeph> est en fait une propriété de l’objet <codeph class="+ topic/ph pr-d/codeph ">NetStream.client</codeph>. Cette propriété est répertoriée dans la section Events, car elle répond à un événement data, soit lors de la diffusion de données multimédias avec Flash Media Server soit lors de la lecture d’un fichier FLV. Pour plus d’informations, voir la description de la classe NetStream et de la propriété <codeph class="+ topic/ph pr-d/codeph ">NetStream.client</codeph>. Vous ne pouvez pas utiliser la méthode <codeph class="+ topic/ph pr-d/codeph ">addEventListener()</codeph>, ni toute autre méthode EventDispatcher, pour écouter ou traiter <codeph class="+ topic/ph pr-d/codeph ">onMetaData</codeph> comme un événement. Définissez une fonction de rappel unique et associez-la à l’un des objets suivants :</p>
 
 <ul class="- topic/ul "><li class="- topic/li ">Objet auquel fait référence la propriété <codeph class="+ topic/ph pr-d/codeph ">client</codeph> d’une occurrence de NetStream.</li><li class="- topic/li ">Occurrence d’une sous-classe de NetStream. NetStream est une classe scellée, ce qui signifie qu’il est impossible d’ajouter des propriétés ou des méthodes à un objet NetStream à l’exécution. Vous pouvez créer une sous-classe de NetStream et définir votre gestionnaire d’événement dans la sous-classe. Vous pouvez également faire de cette dernière une sous-classe dynamique et ajouter la fonction de gestionnaire d’événement à une occurrence de la sous-classe.</li></ul>
 
 <p class="- topic/p ">L’utilitaire Flash Video Exporter (version 1.1 ou supérieure) intègre la durée de la vidéo, sa date de création, les débits et d’autres informations dans le fichier vidéo. Différents encodeurs vidéo intègrent différents jeux de métadonnées.</p>
 
 <p class="- topic/p ">L’écouteur d’événement associé est déclenché après un appel de la méthode <codeph class="+ topic/ph pr-d/codeph ">NetStream.play()</codeph>, mais avant que la tête de lecture vidéo n’ait avancé.</p>
 
 <p class="- topic/p ">Dans la plupart des cas, la valeur de durée intégrée dans les métadonnées du flux se rapproche de la durée réelle, mais n’est pas exacte. En d’autres termes, elle ne correspond pas toujours à la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">NetStream.time</codeph> lorsque la tête de lecture est à la fin du flux vidéo.</p>
 <p class="- topic/p ">L’objet d’événement transmis au gestionnaire d’événement onMetaData contient une propriété pour chaque élément de données.</p>
 
 </apiDesc><example conref="examples\NetStream_onCuePoint.as" class="- topic/example "> L’exemple suivant indique comment charger des fichiers FLV externes, et répondre à des métadonnées et à des points de repère. Exemple fourni par <xref href="http://actionscriptexamples.com/2008/02/26/loading-flv-files-in-actionscript-30-using-the-netconnection-and-netstream-classes/" scope="_mmexternal" class="- topic/xref ">ActionScriptExamples.com</xref>. 
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
var video:Video = new Video();
addChild(video);
 
var nc:NetConnection = new NetConnection();
nc.connect(null);
 
var ns:NetStream = new NetStream(nc);
ns.client = {};
ns.client.onMetaData = ns_onMetaData;
ns.client.onCuePoint = ns_onCuePoint;
ns.play("http://www.helpexamples.com/flash/video/cuepoints.flv");
 
video.attachNetStream(ns);
 
function ns_onMetaData(item:Object):void {
    trace("metaData");
    // Resize video instance.
    video.width = item.width;
    video.height = item.height;
    // Center video instance on Stage.
    video.x = (stage.stageWidth - video.width) / 2;
    video.y = (stage.stageHeight - video.height) / 2;
}
 
function ns_onCuePoint(item:Object):void {
    trace("cuePoint");
    trace(item.name + "\t" + item.time);
}
</codeblock></example></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetConnection" class="- topic/link "><linktext class="- topic/linktext ">NetConnection</linktext></link><link href="flash.net.xml#NetStream/client" class="- topic/link "><linktext class="- topic/linktext ">client</linktext></link><link href="flash.net.xml#NetStream/event:asyncError" class="- topic/link "><linktext class="- topic/linktext ">asyncError</linktext></link><link href="flash.net.xml#NetStream/event:onCuePoint" class="- topic/link "><linktext class="- topic/linktext ">onCuePoint</linktext></link><link href="flash.net.xml#NetStream/play()" class="- topic/link "><linktext class="- topic/linktext ">play()</linktext></link><link href="flash.net.xml#NetStream/time" class="- topic/link "><linktext class="- topic/linktext ">time</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.net:NetStream__onXMPData" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">onXMPData</apiName><shortdesc class="- topic/shortdesc ">
 Définit un écouteur pour qu’il réponde lorsque Flash Player reçoit des informations spécifiques à XMP (Extensible Metadata Platform) d’Adobe, intégrées à la vidéo lue.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier "/><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Définit un écouteur pour qu’il réponde lorsque Flash Player reçoit des informations spécifiques à XMP (Extensible Metadata Platform) d’Adobe, intégrées à la vidéo lue. Pour plus d’informations sur les formats des fichiers vidéo pris en charge par Flash Media Server, voir <xref href="http://www.adobe.com/go/learn_fms_fileformats_en" scope="external" class="- topic/xref ">www.adobe.com/go/learn_fms_fileformats_en</xref>.
 
 <p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">onXMPData</codeph> est en réalité une propriété de l’objet <codeph class="+ topic/ph pr-d/codeph ">NetStream.client</codeph>. Cette propriété est répertoriée dans la section Events, car elle répond à un événement data, soit lors de la diffusion de données multimédias avec Flash Media Server soit lors de la lecture d’un fichier FLV. Pour plus d’informations, voir la description de la classe NetStream et de la propriété <codeph class="+ topic/ph pr-d/codeph ">NetStream.client</codeph>. Vous ne pouvez pas utiliser la méthode <codeph class="+ topic/ph pr-d/codeph ">addEventListener()</codeph>, ni toute autre méthode EventDispatcher, pour écouter ou traiter <codeph class="+ topic/ph pr-d/codeph ">onMetaData</codeph> comme un événement. Définissez une fonction de rappel et associez-la à l’un des objets suivants :</p>
 
 <ul class="- topic/ul "><li class="- topic/li ">Objet auquel fait référence la propriété <codeph class="+ topic/ph pr-d/codeph ">client</codeph> d’une occurrence de NetStream.</li><li class="- topic/li ">Occurrence d’une sous-classe de NetStream. NetStream est une classe scellée, ce qui signifie qu’il est impossible d’ajouter des propriétés ou des méthodes à un objet NetStream à l’exécution. Vous pouvez cependant créer une sous-classe de NetStream et définir votre gestionnaire d’événement dans la sous-classe. Vous pouvez également faire de cette dernière une sous-classe dynamique et ajouter la fonction de gestionnaire d’événement à une occurrence de la sous-classe.</li></ul>
 
 <p class="- topic/p ">L’écouteur d’événement associé est déclenché après un appel de la méthode <codeph class="+ topic/ph pr-d/codeph ">NetStream.play()</codeph>, mais avant que la tête de lecture vidéo n’ait avancé.</p>
 
 <p class="- topic/p ">L’objet transmis à la fonction de gestion d’événement <codeph class="+ topic/ph pr-d/codeph ">onXMPData()</codeph> a une propriété <codeph class="+ topic/ph pr-d/codeph ">data</codeph>, qui correspond à une chaîne. La chaîne est générée à partir d’un champ UUID de premier niveau (l’UUID 128 bits du champ de premier niveau est <codeph class="+ topic/ph pr-d/codeph ">BE7ACFCB-97A9-42E8-9C71-999491E3AFAC</codeph>). Ce champ UUID de premier niveau contient un document XML représenté sous forme de chaîne UTF-8 terminée par un octet nul.</p>
 
 </apiDesc></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetConnection" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetConnection</linktext></link><link href="flash.net.xml#NetStream/client" class="- topic/link "><linktext class="- topic/linktext ">client</linktext></link><link href="flash.net.xml#NetStream/event:asyncError" class="- topic/link "><linktext class="- topic/linktext ">asyncError</linktext></link><link href="flash.net.xml#NetStream/event:onCuePoint" class="- topic/link "><linktext class="- topic/linktext ">onCuePoint</linktext></link><link href="flash.net.xml#NetStream/play()" class="- topic/link "><linktext class="- topic/linktext ">play()</linktext></link><link href="flash.net.xml#NetStream/time" class="- topic/link "><linktext class="- topic/linktext ">time</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.net:NetStream_flash.events.NetStatusEvent.NET_STATUS_netStatus" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">netStatus</apiName><shortdesc class="- topic/shortdesc ">
 Distribué lorsqu’un objet NetStream publie son état ou signale une erreur.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.NetStatusEvent.NET_STATUS</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.NetStatusEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Distribué lorsqu’un objet NetStream publie son état ou signale une erreur. L’événement <codeph class="+ topic/ph pr-d/codeph ">netStatus</codeph> renferme une propriété <codeph class="+ topic/ph pr-d/codeph ">info</codeph> composée d’un objet d’informations contenant des informations spécifiques sur l’événement, telles que la réussite ou l’échec d’une tentative de connexion.
 </apiDesc></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.events.xml#NetStatusEvent/info" class="- topic/link "><linktext class="- topic/linktext ">flash.events.NetStatusEvent.info</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.net:NetStream_flash.events.IOErrorEvent.IO_ERROR_ioError" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">ioError</apiName><shortdesc class="- topic/shortdesc ">
 Distribué lorsqu’il se produit une erreur d’entrée ou de sortie entraînant l’échec d’une opération réseau.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.IOErrorEvent.IO_ERROR</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.IOErrorEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Distribué lorsqu’il se produit une erreur d’entrée ou de sortie entraînant l’échec d’une opération réseau.
 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flash.net:NetStream_flash.events.AsyncErrorEvent.ASYNC_ERROR_asyncError" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">asyncError</apiName><shortdesc class="- topic/shortdesc ">
 Distribué lorsqu’une erreur est renvoyée de manière asynchrone ; autrement dit, lorsqu’elle provient du code asynchrone natif.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.AsyncErrorEvent.ASYNC_ERROR</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.AsyncErrorEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Distribué lorsqu’une erreur est renvoyée de manière asynchrone ; autrement dit, lorsqu’elle provient du code asynchrone natif. Cet événement est distribué lorsqu’un serveur appelle une méthode non définie sur le client.
 
 </apiDesc></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStream/event:onPlayStatus" class="- topic/link "><linktext class="- topic/linktext ">onPlayStatus</linktext></link><link href="flash.net.xml#NetStream/event:onMetaData" class="- topic/link "><linktext class="- topic/linktext ">onMetaData</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.net:NetStream_flash.events.StatusEvent.STATUS_status" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">status</apiName><shortdesc class="- topic/shortdesc ">
 Distribué lorsque l’application tente de lire un fichier chiffré à l’aide de la gestion des droits numériques (DRM) en appelant la méthode NetStream.play().</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.StatusEvent.STATUS</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.StatusEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Distribué lorsque l’application tente de lire un fichier chiffré à l’aide de la gestion des droits numériques (DRM) en appelant la méthode <codeph class="+ topic/ph pr-d/codeph ">NetStream.play()</codeph>. La valeur de la propriété du code d’état est la suivante : <codeph class="+ topic/ph pr-d/codeph ">"DRM.encryptedFLV"</codeph>.
 
 </apiDesc></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStream/play()" class="- topic/link "><linktext class="- topic/linktext ">play()</linktext></link></related-links></adobeApiEvent><apiConstructor id="flash.net:NetStream:NetStream" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">NetStream</apiName><shortdesc class="- topic/shortdesc ">
     Crée un flux qui permet de lire des fichiers multimédias et d’envoyer des données sur un objet NetConnection.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">NetStream, constructor
     
      </keyword></asCustoms></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">L’occurrence de NetConnection n’est pas connectée.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">connection</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.net:NetConnection</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Objet NetConnection.
     
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">peerID</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">connectToFMS</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ce paramètre facultatif est disponible dans Flash Player 10 et les versions ultérieures, pour une utilisation avec des connexions RTMFP. (Si la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">NetConnection.protocol</codeph> n’est pas <codeph class="+ topic/ph pr-d/codeph ">"rtmfp"</codeph>, ce paramètre est ignoré.) Utilisez l’une des valeurs suivantes :
     
     <ul class="- topic/ul "><li class="- topic/li ">Pour vous connecter à Flash Media Server, spécifiez <codeph class="+ topic/ph pr-d/codeph ">NetStream.CONNECT_TO_FMS</codeph>. </li><li class="- topic/li ">Pour publier directement sur des homologues, spécifiez <codeph class="+ topic/ph pr-d/codeph ">NetStream.DIRECT_CONNECTIONS</codeph>.</li><li class="- topic/li ">Pour lancer la lecture directement depuis un homologue donné, spécifiez l’identité de ce dernier (voir <codeph class="+ topic/ph pr-d/codeph ">NetConnection.nearID</codeph> et <codeph class="+ topic/ph pr-d/codeph ">NetStream.farID</codeph>).</li><li class="- topic/li ">(Flash Player 10.1 ou AIR  2 ou version ultérieure) Pour publier ou lire un flux dans un groupe de multidiffusion homologue à homologue, spécifiez une chaîne <codeph class="+ topic/ph pr-d/codeph ">groupspec</codeph> (voir la classe GroupSpecifier).</li></ul>
     
     <p class="- topic/p ">Dans la plupart des cas, un <codeph class="+ topic/ph pr-d/codeph ">groupspec</codeph> peut utiliser la liaison montante du réseau sur le système local. Dans ce cas, l’utilisateur doit donner l’autorisation d’utiliser les ressources réseau. Si l’utilisateur accorde cette autorisation, un événement NetStatusEvent <codeph class="+ topic/ph pr-d/codeph ">NetStream.Connect.Success</codeph> est envoyé à l’écouteur d’événement de l’objet NetConnection. Si l’utilisateur ne donne pas son accord, un événement <codeph class="+ topic/ph pr-d/codeph ">NetStream.Connect.Rejected</codeph> est envoyé. Lorsque vous spécifiez un <codeph class="+ topic/ph pr-d/codeph ">groupspec</codeph>, il n’est pas conseillé d’utiliser les méthodes de l’objet NetStream tant qu’un événement <codeph class="+ topic/ph pr-d/codeph ">NetStream.Connect.Success</codeph> n’est pas reçu. Le cas échéant, une exception est renvoyée.</p>
     
     
     <p class="- topic/p ">Si vous incluez ce paramètre dans l’instruction du constructeur et transmettez une valeur <codeph class="+ topic/ph pr-d/codeph ">null</codeph><codeph class="+ topic/ph pr-d/codeph ">, la valeur est définie sur "connectToFMS"</codeph>.</p>
     
     </apiDesc></apiParam></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Crée un flux qui permet de lire des fichiers multimédias et d’envoyer des données sur un objet NetConnection.
     
     </apiDesc><example conref="examples\NetStreamExample_constructor.as" class="- topic/example "> Le code suivant illustre une connexion permettant de télécharger et d’afficher, progressivement, une vidéo affectée à la variable <codeph class="+ topic/ph pr-d/codeph ">videoURL</codeph> :
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
            var my_nc:NetConnection = new NetConnection();
            my_nc.connect(null);
            var my_ns:NetStream = new NetStream(my_nc);
            my_ns.play(videoURL);
            var my_video:Video = new Video();
            my_video.attachNetStream(my_ns);
            addChild(my_video);
</codeblock></example><example conref="examples\NetStreamExample_constructor2.as" class="- topic/example "> Le code suivant illustre une connexion permettant de diffuser et d’afficher une vidéo (affectée à la variable <codeph class="+ topic/ph pr-d/codeph ">videoURL</codeph>) sur une occurrence de Flash Media Server distante spécifiée dans la commande <codeph class="+ topic/ph pr-d/codeph ">connect()</codeph> :
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
            var my_nc:NetConnection = new NetConnection();
            my_nc.connect("rtmp://www.yourfmsserver.com/someappname");
            var my_ns:NetStream = new NetStream(my_nc, NetStream.CONNECT_TO_FMS);
            my_ns.play(videoURL);
            var my_video:Video = new Video();
            my_video.attachNetStream(my_ns);
            addChild(my_video);
</codeblock></example></apiConstructorDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStream/CONNECT_TO_FMS" class="- topic/link "><linktext class="- topic/linktext ">CONNECT_TO_FMS</linktext></link><link href="flash.net.xml#NetStream/DIRECT_CONNECTIONS" class="- topic/link "><linktext class="- topic/linktext ">DIRECT_CONNECTIONS</linktext></link><link href="flash.net.xml#NetStream/farID" class="- topic/link "><linktext class="- topic/linktext ">farID</linktext></link><link href="flash.media.xml#Video/attachCamera()" class="- topic/link "><linktext class="- topic/linktext ">flash.media.Video.attachCamera()</linktext></link><link href="flash.net.xml#GroupSpecifier" class="- topic/link "><linktext class="- topic/linktext ">flash.net.GroupSpecifier</linktext></link><link href="flash.net.xml#GroupSpecifier/groupspecWithAuthorizations()" class="- topic/link "><linktext class="- topic/linktext ">flash.net.GroupSpecifier.groupspecWithAuthorizations()</linktext></link><link href="flash.net.xml#GroupSpecifier/groupspecWithoutAuthorizations()" class="- topic/link "><linktext class="- topic/linktext ">flash.net.GroupSpecifier.groupspecWithoutAuthorizations()</linktext></link><link href="flash.net.xml#GroupSpecifier/multicastEnabled" class="- topic/link "><linktext class="- topic/linktext ">flash.net.GroupSpecifier.multicastEnabled</linktext></link><link href="flash.net.xml#NetConnection" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetConnection</linktext></link><link href="flash.net.xml#NetConnection/nearID" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetConnection.nearID</linktext></link><link href="flash.net.xml#NetConnection/protocol" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetConnection.protocol</linktext></link><link href="flash.net.xml#NetGroup" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetGroup</linktext></link><link href="flash.events.xml#NetStatusEvent/code_NetStream_Connect_Rejected" class="- topic/link "><linktext class="- topic/linktext ">flash.events.NetStatusEvent.info.code="NetStream.Connect.Rejected"</linktext></link><link href="flash.events.xml#NetStatusEvent/code_NetStream_Connect_Success" class="- topic/link "><linktext class="- topic/linktext ">flash.events.NetStatusEvent.info.code="NetStream.Connect.Success"</linktext></link></related-links></apiConstructor><apiOperation id="flash.net:NetStream:appendBytesAction" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">appendBytesAction</apiName><shortdesc class="- topic/shortdesc ">
     Indique une discontinuité dans l’échelle de temps, vide le contenu de la FIFO et demande à l’analyseur d’octets de prévoir un en-tête de fichier ou le début d’une balise FLV.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">netStreamAppendBytesAction</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Indique une discontinuité dans l’échelle de temps, vide le contenu de la FIFO et demande à l’analyseur d’octets de prévoir un en-tête de fichier ou le début d’une balise FLV.
     
     <p class="- topic/p ">
     Les appels de <codeph class="+ topic/ph pr-d/codeph ">NetStream.seek()</codeph> vident les mémoires tampons de l’objet NetStream. L’analyseur d’octets reste en mode de vidage jusqu’à ce que vous appeliez <codeph class="+ topic/ph pr-d/codeph ">appendBytesAction()</codeph> et transmettiez l’argument <codeph class="+ topic/ph pr-d/codeph ">RESET_BEGIN</codeph> ou <codeph class="+ topic/ph pr-d/codeph ">RESET_SEEK</codeph>. Capturez l’événement <codeph class="+ topic/ph pr-d/codeph ">"NetStream.seek.notify"</codeph> pour appeler <codeph class="+ topic/ph pr-d/codeph ">appendBytesAction()</codeph> après une recherche. Un nouvel en-tête de fichier peut prendre en charge les listes de lecture et effectuer des recherches sans appeler <codeph class="+ topic/ph pr-d/codeph ">NetStream.seek()</codeph>.
     </p>
     
     <p class="- topic/p ">
     Vous pouvez également appeler cette méthode pour réinitialiser l’analyseur d’octets pour le rappel de <codeph class="+ topic/ph pr-d/codeph ">onSeekPoint()</codeph>).
     </p>
     
     
     </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStream/appendBytes()" class="- topic/link "><linktext class="- topic/linktext ">appendBytes()</linktext></link><link href="flash.net.xml#NetStream/seek()" class="- topic/link "><linktext class="- topic/linktext ">seek()</linktext></link><link href="flash.net.xml#NetStreamAppendBytesAction" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetStreamAppendBytesAction</linktext></link></related-links></apiOperation><apiOperation id="flash.net:NetStream:appendBytes" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">appendBytes</apiName><shortdesc class="- topic/shortdesc ">
     Transmet un ByteArray à un NetStream pour la lecture.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">bytes</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.utils:ByteArray</apiOperationClassifier></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Transmet un ByteArray à un NetStream pour la lecture. Appelez cette méthode sur un objet NetStream en « mode de génération de données ». Pour placer un objet NetStream en mode de génération de données, appelez <codeph class="+ topic/ph pr-d/codeph ">NetStream.play(null)</codeph> sur un NetStream créé sur un objet NetConnection connecté à <codeph class="+ topic/ph pr-d/codeph ">null</codeph>. L’appel de la méthode <codeph class="+ topic/ph pr-d/codeph ">appendBytes()</codeph> sur un objet NetStream qui n’est pas en mode de génération de données est une erreur et renvoie une exception.
     
     <p class="- topic/p ">
     L’analyseur d’octets interprète un fichier FLV avec un en-tête. Après l’analyse de l’en-tête, <codeph class="+ topic/ph pr-d/codeph ">appendBytes()</codeph> s’attend à ce que tous les futurs appels soient la continuation du même fichier réel ou virtuel. Un autre en-tête n’est pas attendu, à moins que <codeph class="+ topic/ph pr-d/codeph ">appendBytesAction(NetStreamAppendBytesAction.RESET_BEGIN)</codeph> soit appelée. 
     </p>
     
     <p class="- topic/p ">
     Un objet NetStream possède deux mémoires tampons : la FIFO de <codeph class="+ topic/ph pr-d/codeph ">appendBytes()</codeph> à l’objet NetStream et la mémoire tampon de lecture. La FIFO est la mémoire tampon de réassemblage des balises FLV partielles et ne contient pas plus d’une balise FLV incomplète. Les appels de la méthode <codeph class="+ topic/ph pr-d/codeph ">NetStream.seek()</codeph> vident les deux mémoires tampons. Après un appel de la méthode <codeph class="+ topic/ph pr-d/codeph ">seek()</codeph>, appelez <codeph class="+ topic/ph pr-d/codeph ">appendBytesAction()</codeph> pour réinitialiser l’échelle de temps afin qu’elle commence à la date et à l’heure du prochain message joint.
     </p>
     
     <p class="- topic/p ">
     Chaque appel de la méthode <codeph class="+ topic/ph pr-d/codeph ">appendBytes()</codeph> ajoute des octets à la FIFO jusqu’à ce qu’une balise FLV soit complète. Lorsqu’une balise FLV est complète, elle se déplace vers la mémoire tampon de lecture. Un appel de la méthode <codeph class="+ topic/ph pr-d/codeph ">appendBytes()</codeph> peut écrire plusieurs balises FLV. Les premiers octets complètent une balise FLV existante (qui se déplace vers la mémoire tampon de lecture). Les balises FLV complètes se déplacent vers la mémoire tampon de lecture. Les octets restants qui ne forment pas une balise FLV complète sont placés dans la FIFO. Les octets dans la FIFO sont terminés par un appel à <codeph class="+ topic/ph pr-d/codeph ">appendBytes()</codeph> ou vidés par un appel à <codeph class="+ topic/ph pr-d/codeph ">appendBytesAction()</codeph> avec l’argument <codeph class="+ topic/ph pr-d/codeph ">RESET_SEEK</codeph> ou <codeph class="+ topic/ph pr-d/codeph ">RESET_BEGIN</codeph>.
     </p>
     
     <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Remarque :</b> il est possible que l’analyseur d’octets ne parvienne pas à décoder complètement un appel de la méthode <codeph class="+ topic/ph pr-d/codeph ">appendBytes()</codeph> jusqu’au prochain appel de <codeph class="+ topic/ph pr-d/codeph ">appendBytes()</codeph>. </p>
     
     </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStream/appendBytesAction()" class="- topic/link "><linktext class="- topic/linktext ">appendBytesAction()</linktext></link><link href="flash.net.xml#NetStream/seek()" class="- topic/link "><linktext class="- topic/linktext ">seek()</linktext></link></related-links></apiOperation><apiOperation id="flash.net:NetStream:attachAudio" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">attachAudio</apiName><shortdesc class="- topic/shortdesc ">
     Associe un flux audio à un objet NetStream à partir d’un objet Microphone transmis en tant que source.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiDefaultValue>"null"
     </apiDefaultValue><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">microphone</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.media:Microphone</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Source du flux audio à transmettre.
     
     </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Associe un flux audio à un objet NetStream à partir d’un objet Microphone transmis en tant que source. Cette méthode n’est accessible qu’à l’éditeur du flux continu spécifié.
     
     <p class="- topic/p ">Utilisez cette méthode avec Flash Media Server pour envoyer des données audio en direct au serveur. Appelez cette méthode avant ou après l’appel de <codeph class="+ topic/ph pr-d/codeph ">publish()</codeph>. 
     </p>
     
     <p class="- topic/p ">Définissez la propriété <codeph class="+ topic/ph pr-d/codeph ">Microphone.rate</codeph> de sorte qu’elle corresponde à la valeur du périphérique de capture audio. Appelez <codeph class="+ topic/ph pr-d/codeph ">setSilenceLevel()</codeph> pour définir le seuil de silence. Pour contrôler les propriétés audio (volume et balance) du flux audio, utilisez la propriété <codeph class="+ topic/ph pr-d/codeph ">Microphone.soundTransform</codeph>.</p>
     
     <pre xml:space="preserve" class="- topic/pre ">
     var nc:NetConnection = new NetConnection();
     nc.connect("rtmp://server.domain.com/app");
     var ns:NetStream = new NetStream(nc);
     
     var live_mic:Microphone = Microphone.get();
     live_mic.rate = 8;
     live_mic.setSilenceLevel(20,200);
     
     var soundTrans:SoundTransform = new SoundTransform();
     soundTrans.volume = 6;
     live_mic.soundTransform = soundTrans;
     
     ns.attachAudio(live_mic);
     ns.publish("mic_stream","live")
     </pre>
     
     <p class="- topic/p "> Pour entendre le son, appelez la méthode <codeph class="+ topic/ph pr-d/codeph ">NetStream.play()</codeph>, puis appelez <codeph class="+ topic/ph pr-d/codeph ">DisplayObjectContainer.addChild()</codeph> pour acheminer le son à un objet de la liste d’affichage.
     </p>
     
     </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStream/play()" class="- topic/link "><linktext class="- topic/linktext ">play()</linktext></link><link href="flash.media.xml#Microphone" class="- topic/link "><linktext class="- topic/linktext ">flash.media.Microphone</linktext></link><link href="flash.display.xml#DisplayObjectContainer/addChild()" class="- topic/link "><linktext class="- topic/linktext ">flash.display.DisplayObjectContainer.addChild()</linktext></link></related-links></apiOperation><apiOperation id="flash.net:NetStream:attachCamera" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">attachCamera</apiName><shortdesc class="- topic/shortdesc ">
     Démarre la capture vidéo à partir de la caméra ou arrête la capture si theCamera est défini sur null.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">theCamera</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.media:Camera</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Source de la transmission vidéo. Les valeurs supportées sont un objet Camera (qui amorce la capture vidéo) et <codeph class="+ topic/ph pr-d/codeph ">null</codeph>. Si vous utilisez la valeur <codeph class="+ topic/ph pr-d/codeph ">null</codeph>, l’application interrompt la capture vidéo et tous les autres paramètres que vous envoyez sont ignorés.
     
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">snapshotMilliseconds</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">-1</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Spécifie si le flux vidéo est continu, une image unique ou une série d’images uniques utilisées pour créer une séquence en accéléré.
     
     <ul class="- topic/ul "><li class="- topic/li ">Si vous omettez ce paramètre, l’application capture toutes les données vidéo jusqu’à ce que vous transmettiez la valeur <codeph class="+ topic/ph pr-d/codeph ">null</codeph> à <codeph class="+ topic/ph pr-d/codeph ">attachCamera</codeph>.</li><li class="- topic/li ">Si vous transmettez 0, l’application capture une seule image vidéo. Utilisez cette valeur pour transmettre des « instantanés » dans un flux préexistant. <ph class="- topic/ph ">Flash Player ou </ph>AIR interprète les arguments non valides, négatif ou non numériques comme valeur 0.</li><li class="- topic/li ">Si vous transmettez une valeur positive, l’application capture une image vidéo unique, puis ajoute une pause de la durée spécifiée en suffixe sur l’instantané. Utilisez cette valeur pour créer des effets d’accéléré.</li></ul>
     
     
     </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Démarre la capture vidéo à partir de la caméra ou arrête la capture si <codeph class="+ topic/ph pr-d/codeph ">theCamera</codeph> est défini sur <codeph class="+ topic/ph pr-d/codeph ">null</codeph>. Cette méthode n’est accessible qu’à l’éditeur du flux continu spécifié.
     
     <p class="- topic/p ">Cette méthode est conçue pour une utilisation avec Flash Media Server. Pour plus d’informations, voir la description de la classe.</p>
     
     <p class="- topic/p "> Une fois la source vidéo associée, vous devez appeler <codeph class="+ topic/ph pr-d/codeph ">NetStream.publish()</codeph> pour commencer la transmission. Les abonnés qui souhaitent afficher la vidéo doivent appeler les méthodes <codeph class="+ topic/ph pr-d/codeph ">NetStream.play()</codeph> et <codeph class="+ topic/ph pr-d/codeph ">Video.attachCamera()</codeph> pour afficher la vidéo sur la scène.</p>
     
     <p class="- topic/p ">Vous pouvez utiliser <codeph class="+ topic/ph pr-d/codeph ">snapshotMilliseconds</codeph> pour envoyer un instantané unique (avec valeur 0) ou une série d’instantanés, soit une séquence en accéléré (time lapse), en spécifiant un nombre positif qui ajoute à la source vidéo le nombre indiqué de millisecondes. Ce nombre étend la durée d’affichage du message vidéo. Si vous appelez <codeph class="+ topic/ph pr-d/codeph ">attachCamera()</codeph> à plusieurs reprises en définissant une valeur positive pour <codeph class="+ topic/ph pr-d/codeph ">snapshotMilliseconds</codeph>, la séquence d’instantanés et les millisecondes supplémentaires en alternance créent une séquence en accéléré. Vous pouvez, par exemple, capturer une image par jour et l’ajouter à la fin du fichier vidéo. Lorsqu’un abonné lit le fichier, chaque image s’affiche pendant le nombre spécifié de millisecondes, puis l’image suivante apparaît.</p>
     
     <p class="- topic/p ">Le paramètre <codeph class="+ topic/ph pr-d/codeph ">snapshotMilliseconds</codeph> n’a pas le même objectif que le paramètre <codeph class="+ topic/ph pr-d/codeph ">fps</codeph>, que vous pouvez définir à l’aide de la méthode <codeph class="+ topic/ph pr-d/codeph ">Camera.setMode()</codeph>. Lorsque vous spécifiez <codeph class="+ topic/ph pr-d/codeph ">snapshotMilliseconds</codeph>, vous contrôlez le temps qui s’écoule entre les images enregistrées. Lorsque vous spécifiez <codeph class="+ topic/ph pr-d/codeph ">fps</codeph> à l’aide de <codeph class="+ topic/ph pr-d/codeph ">Camera.setMode()</codeph>, vous contrôlez le temps qui s’écoule à l’enregistrement et à la lecture.</p>
     
     <p class="- topic/p ">Imaginons, par exemple, que vous voulez capturer 100 instantanés, à raison d’un instantané toutes les 5 minutes. Deux solutions s’offrent à vous :</p>
     
     <ul class="- topic/ul "><li class="- topic/li ">Vous pouvez émettre une commande <codeph class="+ topic/ph pr-d/codeph ">NetStream.attachCamera(myCamera, 500)</codeph> à 100 reprises, toutes les 5 minutes. L’enregistrement prend 500 minutes, mais le fichier résultant est lu en 50 secondes (100 images, 500 millisecondes entre elles).</li><li class="- topic/li ">Vous pouvez émettre une commande <codeph class="+ topic/ph pr-d/codeph ">Camera.setMode()</codeph> en réglant <codeph class="+ topic/ph pr-d/codeph ">fps</codeph> sur 1/300 (une image toutes les 300 secondes, autrement dit, toutes les 5 minutes), puis une commande <codeph class="+ topic/ph pr-d/codeph ">NetStream.attachCamera(source)</codeph>, en laissant la caméra capturer des images en continu pendant 500 minutes. Il faudra 500 minutes pour lire le fichier produit ; en d’autres termes autant que pour l’enregistrer, chaque image étant affichée pendant 5 minutes.</li></ul>

     <p class="- topic/p ">Ces deux techniques capturent les mêmes 500 images et les deux sont utiles. Votre choix doit être déterminé principalement par le type de lecture souhaité. Dans le second cas, par exemple, vous pourriez enregistrer du son en même temps. Par ailleurs, les deux fichiers feraient environ la même taille.</p>
     
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.net:NetStream:attach" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">attach</apiName><shortdesc class="- topic/shortdesc ">
    Joint un flux à un nouvel objet NetConnection.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><internal>uncomment the following line after offset is added to the file
    </internal></asCustoms></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">connection</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.net:NetConnection</apiOperationClassifier></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Joint un flux à un nouvel objet NetConnection. Appelez cette méthode pour associer un NetStream à un nouvel objet NetConnection après l’abandon, puis le rétablissement d’une connexion. Flash Player et AIR reprennent la diffusion en continu à partir du point où s’est arrêtée la lecture lorsque la connexion a été perdue. Vous pouvez également utiliser cette méthode pour procéder à un équilibrage de charge.
    
    <p class="- topic/p ">Cette méthode requiert Flash Media Server version 3.5.3 ou ultérieure.</p>
    
    <p class="- topic/p ">Si vous souhaitez utiliser cette méthode pour procéder à la <b class="+ topic/ph hi-d/b ">reconnexion du flux de données</b>, voir la  <xref href="http://www.adobe.com/go/learn_fms_docs_fr" scope="external" class="- topic/xref ">documentation de Flash Media Server 3.5.3</xref>. </p>
    
    <p class="- topic/p "> Si vous souhaitez utiliser cette méthode pour l’<b class="+ topic/ph hi-d/b ">équilibrage de charge</b>, procédez comme suit : </p>
    
    <ol class="- topic/ol "><li class="- topic/li "> Associez un flux connecté à un objet NetConnection sur un autre serveur. </li><li class="- topic/li ">Une fois que le flux est correctement associé à la nouvelle connexion, appelez <codeph class="+ topic/ph pr-d/codeph ">NetConnection.close()</codeph> sur la connexion précédente pour empêcher les fuites de données.</li><li class="- topic/li ">Appelez <codeph class="+ topic/ph pr-d/codeph ">NetStream.play2()</codeph> et définissez la valeur de <codeph class="+ topic/ph pr-d/codeph ">NetStreamPlayOptions.transition</codeph> sur RESUME. Définissez le reste des propriétés NetStreamPlayOptions sur les mêmes valeurs que vous avez utilisées lors de l’appel initial de la méthode <codeph class="+ topic/ph pr-d/codeph ">NetStream.play()</codeph> ou <codeph class="+ topic/ph pr-d/codeph ">NetStream.play2()</codeph> pour lancer le flux.</li></ol>
    
    
    </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStream/play2()" class="- topic/link "><linktext class="- topic/linktext ">play2()</linktext></link><link href="flash.net.xml#NetStreamPlayOptions/transition" class="- topic/link "><linktext class="- topic/linktext ">NetStreamPlayOptions.transition</linktext></link></related-links></apiOperation><apiOperation id="flash.net:NetStream:close" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">close</apiName><shortdesc class="- topic/shortdesc ">
     Arrête la lecture des données du flux, définit la propriété time sur 0 et met le flux à disposition.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">NetStream.close, close
     </keyword></asCustoms></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Arrête la lecture des données du flux, définit la propriété <codeph class="+ topic/ph pr-d/codeph ">time</codeph> sur 0 et met le flux à disposition. Cette méthode supprime également la copie locale d’un fichier vidéo téléchargé via HTTP. Même si l’application supprime la copie locale du fichier qu’il crée, une copie peut subsister dans le répertoire cache. Si vous devez empêcher toute mise en cache ou tout stockage local du fichier vidéo, utilisez Flash Media Server.
     
     <p class="- topic/p ">
     Avec Flash Media Server, cette méthode est invoquée implicitement lorsque vous appelez <codeph class="+ topic/ph pr-d/codeph ">NetStream.play()</codeph> depuis un flux de publication ou <codeph class="+ topic/ph pr-d/codeph ">NetStream.publish()</codeph> depuis un flux d’abonnement. Veuillez noter que :
     </p>
     
     <ul class="- topic/ul "><li class="- topic/li ">
     Si <codeph class="+ topic/ph pr-d/codeph ">close()</codeph> est appelée depuis un flux de publication, le flux arrête la publication et l’éditeur peut alors utiliser ce flux dans un autre but. Les abonnés ne reçoivent plus aucun élément publié sur ce flux, car ce dernier a arrêté la publication.
     </li><li class="- topic/li ">
     Si <codeph class="+ topic/ph pr-d/codeph ">close()</codeph> est appelée depuis un flux d’abonnement, le flux arrête la lecture pour l’abonné et ce dernier peut utiliser ce flux dans un autre but. Les autres abonnés ne sont pas affectés.
     </li><li class="- topic/li ">
     Vous pouvez arrêter la lecture d’un flux d’abonnement sans fermer le flux ou modifier le type de flux en utilisant <codeph class="+ topic/ph pr-d/codeph ">flash.net.NetStream.play(false)</codeph>.
     </li></ul>
     
     
     
     </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStream/pause()" class="- topic/link "><linktext class="- topic/linktext ">pause()</linktext></link><link href="flash.net.xml#NetStream/play()" class="- topic/link "><linktext class="- topic/linktext ">play()</linktext></link><link href="flash.net.xml#NetStream/publish()" class="- topic/link "><linktext class="- topic/linktext ">publish()</linktext></link></related-links></apiOperation><apiOperation id="flash.net:NetStream:onPeerConnect" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">onPeerConnect</apiName><shortdesc class="- topic/shortdesc ">
     
     Invoqué lorsqu’un flux d’homologue éditeur correspond à un flux d’homologue abonné.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">subscriber</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.net:NetStream</apiOperationClassifier></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     
     Invoqué lorsqu’un flux d’homologue éditeur correspond à un flux d’homologue abonné. Avant que l’abonné ne soit connecté à l’éditeur, appelez cette méthode pour permettre au code ActionScript de contrôler l’accès en vue d’une publication homologue à homologue. Le code suivant montre un exemple de création d’une fonction de rappel pour cette méthode :
     <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
     var c:Object = new Object;
     c.onPeerConnect = function(subscriber:NetStream):Boolean {
      if (accept)
          return true;
      else
          return false;
      };
      m_netStream.client = c;
     </codeblock>
     
     <p class="- topic/p ">Si l’éditeur homologue n’implémente pas cette méthode, tous les homologues sont autorisés à lire tout contenu publié.</p>
     
     
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.net:NetStream:pause" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">pause</apiName><shortdesc class="- topic/shortdesc ">
     Interrompt la lecture d’un flux vidéo.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">NetStream.pause, pause
     
     </keyword></asCustoms></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Interrompt la lecture d’un flux vidéo. L’appel de cette méthode n’a aucune incidence si la vidéo est déjà en pause. Pour reprendre la lecture d’une vidéo après une pause, appelez <codeph class="+ topic/ph pr-d/codeph ">resume()</codeph>. Pour basculer entre la pause et la lecture (en commençant par mettre la vidéo en pause, puis en reprenant la lecture), appelez <codeph class="+ topic/ph pr-d/codeph ">togglePause()</codeph>.
     
     <p class="- topic/p ">Depuis Flash Player 9.0.115.0, le lecteur n’efface plus la mémoire tampon lors de l’appel de <codeph class="+ topic/ph pr-d/codeph ">NetStream.pause()</codeph>. Ce comportement est appelé pause intelligente. Avant Flash Player 9.0.115.0, le lecteur attendait le remplissage du tampon avant de reprendre la lecture, ce qui entraînait souvent des retards. </p>
     <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Remarque :</b> pour assurer la compatibilité descendante, l’événement<codeph class="+ topic/ph pr-d/codeph ">"NetStream.Buffer.Flush"</codeph> (voir la propriété <codeph class="+ topic/ph pr-d/codeph ">NetStatusEvent.info</codeph>) est toujours déclenché, bien que le serveur ne vide pas la mémoire tampon.</p>
     <p class="- topic/p ">En cas d’interruption unique, la propriété <codeph class="+ topic/ph pr-d/codeph ">NetStream.bufferLength</codeph> possède une limite de 60 secondes ou de deux fois la valeur de <codeph class="+ topic/ph pr-d/codeph ">NetStream.bufferTime</codeph> (la limite supérieure est prise en compte). Par exemple, si la propriété <codeph class="+ topic/ph pr-d/codeph ">bufferTime</codeph> est de 20 secondes, Flash Player effectue la mise en mémoire tampon jusqu’à ce que la propriété <codeph class="+ topic/ph pr-d/codeph ">NetStream.bufferLength</codeph> corresponde à la valeur la plus élevée de 20~~2 (c’est-à-dire 40), ou à la valeur 60 ; dans ce cas, Flash Player effectue la mise en mémoire tampon jusqu’à ce que la valeur de <codeph class="+ topic/ph pr-d/codeph ">bufferLength</codeph> corresponde à 60. Si la propriété <codeph class="+ topic/ph pr-d/codeph ">bufferTime</codeph> est de 40 secondes, Flash Player effectue la mise en mémoire tampon jusqu’à ce que la propriété <codeph class="+ topic/ph pr-d/codeph ">bufferLength</codeph> corresponde à la valeur la plus élevée de 40~~2 (c’est-à-dire 80), ou à la valeur 60 ; dans ce cas, Flash Player effectue la mise en mémoire tampon jusqu’à ce que la valeur de <codeph class="+ topic/ph pr-d/codeph ">bufferLength</codeph> corresponde à 80.</p>
     
     <p class="- topic/p ">La propriété <codeph class="+ topic/ph pr-d/codeph ">bufferLength</codeph> possède en outre une limite absolue. Si un appel à <codeph class="+ topic/ph pr-d/codeph ">pause()</codeph> provoque l’augmentation de <codeph class="+ topic/ph pr-d/codeph ">bufferLength</codeph> de plus de 600 secondes, ou la valeur de plus élevée de <codeph class="+ topic/ph pr-d/codeph ">bufferTime</codeph> ~~ 2, Flash Player efface le contenu de la mémoire tampon et remet à zéro <codeph class="+ topic/ph pr-d/codeph ">bufferLength</codeph>. Par exemple, si la propriété <codeph class="+ topic/ph pr-d/codeph ">bufferTime</codeph> est de 120 secondes, Flash Player efface le contenu de la mémoire tampon si la propriété <codeph class="+ topic/ph pr-d/codeph ">bufferLength</codeph> atteint 600 secondes ; si <codeph class="+ topic/ph pr-d/codeph ">bufferTime</codeph> est de 360 secondes, Flash Player efface le contenu de la mémoire tampon si <codeph class="+ topic/ph pr-d/codeph ">bufferLength</codeph> atteint 720 secondes.</p>
     
     <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Conseil </b>: vous pouvez utiliser <codeph class="+ topic/ph pr-d/codeph ">NetStream.pause()</codeph> dans le code pour mettre les données en mémoire tampon pendant que les spectateurs regardent une annonce publicitaire, par exemple, puis annuler l’interruption lorsque la vidéo principale démarre.</p>
     
     
     </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStream/close()" class="- topic/link "><linktext class="- topic/linktext ">close()</linktext></link><link href="flash.net.xml#NetStream/play()" class="- topic/link "><linktext class="- topic/linktext ">play()</linktext></link><link href="flash.net.xml#NetStream/resume()" class="- topic/link "><linktext class="- topic/linktext ">resume()</linktext></link><link href="flash.net.xml#NetStream/togglePause()" class="- topic/link "><linktext class="- topic/linktext ">togglePause()</linktext></link><link href="flash.net.xml#NetStream/bufferLength" class="- topic/link "><linktext class="- topic/linktext ">bufferLength</linktext></link><link href="flash.net.xml#NetStream/bufferTime" class="- topic/link "><linktext class="- topic/linktext ">bufferTime</linktext></link><link href="flash.events.xml#NetStatusEvent/info" class="- topic/link "><linktext class="- topic/linktext ">flash.events.NetStatusEvent.info</linktext></link></related-links></apiOperation><apiOperation id="flash.net:NetStream:play2" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">play2</apiName><shortdesc class="- topic/shortdesc ">
     Commute en toute transparence les fichiers dont les vitesses de transmission sont différentes et permet la reprise d’un NetStream lorsque la connexion est abandonnée, puis rétablie.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">param</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.net:NetStreamPlayOptions</apiOperationClassifier></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Commute en toute transparence les fichiers dont les vitesses de transmission sont différentes et permet la reprise d’un NetStream lorsque la connexion est abandonnée, puis rétablie.
     
     <p class="- topic/p ">Cette méthode est une version améliorée de <codeph class="+ topic/ph pr-d/codeph ">NetStream.play()</codeph>. Comme la méthode <codeph class="+ topic/ph pr-d/codeph ">play()</codeph>, la méthode <codeph class="+ topic/ph pr-d/codeph ">play2()</codeph> commence la lecture d’un fichier multimédia ou met des fichiers multimédia en file d’attente pour créer une liste de lecture. Lorsqu’elle est utilisée avec Flash Media Server, elle peut également demander au serveur de basculer vers un autre fichier multimédia. La transition est transparente dans l’application client. Les fonctionnalités suivantes utilisent la commutation de flux <codeph class="+ topic/ph pr-d/codeph ">play2()</codeph> :</p>
     
     <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Diffusion dynamique en continu</b></p>
     
     <p class="- topic/p ">La diffusion dynamique en continu (prise en charge dans Flash Media Server 3.5 et les versions ultérieures) fournit un flux codé à des vitesses de transmission différentes. A mesure que les conditions de réseau d’un spectateur changent, ce dernier reçoit la vitesse de transmission qui fournit les meilleures conditions d’affichage. Utilisez la classe <codeph class="+ topic/ph pr-d/codeph ">NetStreamInfo</codeph> pour gérer les conditions du réseau et changer de flux en fonction des données. Vous pouvez également changer de flux pour des clients ayant des capacités différentes. Pour plus d’informations, voir la section <xref href="http://www.adobe.com/go/learn_fms_dynstream_fr" scope="external" class="- topic/xref ">« Diffusion dynamique en continu »</xref> dans le « Guide du développeur d’Adobe Flash Media Server ».</p>
     
     <p class="- topic/p ">Adobe a conçu une classe ActionScript personnalisée appelée DynamicStream qui étend la classe NetStream. Vous pouvez utiliser la classe DynamicStream pour implémenter la diffusion dynamique en continu dans une application au lieu d’écrire votre propre code afin de détecter les conditions du réseau. Même si vous choisissez d’écrire votre propre code de diffusion en continu dynamique, utilisez la classe DynamicStream comme exemple d’implémentation. Téléchargez la classe et la documentation de la classe depuis la page <xref href="http://www.adobe.com/go/fms_tools_fr" scope="external" class="- topic/xref ">Flash Media Server tools and downloads</xref>.</p>
     
     <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Reconnexion du flux de données</b></p>
     
     <p class="- topic/p ">La reconnexion du flux de données (prise en charge dans Flash Media Server 3.5.3 et les versions ultérieures) permet d’utiliser le média sans interruption, même lorsque la connexion est perdue. Le média utilise la mémoire tampon pour poursuivre la lecture tandis que votre logique ActionScript se reconnecte à Flash Media Server. Une fois la connexion rétablie, appelez <codeph class="+ topic/ph pr-d/codeph ">NetStream.attach()</codeph> pour utiliser le même objet NetStream avec le nouveau NetConnection. Utilisez les API <codeph class="+ topic/ph pr-d/codeph ">NetStream.attach()</codeph>, <codeph class="+ topic/ph pr-d/codeph ">NetStreamPlayTransitions.resume</codeph> et <codeph class="+ topic/ph pr-d/codeph ">NetStreamPlayTrasitions.APPEND_AND_WAIT</codeph> pour reconnecter un flux de données. Pour plus d’informations, voir la <xref href="http://www.adobe.com/go/learn_fms_docs_fr" scope="external" class="- topic/xref ">documentation de Flash Media Server 3.5.3</xref>.</p>
     
     </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStream/play()" class="- topic/link "><linktext class="- topic/linktext ">play()</linktext></link><link href="flash.net.xml#NetStream/attach()" class="- topic/link "><linktext class="- topic/linktext ">attach()</linktext></link><link href="flash.net.xml#NetStreamPlayOptions" class="- topic/link "><linktext class="- topic/linktext ">NetStreamPlayOptions</linktext></link><link href="flash.net.xml#NetStreamPlayTransitions" class="- topic/link "><linktext class="- topic/linktext ">NetStreamPlayTransitions</linktext></link></related-links></apiOperation><apiOperation id="flash.net:NetStream:play" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">play</apiName><shortdesc class="- topic/shortdesc ">
     Lit un fichier multimédia à partir d’un répertoire local ou d’un serveur Web ; lit un fichier multimédia ou un flux en direct depuis Flash Media Server.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><internal>"at"see flash.media.Video#attachVideo()  This method no longer exists.  Replace with new method.
     </internal></asCustoms></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Les fichiers SWF locaux et non approuvés ne peuvent pas communiquer avec Internet. Pour contourner cette restriction, reclassifiez le fichier SWF en tant que fichier local avec accès au réseau ou en tant que fichier approuvé.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">SecurityError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">SecurityError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Il est nécessaire de spécifier au moins un paramètre.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">L’objet NetStream n’est pas valide. Cela peut être dû à un échec de NetConnection.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">Error</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Error</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">arguments</apiItemName><apiType value="restParam" name="type" class="- topic/state reference/state apiRef/apiType "/><apiDesc class="- topic/section reference/section apiRef/apiDesc ">    <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Lire un fichier local</b></p>
     
     
     <p class="- topic/p ">
     Emplacement d’un fichier multimédia. Cet argument peut être une chaîne, une propriété <codeph class="+ topic/ph pr-d/codeph ">URLRequest.url</codeph> ou une variable référençant l’une ou l’autre. Dans <ph class="- topic/ph ">Flash Player et dans</ph> le contenu AIR hors du sandbox de sécurité de l’application, vous pouvez lire les fichiers vidéo locaux stockés dans le même répertoire que le fichier SWF ou dans un sous-répertoire. Vous ne pouvez toutefois pas naviguer vers un répertoire de niveau supérieur.
     </p>
     
     <p class="- topic/p ">
     Dans le cas de contenu AIR dans le sandbox de sécurité de l’application, le chemin que vous spécifiez pour le fichier multimédia est relatif au répertoire du fichier SWF. Vous ne pouvez toutefois pas naviguer en dehors du répertoire du fichier SWF. Ne spécifiez pas un chemin d’accès complet, car AIR le considère comme un chemin relatif.      
     </p>
     
     <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Lire un fichier à partir de Flash Media Server</b></p>
     
     <adobetable class="innertable"><tgroup cols="3" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Nom</entry><entry class="- topic/entry ">Obligatoire</entry><entry class="- topic/entry ">Description</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">name:Object</codeph></entry><entry class="- topic/entry ">Obligatoire </entry><entry class="- topic/entry "> Nom d’un fichier enregistré, un identifiant des données en direct publiées par <codeph class="+ topic/ph pr-d/codeph ">NetStream.publish()</codeph> ou <codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Si <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, le flux arrête la lecture et tout paramètre supplémentaire est ignoré. Pour plus d’informations sur la syntaxe du nom de fichier, voir le tableau répertoriant les formats de fichier ci-après.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">start:Number</codeph></entry><entry class="- topic/entry ">Facultatif</entry><entry class="- topic/entry "> Renvoie l’instant de départ, en secondes. Les valeurs autorisées sont -2, -1, 0 ou un nombre positif. La valeur par défaut est -2, qui recherche un flux en direct, puis un flux enregistré, et ouvre un flux en direct lorsqu’il ne trouve ni l’un ni l’autre. Si -1, lit uniquement un flux en direct. Si 0 ou un nombre positif, lit un flux enregistré en commençant par <codeph class="+ topic/ph pr-d/codeph ">start</codeph> en secondes.
       </entry></row><row class="- topic/row "><entry class="- topic/entry "> <codeph class="+ topic/ph pr-d/codeph ">len:Number</codeph> </entry><entry class="- topic/entry "> Facultatif si <codeph class="+ topic/ph pr-d/codeph ">start</codeph> est spécifié. </entry><entry class="- topic/entry "> Durée de la lecture, en secondes. Les valeurs autorisées sont -1, -0 ou un nombre positif. La valeur par défaut est -1, qui lit un flux en direct ou enregistré jusqu’à la fin. Si 0, lit une unique image de <codeph class="+ topic/ph pr-d/codeph ">start</codeph> secondes par rapport au début d’un flux enregistré. S’il s’agit d’un nombre positif, lit un flux en direct ou enregistré pendant <codeph class="+ topic/ph pr-d/codeph ">len</codeph> secondes.
       </entry></row><row class="- topic/row "><entry class="- topic/entry "> <codeph class="+ topic/ph pr-d/codeph ">reset:Object</codeph> </entry><entry class="- topic/entry "> Facultatif si <codeph class="+ topic/ph pr-d/codeph ">len</codeph> est spécifié. </entry><entry class="- topic/entry "> Indique si une liste de lecture doit être effacée. La valeur par défaut est 1 ou <codeph class="+ topic/ph pr-d/codeph ">true</codeph>, qui efface tous les appels <codeph class="+ topic/ph pr-d/codeph ">play</codeph> précédents et lit <codeph class="+ topic/ph pr-d/codeph ">name</codeph> immédiatement. Si 0 ou <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, ajoute le flux dans une liste de lecture. Si 2, conserve la liste de lecture et renvoie tous les messages du flux en une seule opération, plutôt que par intervalles. Si 3, efface la liste de lecture et renvoie tous les messages du flux en une seule opération.  </entry></row></tbody></tgroup></adobetable>
     
     
     <p class="- topic/p ">
     Vous pouvez lire les formats de fichier décrits dans le tableau suivant. La syntaxe varie selon le format de fichier.
     </p>
     
     <adobetable class="innertable"><tgroup cols="3" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Format de fichier</entry><entry class="- topic/entry ">Syntaxe</entry><entry class="- topic/entry ">Exemple</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry ">FLV</entry><entry class="- topic/entry ">Spécifiez le nom du flux (dans le répertoire "samples") en tant que chaîne sans extension de nom de fichier.</entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">ns.play("samples/myflvstream");</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry ">mp3 or ID3</entry><entry class="- topic/entry ">Spécifiez le nom du flux en tant que chaîne (dans le répertoire "samples"), avec le préfixe <codeph class="+ topic/ph pr-d/codeph ">mp3:</codeph> ou <codeph class="+ topic/ph pr-d/codeph ">id3:</codeph> sans extension de nom de fichier.</entry><entry class="- topic/entry "><p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">ns.play("mp3:samples/mymp3stream");</codeph></p>
            <p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">ns.play("id3:samples/myid3data");</codeph></p></entry></row><row class="- topic/row "><entry class="- topic/entry ">Fichiers basés sur le format MPEG-4 (F4V et MP4, entre autres)</entry><entry class="- topic/entry ">Spécifiez le nom du flux en tant que chaîne (dans le répertoire "samples") avec le préfixe <codeph class="+ topic/ph pr-d/codeph ">mp4:</codeph>. Le préfixe indique au serveur que le fichier contient des données vidéo H. 264 et des données audio AAC au format conteneur MPEG-4 Part 14. Si le fichier sur le serveur possède une extension de fichier, indiquez-la. </entry><entry class="- topic/entry "><p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">ns.play("mp4:samples/myvideo.f4v");</codeph></p>
            <p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">ns.play("mp4:samples/myvideo.mp4");</codeph></p>
          <p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">ns.play("mp4:samples/myvideo");</codeph></p>
          <p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">ns.play("mp4:samples/myvideo.mov");</codeph></p></entry></row><row class="- topic/row "><entry class="- topic/entry ">RAW</entry><entry class="- topic/entry ">Spécifiez le nom du flux (dans le répertoire "samples") en tant que chaîne, avec le préfixe <codeph class="+ topic/ph pr-d/codeph ">raw:</codeph>.</entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">ns.play("raw:samples/myvideo");</codeph></entry></row></tbody></tgroup></adobetable>
     
     <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Activer le mode Génération de données</b></p>
     
     <p class="- topic/p ">
     Pour activer le mode de génération de données, transmettez la valeur <codeph class="+ topic/ph pr-d/codeph ">null</codeph> à un objet NetStream créé sur un objet NetConnection connecté à <codeph class="+ topic/ph pr-d/codeph ">null</codeph>. Dans ce mode, appelez <codeph class="+ topic/ph pr-d/codeph ">appendBytes()</codeph> pour transmettre les données à l’objet NetStream. (Transmettre <codeph class="+ topic/ph pr-d/codeph ">null</codeph> réinitialise également le compteur d’octets pour le rappel de <codeph class="+ topic/ph pr-d/codeph ">onSeekPoint()</codeph>.)
     </p>
     
     
     </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Lit un fichier multimédia à partir d’un répertoire local ou d’un serveur Web ; lit un fichier multimédia ou un flux en direct depuis Flash Media Server. Distribue un objet <codeph class="+ topic/ph pr-d/codeph ">NetStatusEvent</codeph> pour signaler les messages d’état et les messages d’erreur. 
     
     <p class="- topic/p ">Pour plus d’informations sur les codecs et les formats de fichier pris en charge, voir les références suivantes :</p>
     
     <ul class="- topic/ul "><li class="- topic/li "><xref href="http://www.adobe.com/go/learn_fms_fileformats_fr" scope="external" class="- topic/xref ">Documentation de Flash Media Server</xref></li><li class="- topic/li "><xref href="http://www.adobe.com/go/hardware_scaling_fr" scope="external" class="- topic/xref ">Exploration de la prise en charge de Flash Player pour l’audio AAC et la vidéo H.264 haute définition</xref></li><li class="- topic/li "><xref href="http://www.adobe.com/go/video_file_format_fr" scope="external" class="- topic/xref ">FLV/F4V open specification documents</xref> (disponible en anglais uniquement)</li></ul>
     
     <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Flux de travail pour la lecture d’un fichier ou d’un flux en direct</b></p>
     
     <ol class="- topic/ol "><li class="- topic/li ">Créez un objet NetConnection et appelez <codeph class="+ topic/ph pr-d/codeph ">NetConnection.connect()</codeph>.
     <p class="- topic/p ">Pour lire un fichier à partir d’un répertoire local ou d’un serveur Web, transmettez la valeur null.</p>
     <p class="- topic/p ">Pour lire un fichier enregistré ou un flux en direct depuis Flash Media Server, transmettez l’URI d’une application de Flash Media Server.</p></li><li class="- topic/li ">Appelez <codeph class="+ topic/ph pr-d/codeph ">NetConnection.addEventListener(NetStatusEvent.NET_STATUS, netStatusHandler)</codeph> pour écouter les événements NetStatusEvent.</li><li class="- topic/li ">Sur l’événement <codeph class="+ topic/ph pr-d/codeph ">"NetConnection.Connect.Success"</codeph>, créez un objet NetStream et transmettez l’objet NetConnection au constructeur.</li><li class="- topic/li ">Créez un objet Video, puis appelez <codeph class="+ topic/ph pr-d/codeph ">Video.attachNetStream()</codeph> et transmettez l’objet NetStream.</li><li class="- topic/li ">Appelez <codeph class="+ topic/ph pr-d/codeph ">NetStream.play()</codeph>.
     <p class="- topic/p ">Pour lire un flux en direct, transmettez le nom du flux transmis à la méthode <codeph class="+ topic/ph pr-d/codeph ">NetStream.publish()</codeph>.</p>
     <p class="- topic/p ">Pour lire un fichier enregistré, transmettez le nom du fichier.</p></li><li class="- topic/li ">Appelez <codeph class="+ topic/ph pr-d/codeph ">addChild()</codeph> et transmettez l’objet Video pour afficher la vidéo.</li></ol>
     
     <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Remarque :</b> pour voir l’exemple de code, faites défiler la page jusqu’à l’exemple situé dans la partie inférieure.</p>
     
     <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Activer le mode Génération de données</b></p>
     
     <p class="- topic/p ">
     Appelez <codeph class="+ topic/ph pr-d/codeph ">play(null)</codeph> pour activer le « mode de génération de données ». Dans ce mode, appelez la méthode <codeph class="+ topic/ph pr-d/codeph ">appendBytes()</codeph> pour transmettre les données à l’objet NetStream. Utilisez le mode de génération de données pour diffuser du contenu via HTTP depuis le module original de diffusion en continu dynamique HTTP d’Adobe sur un serveur HTTP Apache. La diffusion en continu HTTP dynamique permet aux clients de rechercher rapidement un point dans un fichier. Open Source Media Framework (OSMF) prend en charge la diffusion en continu dynamique pour les flux en direct et de vidéo à la demande. Pour obtenir des exemples d’utilisation du mode de génération de données Netstream, téléchargez la source <xref href="http://www.opensourcemediaframework.com" scope="external" class="- topic/xref ">OSMF</xref>. Pour plus d’informations sur la diffusion en continu HTTP dynamique, voir la section <xref href="http://www.adobe.com/go/learn_fms_http_fr" scope="external" class="- topic/xref ">Diffusion en continu HTTP dynamique</xref>. 
     </p>
     
     <p class="- topic/p ">
     Lorsque vous utilisez cette méthode sans Flash Media Server, il existe certaines contraintes de sécurité. Un fichier , placé dans le sandbox local approuvé ou local avec accès au réseau, peut charger et lire un fichier vidéo à partir du sandbox distant. Cependant, il ne peut pas accéder aux données de ce fichier distant sans une autorisation explicite, accordée sous forme de fichier de régulation d’URL. <ph class="- topic/ph ">Vous pouvez en outre empêcher un fichier SWF s’exécutant dans Flash Player d’utiliser cette méthode ; pour cela, vous devez définir le paramètre <codeph class="+ topic/ph pr-d/codeph ">allowNetworking</codeph> des balises <codeph class="+ topic/ph pr-d/codeph ">object</codeph> et <codeph class="+ topic/ph pr-d/codeph ">embed</codeph> dans la page HTML qui intègre le contenu SWF.</ph> Pour plus d’informations concernant la sécurité, voir la rubrique du Pôle de développement Flash Player : <xref href="http://www.adobe.com/go/devnet_security_fr" scope="external" class="- topic/xref ">Sécurité</xref> (disponible en anglais uniquement).
     </p>
     
     </apiDesc><example class="- topic/example "><b class="+ topic/ph hi-d/b ">Flash Media Server</b> Cet exemple lit un fichier F4V enregistré (dans le répertoire "samples"), en commençant au début, pendant 100 secondes au maximum. Avec les fichiers MPEG-4, si le fichier sur le serveur dispose d’une extension de nom de fichier, la méthode <codeph class="+ topic/ph pr-d/codeph ">play()</codeph> doit spécifier une extension de nom de fichier.
     <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
     ns.play("mp4:samples/record1.f4v", 0, 100, true);
     </codeblock>
     
     </example><example class="- topic/example "><b class="+ topic/ph hi-d/b ">Flash Media Server</b> Cet exemple lit un flux FLV en direct publié par un client, du début à la fin, en commençant immédiatement :
     <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
     ns.play("livestream");
     </codeblock>
     
     
     </example><example conref="examples\Video_new.as" class="- topic/example "> L’exemple suivant indique comment charger un fichier FLV externe :
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
var MyVideo:Video = new Video();
addChild(MyVideo);
 
var MyNC:NetConnection = new NetConnection();
MyNC.connect(null);
 
var MyNS:NetStream = new NetStream(MyNC);
MyNS.play("http://www.helpexamples.com/flash/video/clouds.flv");

MyVideo.attachNetStream(MyNS);

//the clouds.flv video has metadata we're not using, so create
//an error handler to ignore the message generated by the runtime
//about the metadata
MyNS.addEventListener(AsyncErrorEvent.ASYNC_ERROR, asyncErrorHandler); 

function asyncErrorHandler(event:AsyncErrorEvent):void 
{ 
   //ignore metadata error message
} 
</codeblock></example></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.display.xml#DisplayObjectContainer/addChild()" class="- topic/link "><linktext class="- topic/linktext ">DisplayObjectContainer.addChild()</linktext></link><link href="flash.net.xml#NetStream/checkPolicyFile" class="- topic/link "><linktext class="- topic/linktext ">checkPolicyFile</linktext></link><link href="flash.net.xml#NetStream/appendBytes()" class="- topic/link "><linktext class="- topic/linktext ">appendBytes()</linktext></link></related-links><adobeApiEvent id="flash.net:NetStream:play_status" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">status</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:StatusEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Distribué lors d’une tentative de lecture d’un fichier chiffré à l’aide de la gestion des droits numériques (DRM). La valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">code</codeph> est <codeph class="+ topic/ph pr-d/codeph ">"DRM.encryptedFLV"</codeph>.
     
     </apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">Distribué lors d’une tentative de lecture d’un fichier chiffré à l’aide de la gestion des droits numériques (DRM).</shortdesc></adobeApiEvent></apiOperation><apiOperation id="flash.net:NetStream:preloadEmbeddedData" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">preloadEmbeddedData</apiName><shortdesc class="- topic/shortdesc ">
     Extrait les métadonnées DRM d’un fichier multimédia enregistré localement.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">param</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.net:NetStreamPlayOptions</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Un objet NetStreamPlayOptions décrivant les options à utiliser lors du traitement du fichier de contenu.
     
     </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Extrait les métadonnées DRM d’un fichier multimédia enregistré localement.
     
     <p class="- topic/p ">Utilisez tout d’abord <codeph class="+ topic/ph pr-d/codeph ">preloadEmbeddedMetaData()</codeph> lors du téléchargement et de la mise en mémoire cache des vouchers DRM nécessaires à la lecture hors ligne. Lorsque des métadonnées DRM intégrées sont détectées dans un fichier multimédia, un objet DRMContentData est transmis à la fonction <codeph class="+ topic/ph pr-d/codeph ">onDRMContentData</codeph> du client NetStream. Cet objet DRMContentData contient les informations nécessaires à l’obtention du voucher requis pour lire le contenu. Transmettez DRMContentDataObject à la méthode DRMManager <codeph class="+ topic/ph pr-d/codeph ">loadVoucher()</codeph> pour télécharger le voucher.</p>
     
     <p class="- topic/p ">Les étapes pour précharger un voucher DRM sont les suivantes :</p>
     <ul class="- topic/ul "><li class="- topic/li ">
     <p class="- topic/p ">Créez un nouvel objet NetStream pour précharger les métadonnées.</p>
     </li><li class="- topic/li ">Affectez une fonction de rappel à la propriété <codeph class="+ topic/ph pr-d/codeph ">onDRMContentData</codeph> du <codeph class="+ topic/ph pr-d/codeph ">client</codeph> NetStream.</li><li class="- topic/li ">Créez un nouvel objet NetStreamPlayOptions, puis définissez la propriété <codeph class="+ topic/ph pr-d/codeph ">streamName</codeph> sur la chaîne URL du fichier vidéo local.</li><li class="- topic/li ">Appelez <codeph class="+ topic/ph pr-d/codeph ">preloadEmbeddedMetadata()</codeph>, tout en transmettant l’objet NetStreamPlayOptions.</li><li class="- topic/li ">En réponse au rappel <codeph class="+ topic/ph pr-d/codeph ">onDRMContentData</codeph>, appelez la méthode <codeph class="+ topic/ph pr-d/codeph ">loadVoucher()</codeph> de DRMManager, tout en transmettant l’objet DRMContentData. Si la propriété <codeph class="+ topic/ph pr-d/codeph ">authenticationMethod</codeph> de l’objet DRMContentData est définie sur la valeur <codeph class="+ topic/ph pr-d/codeph ">userNameAndPassWord</codeph>, authentifiez l’utilisateur sur le serveur de droits multimédias avant de charger le voucher.</li><li class="- topic/li ">Fermez l’objet NetStream avant le préchargement.</li></ul>
     
     <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Remarque :</b> si vous souhaitez utiliser le même objet NetStream pour précharger les métadonnées et lire le contenu, attendez l’appel de <codeph class="+ topic/ph pr-d/codeph ">onPlayStatus</codeph> généré par l’opération de préchargement avant de commencer la lecture.</p>
     
     <p class="- topic/p ">Les vouchers téléchargés sont stockés dans une mémoire cache locale. La lecture de contenu en ligne permet également de télécharger et de mettre en cache les vouchers. Lors de la visualisation d’un fichier dont le contenu est protégé par DRM, un voucher mis en cache est automatiquement récupéré à partir du magasin local. Utilisez DRMManager pour gérer la mémoire cache du voucher.</p>
     
     <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Remarques :</b> le préchargement des métadonnées DRM via une connexion HTTP, HTTPS ou RTMP n’est pas pris en charge. Vous ne pouvez précharger des métadonnées qu’à partir de fichiers enregistrés sur le systèmes de fichiers.</p>
     
     </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStream/event:onDRMContentData" class="- topic/link "><linktext class="- topic/linktext ">onDRMContentData</linktext></link><link href="flash.net.drm.xml#DRMContentData" class="- topic/link "><linktext class="- topic/linktext ">flash.net.drm.DRMContentData</linktext></link><link href="flash.net.drm.xml#DRMManager/loadVoucher()" class="- topic/link "><linktext class="- topic/linktext ">flash.net.drm.DRMManager.loadVoucher()</linktext></link><link href="flash.net.drm.xml#DRMVoucher" class="- topic/link "><linktext class="- topic/linktext ">flash.net.drm.DRMVoucher</linktext></link><link href="flash.net.xml#NetStream/client" class="- topic/link "><linktext class="- topic/linktext ">client</linktext></link></related-links></apiOperation><apiOperation id="flash.net:NetStream:publish" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">publish</apiName><shortdesc class="- topic/shortdesc ">
     Envoie des données audio et vidéo, ainsi que des messages de données en diffusion continue à partir d’un client et à destination de Flash Media Server, tout en laissant la possibilité d’enregistrer ce flux pendant la transmission.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">name</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Chaîne identifiant le flux continu. Les clients qui s’abonnent à ce flux continu transmettent ce nom lorsqu’ils appellent <codeph class="+ topic/ph pr-d/codeph ">NetStream.play()</codeph>. N’ajoutez pas une « / » après le nom du flux. Par exemple, n’utilisez pas le nom de flux <codeph class="+ topic/ph pr-d/codeph ">"bolero/"</codeph>.
     
     <p class="- topic/p ">
     Vous pouvez enregistrer les fichiers dans les formats décrits dans le tableau suivant (impossible d'utiliser <codeph class="+ topic/ph pr-d/codeph ">publish()</codeph> pour les fichiers au format MP3). La syntaxe varie selon le format de fichier.</p>
     <p class="- topic/p ">
     <adobetable class="innertable"><tgroup cols="3" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Format de fichier</entry><entry class="- topic/entry ">Syntaxe</entry><entry class="- topic/entry ">Exemple</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry ">FLV</entry><entry class="- topic/entry ">Spécifiez le nom du flux en tant que chaîne, sans extension de nom de fichier.</entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">ns.publish("myflvstream");</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry ">Fichiers basés sur le format MPEG-4 (F4V ou MP4, entre autres)</entry><entry class="- topic/entry ">Spécifiez le nom du flux en tant que chaîne, avec le préfixe <codeph class="+ topic/ph pr-d/codeph ">mp4:</codeph> avec ou sans extension de nom de fichier. Flash Player n’autorise pas le codage avec H. 264, mais Flash Media Server peut enregistrer n’importe quel codec dans le conteneur F4V. Flash Media Live Encoder autorise le codage avec H. 264.
     </entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">ns.publish("mp4:myvideo.f4v")</codeph> <codeph class="+ topic/ph pr-d/codeph ">ns.publish("mp4:myvideo");</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry ">RAW</entry><entry class="- topic/entry ">Spécifiez le nom du flux en tant que chaîne, avec le préfixe <codeph class="+ topic/ph pr-d/codeph ">raw:</codeph>.</entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">ns.publish("raw:myvideo");</codeph></entry></row></tbody></tgroup></adobetable>
     </p>
     
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">type</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Chaîne spécifiant le mode de publication du flux continu. Les valeurs valides sont "<codeph class="+ topic/ph pr-d/codeph ">record</codeph>", "<codeph class="+ topic/ph pr-d/codeph ">append</codeph>", "<codeph class="+ topic/ph pr-d/codeph ">appendWithGap</codeph>" et "<codeph class="+ topic/ph pr-d/codeph ">live</codeph>". La valeur par défaut est <codeph class="+ topic/ph pr-d/codeph ">live</codeph>.
     <ul class="- topic/ul "><li class="- topic/li ">Si vous transmettez "<codeph class="+ topic/ph pr-d/codeph ">record</codeph>", le serveur publie et enregistre des données en direct ; les données enregistrées sont placées dans un nouveau fichier dont le nom correspond à la valeur transmise au paramètre <codeph class="+ topic/ph pr-d/codeph ">name</codeph>. Si le fichier existe déjà, il est remplacé.</li><li class="- topic/li ">Si vous transmettez "<codeph class="+ topic/ph pr-d/codeph ">append</codeph>", le serveur publie et enregistre des données en direct, qu’il ajoute à un fichier dont le nom correspond à la valeur transmise au paramètre <codeph class="+ topic/ph pr-d/codeph ">name</codeph>. Si aucun fichier correspondant au paramètre <codeph class="+ topic/ph pr-d/codeph ">name</codeph> n’est détecté, un fichier est créé. </li><li class="- topic/li ">Si vous transmettez "<codeph class="+ topic/ph pr-d/codeph ">appendWithGap</codeph>", des informations supplémentaires sur la coordination temporelle sont transmises afin que le serveur puisse déterminer le point de transition correct lors de la diffusion dynamique en continu.</li><li class="- topic/li ">Si vous omettez ce paramètre ou utilisez "<codeph class="+ topic/ph pr-d/codeph ">live</codeph>", le serveur publie des données en direct sans les enregistrer. Si un fichier dont le nom correspond à la valeur transmise au paramètre <codeph class="+ topic/ph pr-d/codeph ">name</codeph> existe, il est supprimé.</li></ul>
     
     
     
     </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Envoie des données audio et vidéo, ainsi que des messages de données en diffusion continue à partir d’un client et à destination de Flash Media Server, tout en laissant la possibilité d’enregistrer ce flux pendant la transmission. Cette méthode distribue un objet NetStatusEvent avec des informations sur le flux continu. Avant d’appeler <codeph class="+ topic/ph pr-d/codeph ">NetStream.publish()</codeph>, capturez l’événement <codeph class="+ topic/ph pr-d/codeph ">"NetConnection.Connect.Success"</codeph>pour vérifier que l’application s’est correctement connectée à Flash Media Server.
     
     <p class="- topic/p ">Lors de la publication, vous pouvez enregistrer les fichiers au format FLV ou F4V. Si vous enregistrez un fichier au format F4V, utilisez un outil d’aplatissement pour modifier ou lire le fichier dans une autre application. Pour télécharger l’outil, voir <xref href="http://www.adobe.com/go/fms_tools_fr" scope="external" class="- topic/xref ">www.adobe.com/go/fms_tools_fr</xref>.</p>
     
     <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Remarque :</b> n’utilisez pas cette méthode pour lire un flux de données. Pour lire un flux de données, appelez la méthode <codeph class="+ topic/ph pr-d/codeph ">NetStream.play()</codeph>.</p>
     
     <p class="- topic/p ">Flux de travail pour la publication d’un flux de données</p>
     
     <ol class="- topic/ol "><li class="- topic/li ">Créez un objet NetConnection et appelez <codeph class="+ topic/ph pr-d/codeph ">NetConnection.connect()</codeph>.</li><li class="- topic/li ">Appelez <codeph class="+ topic/ph pr-d/codeph ">NetConnection.addEventListener()</codeph> pour écouter les événements NetStatusEvent.</li><li class="- topic/li ">Sur l’événement <codeph class="+ topic/ph pr-d/codeph ">"NetConnection.Connect.Success"</codeph>, créez un objet NetStream et transmettez l’objet NetConnection au constructeur.</li><li class="- topic/li ">Pour capturer du son et des images, appelez les méthodes <codeph class="+ topic/ph pr-d/codeph ">NetStream.attachAudio()</codeph> et <codeph class="+ topic/ph pr-d/codeph ">NetStream.attachCamera()</codeph>.</li><li class="- topic/li ">Pour publier un flux, appelez la méthode <codeph class="+ topic/ph pr-d/codeph ">NetStream.play()</codeph>. Vous pouvez enregistrer les données au fur et à mesure que vous les publiez afin que les utilisateurs puissent les lire ultérieurement.</li></ol>
     
     <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Remarque :</b> un objet NetStream peut soit publier soit lire un flux de données, mais il ne peut pas effectuer ces deux opérations simultanément. Pour publier un flux de données et afficher la lecture à partir du serveur, créez deux objets NetStream. Vous pouvez envoyer plusieurs objets NetStream sur un seul objet NetConnection.</p>
     
     <p class="- topic/p ">Lorsque Flash Media Server enregistre un flux de données, il crée un fichier. Par défaut, le serveur crée un répertoire avec le nom de l’occurrence de l’application transmis à <codeph class="+ topic/ph pr-d/codeph ">NetConnection.connect()</codeph> et stocke le fichier dans ce répertoire. Par exemple, le code suivant établit la connexion à l’occurrence par défaut de l’application « lectureseries » et enregistre un flux de données nommé « lecture ». Le fichier « lecture.flv » est enregistré dans le répertoire applications/lectureseries/streams/_definst_ :
     </p>
     
     <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
     var nc:NetConnection = new NetConnection();
     nc.connect("rtmp://fms.example.com/lectureseries");
     nc.addEventListener(NetStatusEvent.NET_STATUS, netStatusHandler);
     
     function netStatusHandler(event:NetStatusEvent):void{
       if (event.info.code == "NetConnection.Connect.Success"){
            var ns:NetStream = new NetStream(nc);
            ns.publish("lecture", "record");
       }
     }
     </codeblock>
     
     <p class="- topic/p ">L’exemple suivant se connecte à l’occurrence de "monday" de la même application. Le fichier « lecture.flv » est enregistré dans le répertoire /applications/lectureseries/streams/monday :</p>
     
     <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
     var nc:NetConnection = new NetConnection();
     nc.addEventListener(NetStatusEvent.NET_STATUS, netStatusHandler);
     nc.connect("rtmp://fms.example.com/lectureseries/monday");
     
     function netStatusHandler(event:NetStatusEvent):void{
       if (event.info.code == "NetConnection.Connect.Success"){
            var ns:NetStream = new NetStream(nc);
            ns.publish("lecture", "record");
       }
     }
     </codeblock>
     
     </apiDesc><example conref="examples\NetStream_publish.as" class="- topic/example "> L’exemple suivant capture des données vidéo à partir d’une caméra et les publie via un flux de réseau sur Flash Media Server. Cet exemple affiche les données vidéo au fur et à mesure que Flash Media Server les lit.
 <p class="- topic/p ">Pour exécuter cet exemple, vous avez besoin d’une caméra reliée à votre ordinateur. Vous devez également ajouter un composant Button et un composant Label à la bibliothèque.</p>
 <p class="- topic/p ">L’application dispose d’un bouton qui publie un flux (l’envoie à Flash Media Server) uniquement lorsque l’application est correctement connectée au serveur. L’application lit le flux du serveur uniquement lorsque le flux a été correctement publié. L’événement <codeph class="+ topic/ph pr-d/codeph ">NetStatusEvent</codeph> renvoie un objet <codeph class="+ topic/ph pr-d/codeph ">info</codeph> avec une propriété <codeph class="+ topic/ph pr-d/codeph ">code</codeph> qui spécifie ces cas. La fonction <codeph class="+ topic/ph pr-d/codeph ">netStatusHandler</codeph> gère ces événements pour les classes NetConnection et NetStream.</p>
 <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">

package {
    import flash.display.Sprite;
    import flash.events.*;
    import flash.media.Video;
    import flash.media.Camera;
    import flash.net.NetConnection;
    import flash.net.NetStream;
    import fl.controls.Button;
    import fl.controls.Label;

    public class NetStream_publish extends Sprite {
        private var connectionURL:String = "rtmp://localhost/live/";
        private var videoURL:String = "liveVideo";
        private var nc:NetConnection;
        private var ns_publish:NetStream;
        private var ns_playback:NetStream;
        private var video_publish:Video;
        private var video_playback:Video;
        private var cam:Camera;
        private var b:Button;
        private var l:Label;

        public function NetStream_publish() {
            setUpUI();
            
            nc = new NetConnection();
            nc.addEventListener(NetStatusEvent.NET_STATUS, netStatusHandler);
            
            // Add bandwidth detection handlers on the NetConnection Client to
            // prevent Reference Errors at runtime when using the "live" and "vod" applications.          
            var clientObj:Object = new Object();
            clientObj.onBWDone = onBWDone;
            clientObj.onBWCheck = onBWCheck;
            nc.client = clientObj;
            
            // Connect to the "live" application on Flash Media Server.
            nc.connect(connectionURL);
        }

        private function netStatusHandler(event:NetStatusEvent):void {
            trace(event.info.code + " | " + event.info.description);
            switch (event.info.code) {
                case "NetConnection.Connect.Success":
                    // Enable the "Publish" button after the client connects to the server.
                    b.enabled = true;
                    break;
                case "NetStream.Publish.Start":
                    playbackVideo();
                    break;
            }
        }
    
        private function publishVideo(event:MouseEvent):void{
            // Disable the button so that you can only publish once.
            b.enabled = false;
            // Create a NetStream to send video to FMS.
            ns_publish = new NetStream(nc);
            ns_publish.addEventListener(NetStatusEvent.NET_STATUS, netStatusHandler);
            // Publish (send) the video to FMS.
            cam = Camera.getCamera();
            ns_publish.attachCamera(cam);
               ns_publish.publish(videoURL);
        }

        private function playbackVideo():void {
            // Create a NetStream to receive the video from FMS.
            ns_playback = new NetStream(nc);
            ns_playback.addEventListener(NetStatusEvent.NET_STATUS, netStatusHandler);
            ns_playback.play(videoURL);    
            // Display the video that was published to FMS.
            video_playback = new Video(cam.width, cam.height);
            video_playback.x = cam.width + 20;
            video_playback.y = 10;
            video_playback.attachNetStream(ns_playback);
            addChild(video_playback);
        }
        
        
        private function setUpUI():void { 
            b = new Button(); 
            b.addEventListener(MouseEvent.CLICK, publishVideo);
            b.width = 150;
            b.label = "Publish video to server";
            b.move(10, 150);
            b.enabled = false;
            
            l = new Label();
            l.width = 150;
            l.text = "Playing back from server"
            l.move(190, 150);
            
            addChild(b);
            addChild(l);
        }
        
        // Handlers called by the Flash Media Server "live" and "vod" applications.
        public function onBWDone(... rest):Boolean {
            return true;
        }
        
        public function onBWCheck(... rest):Number {
            return 0;
        }
    }
}
</codeblock></example></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetConnection/connect()" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetConnection.connect()</linktext></link><link href="flash.events.xml#NetStatusEvent/info" class="- topic/link "><linktext class="- topic/linktext ">flash.events.NetStatusEvent.info</linktext></link></related-links></apiOperation><apiOperation id="flash.net:NetStream:receiveAudio" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">receiveAudio</apiName><shortdesc class="- topic/shortdesc ">
     Indique si les données audio entrantes sont lues dans le flux continu.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">flag</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Spécifie si les données audio entrantes sont lues dans le flux (<codeph class="+ topic/ph pr-d/codeph ">true</codeph>) ou non (<codeph class="+ topic/ph pr-d/codeph ">false</codeph>). La valeur par défaut est <codeph class="+ topic/ph pr-d/codeph ">true</codeph>. Si le flux continu spécifié contient uniquement des données audio, <codeph class="+ topic/ph pr-d/codeph ">NetStream.time</codeph> cesse d’augmenter lorsque vous transmettez <codeph class="+ topic/ph pr-d/codeph ">false</codeph>.
     
     
     </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Indique si les données audio entrantes sont lues dans le flux continu. Cette méthode n’est accessible qu’aux clients abonnés au flux spécifié. L’éditeur du flux n’y a pas accès. Appelez cette méthode avant ou après l’appel de la méthode <codeph class="+ topic/ph pr-d/codeph ">NetStream.play()</codeph>. Par exemple, associez cette méthode à un bouton pour permettre aux utilisateurs de désactiver et de réactiver le son. Utilisez cette méthode uniquement sur les flux de données en monodiffusion lus à partir de Flash Media Server. Cette méthode ne fonctionne pas sur les flux de données en multidiffusion RTMFP ou lors de l’utilisation de la méthode <codeph class="+ topic/ph pr-d/codeph ">NetStream.appendBytes()</codeph>.
     
     
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.net:NetStream:receiveVideoFPS" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">receiveVideoFPS</apiName><shortdesc class="- topic/shortdesc ">
     Indique la cadence des données vidéo entrantes.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">FPS</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Indique le nombre d’images par seconde lors de la lecture des données vidéo entrantes.
     
     </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Indique la cadence des données vidéo entrantes. Cette méthode n’est accessible qu’aux clients abonnés au flux spécifié. L’éditeur du flux n’y a pas accès. Appelez cette méthode avant ou après l’appel de la méthode <codeph class="+ topic/ph pr-d/codeph ">NetStream.play()</codeph>. Par exemple, appelez cette méthode pour permettre aux utilisateurs de la cadence vidéo. Pour déterminer la cadence actuelle, utilisez <codeph class="+ topic/ph pr-d/codeph ">NetStream.currentFPS</codeph>. Pour interrompre la réception des données vidéo, transmettez <codeph class="+ topic/ph pr-d/codeph ">0</codeph>.
	 <p class="- topic/p ">Lorsque vous transmettez une valeur au paramètre FPS en vue de limiter la cadence de la vidéo, Flash Media Server tente de réduire la cadence tout en préservant l’intégrité de la vidéo. Entre deux images-clés, le serveur envoie le nombre minimum d’images nécessaires pour répondre à la cadence spécifiée. Notez que les images intermédiaires doivent être envoyées conjointement, auquel cas la vidéo est endommagée. Par conséquent, le nombre d’images souhaité est envoyé immédiatement et conjointement après une image-clé. Etant donné que les images ne sont pas distribuées uniformément, le mouvement entre images uniques est homogène, mais des interruptions apparaissent entre les séquences d’images. </p>
	 <p class="- topic/p ">Utilisez cette méthode uniquement sur les flux de données en monodiffusion lus à partir de Flash Media Server. Cette méthode ne fonctionne pas sur les flux de données en multidiffusion RTMFP ou lors de l’utilisation de la méthode <codeph class="+ topic/ph pr-d/codeph ">NetStream.appendBytes()</codeph>.</p>
	 
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.net:NetStream:receiveVideo" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">receiveVideo</apiName><shortdesc class="- topic/shortdesc ">
     Indique si les données vidéo entrantes sont lues sur le flux continu.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">flag</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Indique si les données vidéo entrantes de ce flux sont lues (<codeph class="+ topic/ph pr-d/codeph ">true</codeph>) ou non (<codeph class="+ topic/ph pr-d/codeph ">false</codeph>). La valeur par défaut est <codeph class="+ topic/ph pr-d/codeph ">true</codeph>. Si le flux continu spécifié contient uniquement des données vidéo, <codeph class="+ topic/ph pr-d/codeph ">NetStream.time</codeph> cesse d’augmenter lorsque vous transmettez <codeph class="+ topic/ph pr-d/codeph ">false</codeph>.
     
     </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Indique si les données vidéo entrantes sont lues sur le flux continu. Cette méthode n’est accessible qu’aux clients abonnés au flux spécifié. L’éditeur du flux n’y a pas accès. Appelez cette méthode avant ou après l’appel de la méthode <codeph class="+ topic/ph pr-d/codeph ">NetStream.play()</codeph>. Par exemple, associez cette méthode à un bouton pour permettre aux utilisateurs d’afficher et de masquer la vidéo. Utilisez cette méthode uniquement sur les flux de données en monodiffusion lus à partir de Flash Media Server. Cette méthode ne fonctionne pas sur les flux de données en multidiffusion RTMFP ou lors de l’utilisation de la méthode <codeph class="+ topic/ph pr-d/codeph ">NetStream.appendBytes()</codeph>.
     
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.net:NetStream:resetDRMVouchers" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">resetDRMVouchers</apiName><shortdesc class="- topic/shortdesc ">
     Supprime toutes les données du voucher de gestion de droits numériques (DRM) mises en cache localement.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">NetStream, resetDRMVouchers
     
      </keyword></asCustoms></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Les données du voucher ne peuvent pas être supprimées.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IOError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IOError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Supprime toutes les données du voucher de gestion de droits numériques (DRM) mises en cache localement.
     <p class="- topic/p ">
     L’application doit à nouveau télécharger les vouchers requis depuis le serveur de droits multimédias afin que l’utilisateur puisse accéder au contenu protégé. Appeler cette fonction équivaut à appeler la fonction <codeph class="+ topic/ph pr-d/codeph ">resetDRMVouchers()</codeph> de l’objet DRMManager.</p>
     
     </apiDesc><example conref="examples\NetStream.resetDRMVouchers.1.as" class="- topic/example "> L’exemple suivant réinitialise tous les vouchers DRM :
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">

NetStream.resetDRMVouchers();
</codeblock></example></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.drm.xml#DRMManager/resetDRMVouchers()" class="- topic/link "><linktext class="- topic/linktext ">flash.net.drm.DRMManager.resetDRMVouchers()</linktext></link></related-links></apiOperation><apiOperation id="flash.net:NetStream:resume" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">resume</apiName><shortdesc class="- topic/shortdesc ">
     Reprend la lecture d’un flux vidéo en pause.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">NetStream.resume, resume
     
     </keyword></asCustoms></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Reprend la lecture d’un flux vidéo en pause. Si la vidéo est en cours de lecture, l’appel de cette méthode n’a aucun effet.
     
     </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStream/close()" class="- topic/link "><linktext class="- topic/linktext ">close()</linktext></link><link href="flash.net.xml#NetStream/pause()" class="- topic/link "><linktext class="- topic/linktext ">pause()</linktext></link><link href="flash.net.xml#NetStream/play()" class="- topic/link "><linktext class="- topic/linktext ">play()</linktext></link><link href="flash.net.xml#NetStream/togglePause()" class="- topic/link "><linktext class="- topic/linktext ">togglePause()</linktext></link></related-links></apiOperation><apiOperation id="flash.net:NetStream:seek" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">seek</apiName><shortdesc class="- topic/shortdesc ">
     
     Recherche l’image-clé (également appelée Image-I dans l’industrie vidéo) la plus proche de l’emplacement spécifié.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">NetStream.seek, seek
     
     </keyword></asCustoms></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">offset</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Valeur de temps approximative, en secondes, à atteindre dans un fichier vidéo. Avec Flash Media Server, si la propriété <codeph class="+ topic/ph pr-d/codeph ">&lt;EnhancedSeek></codeph> est définie sur <codeph class="+ topic/ph pr-d/codeph ">true</codeph> dans le fichier de configuration Application.xml (configuration par défaut), le serveur génère une image-clé au <codeph class="+ topic/ph pr-d/codeph ">décalage</codeph>.
     
     <ul class="- topic/ul "><li class="- topic/li ">Pour revenir au début du flux continu, transmettez 0 pour <codeph class="+ topic/ph pr-d/codeph ">offset</codeph>.</li><li class="- topic/li ">Pour effectuer une recherche en partant du début du flux continu, transmettez le nombre de secondes à appliquer. Par exemple, pour placer la tête de lecture à 15 secondes du début (ou sur l’image-clé avant 15 secondes), utilisez <codeph class="+ topic/ph pr-d/codeph ">myStream.seek(15)</codeph>.</li><li class="- topic/li ">Pour faire une recherche par rapport à la position actuelle, transmettez <codeph class="+ topic/ph pr-d/codeph ">NetStream.time + n</codeph> ou <codeph class="+ topic/ph pr-d/codeph ">NetStream.time - n</codeph> pour rechercher <codeph class="+ topic/ph pr-d/codeph ">n</codeph> secondes vers l’avant ou l’arrière, par rapport à la position actuelle. Par exemple, pour revenir en arrière de 20 secondes par rapport à la position actuelle, utilisez <codeph class="+ topic/ph pr-d/codeph ">NetStream.seek(NetStream.time - 20)</codeph>.</li></ul>
     
     
     </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     
     Recherche l’image-clé (également appelée Image-I dans l’industrie vidéo) la plus proche de l’emplacement spécifié. L’image-clé est placée à un décalage, en secondes, depuis le début du flux.
     
     <p class="- topic/p ">
     Les flux vidéo sont généralement encodés avec deux types d’image, les images-clés (ou images I) et les images P. Une image-clé contient l’ensemble de l’image, alors qu’une image P est une image intérimaire qui fournit des informations vidéo supplémentaires entre les images-clé. Un flux vidéo présente généralement une image-clé toutes les 10 à 50 images.
     </p>
     
     <p class="- topic/p ">Flash Media Server dispose de plusieurs types de comportements de recherche : la recherche améliorée et la recherche dynamique.</p>
     
     <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Recherche améliorée</b></p>
     
     <p class="- topic/p "> Par défaut, la recherche améliorée est activée. Pour désactiver la recherche améliorée, ouvrez Flash Media Server, puis définissez l’élément <codeph class="+ topic/ph pr-d/codeph ">EnhancedSeek</codeph> dans le fichier de configuration <codeph class="+ topic/ph pr-d/codeph ">application.xml</codeph> sur <codeph class="+ topic/ph pr-d/codeph ">false</codeph>.
     </p>
     
     <p class="- topic/p ">Si la recherche améliorée est activée, le serveur génère une nouvelle image-clé au niveau du <codeph class="+ topic/ph pr-d/codeph ">décalage</codeph> en fonction de l’image-clé précédente et de toute image P intermédiaire. Cela peut toutefois créer une charge de traitement élevée sur le serveur et une distorsion peut survenir dans l’image-clé générée. Si le codec vidéo est On2, l’image-clé située avant le point de recherche, ainsi que toute image P située entre l’image-clé et le point de recherche sont envoyées au client.
     </p>
     
     <p class="- topic/p ">
     Si la recherche améliorée est désactivée, le serveur commence la diffusion en continu à partir de l’image-clé la plus proche. Par exemple, supposons qu’une vidéo présente des images-clés à 0 et 10 secondes. Une recherche de 4 secondes entraîne un démarrage de la lecture à 4 secondes à l’aide de l’image-clé à 0 seconde. La vidéo demeure figée jusqu’à ce qu’elle atteigne la prochaine image-clé placée à 10 secondes. Pour améliorer les recherches, vous devez réduire l’intervalle des images-clés. En mode de recherche normal, vous ne pouvez pas démarrer la vidéo à un point placé entre les images-clés.
     </p>
     
     <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Recherche dynamique</b></p>
     
     <p class="- topic/p ">Pour activer la recherche dynamique, définissez <codeph class="+ topic/ph pr-d/codeph ">NetStream.inBufferSeek</codeph> sur <codeph class="+ topic/ph pr-d/codeph ">true</codeph>.</p>
     
     <p class="- topic/p ">La recherche dynamique permet à Flash Player d’effectuer des recherches dans une mémoire tampon d’arrière-plan et dans une mémoire tampon directe. Si la fonction de recherche dynamique est désactivée, chaque fois que la méthode <codeph class="+ topic/ph pr-d/codeph ">seek()</codeph> est appelée, Flash Player efface le contenu de la mémoire tampon et sollicite des données au serveur. Pour plus d’informations, voir <codeph class="+ topic/ph pr-d/codeph ">NetStream.inBufferSeek</codeph>.</p>
     
     <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Recherche en mode de génération de données</b></p>
     
     <p class="- topic/p ">Lorsque vous appelez <codeph class="+ topic/ph pr-d/codeph ">seek()</codeph> sur un objet NetStream en mode de génération de données, tous les octets transmis à <codeph class="+ topic/ph pr-d/codeph ">appendBytes()</codeph> sont ignorés (non placés en mémoire tampon, accumulés dans la FIFO de messages partiels ou analysés pour les points de recherche) jusqu’à ce que vous appeliez <codeph class="+ topic/ph pr-d/codeph ">appendBytesAction(NetStreamAppendBytesAction.RESET_BEGIN)</codeph> ou <codeph class="+ topic/ph pr-d/codeph ">appendBytesAction(NetStreamAppendBytesAction.RESET_SEEK)</codeph> pour réinitialiser le programme d’analyse. Pour plus d’informations sur le mode de génération de données, voir <codeph class="+ topic/ph pr-d/codeph ">NetStream.play()</codeph>. </p>
     
     
     </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStream/inBufferSeek" class="- topic/link "><linktext class="- topic/linktext ">inBufferSeek</linktext></link><link href="flash.net.xml#NetStream/backBufferLength" class="- topic/link "><linktext class="- topic/linktext ">backBufferLength</linktext></link><link href="flash.net.xml#NetStream/backBufferTime" class="- topic/link "><linktext class="- topic/linktext ">backBufferTime</linktext></link><link href="flash.net.xml#NetStream/step()" class="- topic/link "><linktext class="- topic/linktext ">step()</linktext></link><link href="flash.net.xml#NetStream/time" class="- topic/link "><linktext class="- topic/linktext ">time</linktext></link><link href="flash.net.xml#NetStream/play()" class="- topic/link "><linktext class="- topic/linktext ">play()</linktext></link></related-links></apiOperation><apiOperation id="flash.net:NetStream:send" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">send</apiName><shortdesc class="- topic/shortdesc ">
     Envoie un message sur le flux publié à tous les clients abonnés.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">handlerName</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Message à envoyer ; également le nom du gestionnaire ActionScript qui reçoit le message. Le nom du gestionnaire ne peut avoir qu’un seul niveau (autrement dit, il ne peut pas être au format parent/enfant) et est relatif à l’objet flux. N’utilisez pas un terme réservé comme nom du gestionnaire. Par exemple, l’attribution du nom "<codeph class="+ topic/ph pr-d/codeph ">close</codeph>" au gestionnaire entraîne l’échec de la méthode. Avec Flash Media Server, utilisez <codeph class="+ topic/ph pr-d/codeph ">@setDataFrame</codeph> pour ajouter une image-clé de métadonnées à un flux en direct ou <codeph class="+ topic/ph pr-d/codeph ">@clearDataFrame</codeph> pour supprimer une image-clé.
     
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">arguments</apiItemName><apiType value="restParam" name="type" class="- topic/state reference/state apiRef/apiType "/><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Les arguments facultatifs peuvent être de n’importe quel type. Ils sont sérialisés et envoyés via la connexion, et le gestionnaire de destination les reçoit dans le même ordre. Si un paramètre représente un objet circulaire (une liste liée qui est circulaire, par exemple), l’utilitaire de sérialisation gère correctement les références. Avec Flash Media Server, si <codeph class="+ topic/ph pr-d/codeph ">@setDataFrame</codeph> est le premier argument, utilisez <codeph class="+ topic/ph pr-d/codeph ">onMetaData</codeph> comme second argument ; pour le troisième argument, transmettez une occurrence de <codeph class="+ topic/ph pr-d/codeph ">Object</codeph> ou <codeph class="+ topic/ph pr-d/codeph ">Array</codeph> possédant les métadonnées définies comme propriétés. Voir le <xref href="http://www.adobe.com/go/learn_fms_devguide_fr" scope="external" class="- topic/xref ">Flash Media Server Developer Guide</xref> pour obtenir une liste des noms de propriété suggérés. Avec <codeph class="+ topic/ph pr-d/codeph ">@clearDataFrame</codeph> comme premier argument, utilisez <codeph class="+ topic/ph pr-d/codeph ">onMetaData</codeph> comme second argument et pas de troisième argument.
     
     </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Envoie un message sur le flux publié à tous les clients abonnés. Cette méthode n’est accessible qu’à l’éditeur du flux continu spécifié. Cette méthode est disponible uniquement avec Flash Media Server. Pour traiter et répondre à ce message, créer un gestionnaire sur l’objet <codeph class="+ topic/ph pr-d/codeph ">NetStream</codeph>, par exemple <codeph class="+ topic/ph pr-d/codeph ">ns.HandlerName</codeph>.
     
     <p class="- topic/p ">
     <ph class="- topic/ph ">Flash Player ou </ph>AIR ne sérialise pas les méthodes ni leurs données, les variables de prototype d’objet ou les variables non énumérables. Pour les objets d’affichage, <ph class="- topic/ph ">Flash Player </ph>AIR sérialise le chemin, mais pas les données.
     </p>
     
     <p class="- topic/p ">
     Vous pouvez appeler la méthode <codeph class="+ topic/ph pr-d/codeph ">send()</codeph> pour ajouter des images-clés de données à un flux en direct publié sur Flash Media Server. Une image-clé de données est un message ajouté à un flux en direct par un éditeur. Les images-clés de données sont généralement utilisées pour ajouter des métadonnées à un flux en direct avant la capture des données pour le flux à partir de la caméra et du microphone. Un éditeur peut à tout moment ajouter une image-clé de données pendant la publication du flux. L’image-clé de données est enregistrée dans la mémoire du serveur tant que l’éditeur y est connecté.
     </p>
     <p class="- topic/p ">
     Les clients abonnés au flux en direct avant l’ajout d’une image-clé de données reçoivent cette image-clé dès son ajout. Les clients qui s’abonnent au flux en direct après l’ajout de l’image-clé reçoivent cette image-clé lorsqu’ils s’abonnent.
     </p>
     <p class="- topic/p ">
     Pour ajouter une image-clé de métadonnées dans un flux en direct envoyé à Flash Media Server, utilisez <codeph class="+ topic/ph pr-d/codeph ">@setDataFrame</codeph> comme nom de gestionnaire, suivi de deux arguments supplémentaires, tels que :
     </p>
     
     <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
     var ns:NetStream = new NetStream(nc);
     ns.send("@setDataFrame", "onMetaData", metaData);
     </codeblock>
     
     
     
     <p class="- topic/p ">
     L’argument <codeph class="+ topic/ph pr-d/codeph ">@setDataFrame</codeph> fait référence à un gestionnaire spécial intégré au Flash Media Server. L’argument <codeph class="+ topic/ph pr-d/codeph ">onMetaData</codeph> est le nom d’une fonction de rappel de votre application client qui écoute l’événement <codeph class="+ topic/ph pr-d/codeph ">onMetaData</codeph> et récupère les métadonnées. Le troisième élément, <codeph class="+ topic/ph pr-d/codeph ">metaData</codeph>, est une occurrence de <codeph class="+ topic/ph pr-d/codeph ">Object</codeph> ou d’<codeph class="+ topic/ph pr-d/codeph ">Array</codeph> dont les propriétés définissent les valeurs des métadonnées.
     </p>
     
     <p class="- topic/p ">Utilisez <codeph class="+ topic/ph pr-d/codeph ">@clearDataFrame</codeph> pour effacer une image-clé de métadonnées déjà définie dans le flux :
     </p>
     <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
     ns.send("@clearDataFrame", "onMetaData");
     </codeblock>
     
     
     </apiDesc><example conref="examples\NetStream.send.1.as" class="- topic/example "> L’exemple suivant crée deux objets <codeph class="+ topic/ph pr-d/codeph ">NetStream</codeph>. L’un est utilisé pour publier un flux en direct sur le serveur, l’autre s’abonne au flux.
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
package {
   import flash.display.Sprite;
   import flash.net.NetConnection;
   import flash.net.NetStream;
   import flash.events.NetStatusEvent;
   import flash.media.Video;
   import flash.utils.setTimeout;

 
   public class TestExample extends Sprite
   {
     var nc:NetConnection = new NetConnection();
     var ns1:NetStream;
     var ns2:NetStream;
     var vid:Video = new Video(300,300);
     var obj:Object = new Object();
 
     public function TestExample() {
        nc.objectEncoding = 0;
        nc.addEventListener("netStatus", onNCStatus);
        nc.connect("rtmp://localhost/FlashVideoApp");
        addChild(vid); 
     }
  
     function onNCStatus(event:NetStatusEvent):void {
       switch (event.info.code) {
           case "NetConnection.Connect.Success":
               trace("You've connected successfully");
               ns1 = new NetStream(nc);
               ns2 = new NetStream(nc);
               
               ns1.client = new CustomClient();
               ns1.publish("dummy", "live");
    
               ns2.play("dummy");
               ns2.client = new CustomClient();
               vid.attachNetStream(ns2);
               setTimeout(sendHello, 3000);
               break;
              
           case "NetStream.Publish.BadName":
               trace("Please check the name of the publishing stream" );
               break;
        }   
     }

     function sendHello():void {
         ns1.send("myFunction", "hello");
     }       
   }
 }
 
 class CustomClient {
    public function myFunction(event:String):void {
       trace(event);
    }
 }
</codeblock></example><example conref="examples\NetStream.send.2.as" class="- topic/example "> L’exemple suivant crée des métadonnées et les ajoute à un flux en direct :
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
private function netStatusHandler(event:NetStatusEvent):void {
     switch (event.info.code) {  
        case "NetStream.Publish.Start":
            var metaData:Object = new Object();
            metaData.title = "myStream";
            metaData.width = 400;
            metaData.height = 200;
            ns.send("&amp;#64;setDataFrame", "onMetaData", metaData);
            ns.attachCamera( Camera.getCamera() );
            ns.attachAudio( Microphone.getMicrophone() );        
    }
}
</codeblock></example><example conref="examples\NetStream.send.3.as" class="- topic/example "> Pour répondre à une image-clé de données ajoutée à une vidéo, le client doit définir un gestionnaire d’événement <codeph class="+ topic/ph pr-d/codeph ">onMetaData</codeph>. Le gestionnaire d’événement <codeph class="+ topic/ph pr-d/codeph ">onMetaData</codeph> n’est pas enregistré avec <codeph class="+ topic/ph pr-d/codeph ">addEventListener()</codeph>, mais correspond à une fonction de rappel nommée <codeph class="+ topic/ph pr-d/codeph ">onMetaData</codeph>, par exemple :
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
 public function onMetaData(info:Object):void {
    trace("width: " + info.width);
    trace("height: " + info.height);
 }
</codeblock></example><example conref="examples\NetStream.send.4.as" class="- topic/example "> Cet exemple décrit la création d’une liste de lecture sur le serveur :
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
 // Create a NetStream for playing
 var my_ns:NetStream = new NetStream(my_nc);
 my_video.attachNetStream(my_ns);
 
 // Play the stream record1
 my_ns.play("record1", 0, -1, true);
 
 // Switch to the stream live1 and play for 5 seconds.  
 // Since reset is false, live1 will start to play after record1 is done.
 my_ns.play("live1", -1 , 5, false);
</codeblock></example><example conref="examples\NetStream.send.5.as" class="- topic/example "> Si le fichier vidéo enregistré contient uniquement des messages de données, vous pouvez soit le lire à la vitesse à laquelle il a été enregistré à l’origine, soit obtenir tous les messages de données en une seule opération.
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
 //To play at normal speed
 var my_ns:NetStream = new NetStream(my_nc);
 my_ns.play("log", 0, -1);
 
 //To get the data messages all at once
 my_ns.play("log", 0, -1, 3);
</codeblock></example></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStream/client" class="- topic/link "><linktext class="- topic/linktext ">client</linktext></link><link href="flash.net.xml#NetStream/dataReliable" class="- topic/link "><linktext class="- topic/linktext ">dataReliable</linktext></link><link href="flash.net.xml#NetStream/play()" class="- topic/link "><linktext class="- topic/linktext ">play()</linktext></link></related-links></apiOperation><apiOperation id="flash.net:NetStream:setDRMAuthenticationCredentials" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">setDRMAuthenticationCredentials</apiName><shortdesc class="- topic/shortdesc ">
     Définit les informations d’authentification de la gestion des droits numériques nécessaires à l’affichage du contenu chiffré sous-jacent.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">NetStream, setDRMAuthenticationCredentials
     
      </keyword></asCustoms></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">userName</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Nom d’utilisateur valide.
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">password</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Mot de passe correspond au nom d’utilisateur fournit.
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">type</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Chaîne indiquant le type d’informations d’authentification fournit. Les valeurs valides sont <codeph class="+ topic/ph pr-d/codeph ">"drm"</codeph> et <codeph class="+ topic/ph pr-d/codeph ">"proxy"</codeph>. La valeur par défaut est <codeph class="+ topic/ph pr-d/codeph ">"drm"</codeph>.
     <ul class="- topic/ul "><li class="- topic/li ">Pour le type d’authentification <codeph class="+ topic/ph pr-d/codeph ">"drm"</codeph>, les informations d’identification indiquées sont comparées à Flash Access.</li><li class="- topic/li ">Dans le cas d’une authentification <codeph class="+ topic/ph pr-d/codeph ">"proxy"</codeph>, les informations d’identification fournies sont authentifiées par rapport au serveur proxy et doivent correspondre avec celles requises par ce dernier. Par exemple, l’option <codeph class="+ topic/ph pr-d/codeph ">"proxy"</codeph> permet à une société d’authentifier l’application par rapport au serveur proxy avant que l’utilisateur n’accède à Internet. A moins qu’une authentification anonyme soit utilisée, après l’authentification proxy, l’utilisateur doit encore s’authentifier auprès de Flash Access afin d’obtenir le voucher et lire le contenu. Vous pouvez utiliser <codeph class="+ topic/ph pr-d/codeph ">setDRMAuthenticationcredentials()</codeph> une deuxième fois, avec l’option <codeph class="+ topic/ph pr-d/codeph ">"drm"</codeph>, pour l’authentification auprès de Flash Access.</li></ul>
     
     </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Définit les informations d’authentification de la gestion des droits numériques nécessaires à l’affichage du contenu chiffré sous-jacent.
     <p class="- topic/p ">
     La méthode <codeph class="+ topic/ph pr-d/codeph ">setDRMAuthenticationCredentials()</codeph> doit fournir des informations d’identification qui correspondent à celles reconnues et approuvées par le fournisseur de contenu ou le serveur proxy. Ces informations d’identification sont les mêmes que celles dont l’utilisateur a besoin pour obtenir l’autorisation d’afficher le contenu.
     </p>
     
     </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.events.xml#DRMAuthenticateEvent" class="- topic/link "><linktext class="- topic/linktext ">flash.events.DRMAuthenticateEvent</linktext></link></related-links></apiOperation><apiOperation id="flash.net:NetStream:step" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">step</apiName><shortdesc class="- topic/shortdesc ">
    Recule ou avance du nombre d’images spécifié à partir de l’image actuellement affichée.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">frames</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Recule ou avance du nombre d’images spécifié à partir de l’image actuellement affichée. Spécifiez un nombre positif pour vous déplacer vers l’avant et un nombre négatif pour vous déplacer en sens inverse. Appelez cette méthode pour créer une fonctionnalité précise d’avance ou de retour rapide.
    
    <p class="- topic/p ">Cette méthode n’est disponible que lorsque les données sont diffusées en continu à partir de Flash Media Server 3.5.3 ou version ultérieure et lorsque <codeph class="+ topic/ph pr-d/codeph ">NetStream.inBufferSeek</codeph> est définie sur <codeph class="+ topic/ph pr-d/codeph ">true</codeph>. Par ailleurs, l’image cible doit se trouver dans la mémoire tampon. Par exemple, si l’image actuellement affichée est l’image numéro 120 et que vous spécifiez une valeur de 1000, cette méthode échoue si l’image numéro 1120 ne se trouve pas dans la mémoire tampon.</p>
    
    <p class="- topic/p ">Cette méthode est conçue pour être utilisée avec la méthode <codeph class="+ topic/ph pr-d/codeph ">pause()</codeph> ou <codeph class="+ topic/ph pr-d/codeph ">togglePause()</codeph>. Si vous avancez ou reculez de 10 images pendant la lecture sans effectuer de pause, il est possible que vous ne détectiez pas cette opération ou qu’elle ressemble à une erreur. Par ailleurs, si vous appelez <codeph class="+ topic/ph pr-d/codeph ">pause()</codeph> ou <codeph class="+ topic/ph pr-d/codeph ">togglePause</codeph> le son est coupé.</p>
    
    <p class="- topic/p ">Si l’appel de la méthode <codeph class="+ topic/ph pr-d/codeph ">NetStream.étape()</codeph> aboutit, un événement NetStatusEvent est envoyé avec "NetStream.Step.Notify" en tant que valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">code</codeph> de l’objet info. </p>
    
    <p class="- topic/p ">  </p>
    
    </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStream/inBufferSeek" class="- topic/link "><linktext class="- topic/linktext ">inBufferSeek</linktext></link><link href="flash.net.xml#NetStream/backBufferTime" class="- topic/link "><linktext class="- topic/linktext ">backBufferTime</linktext></link><link href="flash.net.xml#NetStream/backBufferLength" class="- topic/link "><linktext class="- topic/linktext ">backBufferLength</linktext></link><link href="flash.net.xml#NetStream/bufferTime" class="- topic/link "><linktext class="- topic/linktext ">bufferTime</linktext></link><link href="flash.net.xml#NetStream/bufferLength" class="- topic/link "><linktext class="- topic/linktext ">bufferLength</linktext></link><link href="flash.net.xml#NetStream/step()" class="- topic/link "><linktext class="- topic/linktext ">step()</linktext></link><link href="flash.net.xml#NetStream/seek()" class="- topic/link "><linktext class="- topic/linktext ">seek()</linktext></link></related-links></apiOperation><apiOperation id="flash.net:NetStream:togglePause" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">togglePause</apiName><shortdesc class="- topic/shortdesc ">
     Interrompt ou reprend la lecture d’un flux continu.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">NetStream.resume, resume
     
     </keyword></asCustoms></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Interrompt ou reprend la lecture d’un flux continu. Lorsque vous appelez cette méthode pour la première fois, la lecture est interrompue ; au prochain appel, la lecture reprend. Vous pouvez par exemple utiliser cette méthode pour permettre aux utilisateurs d’interrompre ou de reprendre la lecture par pression d’un seul bouton.
     
     </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStream/close()" class="- topic/link "><linktext class="- topic/linktext ">close()</linktext></link><link href="flash.net.xml#NetStream/play()" class="- topic/link "><linktext class="- topic/linktext ">play()</linktext></link><link href="flash.net.xml#NetStream/pause()" class="- topic/link "><linktext class="- topic/linktext ">pause()</linktext></link><link href="flash.net.xml#NetStream/resume()" class="- topic/link "><linktext class="- topic/linktext ">resume()</linktext></link></related-links></apiOperation><apiValue id="flash.net:NetStream:CONNECT_TO_FMS" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">CONNECT_TO_FMS</apiName><shortdesc class="- topic/shortdesc ">
     Objet statique utilisé comme paramètre pour le constructeur d’une occurrence de NetStream.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">connectToFMS</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Objet statique utilisé comme paramètre pour le constructeur d’une occurrence de NetStream. Il s’agit de la valeur par défaut du second paramètre du constructeur NetStream ; il n’est pas utilisé par l’application pour la lecture progressive. Lorsqu’il est utilisé, ce paramètre oblige le constructeur à se connecter à une occurrence de Flash Media Server.
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:NetStream:DIRECT_CONNECTIONS" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">DIRECT_CONNECTIONS</apiName><shortdesc class="- topic/shortdesc ">
     Crée une connexion d’éditeur homologue à homologue.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">directConnections</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Crée une connexion d’éditeur homologue à homologue. Transmet cette chaîne pour le deuxième paramètre (facultatif) au constructeur d’une occurrence de NetStream. Avec cette chaîne, une application peut créer une connexion NetStream dans le but de publier du contenu audio et vidéo vers des clients.
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:NetStream:audioReliable:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">audioReliable</apiName><shortdesc class="- topic/shortdesc ">
     
     Pour les connexions RTMFP, indique si le son est envoyé en toute fiabilité.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     
     Pour les connexions RTMFP, indique si le son est envoyé en toute fiabilité. Lorsque cette propriété est définie sur TRUE, toutes les données audio transmises sur ce NetStream sont totalement fiables. Si elle est définie sur FALSE, les données audio transmises ne sont pas totalement fiables ; elles sont retransmises pour une durée limitée, puis abandonnées. Vous pouvez utiliser la valeur FALSE pour réduire le temps d’attente au détriment de la qualité audio.
     
     <p class="- topic/p ">Si vous tentez de définir cette propriété sur FALSE sur un protocole réseau qui ne prend pas en charge la fiabilité partielle, la tentative est ignorée et la propriété est définie sur TRUE.</p>
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStream/dataReliable" class="- topic/link "><linktext class="- topic/linktext ">dataReliable</linktext></link><link href="flash.net.xml#NetStream/videoReliable" class="- topic/link "><linktext class="- topic/linktext ">videoReliable</linktext></link></related-links></apiValue><apiValue id="flash.net:NetStream:audioSampleAccess:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">audioSampleAccess</apiName><shortdesc class="- topic/shortdesc ">
     
     Pour les connexions RTMFP, indique si les abonnés homologue à homologue de ce flux de réseau sont autorisés à capturer le flux audio.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     
     Pour les connexions RTMFP, indique si les abonnés homologue à homologue de ce flux de réseau sont autorisés à capturer le flux audio. Lorsque la valeur FALSE est définie, l’abonné tente de capturer le flux audio pour afficher les erreurs d’autorisation.
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStream/videoSampleAccess" class="- topic/link "><linktext class="- topic/linktext ">videoSampleAccess</linktext></link></related-links></apiValue><apiValue id="flash.net:NetStream:backBufferLength:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">backBufferLength</apiName><shortdesc class="- topic/shortdesc ">
    Nombre de secondes des données précédemment affichées actuellement en cache pour le rembobinage et la lecture.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Nombre de secondes des données précédemment affichées actuellement en cache pour le rembobinage et la lecture.
    
    <p class="- topic/p ">Cette propriété est disponible uniquement lorsque des données sont diffusées en flux continu à partir de Flash Media Server 3.5.3 ou version ultérieure. Pour plus d’informations sur Flash Media Server, voir la description de la classe.</p>
    
    <p class="- topic/p ">Pour spécifier la quantité de données précédemment affichées mises en cache, utilisez la propriété <codeph class="+ topic/ph pr-d/codeph ">Netstream.backBufferTime</codeph>. </p>
    
    <p class="- topic/p "> Pour éviter la mise en cache des données, définissez la propriété <codeph class="+ topic/ph pr-d/codeph ">Netstream.inBufferSeek</codeph> sur FALSE.</p>
    
    
    </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStream/backBufferTime" class="- topic/link "><linktext class="- topic/linktext ">backBufferTime</linktext></link><link href="flash.net.xml#NetStream/inBufferSeek" class="- topic/link "><linktext class="- topic/linktext ">inBufferSeek</linktext></link></related-links></apiValue><apiValue id="flash.net:NetStream:backBufferTime:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">backBufferTime</apiName><shortdesc class="- topic/shortdesc ">
    Spécifie la quantité de données précédemment affichées que Flash Player tente de mettre en mémoire cache pour le rembobinage et la lecture, en secondes.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Spécifie la quantité de données précédemment affichées que Flash Player tente de mettre en mémoire cache pour le rembobinage et la lecture, en secondes. La valeur par défaut est de 30 secondes pour les applications de bureau et de 3 secondes pour les applications mobiles.
    
    <p class="- topic/p ">Cette propriété est disponible uniquement lorsque des données sont diffusées en flux continu à partir de Flash Media Server 3.5.3 ou version ultérieure. Pour plus d’informations sur Flash Media Server, voir la description de la classe.</p>
    
    <p class="- topic/p ">L’utilisation de cette propriété améliore les performances des opérations de rembobinage, car les données qui ont déjà été affichées ne sont pas à nouveau extraites du serveur. Au contraire, le flux continu lance la relecture depuis la mémoire tampon. Lors de la lecture, la diffusion en continu des données se poursuit depuis le serveur jusqu’à ce que la mémoire tampon soit pleine. </p>
    
    <p class="- topic/p ">Si la position de rembobinage est plus éloignée que les données dans la mémoire cache, la mémoire tampon est nettoyée ; la diffusion en continu des données commence depuis le serveur à la position requise. </p>
    
    <p class="- topic/p ">Pour utiliser cette propriété, définissez la propriété <codeph class="+ topic/ph pr-d/codeph ">Netstream.inBufferSeek</codeph> sur TRUE.</p>
    
    
    </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStream/backBufferLength" class="- topic/link "><linktext class="- topic/linktext ">backBufferLength</linktext></link><link href="flash.net.xml#NetStream/bufferTime" class="- topic/link "><linktext class="- topic/linktext ">bufferTime</linktext></link><link href="flash.net.xml#NetStream/inBufferSeek" class="- topic/link "><linktext class="- topic/linktext ">inBufferSeek</linktext></link></related-links></apiValue><apiValue id="flash.net:NetStream:bufferLength:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">bufferLength</apiName><shortdesc class="- topic/shortdesc ">
     Nombre de secondes de données enregistrées dans la mémoire tampon.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">NetStream.bufferLength, bufferLength
     
     </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Nombre de secondes de données enregistrées dans la mémoire tampon. Vous pouvez utiliser cette propriété conjointement avec <codeph class="+ topic/ph pr-d/codeph ">bufferTime</codeph> pour estimer le niveau de remplissage du tampon ; par exemple, pour indiquer ce niveau à un utilisateur qui attend la fin du chargement des données dans le tampon.
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStream/backBufferLength" class="- topic/link "><linktext class="- topic/linktext ">backBufferLength</linktext></link><link href="flash.net.xml#NetStream/bufferTime" class="- topic/link "><linktext class="- topic/linktext ">bufferTime</linktext></link><link href="flash.net.xml#NetStream/bytesLoaded" class="- topic/link "><linktext class="- topic/linktext ">bytesLoaded</linktext></link></related-links></apiValue><apiValue id="flash.net:NetStream:bufferTimeMax:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">bufferTimeMax</apiName><shortdesc class="- topic/shortdesc ">
    Spécifie une longueur de mémoire tampon maximale pour le contenu de flux continu en direct, en secondes.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Spécifie une longueur de mémoire tampon maximale pour le contenu de flux continu en direct, en secondes. La valeur par défaut est 0. La longueur de la mémoire tampon peut augmenter au fil du temps en raison de problèmes de mise en réseau et de périphérique (par exemple, décalage horaire entre l’expéditeur et le destinataire). Définissez cette propriété pour réduire la longueur de la mémoire tampon pour les applications en direct telles que réunions et surveillance vidéo.
    
    <p class="- topic/p "> Lorsque <codeph class="+ topic/ph pr-d/codeph ">bufferTimeMax > 0</codeph> et <codeph class="+ topic/ph pr-d/codeph ">bufferLength >= bufferTimeMax</codeph>, les données audio sont lues plus rapidement jusqu’à ce que <codeph class="+ topic/ph pr-d/codeph ">bufferLength</codeph> atteigne <codeph class="+ topic/ph pr-d/codeph ">bufferTime</codeph>. Si un flux en direct contient uniquement des données vidéo, la vidéo est lue plus rapidement jusqu’à ce que la propriété <codeph class="+ topic/ph pr-d/codeph ">bufferLength</codeph> atteigne la propriété <codeph class="+ topic/ph pr-d/codeph ">bufferTime</codeph>.</p>
    
    <p class="- topic/p ">Selon le retard de la lecture (différence entre <codeph class="+ topic/ph pr-d/codeph ">bufferLength</codeph> et <codeph class="+ topic/ph pr-d/codeph ">bufferTime</codeph>), Flash Player maintient une vitesse de rattrapage comprise entre 1,5 % et 6,25 %. Si le flux contient des données audio, la lecture rapide est obtenue par sous-échantillonnage du domaine de la fréquence, qui minimise la distorsion audible.</p>
    
    <p class="- topic/p ">Définissez la propriété <codeph class="+ topic/ph pr-d/codeph ">bufferTimeMax</codeph> pour activer le rattrapage du flux mis en tampon en temps réel dans les cas suivants :</p>
    
    <ul class="- topic/ul "><li class="- topic/li ">Diffusion d’un support multimédia en direct depuis Flash Media Server.</li><li class="- topic/li ">Diffusion d’un support multimédia en direct en mode de génération de données (<codeph class="+ topic/ph pr-d/codeph ">NetStream.appendBytes()</codeph>).</li></ul>
    
    
    </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStream/bufferLength" class="- topic/link "><linktext class="- topic/linktext ">bufferLength</linktext></link><link href="flash.net.xml#NetStream/bufferTime" class="- topic/link "><linktext class="- topic/linktext ">bufferTime</linktext></link></related-links></apiValue><apiValue id="flash.net:NetStream:bufferTime:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">bufferTime</apiName><shortdesc class="- topic/shortdesc ">
     Spécifie la durée de la mise en mémoire tampon des messages avant que l’affichage du flux ne commence.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">NetStream.setBufferTime, setBufferTime
     
     </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Spécifie la durée de la mise en mémoire tampon des messages avant que l’affichage du flux ne commence.
     
     <p class="- topic/p ">La valeur par défaut est 0.1 (un dixième de seconde). Pour déterminer le nombre de secondes actuellement dans la mémoire tampon, utilisez la propriété <codeph class="+ topic/ph pr-d/codeph ">bufferLength</codeph>.</p>
     
     <p class="- topic/p ">Pour lire une liste de lecture côté serveur, définissez <codeph class="+ topic/ph pr-d/codeph ">bufferTime</codeph> sur au moins 1 seconde. Si vous rencontrez des problèmes de lecture, augmentez la durée de la propriété <codeph class="+ topic/ph pr-d/codeph ">bufferTime</codeph>. 
     </p>
     
     <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Contenu enregistré</b> Pour éviter toute distorsion lors de la diffusion de contenu pré-enregistré (pas en direct), ne réglez pas la valeur de <codeph class="+ topic/ph pr-d/codeph ">Netstream.bufferTime</codeph> sur 0. Par défaut, l’application utilise un tampon d’entrée pour le contenu préenregistré qui met les données en file d’attente et lit le fichier correctement. Pour le contenu préenregistré, utilisez le paramétrage par défaut ou augmentez la durée du tampon.</p>
     
     <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Contenu en direct</b> Lors de la diffusion de contenu en direct, définissez la propriété <codeph class="+ topic/ph pr-d/codeph ">bufferTime</codeph> sur 0.</p>
     
     <p class="- topic/p ">Depuis Flash Player 9.0.115.0, le lecteur n’efface plus la mémoire tampon lors de l’appel de <codeph class="+ topic/ph pr-d/codeph ">NetStream.pause()</codeph>. Avant Flash Player 9.0.115.0, le lecteur attendait le remplissage du tampon avant de reprendre la lecture, ce qui entraînait souvent des retards.</p>
         
         <p class="- topic/p ">En cas d’interruption unique, la propriété <codeph class="+ topic/ph pr-d/codeph ">NetStream.bufferLength</codeph> possède une limite de 60 secondes ou de deux fois la valeur de <codeph class="+ topic/ph pr-d/codeph ">NetStream.bufferTime</codeph> (la limite supérieure est prise en compte). Par exemple, si la propriété <codeph class="+ topic/ph pr-d/codeph ">bufferTime</codeph> est de 20 secondes, Flash Player effectue la mise en mémoire tampon jusqu’à ce que la propriété <codeph class="+ topic/ph pr-d/codeph ">NetStream.bufferLength</codeph> corresponde à la valeur la plus élevée de 20~~2 (c’est-à-dire 40), ou à la valeur 60 ; dans ce cas, Flash Player effectue la mise en mémoire tampon jusqu’à ce que la valeur de <codeph class="+ topic/ph pr-d/codeph ">bufferLength</codeph> corresponde à 60. Si la propriété <codeph class="+ topic/ph pr-d/codeph ">bufferTime</codeph> est de 40 secondes, Flash Player effectue la mise en mémoire tampon jusqu’à ce que la propriété <codeph class="+ topic/ph pr-d/codeph ">bufferLength</codeph> corresponde à la valeur la plus élevée de 40~~2 (c’est-à-dire 80), ou à la valeur 60 ; dans ce cas, Flash Player effectue la mise en mémoire tampon jusqu’à ce que la valeur de <codeph class="+ topic/ph pr-d/codeph ">bufferLength</codeph> corresponde à 80.</p>
         
         <p class="- topic/p ">La propriété <codeph class="+ topic/ph pr-d/codeph ">bufferLength</codeph> possède en outre une limite absolue. Si un appel à <codeph class="+ topic/ph pr-d/codeph ">pause()</codeph> provoque l’augmentation de <codeph class="+ topic/ph pr-d/codeph ">bufferLength</codeph> de plus de 600 secondes, ou la valeur de plus élevée de <codeph class="+ topic/ph pr-d/codeph ">bufferTime</codeph> ~~ 2, Flash Player efface le contenu de la mémoire tampon et remet à zéro <codeph class="+ topic/ph pr-d/codeph ">bufferLength</codeph>. Par exemple, si la propriété <codeph class="+ topic/ph pr-d/codeph ">bufferTime</codeph> est de 120 secondes, Flash Player efface le contenu de la mémoire tampon si la propriété <codeph class="+ topic/ph pr-d/codeph ">bufferLength</codeph> atteint 600 secondes ; si <codeph class="+ topic/ph pr-d/codeph ">bufferTime</codeph> est de 360 secondes, Flash Player efface le contenu de la mémoire tampon si <codeph class="+ topic/ph pr-d/codeph ">bufferLength</codeph> atteint 720 secondes.</p>
         
         <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Conseil </b>: vous pouvez utiliser <codeph class="+ topic/ph pr-d/codeph ">NetStream.pause()</codeph> dans le code pour mettre les données en mémoire tampon pendant que les spectateurs regardent une annonce publicitaire, par exemple, puis annuler l’interruption lorsque la vidéo principale démarre.</p>
         
         <p class="- topic/p ">Pour plus d’informations sur le nouveau comportement d’interruption, voir la page <xref href="http://www.adobe.com/go/learn_fms_smartpause_fr" scope="external" class="- topic/xref ">http://www.adobe.com/go/learn_fms_smartpause_fr</xref>.</p>
     <p class="- topic/p ">
     <b class="+ topic/ph hi-d/b ">Flash Media Server</b>. Le comportement du tampon varie en fonction de la définition de la durée du tampon : sur un flux de publication ou sur un flux d’abonnement. Dans le cas d’un flux de publication, <codeph class="+ topic/ph pr-d/codeph ">bufferTime</codeph> spécifie la durée pendant laquelle le tampon sortant peut croître avant que l’application ne commence à abandonner des images. Dans le cas d’une connexion haut débit, la durée du tampon n’est pas un problème : les données sont envoyées presque aussi rapidement que l’application peut les mettre en mémoire tampon. Toutefois, dans le cas d’une connexion bas débit, il peut exister une différence considérable entre la vitesse à laquelle l’application place les données en mémoire tampon et celle à laquelle elles sont envoyées au client.
     </p>
     
     <p class="- topic/p ">
     Dans le cas d’un flux d’abonnement, <codeph class="+ topic/ph pr-d/codeph ">bufferTime</codeph> spécifie le délai pendant lequel les données entrantes doivent être mises en mémoire tampon avant que l’affichage du flux ne commence.
     </p>
     
     <p class="- topic/p ">
     Lors de la lecture d’un flux enregistré, si <codeph class="+ topic/ph pr-d/codeph ">bufferTime</codeph> est défini sur 0, Flash le définit sur une faible valeur (environ 10 millisecondes). Si des flux en direct sont ensuite lus (par exemple depuis une liste de lecture), cette durée de tampon persiste. Cela signifie que <codeph class="+ topic/ph pr-d/codeph ">bufferTime</codeph> demeure non nul pour le flux.
     </p>
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStream/backBufferTime" class="- topic/link "><linktext class="- topic/linktext ">backBufferTime</linktext></link><link href="flash.net.xml#NetStream/bufferLength" class="- topic/link "><linktext class="- topic/linktext ">bufferLength</linktext></link><link href="flash.net.xml#NetStream/bufferTimeMax" class="- topic/link "><linktext class="- topic/linktext ">bufferTimeMax</linktext></link><link href="flash.net.xml#NetStream/time" class="- topic/link "><linktext class="- topic/linktext ">time</linktext></link></related-links></apiValue><apiValue id="flash.net:NetStream:bytesLoaded:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">bytesLoaded</apiName><shortdesc class="- topic/shortdesc ">
     Nombre d’octets de données ayant été chargés dans l’application.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">NetStream.bytesLoaded, bytesLoaded
     
     </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">uint</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Nombre d’octets de données ayant été chargés dans l’application. Vous pouvez utiliser cette propriété conjointement avec <codeph class="+ topic/ph pr-d/codeph ">bytesTotal</codeph> pour estimer le niveau de remplissage du tampon ; par exemple, pour indiquer ce niveau à un utilisateur qui attend la fin du chargement des données dans le tampon.
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStream/bytesTotal" class="- topic/link "><linktext class="- topic/linktext ">bytesTotal</linktext></link><link href="flash.net.xml#NetStream/bufferLength" class="- topic/link "><linktext class="- topic/linktext ">bufferLength</linktext></link></related-links></apiValue><apiValue id="flash.net:NetStream:bytesTotal:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">bytesTotal</apiName><shortdesc class="- topic/shortdesc ">
     Taille totale, en octets, du fichier chargé dans l’application.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">NetStream.bytesTotal, bytesTotal
     </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">uint</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Taille totale, en octets, du fichier chargé dans l’application.
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStream/bytesLoaded" class="- topic/link "><linktext class="- topic/linktext ">bytesLoaded</linktext></link><link href="flash.net.xml#NetStream/bufferTime" class="- topic/link "><linktext class="- topic/linktext ">bufferTime</linktext></link></related-links></apiValue><apiValue id="flash.net:NetStream:checkPolicyFile:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">checkPolicyFile</apiName><shortdesc class="- topic/shortdesc ">
     Spécifie si l’application tente de télécharger un fichier de régulation interdomaines à partir du serveur du fichier vidéo chargé avant de commencer à charger ce dernier.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><internal>: please review at same time: checkPolicyFile property in LoaderContext
     </internal></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Spécifie si l’application tente de télécharger un fichier de régulation interdomaines à partir du serveur du fichier vidéo chargé avant de commencer à charger ce dernier. Utilisez cette propriété pour télécharger progressivement des données vidéo et pour charger des fichiers se trouvant hors du domaine du fichier SWF appelant. Cette propriété est ignorée lors de l’utilisation de RTMP. 
     
     <p class="- topic/p ">Définissez cette propriété sur <codeph class="+ topic/ph pr-d/codeph ">true</codeph> pour appeler <codeph class="+ topic/ph pr-d/codeph ">BitmapData.draw()</codeph> sur un fichier vidéo chargé à partir d’un domaine en dehors de celui du fichier SWF appelant. La méthode <codeph class="+ topic/ph pr-d/codeph ">BitmapData.draw()</codeph> fournit un accès à la vidéo au niveau des pixels. Si vous appelez <codeph class="+ topic/ph pr-d/codeph ">BitmapData.draw()</codeph> sans définir la propriété <codeph class="+ topic/ph pr-d/codeph ">checkPolicyFile</codeph> sur <codeph class="+ topic/ph pr-d/codeph ">true</codeph> au chargement, vous pouvez obtenir une exception <codeph class="+ topic/ph pr-d/codeph ">SecurityError</codeph>, car le fichier de régulation requis n’a pas été téléchargé.</p>
     
     <p class="- topic/p ">Ne définissez pas cette propriété sur true, sauf si vous souhaitez accéder à la vidéo en cours de chargement au niveau des pixels. La recherche d’un fichier de régulation consomme de la bande passante réseau et risque de retarder le début du téléchargement.</p>
     
     <p class="- topic/p ">Lorsque vous appelez la méthode <codeph class="+ topic/ph pr-d/codeph ">NetStream.play()</codeph> en définissant <codeph class="+ topic/ph pr-d/codeph ">checkPolicyFile</codeph> sur <codeph class="+ topic/ph pr-d/codeph ">true</codeph>, <ph class="- topic/ph ">Flash Player ou</ph> le moteur d’exécution d’AIR doit télécharger un fichier de régulation interdomaines approprié ou déterminer qu’un tel fichier n’existe pas avant de commencer à le télécharger. Pour vérifier l’existence d’un fichier de régulation, <ph class="- topic/ph ">Flash Player ou </ph>le moteur d’exécution AIR effectue les actions suivantes, dans l’ordre indiqué :</p>
     
     <ol class="- topic/ol "><li class="- topic/li ">L’application examine les fichiers de régulation préalablement téléchargés.</li><li class="- topic/li ">L’application tente de télécharger tout fichier de régulation en attente spécifié dans les appels de la méthode <codeph class="+ topic/ph pr-d/codeph ">Security.loadPolicyFile()</codeph>.</li><li class="- topic/li ">L’application tente de télécharger un fichier de régulation à partir de l’emplacement par défaut qui correspond à l’URL que vous avez transmise à <codeph class="+ topic/ph pr-d/codeph ">NetStream.play()</codeph>, à savoir <codeph class="+ topic/ph pr-d/codeph ">/crossdomain.xml</codeph> sur le même serveur que cette URL.</li></ol>
     
     <p class="- topic/p ">Dans tous les cas, <ph class="- topic/ph ">Flash Player ou</ph> Adobe AIR exige que le serveur du fichier vidéo héberge un fichier de régulation approprié, que ce dernier permette d’accéder à l’objet à l’adresse URL que vous avez transmise à <codeph class="+ topic/ph pr-d/codeph ">play()</codeph> sur la base de l’emplacement du fichier de régulation, et qu’il autorise le domaine du fichier de code appelant à accéder au fichier vidéo par le biais d’une ou plusieurs balises <codeph class="+ topic/ph pr-d/codeph ">&lt;allow-access-from></codeph>.</p>
     
     <p class="- topic/p ">Si vous définissez <codeph class="+ topic/ph pr-d/codeph ">checkPolicyFile</codeph> sur <codeph class="+ topic/ph pr-d/codeph ">true</codeph>, l’application attend la vérification du fichier de régulation avant de télécharger la vidéo. Avant de manipuler les données vidéo au niveau des pixels, en appelant <codeph class="+ topic/ph pr-d/codeph ">BitmapData.draw()</codeph>, par exemple, attendez d’avoir reçu de votre objet NetStream des événements <codeph class="+ topic/ph pr-d/codeph ">onMetaData</codeph> ou <codeph class="+ topic/ph pr-d/codeph ">NetStatus</codeph>.</p>
     
     <p class="- topic/p ">Si vous définissez <codeph class="+ topic/ph pr-d/codeph ">checkPolicyFile</codeph> sur <codeph class="+ topic/ph pr-d/codeph ">true</codeph> et qu’il n’existe aucun fichier de régulation approprié, vous ne recevez pas de message d’erreur tant que vous n’effectuez pas une opération nécessitant un tel fichier, auquel cas l’application renvoie une exception SecurityError.</p>
     
     <p class="- topic/p ">Servez-vous de <codeph class="+ topic/ph pr-d/codeph ">checkPolicyFile</codeph> avec précaution si vous téléchargez un fichier vidéo à partir d’une URL qui utilise des redirections HTTP côté serveur. L’application tente d’extraire les fichiers de régulation correspondant à l’URL spécifiée à l’origine dans <codeph class="+ topic/ph pr-d/codeph ">NetStream.play()</codeph>. Si le fichier final provient d’une URL différente suite à des redirections HTTP, les fichiers de régulation initialement téléchargés peuvent ne pas être applicables à l’URL finale du fichier (URL qui doit faire l’objet des mesures de sécurité).</p>
     
     <p class="- topic/p ">Pour plus d’informations sur les fichiers de régulation, voir la rubrique « Contrôles de site Web (fichiers de régulation) » dans le <i class="+ topic/ph hi-d/i ">Guide du développeur d’ActionScript 3.0 </i>, ainsi que la rubrique <xref href="http://www.adobe.com/go/devnet_security_fr" scope="external" class="- topic/xref ">Sécurité</xref> du Pôle de développement Flash Player (disponible en anglais uniquement).</p>
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#BitmapData/draw()" class="- topic/link "><linktext class="- topic/linktext ">flash.display.BitmapData.draw()</linktext></link><link href="flash.system.xml#Security/loadPolicyFile()" class="- topic/link "><linktext class="- topic/linktext ">flash.system.Security.loadPolicyFile()</linktext></link><link href="flash.net.xml#NetStream/event:netStatus" class="- topic/link "><linktext class="- topic/linktext ">netStatus</linktext></link><link href="flash.net.xml#NetStream/event:onMetaData" class="- topic/link "><linktext class="- topic/linktext ">onMetaData</linktext></link><link href="flash.net.xml#NetStream/play()" class="- topic/link "><linktext class="- topic/linktext ">play()</linktext></link></related-links></apiValue><apiValue id="flash.net:NetStream:client:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">client</apiName><shortdesc class="- topic/shortdesc ">
     Spécifie l’objet sur lequel les méthodes de rappel sont invoquées pour gérer la diffusion en continue ou les données des fichiers FLV/F4V.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Object</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">La propriété <codeph class="+ topic/ph pr-d/codeph ">client</codeph> ne peut pas être réglée sur l’objet null.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">TypeError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">TypeError</apiOperationClassifier></apiException></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Spécifie l’objet sur lequel les méthodes de rappel sont invoquées pour gérer la diffusion en continue ou les données des fichiers FLV/F4V. L’objet par défaut correspond à <codeph class="+ topic/ph pr-d/codeph ">this</codeph>, l’objet NetStream en cours de création. Si vous réglez la propriété <codeph class="+ topic/ph pr-d/codeph ">client</codeph> sur un autre objet, les méthodes de rappel sont appelées sur celui-ci. L’objet <codeph class="+ topic/ph pr-d/codeph ">NetStream.client</codeph> peut appeler les fonctions suivantes et recevoir un objet de données associé : <codeph class="+ topic/ph pr-d/codeph ">onCuePoint()</codeph>, <codeph class="+ topic/ph pr-d/codeph ">onImageData()</codeph>, <codeph class="+ topic/ph pr-d/codeph ">onMetaData()</codeph>, <codeph class="+ topic/ph pr-d/codeph ">onPlayStatus()</codeph>, <codeph class="+ topic/ph pr-d/codeph ">onSeekPoint()</codeph>, <codeph class="+ topic/ph pr-d/codeph ">onTextData()</codeph> et <codeph class="+ topic/ph pr-d/codeph ">onXMPData()</codeph>.
     <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Pour associer la propriété <codeph class="+ topic/ph pr-d/codeph ">client</codeph> à un gestionnaire d’événement :</b></p>
     <p class="- topic/p "><ol class="- topic/ol "><li class="- topic/li ">Créez un objet et affectez-le à la propriété <codeph class="+ topic/ph pr-d/codeph ">client</codeph> de l’objet NetStream :
     <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
     var customClient:Object = new Object();
     my_netstream.client = customClient;
     </codeblock>
     </li><li class="- topic/li ">Affectez une fonction de gestionnaire pour l’événement de données désiré en tant que propriété de l’objet client :
     <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
     customClient.onImageData = onImageDataHandler;
     </codeblock>
     </li><li class="- topic/li ">Ecrivez la fonction de gestionnaire pour recevoir l’objet d’événement de données, tel que :
     <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
      public function onImageDataHandler(imageData:Object):void {
              trace("imageData length: " + imageData.data.length);
      }
     </codeblock></li></ol></p>
     <p class="- topic/p ">Lorsque les données sont transmises via le flux ou au cours de la lecture, l’objet d’événement de données (dans ce cas l’objet <codeph class="+ topic/ph pr-d/codeph ">imageData</codeph>) est renseigné avec les données. Reportez-vous à la description de <codeph class="+ topic/ph pr-d/codeph ">onImageData</codeph>, qui inclut un exemple complet d’objet affecté à la propriété <codeph class="+ topic/ph pr-d/codeph ">client</codeph>.</p>
     <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Pour associer la propriété <codeph class="+ topic/ph pr-d/codeph ">client</codeph> à une sous-classe :</b></p>
     <p class="- topic/p "><ol class="- topic/ol "><li class="- topic/li ">Créez une sous-classe avec une fonction de gestionnaire pour recevoir l’objet d’événement de données :
     <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
     class CustomClient {
        public function onMetaData(info:Object):void {
            trace("metadata: duration=" + info.duration + " framerate=" + info.framerate);
     }
     </codeblock>
     </li><li class="- topic/li ">Affectez une occurrence de la sous-classe à la propriété <codeph class="+ topic/ph pr-d/codeph ">client</codeph> de l’objet NetStream :
     <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
     my_netstream.client = new CustomClient();
     </codeblock>
     </li></ol></p>
     <p class="- topic/p ">Lorsque les données sont transmises via le flux ou au cours de la lecture, l’objet d’événement de données (dans ce cas l’objet <codeph class="+ topic/ph pr-d/codeph ">info</codeph>) est renseigné avec les données. Reportez-vous à l’exemple de classe proposé à la fin de la classe NetStream, qui illustre l’affectation d’une occurrence de sous-classe à la propriété <codeph class="+ topic/ph pr-d/codeph ">client</codeph>.</p>
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStream/event:onCuePoint" class="- topic/link "><linktext class="- topic/linktext ">onCuePoint</linktext></link><link href="flash.net.xml#NetStream/event:onImageData" class="- topic/link "><linktext class="- topic/linktext ">onImageData</linktext></link><link href="flash.net.xml#NetStream/event:onMetaData" class="- topic/link "><linktext class="- topic/linktext ">onMetaData</linktext></link><link href="flash.net.xml#NetStream/event:onPlayStatus" class="- topic/link "><linktext class="- topic/linktext ">onPlayStatus</linktext></link><link href="flash.net.xml#NetStream/event:onSeekPoint" class="- topic/link "><linktext class="- topic/linktext ">onSeekPoint</linktext></link><link href="flash.net.xml#NetStream/event:onTextData" class="- topic/link "><linktext class="- topic/linktext ">onTextData</linktext></link></related-links></apiValue><apiValue id="flash.net:NetStream:currentFPS:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">currentFPS</apiName><shortdesc class="- topic/shortdesc ">
     Nombre d’images affichées par seconde.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">NetStream.currentFPS, currentFPS
     
      </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Nombre d’images affichées par seconde. Si vous exportez des fichiers vidéo pour les lire sur différents systèmes, vous pouvez vérifier cette valeur pendant le test afin de déterminer la compression à appliquer lors de l’exportation du fichier.
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:NetStream:dataReliable:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">dataReliable</apiName><shortdesc class="- topic/shortdesc ">
     
     Pour les connexions RTMFP, indique si les appels de la méthode NetStream.send() sont envoyés en toute fiabilité.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     
     Pour les connexions RTMFP, indique si les appels de la méthode <codeph class="+ topic/ph pr-d/codeph ">NetStream.send()</codeph> sont envoyés en toute fiabilité. Lorsque la valeur TRUE est définie, les appels de la méthode <codeph class="+ topic/ph pr-d/codeph ">NetStream.send()</codeph> transmis sur cet objet NetStream sont totalement fiables. Si la valeur est définie sur FALSE, les appels de la méthode <codeph class="+ topic/ph pr-d/codeph ">NetStream.send()</codeph> ne sont pas transmis en toute fiabilité, mais sont retransmis pour une durée limitée, puis abandonnés. Vous pouvez définir cette valeur sur FALSE pour réduire le temps d’attente, au détriment de la qualité des données.
     
     <p class="- topic/p ">Si vous tentez de définir cette propriété sur FALSE sur un protocole réseau qui ne prend pas en charge la fiabilité partielle, la tentative est ignorée et la propriété est définie sur TRUE.</p>
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStream/audioReliable" class="- topic/link "><linktext class="- topic/linktext ">audioReliable</linktext></link><link href="flash.net.xml#NetStream/send()" class="- topic/link "><linktext class="- topic/linktext ">send()</linktext></link><link href="flash.net.xml#NetStream/videoReliable" class="- topic/link "><linktext class="- topic/linktext ">videoReliable</linktext></link></related-links></apiValue><apiValue id="flash.net:NetStream:farID:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">farID</apiName><shortdesc class="- topic/shortdesc ">
     Pour les connexions RTMFP, l’identifiant de l’extrémité connectée à cette occurrence de NetStream.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Pour les connexions RTMFP, l’identifiant de l’extrémité connectée à cette occurrence de NetStream.
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:NetStream:farNonce:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">farNonce</apiName><shortdesc class="- topic/shortdesc ">
     Pour les connexions RTMFP et RTMPE, une valeur choisie fondamentalement par l’autre extrémité de ce flux, unique à cette connexion.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Pour les connexions RTMFP et RTMPE, une valeur choisie fondamentalement par l’autre extrémité de ce flux, unique à cette connexion. Cette valeur apparaît à l’autre extrémité du flux en tant que valeur <codeph class="+ topic/ph pr-d/codeph ">nearNonce</codeph>.
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:NetStream:inBufferSeek:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">inBufferSeek</apiName><shortdesc class="- topic/shortdesc ">
    Indique si les données affichées sont mises en cache pour la recherche dynamique (TRUE) ou non (FALSE).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><internal>The following links work only if qualified with NetStream. We don't know why.
    </internal></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Indique si les données affichées sont mises en cache pour la recherche dynamique (<codeph class="+ topic/ph pr-d/codeph ">TRUE</codeph>) ou non (<codeph class="+ topic/ph pr-d/codeph ">FALSE</codeph>). La valeur par défaut est FALSE.
    
    <p class="- topic/p "> Flash Media Server 3.5.3 et Flash Player 10.1 collaborent pour prendre en charge la recherche dynamique. La recherche dynamique a recours à une mémoire tampon d’arrière-plan et à une mémoire tampon directe pour effectuer des recherches sans solliciter de données au serveur. La recherche standard efface les données placées en mémoire tampon et demande au serveur d’envoyer de nouvelles données en fonction du temps de recherche.</p>
    
    <p class="- topic/p ">Appelez <codeph class="+ topic/ph pr-d/codeph ">NetStream.step()</codeph> pour avancer ou reculer du nombre d’images spécifié. Appelez <codeph class="+ topic/ph pr-d/codeph ">NetStream.seek()</codeph> pour effectuer une recherche vers l’avant ou vers l’arrière du nombre de secondes spécifié.</p>
    
    <p class="- topic/p ">La recherche dynamique réduit la charge du serveur et améliore les performances de recherche. Définissez <codeph class="+ topic/ph pr-d/codeph ">inBufferSeek=true</codeph> et appelez <codeph class="+ topic/ph pr-d/codeph ">step()</codeph> et <codeph class="+ topic/ph pr-d/codeph ">seek()</codeph> pour créer :</p>
    
    <ul class="- topic/ul "><li class="- topic/li ">Une fonctionnalité DVR côté client. Recherchez dans la mémoire tampon côté client au lieu d’accéder au serveur pour distribuer la nouvelle vidéo.</li><li class="- topic/li ">Des modes de ruse. Créez des lecteurs qui permettent de parcourir les images, d’avancer et de revenir en arrière rapidement, et d’avancer au ralenti.</li></ul>
    
    <p class="- topic/p ">Lorsque <codeph class="+ topic/ph pr-d/codeph ">inBufferSeek=true</codeph> et qu’un appel de <codeph class="+ topic/ph pr-d/codeph ">NetStream.seek()</codeph> aboutit, la propriété <codeph class="+ topic/ph pr-d/codeph ">info.description</codeph> de NetStatusEvent contient la chaîne <codeph class="+ topic/ph pr-d/codeph ">"client-inBufferSeek"</codeph>.</p>
    
    <p class="- topic/p ">Lorsqu’un appel de <codeph class="+ topic/ph pr-d/codeph ">NetStream.step()</codeph> aboutit, la propriété <codeph class="+ topic/ph pr-d/codeph ">info.code</codeph> de NetStatusEvent contient la chaîne <codeph class="+ topic/ph pr-d/codeph ">"NetStream.Step.Notify"</codeph>.</p>
    
    
    </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStream/backBufferTime" class="- topic/link "><linktext class="- topic/linktext ">backBufferTime</linktext></link><link href="flash.net.xml#NetStream/backBufferLength" class="- topic/link "><linktext class="- topic/linktext ">backBufferLength</linktext></link><link href="flash.net.xml#NetStream/bufferTime" class="- topic/link "><linktext class="- topic/linktext ">bufferTime</linktext></link><link href="flash.net.xml#NetStream/bufferLength" class="- topic/link "><linktext class="- topic/linktext ">bufferLength</linktext></link><link href="flash.net.xml#NetStream/step()" class="- topic/link "><linktext class="- topic/linktext ">step()</linktext></link><link href="flash.net.xml#NetStream/seek()" class="- topic/link "><linktext class="- topic/linktext ">seek()</linktext></link></related-links></apiValue><apiValue id="flash.net:NetStream:info:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">info</apiName><shortdesc class="- topic/shortdesc ">
     Renvoie un objet NetStreamInfo dont les propriétés contiennent des statistiques sur la qualité de service.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.net:NetStreamInfo</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Renvoie un objet NetStreamInfo dont les propriétés contiennent des statistiques sur la qualité de service. L’objet est un instantané de l’état en cours.
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStreamInfo" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetStreamInfo</linktext></link></related-links></apiValue><apiValue id="flash.net:NetStream:liveDelay:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">liveDelay</apiName><shortdesc class="- topic/shortdesc ">
     Nombre de secondes de données enregistrées dans le tampon du flux abonné en mode en direct (sans mise en mémoire tampon).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><category class="- topic/category ">Property
     
     </category></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Nombre de secondes de données enregistrées dans le tampon du flux abonné en mode en direct (sans mise en mémoire tampon). Cette propriété spécifie l’actuel délai de transmission réseau (retard).
     
     <p class="- topic/p ">Cette propriété est surtout conçue pour une utilisation avec un serveur, tel que Flash Media Server. Pour plus d’informations, voir la description de la classe.</p>
     
     <p class="- topic/p ">Vous pouvez extraire la valeur de cette propriété pour évaluer approximativement la qualité de transmission du flux continu, et la communiquer à l’utilisateur. </p>
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:NetStream:maxPauseBufferTime:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">maxPauseBufferTime</apiName><shortdesc class="- topic/shortdesc ">
     Spécifie la durée de la mise en tampon des messages pendant le mode pause, en secondes.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Spécifie la durée de la mise en tampon des messages pendant le mode pause, en secondes. Cette propriété peut être utilisée pour limiter le volume de mise en mémoire tampon pendant le mode pause. Dès que la valeur <codeph class="+ topic/ph pr-d/codeph ">NetStream.bufferLength</codeph> atteint cette limite, la mise en mémoire tampon s’arrête.
     
     <p class="- topic/p ">Si cette valeur n’est pas définie, la limite par défaut est de 60 secondes ou correspond à deux fois la valeur de <codeph class="+ topic/ph pr-d/codeph ">NetStream.bufferTime</codeph> sur chaque pause (la valeur la plus élevée est prise en compte).</p>
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStream/bufferTime" class="- topic/link "><linktext class="- topic/linktext ">bufferTime</linktext></link></related-links></apiValue><apiValue id="flash.net:NetStream:multicastAvailabilitySendToAll:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">multicastAvailabilitySendToAll</apiName><shortdesc class="- topic/shortdesc ">
     Pour les connexions RTMFP, indique si les messages de disponibilité des fragments de multidiffusion homologue à homologue sont envoyés à tous les homologues ou à un seul homologue.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Pour les connexions RTMFP, indique si les messages de disponibilité des fragments de multidiffusion homologue à homologue sont envoyés à tous les homologues ou à un seul homologue. La valeur TRUE indique que les messages sont envoyés une fois à tous les homologues en fonction de l’intervalle spécifié. La valeur FALSE indique que les messages sont envoyés uniquement à un seul homologue en fonction de l’intervalle spécifié. L’intervalle est déterminé par la propriété <codeph class="+ topic/ph pr-d/codeph ">multicastAvailabilityUpdatePeriod</codeph>.
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStream/multicastAvailabilityUpdatePeriod" class="- topic/link "><linktext class="- topic/linktext ">multicastAvailabilityUpdatePeriod</linktext></link></related-links></apiValue><apiValue id="flash.net:NetStream:multicastAvailabilityUpdatePeriod:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">multicastAvailabilityUpdatePeriod</apiName><shortdesc class="- topic/shortdesc ">
     Pour les connexions RTMFP, spécifie l’intervalle, en secondes, entre les messages envoyés aux homologues les informant que le nœud local dispose de nouveaux fragments multimédias de multidiffusion homologue à homologue.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Pour les connexions RTMFP, spécifie l’intervalle, en secondes, entre les messages envoyés aux homologues les informant que le nœud local dispose de nouveaux fragments multimédias de multidiffusion homologue à homologue. Des valeurs plus élevées peuvent augmenter l’efficacité du traitement par lots et réduire la surcharge de contrôle, mais risquent de diminuer la qualité à la réception en réduisant la durée disponible pour extraire les fragments avant qu’ils ne soient hors de la fenêtre. Des valeurs moins élevées peuvent réduire le temps d’attente et améliorer la qualité, mais risquent d’augmenter la surcharge de contrôle.
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStream/multicastAvailabilitySendToAll" class="- topic/link "><linktext class="- topic/linktext ">multicastAvailabilitySendToAll</linktext></link><link href="flash.net.xml#NetStream/multicastFetchPeriod" class="- topic/link "><linktext class="- topic/linktext ">multicastFetchPeriod</linktext></link><link href="flash.net.xml#NetStream/multicastWindowDuration" class="- topic/link "><linktext class="- topic/linktext ">multicastWindowDuration</linktext></link></related-links></apiValue><apiValue id="flash.net:NetStream:multicastFetchPeriod:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">multicastFetchPeriod</apiName><shortdesc class="- topic/shortdesc ">
     Pour les connexions RTMFP, spécifie la durée, en secondes, entre le moment où le nœud local apprend qu’un fragment multimédia de multidiffusion homologue à homologue est disponible et le moment où il tente d’extraire ce fragment d’un homologue. </shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Pour les connexions RTMFP, spécifie la durée, en secondes, entre le moment où le nœud local apprend qu’un fragment multimédia de multidiffusion homologue à homologue est disponible et le moment où il tente d’extraire ce fragment d’un homologue. Cette valeur donne la possibilité d’envoyer le fragment au nœud local de façon dynamique avant qu’un homologue ne tente une extraction. Elle permet également à plusieurs homologues d’annoncer la disponibilité du fragment, de manière à ce que le chargement de l’extraction puisse être réparti entre plusieurs homologues.
     
     <p class="- topic/p ">Des valeurs plus élevées peuvent améliorer l’équilibrage de charge et son équité dans le maillage homologue à homologue, mais réduire la <codeph class="+ topic/ph pr-d/codeph ">multicastWindowDuration</codeph> et augmenter le temps d’attente. Des valeurs plus petites peuvent réduire le temps d’attente lorsque l’extraction est requise, mais risquent d’augmenter la réception des données dupliquées et de réduire l’équilibrage de charge du maillage homologue à homologue.</p>
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStream/multicastAvailabilityUpdatePeriod" class="- topic/link "><linktext class="- topic/linktext ">multicastAvailabilityUpdatePeriod</linktext></link><link href="flash.net.xml#NetStream/multicastWindowDuration" class="- topic/link "><linktext class="- topic/linktext ">multicastWindowDuration</linktext></link></related-links></apiValue><apiValue id="flash.net:NetStream:multicastInfo:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">multicastInfo</apiName><shortdesc class="- topic/shortdesc ">
     Pour les connexions RTMFP, renvoie un objet NetStreamMulticastInfo dont les propriétés contiennent des statistiques sur la qualité du service.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.net:NetStreamMulticastInfo</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Pour les connexions RTMFP, renvoie un objet NetStreamMulticastInfo dont les propriétés contiennent des statistiques sur la qualité du service. L’objet est un instantané de l’état en cours.
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStreamMulticastInfo" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetStreamMulticastInfo</linktext></link></related-links></apiValue><apiValue id="flash.net:NetStream:multicastPushNeighborLimit:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">multicastPushNeighborLimit</apiName><shortdesc class="- topic/shortdesc ">
     Pour les connexions RTMFP, spécifie le nombre maximum d’homologues auxquels envoyer les fragments multimédias de multidiffusion.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Pour les connexions RTMFP, spécifie le nombre maximum d’homologues auxquels envoyer les fragments multimédias de multidiffusion.
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:NetStream:multicastRelayMarginDuration:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">multicastRelayMarginDuration</apiName><shortdesc class="- topic/shortdesc ">
     Pour les connexions RTMFP, spécifie la durée, en secondes, pendant laquelle les données de multidiffusion homologue à homologue sont disponibles aux homologues qui souhaitent procéder à leur envoi au-delà d’une durée spécifiée.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Pour les connexions RTMFP, spécifie la durée, en secondes, pendant laquelle les données de multidiffusion homologue à homologue sont disponibles aux homologues qui souhaitent procéder à leur envoi au-delà d’une durée spécifiée. La durée est spécifiée par la propriété <codeph class="+ topic/ph pr-d/codeph ">multicastWindowDuration</codeph>.
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStream/multicastWindowDuration" class="- topic/link "><linktext class="- topic/linktext ">multicastWindowDuration</linktext></link></related-links></apiValue><apiValue id="flash.net:NetStream:multicastWindowDuration:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">multicastWindowDuration</apiName><shortdesc class="- topic/shortdesc ">
     Pour les connexions RTMFP, spécifie la durée, en secondes, de la fenêtre de réassamblage multidiffusion homologue à homologue.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Pour les connexions RTMFP, spécifie la durée, en secondes, de la fenêtre de réassamblage multidiffusion homologue à homologue. Des valeurs plus petites réduisent le temps d’attente, mais risquent de réduire la qualité, car elles ne fournissent pas assez de temps pour obtenir tous les fragments. Inversement, des valeurs plus élevées peuvent augmenter la qualité en fournissant plus de temps pour obtenir tous les fragments tout en augmentant le temps d’attente. 
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStream/multicastRelayMarginDuration" class="- topic/link "><linktext class="- topic/linktext ">multicastRelayMarginDuration</linktext></link></related-links></apiValue><apiValue id="flash.net:NetStream:nearNonce:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">nearNonce</apiName><shortdesc class="- topic/shortdesc ">
     Pour les connexions RTMFP et RTMPE, une valeur choisie fondamentalement par cette extrémité du flux, unique à cette connexion.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Pour les connexions RTMFP et RTMPE, une valeur choisie fondamentalement par cette extrémité du flux, unique à cette connexion. Cette valeur apparaît à l’autre extrémité du flux en tant que valeur <codeph class="+ topic/ph pr-d/codeph ">farNonce</codeph>.
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:NetStream:objectEncoding:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">objectEncoding</apiName><shortdesc class="- topic/shortdesc ">
     Encodage d’objet (version AMF) de cet objet NetStream.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">uint</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Encodage d’objet (version AMF) de cet objet NetStream. L’objet NetStream hérite de sa valeur <codeph class="+ topic/ph pr-d/codeph ">objectEncoding</codeph> de l’objet NetConnection associé. Il est important de comprendre cette propriété si votre fichier SWF ActionScript 3.0 doit communiquer avec des serveurs antérieurs à Flash Player 9. Pour plus d’informations, voir la description de la propriété <codeph class="+ topic/ph pr-d/codeph ">objectEncoding</codeph> dans la classe NetConnection.
     
     <p class="- topic/p ">La valeur de cette propriété varie selon la nature du flux continu, local ou distant. Les flux locaux, dans lesquels <codeph class="+ topic/ph pr-d/codeph ">null</codeph> a été transmis à la méthode <codeph class="+ topic/ph pr-d/codeph ">NetConnection.connect()</codeph>, renvoient la valeur de <codeph class="+ topic/ph pr-d/codeph ">NetConnection.defaultObjectEncoding</codeph>. Les flux distants, pour lesquels vous êtes connecté(e) à un serveur, renvoient l’encodage d’objet de la connexion au serveur.</p>
     
     <p class="- topic/p ">Si vous tentez de lire cette propriété sans être connecté ou si vous tentez de la modifier, l’application renvoie une exception.</p>
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetConnection/objectEncoding" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetConnection.objectEncoding</linktext></link></related-links></apiValue><apiValue id="flash.net:NetStream:peerStreams:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">peerStreams</apiName><shortdesc class="- topic/shortdesc ">
     
     Objet qui détient toutes les occurrences NetStream d’abonnement qui écoutent cette occurrence de NetStream de publication.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Array</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     
     Objet qui détient toutes les occurrences NetStream d’abonnement qui écoutent cette occurrence de NetStream de publication.
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:NetStream:soundTransform:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">soundTransform</apiName><shortdesc class="- topic/shortdesc ">
     Contrôle le son dans l’objet NetStream.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.media:SoundTransform</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Contrôle le son dans l’objet NetStream. Pour plus d’informations, voir la description de la classe SoundTransform.
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.media.xml#SoundTransform" class="- topic/link "><linktext class="- topic/linktext ">flash.media.SoundTransform</linktext></link></related-links></apiValue><apiValue id="flash.net:NetStream:time:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">time</apiName><shortdesc class="- topic/shortdesc ">
     Position de la tête de lecture, en secondes.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">NetStream.time, time
     
     </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Position de la tête de lecture, en secondes.
     <p class="- topic/p ">
     <b class="+ topic/ph hi-d/b ">Flash Media Server</b> Dans le cas d’un flux d’abonnement, nombre de secondes pendant lequel le flux a été lu. Dans le cas d’un flux de publication, nombre de secondes pendant lequel le flux a été publié. Ce nombre est précis au millième près ; multipliez-le par 1000 pour obtenir le nombre de millisecondes pendant lequel le flux a été lu.
     </p>
     <p class="- topic/p ">
     Dans le cas d’un flux d’abonnement, si le serveur cesse d’envoyer des données et que le flux demeure ouvert, la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">time</codeph> cesse d’avancer. Lorsque le serveur recommence à envoyer des données, la valeur continue d’avancer à partir du point où elle s’est arrêtée (c’est-à-dire lorsque le serveur a cessé l’envoi des données).
     </p>
     <p class="- topic/p ">
     La valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">time</codeph> continue d’avancer lorsque le flux bascule d’un élément de la liste de lecture à un autre. Cette propriété est définie sur 0 lorsque <codeph class="+ topic/ph pr-d/codeph ">NetStream.play()</codeph> est appelé avec <codeph class="+ topic/ph pr-d/codeph ">reset</codeph> défini sur <codeph class="+ topic/ph pr-d/codeph ">1</codeph> ou sur <codeph class="+ topic/ph pr-d/codeph ">true</codeph>, ou lorsque <codeph class="+ topic/ph pr-d/codeph ">NetStream.close()</codeph> est appelé.
     </p>
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStream/bufferLength" class="- topic/link "><linktext class="- topic/linktext ">bufferLength</linktext></link><link href="flash.net.xml#NetStream/bytesLoaded" class="- topic/link "><linktext class="- topic/linktext ">bytesLoaded</linktext></link></related-links></apiValue><apiValue id="flash.net:NetStream:videoReliable:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">videoReliable</apiName><shortdesc class="- topic/shortdesc ">
     
     Pour les connexions RTMFP, indique si les données vidéo sont envoyées en toute fiabilité.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     
     Pour les connexions RTMFP, indique si les données vidéo sont envoyées en toute fiabilité. Lorsque cette propriété est définie sur TRUE, toutes les données vidéo transmises sur ce NetStream sont totalement fiables. Si elle est définie sur FALSE, les données vidéo transmises ne sont pas totalement fiables ; elles sont retransmises pour une durée limitée, puis abandonnées. Vous pouvez utiliser la valeur FALSE pour réduire le temps d’attente au détriment de la qualité vidéo.
     
     <p class="- topic/p ">Si vous tentez de définir cette propriété sur FALSE sur un protocole réseau qui ne prend pas en charge la fiabilité partielle, la tentative est ignorée et la propriété est définie sur TRUE.</p>
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStream/audioReliable" class="- topic/link "><linktext class="- topic/linktext ">audioReliable</linktext></link><link href="flash.net.xml#NetStream/dataReliable" class="- topic/link "><linktext class="- topic/linktext ">dataReliable</linktext></link></related-links></apiValue><apiValue id="flash.net:NetStream:videoSampleAccess:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">videoSampleAccess</apiName><shortdesc class="- topic/shortdesc ">
     
     Pour les connexions RTMFP, indique si les abonnés homologue à homologue de ce flux de réseau sont autorisés à capturer le flux vidéo.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     
     Pour les connexions RTMFP, indique si les abonnés homologue à homologue de ce flux de réseau sont autorisés à capturer le flux vidéo. Lorsque la valeur FALSE est définie, l’abonné tente de capturer le flux vidéo pour afficher les erreurs d’autorisation.
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStream/audioSampleAccess" class="- topic/link "><linktext class="- topic/linktext ">audioSampleAccess</linktext></link></related-links></apiValue></apiClassifier><apiClassifier languages="" id="flash.net:NetMonitor" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">NetMonitor</apiName><shortdesc class="- topic/shortdesc ">
 La classe NetMonitor permet de surveiller les objets NetStream utilisés par une application.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.3" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="2.7" name="Flash" version="AIR" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:EventDispatcher</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 La classe NetMonitor permet de surveiller les objets NetStream utilisés par une application.
 
 <p class="- topic/p ">Utilisez la classe NetMonitor pour obtenir la liste actuelle des objets NetStream en cours d’utilisation dans une application. Une occurrence de cette classe distribue un événement <codeph class="+ topic/ph pr-d/codeph ">netStreamCreate</codeph> chaque fois qu’un nouvel objet NetStream est créé.</p>
 
 <p class="- topic/p ">Vous pouvez utiliser la classe NetMonitor pour vous aider à suivre la lecture de la vidéo et les événements liés, indépendamment du lecteur vidéo en cours d’utilisation. Cela peut s’avérer utile lors de la mesure de médias, d’analyses, et de l’utilisation de bibliothèques de suivi.</p>
 
 <p class="- topic/p "><b class="+ topic/ph hi-d/b "/></p>
 
 </apiDesc><example conref="examples\NetMonitorExample.as" class="- topic/example "> Cet exemple montre comment la classe NetMonitor peut être utilisée en vue d’accéder aux informations de l’objet NetStream sans savoir exactement quel lecteur vidéo est en cours d’utilisation. Ici, la classe MediaPlayerSprite du projet Open Screen Media Framework (OSMF) est utilisée, mais n’importe quel lecteur vidéo pourrait être remplacé.
 
 <p class="- topic/p ">Vous pouvez utiliser la barre d’espace pour mettre en pause et reprendre la lecture de la vidéo dans l’exemple, et les flèches droite et gauche pour effectuer une recherche vers l’avant ou vers l’arrière de 30 secondes afin de connaître les effets de ces actions sur les événements distribués.</p>
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
package
{
    import flash.display.Sprite;
    import flash.display.StageAlign;
    import flash.display.StageScaleMode;
    import flash.events.KeyboardEvent;
    import flash.events.NetDataEvent;
    import flash.events.NetMonitorEvent;
    import flash.events.NetStatusEvent;
    import flash.net.NetMonitor;
    import flash.net.NetStream;
    import flash.ui.Keyboard;
    
    import org.osmf.elements.VideoElement;
    import org.osmf.media.MediaPlayer;
    import org.osmf.media.MediaPlayerSprite;
    import org.osmf.net.DynamicStreamingItem;
    import org.osmf.net.DynamicStreamingResource;

    public class NetMonitorExample extends Sprite
    {
        private var netmon:NetMonitor;
        private var mediaPlayer:MediaPlayer;
        
        public function NetMonitorExample()
        {
            //Configure stage
            this.stage.align = StageAlign.TOP_LEFT;
            this.stage.scaleMode = StageScaleMode.NO_SCALE;
             
            //Create NetMonitor object
            netmon = new flash.net.NetMonitor();
            netmon.addEventListener(NetMonitorEvent.NET_STREAM_CREATE, newNetStream );    
            
            //Setup video player
            var mediaPlayerSprite:MediaPlayerSprite = new MediaPlayerSprite();
            var videoElement:VideoElement = new VideoElement();
            var dynResource:DynamicStreamingResource = new DynamicStreamingResource( "rtmp://cp67126.edgefcs.net/ondemand" );
            
            dynResource.streamItems = Vector.&lt;DynamicStreamingItem>(
                [     new DynamicStreamingItem( "mp4:mediapm/ovp/content/demo/video/elephants_dream/elephants_dream_768x428_24.0fps_408kbps.mp4", 408, 768, 428 )
                    , new DynamicStreamingItem( "mp4:mediapm/ovp/content/demo/video/elephants_dream/elephants_dream_768x428_24.0fps_608kbps.mp4", 608, 768, 428 )
                    , new DynamicStreamingItem( "mp4:mediapm/ovp/content/demo/video/elephants_dream/elephants_dream_1024x522_24.0fps_908kbps.mp4", 908, 1024, 522 )
                    , new DynamicStreamingItem( "mp4:mediapm/ovp/content/demo/video/elephants_dream/elephants_dream_1024x522_24.0fps_1308kbps.mp4", 1308, 1024, 522 )
                    , new DynamicStreamingItem( "mp4:mediapm/ovp/content/demo/video/elephants_dream/elephants_dream_1280x720_24.0fps_1708kbps.mp4", 1708, 1280, 720 )
                ]);
            
            videoElement.resource = dynResource;
            
            addChild( mediaPlayerSprite );
            mediaPlayerSprite.media = videoElement;  
            mediaPlayer = mediaPlayerSprite.mediaPlayer;
            this.stage.addEventListener( KeyboardEvent.KEY_DOWN, keyControl ); 
        }    
        
        //On new NetStream
        private function newNetStream( event:NetMonitorEvent ):void
        {
            trace( "New Netstream object ");
            var stream:NetStream = event.netStream;
            stream.addEventListener(NetDataEvent.MEDIA_TYPE_DATA, onStreamData);
            stream.addEventListener(NetStatusEvent.NET_STATUS, onStatus);
        }
        
        //On data events from a NetStream object 
        private function onStreamData( event:NetDataEvent ):void
        {
            trace( "Data event at " + event.timestamp );
            var netStream:NetStream = event.target as NetStream;
            switch( event.info.handler )
            {
                case "onMetaData":
                    trace( "--MetaData: " +  stringify( netStream.info.metaData ));
                    break;
                case "onXMPData":
                    trace( "--XMPData: " + stringify( netStream.info.xmpData ));
                    break;
                default:
                    trace( "--" + event.info.handler + ": " + stringify(event.info.args[0]) );
                    
            }
        }
        
        //On status events from a NetStream object
        private function onStatus( event:NetStatusEvent ):void
        {
            trace( "Status: " + stringify( event.info ) );
        }
        
        //Utility function to print out object properties
        private function stringify( object:Object ):String
        {
            var string:String = "";
            
            var prop:String;
            var comma:Boolean = false;
            for ( prop in object )
            {
                if( comma ) string += ", ";
                else comma = true;
                
                if( typeof(object[prop]) == "object" ) 
                {
                    stringify( object[prop] )
                } else    string +=  prop + " = " + object[prop];
            }
            return string;
        }
        
        //Simple keyboard control for the video player
        private function keyControl( event:KeyboardEvent ):void
        {
            switch ( event.keyCode )
            {
                case Keyboard.SPACE:
                    if( mediaPlayer.paused ) mediaPlayer.play();
                    else mediaPlayer.pause();
                    break;
                case Keyboard.RIGHT:
                    mediaPlayer.seek( mediaPlayer.currentTime + 30 );
                    break;
                case Keyboard.LEFT:
                    mediaPlayer.seek( mediaPlayer.currentTime - 30 );
                    break;
                default:
                    //do nothing
            }
        }    
    }
} 
</codeblock></example></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStream" class="- topic/link "><linktext class="- topic/linktext ">NetStream</linktext></link></related-links><adobeApiEvent id="flash.net:NetMonitor_flash.events.NetMonitorEvent.NET_STREAM_CREATE_netStreamCreate" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">netStreamCreate</apiName><shortdesc class="- topic/shortdesc ">
 Distribué lorsqu’un nouvel objet NetStream est créé dans le contexte de sécurité de cette occurrence de NetMonitor.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.3" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="2.7" name="Flash" version="AIR" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.NetMonitorEvent.NET_STREAM_CREATE</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.NetMonitorEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Distribué lorsqu’un nouvel objet NetStream est créé dans le contexte de sécurité de cette occurrence de NetMonitor.
 
 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Remarque :</b> si la surveillance des objets NetStream n’est pas prise en charge sur la plate-forme actuelle, les événements <codeph class="+ topic/ph pr-d/codeph ">netStreamCreate</codeph> ne sont pas distribués.</p>
 
 </apiDesc></adobeApiEventDetail></adobeApiEvent><apiOperation id="flash.net:NetMonitor:listStreams" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">listStreams</apiName><shortdesc class="- topic/shortdesc ">
	 Extrait tous les objets NetStream appartenant au contexte de sécurité de cet objet NetMonitor.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.3" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="2.7" name="Flash" version="AIR" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Vecteur des objets NetStream
 	</apiDesc><apiType value="Vector$flash.net:NetStream" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Extrait tous les objets NetStream appartenant au contexte de sécurité de cet objet NetMonitor.
 	 
 	 <p class="- topic/p ">Evitez la mise en cache de la liste des objets NetStream. </p>
 	  
	 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Remarque : </b> si la surveillance des objets NetStream n’est pas prise en charge sur la plate-forme actuelle, la liste renvoyée par cette fonction est toujours vide.</p>
	 
 	 </apiDesc></apiOperationDetail></apiOperation></apiClassifier><apiClassifier languages="" id="flash.net:NetStreamInfo" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">NetStreamInfo</apiName><shortdesc class="- topic/shortdesc ">
 
 La classe NetStreamInfo spécifie les diverses statistiques de Qualité de Service (QOS) et autres informations liées à un objet NetStream et le tampon de flux sous-jacent pour l’audio, la vidéo et les données.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 
 La classe NetStreamInfo spécifie les diverses statistiques de Qualité de Service (QOS) et autres informations liées à un objet NetStream et le tampon de flux sous-jacent pour l’audio, la vidéo et les données. Un objet NetStreamInfo est renvoyé en réponse à l’appel de <codeph class="+ topic/ph pr-d/codeph ">NetStream.info</codeph>, qui prend un instantané de l’état QOS actuel et fournit les statistiques QOS via les propriétés NetStreamInfo.
 
 </apiDesc></apiClassifierDetail><apiOperation id="flash.net:NetStreamInfo:toString" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">toString</apiName><shortdesc class="- topic/shortdesc ">
     Renvoie une valeur de texte donnant la liste des propriétés de l’objet NetStreamInfo.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Chaîne contenant les valeurs des propriétés de l’objet NetStreamInfo.
     
     
      </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Renvoie une valeur de texte donnant la liste des propriétés de cet objet NetStreamInfo.
     </apiTipText></apiTipTexts></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Renvoie une valeur de texte donnant la liste des propriétés de l’objet NetStreamInfo.
     
     </apiDesc></apiOperationDetail></apiOperation><apiValue id="flash.net:NetStreamInfo:SRTT:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">SRTT</apiName><shortdesc class="- topic/shortdesc ">
     Temps de boucle corrigé (SRTT, Smoothed Round Trip Time) de la session NetStream, en millisecondes.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Temps de boucle corrigé (SRTT, Smoothed Round Trip Time) de la session NetStream, en millisecondes. Cette propriété contient une valeur valide uniquement pour les flux de données RTMFP. Pour les flux de données RTMP, la valeur est 0.
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetGroup" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetGroup</linktext></link></related-links></apiValue><apiValue id="flash.net:NetStreamInfo:audioBufferByteLength:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">audioBufferByteLength</apiName><shortdesc class="- topic/shortdesc ">
     Fournit la taille du tampon audio Netstream, en octets.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Fournit la taille du tampon audio Netstream, en octets. La propriété spécifie la taille du tampon pour les données audio du support de diffusion en continu, en direct et enregistré. Cette propriété est similaire à <codeph class="+ topic/ph pr-d/codeph ">Netstream.bytesLoaded</codeph>, utilisée dans les téléchargements progressifs.
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:NetStreamInfo:audioBufferLength:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">audioBufferLength</apiName><shortdesc class="- topic/shortdesc ">
     Fournit la taille du tampon audio Netstream, en secondes.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Fournit la taille du tampon audio Netstream, en secondes. Cette propriété étend la propriété <codeph class="+ topic/ph pr-d/codeph ">NetStream.bufferLength</codeph> et fournit la durée du tampon, en particulier pour les données audio.
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:NetStreamInfo:audioByteCount:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">audioByteCount</apiName><shortdesc class="- topic/shortdesc ">
     Spécifie le nombre total d’octets audio arrivés en file d’attente, quelle que soit la quantité déjà lue ou vidée.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Spécifie le nombre total d’octets audio arrivés en file d’attente, quelle que soit la quantité déjà lue ou vidée. Vous pouvez utiliser cette valeur pour calculer la cadence des données audio entrantes, en utilisant la mesure de votre choix, et en créant une horloge et en calculant la différence entre les valeurs des appels successifs à l’horloge. Vous pouvez également utiliser <codeph class="+ topic/ph pr-d/codeph ">audioBytesPerSecond</codeph>.
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStreamInfo/audioBytesPerSecond" class="- topic/link "><linktext class="- topic/linktext ">audioBytesPerSecond</linktext></link></related-links></apiValue><apiValue id="flash.net:NetStreamInfo:audioBytesPerSecond:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">audioBytesPerSecond</apiName><shortdesc class="- topic/shortdesc ">
     Spécifie la cadence à laquelle le tampon audio NetStream est rempli, en octets par seconde.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Spécifie la cadence à laquelle le tampon audio NetStream est rempli, en octets par seconde. La valeur est calculée en tant que moyenne des données audio reçues au cours de la dernière seconde.
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:NetStreamInfo:audioLossRate:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">audioLossRate</apiName><shortdesc class="- topic/shortdesc ">
     Spécifie la perte audio de la session NetStream.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Spécifie la perte audio de la session NetStream. Cette valeur ne renvoie une valeur valide que pour les flux RTMFP et renvoie 0 pour les flux RTMP. La perte audio est le rapport entre les messages perdus et le total des messages.
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:NetStreamInfo:byteCount:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">byteCount</apiName><shortdesc class="- topic/shortdesc ">
     Spécifie le nombre total d’octets audio arrivés en file d’attente, quelle que soit la quantité déjà lue ou vidée.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Spécifie le nombre total d’octets audio arrivés en file d’attente, quelle que soit la quantité déjà lue ou vidée. Vous pouvez utiliser cette valeur pour calculer la cadence des données entrantes, en utilisant la mesure de votre choix, et en créant une horloge et en calculant la différence entre les valeurs des appels successifs à l’horloge. Vous pouvez également utiliser <codeph class="+ topic/ph pr-d/codeph ">currentBytesPerSecond</codeph>.
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStreamInfo/currentBytesPerSecond" class="- topic/link "><linktext class="- topic/linktext ">currentBytesPerSecond</linktext></link></related-links></apiValue><apiValue id="flash.net:NetStreamInfo:currentBytesPerSecond:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">currentBytesPerSecond</apiName><shortdesc class="- topic/shortdesc ">
     Spécifie la cadence à laquelle le tampon Netstream est rempli, en octets par seconde.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Spécifie la cadence à laquelle le tampon Netstream est rempli, en octets par seconde. La valeur est calculée en tant que moyenne des données reçues au cours de la dernière seconde.
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:NetStreamInfo:dataBufferByteLength:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">dataBufferByteLength</apiName><shortdesc class="- topic/shortdesc ">
     Fournit la taille du tampon de données Netstream, en octets.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Fournit la taille du tampon de données Netstream, en octets. La propriété spécifie la taille du tampon pour les messages de données su support de diffusion en continu, en direct et enregistré. Cette propriété est similaire à <codeph class="+ topic/ph pr-d/codeph ">Netstream.bytesLoaded</codeph>, utilisée dans les téléchargements progressifs.
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:NetStreamInfo:dataBufferLength:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">dataBufferLength</apiName><shortdesc class="- topic/shortdesc ">
     Fournit la taille du tampon des données Netstream, en secondes.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Fournit la taille du tampon des données Netstream, en secondes. Cette propriété étend la propriété <codeph class="+ topic/ph pr-d/codeph ">NetStream.bufferLength</codeph> et fournit la durée du tampon, en particulier pour les messages de données.
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:NetStreamInfo:dataByteCount:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">dataByteCount</apiName><shortdesc class="- topic/shortdesc ">
     Spécifie le nombre total d’octets de messages de données arrivés en file d’attente, quelle que soit la quantité déjà lue ou vidée.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Spécifie le nombre total d’octets de messages de données arrivés en file d’attente, quelle que soit la quantité déjà lue ou vidée. Vous pouvez utiliser cette valeur pour calculer la cadence des messages de données entrants, en utilisant la mesure de votre choix, et en créant une horloge et en calculant la différence entre les valeurs des appels successifs à l’horloge. Vous pouvez également utiliser <codeph class="+ topic/ph pr-d/codeph ">dataBytesPerSecond</codeph>.
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStreamInfo/dataBytesPerSecond" class="- topic/link "><linktext class="- topic/linktext ">dataBytesPerSecond</linktext></link></related-links></apiValue><apiValue id="flash.net:NetStreamInfo:dataBytesPerSecond:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">dataBytesPerSecond</apiName><shortdesc class="- topic/shortdesc ">
     Spécifie la cadence à laquelle le tampon de données NetStream est rempli, en octets par seconde.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Spécifie la cadence à laquelle le tampon de données NetStream est rempli, en octets par seconde. La valeur est calculée en tant que moyenne des messages de données reçus au cours de la dernière seconde.
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:NetStreamInfo:droppedFrames:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">droppedFrames</apiName><shortdesc class="- topic/shortdesc ">
     Renvoie le nombre d’images vidéo abandonnées dans la session de lecture NetStream en cours.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Renvoie le nombre d’images vidéo abandonnées dans la session de lecture NetStream en cours.
     <p class="- topic/p ">Dans le cas de téléchargement de flux enregistrés ou progressifs, si la vidéo est de qualité ou de résolution élevée, le décodeur peut être en retard dans le décodage du nombre requis d’images par seconde s’il ne dispose pas des ressources CPU système adéquates. En flux continu en direct, le tampon abandonne les images vidéo si le retard devient trop important. Cette propriété spécifie le nombre d’images abandonnées et non présentées normalement.</p>
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:NetStreamInfo:isLive:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">isLive</apiName><shortdesc class="- topic/shortdesc ">
      Indique si le média en cours de lecture est enregistré ou en direct.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.3" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2.7" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
      Indique si le média en cours de lecture est enregistré ou en direct. Cette propriété est pertinente uniquement pour la diffusion en continu RTMP. Pour un téléchargement progressif et la diffusion en continu HTTP dynamique, cette propriété est toujours <codeph class="+ topic/ph pr-d/codeph ">false</codeph>.
      
 	  <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Remarque :</b> cette propriété est toujours définie sur <codeph class="+ topic/ph pr-d/codeph ">false</codeph> dans Flash Player dans le navigateur sur Android et le système d’exploitation des tablettes Blackberry ou dans AIR sur iOS.</p>
	  
      </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:NetStreamInfo:maxBytesPerSecond:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">maxBytesPerSecond</apiName><shortdesc class="- topic/shortdesc ">
     Spécifie la cadence maximale à laquelle le tampon NetStream est rempli, en octets par seconde.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Spécifie la cadence maximale à laquelle le tampon NetStream est rempli, en octets par seconde. Cette valeur fournit des informations sur la capacité du réseau du client sur la base des derniers messages reçus par l’objet <codeph class="+ topic/ph pr-d/codeph ">NetStream</codeph>. Selon la taille du tampon spécifié dans <codeph class="+ topic/ph pr-d/codeph ">NetStream.bufferTime</codeph> et la bande passante disponible sur le client, Flash Media Server remplit le tampon en rafales. Cette propriété fournit la cadence maximale à laquelle le tampon du client est rempli.
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:NetStreamInfo:metaData:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">metaData</apiName><shortdesc class="- topic/shortdesc ">
      Objet de métadonnées le plus récent associé au média en cours de lecture.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.3" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2.7" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Object</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
      Objet de métadonnées le plus récent associé au média en cours de lecture.
      
 	  <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Remarque :</b> cette propriété est toujours définie sur <codeph class="+ topic/ph pr-d/codeph ">null</codeph> dans Flash Player dans le navigateur sur Android et le système d’exploitation des tablettes Blackberry ou dans AIR sur iOS.</p>
	  
      </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:NetStreamInfo:playbackBytesPerSecond:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">playbackBytesPerSecond</apiName><shortdesc class="- topic/shortdesc ">
     Renvoie la cadence de lecture du flux, en octets par seconde.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Renvoie la cadence de lecture du flux, en octets par seconde. Le tampon de lecture peut contenir diverses listes de lecture. Cette propriété fournit la cadence de lecture correspondant le mieux à la vitesse de transmission du flux de données en cours de lecture.
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:NetStreamInfo:resourceName:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">resourceName</apiName><shortdesc class="- topic/shortdesc ">
      Nom de la ressource utilisée lors de l’appel de NetStream.play().</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.3" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2.7" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Nom de la ressource utilisée lors de l’appel de NetStream.play().
      </apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
      Nom de la ressource utilisée lors de l’appel de <codeph class="+ topic/ph pr-d/codeph ">NetStream.play()</codeph>. Cette propriété indique l’adresse URL complète pour le téléchargement progressif, le nom de la ressource pour la diffusion en continu RTMP et la valeur <codeph class="+ topic/ph pr-d/codeph ">null</codeph> pour la diffusion en continu HTTP.
      
 	  <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Remarque :</b> cette propriété est toujours définie sur <codeph class="+ topic/ph pr-d/codeph ">null</codeph> dans Flash Player dans le navigateur sur Android et le système d’exploitation des tablettes Blackberry ou dans AIR sur iOS.</p>
	  
	  </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="" invalidHref="flash.media.xml#NetStream/play()" class="- topic/link "><linktext class="- topic/linktext ">flash.media.NetStream.play()</linktext></link></related-links></apiValue><apiValue id="flash.net:NetStreamInfo:uri:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">uri</apiName><shortdesc class="- topic/shortdesc ">
      URI utilisée lors de l’appel de NetConnection.connect().</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.3" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2.7" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">URI utilisée lors de l’appel de NetConnection.connect().
	  
      </apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
      URI utilisée lors de l’appel de <codeph class="+ topic/ph pr-d/codeph ">NetConnection.connect()</codeph>. Cette valeur est <codeph class="+ topic/ph pr-d/codeph ">null</codeph> pour un téléchargement progressif ou une diffusion en continu HTTP.
      
 	  <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Remarque :</b> cette propriété est toujours définie sur <codeph class="+ topic/ph pr-d/codeph ">null</codeph> dans Flash Player dans le navigateur sur Android et le système d’exploitation des tablettes Blackberry ou dans AIR sur iOS.</p>
	  
	  </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="" invalidHref="flash.media.xml#NetConnection/uri" class="- topic/link "><linktext class="- topic/linktext ">flash.media.NetConnection.uri</linktext></link></related-links></apiValue><apiValue id="flash.net:NetStreamInfo:videoBufferByteLength:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">videoBufferByteLength</apiName><shortdesc class="- topic/shortdesc ">
     Fournit la taille du tampon vidéo Netstream, en octets.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Fournit la taille du tampon vidéo Netstream, en octets. La propriété spécifie la taille du tampon pour les données vidéo du support de diffusion en continu, en direct et enregistré. Cette propriété est similaire à <codeph class="+ topic/ph pr-d/codeph ">Netstream.bytesLoaded</codeph>, utilisée dans les téléchargements progressifs.
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:NetStreamInfo:videoBufferLength:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">videoBufferLength</apiName><shortdesc class="- topic/shortdesc ">
     Fournit la taille du tampon vidéo Netstream, en secondes.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Fournit la taille du tampon vidéo Netstream, en secondes. Cette propriété étend la propriété <codeph class="+ topic/ph pr-d/codeph ">NetStream.bufferLength</codeph> et fournit la durée du tampon en secondes, en particulier pour les données vidéo.
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:NetStreamInfo:videoByteCount:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">videoByteCount</apiName><shortdesc class="- topic/shortdesc ">
     Spécifie le nombre total d’octets vidéo arrivés en file d’attente, quelle que soit la quantité déjà lue ou vidée.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Spécifie le nombre total d’octets vidéo arrivés en file d’attente, quelle que soit la quantité déjà lue ou vidée. Vous pouvez utiliser cette valeur pour calculer la cadence des données vidéo entrantes, en utilisant la mesure de votre choix, et en créant une horloge et en calculant la différence entre les valeurs des appels successifs à l’horloge. Vous pouvez également utiliser <codeph class="+ topic/ph pr-d/codeph ">videoBytesPerSecond</codeph>.
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStreamInfo/videoBytesPerSecond" class="- topic/link "><linktext class="- topic/linktext ">videoBytesPerSecond</linktext></link></related-links></apiValue><apiValue id="flash.net:NetStreamInfo:videoBytesPerSecond:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">videoBytesPerSecond</apiName><shortdesc class="- topic/shortdesc ">
     Spécifie la cadence à laquelle le tampon vidéo NetStream est rempli, en octets par seconde.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Spécifie la cadence à laquelle le tampon vidéo NetStream est rempli, en octets par seconde. La valeur est calculée en tant que moyenne des données vidéo reçues au cours de la dernière seconde.
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:NetStreamInfo:videoLossRate:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">videoLossRate</apiName><shortdesc class="- topic/shortdesc ">
     Indique le taux de perte vidéo du flux de réseau (taux de messages perdus par rapport au nombre total de messages).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Indique le taux de perte vidéo du flux de réseau (taux de messages perdus par rapport au nombre total de messages).
     
     <p class="- topic/p ">Lorsque le message est plus petit que l’unité de transmission maximale (UTM), cette valeur correspond au taux de perte de paquets réseau.</p>
     
     <p class="- topic/p ">Cette propriété renvoie une valeur valide uniquement pour les flux RTMFP. Pour les flux RTMP, elle renvoie une valeur de zéro. Pour plus d’informations, voir la <xref href="http://www.adobe.com/go/learn_fms_docs_fr" scope="external" class="- topic/xref ">documentation de Flash Media Server</xref>.</p>
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:NetStreamInfo:xmpData:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">xmpData</apiName><shortdesc class="- topic/shortdesc ">
      Objet de données XMP le plus récent associé au média en cours de lecture.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.3" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2.7" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Object</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
      Objet de données XMP le plus récent associé au média en cours de lecture. 
      
 	  <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Remarque :</b> cette propriété est toujours définie sur <codeph class="+ topic/ph pr-d/codeph ">null</codeph> dans Flash Player dans le navigateur sur Android et le système d’exploitation des tablettes Blackberry ou dans AIR sur iOS.</p>
	  
      </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.net:URLStream" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">URLStream</apiName><shortdesc class="- topic/shortdesc ">
 La classe URLStream offre un accès de bas niveau pour le téléchargement des URL.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiBaseInterface>flash.utils:IDataInput</apiBaseInterface><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:EventDispatcher</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 La classe URLStream offre un accès de bas niveau pour le téléchargement des URL. Les données sont mises à la disposition du code dès le début de leur téléchargement. Il n’est donc pas nécessaire d’attendre la fin du téléchargement du fichier comme avec URLLoader. La classe URLStream vous permet également de fermer un flux continu avant la fin du téléchargement. Le contenu du fichier téléchargé est disponible sous forme de données binaires brutes.
 
 <p class="- topic/p ">Les opérations de lecture dans URLStream ne sont pas bloquantes. Cela signifie que vous devez utiliser la propriété <codeph class="+ topic/ph pr-d/codeph ">bytesAvailable</codeph> pour déterminer si suffisamment de données sont disponibles avant de tenter de les lire. Si les données disponibles sont insuffisantes, une exception <codeph class="+ topic/ph pr-d/codeph ">EOFError</codeph> est renvoyée.</p>
 
 <p class="- topic/p ">Toutes les données binaires sont codées par défaut au format BE (gros-boutiste), l’octet le plus significatif étant en première position.</p>
 
 <p class="- topic/p ">Les règles de sécurité qui s’appliquent au téléchargement d’URL avec la classe URLStream sont identiques à celles appliquées aux objets URLLoader. Il est possible de télécharger les fichiers de régulation, si nécessaire. Les règles de sécurité des fichiers locaux sont appliquées et des avertissements de sécurité sont générés, si besoin est.</p>

 
 </apiDesc><example conref="examples\URLStreamExample.as" class="- topic/example "> L’exemple suivant charge un fichier SWF et analyse la première partie de son en-tête pour indiquer les informations relatives à la compression et au numéro de version. 
 <p class="- topic/p ">Pour exécuter l’exemple, placez un fichier intitulé URLStreamExample.swf dans le même répertoire que vos fichiers SWF.</p>
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">

package {
    import flash.display.Sprite;
    import flash.errors.*;
    import flash.events.*;
    import flash.net.URLRequest;
    import flash.net.URLStream;

    public class URLStreamExample extends Sprite {
        private static const ZLIB_CODE:String = "CWS";
        private var stream:URLStream;

        public function URLStreamExample() {
            stream = new URLStream();
            var request:URLRequest = new URLRequest("URLStreamExample.swf");
            configureListeners(stream);
            try {
                stream.load(request);
            } catch (error:Error) {
                trace("Unable to load requested URL.");
            }
        }

        private function configureListeners(dispatcher:EventDispatcher):void {
            dispatcher.addEventListener(Event.COMPLETE, completeHandler);
            dispatcher.addEventListener(HTTPStatusEvent.HTTP_STATUS, httpStatusHandler);
            dispatcher.addEventListener(IOErrorEvent.IO_ERROR, ioErrorHandler);
            dispatcher.addEventListener(Event.OPEN, openHandler);
            dispatcher.addEventListener(ProgressEvent.PROGRESS, progressHandler);
            dispatcher.addEventListener(SecurityErrorEvent.SECURITY_ERROR, securityErrorHandler);
        }

        private function parseHeader():void {
            trace("parseHeader");
            trace("isCompressed: " + isCompressed());
            trace("version: " + stream.readByte());
        }

        private function isCompressed():Boolean {
            return (stream.readUTFBytes(3) == ZLIB_CODE);
        }

        private function completeHandler(event:Event):void {
            trace("completeHandler: " + event);
            parseHeader();
        }

        private function openHandler(event:Event):void {
            trace("openHandler: " + event);
        }

        private function progressHandler(event:Event):void {
            trace("progressHandler: " + event);
        }

        private function securityErrorHandler(event:SecurityErrorEvent):void {
            trace("securityErrorHandler: " + event);
        }

        private function httpStatusHandler(event:HTTPStatusEvent):void {
            trace("httpStatusHandler: " + event);
        }

        private function ioErrorHandler(event:IOErrorEvent):void {
            trace("ioErrorHandler: " + event);
        }
    }
}
</codeblock></example></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.net.xml#URLLoader" class="- topic/link "><linktext class="- topic/linktext ">URLLoader</linktext></link><link href="flash.net.xml#URLRequest" class="- topic/link "><linktext class="- topic/linktext ">URLRequest</linktext></link></related-links><adobeApiEvent id="flash.net:URLStream_flash.events.ProgressEvent.PROGRESS_progress" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">progress</apiName><shortdesc class="- topic/shortdesc ">
 Distribué à la réception des données au fur et à mesure du téléchargement.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.ProgressEvent.PROGRESS</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.ProgressEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Distribué à la réception des données au fur et à mesure du téléchargement. Les données reçues peuvent être lues immédiatement à l’aide des méthodes de la classe URLStream.
 </apiDesc></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.net.xml#URLStream/load()" class="- topic/link "><linktext class="- topic/linktext ">URLStream.load()</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.net:URLStream_flash.events.Event.OPEN_open" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">open</apiName><shortdesc class="- topic/shortdesc ">
 Distribué lors du démarrage d’une opération de chargement.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.Event.OPEN</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.Event</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Distribué lors du démarrage d’une opération de chargement.
 </apiDesc></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.net.xml#URLStream/load()" class="- topic/link "><linktext class="- topic/linktext ">URLStream.load()</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.net:URLStream_flash.events.IOErrorEvent.IO_ERROR_ioError" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">ioError</apiName><shortdesc class="- topic/shortdesc ">
 Distribué lorsqu’il se produit une erreur d’entrée/sortie entraînant l’échec d’un chargement.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.IOErrorEvent.IO_ERROR</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.IOErrorEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Distribué lorsqu’il se produit une erreur d’entrée/sortie entraînant l’échec d’un chargement. 
 </apiDesc></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.net.xml#URLStream/load()" class="- topic/link "><linktext class="- topic/linktext ">URLStream.load()</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.net:URLStream_flash.events.HTTPStatusEvent.HTTP_RESPONSE_STATUS_httpResponseStatus" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">httpResponseStatus</apiName><shortdesc class="- topic/shortdesc ">
 Distribué si un appel de la méthode URLStream.load() tente d’accéder aux données via HTTP, et si Adobe AIR est capable de détecter et de renvoyer le code d’état de la requête.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.HTTPStatusEvent.HTTP_RESPONSE_STATUS</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.HTTPStatusEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Distribué si un appel de la méthode <codeph class="+ topic/ph pr-d/codeph ">URLStream.load()</codeph> tente d’accéder aux données via HTTP, et si Adobe AIR est capable de détecter et de renvoyer le code d’état de la requête. 
 
 <p class="- topic/p ">Si un objet URLStream s’inscrit à un événement <codeph class="+ topic/ph pr-d/codeph ">httpStatusEvent</codeph>, les réponses aux erreurs sont livrées, même s’il s’agit de contenu. Par conséquent, au lieu de distribuer un événement <codeph class="+ topic/ph pr-d/codeph ">ioError</codeph>, l’objet URLStream distribue des événements <codeph class="+ topic/ph pr-d/codeph ">progress</codeph> et <codeph class="+ topic/ph pr-d/codeph ">complete</codeph> lorsque les données d’erreur sont chargées dans l’objet URLStream.</p>
 
 </apiDesc></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.net.xml#URLStream/load()" class="- topic/link "><linktext class="- topic/linktext ">URLStream.load()</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.net:URLStream_flash.events.HTTPStatusEvent.HTTP_STATUS_httpStatus" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">httpStatus</apiName><shortdesc class="- topic/shortdesc ">
 Distribué si un appel de la méthode URLStream.load() tente d’accéder aux données via HTTP, et si Flash Player ou Adobe AIR est capable de détecter et de renvoyer le code d’état de la requête.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.HTTPStatusEvent.HTTP_STATUS</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.HTTPStatusEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Distribué si un appel de la méthode <codeph class="+ topic/ph pr-d/codeph ">URLStream.load()</codeph> tente d’accéder aux données via HTTP, et si <ph class="- topic/ph ">Flash Player ou</ph> Adobe AIR est capable de détecter et de renvoyer le code d’état de la requête (certains environnements de navigateur ne sont pas capables de fournir cette information). Vous remarquerez que <codeph class="+ topic/ph pr-d/codeph ">httpStatus</codeph> (le cas échéant) sera envoyé avant (et en complément de) tout événement <codeph class="+ topic/ph pr-d/codeph ">complete</codeph> ou <codeph class="+ topic/ph pr-d/codeph ">error</codeph>.
 
 </apiDesc></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.net.xml#URLStream/load()" class="- topic/link "><linktext class="- topic/linktext ">URLStream.load()</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.net:URLStream_flash.events.SecurityErrorEvent.SECURITY_ERROR_securityError" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">securityError</apiName><shortdesc class="- topic/shortdesc ">
 Distribué si un appel de la méthode URLStream.load() tente de charger des données d’un serveur en dehors d’un sandbox de sécurité.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.SecurityErrorEvent.SECURITY_ERROR</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.SecurityErrorEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Distribué si un appel de la méthode <codeph class="+ topic/ph pr-d/codeph ">URLStream.load()</codeph> tente de charger des données d’un serveur en dehors d’un sandbox de sécurité.
 
 </apiDesc></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.net.xml#URLStream/load()" class="- topic/link "><linktext class="- topic/linktext ">URLStream.load()</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.net:URLStream_flash.events.Event.COMPLETE_complete" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">complete</apiName><shortdesc class="- topic/shortdesc ">
 Distribué lorsque le chargement de données a abouti.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.Event.COMPLETE</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.Event</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Distribué lorsque le chargement de données a abouti. 
 </apiDesc></adobeApiEventDetail></adobeApiEvent><apiOperation id="flash.net:URLStream:close" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">close</apiName><shortdesc class="- topic/shortdesc ">
     Ferme immédiatement le flux continu et annule le téléchargement.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">La fermeture du flux continu s’est révélée impossible ou ce flux n’a pas été ouvert.
      
      </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IOError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IOError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Ferme immédiatement le flux continu et annule le téléchargement. Après l’appel de la méthode <codeph class="+ topic/ph pr-d/codeph ">close()</codeph>, aucune donnée ne peut être lue dans le flux continu.
     
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.net:URLStream:load" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">load</apiName><shortdesc class="- topic/shortdesc ">
     Amorce le téléchargement de l’URL spécifiée dans le paramètre request.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Les objets <codeph class="+ topic/ph pr-d/codeph ">URLRequest.requestHeader</codeph> ne devraient pas contenir certains en-têtes de requête HTTP interdits. Pour plus d’informations, voir la description de la classe URLRequestHeader.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Cette erreur peut se produire pour les raisons suivantes :
     
     <ol class="- topic/ol "><li class="- topic/li ">Flash Player ou Adobe AIR ne peut pas convertir le paramètre <codeph class="+ topic/ph pr-d/codeph ">URLRequest.data</codeph> du format UTF8 au format MBCS. Cette erreur est concernée si l’objet URLRequest transmis à la méthode <codeph class="+ topic/ph pr-d/codeph ">load()</codeph> est configuré pour exécuter une opération <codeph class="+ topic/ph pr-d/codeph ">GET</codeph> et si <codeph class="+ topic/ph pr-d/codeph ">System.useCodePage</codeph> est réglé sur <codeph class="+ topic/ph pr-d/codeph ">true</codeph>. </li><li class="- topic/li ">Flash Player ou Adobe AIR ne peut pas allouer de mémoire aux données <codeph class="+ topic/ph pr-d/codeph ">POST</codeph>. Cette erreur est applicable si l’objet URLRequest transmis à load est configuré pour exécuter une opération <codeph class="+ topic/ph pr-d/codeph ">POST</codeph>.</li></ol>
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">MemoryError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:MemoryError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Les fichiers SWF non approuvés au niveau local ne peuvent pas communiquer avec Internet. Pour contourner ce problème, reclassifiez le fichier SWF en tant que fichier local avec accès au réseau ou en tant que fichier approuvé.
     
      </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">SecurityError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">SecurityError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Si vous tentez de vous connecter à un port généralement réservé. Pour obtenir une liste complète des ports bloqués, voir la rubrique « Restriction des API de réseau » dans le <i class="+ topic/ph hi-d/i ">Guide du développeur d’ActionScript 3.0</i>.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">SecurityError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">SecurityError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">request</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.net:URLRequest</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Objet URLRequest indiquant l’URL à télécharger. Si la valeur de ce paramètre ou la propriété <codeph class="+ topic/ph pr-d/codeph ">URLRequest.url</codeph> de l’objet URLRequest transmis correspondent à <codeph class="+ topic/ph pr-d/codeph ">null</codeph>, l’application renvoie une erreur de pointeur Null.
     
     </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Commence le téléchargement de l’URL spécifiée dans le paramètre <codeph class="+ topic/ph pr-d/codeph ">request</codeph>.
     
     <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Remarque</b> : si un fichier en cours de chargement contient des caractères non-ASCII (comme s’en trouvent dans de nombreuses langues autres que l’anglais), nous vous recommandons d’enregistrer le fichier en utilisant le codage UTF-8 ou UTF-16, plutôt que sous un format non-Unicode, ASCII par exemple.</p>
     
     <p class="- topic/p ">Si le chargement échoue immédiatement, une exception IOError ou SecurityError (erreur de sécurité de fichier local comprise) décrivant l’échec est renvoyée. Dans le cas contraire, un événement <codeph class="+ topic/ph pr-d/codeph ">open</codeph> est distribué si le téléchargement de l’URL démarre correctement ou un événement d’erreur est distribué en cas d’erreur.</p>
     
     <p class="- topic/p ">Par défaut, le fichier SWF appelant et l’URL chargée doivent se trouver dans le même domaine. Par exemple, un fichier SWF à l’adresse www.adobe.com peut charger uniquement des données provenant de sources situées aussi à l’adresse www.adobe.com. Pour charger des données à partir d’un autre domaine, placez un fichier de régulation d’URL sur le serveur hébergeant les données.</p>
     
     <p class="- topic/p ">Dans Flash Player, vous ne pouvez pas vous connecter à des ports normalement réservés. Pour obtenir une liste complète des ports bloqués, voir la rubrique « Restriction des API de réseau » dans le <i class="+ topic/ph hi-d/i ">Guide du développeur d’ActionScript 3.0</i>.</p>
     
     <p class="- topic/p ">Dans Flash Player, vous pouvez éviter qu’un fichier SWF n’utilise cette méthode en définissant le paramètre <codeph class="+ topic/ph pr-d/codeph ">allowNetworking</codeph> des balises <codeph class="+ topic/ph pr-d/codeph ">object</codeph> et <codeph class="+ topic/ph pr-d/codeph ">embed</codeph> dans la page HTML qui héberge le contenu SWF.</p>
     
     <p class="- topic/p "> Dans Flash Player 10 et versions ultérieures, et dans AIR 1.5 et versions ultérieures, si vous utilisez un Content-Type en plusieurs parties (par exemple « multipart/form-data ») qui contient un chargement (indiqué par un paramètre « filename » dans un en-tête «content-disposition » au sein du corps POST), l’opération POST est soumise aux règles de sécurité appliquées aux chargements :</p>
     <ul class="- topic/ul "><li class="- topic/li ">L’opération POST doit être effectuée en réponse à l’action d’un utilisateur, comme un clic de souris ou la pression d’une touche.</li><li class="- topic/li ">Si l’opération POST se fait entre plusieurs domaines (la cible POST ne se trouve pas sur le même serveur que le fichier SWF qui envoie la demande POST), le serveur cible doit fournir un fichier de régulation d’URL qui permette l’accès interdomaines.</li></ul>
     <p class="- topic/p ">Par ailleurs, la syntaxe de tous les Content-Type en plusieurs parties doit être correcte (selon la norme RFC2046). Si la syntaxe s’avère incorrecte, l’opération POST est soumise aux règles de sécurité appliquées aux chargements.</p>
     
     <p class="- topic/p ">Le contenu AIR dans des sandbox non-applicatifs est également soumis à ces règles. Cependant, dans Adobe AIR, le contenu du sandbox de l’application (contenu installé avec l’application AIR) n’est pas soumis à ces limites de sécurité.</p>
     
     <p class="- topic/p ">Pour plus d’informations concernant la sécurité, voir la rubrique du Pôle de développement Flash Player : <xref href="http://www.adobe.com/go/devnet_security_fr" scope="external" class="- topic/xref ">Sécurité</xref> (disponible en anglais uniquement).</p>
     
     <p class="- topic/p ">Dans AIR, un objet URLRequest peut enregistrer l’événement d’état <codeph class="+ topic/ph pr-d/codeph ">httpResponse</codeph>. Contrairement à l’événement <codeph class="+ topic/ph pr-d/codeph ">httpStatus</codeph>, l’événement <codeph class="+ topic/ph pr-d/codeph ">httpResponseStatus</codeph> est renvoyé avant toute donnée de réponse. De plus, l’événement <codeph class="+ topic/ph pr-d/codeph ">httpResponseStatus</codeph> inclut des valeurs pour les propriétés <codeph class="+ topic/ph pr-d/codeph ">responseHeaders</codeph> et <codeph class="+ topic/ph pr-d/codeph ">responseURL</codeph> (qui ne sont pas définies pour un événement <codeph class="+ topic/ph pr-d/codeph ">httpStatus</codeph>. Notez que <codeph class="+ topic/ph pr-d/codeph ">httpResponseStatus</codeph> (le cas échéant) est envoyé avant (et en complément de) tout événement <codeph class="+ topic/ph pr-d/codeph ">complete</codeph> ou <codeph class="+ topic/ph pr-d/codeph ">error</codeph>. 
     </p>
     
     
     <p class="- topic/p ">S’il <i class="+ topic/ph hi-d/i ">existe</i> un écouteur d’événement <codeph class="+ topic/ph pr-d/codeph ">httpResponseStatus</codeph>, le corps du message de réponse est <i class="+ topic/ph hi-d/i ">toujours</i> envoyé. En outre, le code d’état de la réponse HTTP distribue toujours un événement <codeph class="+ topic/ph pr-d/codeph ">complete</codeph>, qu’il indique un message de réussite ou un message d’erreur.</p> 
     
     <p class="- topic/p "><ph class="- topic/ph ">Dans AIR, s’il</ph> n’existe <i class="+ topic/ph hi-d/i ">aucun</i> écouteur d’événement <codeph class="+ topic/ph pr-d/codeph ">httpResponseStatus</codeph>, le comportement varie selon la version du fichier <ph class="- topic/ph ">SWF</ph> d’AIR :</p>
     
     <ul class="- topic/ul "><li class="- topic/li "><ph class="- topic/ph ">Pour le contenu SWF 9</ph>, le corps du message de la réponse HTTP est envoyé <i class="+ topic/ph hi-d/i ">uniquement si</i> le code d’état de la réponse HTTP indique que l’opération a réussi. Dans le cas contraire (si le code indique une erreur), le corps du message n’est pas envoyé et l’objet URLRequest distribue un événement IOError.</li><li class="- topic/li "><ph class="- topic/ph ">Pour le contenu SWF 10</ph>, le corps du message de la réponse HTTP est <i class="+ topic/ph hi-d/i ">toujours</i> envoyé. En cas d’erreur, l’objet URLRequest distribue un événement IOError.</li></ul>
     
     
     </apiDesc></apiOperationDetail><adobeApiEvent id="flash.net:URLStream:load_complete" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">complete</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:Event</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Distribué après le chargement effectif de données. S’il existe un écouteur d’événement <codeph class="+ topic/ph pr-d/codeph ">httpResponseStatus</codeph>, l’objet URLRequest distribue également un événement <codeph class="+ topic/ph pr-d/codeph ">complete</codeph>, que le code d’état de la réponse HTTP indique une réussite <i class="+ topic/ph hi-d/i ">ou</i> une erreur.
     
     </apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">Distribué après le chargement effectif de données.</shortdesc></adobeApiEvent><adobeApiEvent id="flash.net:URLStream:load_httpStatus" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">httpStatus</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:HTTPStatusEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Si l’accès s’effectue par HTTP<ph class="- topic/ph "> et que l’environnement actuel permet l’obtention des codes d’état</ph>, il se peut que vous receviez ces événements en plus des événements <codeph class="+ topic/ph pr-d/codeph ">complete</codeph> ou <codeph class="+ topic/ph pr-d/codeph ">error</codeph>.
     
     </apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">Si l’accès s’effectue par HTTP et que l’environnement actuel permet l’obtention des codes d’état, il se peut que vous receviez ces événements en plus des événements complete ou error.</shortdesc></adobeApiEvent><adobeApiEvent id="flash.net:URLStream:load_httpResponseStatus" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">httpResponseStatus</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:HTTPStatusEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Distribué si un appel de la méthode <codeph class="+ topic/ph pr-d/codeph ">load()</codeph> tente d’accéder aux données via HTTP et si Adobe AIR est capable de détecter et de renvoyer le code d’état de la requête. 
     
     </apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">Distribué si un appel de la méthode load() tente d’accéder aux données via HTTP, et si Adobe AIR est capable de détecter et de renvoyer le code d’état de la requête.</shortdesc></adobeApiEvent><adobeApiEvent id="flash.net:URLStream:load_ioError" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">ioError</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:IOErrorEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">L’opération de chargement n’a pu se terminer.
     
     </apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">L’opération de chargement n’a pu se terminer.</shortdesc></adobeApiEvent><adobeApiEvent id="flash.net:URLStream:load_open" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">open</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:Event</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Distribué lors du démarrage d’une opération de chargement.
     
     </apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">Distribué lors du démarrage d’une opération de chargement.</shortdesc></adobeApiEvent><adobeApiEvent id="flash.net:URLStream:load_securityError" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">securityError</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:SecurityErrorEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Une opération de chargement a tenté d’extraire des données à partir d’un serveur situé en dehors du sandbox de sécurité de l’appelant. Vous pouvez contourner le problème en utilisant un fichier de régulation au niveau du serveur.
      
      </apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">Une opération de chargement a tenté d’extraire des données d’un serveur situé hors du sandbox de sécurité de l’appelant.</shortdesc></adobeApiEvent></apiOperation><apiOperation id="flash.net:URLStream:readBoolean" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">readBoolean</apiName><shortdesc class="- topic/shortdesc ">
     Lit une valeur booléenne dans le flux continu.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc "><ph class="- topic/ph ">Les données à lire sont insuffisantes. Si un fichier SWF local déclenche un avertissement de sécurité, Flash Player ne met pas les données URLStream à la disposition d’ActionScript. Dans ce cas, la propriété <codeph class="+ topic/ph pr-d/codeph ">bytesAvailable</codeph> renvoie 0 même si les données ont été reçues, et les éventuelles méthodes de lecture renvoient une exception EOFError.</ph>
     
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">EOFError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:EOFError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Une erreur d’E/S s’est produite dans le flux continu ou ce dernier n’est pas ouvert.
      
      </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IOError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IOError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">La valeur <codeph class="+ topic/ph pr-d/codeph ">true</codeph> est renvoyée si l’octet n’est pas nul, <codeph class="+ topic/ph pr-d/codeph ">false</codeph> dans le cas contraire.
     
     </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Lit une valeur booléenne dans le flux continu. Un seul octet est lu, et la valeur <codeph class="+ topic/ph pr-d/codeph ">true</codeph> est renvoyée s’il n’est pas nul, <codeph class="+ topic/ph pr-d/codeph ">false</codeph> dans le cas contraire.
     
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.net:URLStream:readByte" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">readByte</apiName><shortdesc class="- topic/shortdesc ">
     Lit un octet signé dans le flux continu.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc "><ph class="- topic/ph ">Les données à lire sont insuffisantes. Si un fichier SWF local déclenche un avertissement de sécurité, Flash Player ne met pas les données URLStream à la disposition d’ActionScript. Dans ce cas, la propriété <codeph class="+ topic/ph pr-d/codeph ">bytesAvailable</codeph> renvoie 0 même si les données ont été reçues, et les éventuelles méthodes de lecture renvoient une exception EOFError.</ph>
     
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">EOFError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:EOFError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Une erreur d’E/S s’est produite dans le flux continu ou ce dernier n’est pas ouvert.
      
      </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IOError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IOError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">La valeur est comprise entre -128 et 127.
     
     </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Lit un octet signé dans le flux continu.
     <p class="- topic/p ">La valeur renvoyée est comprise entre -128 et 127.</p>
     
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.net:URLStream:readBytes" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">readBytes</apiName><shortdesc class="- topic/shortdesc ">
     Lit les octets length des données dans le flux.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc "><ph class="- topic/ph ">Les données à lire sont insuffisantes. Si un fichier SWF local déclenche un avertissement de sécurité, Flash Player ne met pas les données URLStream à la disposition d’ActionScript. Dans ce cas, la propriété <codeph class="+ topic/ph pr-d/codeph ">bytesAvailable</codeph> renvoie 0 même si les données ont été reçues, et les éventuelles méthodes de lecture renvoient une exception EOFError.</ph>
     
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">EOFError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:EOFError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Une erreur d’E/S s’est produite dans le flux continu ou ce dernier n’est pas ouvert.
      
      </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IOError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IOError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">bytes</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.utils:ByteArray</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Objet ByteArray dont les données doivent être lues.
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">offset</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">uint</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Décalage associé à <codeph class="+ topic/ph pr-d/codeph ">bytes</codeph> en fonction duquel la lecture des données doit commencer. La valeur par défaut est 0.
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">length</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">uint</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Nombre d’octets à lire. La valeur par défaut, 0, entraîne la lecture de toutes les données disponibles.
     
     </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Lit le nombre d’octets de données spécifié par le paramètre <codeph class="+ topic/ph pr-d/codeph ">length</codeph> dans le flux. Les octets sont lus dans l’objet ByteArray spécifié par le paramètre <codeph class="+ topic/ph pr-d/codeph ">bytes</codeph>, à partir des octets <codeph class="+ topic/ph pr-d/codeph ">offset</codeph> dans l’objet ByteArray.
     
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.net:URLStream:readDouble" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">readDouble</apiName><shortdesc class="- topic/shortdesc ">
     Lit un nombre à virgule flottante avec deux décimales, conforme à IEEE 754, dans le flux continu.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc "><ph class="- topic/ph ">Les données à lire sont insuffisantes. Si un fichier SWF local déclenche un avertissement de sécurité, Flash Player ne met pas les données URLStream à la disposition d’ActionScript. Dans ce cas, la propriété <codeph class="+ topic/ph pr-d/codeph ">bytesAvailable</codeph> renvoie 0 même si les données ont été reçues, et les éventuelles méthodes de lecture renvoient une exception EOFError.</ph>
     
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">EOFError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:EOFError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Une erreur d’E/S s’est produite dans le flux continu ou ce dernier n’est pas ouvert.
      
      </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IOError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IOError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Nombre à virgule flottante à deux décimales, conforme à IEEE 754, dans le flux continu.
     
     </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Lit un nombre à virgule flottante avec deux décimales, conforme à IEEE 754, dans le flux continu.
     
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.net:URLStream:readFloat" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">readFloat</apiName><shortdesc class="- topic/shortdesc ">
     Lit un nombre à virgule flottante et à une décimale, conforme à IEEE 754, dans le flux continu.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc "><ph class="- topic/ph ">Les données à lire sont insuffisantes. Si un fichier SWF local déclenche un avertissement de sécurité, Flash Player ne met pas les données URLStream à la disposition d’ActionScript. Dans ce cas, la propriété <codeph class="+ topic/ph pr-d/codeph ">bytesAvailable</codeph> renvoie 0 même si les données ont été reçues, et les éventuelles méthodes de lecture renvoient une exception EOFError.</ph>
     
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">EOFError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:EOFError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Une erreur d’E/S s’est produite dans le flux continu ou ce dernier n’est pas ouvert.
      
      </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IOError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IOError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Nombre à virgule flottante à une décimale, conforme à IEEE 754, dans le flux continu.
     
     </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Lit un nombre à virgule flottante et à une décimale, conforme à IEEE 754, dans le flux continu.
     
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.net:URLStream:readInt" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">readInt</apiName><shortdesc class="- topic/shortdesc ">
     Lit un entier signé de 32 bits dans le flux continu.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc "><ph class="- topic/ph ">Les données à lire sont insuffisantes. Si un fichier SWF local déclenche un avertissement de sécurité, Flash Player ne met pas les données URLStream à la disposition d’ActionScript. Dans ce cas, la propriété <codeph class="+ topic/ph pr-d/codeph ">bytesAvailable</codeph> renvoie 0 même si les données ont été reçues, et les éventuelles méthodes de lecture renvoient une exception EOFError.</ph>
     
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">EOFError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:EOFError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Une erreur d’E/S s’est produite dans le flux continu ou ce dernier n’est pas ouvert.
      
      </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IOError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IOError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">La valeur est comprise entre -2147483648 et 2147483647.
     
     </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Lit un entier signé de 32 bits dans le flux continu.
     <p class="- topic/p ">La valeur renvoyée est comprise entre -2147483648 et 2147483647.</p>
     
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.net:URLStream:readMultiByte" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">readMultiByte</apiName><shortdesc class="- topic/shortdesc ">
     Lit une chaîne à plusieurs octets de longueur spécifiée à partir du flux d’octets et à l’aide du jeu de caractères désigné.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">URLStream, URLStream.readMultiByte, readMultiByte
      
      </keyword></asCustoms></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc "><ph class="- topic/ph ">Les données à lire sont insuffisantes. Si un fichier SWF local déclenche un avertissement de sécurité, Flash Player ne met pas les données URLStream à la disposition d’ActionScript. Dans ce cas, la propriété <codeph class="+ topic/ph pr-d/codeph ">bytesAvailable</codeph> renvoie 0 même si les données ont été reçues, et les éventuelles méthodes de lecture renvoient une exception EOFError.</ph>
     
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">EOFError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:EOFError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Chaîne au format UTF-8.
     </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">length</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">uint</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Nombre d’octets à lire dans le flux d’octets.
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">charSet</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Chaîne désignant le le jeu de caractères à utiliser pour interpréter les octets. Parmi les chaînes de jeu de caractères supportées figurent <codeph class="+ topic/ph pr-d/codeph ">"shift_jis"</codeph>, <codeph class="+ topic/ph pr-d/codeph ">"CN-GB"</codeph>, <codeph class="+ topic/ph pr-d/codeph ">"iso-8859-1"</codeph>, etc. Pour obtenir la liste complète, voir la section <xref href="../../charset-codes.html" class="- topic/xref ">Jeux de caractères pris en charge</xref>.    
     
     <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Remarque :</b> si la valeur du paramètre <codeph class="+ topic/ph pr-d/codeph ">charSet</codeph> n’est pas reconnue par le système actuel, l’application utilise la page de code par défaut du système comme jeu de caractères. Par exemple, une valeur pour le paramètre <codeph class="+ topic/ph pr-d/codeph ">charSet</codeph>, comme dans <codeph class="+ topic/ph pr-d/codeph ">myTest.readMultiByte(22, "iso-8859-01")</codeph> qui utilise <codeph class="+ topic/ph pr-d/codeph ">01</codeph> au lieu de <codeph class="+ topic/ph pr-d/codeph ">1</codeph> pourra éventuellement fonctionner sur votre poste de développement, mais pas sur un autre poste. Sur l’autre ordinateur, l’application utilisera la page de code par défaut du système.</p>
     
     </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Lit une chaîne à plusieurs octets de longueur spécifiée à partir du flux d’octets et à l’aide du jeu de caractères désigné.
     
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.net:URLStream:readObject" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">readObject</apiName><shortdesc class="- topic/shortdesc ">
     Lit dans le socket un objet codé au format AMF (Action Message Format).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Les données à lire sont insuffisantes. Si un fichier SWF local déclenche un avertissement de sécurité, Flash Player ne met pas les données URLStream à la disposition d’ActionScript. Dans ce cas, la propriété <codeph class="+ topic/ph pr-d/codeph ">bytesAvailable</codeph> renvoie 0 même si les données ont été reçues, et les éventuelles méthodes de lecture renvoient une exception EOFError.
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">EOFError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:EOFError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Une erreur d’E/S s’est produite dans le flux continu ou ce dernier n’est pas ouvert.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IOError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IOError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Objet désérialisé.
     </apiDesc><apiType value="any" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Lit dans le socket un objet codé au format AMF (Action Message Format).
     
     </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#ObjectEncoding" class="- topic/link "><linktext class="- topic/linktext ">ObjectEncoding</linktext></link></related-links></apiOperation><apiOperation id="flash.net:URLStream:readShort" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">readShort</apiName><shortdesc class="- topic/shortdesc ">
     Lit un entier signé de 16 bits dans le flux continu.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc "><ph class="- topic/ph ">Les données à lire sont insuffisantes. Si un fichier SWF local déclenche un avertissement de sécurité, Flash Player ne met pas les données URLStream à la disposition d’ActionScript. Dans ce cas, la propriété <codeph class="+ topic/ph pr-d/codeph ">bytesAvailable</codeph> renvoie 0 même si les données ont été reçues, et les éventuelles méthodes de lecture renvoient une exception EOFError.</ph>
     
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">EOFError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:EOFError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Une erreur d’E/S s’est produite dans le flux continu ou ce dernier n’est pas ouvert.
      
      </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IOError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IOError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">La valeur est comprise entre -32768 et 32767.
     
     </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Lit un entier signé de 16 bits dans le flux continu.
     <p class="- topic/p ">La valeur renvoyée est comprise entre -32768 et 32767.</p>
     
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.net:URLStream:readUTFBytes" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">readUTFBytes</apiName><shortdesc class="- topic/shortdesc ">
     Lit une séquence d’octets UTF-8 length dans le flux et renvoie une chaîne.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc "><ph class="- topic/ph ">Les données à lire sont insuffisantes. Si un fichier SWF local déclenche un avertissement de sécurité, Flash Player ne met pas les données URLStream à la disposition d’ActionScript. Dans ce cas, la propriété <codeph class="+ topic/ph pr-d/codeph ">bytesAvailable</codeph> renvoie 0 même si les données ont été reçues, et les éventuelles méthodes de lecture renvoient une exception EOFError.</ph>
     
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">EOFError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:EOFError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Une erreur d’E/S s’est produite dans le flux continu ou ce dernier n’est pas ouvert.
      
      </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IOError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IOError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Chaîne UTF-8 de longueur spécifiée, générée par la représentation des caractères sous forme d’octets.
     
     </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">length</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">uint</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Séquence d’octets UTF-8.
     
     </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Lit une séquence d’octets UTF-8 <codeph class="+ topic/ph pr-d/codeph ">length</codeph> dans le flux et renvoie une chaîne.
     
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.net:URLStream:readUTF" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">readUTF</apiName><shortdesc class="- topic/shortdesc ">
     Lit une chaîne UTF-8 dans le flux continu.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc "><ph class="- topic/ph ">Les données à lire sont insuffisantes. Si un fichier SWF local déclenche un avertissement de sécurité, Flash Player ne met pas les données URLStream à la disposition d’ActionScript. Dans ce cas, la propriété <codeph class="+ topic/ph pr-d/codeph ">bytesAvailable</codeph> renvoie 0 même si les données ont été reçues, et les éventuelles méthodes de lecture renvoient une exception EOFError.</ph>
     
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">EOFError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:EOFError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Une erreur d’E/S s’est produite dans le flux continu ou ce dernier n’est pas ouvert.
      
      </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IOError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IOError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Chaîne UTF-8.
     
     </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Lit une chaîne UTF-8 dans le flux continu. La chaîne doit être précédée d’un caractère non signé indiquant la longueur en octets.
     
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.net:URLStream:readUnsignedByte" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">readUnsignedByte</apiName><shortdesc class="- topic/shortdesc ">
     Lit un octet non signé dans le flux continu.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc "><ph class="- topic/ph ">Les données à lire sont insuffisantes. Si un fichier SWF local déclenche un avertissement de sécurité, Flash Player ne met pas les données URLStream à la disposition d’ActionScript. Dans ce cas, la propriété <codeph class="+ topic/ph pr-d/codeph ">bytesAvailable</codeph> renvoie 0 même si les données ont été reçues, et les éventuelles méthodes de lecture renvoient une exception EOFError.</ph>
     

     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">EOFError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:EOFError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Une erreur d’E/S s’est produite dans le flux continu ou ce dernier n’est pas ouvert.
      
      </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IOError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IOError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">La valeur est comprise entre 0 et 255.
     
     </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">uint</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Lit un octet non signé dans le flux continu.
     <p class="- topic/p ">La valeur renvoyée est comprise entre 0 et 255. </p>     
     
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.net:URLStream:readUnsignedInt" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">readUnsignedInt</apiName><shortdesc class="- topic/shortdesc ">
     Lit un entier de 32 bits non signé dans le flux continu.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc "><ph class="- topic/ph ">Les données à lire sont insuffisantes. Si un fichier SWF local déclenche un avertissement de sécurité, Flash Player ne met pas les données URLStream à la disposition d’ActionScript. Dans ce cas, la propriété <codeph class="+ topic/ph pr-d/codeph ">bytesAvailable</codeph> renvoie 0 même si les données ont été reçues, et les éventuelles méthodes de lecture renvoient une exception EOFError.</ph>
     
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">EOFError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:EOFError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Une erreur d’E/S s’est produite dans le flux continu ou ce dernier n’est pas ouvert.
      
      </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IOError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IOError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">La valeur est comprise entre 0 et 4294967295.
     
     </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">uint</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Lit un entier de 32 bits non signé dans le flux continu.
     <p class="- topic/p ">La valeur renvoyée est comprise entre 0 et 4294967295. </p>
     
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.net:URLStream:readUnsignedShort" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">readUnsignedShort</apiName><shortdesc class="- topic/shortdesc ">
     Lit un entier de 16 bits non signé dans le flux continu.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc "><ph class="- topic/ph ">Les données à lire sont insuffisantes. Si un fichier SWF local déclenche un avertissement de sécurité, Flash Player ne met pas les données URLStream à la disposition d’ActionScript. Dans ce cas, la propriété <codeph class="+ topic/ph pr-d/codeph ">bytesAvailable</codeph> renvoie 0 même si les données ont été reçues, et les éventuelles méthodes de lecture renvoient une exception EOFError.</ph>
     
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">EOFError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:EOFError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Une erreur d’E/S s’est produite dans le flux continu ou ce dernier n’est pas ouvert.
      
      </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IOError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IOError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">La valeur est comprise entre 0 et 65535.
     
     </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">uint</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Lit un entier de 16 bits non signé dans le flux continu.
     <p class="- topic/p ">La valeur renvoyée est comprise entre 0 et 65535. </p>
     
     </apiDesc></apiOperationDetail></apiOperation><apiValue id="flash.net:URLStream:bytesAvailable:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">bytesAvailable</apiName><shortdesc class="- topic/shortdesc ">
     Renvoie le nombre d’octets de données disponibles pour la lecture dans le tampon de saisie.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">uint</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Renvoie le nombre d’octets de données disponibles pour la lecture dans le tampon de saisie. Votre code doit appeler la propriété <codeph class="+ topic/ph pr-d/codeph ">bytesAvailable</codeph> pour garantir que les données disponibles sont suffisantes, avant leur lecture à l’aide d’une des méthodes <codeph class="+ topic/ph pr-d/codeph ">read</codeph>.
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:URLStream:connected:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">connected</apiName><shortdesc class="- topic/shortdesc ">
     Indique si l’objet URLStream est actuellement connecté.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Indique si l’objet URLStream est actuellement connecté. Un appel de cette propriété renvoie la valeur <codeph class="+ topic/ph pr-d/codeph ">true</codeph> si l’objet URLStream est connecté, <codeph class="+ topic/ph pr-d/codeph ">false</codeph> dans le cas contraire.     
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:URLStream:endian:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">endian</apiName><shortdesc class="- topic/shortdesc ">
     Indique l’ordre d’octet des données.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiDefaultValue>Endian.BIG_ENDIAN
     </apiDefaultValue></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Indique l’ordre d’octet des données. Les valeurs possibles sont <codeph class="+ topic/ph pr-d/codeph ">Endian.BIG_ENDIAN</codeph> ou <codeph class="+ topic/ph pr-d/codeph ">Endian.LITTLE_ENDIAN</codeph>.
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.utils.xml#Endian" class="- topic/link "><linktext class="- topic/linktext ">flash.utils.Endian</linktext></link></related-links></apiValue><apiValue id="flash.net:URLStream:objectEncoding:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">objectEncoding</apiName><shortdesc class="- topic/shortdesc ">
     Contrôle la version du format AMF (Action Message Format) utilisé lors de l’écriture ou de la lecture d’un objet.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><internal>Property documented; needs review
     </internal></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">uint</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Contrôle la version du format AMF (Action Message Format) utilisé lors de l’écriture ou de la lecture d’un objet.
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#URLStream/readObject()" class="- topic/link "><linktext class="- topic/linktext ">readObject()</linktext></link><link href="flash.net.xml#ObjectEncoding" class="- topic/link "><linktext class="- topic/linktext ">Classe ObjectEncoding</linktext></link></related-links></apiValue></apiClassifier><apiClassifier languages="" id="flash.net:NetGroupSendMode" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">NetGroupSendMode</apiName><shortdesc class="- topic/shortdesc ">
La classe NetGroupSendMode est une énumération des valeurs constantes utilisées pour le paramètre sendMode de la méthode NetGroup.sendToNeighbor().</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Enumération des valeurs constantes utilisées pour le paramètre sendMode de la méthode sendToNeighbor() dans la classe NetGroup. méthode de la classe <codeph class="+ topic/ph pr-d/codeph ">NetGroup</codeph>

</apiTipText></apiTipTexts><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
La classe NetGroupSendMode est une énumération des valeurs constantes utilisées pour le paramètre <codeph class="+ topic/ph pr-d/codeph ">sendMode</codeph> de la méthode <codeph class="+ topic/ph pr-d/codeph ">NetGroup.sendToNeighbor()</codeph>.

</apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetGroup/sendToNeighbor()" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetGroup.sendToNeighbor()</linktext></link></related-links><apiValue id="flash.net:NetGroupSendMode:NEXT_DECREASING" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">NEXT_DECREASING</apiName><shortdesc class="- topic/shortdesc "> 
    Spécifie le voisin avec l’adresse de groupe la plus proche dans le sens descendant.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">nextDecreasing</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
    Spécifie le voisin avec l’adresse de groupe la plus proche dans le sens descendant.
    
    </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:NetGroupSendMode:NEXT_INCREASING" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">NEXT_INCREASING</apiName><shortdesc class="- topic/shortdesc "> 
    Spécifie le voisin avec l’adresse de groupe la plus proche dans le sens ascendant.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">nextIncreasing</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
    Spécifie le voisin avec l’adresse de groupe la plus proche dans le sens ascendant.
    
    </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.net:SharedObject" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">SharedObject</apiName><shortdesc class="- topic/shortdesc ">
 La classe SharedObject est utilisée pour lire et stocker des quantités limitées de données sur l’ordinateur d’un utilisateur ou sur un serveur.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">SharedObject, shared object, constructor
 
  
  </keyword></asCustoms></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:EventDispatcher</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 La classe SharedObject est utilisée pour lire et stocker des quantités limitées de données sur l’ordinateur d’un utilisateur ou sur un serveur. Les objets partagés permettent le partage en temps réel de plusieurs fichiers et objets SWF clients qui sont stockés en permanence sur l’ordinateur local ou sur un serveur distant. Les objets partagés locaux sont identiques aux cookies des navigateurs et les objets partagés distants sont identiques aux périphériques de transfert de données en temps réel. Pour utiliser des objets partagés distants, vous avez besoin d’Adobe Flash Media Server.
 
 <p class="- topic/p ">Utilisez des objets partagés lorsque vous devez :</p>
 
 <ul class="- topic/ul "><li class="- topic/li "><b class="+ topic/ph hi-d/b ">Conserver la persistance locale</b>. Il s’agit de la méthode la plus simple pour utiliser un objet partagé. Elle ne requiert pas Flash Media Server. Par exemple, vous pouvez appeler <codeph class="+ topic/ph pr-d/codeph ">SharedObject.getLocal()</codeph> pour créer un objet partagé dans une application, par exemple une calculatrice avec mémoire. Lorsque l’utilisateur ferme la calculatrice, Flash Player enregistre la dernière valeur dans un objet partagé dans l’ordinateur de l’utilisateur. Lors de sa prochaine exécution, la calculatrice contiendra la valeur précédente. En revanche, si vous réglez les propriétés de l’objet partagé sur <codeph class="+ topic/ph pr-d/codeph ">null</codeph> avant la fermeture de la calculatrice, lors de sa prochaine exécution, elle ne contiendra aucune valeur. Un autre exemple de conservation de la persistance locale consiste à assurer le suivi des préférences utilisateur ou d’autres données pour un site Web complexe, tel que l’enregistrement des articles lus par un utilisateur dans un site d’actualités. Le suivi de ces informations vous permet de différencier l’affichage des articles déjà lus de ceux qui sont nouveaux ou non lus. Le stockage de ces informations dans l’ordinateur de l’utilisateur réduit la charge du serveur.</li><li class="- topic/li "><b class="+ topic/ph hi-d/b ">Stockage et partage des données sur Flash Media Server</b>. Un objet partagé peut stocker des données sur le serveur pour que d’autres clients les y récupèrent. Par exemple, appelez <codeph class="+ topic/ph pr-d/codeph ">SharedObject.getRemote()</codeph> pour créer un objet partagé distant, tel qu’une liste téléphonique, persistant sur le serveur. Chaque fois qu’un client modifie l’objet partagé, les données modifiées sont mises à la disposition de tous les clients actuellement connectés à l’objet ou qui s’y connectent ultérieurement. Si l’objet est également persistant localement et qu’un client change ses données alors qu’il n’est pas connecté au serveur, les données sont copiées dans l’objet partagé distant dès que le client se connecte à cet objet.</li><li class="- topic/li "><b class="+ topic/ph hi-d/b ">Partage des données en temps réel</b>. Un objet partagé peut partager des données en temps réel entre plusieurs clients. Vous pouvez, par exemple, ouvrir un objet partagé distant qui stocke la liste des utilisateurs connectés à une salle de conversation accessible à tous les clients connectés à l’objet. Lorsqu’un utilisateur entre dans la salle de conversation ou en sort, l’objet est mis à jour et la liste révisée des utilisateurs de la salle est visible par tous les clients connectés à l’objet.</li></ul>
 
 <p class="- topic/p "> Pour créer un objet partagé local, appelez <codeph class="+ topic/ph pr-d/codeph ">SharedObject.getLocal()</codeph>. Pour créer un objet partagé distant, appelez <codeph class="+ topic/ph pr-d/codeph ">SharedObject.getRemote()</codeph>.</p> 
 
 <p class="- topic/p "> A la fermeture d’une application, les objets partagés sont <i class="+ topic/ph hi-d/i ">purgés</i> ou écrits sur un disque. Vous pouvez également appeler la méthode <codeph class="+ topic/ph pr-d/codeph ">flush()</codeph> pour écrire explicitement les données sur un disque.</p>
 
 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Eléments importants relatifs à l’espace disque local.</b> Les objets partagés locaux possèdent certaines restrictions dont vous devez absloment tenir compte lors de la conception de votre application. Certains fichiers SWF ne sont pas autorisés à écrire des objets partagés locaux et certaines données stockées dans des objets partagés locaux sont parfois supprimées à votre insu. Les utilisateurs de Flash Player peuvent gérer l’espace disque disponible pour des domaines spécifiques ou l’ensemble des domaines. Lorsque des utilisateurs réduisent la quantité d’espace disque disponible, certains objets locaux partagés risquent d’être supprimés. Les utilisateurs de Flash Player disposent également de contrôles de confidentialité qui peuvent empêcher les domaines tiers (autres que celui figurant dans la barre d’adresse du navigateur) de lire ou d’écrire des objets partagés locaux.</p>
 
 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Remarque</b> : les fichiers SWF stockés et exécutés sur un ordinateur local, et non à partir d’un serveur distant, peuvent toujours écrire des objets partagés par un tiers sur un disque. Pour plus d’informations sur les objets partagés par un tiers, voir <xref href="http://www.macromedia.com/support/documentation/fr/flashplayer/help/settings_manager03.html" scope="external" class="- topic/xref ">Panneau Paramètres globaux d’enregistrement</xref> dans l’aide de Flash Player.</p>
 
 <p class="- topic/p ">Il est toujours conseillé de vérifier les défaillances relatives à la quantité d’espace disque et au contrôle de la confidentialité des utilisateurs. Effectuez ces vérifications lorsque vous appelez <codeph class="+ topic/ph pr-d/codeph ">getLocal()</codeph> et <codeph class="+ topic/ph pr-d/codeph ">flush()</codeph> :
 
 <ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">SharedObject.getLocal()</codeph> — Flash Player renvoie une exception lors de l’échec d’un appel de cette méthode, par exemple lorsque l’utilisateur a désactivé les objets partagés par un tiers et que le domaine de votre fichier SWF ne correspond pas à celui de la barre d’adresse du navigateur.</li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">SharedObject.flush()</codeph> — Flash Player renvoie une exception lors de l’échec d’un appel de cette méthode. Il renvoie <codeph class="+ topic/ph pr-d/codeph ">SharedObjectFlushStatus.FLUSHED</codeph> lorsque l’appel aboutit. Il renvoie <codeph class="+ topic/ph pr-d/codeph ">SharedObjectFlushStatus.PENDING</codeph> lorsque de l’espace disque supplémentaire est nécessaire. Flash Player invite l’utilisateur à allouer plus d’espace disque aux informations enregistrées localement. Par la suite, l’événement <codeph class="+ topic/ph pr-d/codeph ">netStatus</codeph> est distribué avec un objet d’informations indiquant si la purge a abouti ou échoué.</li></ul></p>
 
 <p class="- topic/p ">Si votre fichier SWF tente de créer ou modifier des objets partagés locaux, assurez-vous que le fichier SWF fait au moins 215 pixels de large et 138 pixels de haut (ce qui constitue les dimensions minimales d’affichage de la boîte de dialogue qui suggère à l’utilisateur d’augmenter sa limite locale de stockage des objets partagés locaux). Si votre fichier SWF est inférieur à ces dimensions et si une augmentation de la limite de stockage est nécessaire, <codeph class="+ topic/ph pr-d/codeph ">SharedObject.flush()</codeph> échoue, renvoie <codeph class="+ topic/ph pr-d/codeph ">SharedObjectFlushedStatus.PENDING</codeph> et distribue l’événement <codeph class="+ topic/ph pr-d/codeph ">netStatus</codeph>.</p>
 
 <p class="- topic/p ">
 <b class="+ topic/ph hi-d/b ">Objets partagés distants.</b> Flash Media Server vous permet de créer et d’utiliser des objets partagés distants, partagés en temps réel par tous les clients connectés à votre application. Lorsqu’un client modifie une propriété d’un objet partagé distant, cette propriété est modifiée pour tous les clients connectés. Vous pouvez utiliser des objets partagés distants pour synchroniser des clients, par exemple les utilisateurs d’un jeu multi-joueurs.
 </p>
 
 <p class="- topic/p ">
 Chaque objet partagé distant possède une propriété <codeph class="+ topic/ph pr-d/codeph ">data</codeph> correspondant à un Objet avec propriétés qui stocke des données. Appelez <codeph class="+ topic/ph pr-d/codeph ">setProperty()</codeph> pour modifier une propriété de l’objet de données. Le serveur met à jour les propriétés, envoie un événement <codeph class="+ topic/ph pr-d/codeph ">sync</codeph>, puis renvoie les propriétés aux clients connectés. 
 </p>
 
 <p class="- topic/p ">
 Vous pouvez choisir de rendre les objets partagés distants persistant sur le client, sur le serveur ou sur les deux. Par défaut, Flash Player enregistre localement les objets partagés distants persistants dont la taille est inférieure à 100 Ko. Lorsque vous tentez d’enregistrer un objet plus volumineux, Flash Player ouvre une boite de dialogue de stockage local qui permet à l’utilisateur d’autoriser ou d’interdire le stockage local de l’objet partagé. Assurez-vous que la taille de votre scène est d’au moins 215 x 138 pixels ; il s’agit de la taille minimale requise par Flash pour afficher cette boîte de dialogue.
 </p>
 <p class="- topic/p ">
 Si l’utilisateur sélectionne Autoriser, le serveur enregistre l’objet partagé et distribue un événement <codeph class="+ topic/ph pr-d/codeph ">netStatus</codeph> avec la propriété <codeph class="+ topic/ph pr-d/codeph ">code</codeph> <codeph class="+ topic/ph pr-d/codeph ">SharedObject.Flush.Success</codeph>. Si l’utilisateur sélectionne Refuser, le serveur enregistre l’objet partagé et distribue un événement <codeph class="+ topic/ph pr-d/codeph ">netStatus</codeph> avec la propriété <codeph class="+ topic/ph pr-d/codeph ">code</codeph> <codeph class="+ topic/ph pr-d/codeph ">SharedObject.Flush.Failed</codeph>. 
 </p>
 
 </apiDesc><example conref="examples\SharedObjectExample.as" class="- topic/example "> Le code suivant crée (et lors des ses prochaines exécutions, récupère) un objet partagé en utilisant l’ID <codeph class="+ topic/ph pr-d/codeph ">"application-name"</codeph>. Lorsqu’un utilisateur clique sur le bouton Enregistrer, la méthode <codeph class="+ topic/ph pr-d/codeph ">saveValue()</codeph> tente d’enregistrer une propriété appelée <codeph class="+ topic/ph pr-d/codeph ">savedValue</codeph> dans la propriété <codeph class="+ topic/ph pr-d/codeph ">data</codeph> de l’objet SharedObject. Si Flash Player doit demander l’autorisation d’enregistrer les données, la méthode<codeph class="+ topic/ph pr-d/codeph ">onFlushStatus()</codeph> est appelée lorsque l’utilisateur accorde ou refuse l’opération. Lorsqu’un utilisateur clique sur le bouton Effacer, la méthode <codeph class="+ topic/ph pr-d/codeph ">clearValue()</codeph> efface la valeur enregistrée dans <codeph class="+ topic/ph pr-d/codeph ">savedValue</codeph>. Au prochain chargement du fichier SWF, la valeur<codeph class="+ topic/ph pr-d/codeph ">undefined</codeph> est récupérée.
 
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
package {
    import flash.display.Sprite;
    import flash.events.MouseEvent;
    import flash.events.NetStatusEvent;
    import flash.net.SharedObject;
    import flash.net.SharedObjectFlushStatus;
    import flash.text.TextField;
    import flash.text.TextFieldAutoSize;
    import flash.text.TextFieldType;
    
    public class SharedObjectExample extends Sprite {
        
        private var mySo:SharedObject;
        
        public function SharedObjectExample() {
            buildUI();
            saveBtn.addEventListener(MouseEvent.CLICK, saveValue);
            clearBtn.addEventListener(MouseEvent.CLICK, clearValue);
            
            mySo = SharedObject.getLocal("application-name");
            output.appendText("SharedObject loaded...\n");
            output.appendText("loaded value: " + mySo.data.savedValue + "\n\n");
        }

         private function saveValue(event:MouseEvent):void {
            output.appendText("saving value...\n");
            mySo.data.savedValue = input.text;
            
            var flushStatus:String = null;
            try {
                flushStatus = mySo.flush(10000);
            } catch (error:Error) {
                output.appendText("Error...Could not write SharedObject to disk\n");
            }
            if (flushStatus != null) {
                switch (flushStatus) {
                    case SharedObjectFlushStatus.PENDING:
                        output.appendText("Requesting permission to save object...\n");
                        mySo.addEventListener(NetStatusEvent.NET_STATUS, onFlushStatus);
                        break;
                    case SharedObjectFlushStatus.FLUSHED:
                        output.appendText("Value flushed to disk.\n");
                        break;
                }
            }
            output.appendText("\n");
        }
        
        private function clearValue(event:MouseEvent):void {
            output.appendText("Cleared saved value...Reload SWF and the value should be \"undefined\".\n\n");
            delete mySo.data.savedValue;
        }
        
        private function onFlushStatus(event:NetStatusEvent):void {
            output.appendText("User closed permission dialog...\n");
            switch (event.info.code) {
                case "SharedObject.Flush.Success":
                    output.appendText("User granted permission -- value saved.\n");
                    break;
                case "SharedObject.Flush.Failed":
                    output.appendText("User denied permission -- value not saved.\n");
                    break;
            }
            output.appendText("\n");

            mySo.removeEventListener(NetStatusEvent.NET_STATUS, onFlushStatus);
        }
        
        // UI elements
        private var inputLbl:TextField;
        private var input:TextField;
        private var output:TextField;
        private var saveBtn:Sprite;
        private var clearBtn:Sprite;
    
        private function buildUI():void {
            // input label
            inputLbl = new TextField();
            addChild(inputLbl);
            inputLbl.x = 10;
            inputLbl.y = 10;
            inputLbl.text = "Value to save:";
            
            // input TextField
            input = new TextField();
            addChild(input);
            input.x = 80;
            input.y = 10;
            input.width = 100;
            input.height = 20;
            input.border = true;
            input.background = true;
            input.type = TextFieldType.INPUT;
            
            // output TextField
            output = new TextField();
            addChild(output);
            output.x = 10;
            output.y = 35;
            output.width = 250;
            output.height = 250;
            output.multiline = true;
            output.wordWrap = true;
            output.border = true;
            output.background = true;
            
            // Save button
            saveBtn = new Sprite();
            addChild(saveBtn);
            saveBtn.x = 190;
            saveBtn.y = 10;
            saveBtn.useHandCursor = true;
            saveBtn.graphics.lineStyle(1);
            saveBtn.graphics.beginFill(0xcccccc);
            saveBtn.graphics.drawRoundRect(0, 0, 30, 20, 5, 5);
            var saveLbl:TextField = new TextField();
            saveBtn.addChild(saveLbl);
            saveLbl.text = "Save";
            saveLbl.selectable = false;
            
            // Clear button
            clearBtn = new Sprite();
            addChild(clearBtn);
            clearBtn.x = 230;
            clearBtn.y = 10;
            clearBtn.useHandCursor = true;
            clearBtn.graphics.lineStyle(1);
            clearBtn.graphics.beginFill(0xcccccc);
            clearBtn.graphics.drawRoundRect(0, 0, 30, 20, 5, 5);
            var clearLbl:TextField = new TextField();
            clearBtn.addChild(clearLbl);
            clearLbl.text = "Clear";
            clearLbl.selectable = false;
        }
    }
}
</codeblock></example></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.net.xml#SharedObject/flush()" class="- topic/link "><linktext class="- topic/linktext ">flush()</linktext></link><link href="flash.net.xml#SharedObject/getLocal()" class="- topic/link "><linktext class="- topic/linktext ">getLocal()</linktext></link><link href="flash.net.xml#SharedObject/event:netStatus" class="- topic/link "><linktext class="- topic/linktext ">netStatus</linktext></link></related-links><adobeApiEvent id="flash.net:SharedObject_flash.events.SyncEvent.SYNC_sync" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">sync</apiName><shortdesc class="- topic/shortdesc ">
 Distribué lorsqu’un objet partagé distant a été mis à jour par le serveur.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.SyncEvent.SYNC</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.SyncEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Distribué lorsqu’un objet partagé distant a été mis à jour par le serveur.
 
 </apiDesc></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.net.xml#SharedObject/getRemote()" class="- topic/link "><linktext class="- topic/linktext ">getRemote()</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.net:SharedObject_flash.events.NetStatusEvent.NET_STATUS_netStatus" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">netStatus</apiName><shortdesc class="- topic/shortdesc ">
 Distribué lorsqu’une occurrence de SharedObject publie son état ou signale une erreur.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.NetStatusEvent.NET_STATUS</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.NetStatusEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Distribué lorsqu’une occurrence de SharedObject publie son état ou signale une erreur. L’événement <codeph class="+ topic/ph pr-d/codeph ">netStatus</codeph> renferme une propriété <codeph class="+ topic/ph pr-d/codeph ">info</codeph>, composée d’un objet d’informations contenant des renseignements spécifiques sur l’événement, telles que la réussite ou l’échec d’une tentative de connexion ou la réussite de l’écriture de l’objet partagé dans le disque dur local. 
 
 </apiDesc></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.events.xml#NetStatusEvent/info" class="- topic/link "><linktext class="- topic/linktext ">flash.events.NetStatusEvent.info</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.net:SharedObject_flash.events.AsyncErrorEvent.ASYNC_ERROR_asyncError" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">asyncError</apiName><shortdesc class="- topic/shortdesc ">
 Distribué lorsqu’une erreur est renvoyée de manière asynchrone ; autrement dit, lorsqu’elle provient du code asynchrone natif.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.AsyncErrorEvent.ASYNC_ERROR</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.AsyncErrorEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Distribué lorsqu’une erreur est renvoyée de manière asynchrone ; autrement dit, lorsqu’elle provient du code asynchrone natif. 
 
 </apiDesc></adobeApiEventDetail></adobeApiEvent><apiOperation id="flash.net:SharedObject:clear" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">clear</apiName><shortdesc class="- topic/shortdesc ">
     Dans le cas d’un objet partagé local, cette méthode purge toutes les données et supprime l’objet du disque.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">SharedObject, SharedObject.clear, clear
     
     </keyword></asCustoms></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Dans le cas d’un objet partagé local, cette méthode purge toutes les données et supprime l’objet du disque. La référence à l’objet partagé reste active, mais ses propriétés data sont effacées.
     
     <p class="- topic/p ">
     Pour les objets partagés distants utilisés avec Flash Media Server, <codeph class="+ topic/ph pr-d/codeph ">clear()</codeph> déconnecte l’objet et purge toutes ses données. Si l’objet partagé est persistant localement, cette méthode le supprime également du disque. La référence à l’objet partagé reste active, mais ses propriétés data sont effacées.
     </p>
      
     
     </apiDesc><example conref="examples\SharedObject_clear.as" class="- topic/example "> Le code suivant crée (et lors des ses prochaines exécutions, récupère) un objet SharedObject en utilisant l’ID <codeph class="+ topic/ph pr-d/codeph ">hostName</codeph>. Une propriété appelée <codeph class="+ topic/ph pr-d/codeph ">username</codeph> est ajoutée à la propriété data de l’objet SharedObject. La méthode <codeph class="+ topic/ph pr-d/codeph ">clear()</codeph> qui est appelée pour finir, efface toutes les informations ajoutées à l’objet data (dans ce cas, une propriété appelée <codeph class="+ topic/ph pr-d/codeph ">username</codeph>).
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">

package {
    import flash.net.SharedObject;

    public class SharedObject_clear {
        private var hostName:String = "yourDomain";
        private var username:String = "yourUsername";

        public function SharedObject_clear() {
            var mySo:SharedObject = SharedObject.getLocal(hostName);
            if(mySo.data.username == null) {
                mySo.data.username = username;
                trace("set: " + mySo.data.username); // yourUsername
            }
            else {
                mySo.clear();
                trace("cleared: " + mySo.data.username); // undefined
            }
        }
    }
}
</codeblock></example></apiOperationDetail></apiOperation><apiOperation id="flash.net:SharedObject:close" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">close</apiName><shortdesc class="- topic/shortdesc ">
     Ferme la connexion entre un objet partagé distant et le serveur.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><internal>server-specific: This info is relevant for Flash Media Server, but not Flex Data Services.
     
     </internal></asCustoms></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Ferme la connexion entre un objet partagé distant et le serveur. Si un objet partagé distant est persistant localement, l’utilisateur peut modifier la copie locale de l’objet après l’appel de cette méthode. Toute modification apportée à l’objet local est envoyée au serveur à la prochaine connexion de l’utilisateur à l’objet partagé distant.
     
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.net:SharedObject:connect" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">connect</apiName><shortdesc class="- topic/shortdesc ">
     Se connecte à un objet partagé distant sur un serveur par l’intermédiaire d’un objet NetConnection spécifié.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><internal>server-specific: On FMS, can connect to a shared object, but cannot pass a message as a second param.
     </internal></asCustoms></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Flash Player n’a pas réussi à se connecter à l’objet partagé distant spécifié. Assurez-vous que l’occurrence de NetConnection est valide et connectée, et que l’objet partagé distant a été créé sur le serveur.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">Error</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Error</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">myConnection</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.net:NetConnection</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Objet NetConnection qui utilise le protocole RTMP (Real-Time Messaging Protocol), tel qu’un objet NetConnection utilisé pour communiquer avec Flash Media Server.
     
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">params</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Chaîne définissant le message à transmettre à l’objet partagé distance sur le serveur. Ne peut pas être utilisé avec Flash Media Server.
     
     </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Se connecte à un objet partagé distant sur un serveur par l’intermédiaire d’un objet NetConnection spécifié. Utilisez cette méthode après un appel à <codeph class="+ topic/ph pr-d/codeph ">getRemote()</codeph>. Lorsque la connexion est réussie, l’événement <codeph class="+ topic/ph pr-d/codeph ">sync</codeph> est distribué.
     
     <p class="- topic/p ">Avant de tenter d’utiliser un objet partagé distant, commencez par vérifier la présence d’erreurs éventuelles à l’aide d’une instruction <codeph class="+ topic/ph pr-d/codeph ">try..catch..finally</codeph>. Ensuite, écoutez et gérez l’événement <codeph class="+ topic/ph pr-d/codeph ">sync</codeph> avant de modifier l’objet partagé. Toute modification effectuée localement, avant la distribution de l’événement <codeph class="+ topic/ph pr-d/codeph ">sync</codeph>, peut être perdue.
     </p>
     
     <p class="- topic/p ">
     Appelez la méthode <codeph class="+ topic/ph pr-d/codeph ">connect()</codeph> pour vous connecter à un objet partagé distant, par exemple :
     </p>
     
     <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
     var myRemoteSO:SharedObject = SharedObject.getRemote("mo", myNC.uri, false);
     myRemoteSO.connect(myNC);
     </codeblock>
     
     
     
     </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#SharedObject/getRemote()" class="- topic/link "><linktext class="- topic/linktext ">getRemote()</linktext></link><link href="flash.net.xml#SharedObject/event:sync" class="- topic/link "><linktext class="- topic/linktext ">sync</linktext></link><link href="../../statements.html#try..catch..finally" class="- topic/link "><linktext class="- topic/linktext ">try..catch..finally</linktext></link><link href="flash.net.xml#NetConnection" class="- topic/link "><linktext class="- topic/linktext ">NetConnection</linktext></link></related-links></apiOperation><apiOperation id="flash.net:SharedObject:flush" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">flush</apiName><shortdesc class="- topic/shortdesc ">
     Ecrit immédiatement un objet partagé persistant localement dans un fichier local.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">SharedObject, SharedObject.flush, flush
     
     </keyword></asCustoms></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Flash Player ne peut pas écrire l’objet partagé sur le disque. Cette erreur est susceptible de se produire si l’utilisateur a interdit définitivement le stockage des informations locales pour les objets de ce domaine.
      
     
     <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Remarque :</b> un contenu local peut toujours écrire sur un disque des objets partagés en provenance de domaines tiers (autres que celui de la barre d’adresse actuelle du navigateur), même s’il est interdit à un domaine tiers d’écrire des objets partagés sur un disque.</p>
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">Error</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Error</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">L’une des valeurs suivantes :
     <ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">SharedObjectFlushStatus.PENDING</codeph> : l’utilisateur a autorisé l’enregistrement des informations locales pour les objets de ce domaine, mais l’espace affecté est insuffisant pour enregistrer l’objet. Flash Player invite l’utilisateur à affecter davantage d’espace. Pour laisser croître l’espace de l’objet partagé lorsqu’il est enregistré, et éviter ainsi le renvoi de la valeur <codeph class="+ topic/ph pr-d/codeph ">SharedObjectFlushStatus.PENDING</codeph>, transmettez une valeur pour <codeph class="+ topic/ph pr-d/codeph ">minDiskSpace</codeph>.
     </li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">SharedObjectFlushStatus.FLUSHED</codeph> : l’objet partagé a bien été écrit dans un fichier du disque local.</li></ul>
     
     </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">minDiskSpace</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Quantité minimale d’espace disque, en octets, à allouer à cet objet.
     
     </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Ecrit immédiatement un objet partagé persistant localement dans un fichier local. Si vous n’utilisez pas cette méthode, Flash écrit l’objet partagé dans un fichier lorsque la session d’objet partagé se termine, c’est-à-dire lorsque le fichier SWF est fermé, lorsque l’objet partagé est effacé par l’outil de nettoyage de la mémoire car il n’est plus associé à aucune référence ou lorsque vous appelez <codeph class="+ topic/ph pr-d/codeph ">SharedObject.clear()</codeph> ou <codeph class="+ topic/ph pr-d/codeph ">SharedObject.close()</codeph>. 
     
     <p class="- topic/p ">Si cette méthode renvoie <codeph class="+ topic/ph pr-d/codeph ">SharedObjectFlushStatus.PENDING</codeph>, Flash Player ouvre une boîte de dialogue demandant à l’utilisateur d’augmenter la quantité d’espace disque disponible pour les objets de ce domaine. Pour ménager un espace permettant à la taille de l’objet partagé de croître lors d’un enregistrement ultérieur, évitant ainsi des valeurs renvoyées de <codeph class="+ topic/ph pr-d/codeph ">PENDING</codeph>, transmettez une valeur à <codeph class="+ topic/ph pr-d/codeph ">minDiskSpace</codeph>. Lorsque Flash Player tente d’écrire le fichier, il recherche le nombre d’octets transmis à <codeph class="+ topic/ph pr-d/codeph ">minDiskSpace</codeph> plutôt que l’espace nécessaire à l’enregistrement de l’objet partagé à sa taille actuelle. </p>
     
     <p class="- topic/p ">Par exemple, si vous pensez qu’un objet partagé atteindra une taille maximale de 500 octets, même s’il est au départ beaucoup plus petit, transmettez 500 à <codeph class="+ topic/ph pr-d/codeph ">minDiskSpace</codeph>. Le cas échéant, Flash demandera à l’utilisateur d’affecter 500 octets d’espace disque à l’objet partagé. Une fois que l’utilisateur affecte l’espace nécessaire, Flash ne demande pas davantage d’espace lors des prochaines tentatives de purge de l’objet (tant que sa taille ne dépasse pas les 500 octets). </p>
     
     <p class="- topic/p ">Une fois que l’utilisateur a répondu dans la boîte de dialogue, cette méthode est de nouveau appelée. Un événement <codeph class="+ topic/ph pr-d/codeph ">netStatus</codeph> est distribué avec une propriété <codeph class="+ topic/ph pr-d/codeph ">code</codeph> <codeph class="+ topic/ph pr-d/codeph ">SharedObject.Flush.Success</codeph> ou <codeph class="+ topic/ph pr-d/codeph ">SharedObject.Flush.Failed</codeph>.
     </p>
     
     </apiDesc><example conref="examples\SharedObject_flush.as" class="- topic/example "> Le code suivant crée (et lors des ses prochaines exécutions, récupère) un objet SharedObject en utilisant l’ID <codeph class="+ topic/ph pr-d/codeph ">hostName</codeph>. Une propriété appelée <codeph class="+ topic/ph pr-d/codeph ">username</codeph> est ajoutée à la propriété data de l’objet SharedObject. La méthode <codeph class="+ topic/ph pr-d/codeph ">flush()</codeph> est appelée. Une vérification détermine ensuite si la chaîne <codeph class="+ topic/ph pr-d/codeph ">pending</codeph> ou une valeur booléenne <codeph class="+ topic/ph pr-d/codeph ">true</codeph> ou <codeph class="+ topic/ph pr-d/codeph ">false</codeph> a été renvoyée. N’oubliez pas que toutes les occurrences ouvertes de SharedObject sont automatiquement purgées à la fermeture de l’occurrence actuelle de Flash Player.
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
package {
    import flash.net.SharedObject;

    public class SharedObject_flush {
        private var hostName:String = "yourDomain";
        private var username:String = "yourUsername";

        public function SharedObject_flush() {
            var mySo:SharedObject = SharedObject.getLocal(hostName);
            mySo.data.username = username;
            var flushResult:Object = mySo.flush();
            trace("flushResult: " + flushResult);
            trace(mySo.data.username); // yourUsername
        }
    }
}
</codeblock></example></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#SharedObject/clear()" class="- topic/link "><linktext class="- topic/linktext ">clear()</linktext></link></related-links></apiOperation><apiOperation id="flash.net:SharedObject:getLocal" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">getLocal</apiName><shortdesc class="- topic/shortdesc ">
  Renvoie une référence à un objet partagé persistant localement qui est disponible uniquement pour le client actuel.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">SharedObject, constructor, SharedObject.getLocal, getLocal, get
  
   
   </keyword></asCustoms></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Flash Player ne peut pas créer l’objet partagé pour une raison quelconque. Cette erreur est susceptible de se produire si la création d’objets partagés persistants et le stockage de contenu Flash en provenance de tiers sont interdits (ceci ne s’applique pas au contenu local). Les utilisateurs peuvent interdire les objets partagés persistants de tiers dans le panneau Paramètres globaux d’enregistrement du Gestionnaire de paramètres, situé à l’adresse <xref href="http://www.adobe.com/support/documentation/fr/flashplayer/help/settings_manager03.html" scope="external" class="- topic/xref ">http://www.adobe.com/support/documentation/fr/flashplayer/help/settings_manager03.html</xref>.
  
  </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">Error</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Error</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Référence à un objet partagé qui est persistant localement et disponible uniquement pour le client actuel. Si Flash Player ne peut pas créer ni localiser l’objet partagé (par exemple, si <codeph class="+ topic/ph pr-d/codeph ">localPath</codeph> a été spécifié mais que son répertoire n’existe pas), cette méthode renvoie une exception.
  
  </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.net:SharedObject</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">name</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Nom de l’objet. Le nom peut comporter des barres obliques (<codeph class="+ topic/ph pr-d/codeph ">/</codeph>) ; par exemple, <codeph class="+ topic/ph pr-d/codeph ">work/addresses</codeph> est un nom admissible. Les espaces ne sont pas autorisés dans un nom d’objet partagé, ainsi que les caractères suivants :   
  <pre xml:space="preserve" class="- topic/pre ">
  ~ % &amp; \ ; : " ' , &lt; > ? # 
  </pre>
  
  </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">localPath</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Chemin complet ou partiel du fichier SWF qui a créé l’objet partagé, et qui détermine l’endroit où l’objet partagé sera stocké localement. Si vous omettez ce paramètre, le chemin complet est utilisé. 
   
  </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">secure</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Détermine si l’accès à cet objet partagé est limité aux fichiers SWF reçus via une connexion HTTPS. Si votre fichier SWF est reçu via HTTPS, la valeur de ce paramètre a les effets suivants :
  <ul class="- topic/ul "><li class="- topic/li ">Si ce paramètre est défini sur <codeph class="+ topic/ph pr-d/codeph ">true</codeph>, Flash Player crée un nouvel objet partagé sécurisé ou obtient une référence à un objet partagé sécurisé existant. Cet objet sécurisé partagé peut uniquement être lu par des fichiers SWF ou écrit dans des fichiers SWF reçus via des HTTPS appelant <codeph class="+ topic/ph pr-d/codeph ">SharedObject.getLocal()</codeph> avec le paramètre <codeph class="+ topic/ph pr-d/codeph ">secure</codeph> défini sur <codeph class="+ topic/ph pr-d/codeph ">true</codeph>.</li><li class="- topic/li ">Si ce paramètre est défini sur <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, Flash Player crée un objet partagé ou obtient une référence à un objet partagé existant, qui peut être lu ou écrit par des fichiers SWF reçus via des connexions autres que HTTPS.</li></ul>
  <p class="- topic/p ">Si votre fichier SWF est reçu via une connexion autre que HTTPS et que vous tentez de définir ce paramètre sur <codeph class="+ topic/ph pr-d/codeph ">true</codeph>, la création d’un nouvel objet partagé (ou l’accès à un objet partagé sécurisé précédemment créé) échoue et <codeph class="+ topic/ph pr-d/codeph ">null</codeph> est renvoyé. Quelle que soit la valeur de ce paramètre, les objets partagés créés sont comptabilisés dans la quantité d’espace disque total autorisée pour un domaine.</p>
  
  <p class="- topic/p ">Le diagramme suivant indique comment utiliser le paramètre <codeph class="+ topic/ph pr-d/codeph ">secure</codeph> :</p>
  <p class="- topic/p "><adobeimage alt="Diagramme d’un objet partagé sécurisé" href="../../images/secureParam.jpg" placement="inline" class="+ topic/image adobe-d/adobeimage "/></p>
  
  </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
  Renvoie une référence à un objet partagé persistant localement qui est disponible uniquement pour le client actuel. Si l’objet partagé n’existe pas encore, cette méthode en crée un. Si des valeurs transmises à <codeph class="+ topic/ph pr-d/codeph ">getLocal()</codeph> sont incorrectes ou si l’appel échoue, Flash Player renvoie une exception.
  
  <p class="- topic/p ">Le code suivant illustre la procédure d’attribution à une variable de la référence à l’objet partagé renvoyé :</p>
  <p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">var so:SharedObject = SharedObject.getLocal("savedData");</codeph></p>
  
  <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Remarque :</b> si l’utilisateur a choisi de ne jamais autoriser l’enregistrement local pour ce domaine, l’objet n’est pas enregistré localement, même si une valeur est spécifiée pour <codeph class="+ topic/ph pr-d/codeph ">localPath</codeph>. L’exception à cette règle est le contenu local. Un contenu local peut toujours écrire des objets partagés en provenance de domaines tiers sur un disque (domaines autres que celui de la barre d’adresse actuelle du navigateur), même s’il est interdit à un domaine tiers d’écrire des objets partagés sur un disque.
  </p>
  
  <p class="- topic/p ">Pour éviter les conflits de noms, Flash examine l’emplacement du fichier SWF qui crée l’objet partagé. Par exemple, si un fichier SWF à l’adresse www.myCompany.com/apps/stockwatcher.swf crée un objet partagé nommé <codeph class="+ topic/ph pr-d/codeph ">portfolio</codeph>, cet objet partagé n’entre pas en conflit avec un autre objet nommé <codeph class="+ topic/ph pr-d/codeph ">portfolio</codeph> qui a été créé par un fichier SWF à l’adresse www.yourCompany.com/photoshoot.swf, étant donné que les fichiers SWF proviennent de répertoires différents. </p>
  
  <p class="- topic/p ">Bien que le paramètre <codeph class="+ topic/ph pr-d/codeph ">localPath</codeph> soit facultatif, vous devez réfléchir à son utilisation, en particulier si les autres fichiers SWF doivent accéder à l’objet partagé. Si les données dans l’objet partagé sont spécifiques à un fichier SWF qui ne sera pas déplacé dans un autre emplacement, l’utilisation de la valeur par défaut prend alors tout son sens. Si d’autres fichiers SWF nécessitent un accès à l’objet partagé ou si le fichier SWF qui crée l’objet partagé est déplacé ultérieurement, la valeur de ce paramètre peut alors affecter l’accessibilité de l’objet partagé. Par exemple, si vous créez un objet partagé en réglant <codeph class="+ topic/ph pr-d/codeph ">localPath</codeph> sur la valeur par défaut du chemin complet du fichier SWF, aucun autre fichier SWF ne pourra accéder à cet objet partagé. Si vous déplacez par la suite le fichier SWF d’origine dans un autre emplacement, il ne pourra plus accéder aux données déjà enregistrées dans l’objet partagé.</p>
  
  <p class="- topic/p ">Pour éviter de limiter inopinément l’accès à un objet partagé, utilisez le paramètre <codeph class="+ topic/ph pr-d/codeph ">localpath</codeph>. La meilleure option consiste à définir le paramètre <codeph class="+ topic/ph pr-d/codeph ">localPath</codeph> sur <codeph class="+ topic/ph pr-d/codeph ">/</codeph>. Cette opération rend l’objet partagé accessible à tous les fichiers SWF du domaine, mais augmente la probabilité de conflits de noms avec d’autres objets partagés dans ce domaine. Une autre option, plus restrictive, consiste à faire suivre <codeph class="+ topic/ph pr-d/codeph ">localPath</codeph> de noms de dossier figurant dans le chemin complet du fichier SWF. Prenons l’exemple de l’objet partagé <codeph class="+ topic/ph pr-d/codeph ">portfolio</codeph> créé par le fichier SWF à l’adresse www.myCompany.com/apps/stockwatcher.swf. Vous pouvez régler le paramètre <codeph class="+ topic/ph pr-d/codeph ">localPath</codeph> sur <codeph class="+ topic/ph pr-d/codeph ">/</codeph>, <codeph class="+ topic/ph pr-d/codeph ">/apps</codeph> ou <codeph class="+ topic/ph pr-d/codeph ">/apps/stockwatcher.swf</codeph>. Vous devrez identifier l’option qui offre la meilleure flexibilité à votre application.</p>
  
  <p class="- topic/p ">Lorsque vous employez cette méthode, tenez compte du modèle de sécurité suivant :
  
  <ul class="- topic/ul "><li class="- topic/li ">Vous ne pouvez pas accéder à des objets partagés en franchissant les limites sandbox.</li><li class="- topic/li ">Les utilisateurs peuvent limiter l’accès aux objets partagés via la boîte de dialogue Paramètres de Flash Player ou via le Gestionnaire des paramètres. Par défaut, une application peut créer des objets partagés contenant jusqu’à 100 Ko de données par domaine. Les administrateurs et les utilisateurs peuvent également limiter la capacité à écrire dans le système de fichiers.</li></ul></p>
  
  <p class="- topic/p ">Imaginons que vous publiez le contenu de fichiers SWF afin qu’il soit lu sous forme de fichiers locaux (fichiers SWF installés localement ou fichiers EXE) et que vous deviez accéder à un objet partagé spécifique à partir de plusieurs fichiers SWF locaux. Dans ce cas, sachez que, pour ce qui est des fichiers locaux, il est possible d’utiliser deux emplacements différents pour le stockage des objets partagés. Le domaine utilisé dépend des autorisations de sécurité accordées au fichier local qui a créé l’objet partagé. Les fichiers locaux peuvent avoir trois niveaux distincts d’autorisation :
  
  <ol class="- topic/ol "><li class="- topic/li ">Accès au système de fichiers local uniquement</li><li class="- topic/li ">Accès au réseau uniquement</li><li class="- topic/li ">Accès au réseau et au système de fichiers local</li></ol></p>
  
  <p class="- topic/p ">Les fichiers locaux pouvant accéder au système de fichiers local (niveau 1 ou 3) stockent leurs objets partagés à un emplacement unique. Les fichiers locaux ne pouvant pas accéder au système de fichiers local (niveau 2) stockent leurs objets partagés dans un autre emplacement.</p>
  
  <p class="- topic/p ">Vous pouvez empêcher un fichier SWF d’utiliser cette méthode en définissant le paramètre <codeph class="+ topic/ph pr-d/codeph ">allowNetworking</codeph> des balises <codeph class="+ topic/ph pr-d/codeph ">object</codeph> et <codeph class="+ topic/ph pr-d/codeph ">embed</codeph> dans la page HTML qui comporte le contenu SWF.</p>
  
  <p class="- topic/p ">Pour plus d’informations, voir la rubrique du Pôle de développement Flash Player : <xref href="http://www.adobe.com/go/devnet_security_fr" scope="external" class="- topic/xref ">Sécurité</xref> (disponible en anglais uniquement).</p>
  
  </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.net:SharedObject:getRemote" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">getRemote</apiName><shortdesc class="- topic/shortdesc ">
     Renvoie une référence à un objet partagé sur Flash Media Server auquel plusieurs clients peuvent accéder.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><internal>server-specific: This info is relevant for Flash Media Server, but not Flex Data Services.
     </internal></asCustoms></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Flash Player ne peut pas créer ni localiser l’objet partagé. Cette situation peut se produire si les paramètres <codeph class="+ topic/ph pr-d/codeph ">remotePath</codeph> et <codeph class="+ topic/ph pr-d/codeph ">persistence</codeph> ont été réglés sur des chemins inexistants.
     
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">Error</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Error</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Référence à un objet pouvant être partagé entre plusieurs clients.
     
     </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.net:SharedObject</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">name</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Nom de l’objet partagé distant. Le nom peut comporter des barres obliques (); par exemple, work/addresses est un nom admissible. Les espaces ne sont pas autorisés dans un nom d’objet partagé, ainsi que les caractères suivants :
     <pre xml:space="preserve" class="- topic/pre ">    ~ % &amp; \ ; :  " ' , > ? ? #</pre>
     
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">remotePath</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">URI du serveur sur lequel sera stocké l’objet partagé. Cette URI doit être identique à celle de l’objet NetConnection transmis à la méthode <codeph class="+ topic/ph pr-d/codeph ">connect()</codeph>. 
     
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">persistence</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Object</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Indique si les attributs des propriétés data de l’objet partagé sont persistants localement et/ou à distance. Ce paramètre peut également indiquer l’emplacement de stockage local de l’objet partagé. Les valeurs possibles sont les suivantes :
     <ul class="- topic/ul "><li class="- topic/li ">La valeur <codeph class="+ topic/ph pr-d/codeph ">false</codeph> indique que l’objet partagé n’est pas persistant dans le client ou le serveur.</li><li class="- topic/li ">La valeur <codeph class="+ topic/ph pr-d/codeph ">true</codeph> indique que l’objet partagé est persistant dans le serveur uniquement.</li><li class="- topic/li ">Un chemin d’accès local partiel ou complet à l’objet partagé indique que ce dernier est persistant dans le client et le serveur. Dans le client, il est stocké dans le chemin spécifié. Sur le serveur, il est stocké dans un sous-répertoire du répertoire de l’application.</li></ul>
     
     <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Remarque :</b> si l’utilisateur a choisi de ne jamais autoriser l’enregistrement local pour ce domaine, l’objet n’est pas enregistré localement, même si un chemin local est spécifié à des fins de persistance. Pour plus d’informations, voir la description de la classe.</p>
     
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">secure</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Détermine si l’accès à cet objet partagé est limité aux fichiers SWF reçus via une connexion HTTPS. Pour plus d’informations, voir la description du paramètre <codeph class="+ topic/ph pr-d/codeph ">secure</codeph> dans la section consacrée à la méthode <codeph class="+ topic/ph pr-d/codeph ">getLocal</codeph>.
     
     </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Renvoie une référence à un objet partagé sur Flash Media Server auquel plusieurs clients peuvent accéder. Si l’objet partagé distant n’existe pas encore, cette méthode en crée un. 
     
     <p class="- topic/p ">
     Pour créer un objet partagé distant, appelez <codeph class="+ topic/ph pr-d/codeph ">getRemote()</codeph>, puis <codeph class="+ topic/ph pr-d/codeph ">connect()</codeph> pour connecter l’objet partagé distant au serveur, comme suit :</p>
     
     <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
     var nc:NetConnection = new NetConnection();
     nc.connect("rtmp://somedomain.com/applicationName");
     var myRemoteSO:SharedObject = SharedObject.getRemote("mo", nc.uri, false);
     myRemoteSO.connect(nc);
     </codeblock>
     
     
     
     <p class="- topic/p ">
     Pour confirmer la synchronisation des copies locale et distante de l’objet partagé, écoutez et gérez l’événement <codeph class="+ topic/ph pr-d/codeph ">sync</codeph>. Tous les clients qui souhaitent partager cet objet doivent transmettre les mêmes valeurs pour les paramètres <codeph class="+ topic/ph pr-d/codeph ">name</codeph> et <codeph class="+ topic/ph pr-d/codeph ">remotePath.</codeph> 
     </p> 
     
     <p class="- topic/p ">Pour créer un objet partagé accessible au client actuel uniquement, utilisez <codeph class="+ topic/ph pr-d/codeph ">SharedObject.getLocal()</codeph>.
     </p>
     
     </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#SharedObject/connect()" class="- topic/link "><linktext class="- topic/linktext ">connect()</linktext></link><link href="flash.net.xml#SharedObject/getLocal()" class="- topic/link "><linktext class="- topic/linktext ">getLocal()</linktext></link></related-links></apiOperation><apiOperation id="flash.net:SharedObject:send" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">send</apiName><shortdesc class="- topic/shortdesc ">
     Diffuse un message à tous les clients connectés à l’objet partagé distant, y compris au client qui a envoyé le message.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><internal>Needs better documentation, examples.
     </internal></asCustoms></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">arguments</apiItemName><apiType value="restParam" name="type" class="- topic/state reference/state apiRef/apiType "/><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Un ou plusieurs arguments : chaîne identifiant le message, le nom d’une ou de plusieurs fonctions de gestionnaire à joindre à l’objet partagé et des paramètres facultatifs de tout type. Le nom du gestionnaire ne peut avoir qu’un seul niveau (autrement dit, il ne peut pas être au format parent/enfant) et est relatif à l’objet partagé. Les arguments sont sérialisés et envoyés via la connexion, et le gestionnaire de destination les reçoit dans le même ordre. Si un paramètre représente un objet circulaire (une liste liée qui est circulaire, par exemple), l’utilitaire de sérialisation gère correctement les références.
     
     <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Remarque</b> : n’utilisez pas un terme réservé comme nom de fonction. <codeph class="+ topic/ph pr-d/codeph ">myRemoteSO.send("close")</codeph>, par exemple, se soldera par un échec.</p>
     
     </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Diffuse un message à tous les clients connectés à l’objet partagé distant, y compris au client qui a envoyé le message. Pour traiter le message et y répondre, créez une fonction de rappel associée à l’objet partagé.
     
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.net:SharedObject:setDirty" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">setDirty</apiName><shortdesc class="- topic/shortdesc ">
     Indique au serveur que la valeur d’une propriété a changé dans l’objet partagé.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><internal>The AS2 player automatically marks properties dirty as they are changed.
          The FMS server, however, requires an explicit setProperty() call to indicate when a property
          of data has changed.
     
          AS3 does not support auto-dirtying the properties, so we are introducing setDirty() to explicitly
          indicate when a property has changed, and setProperty() to match the method provided with the server.
     
          It's probably best to read the FMS Actionscript reference (search for SharedObject.setProperty at
          www.adobe.com) before writing this documentation, as the details should be similar.
     
     </internal></asCustoms></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">propertyName</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Nom de la propriété qui a changé.
     
     </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Indique au serveur que la valeur d’une propriété a changé dans l’objet partagé. Cette méthode marque les propriétés comme <i class="+ topic/ph hi-d/i ">dirty</i>, ce qui signifie qu’elles ont été modifiées.
     
     <p class="- topic/p ">
     Pour créer les propriétés d’un objet partagé, appelez <codeph class="+ topic/ph pr-d/codeph ">SharedObject.setProperty()</codeph>. 
     </p>
      
     <p class="- topic/p ">
     La méthode <codeph class="+ topic/ph pr-d/codeph ">SharedObject.setProperty()</codeph> implémente <codeph class="+ topic/ph pr-d/codeph ">setDirty()</codeph>. Dans la plupart des cas, par exemple lorsque la valeur d’une propriété est de type primitif, comme String ou Number, appelez <codeph class="+ topic/ph pr-d/codeph ">setProperty()</codeph> plutôt que <codeph class="+ topic/ph pr-d/codeph ">setDirty()</codeph>. En revanche, lorsque la valeur d’une propriété est un objet qui contient ses propres propriétés, appelez <codeph class="+ topic/ph pr-d/codeph ">setDirty()</codeph> pour indiquer la modification d’une valeur dans l’objet.
     </p>
     
     </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#SharedObject/data" class="- topic/link "><linktext class="- topic/linktext ">SharedObject.data (propriété côté client)</linktext></link><link href="flash.net.xml#SharedObject/setProperty()" class="- topic/link "><linktext class="- topic/linktext ">setProperty()</linktext></link></related-links></apiOperation><apiOperation id="flash.net:SharedObject:setProperty" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">setProperty</apiName><shortdesc class="- topic/shortdesc ">
     Met à jour la valeur d’une propriété dans un objet partagé et indique cette modification au serveur.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">propertyName</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Nom de la propriété de l’objet partagé.
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">value</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Object</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Valeur de la propriété (objet ActionScript) ou <codeph class="+ topic/ph pr-d/codeph ">null</codeph> pour supprimer la propriété. 
     
     </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Met à jour la valeur d’une propriété dans un objet partagé et indique cette modification au serveur. La méthode <codeph class="+ topic/ph pr-d/codeph ">setProperty()</codeph> marque explicitement les propriétés comme modifiées (dirty).
     
     <p class="- topic/p ">Pour plus d’informations sur les objets partagés distants, voir la <xref href="http://www.adobe.com/go/learn_fms_docs_en" class="- topic/xref ">Documentation de Flash Media Server</xref>.</p>
     
     <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Remarque :</b> La méthode <codeph class="+ topic/ph pr-d/codeph ">SharedObject.setProperty()</codeph> implémente la méthode <codeph class="+ topic/ph pr-d/codeph ">setDirty()</codeph>. Dans la plupart des cas, par exemple lorsque la valeur d’une propriété est de type primitif, comme String ou Number, utilisez <codeph class="+ topic/ph pr-d/codeph ">setProperty()</codeph> plutôt que <codeph class="+ topic/ph pr-d/codeph ">setDirty()</codeph>. En revanche, lorsque la valeur de la propriété est un objet qui contient ses propres propriétés, utilisez <codeph class="+ topic/ph pr-d/codeph ">setDirty()</codeph> pour indiquer la modification d’une valeur dans l’objet. De façon générale, il est conseillé d’appeler <codeph class="+ topic/ph pr-d/codeph ">setProperty()</codeph> plutôt que <codeph class="+ topic/ph pr-d/codeph ">setDirty()</codeph>, car <codeph class="+ topic/ph pr-d/codeph ">setProperty()</codeph> ne met à jour la valeur d’une propriété que lorsqu’elle a changé, tandis que <codeph class="+ topic/ph pr-d/codeph ">setDirty()</codeph> impose la synchronisation à tous les clients abonnés.</p>
     
     </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#SharedObject/data" class="- topic/link "><linktext class="- topic/linktext ">SharedObject.data (propriété côté client)</linktext></link></related-links></apiOperation><apiValue id="flash.net:SharedObject:client:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">client</apiName><shortdesc class="- topic/shortdesc ">
     Indique l’objet sur lequel des méthodes de rappel sont appelées.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><internal>Property documented; needs review.
      
      </internal></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Object</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">La propriété <codeph class="+ topic/ph pr-d/codeph ">client</codeph> ne peut pas être réglée sur l’objet null.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">TypeError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">TypeError</apiOperationClassifier></apiException></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Indique l’objet sur lequel des méthodes de rappel sont appelées. L’objet par défaut est <codeph class="+ topic/ph pr-d/codeph ">this</codeph>. Si vous réglez la propriété client sur un autre objet, les méthodes de rappels sont appelées sur celui-ci.
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:SharedObject:data:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">data</apiName><shortdesc class="- topic/shortdesc ">
     Ensemble des attributs affectés à la propriété data de l’objet. Ces attributs peuvent être partagés et stockés.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">SharedObject, SharedObject.data, data
     
     </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Object</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Ensemble des attributs affectés à la propriété <codeph class="+ topic/ph pr-d/codeph ">data</codeph> de l’objet. Ces attributs peuvent être partagés et stockés. Chaque attribut peut être un objet d’un quelconque type ActionScript ou JavaScript : tableau, nombre, valeur booléenne, ByteArray, XML, etc. Par exemple, les lignes suivantes affectent des valeurs à différents aspects d’un objet partagé :
     
     <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
     var items_array:Array = new Array(101, 346, 483);
     var currentUserIsAdmin:Boolean = true;
     var currentUserName:String = "Ramona";
     
     var my_so:SharedObject = SharedObject.getLocal("superfoo");
     my_so.data.itemNumbers = items_array;
     my_so.data.adminPrivileges = currentUserIsAdmin;
     my_so.data.userName = currentUserName;
     
     for (var prop in my_so.data) {
       trace(prop+": "+my_so.data[prop]);
     }
     </codeblock>
     
     
     
     <p class="- topic/p ">Tous les attributs de la propriété <codeph class="+ topic/ph pr-d/codeph ">data</codeph> d’un objet partagé sont enregistrés si l’objet est persistant, et l’objet partagé contient les informations suivantes :</p>
     
     <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
     userName: Ramona
     adminPrivileges: true
     itemNumbers: 101,346,483
     </codeblock>
     
     <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Remarque :</b> n’affectez pas directement de valeurs à la propriété <codeph class="+ topic/ph pr-d/codeph ">data</codeph> d’un objet partagé, tel que dans <codeph class="+ topic/ph pr-d/codeph ">so.data = someValue</codeph> car Flash Player ignore ces affectations.</p>
     
     <p class="- topic/p ">Pour supprimer des attributs pour des objets partagés locaux, utilisez un code tel que <codeph class="+ topic/ph pr-d/codeph ">delete so.data.attributeName</codeph>. La définition d’un attribut sur <codeph class="+ topic/ph pr-d/codeph ">null</codeph> ou <codeph class="+ topic/ph pr-d/codeph ">undefined</codeph> pour un objet partagé local ne supprime pas l’attribut.</p>
     
     <p class="- topic/p ">Pour créer des valeurs <i class="+ topic/ph hi-d/i ">privées</i> pour un objet partagé, valeurs qui ne sont disponibles que pour l’occurrence du client alors que l’objet est utilisé et qui ne sont pas enregistrées avec l’objet lorsqu’il est fermé, créez des propriétés qui ne sont pas nommées <codeph class="+ topic/ph pr-d/codeph ">data</codeph> pour les enregistrer, comme l’illustre l’exemple suivant :</p>
     
     <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
     var my_so:SharedObject = SharedObject.getLocal("superfoo");
     my_so.favoriteColor = "blue";
     my_so.favoriteNightClub = "The Bluenote Tavern";
     my_so.favoriteSong = "My World is Blue";
     
     for (var prop in my_so) {
       trace(prop+": "+my_so[prop]);
     }
     </codeblock>
     
     
     
     <p class="- topic/p ">L’objet partagé contient les données suivantes :</p>
     <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
     favoriteSong: My World is Blue
     favoriteNightClub: The Bluenote Tavern
     favoriteColor: blue
     data: [object Object]
     </codeblock>
     
     <p class="- topic/p ">
     Dans le cas d’objets partagés distants utilisés avec un serveur, tous les attributs de la propriété <codeph class="+ topic/ph pr-d/codeph ">data</codeph> sont accessibles à tous les clients connectés à l’objet partagé, et tous les attributs sont enregistrés si l’objet est persistant. Lorsqu’un client modifie la valeur d’un attribut, tous les clients voient ensuite la nouvelle valeur.
     </p>
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#SharedObject/getLocal()" class="- topic/link "><linktext class="- topic/linktext ">getLocal()</linktext></link></related-links></apiValue><apiValue id="flash.net:SharedObject:defaultObjectEncoding:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">defaultObjectEncoding</apiName><shortdesc class="- topic/shortdesc ">
     Encodage d’objet par défaut (version AMF) de tous les objets partagés locaux créés dans le fichier SWF.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">uint</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Encodage d’objet par défaut (version AMF) de tous les objets partagés locaux créés dans le fichier SWF. Lorsque les objets partagés locaux sont écrits sur le disque, la propriété <codeph class="+ topic/ph pr-d/codeph ">SharedObject.defaultObjectEncoding</codeph> indique la version AMF (Action Message Format) devant être utilisée : format ActionScript 3.0 (AMF3) ou format ActionScript 1.0 ou 2.0 (AMF0).
     
     <p class="- topic/p ">Pour plus d’informations sur l’encodage des objets, y compris sur les différences d’encodage des objets partagés selon qu’ils sont locaux ou distants, voir la description de la propriété <codeph class="+ topic/ph pr-d/codeph ">objectEncoding</codeph>.</p>
     
     <p class="- topic/p ">La valeur par défaut de <codeph class="+ topic/ph pr-d/codeph ">SharedObject.defaultObjectEncoding</codeph> stipule l’utilisation du format ActionScript 3.0 (AMF3). Pour écrire des objets partagés locaux qui doivent être lus par des fichiers SWF ActionScript 2.0 ou 1.0, réglez <codeph class="+ topic/ph pr-d/codeph ">SharedObject.defaultObjectEncoding</codeph> sur <codeph class="+ topic/ph pr-d/codeph ">flash.net.ObjectEncoding.AMF0</codeph> afin qu’elle utilise le format ActionScript 1.0 ou ActionScript 2.0, au début de votre script, avant de créer les objets. Tous les objets partagés locaux créés ultérieurement utiliseront l’encodage AMF0 et pourront interagir avec du contenu plus ancien. Après la création des objets partagés locaux, il est impossible de modifier leur valeur <codeph class="+ topic/ph pr-d/codeph ">objectEncoding</codeph> correspondante en définissant <codeph class="+ topic/ph pr-d/codeph ">SharedObject.defaultObjectEncoding</codeph>.</p>
     
     <p class="- topic/p ">Pour configurer l’encodage objet par objet, plutôt que pour la totalité des objets partagés créés par le fichier SWF, définissez la propriété <codeph class="+ topic/ph pr-d/codeph ">objectEncoding</codeph> de l’objet concerné.</p>
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#SharedObject/objectEncoding" class="- topic/link "><linktext class="- topic/linktext ">Propriété objectEncoding</linktext></link><link href="flash.net.xml#ObjectEncoding" class="- topic/link "><linktext class="- topic/linktext ">Classe ObjectEncoding</linktext></link></related-links></apiValue><apiValue id="flash.net:SharedObject:objectEncoding:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">objectEncoding</apiName><shortdesc class="- topic/shortdesc ">
     Encodage d’objet (version AMF) de cet objet partagé.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">uint</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Vous avez tenté de définir la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">objectEncoding</codeph> pour un objet partagé distant. Cette propriété est en lecture seule pour les objets partagés distants car sa valeur est déterminée par l’occurrence de NetConnection associée.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ReferenceError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ReferenceError</apiOperationClassifier></apiException></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Encodage d’objet (version AMF) de cet objet partagé. Lors de l’écriture d’un objet partagé local sur le disque, la propriété <codeph class="+ topic/ph pr-d/codeph ">objectEncoding</codeph> indique la version AMF (Action Message Format) devant être utilisée : format ActionScript 3.0 (AMF3) ou format ActionScript 1.0 ou 2.0 (AMF0). 
     
     <p class="- topic/p ">L’encodage d’objet est géré différemment selon que l’objet partagé est local ou distant.</p>
     <ul class="- topic/ul "><li class="- topic/li "><b class="+ topic/ph hi-d/b ">Objets partagés locaux</b>. Vous pouvez extraire ou définir la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">objectEncoding</codeph> des objets partagés locaux. La valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">objectEncoding</codeph> a une incidence sur le formatage utilisé pour <i class="+ topic/ph hi-d/i ">écrire</i> l’objet local partagé. Si l’objet local partagé doit pouvoir être lu par des fichiers SWF ActionScript 2.0 ou 1.0, réglez <codeph class="+ topic/ph pr-d/codeph ">objectEncoding</codeph> sur <codeph class="+ topic/ph pr-d/codeph ">ObjectEncoding.AMF0</codeph>. Flash Player peut lire les objets partagés locaux AMF0 même si l’encodage d’objet écrit au format AMF3. En d’autres termes, si vous utilisez la valeur par défaut de cette propriété, <codeph class="+ topic/ph pr-d/codeph ">ObjectEncoding.AMF3</codeph>, votre fichier SWF peut néanmoins lire les objets partagés créés par les fichiers ActionScript 2.0 ou 1.0.
     </li><li class="- topic/li "><b class="+ topic/ph hi-d/b ">Objets partagés distants</b>. Lorsqu’il est connecté au serveur, un objet partagé distant hérite de son paramètre <codeph class="+ topic/ph pr-d/codeph ">objectEncoding</codeph> de l’occurrence de NetConnection associée (utilisée pour la connexion à l’objet partagé distant). Lorsqu’il n’est pas connecté au serveur, un objet partagé distant hérite du paramètre <codeph class="+ topic/ph pr-d/codeph ">defaultObjectEncoding</codeph> de l’occurrence de NetConnection associée. Comme la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">objectEncoding</codeph> de l’objet partagé distant est déterminée par l’occurrence de NetConnection, cette propriété est en lecture seule pour les objets partagés distants.
     </li></ul>
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#SharedObject/defaultObjectEncoding" class="- topic/link "><linktext class="- topic/linktext ">defaultObjectEncoding</linktext></link><link href="flash.net.xml#ObjectEncoding" class="- topic/link "><linktext class="- topic/linktext ">flash.net.ObjectEncoding</linktext></link></related-links></apiValue><apiValue id="flash.net:SharedObject:size:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">size</apiName><shortdesc class="- topic/shortdesc ">
     Taille actuelle de l’objet partagé, en octets.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">SharedObject, SharedObject.getSize, getSize
      
      </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">uint</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Taille actuelle de l’objet partagé, en octets.
     
     <p class="- topic/p ">Flash calcule la taille d’un objet partagé en examinant toutes ses propriétés data ; plus un objet a de propriétés data, plus l’estimation de sa taille prend du temps. L’estimation de la taille de l’objet peut monopoliser beaucoup de temps de traitement. Il est donc recommandé d’éviter cette méthode à moins d’en avoir réellement besoin.</p>
     
     </apiDesc><example conref="examples\SharedObject.size.1.as" class="- topic/example "> Le code suivant crée un objet SharedObject en utilisant l’ID <codeph class="+ topic/ph pr-d/codeph ">"thehobbit"</codeph>. Une propriété appelée <codeph class="+ topic/ph pr-d/codeph ">username</codeph> est ajoutée à la propriété data de l’objet SharedObject. Le code assure ensuite le suivi de la propriété <codeph class="+ topic/ph pr-d/codeph ">size</codeph>, ce qui a pour effet de renvoyer la valeur indiquée.
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">

import flash.net.SharedObject;

// if these get copied or not
var mySo:SharedObject = SharedObject.getLocal("thehobbit");
mySo.data.username = "bilbobaggins";
trace(mySo.size); // 55
</codeblock></example></apiValueDetail></apiValue><apiValue id="flash.net:SharedObject:fps:set" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">fps</apiName><shortdesc class="- topic/shortdesc ">
     Indique la fréquence, en secondes, d’envoi au serveur des modifications apportées à un client.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><internal>server-specific: The info is relevant for Flash Media Server, but not Flex.
     </internal></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="write" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Indique la fréquence, en secondes, d’envoi au serveur des modifications apportées à un client. 
     
     <p class="- topic/p ">Cette méthode vous permet de contrôler le trafic entre le client et le serveur. Si la connexion entre le client et le serveur est relativement lente, par exemple, réglez <codeph class="+ topic/ph pr-d/codeph ">fps</codeph> sur une valeur peu élevée. Inversement, si le client est connecté à une application multi-utilisateurs et que la vitesse des échanges est primordiale, réglez <codeph class="+ topic/ph pr-d/codeph ">fps</codeph> sur une valeur relativement élevée.</p>
     
     <p class="- topic/p ">La définition de <codeph class="+ topic/ph pr-d/codeph ">fps</codeph> déclenchera un événement <codeph class="+ topic/ph pr-d/codeph ">sync</codeph> et actualisera toutes les modifications sur le serveur. Pour actualiser le serveur manuellement, définissez <codeph class="+ topic/ph pr-d/codeph ">fps</codeph> sur 0.</p>
     
     <p class="- topic/p ">Les modifications ne sont envoyées au serveur qu’après la diffusion de l’événement <codeph class="+ topic/ph pr-d/codeph ">sync</codeph>. En d’autres termes, si le serveur réagit lentement, l’envoi des mises à jour risque d’être moins fréquent que ne le spécifie la valeur de cette propriété. </p>
     
     </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.net:NetGroupInfo" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">NetGroupInfo</apiName><shortdesc class="- topic/shortdesc ">
La classe NetGroupInfo spécifie les diverses statistiques de qualité de service (QoS) liées à la transmission sous-jacente de données RTMFP homologue à homologue d’un objet NetGroup.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
La classe NetGroupInfo spécifie les diverses statistiques de qualité de service (QoS) liées à la transmission sous-jacente de données RTMFP homologue à homologue d’un objet NetGroup. La propriété <codeph class="+ topic/ph pr-d/codeph ">NetGroup.info</codeph> renvoie une objet NetGroupInfo qui est un instantané de l’état QoS actuel. 

</apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetGroup/info" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetGroup.info</linktext></link><link href="flash.net.xml#NetGroup/post()" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetGroup.post()</linktext></link><link href="flash.net.xml#NetGroup/sendToNearest()" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetGroup.sendToNearest()</linktext></link><link href="flash.net.xml#NetGroup/sendToNeighbor()" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetGroup.sendToNeighbor()</linktext></link><link href="flash.net.xml#NetGroup/sendToAllNeighbors()" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetGroup.sendToAllNeighbors()</linktext></link><link href="flash.net.xml#NetGroup/addWantObjects()" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetGroup.addWantObjects()</linktext></link><link href="flash.net.xml#NetGroup/writeRequestedObject()" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetGroup.writeRequestedObject()</linktext></link></related-links><apiOperation id="flash.net:NetGroupInfo:toString" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">toString</apiName><shortdesc class="- topic/shortdesc ">
     Renvoie une chaîne contenant les valeurs des propriétés de l’objet NetGroupInfo.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Chaîne contenant les valeurs des propriétés de l’objet NetGroupInfo.
     
     </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Renvoie une valeur de texte répertoriant la liste des propriétés de cet objet NetGroupInfo.
     </apiTipText></apiTipTexts></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Renvoie une chaîne contenant les valeurs des propriétés de l’objet NetGroupInfo.
     
     </apiDesc></apiOperationDetail></apiOperation><apiValue id="flash.net:NetGroupInfo:objectReplicationReceiveBytesPerSecond:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">objectReplicationReceiveBytesPerSecond</apiName><shortdesc class="- topic/shortdesc ">
     Spécifie le débit, en octets par seconde, utilisé lorsque le nœud local reçoit les objets envoyés par les homologues via le système de réplication d’objets.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Spécifie le débit, en octets par seconde, utilisé lorsque le nœud local reçoit les objets envoyés par les homologues via le système de réplication d’objets.
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetGroup/writeRequestedObject()" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetGroup.writeRequestedObject()</linktext></link></related-links></apiValue><apiValue id="flash.net:NetGroupInfo:objectReplicationSendBytesPerSecond:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">objectReplicationSendBytesPerSecond</apiName><shortdesc class="- topic/shortdesc ">
     Spécifie le débit, en octets par seconde, utilisé lorsque le système de réplication d’objets copie des objets du nœud local aux homologues.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Spécifie le débit, en octets par seconde, utilisé lorsque le système de réplication d’objets copie des objets du nœud local aux homologues.
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetGroup/writeRequestedObject()" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetGroup.writeRequestedObject()</linktext></link></related-links></apiValue><apiValue id="flash.net:NetGroupInfo:postingReceiveControlBytesPerSecond:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">postingReceiveControlBytesPerSecond</apiName><shortdesc class="- topic/shortdesc ">
     Spécifie le débit, en octets par seconde, utilisé lorsque le nœud local reçoit les messages de surcharge de contrôle envoyés par les homologues.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Spécifie le débit, en octets par seconde, utilisé lorsque le nœud local reçoit les messages de surcharge de contrôle envoyés par les homologues.
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetGroup/post()" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetGroup.post()</linktext></link></related-links></apiValue><apiValue id="flash.net:NetGroupInfo:postingReceiveDataBytesPerSecond:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">postingReceiveDataBytesPerSecond</apiName><shortdesc class="- topic/shortdesc ">
     Spécifie le débit, en octets par seconde, utilisé lorsque le nœud local reçoit les données de publication envoyées par les homologues.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Spécifie le débit, en octets par seconde, utilisé lorsque le nœud local reçoit les données de publication envoyées par les homologues.
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetGroup/post()" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetGroup.post()</linktext></link></related-links></apiValue><apiValue id="flash.net:NetGroupInfo:postingSendControlBytesPerSecond:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">postingSendControlBytesPerSecond</apiName><shortdesc class="- topic/shortdesc ">
     Spécifie le débit, en octets par seconde, utilisé lorsque le nœud local envoie les messages de surcharge de contrôle aux homologues.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Spécifie le débit, en octets par seconde, utilisé lorsque le nœud local envoie les messages de surcharge de contrôle aux homologues.
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetGroup/post()" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetGroup.post()</linktext></link></related-links></apiValue><apiValue id="flash.net:NetGroupInfo:postingSendDataBytesPerSecond:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">postingSendDataBytesPerSecond</apiName><shortdesc class="- topic/shortdesc ">
     Spécifie le débit, en octets par seconde, utilisé lorsque le nœud local envoie les données de publication aux homologues.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Spécifie le débit, en octets par seconde, utilisé lorsque le nœud local envoie les données de publication aux homologues.
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetGroup/post()" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetGroup.post()</linktext></link></related-links></apiValue><apiValue id="flash.net:NetGroupInfo:routingReceiveBytesPerSecond:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">routingReceiveBytesPerSecond</apiName><shortdesc class="- topic/shortdesc ">
     Spécifie le débit, en octets par seconde, utilisé lorsque le nœud local reçoit les messages de routage direct envoyés par les homologues.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Spécifie le débit, en octets par seconde, utilisé lorsque le nœud local reçoit les messages de routage direct envoyés par les homologues.
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetGroup/sendToNearest()" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetGroup.sendToNearest()</linktext></link><link href="flash.net.xml#NetGroup/sendToNeighbor()" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetGroup.sendToNeighbor()</linktext></link><link href="flash.net.xml#NetGroup/sendToAllNeighbors()" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetGroup.sendToAllNeighbors()</linktext></link></related-links></apiValue><apiValue id="flash.net:NetGroupInfo:routingSendBytesPerSecond:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">routingSendBytesPerSecond</apiName><shortdesc class="- topic/shortdesc ">
     Spécifie le débit, en octets par seconde, utilisé lorsque le nœud local envoie les messages de routage direct aux homologues.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Spécifie le débit, en octets par seconde, utilisé lorsque le nœud local envoie les messages de routage direct aux homologues.
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetGroup/sendToNearest()" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetGroup.sendToNearest()</linktext></link><link href="flash.net.xml#NetGroup/sendToNeighbor()" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetGroup.sendToNeighbor()</linktext></link><link href="flash.net.xml#NetGroup/sendToAllNeighbors()" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetGroup.sendToAllNeighbors()</linktext></link></related-links></apiValue></apiClassifier><apiClassifier languages="" id="flash.net:URLLoaderDataFormat" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">URLLoaderDataFormat</apiName><shortdesc class="- topic/shortdesc ">
 La classe URLLoaderDataFormat fournit des valeurs qui déterminent le mode de réception des données téléchargées.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 La classe URLLoaderDataFormat fournit des valeurs qui déterminent le mode de réception des données téléchargées.
 
 </apiDesc><example conref="examples\URLLoaderDataFormatExample.as" class="- topic/example "> L’exemple suivant utilise la classe URLLoaderDataFormatExample pour afficher le format de données et l’état d’un fichier chargé à l’exécution. Pour ce faire, exécutez la procédure suivante :
 <ol class="- topic/ol "><li class="- topic/li ">Le constructeur de classe crée une occurrence d’URLLoader nommée <codeph class="+ topic/ph pr-d/codeph ">loader</codeph> et une occurrence d’URLRequest nommée <codeph class="+ topic/ph pr-d/codeph ">request</codeph>, correspondant à l’emplacement et au nom du fichier à charger.</li><li class="- topic/li ">L’objet <codeph class="+ topic/ph pr-d/codeph ">loader</codeph> est transmis à la méthode <codeph class="+ topic/ph pr-d/codeph ">configureListeners()</codeph>, qui ajoute des écouteurs à chacun des événements URLLoader pris en charge :
  <ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">completeHandler()</codeph> : détecte l’événement <codeph class="+ topic/ph pr-d/codeph ">complete</codeph>, distribué après le chargement réussi de TextFile.txt.</li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">openHandler()</codeph> : détecte l’événement <codeph class="+ topic/ph pr-d/codeph ">open</codeph>, distribué au démarrage du téléchargement (vers le lecteur) de TextFile.txt.</li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">progressHandler()</codeph> : détecte les événements <codeph class="+ topic/ph pr-d/codeph ">progress</codeph>, distribués à la réception des données au fur et à mesure du téléchargement.</li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">securityErrorHandler()</codeph> : détecte les événements <codeph class="+ topic/ph pr-d/codeph ">securityError</codeph>, distribués en cas d’accès au fichier texte au moyen d’un paramètre de sécurité de lecture locale incorrect.</li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">httpStatusHandler()</codeph> : détecte les événements <codeph class="+ topic/ph pr-d/codeph ">httpStatusHandler</codeph> qui ne seraient pas distribués dans ce cas, puisque TextFile.txt est un fichier local.</li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">ioErrorHandler()</codeph> : détecte les événements <codeph class="+ topic/ph pr-d/codeph ">ioError</codeph>, déclenchés uniquement en cas de problème grave lié au fichier (s’il est manquant, par exemple).</li></ul></li><li class="- topic/li ">L’objet <codeph class="+ topic/ph pr-d/codeph ">request</codeph> est ensuite transmis à la méthode <codeph class="+ topic/ph pr-d/codeph ">loader.load()</codeph> qui charge le fichier texte en mémoire à l’aide d’un objet <codeph class="+ topic/ph pr-d/codeph ">DisplayObject</codeph>.</li></ol>
 <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Remarques :</b>
 <ul class="- topic/ul "><li class="- topic/li ">vous devrez compiler le fichier SWF en réglant « Sécurité de lecture locale » sur « Accès aux fichiers locaux uniquement ».
  </li><li class="- topic/li ">Pour exécuter cet exemple, il est nécessaire de placer un fichier intitulé TextFile.txt dans le même répertoire que votre fichier SWF. Pour que cet exemple identifie des fichiers binaires ou des fichiers de données codés au format URL, vous devez fournir un fichier au format correct et remplacer TextFile.txt par le nom et l’emplacement du nouveau fichier.</li></ul>
 </p>
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">

package {
    import flash.display.Sprite;
    import flash.events.*;
    import flash.net.*;

    public class URLLoaderDataFormatExample extends Sprite {
        private var source:String = "TextFile.txt";
        private var dataFormat:String = URLLoaderDataFormat.TEXT;
        
        public function URLLoaderDataFormatExample () {
            var loader:URLLoader = new URLLoader();
            loader.dataFormat = dataFormat;
            configureListeners(loader);
            var request:URLRequest = new URLRequest(source);
            try {
                loader.load(request);
            } catch (error:Error) {
                trace("Error loading requested document: " + source);
            }
        }

        private function configureListeners(dispatcher:URLLoader):void {
            dispatcher.addEventListener(Event.COMPLETE, completeHandler);
            dispatcher.addEventListener(Event.OPEN, openHandler);
            dispatcher.addEventListener(ProgressEvent.PROGRESS, progressHandler);
            dispatcher.addEventListener(SecurityErrorEvent.SECURITY_ERROR, securityErrorHandler);
            dispatcher.addEventListener(HTTPStatusEvent.HTTP_STATUS, httpStatusHandler);
            dispatcher.addEventListener(IOErrorEvent.IO_ERROR, ioErrorHandler);
        }

        private function completeHandler(event:Event):void {
            var loader:URLLoader = URLLoader(event.target);
            switch(loader.dataFormat) {
                case URLLoaderDataFormat.TEXT :
                    trace("completeHandler (text): " + loader.data);
                    break;
                case URLLoaderDataFormat.BINARY :
                    trace("completeHandler (binary): " + loader.data);
                    break;
                case URLLoaderDataFormat.VARIABLES :
                    trace("completeHandler (variables): " + loader.data);
                    break;
            }
        }

        private function httpStatusHandler(event:Event):void {
            trace("httpStatusHandler: " + event);
        }

        private function ioErrorHandler(event:IOErrorEvent):void {
            trace("ioErrorHandler: " + event);
        }

        private function openHandler(event:Event):void {
            trace("openHandler: " + event);
        }

        private function progressHandler(event:ProgressEvent):void {
            trace("progressHandler loaded:" + event.bytesLoaded + " total: " + event.bytesTotal);
        }

        private function securityErrorHandler(event:SecurityErrorEvent):void {
            trace("securityErrorHandler: " + event);
        }
    }
}
</codeblock></example></apiClassifierDetail><apiValue id="flash.net:URLLoaderDataFormat:BINARY" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">BINARY</apiName><shortdesc class="- topic/shortdesc ">
	 Indique que les données téléchargées doivent être reçues en tant que données binaires brutes.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">binary</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Indique que les données téléchargées doivent être reçues en tant que données binaires brutes.
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:URLLoaderDataFormat:TEXT" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">TEXT</apiName><shortdesc class="- topic/shortdesc ">
	 Indique que les données téléchargées doivent être reçues au format texte.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">text</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Indique que les données téléchargées doivent être reçues au format texte.
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:URLLoaderDataFormat:VARIABLES" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">VARIABLES</apiName><shortdesc class="- topic/shortdesc ">
	 Indique que les données téléchargées doivent être reçues en tant que variables de code URL.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">variables</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Indique que les données téléchargées doivent être reçues en tant que variables de code URL.
	 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.net:NetStreamPlayTransitions" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">NetStreamPlayTransitions</apiName><shortdesc class="- topic/shortdesc ">
 
 La classe NetStreamPlayTransitions spécifie les chaînes valides pouvant être utilisées avec la propriété NetStreamPlayOptions.transition.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 
 La classe NetStreamPlayTransitions spécifie les chaînes valides pouvant être utilisées avec la propriété <codeph class="+ topic/ph pr-d/codeph ">NetStreamPlayOptions.transition</codeph>. Ces chaînes contrôlent le comportement utilisé pour effectuer une transition vers un nouveau flux ou pour lire un flux, selon le mode de transition utilisé.
 
 </apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStreamPlayOptions" class="- topic/link "><linktext class="- topic/linktext ">NetStreamPlayOptions</linktext></link><link href="flash.net.xml#NetStream/play2()" class="- topic/link "><linktext class="- topic/linktext ">NetStream.play2()</linktext></link></related-links><apiValue id="flash.net:NetStreamPlayTransitions:APPEND_AND_WAIT" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">APPEND_AND_WAIT</apiName><shortdesc class="- topic/shortdesc ">
     
    Crée une liste de lecture sans commencer à la lire à partir du premier flux continu.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">appendAndWait</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     
    Crée une liste de lecture sans commencer à la lire à partir du premier flux continu. 
    
    <p class="- topic/p ">Le mode de transition <codeph class="+ topic/ph pr-d/codeph ">APPEND_AND_WAIT</codeph> est utilisé avec la méthode <codeph class="+ topic/ph pr-d/codeph ">NetStream.play2()</codeph> pour créer une liste de lecture sans immédiatement commencer à la lire à partir du premier flux continu. Utilisez ce mode pour charger chaque élément de la liste de lecture, sauf le dernier. Lorsque vous chargez le dernier flux dans la liste de lecture, définissez le mode de transition sur <codeph class="+ topic/ph pr-d/codeph ">RESUME</codeph>. A ce stade, Flash Player commence la diffusion en continu et la lecture de la liste de lecture.</p>
    
    <p class="- topic/p ">Vous pouvez utiliser ce mode pour créer une nouvelle liste de lecture ou reconstituer une liste de lecture après le rétablissement d’une connexion perdue. Pour créer une nouvelle liste de lecture, lorsque la méthode <codeph class="+ topic/ph pr-d/codeph ">NetStream.play2()</codeph> est appelée avec <codeph class="+ topic/ph pr-d/codeph ">RESUME</codeph>, Flash Player commence la diffusion en continu et la lecture à partir du premier flux ou de la position de début spécifiée. Pour rétablir une connexion perdue, lorsque vous appelez la méthode <codeph class="+ topic/ph pr-d/codeph ">NetStream.play2()</codeph> avec <codeph class="+ topic/ph pr-d/codeph ">RESUME</codeph>, Flash Player détermine le point d’interruption du flux et indique au serveur de lancer la diffusion en continu à partir de ce point. Le serveur est à son tour en mesure de déterminer le flux de la liste de lecture qui correspond à ce point, et commence la diffusion en continu à partir de ce point.</p>
    
    <p class="- topic/p ">Ce mode de transition est l’inverse du mode <codeph class="+ topic/ph pr-d/codeph ">APPEND</codeph>, dans lequel la lecture démarre immédiatement à partir du premier flux.</p>
    
    </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStreamPlayTransitions/APPEND" class="- topic/link "><linktext class="- topic/linktext ">APPEND</linktext></link><link href="flash.net.xml#NetStreamPlayTransitions/RESUME" class="- topic/link "><linktext class="- topic/linktext ">RESUME</linktext></link><link href="flash.net.xml#NetStream/play2()" class="- topic/link "><linktext class="- topic/linktext ">NetStream.play2()</linktext></link></related-links></apiValue><apiValue id="flash.net:NetStreamPlayTransitions:APPEND" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">APPEND</apiName><shortdesc class="- topic/shortdesc ">
     
    Ajoute le flux continu à une liste de lecture et commence la lecture avec le premier flux continu.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">append</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     
    Ajoute le flux continu à une liste de lecture et commence la lecture avec le premier flux continu. Ce mode est similaire à la méthode <codeph class="+ topic/ph pr-d/codeph ">NetStream.play()</codeph> avec l’indicateur <codeph class="+ topic/ph pr-d/codeph ">reset</codeph> défini sur <codeph class="+ topic/ph pr-d/codeph ">false</codeph>.
    
    <p class="- topic/p ">Dans ce mode, Flash Media Server place en file d’attente le flux spécifié dans <codeph class="+ topic/ph pr-d/codeph ">NetStreamPlayOptions.streamName</codeph> à la fin de la liste de lecture et ignore le paramètre <codeph class="+ topic/ph pr-d/codeph ">NetStreamPlayOptions.oldStreamName</codeph>.</p> 
    
    </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStreamPlayTransitions/APPEND_AND_WAIT" class="- topic/link "><linktext class="- topic/linktext ">APPEND_AND_WAIT</linktext></link><link href="flash.net.xml#NetStream/play()" class="- topic/link "><linktext class="- topic/linktext ">NetStream.play()</linktext></link><link href="flash.net.xml#NetStream/play2()" class="- topic/link "><linktext class="- topic/linktext ">NetStream.play2()</linktext></link><link href="flash.net.xml#NetStreamPlayOptions/oldStreamName" class="- topic/link "><linktext class="- topic/linktext ">NetStreamPlayOptions.oldStreamName</linktext></link><link href="flash.net.xml#NetStreamPlayOptions/streamName" class="- topic/link "><linktext class="- topic/linktext ">NetStreamPlayOptions.streamName</linktext></link></related-links></apiValue><apiValue id="flash.net:NetStreamPlayTransitions:RESET" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">RESET</apiName><shortdesc class="- topic/shortdesc ">
    
    Efface tout appel de lecture précédent et lit immédiatement le flux spécifié.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">reset</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    
    Efface tout appel de lecture précédent et lit immédiatement le flux spécifié. Ce mode est similaire à la méthode <codeph class="+ topic/ph pr-d/codeph ">NetStream.play()</codeph> avec l’indicateur <codeph class="+ topic/ph pr-d/codeph ">reset</codeph> défini sur <codeph class="+ topic/ph pr-d/codeph ">true</codeph> (comportement par défaut de <codeph class="+ topic/ph pr-d/codeph ">NetStream.play()</codeph>).
    
    <p class="- topic/p ">Dans ce mode, le flux en cours de lecture est abandonné et la lecture du flux spécifié dans <codeph class="+ topic/ph pr-d/codeph ">NetStreamPlayOptions.streamName</codeph> commence. Le paramètre <codeph class="+ topic/ph pr-d/codeph ">NetStreamPlayOptions.oldStreamName</codeph> est ignoré.</p> 
    
    </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStream/play()" class="- topic/link "><linktext class="- topic/linktext ">NetStream.play()</linktext></link><link href="flash.net.xml#NetStream/play2()" class="- topic/link "><linktext class="- topic/linktext ">NetStream.play2()</linktext></link><link href="flash.net.xml#NetStreamPlayOptions/oldStreamName" class="- topic/link "><linktext class="- topic/linktext ">NetStreamPlayOptions.oldStreamName</linktext></link><link href="flash.net.xml#NetStreamPlayOptions/streamName" class="- topic/link "><linktext class="- topic/linktext ">NetStreamPlayOptions.streamName</linktext></link></related-links></apiValue><apiValue id="flash.net:NetStreamPlayTransitions:RESUME" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">RESUME</apiName><shortdesc class="- topic/shortdesc ">
     
    Sollicite des données de la nouvelle connexion à partir du point où la précédente connexion s’est terminée.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">resume</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     
    Sollicite des données de la nouvelle connexion à partir du point où la précédente connexion s’est terminée. Le mode <codeph class="+ topic/ph pr-d/codeph ">RESUME</codeph> aligne le flux continu à travers deux connexions afin qu’aucun artefact ou aucun saut ou ne soit observé dans la lecture vidéo. Utilisez ce mode lorsque vous reconnectez un flux continu qui a été abandonné en raison d’incidents sur le serveur ou d’autres problèmes de connexion.
    
    </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStreamPlayTransitions/APPEND_AND_WAIT" class="- topic/link "><linktext class="- topic/linktext ">APPEND_AND_WAIT</linktext></link><link href="flash.net.xml#NetStream/play2()" class="- topic/link "><linktext class="- topic/linktext ">NetStream.play2()</linktext></link></related-links></apiValue><apiValue id="flash.net:NetStreamPlayTransitions:STOP" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">STOP</apiName><shortdesc class="- topic/shortdesc ">
     
    Arrête la lecture des flux d’une liste de lecture.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">stop</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     
    Arrête la lecture des flux d’une liste de lecture. Ce mode est similaire à la méthode <codeph class="+ topic/ph pr-d/codeph ">NetStream.play(false)</codeph>. Il arrête et réinitialise la liste de lecture.
    
    </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStream/play()" class="- topic/link "><linktext class="- topic/linktext ">NetStream.play()</linktext></link><link href="flash.net.xml#NetStream/play2()" class="- topic/link "><linktext class="- topic/linktext ">NetStream.play2()</linktext></link></related-links></apiValue><apiValue id="flash.net:NetStreamPlayTransitions:SWAP" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">SWAP</apiName><shortdesc class="- topic/shortdesc ">
    Remplace un flux de contenu par un autre flux de contenu et conserve le reste de la liste de lecture.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">swap</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Remplace un flux de contenu par un autre flux de contenu et conserve le reste de la liste de lecture.
    
    <p class="- topic/p ">Ce mode remplace le flux continu spécifié dans <codeph class="+ topic/ph pr-d/codeph ">NetStreamPlayOptions.oldStreamName</codeph> par celui spécifié dans <codeph class="+ topic/ph pr-d/codeph ">NetStreamPlayOptions.streamName</codeph>. Le reste de la liste de lecture est conservé. Dans ce mode, Flash Media Server ne fait aucune hypothèse quant au contenu des flux et les traite comme un contenu différent. </p>
    
    <p class="- topic/p ">Si <codeph class="+ topic/ph pr-d/codeph ">oldStreamName</codeph> n’a pas encore été envoyé, le serveur effectue le basculement au niveau de la limite du flux est envoie les bits de <codeph class="+ topic/ph pr-d/codeph ">streamName</codeph> à partir du début. Si le serveur a déjà commencé à envoyer les bits de <codeph class="+ topic/ph pr-d/codeph ">oldStreamName</codeph>, il ne bascule pas sur <codeph class="+ topic/ph pr-d/codeph ">streamName</codeph> et envoie un événement <codeph class="+ topic/ph pr-d/codeph ">NetStream.Play.Failed</codeph>.</p>
    
    <p class="- topic/p ">Utilisez ce mode si les flux entre lesquels vous souhaitez basculer ne sont pas reliés entre eux et si leur contenu ou leurs longueurs diffèrent. Par exemple, utilisez ce mode lorsque vous souhaitez remplacer un message publicitaire par un autre en fonction du suivi effectué par l’utilisateur et des statistiques de visualisation de messages publicitaires antérieures.</p>
    
    <p class="- topic/p ">Pour passer d’un flux à un autre de même contenu, utilisez plutôt le mode <codeph class="+ topic/ph pr-d/codeph ">SWITCH</codeph>.</p>
    
    </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStreamPlayTransitions/SWITCH" class="- topic/link "><linktext class="- topic/linktext ">SWITCH</linktext></link><link href="flash.net.xml#NetStreamPlayOptions/oldStreamName" class="- topic/link "><linktext class="- topic/linktext ">NetStreamPlayOptions.oldStreamName</linktext></link><link href="flash.net.xml#NetStreamPlayOptions/streamName" class="- topic/link "><linktext class="- topic/linktext ">NetStreamPlayOptions.streamName</linktext></link></related-links></apiValue><apiValue id="flash.net:NetStreamPlayTransitions:SWITCH" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">SWITCH</apiName><shortdesc class="- topic/shortdesc ">
    Passe de la lecture d’un flux à un autre, en général entre des flux de même contenu.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">switch</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Passe de la lecture d’un flux à un autre, en général entre des flux de même contenu. Spécifiez les flux vers lesquels doit s’effectuer le basculement dans <codeph class="+ topic/ph pr-d/codeph ">NetStreamPlayOptions.oldStreamName</codeph> et <codeph class="+ topic/ph pr-d/codeph ">NetStreamPlayOptions.streamName</codeph>. 
    
    <p class="- topic/p ">Utilisez ce mode lorsque vous souhaitez basculer vers un flux de même contenu, mais codé avec une autre vitesse de transmission ou une autre résolution. Par exemple, utilisez ce mode lorsque l’application place les flux en file d’attente dans une liste de lecture ou lit un flux unique avec une vitesse de transmission particulière, puis s’aperçoit que la disponibilité de la bande passante ou la capacité de traitement est inférieure ou supérieure aux exigences du flux de données. L’application peut alors actualiser les flux avec leurs versions de vitesse de transmission supérieure ou inférieure.</p>
    
    <p class="- topic/p ">Dans ce mode, Flash Media Server fait des hypothèses quant à la relation entre les flux <codeph class="+ topic/ph pr-d/codeph ">oldStreamName</codeph> et <codeph class="+ topic/ph pr-d/codeph ">streamName</codeph>. Le serveur suppose que les flux contiennent le même contenu et ont le même intervalle d’images-clés mais des résolutions ou des vitesses de transmission différentes.</p>
    
    <p class="- topic/p ">Lorsqu’une liste de lecture a été mise en file d’attente et que <codeph class="+ topic/ph pr-d/codeph ">oldStreamName</codeph> est un des flux de la liste de lecture ou est en cours de lecture, <codeph class="+ topic/ph pr-d/codeph ">oldStreamName</codeph> est remplacé par <codeph class="+ topic/ph pr-d/codeph ">streamName</codeph>.</p>
    
    <p class="- topic/p ">Si <codeph class="+ topic/ph pr-d/codeph ">oldStreamName</codeph> est null ou undefined, ou s’il n’est pas détecté dans la liste de lecture, le serveur passe à <codeph class="+ topic/ph pr-d/codeph ">streamName</codeph> au niveau du prochain point logique, pour assurer un basculement transparent.</p>
    
    <p class="- topic/p ">Pour passer d’un flux à un autre de contenu différent, utilisez plutôt le mode <codeph class="+ topic/ph pr-d/codeph ">SWAP</codeph>.</p>
    
    
    </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStreamPlayTransitions/SWAP" class="- topic/link "><linktext class="- topic/linktext ">SWAP</linktext></link><link href="flash.net.xml#NetStreamPlayOptions/oldStreamName" class="- topic/link "><linktext class="- topic/linktext ">NetStreamPlayOptions.oldStreamName</linktext></link><link href="flash.net.xml#NetStreamPlayOptions/streamName" class="- topic/link "><linktext class="- topic/linktext ">NetStreamPlayOptions.streamName</linktext></link></related-links></apiValue></apiClassifier><apiClassifier languages="" id="flash.net:NetConnection" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">NetConnection</apiName><shortdesc class="- topic/shortdesc ">
 La classe NetConnection crée une connexion bidirectionnelle entre un client et un serveur.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">NetConnection, Video
 </keyword></asCustoms></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:EventDispatcher</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 La classe NetConnection crée une connexion bidirectionnelle entre un client et un serveur. Le client peut être une application <ph class="- topic/ph ">Flash Player ou AIR</ph>. Le serveur peut être un serveur Web, Flash Media Server, un serveur d’application exécutant Flash Remoting ou le service <xref href="http://labs.adobe.com/technologies/stratus/" scope="external" class="- topic/xref ">Adobe Stratus</xref>. Appelez <codeph class="+ topic/ph pr-d/codeph ">NetConnection.connect()</codeph> pour établir la connexion. Utilisez la classe NetStream pour envoyer des flux de données multimédias et des données via la connexion.
 
 <p class="- topic/p ">Pour obtenir des informations de sécurité sur le chargement de contenu et de données dans Flash Player et AIR, voir les références suivantes :</p>
 
 <ul class="- topic/ul "><li class="- topic/li ">Pour charger du contenu et des données dans Flash Player à partir d’un serveur Web ou d’un emplacement local, voir la rubrique <xref href="http://www.adobe.com/go/devnet_security_fr" scope="external" class="- topic/xref ">Sécurité du Pôle de développement de Flash Player</xref> (disponible en anglais uniquement). </li><li class="- topic/li ">Pour charger du contenu et des données dans Flash Player et AIR à partir de Flash Media Server, voir la <xref href="http://www.adobe.com/support/flashmediaserver" scope="external" class="- topic/xref ">documentation de Flash Media Server</xref>. </li><li class="- topic/li ">Pour charger du contenu et des données dans AIR, voir le <xref href="http://www.adobe.com/devnet/air/" scope="external" class="- topic/xref ">Pôle de développement d’Adobe AIR</xref> (disponible en anglais uniquement). </li></ul>
 
 <p class="- topic/p ">
 Pour écrire des méthodes de rappel pour cette classe, étendez la classe et définissez les méthodes de rappel dans votre sous-classe, ou affectez la propriété <codeph class="+ topic/ph pr-d/codeph ">client</codeph> à un objet et définissez les méthodes de rappel sur cet objet.</p>
 
 </apiDesc><example conref="examples\NetConnectionExample.as" class="- topic/example "> L’exemple suivant utilise un objet Video avec les classes NetConnection et NetStream pour charger et lire un fichier FLV. 
 <p class="- topic/p ">Dans cet exemple, le code qui crée les objets Video et NetStream et appelle les méthodes <codeph class="+ topic/ph pr-d/codeph ">Video.attachNetStream()</codeph> et <codeph class="+ topic/ph pr-d/codeph ">NetStream.play()</codeph> est placé dans une fonction de gestionnaire. Le gestionnaire n’est appelé que si la tentative de connexion à l’objet NetConnection a réussi ; c’est-à-dire lorsque l’événement <codeph class="+ topic/ph pr-d/codeph ">netStatus</codeph> renvoie un objet <codeph class="+ topic/ph pr-d/codeph ">info</codeph> avec une propriété <codeph class="+ topic/ph pr-d/codeph ">code</codeph> qui indique la réussite de l’opération. Il est recommandé d’attendre l’établissement d’une connexion avant d’appeler la méthode <codeph class="+ topic/ph pr-d/codeph ">NetStream.play()</codeph>. </p>
 <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
package {
    import flash.display.Sprite;
    import flash.events.NetStatusEvent;
    import flash.events.SecurityErrorEvent;
    import flash.media.Video;
    import flash.net.NetConnection;
    import flash.net.NetStream;
    import flash.events.Event;

    public class NetConnectionExample extends Sprite {
        private var videoURL:String = "http://www.helpexamples.com/flash/video/cuepoints.flv";
        private var connection:NetConnection;
        private var stream:NetStream;
        private var video:Video = new Video();        

        public function NetConnectionExample() {
            connection = new NetConnection();
            connection.addEventListener(NetStatusEvent.NET_STATUS, netStatusHandler);
            connection.addEventListener(SecurityErrorEvent.SECURITY_ERROR, securityErrorHandler);
            connection.connect(null);
        }

        private function netStatusHandler(event:NetStatusEvent):void {
            switch (event.info.code) {
                case "NetConnection.Connect.Success":
                    connectStream();
                    break;
                case "NetStream.Play.StreamNotFound":
                    trace("Stream not found: " + videoURL);
                    break;
            }
        }

        private function securityErrorHandler(event:SecurityErrorEvent):void {
            trace("securityErrorHandler: " + event);
        }

        private function connectStream():void {
            var stream:NetStream = new NetStream(connection);
            stream.addEventListener(NetStatusEvent.NET_STATUS, netStatusHandler);
            stream.client = new CustomClient();
            video.attachNetStream(stream);
            stream.play(videoURL);
            addChild(video);
        }
    }
}

class CustomClient {
    public function onMetaData(info:Object):void {
        trace("metadata: duration=" + info.duration + " width=" + info.width + " height=" + info.height + " framerate=" + info.framerate);
    }
    public function onCuePoint(info:Object):void {
        trace("cuepoint: time=" + info.time + " name=" + info.name + " type=" + info.type);
    }
}
</codeblock></example></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetConnection/client" class="- topic/link "><linktext class="- topic/linktext ">client</linktext></link><link href="flash.net.xml#NetStream" class="- topic/link "><linktext class="- topic/linktext ">NetStream</linktext></link><link href="flash.net.xml#NetConnection/connect()" class="- topic/link "><linktext class="- topic/linktext ">connect()</linktext></link><link href="flash.net.xml#Responder" class="- topic/link "><linktext class="- topic/linktext ">flash.net.Responder</linktext></link></related-links><adobeApiEvent id="flash.net:NetConnection_flash.events.NetStatusEvent.NET_STATUS_netStatus" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">netStatus</apiName><shortdesc class="- topic/shortdesc ">
 Distribué lorsqu’un objet NetConnection publie son état ou signale une erreur. </shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.NetStatusEvent.NET_STATUS</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.NetStatusEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Distribué lorsqu’un objet NetConnection publie son état ou signale une erreur. L’événement <codeph class="+ topic/ph pr-d/codeph ">netStatus</codeph> renferme une propriété <codeph class="+ topic/ph pr-d/codeph ">info</codeph> composée d’un objet d’informations contenant des informations spécifiques sur l’événement, telles que la réussite ou l’échec d’une tentative de connexion.
 </apiDesc></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.events.xml#NetStatusEvent/info" class="- topic/link "><linktext class="- topic/linktext ">flash.events.NetStatusEvent.info</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.net:NetConnection_flash.events.SecurityErrorEvent.SECURITY_ERROR_securityError" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">securityError</apiName><shortdesc class="- topic/shortdesc ">
 Distribué si un appel de NetConnection.call() tente d’établir une connexion à un serveur situé hors du sandbox de sécurité de l’appelant.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.SecurityErrorEvent.SECURITY_ERROR</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.SecurityErrorEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Distribué si un appel de NetConnection.call() tente d’établir une connexion à un serveur situé hors du sandbox de sécurité de l’appelant.
 </apiDesc></adobeApiEventDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetConnection/call()" class="- topic/link "><linktext class="- topic/linktext ">NetConnection.call()</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="flash.net:NetConnection_flash.events.IOErrorEvent.IO_ERROR_ioError" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">ioError</apiName><shortdesc class="- topic/shortdesc ">
 Distribué lorsqu’il se produit une erreur d’entrée ou de sortie entraînant l’échec d’une opération réseau.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.IOErrorEvent.IO_ERROR</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.IOErrorEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Distribué lorsqu’il se produit une erreur d’entrée ou de sortie entraînant l’échec d’une opération réseau.
 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flash.net:NetConnection_flash.events.AsyncErrorEvent.ASYNC_ERROR_asyncError" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">asyncError</apiName><shortdesc class="- topic/shortdesc ">
 Distribué lorsqu’une erreur est renvoyée de manière asynchrone ; autrement dit, lorsqu’elle provient du code asynchrone natif.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.AsyncErrorEvent.ASYNC_ERROR</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.AsyncErrorEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Distribué lorsqu’une erreur est renvoyée de manière asynchrone ; autrement dit, lorsqu’elle provient du code asynchrone natif.
 
 </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="flash.net:NetConnection:NetConnection" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">NetConnection</apiName><shortdesc class="- topic/shortdesc ">
     Crée un objet NetConnection.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><oldexample>See the example for <code>connect()</code>.
     
     </oldexample></asCustoms></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Crée un objet NetConnection. Appelez la méthode <codeph class="+ topic/ph pr-d/codeph ">connect()</codeph> pour établir une connexion.
     
     <p class="- topic/p ">Si une application doit communiquer avec des serveurs antérieurs à Flash Player 9, définissez la propriété <codeph class="+ topic/ph pr-d/codeph ">objectEncoding</codeph> de l’objet NetConnection.</p>
     
     <p class="- topic/p ">Le code suivant crée un objet NetConnection.</p>
     
     <pre xml:space="preserve" class="- topic/pre ">
     var nc:NetConnection = new NetConnection();
     </pre>
     
     
     </apiDesc></apiConstructorDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetConnection/connect()" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetConnection.connect()</linktext></link><link href="flash.net.xml#NetConnection/objectEncoding" class="- topic/link "><linktext class="- topic/linktext ">objectEncoding</linktext></link></related-links></apiConstructor><apiOperation id="flash.net:NetConnection:addHeader" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">addHeader</apiName><shortdesc class="- topic/shortdesc ">
     Ajoute un en-tête de contexte à la structure du paquet AMF (Action Message Format).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><internal>IMD: This method can be used in the client Flash Player for Flash Remoting
     and Flex apps. It is also a server side method used by Flash Media Server apps.
     
     
     </internal></asCustoms></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">operation</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Identifie l’en-tête et les données de l’objet ActionScript connexes.
     
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">mustUnderstand</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">La valeur <codeph class="+ topic/ph pr-d/codeph ">true</codeph> indique que le serveur doit interpréter et traiter cet en-tête avant de gérer tout en-tête ou message suivant.
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">param</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Object</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Tout objet ActionScript.
     
     </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Ajoute un en-tête de contexte à la structure du paquet AMF (Action Message Format). Par la suite, cet en-tête est envoyé avec chaque paquet AMF. Si vous appelez <codeph class="+ topic/ph pr-d/codeph ">NetConnection.addHeader()</codeph> en utilisant le même nom, le nouvel en-tête remplace l’en-tête existant et subsiste pendant toute la durée de l’objet NetConnection. Vous pouvez supprimer un en-tête en appelant <codeph class="+ topic/ph pr-d/codeph ">NetConnection.addHeader()</codeph> avec le nom de l’en-tête pour supprimer un objet non défini.
     
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.net:NetConnection:call" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">call</apiName><shortdesc class="- topic/shortdesc ">
     Appelle une commande ou une méthode sur Flash Media Server ou sur un serveur d’application exécutant Flash Remoting.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">command</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Méthode spécifiée au format <codeph class="+ topic/ph pr-d/codeph ">[objectPath/]method</codeph>. Par exemple, la commande <codeph class="+ topic/ph pr-d/codeph ">someObject/doSomething</codeph> demande au serveur distant d’appeler la méthode <codeph class="+ topic/ph pr-d/codeph ">clientObject.someObject.doSomething()</codeph> avec tous les paramètres <codeph class="+ topic/ph pr-d/codeph ">... arguments</codeph> facultatifs. Si le chemin de l’objet n’est pas fourni, la méthode <codeph class="+ topic/ph pr-d/codeph ">clientObject.doSomething()</codeph> est invoquée au niveau du serveur distant.
     <p class="- topic/p ">
     Avec Flash Media Server, <codeph class="+ topic/ph pr-d/codeph ">command</codeph> est le nom d’une fonction définie dans le script côté serveur d’une application. Si le script coté serveur est placé au niveau de la racine du répertoire de l’application, vous n’avez pas besoin d’utiliser un chemin d’objet avant <codeph class="+ topic/ph pr-d/codeph ">command</codeph>.
     </p>
     
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">responder</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.net:Responder</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Objet facultatif utilisé pour gérer les valeurs renvoyées par le serveur. Il est possible de définir deux méthodes pour l’objet Responder afin de gérer le résultat renvoyé : <codeph class="+ topic/ph pr-d/codeph ">result</codeph> et <codeph class="+ topic/ph pr-d/codeph ">status</codeph>. Si une erreur est renvoyée, la méthode <codeph class="+ topic/ph pr-d/codeph ">status</codeph> est appelée ; <codeph class="+ topic/ph pr-d/codeph ">result</codeph> est appelée dans tous les autres cas. Si l’objet Responder est en mesure de traiter les erreurs liées à des opérations spécifiques, l’objet NetConnection répond aux erreurs liées à l’état de connexion.
     
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">arguments</apiItemName><apiType value="restParam" name="type" class="- topic/state reference/state apiRef/apiType "/><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Les arguments facultatifs peuvent être de n’importe quel type ActionScript, y compris une référence à un autre objet ActionScript. Lorsque la méthode spécifiée dans le paramètre <codeph class="+ topic/ph pr-d/codeph ">command</codeph> est exécutée sur le serveur d’application distant, ces arguments lui sont transmis.
     
     </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Appelle une commande ou une méthode sur Flash Media Server ou sur un serveur d’application exécutant Flash Remoting. Avant d’appeler <codeph class="+ topic/ph pr-d/codeph ">NetConnection.call()</codeph>, vous devez appeler <codeph class="+ topic/ph pr-d/codeph ">NetConnection.connect()</codeph> pour vous connecter au serveur. Vous devez créer une fonction côté serveur à transmettre à cette méthode.
     
     <p class="- topic/p ">Vous ne pouvez pas vous connecter aux ports généralement réservés. Pour obtenir une liste complète des ports bloqués, voir la rubrique « Restriction des API de réseau » dans le <i class="+ topic/ph hi-d/i ">Guide du développeur d’ActionScript 3.0</i>.</p>
     
     </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#Responder" class="- topic/link "><linktext class="- topic/linktext ">flash.net.Responder</linktext></link></related-links><adobeApiEvent id="flash.net:NetConnection:call_securityError" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">securityError</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:SecurityErrorEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Un appel a tenté de communiquer avec un serveur situé en dehors du sandbox de sécurité de l’appelant. Vous pouvez contourner ce problème en utilisant un fichier de régulation sur le serveur.
     </apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">Un appel a tenté d’établir une communication avec un serveur situé hors du sandbox de sécurité de l’appelant.</shortdesc></adobeApiEvent></apiOperation><apiOperation id="flash.net:NetConnection:close" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">close</apiName><shortdesc class="- topic/shortdesc ">
     Ferme la connexion ouverte localement ou au serveur et distribue un événement netStatus en réglant la propriété code sur NetConnection.Connect.Closed.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><internal>server-specific: Documented this method with server-specific info in span tags. The
     info is relevant for Flex servers, as well as Flash Media Server.
     </internal></asCustoms></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Ferme la connexion ouverte localement ou au serveur et distribue un événement <codeph class="+ topic/ph pr-d/codeph ">netStatus</codeph> en réglant la propriété <codeph class="+ topic/ph pr-d/codeph ">code</codeph> sur <codeph class="+ topic/ph pr-d/codeph ">NetConnection.Connect.Closed</codeph>.
     
     <p class="- topic/p ">
     Cette méthode déconnecte tous les objets NetStream qui s’exécutent sur la connexion. Toutes les données en attente qui n’ont pas encore été envoyées sont abandonnées (pour clore les flux locaux ou de serveur sans fermer la connexion, utilisez <codeph class="+ topic/ph pr-d/codeph ">NetStream.close()</codeph>). Si vous fermez la connexion et que vous souhaitez ensuite en créer une nouvelle, vous devez créer un nouvel objet NetConnection et rappeler la méthode <codeph class="+ topic/ph pr-d/codeph ">connect()</codeph>.
     </p>
     
     <p class="- topic/p ">La méthode <codeph class="+ topic/ph pr-d/codeph ">close</codeph> déconnecte également tous les objets partagés distants qui s’exécutent sur la connexion. Vous n’avez toutefois pas besoin de recréer l’objet partagé pour vous reconnecter. Pour rétablir la connexion à l’objet partagé, il vous suffit en effet d’appeler la méthode <codeph class="+ topic/ph pr-d/codeph ">SharedObject.connect()</codeph>. Par ailleurs, les données de l’objet partagé qui étaient en file d’attente lorsque vous avez émis <codeph class="+ topic/ph pr-d/codeph ">NetConnection.close()</codeph> sont envoyées après la reconnexion à l’objet.</p>
     
     <p class="- topic/p ">
     Avec Flash Media Server, la meilleure pratique de développement consiste à appeler <codeph class="+ topic/ph pr-d/codeph ">close()</codeph> lorsque le client n’a plus besoin de la connexion au serveur. L’appel à <codeph class="+ topic/ph pr-d/codeph ">close()</codeph> est le moyen le plus rapide pour nettoyer les connexions non utilisées. Vous pouvez configurer le serveur pour qu’il ferme automatiquement les connexions inactives comme mesure de sauvegarde. Pour plus d’informations, voir le <i class="+ topic/ph hi-d/i "><xref href="http://www.adobe.com/support/documentation/fr" scope="external" class="- topic/xref ">Guide d’administration et de configuration de Flash Media Server</xref></i>.
     </p>
     
     </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStream" class="- topic/link "><linktext class="- topic/linktext ">NetStream</linktext></link><link href="flash.events.xml#NetStatusEvent/info" class="- topic/link "><linktext class="- topic/linktext ">flash.events.NetStatusEvent.info</linktext></link></related-links></apiOperation><apiOperation id="flash.net:NetConnection:connect" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">connect</apiName><shortdesc class="- topic/shortdesc ">
     Crée une connexion bidirectionnelle à une application sur Flash Media Server ou sur Flash Remoting, ou crée un point de terminaison de réseau bidirectionnel pour la communication de groupe homologue à homologue RTMFP.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">NetConnection.connect, connect
     
     </keyword></asCustoms></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">L’URI transmis au paramètre <codeph class="+ topic/ph pr-d/codeph ">command</codeph> est incorrectement formaté.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">La connexion a échoué. Ce peut être le cas si vous appelez <codeph class="+ topic/ph pr-d/codeph ">connect()</codeph> à partir d’un gestionnaire d’événement <codeph class="+ topic/ph pr-d/codeph ">netStatus</codeph>, ce qui n’est pas autorisé.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">IOError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.errors:IOError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Les fichiers locaux avec système de fichiers ne peuvent pas communiquer avec Internet. Pour éviter ce problème, reclassifiez le fichier SWF en tant que fichier local avec accès au réseau ou en tant que fichier approuvé.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">SecurityError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">SecurityError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Vous ne pouvez pas vous connecter aux ports généralement réservés. Pour obtenir une liste complète des ports bloqués, voir la rubrique « Restriction des API de réseau » dans le <i class="+ topic/ph hi-d/i ">Guide du développeur d’ActionScript 3.0</i>.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">SecurityError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">SecurityError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">command</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Utilisez l’une des valeurs suivantes pour le paramètre <codeph class="+ topic/ph pr-d/codeph ">command</codeph> :
     <ul class="- topic/ul "><li class="- topic/li ">Pour lire des fichiers vidéo et mp3 à partir d’un système de fichiers local ou d’un serveur Web, transmettez <codeph class="+ topic/ph pr-d/codeph ">null</codeph>.</li><li class="- topic/li ">Pour vous connecter à un serveur d’application exécutant Flash Remoting, transmettez une URL qui utilise le protocole <codeph class="+ topic/ph pr-d/codeph ">http</codeph>.</li><li class="- topic/li ">(Flash Player 10.1 ou AIR 2 ou version ultérieure) Pour créer un point de terminaison sans serveur pour la communication en multidiffusion IP RTMFP, transmettez la chaîne <codeph class="+ topic/ph pr-d/codeph ">"rtmfp:"</codeph>. Utilisez ce type de connexion pour recevoir un flux de données en multidiffusion IP à partir d’un éditeur sans utiliser de serveur. Ce type de connexion permet également d’utiliser la multidiffusion IP pour trouver des homologues sur le même réseau local (LAN).</li><p class="- topic/p ">Ce type de connexion présente les limites suivantes :</p><p class="- topic/p ">Seuls les homologues sur le même réseau local peuvent se rechercher entre eux.</p><p class="- topic/p ">La multidiffusion IP permet à Flash Player de recevoir des flux de données, mais pas de les envoyer.</p><p class="- topic/p ">Flash Player et AIR peuvent envoyer et recevoir des flux de données dans un groupe homologue à homologue, mais les homologues doivent être recherchés sur le même réseau local via la multidiffusion IP.</p><p class="- topic/p ">Cette technique ne peut pas être utilisée pour une communication un-à-un.</p><p class="- topic/p "/><li class="- topic/li ">Pour vous connecter à Flash Media Server, transmettez l’URI de l’application sur le serveur. Utilisez la syntaxe suivante (les éléments entre crochets sont facultatifs) :
     
     <p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">protocole:[//hôte][:port]/nomapp[/nomOcc]</codeph></p>
     
     <p class="- topic/p ">Utilisez l’un des protocoles suivants : <codeph class="+ topic/ph pr-d/codeph ">rtmp</codeph>, <codeph class="+ topic/ph pr-d/codeph ">rtmpe</codeph>, <codeph class="+ topic/ph pr-d/codeph ">rtmps</codeph>, <codeph class="+ topic/ph pr-d/codeph ">rtmpt</codeph>, <codeph class="+ topic/ph pr-d/codeph ">rtmpte</codeph> ou <codeph class="+ topic/ph pr-d/codeph ">rtmfp</codeph>. Si la connexion est réussie, un événement <codeph class="+ topic/ph pr-d/codeph ">netStatus</codeph> présentant une propriété <codeph class="+ topic/ph pr-d/codeph ">code</codeph> <codeph class="+ topic/ph pr-d/codeph ">NetConnection.Connect.Success</codeph> est renvoyé. Définissez la propriété <codeph class="+ topic/ph pr-d/codeph ">NetStatusEvent.info</codeph> pour la liste de tous les codes d’événement renvoyés en réponse à l’appel <codeph class="+ topic/ph pr-d/codeph ">connect()</codeph>. </p>
     
     <p class="- topic/p ">Si le fichier est desservi par l’hôte dans lequel le serveur est installé, vous pouvez omettre le paramètre <codeph class="+ topic/ph pr-d/codeph ">host</codeph>. Si vous omettez le paramètre <codeph class="+ topic/ph pr-d/codeph ">/instanceName</codeph>, <ph class="- topic/ph ">Flash Player ou </ph>Adobe AIR se connecte à l’occurrence par défaut de l’application.</p>
     
     <p class="- topic/p ">(Flash Player 10.1 ou AIR 2 ou version ultérieure) Pour créer des applications homologue à homologue, utilisez le protocole <codeph class="+ topic/ph pr-d/codeph ">rtmfp</codeph>.</p>
     
     </li></ul>
     
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">arguments</apiItemName><apiType value="restParam" name="type" class="- topic/state reference/state apiRef/apiType "/><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Paramètres facultatifs de tout type transmis à l’application spécifiée dans <codeph class="+ topic/ph pr-d/codeph ">command</codeph>. Avec Flash Media Server, les arguments supplémentaires sont transmis au gestionnaire d’événements <codeph class="+ topic/ph pr-d/codeph ">application.onConnect()</codeph> dans le code côté serveur de l’application. Vous devez définir et gérer les arguments dans <codeph class="+ topic/ph pr-d/codeph ">onConnect()</codeph>.
     
     </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Crée une connexion bidirectionnelle à une application sur Flash Media Server ou sur Flash Remoting, ou crée un point de terminaison de réseau bidirectionnel pour la communication de groupe homologue à homologue RTMFP. Pour signaler son état ou une condition d’erreur, un appel de la méthode <codeph class="+ topic/ph pr-d/codeph ">NetConnection.connect()</codeph> distribue un événement <codeph class="+ topic/ph pr-d/codeph ">netStatus</codeph>. 
     
     <p class="- topic/p ">Appelez <codeph class="+ topic/ph pr-d/codeph ">NetConnection.connect()</codeph> pour effectuer les opérations suivantes :</p>
     
     <ul class="- topic/ul "><li class="- topic/li ">Transmettez "null" pour lire les fichiers vidéo et mp3 à partir d’un système de fichiers local ou d’un serveur Web.</li><li class="- topic/li ">Transmettez une URL "http" pour vous connecter à un serveur d’application exécutant Flash Remoting. Utilisez la classe NetServices pour appeler des fonctions et renvoyer les résultats des serveurs d’application via un objet NetConnection. Pour plus d’informations, voir la <xref href="http://www.adobe.com/support/documentation/fr" scope="external" class="- topic/xref ">documentation de Flash Remoting</xref>. </li><li class="- topic/li ">Transmettez une URL "rtmp/e/s" pour vous connecter à une application de Flash Media Server.</li><li class="- topic/li ">Transmettez une URL "rtmfp" pour créer un point de terminaison de réseau bidirectionnel en vue d’établir une communication RTMFP client-serveur, homologue à homologue et en multidiffusion IP. </li><li class="- topic/li ">Transmettez la chaîne "rtmfp:" pour créer un point de terminaison bidirectionnel sans réseau pour la communication en multidiffusion IP RTMFP.</li></ul>
     
     <p class="- topic/p ">Tenez compte du modèle de sécurité suivant :</p>
     
     <ul class="- topic/ul "><li class="- topic/li ">Par défaut, <ph class="- topic/ph ">Flash Player ou </ph>AIR refuse l’accès entre les sandbox. Un site Web peut autoriser l’accès à une ressource à l’aide d’un fichier de régulation d’URL. </li><li class="- topic/li ">Votre application peut refuser l’accès à une ressource du serveur. Dans une application Flash Media Server, utilisez le code ActionScript côté serveur pour refuser l’accès. Voir la <xref href="http://www.adobe.com/go/learn_fms_docs_fr" scope="external" class="- topic/xref ">documentation de Flash Media Server</xref>.</li><li class="- topic/li ">Vous ne pouvez pas appeler <codeph class="+ topic/ph pr-d/codeph ">NetConnection.connect()</codeph> si le fichier appelant se trouve dans le sandbox local avec système de fichiers.</li><li class="- topic/li "> Vous ne pouvez pas vous connecter aux ports généralement réservés. Pour obtenir une liste complète des ports bloqués, voir la rubrique « Restriction des API de réseau » dans le <i class="+ topic/ph hi-d/i ">Guide du développeur d’ActionScript 3.0</i>.</li><li class="- topic/li ">Pour éviter qu’un fichier SWF n’appelle cette méthode, définissez le paramètre <codeph class="+ topic/ph pr-d/codeph ">allowNetworking</codeph> des balises <codeph class="+ topic/ph pr-d/codeph ">object</codeph> et <codeph class="+ topic/ph pr-d/codeph ">embed</codeph> dans la page HTML qui héberge le contenu SWF.</li></ul>
     
     <p class="- topic/p ">Néanmoins, dans Adobe AIR, le contenu du sandbox de sécurité <codeph class="+ topic/ph pr-d/codeph ">application</codeph> (contenu installé avec l’application AIR) n’est pas soumis à ces restrictions de sécurité.</p>
     
     <p class="- topic/p ">Pour plus d’informations concernant la sécurité, voir la rubrique Sécurité <xref href="http://www.adobe.com/go/devnet_security_fr" scope="external" class="- topic/xref ">du Pôle de développement Flash Player</xref> (disponible en anglais uniquement).</p>
     
     </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStream" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetStream</linktext></link><link href="flash.events.xml#NetStatusEvent/info" class="- topic/link "><linktext class="- topic/linktext ">flash.events.NetStatusEvent.info</linktext></link></related-links></apiOperation><apiValue id="flash.net:NetConnection:client:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">client</apiName><shortdesc class="- topic/shortdesc ">
     Indique l’objet sur lequel des méthodes de rappel sont appelées.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><internal>Property documented; needs review.
     
      </internal></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Object</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">La propriété <codeph class="+ topic/ph pr-d/codeph ">client</codeph> ne peut pas être réglée sur l’objet null.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">TypeError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">TypeError</apiOperationClassifier></apiException></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Indique l’objet sur lequel des méthodes de rappel sont appelées. La valeur par défaut correspond à cette occurrence de NetConnection. Si vous réglez la propriété <codeph class="+ topic/ph pr-d/codeph ">client</codeph> sur un autre objet, les méthodes de rappels seront appelées sur celui-ci.
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:NetConnection:connectedProxyType:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">connectedProxyType</apiName><shortdesc class="- topic/shortdesc ">
     Type proxy utilisé pour établir une connexion à Flash Media Server.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><internal>This property is used in Breeze 5.5.
     
      </internal></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Une tentative d’accès à cette propriété a été effectuée alors que l’occurrence de NetConnection n’était pas connectée.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Type proxy utilisé pour établir une connexion à Flash Media Server. Les valeurs possibles sont les suivantes : <codeph class="+ topic/ph pr-d/codeph ">"none"</codeph>, <codeph class="+ topic/ph pr-d/codeph ">"HTTP"</codeph>, <codeph class="+ topic/ph pr-d/codeph ">"HTTPS"</codeph> et <codeph class="+ topic/ph pr-d/codeph ">"CONNECT"</codeph>.
     
     <p class="- topic/p ">La valeur est <codeph class="+ topic/ph pr-d/codeph ">"none"</codeph> si la connexion n’est pas établie par tunnel ou s’il s’agit d’une connexion SSL native.</p>
     
     <p class="- topic/p ">La valeur est <codeph class="+ topic/ph pr-d/codeph ">"HTTP"</codeph> si la connexion est établie par tunnel via HTTP.</p>
     
     <p class="- topic/p ">La valeur est <codeph class="+ topic/ph pr-d/codeph ">"HTTPS"</codeph> si la connexion est établie par tunnel via HTTPS.</p>
     
     <p class="- topic/p ">La valeur est <codeph class="+ topic/ph pr-d/codeph ">"CONNECT"</codeph> si la connexion est établie par tunnel à l’aide de la méthode CONNECT via un serveur proxy.</p>
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:NetConnection:connected:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">connected</apiName><shortdesc class="- topic/shortdesc ">
     Indique si l’application est connectée (true) ou non (false) à un serveur par le biais d’une connexion RTMP continue.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Indique si l’application est connectée (<codeph class="+ topic/ph pr-d/codeph ">true</codeph>) ou non (<codeph class="+ topic/ph pr-d/codeph ">false</codeph>) à un serveur par le biais d’une connexion RTMP continue. Lorsqu’il est connecté via HTTP, cette propriété est <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, sauf dans le cas d’une connexion aux services Flash Remoting sur un serveur d’application, auquel cas la propriété est <codeph class="+ topic/ph pr-d/codeph ">true</codeph>.
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:NetConnection:defaultObjectEncoding:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">defaultObjectEncoding</apiName><shortdesc class="- topic/shortdesc ">
     L’encodage d’objet par défaut des objets NetConnection.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">uint</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     L’encodage d’objet par défaut des objets NetConnection. Lorsqu’un objet est écrit ou lu à partir de données binaires, la propriété <codeph class="+ topic/ph pr-d/codeph ">objectEncoding</codeph> indique la version AMF (Action Message Format) utilisée pour sérialiser les données : le format ActionScript 3.0 ( <codeph class="+ topic/ph pr-d/codeph ">ObjectEncoding.AMF3</codeph> ) ou le format ActionScript 1.0 et ActionScript 2.0 ( <codeph class="+ topic/ph pr-d/codeph ">ObjectEncoding.AMF0</codeph>).
     
     <p class="- topic/p ">La valeur par défaut est <codeph class="+ topic/ph pr-d/codeph ">ObjectEncoding.AMF3</codeph>. La modification de <codeph class="+ topic/ph pr-d/codeph ">NetConnection.defaultObjectEncoding</codeph> n’a aucune incidence sur les occurrences existantes de NetConnection. Elle affecte uniquement les occurrences créées ultérieurement.</p>
     
     <p class="- topic/p ">Pour définir l’encodage d’un objet séparément (plutôt que de définir l’encodage de tous les objets de l’application), réglez la propriété <codeph class="+ topic/ph pr-d/codeph ">objectEncoding</codeph> de l’objet NetConnection.</p>
     
     <p class="- topic/p ">Pour plus d’informations, voir la description de la propriété <codeph class="+ topic/ph pr-d/codeph ">objectEncoding</codeph>.</p>
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetConnection/objectEncoding" class="- topic/link "><linktext class="- topic/linktext ">NetConnection.objectEncoding</linktext></link><link href="flash.net.xml#ObjectEncoding" class="- topic/link "><linktext class="- topic/linktext ">flash.net.ObjectEncoding</linktext></link></related-links></apiValue><apiValue id="flash.net:NetConnection:farID:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">farID</apiName><shortdesc class="- topic/shortdesc ">
     Identifiant de l’occurrence de Flash Media Server à laquelle cette occurrence de Flash Player ou Adobe AIR est connectée.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Identifiant de l’occurrence de Flash Media Server à laquelle cette occurrence de Flash Player ou Adobe AIR est connectée. Cette propriété est significative uniquement pour les connexions RTMFP. La valeur de cette propriété est disponible uniquement après l’établissement d’une connexion RTMFP.
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetConnection/nearID" class="- topic/link "><linktext class="- topic/linktext ">nearID</linktext></link></related-links></apiValue><apiValue id="flash.net:NetConnection:farNonce:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">farNonce</apiName><shortdesc class="- topic/shortdesc ">
     Valeur choisie par Flash Media Server, unique pour cette connexion.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Valeur choisie par Flash Media Server, unique pour cette connexion. Cette valeur apparaît pour le serveur comme sa valeur <codeph class="+ topic/ph pr-d/codeph ">client.nearNonce</codeph>. Cette valeur est définie uniquement pour les connexions RTMFP, RTMPE et RTMPTE.
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:NetConnection:httpIdleTimeout:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">httpIdleTimeout</apiName><shortdesc class="- topic/shortdesc "> 
        Délai d’attente, en millisecondes, d’une réponse HTTP.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2.6" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Délai d’attente, en millisecondes, d’une réponse HTTP.
        </apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
        Délai d’attente, en millisecondes, d’une réponse HTTP. La valeur par défaut est zéro.
	
	<ul class="- topic/ul "><li class="- topic/li ">La valeur <codeph class="+ topic/ph pr-d/codeph ">httpIdleTimeout</codeph> est <codeph class="+ topic/ph pr-d/codeph ">Number</codeph>.</li><li class="- topic/li ">Lorsque vous utilisez une connexion HTTP, une valeur positive indique le nombre de millisecondes pendant lequel une connexion inactive doit rester ouverte.</li><li class="- topic/li ">Une valeur de zéro indique qu’il est nécessaire d’utiliser la valeur d’inactivité de mise en réseau par défaut correspondant à la plate-forme.</li><li class="- topic/li ">Une valeur négative déclenche une erreur <codeph class="+ topic/ph pr-d/codeph ">RangeError</codeph>.</li><li class="- topic/li ">Si la valeur <codeph class="+ topic/ph pr-d/codeph ">httpIdleTimeout</codeph> est dépassée, un événement <codeph class="+ topic/ph pr-d/codeph ">netStatus</codeph> est distribué.</li><li class="- topic/li ">Cette propriété affecte uniquement les objets <codeph class="+ topic/ph pr-d/codeph ">NetConnection</codeph> créés avec des connexions HTTP. Les objets <codeph class="+ topic/ph pr-d/codeph ">NetConnection</codeph> créés avec RTMP, RTMFP ou d’autres canaux HTTP ne sont pas affectés par cette propriété.</li></ul>
	<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
	//Set the timeout to 5 seconds
	connection = new NetConnection();
	connection.addEventListener(NetStatusEvent.NET_STATUS, netStatusHandler);
	connection.addEventListener(SecurityErrorEvent.SECURITY_ERROR, securityErrorHandler);
	connection.httpIdleTimeout = 5000;
	</codeblock>
	
	Dans les systèmes basés sur Linux, le délai d’expiration de l’objet <codeph class="+ topic/ph pr-d/codeph ">NetConnection</codeph> peut être supérieur au délai défini à l’aide de la valeur <codeph class="+ topic/ph pr-d/codeph ">httpIdleTimeout</codeph>.
	
        </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:NetConnection:maxPeerConnections:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">maxPeerConnections</apiName><shortdesc class="- topic/shortdesc ">
     Nombre total de connexions d’homologue entrantes et sortantes que cette occurrence de Flash Player ou Adobe AIR autorise.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">uint</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Nombre total de connexions d’homologue entrantes et sortantes que cette occurrence de Flash Player ou Adobe AIR autorise. La valeur par défaut est 8.
     <p class="- topic/p ">Cette valeur ne fait pas la distinction entre les connexions d’éditeurs et d’abonnés. Si cette valeur est réduite alors que des connexions d’homologue sont en cours, la nouvelle valeur n’affecte que les nouvelles connexions entrantes. Les connexions existantes ne sont pas abandonnées.</p>
     
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:NetConnection:nearID:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">nearID</apiName><shortdesc class="- topic/shortdesc ">
     Identifiant de cette occurrence de Flash Player ou Adobe AIR pour cette occurrence de NetConnection.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Identifiant de cette occurrence de Flash Player ou Adobe AIR pour cette occurrence de NetConnection. Cette propriété est significative uniquement pour les connexions RTMFP.
     
     <p class="- topic/p ">Chaque occurrence de NetConnection possède une propriété <codeph class="+ topic/ph pr-d/codeph ">nearID</codeph> unique. Aucune occurrence de Flash Player, Adobe AIR ou NetConnection n’a le même identifiant.</p>
     
     <p class="- topic/p ">Les autres occurrences Flash Player ou Adobe AIR utilisent cet identifiant comme <codeph class="+ topic/ph pr-d/codeph ">peerID</codeph> pour les nouvelles connexions NetStream à ce client. Par la suite, cet identifiant est le <codeph class="+ topic/ph pr-d/codeph ">farID</codeph> dans toutes les occurrences NetStream d’homologue qui se connectent à cette occurrence.</p>
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetConnection/farID" class="- topic/link "><linktext class="- topic/linktext ">farID</linktext></link></related-links></apiValue><apiValue id="flash.net:NetConnection:nearNonce:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">nearNonce</apiName><shortdesc class="- topic/shortdesc ">
     Valeur choisie par cette occurrence de Flash Player ou Adobe AIR, unique pour cette connexion.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Valeur choisie par cette occurrence de Flash Player ou Adobe AIR, unique pour cette connexion. Cette valeur apparaît pour le serveur comme sa valeur <codeph class="+ topic/ph pr-d/codeph ">client.farNonce</codeph>. Cette valeur est définie uniquement pour les connexions RTMFP, RTMPE et RTMPTE.
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:NetConnection:objectEncoding:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">objectEncoding</apiName><shortdesc class="- topic/shortdesc ">
     Encodage de l’objet de cette occurrence de NetConnection.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">uint</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Une tentative de définition de la valeur de la propriété <codeph class="+ topic/ph pr-d/codeph ">objectEncoding</codeph> a été effectuée pendant que l’occurrence de NetConnection était connectée.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ReferenceError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ReferenceError</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Cette propriété a été réglée sur une valeur autre que <codeph class="+ topic/ph pr-d/codeph ">ObjectEncoding.AMF0</codeph> ou <codeph class="+ topic/ph pr-d/codeph ">ObjectEncoding.AMF3</codeph>.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Encodage de l’objet de cette occurrence de NetConnection.
     
     <p class="- topic/p ">
     Lors de l’écriture ou de la lecture d’un objet à partir de données binaires, la propriété <codeph class="+ topic/ph pr-d/codeph ">objectEncoding</codeph> indique la version AMF (Action Message Format) utilisée pour sérialiser les données : le format ActionScript 3.0 (<codeph class="+ topic/ph pr-d/codeph ">ObjectEncoding.AMF3</codeph>) ou le format ActionScript 1.0 et ActionScript 2.0 (<codeph class="+ topic/ph pr-d/codeph ">ObjectEncoding.AMF0</codeph>). Définissez la propriété <codeph class="+ topic/ph pr-d/codeph ">objectEncoding</codeph> pour choisir une version AMF pour une occurrence de NetConnection.
     </p>
     
     <p class="- topic/p ">Il est important de comprendre cette propriété si votre application doit communiquer avec des serveurs antérieurs à Flash Player 9. Les trois scénarios suivants sont possibles :
     </p>
     
     <ul class="- topic/ul "><li class="- topic/li ">Connexion à un serveur prenant en charge AMF3 (par exemple, Flex Data Services 2 ou Flash Media Server 3). La valeur par défaut de <codeph class="+ topic/ph pr-d/codeph ">defaultObjectEncoding</codeph> est <codeph class="+ topic/ph pr-d/codeph ">ObjectEncoding.AMF3</codeph>. Toutes les occurrences NetConnection créées dans ce fichier utilisent la sérialisation AMF3, afin que vous n’ayez pas à définir la propriété <codeph class="+ topic/ph pr-d/codeph ">objectEncoding</codeph>.</li><li class="- topic/li ">Connexion à un serveur ne prenant pas en charge AMF3 (par exemple, Flash Media Server 2). Dans ce cas, réglez la propriété statique <codeph class="+ topic/ph pr-d/codeph ">NetConnection.defaultObjectEncoding</codeph> sur <codeph class="+ topic/ph pr-d/codeph ">ObjectEncoding.AMF0</codeph>. Toutes les occurrences de NetConnection créées dans ce fichier SWF utilisent la sérialisation AMF0. Il est inutile de définir la propriété <codeph class="+ topic/ph pr-d/codeph ">objectEncoding</codeph>. </li><li class="- topic/li ">Vous vous connectez à plusieurs serveurs utilisant des versions d’encodage différentes. Au lieu d’utiliser <codeph class="+ topic/ph pr-d/codeph ">defaultObjectEncoding</codeph>, réglez l’encodage d’objet connexion par connexion en utilisant pour chacune d’elles la propriété <codeph class="+ topic/ph pr-d/codeph ">objectEncoding</codeph>. Réglez la propriété sur <codeph class="+ topic/ph pr-d/codeph ">ObjectEncoding.AMF0</codeph> pour vous connecter aux serveurs qui utilisent l’encodage AMF0, tels que et Flash Media Server 2, et sur <codeph class="+ topic/ph pr-d/codeph ">ObjectEncoding.AMF3</codeph> pour vous connecter aux serveurs qui utilisent l’encodage AMF3, tels que Flex Data Services 2.</li></ul>
     
     <p class="- topic/p ">Une fois l’occurrence de NetConnection connectée, sa propriété <codeph class="+ topic/ph pr-d/codeph ">objectEncoding</codeph> est en lecture seule.</p>
     
     <p class="- topic/p ">Si vous ne spécifiez pas l’encodage approprié pour vous connecter à un serveur, l’objet NetConnection distribue l’événement <codeph class="+ topic/ph pr-d/codeph ">netStatus</codeph>. La propriété <codeph class="+ topic/ph pr-d/codeph ">NetStatusEvent.info</codeph> contient un objet d’informations dont la propriété <codeph class="+ topic/ph pr-d/codeph ">code</codeph> est réglée sur <codeph class="+ topic/ph pr-d/codeph ">NetConnection.Connect.Failed</codeph>, ainsi qu’une description expliquant que le codage d’objet est incorrect.</p>
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetConnection/defaultObjectEncoding" class="- topic/link "><linktext class="- topic/linktext ">defaultObjectEncoding</linktext></link><link href="flash.net.xml#ObjectEncoding" class="- topic/link "><linktext class="- topic/linktext ">flash.net.ObjectEncoding</linktext></link></related-links></apiValue><apiValue id="flash.net:NetConnection:protocol:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">protocol</apiName><shortdesc class="- topic/shortdesc ">
     Protocole utilisé pour établir la connexion</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Une tentative d’accès à cette propriété a été effectuée alors que l’occurrence de NetConnection n’était pas connectée.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Protocole utilisé pour établir la connexion Cette propriété est pertinente lorsque Flash Media Server est utilisé. Les valeurs possibles sont les suivantes :
     <ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">"rtmp"</codeph> : RTMP (Real-Time Messaging Protocol)</li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">"rtmpe"</codeph> : RTMP chiffré</li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">"rtmpt"</codeph> : RTMP par tunnelage HTTP</li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">"rtmpte"</codeph> : RTMP chiffré par tunnelage HTTP</li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">"rtmps"</codeph> : RTMP de type HTTPS</li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">"rtmfp"</codeph> : RTMFP (Real-Time Media Flow Protocol)</li></ul>
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:NetConnection:proxyType:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">proxyType</apiName><shortdesc class="- topic/shortdesc ">
     Détermine les méthodes de secours à utiliser lorsque la connexion initiale à Flash Media Server échoue.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><internal>This property is used in Breeze 5.5. In the Breeze Add-in, the default value is <code>"best"</code>; if this value
     is not changed, native SSL sockets are used by default, and a fallback
     to other methods is used if necessary.
     
      </internal></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Détermine les méthodes de secours à utiliser lorsque la connexion initiale à Flash Media Server échoue. Définissez la propriété <codeph class="+ topic/ph pr-d/codeph ">proxyType</codeph> avant d’appeler la méthode <codeph class="+ topic/ph pr-d/codeph ">NetConnection.connect()</codeph>.
     
     <p class="- topic/p ">Les valeurs possibles sont les suivantes : <codeph class="+ topic/ph pr-d/codeph ">"none"</codeph>, <codeph class="+ topic/ph pr-d/codeph ">"HTTP"</codeph>, <codeph class="+ topic/ph pr-d/codeph ">"CONNECT"</codeph> et <codeph class="+ topic/ph pr-d/codeph ">"best"</codeph>. La valeur par défaut est <codeph class="+ topic/ph pr-d/codeph ">"none"</codeph>.</p>
     
     <p class="- topic/p ">Pour utiliser une connexion SSL native, définissez cette propriété sur <codeph class="+ topic/ph pr-d/codeph ">"best"</codeph>. Si le lecteur ne parvient pas à établir une connexion directe au serveur (via le port par défaut 443 ou un autre port que vous spécifiez) et si un serveur proxy est en place, le lecteur tente d’utiliser la méthode CONNECT. Si cette tentative échoue, le lecteur établit un tunnel via HTTPS. 
     </p>
     
     <p class="- topic/p ">Si la propriété est définie sur <codeph class="+ topic/ph pr-d/codeph ">"HTTP"</codeph> et qu’une connexion directe échoue, le tunnelage HTTP est utilisé. Si la propriété est définie sur <codeph class="+ topic/ph pr-d/codeph ">"CONNECT"</codeph> et qu’une connexion directe échoue, la méthode de tunnelage <codeph class="+ topic/ph pr-d/codeph ">CONNECT</codeph> est utilisée. En cas d’échec, la connexion n’utilise pas le tunnelage HTTP.</p>
     
     <p class="- topic/p ">Cette propriété est applicable uniquement lors de l’utilisation de RTMP, RTMPS ou RTMPT. La méthode <codeph class="+ topic/ph pr-d/codeph ">CONNECT</codeph> est réservée aux utilisateurs qui sont connectés au réseau par un serveur proxy.</p>
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:NetConnection:unconnectedPeerStreams:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">unconnectedPeerStreams</apiName><shortdesc class="- topic/shortdesc ">
     
     Objet qui contient tous les objets NetStream d’homologues abonnés non associés aux objets NetStream de publication.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Array</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     
     Objet qui contient tous les objets NetStream d’homologues abonnés non associés aux objets NetStream de publication. Les objets NetStream abonnés associés à des objets NetStream de publication se trouvent dans le tableau <codeph class="+ topic/ph pr-d/codeph ">NetStream.peerStreams</codeph>.
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetStream/peerStreams" class="- topic/link "><linktext class="- topic/linktext ">NetStream.peerStreams</linktext></link></related-links></apiValue><apiValue id="flash.net:NetConnection:uri:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">uri</apiName><shortdesc class="- topic/shortdesc ">
     URI transmise à la méthode NetConnection.connect().</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><internal>server-specific: Documented this method with server-specific info in span tags. The
     info is relevant for Flex servers, as well as Flash Media Server.
     </internal></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     URI transmise à la méthode NetConnection.connect(). Si <codeph class="+ topic/ph pr-d/codeph ">NetConnection.connect()</codeph> n’a pas été appelée ou si aucune URI n’a été transmise, cette propriété est <codeph class="+ topic/ph pr-d/codeph ">undefined</codeph>.
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.net:NetConnection:usingTLS:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">usingTLS</apiName><shortdesc class="- topic/shortdesc ">
     Indique si une connexion sécurisée a été établie via le protocole TLS (Transport Layer Security) natif plutôt que HTTPS.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Une tentative d’accès à cette propriété a été effectuée alors que l’occurrence de NetConnection n’était pas connectée.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Indique si une connexion sécurisée a été établie via le protocole TLS (Transport Layer Security) natif plutôt que HTTPS. Cette propriété n’est valide que si un objet NetConnection est connecté.
     
     </apiDesc></apiValueDetail></apiValue></apiClassifier></apiPackage>