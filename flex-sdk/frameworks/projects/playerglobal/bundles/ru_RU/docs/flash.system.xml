<?xml version="1.0" encoding="UTF-8"?>
<!--

  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.

-->
<apiPackage xmlns:ditaarch="http://dita.oasis-open.org/architecture/2005/" id="flash.system" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiPackage/apiPackage "><apiName class="- topic/title reference/title apiRef/apiName ">flash.system</apiName><apiDetail class="- topic/body reference/refbody apiRef/apiDetail "/><apiClassifier languages="" id="flash.system:ImageDecodingPolicy" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">ImageDecodingPolicy</apiName><shortdesc class="- topic/shortdesc ">
 Класс ImageDecodingPolicy определяет значения свойства imageDecodingPolicy класса LoaderContext.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2.6" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Класс ImageDecodingPolicy определяет значения свойства imageDecodingPolicy класса LoaderContext.
 
 </apiTipText></apiTipTexts><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Класс ImageDecodingPolicy определяет значения свойства <codeph class="+ topic/ph pr-d/codeph ">imageDecodingPolicy</codeph> класса LoaderContext.
 
 </apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.system.xml#LoaderContext/imageDecodingPolicy" class="- topic/link "><linktext class="- topic/linktext ">LoaderContext.imageDecodingPolicy</linktext></link></related-links><apiValue id="flash.system:ImageDecodingPolicy:ON_DEMAND" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">ON_DEMAND</apiName><shortdesc class="- topic/shortdesc ">
	 Указывает на то, что загружаемое изображение не будет декодироваться, пока этого не потребуется.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2.6" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">onDemand</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Указывает на то, что загружаемое изображение не будет декодироваться, пока этого не потребуется.
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.system:ImageDecodingPolicy:ON_LOAD" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">ON_LOAD</apiName><shortdesc class="- topic/shortdesc ">
	 Указывает на то, что изображение будет декодировано при загрузке до передачи сообщения complete.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2.6" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">onLoad</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Указывает на то, что изображение будет декодировано при загрузке до передачи сообщения complete. 
	 
	 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.system:SystemUpdaterType" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">SystemUpdaterType</apiName><shortdesc class="- topic/shortdesc ">
	 Класс SystemUpdaterType предоставляет константы для обновления системы.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Класс SystemUpdaterType предоставляет константы для обновления системы. Эти константы используются функцией <codeph class="+ topic/ph pr-d/codeph ">SystemUpdater.update()</codeph>.
	 
	 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Примечание.</b> API SystemUpdater поддерживается для стационарных компьютеров.</p>
	 </apiDesc></apiClassifierDetail><apiValue id="flash.system:SystemUpdaterType:DRM" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">DRM</apiName><shortdesc class="- topic/shortdesc ">
		Обновляет модуль DRM.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">drm</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		Обновляет модуль DRM.
		</apiDesc></apiValueDetail></apiValue><apiValue id="flash.system:SystemUpdaterType:SYSTEM" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">SYSTEM</apiName><shortdesc class="- topic/shortdesc ">
		Обновляет саму среду выполнения проигрывателя.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">system</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		Обновляет саму среду выполнения проигрывателя.
		</apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.system:IMEConversionMode" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">IMEConversionMode</apiName><shortdesc class="- topic/shortdesc ">
 Этот класс содержит постоянные для использования со свойством IME.conversionMode.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Этот класс содержит постоянные для использования со свойством <codeph class="+ topic/ph pr-d/codeph ">IME.conversionMode</codeph>. Установка для свойства <codeph class="+ topic/ph pr-d/codeph ">conversionMode</codeph> значений <codeph class="+ topic/ph pr-d/codeph ">ALPHANUMERIC_FULL</codeph> или <codeph class="+ topic/ph pr-d/codeph ">JAPANESE_KATAKANA_FULL</codeph> заставляет проигрыватель использовать шрифт полной ширины, а значений <codeph class="+ topic/ph pr-d/codeph ">ALPHANUMERIC_HALF</codeph> или <codeph class="+ topic/ph pr-d/codeph ">JAPANESE_KATAKANA_HALF</codeph> — шрифт половинной ширины.
 </apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.system.xml#IME/conversionMode" class="- topic/link "><linktext class="- topic/linktext ">flash.system.IME.conversionMode</linktext></link></related-links><apiValue id="flash.system:IMEConversionMode:ALPHANUMERIC_FULL" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">ALPHANUMERIC_FULL</apiName><shortdesc class="- topic/shortdesc ">
	 Строка ALPHANUMERIC_FULL для использования со свойством IME.conversionMode.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">ALPHANUMERIC_FULL</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Строка <codeph class="+ topic/ph pr-d/codeph ">ALPHANUMERIC_FULL</codeph> для использования со свойством <codeph class="+ topic/ph pr-d/codeph ">IME.conversionMode</codeph>. Эта константа используется со всеми редакторами IME. Используйте синтаксис <codeph class="+ topic/ph pr-d/codeph ">IMEConversionMode.ALPHANUMERIC_FULL</codeph>.
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.system.xml#IME/conversionMode" class="- topic/link "><linktext class="- topic/linktext ">flash.system.IME.conversionMode</linktext></link></related-links></apiValue><apiValue id="flash.system:IMEConversionMode:ALPHANUMERIC_HALF" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">ALPHANUMERIC_HALF</apiName><shortdesc class="- topic/shortdesc ">
	 Строка ALPHANUMERIC_HALF для использования со свойством IME.conversionMode.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">ALPHANUMERIC_HALF</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Строка <codeph class="+ topic/ph pr-d/codeph ">ALPHANUMERIC_HALF</codeph> для использования со свойством <codeph class="+ topic/ph pr-d/codeph ">IME.conversionMode</codeph>. Эта константа используется со всеми редакторами IME. Используйте синтаксис <codeph class="+ topic/ph pr-d/codeph ">IMEConversionMode.ALPHANUMERIC_HALF</codeph>.
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.system.xml#IME/conversionMode" class="- topic/link "><linktext class="- topic/linktext ">flash.system.IME.conversionMode</linktext></link></related-links></apiValue><apiValue id="flash.system:IMEConversionMode:CHINESE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">CHINESE</apiName><shortdesc class="- topic/shortdesc ">
	 Строка CHINESE для использования со свойством IME.conversionMode.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">CHINESE</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Строка <codeph class="+ topic/ph pr-d/codeph ">CHINESE</codeph> для использования со свойством <codeph class="+ topic/ph pr-d/codeph ">IME.conversionMode</codeph>. Эта константа используется с редакторами IME для упрощенного и традиционного китайского языков. Используйте синтаксис <codeph class="+ topic/ph pr-d/codeph ">IMEConversionMode.CHINESE</codeph>.
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.system.xml#IME/conversionMode" class="- topic/link "><linktext class="- topic/linktext ">flash.system.IME.conversionMode</linktext></link></related-links></apiValue><apiValue id="flash.system:IMEConversionMode:JAPANESE_HIRAGANA" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">JAPANESE_HIRAGANA</apiName><shortdesc class="- topic/shortdesc ">
	 Строка JAPANESE_HIRAGANA для использования со свойством IME.conversionMode.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">JAPANESE_HIRAGANA</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Строка <codeph class="+ topic/ph pr-d/codeph ">JAPANESE_HIRAGANA</codeph> для использования со свойством <codeph class="+ topic/ph pr-d/codeph ">IME.conversionMode</codeph>. Эта константа используется со всеми редакторами IME для японского языка. Используйте синтаксис <codeph class="+ topic/ph pr-d/codeph ">IMEConversionMode.JAPANESE_HIRAGANA</codeph>.
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.system.xml#IME/conversionMode" class="- topic/link "><linktext class="- topic/linktext ">flash.system.IME.conversionMode</linktext></link></related-links></apiValue><apiValue id="flash.system:IMEConversionMode:JAPANESE_KATAKANA_FULL" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">JAPANESE_KATAKANA_FULL</apiName><shortdesc class="- topic/shortdesc ">
	 Строка JAPANESE_KATAKANA_FULL для использования со свойством IME.conversionMode.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">JAPANESE_KATAKANA_FULL</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Строка <codeph class="+ topic/ph pr-d/codeph ">JAPANESE_KATAKANA_FULL</codeph> для использования со свойством <codeph class="+ topic/ph pr-d/codeph ">IME.conversionMode</codeph>. Эта константа используется со всеми редакторами IME для японского языка. Используйте синтаксис <codeph class="+ topic/ph pr-d/codeph ">IMEConversionMode.JAPANESE_KATAKANA_FULL</codeph>.
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.system.xml#IME/conversionMode" class="- topic/link "><linktext class="- topic/linktext ">flash.system.IME.conversionMode</linktext></link></related-links></apiValue><apiValue id="flash.system:IMEConversionMode:JAPANESE_KATAKANA_HALF" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">JAPANESE_KATAKANA_HALF</apiName><shortdesc class="- topic/shortdesc ">
	 СтрокаJAPANESE_KATAKANA_HALF для использования со свойством IME.conversionMode.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">JAPANESE_KATAKANA_HALF</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Строка<codeph class="+ topic/ph pr-d/codeph ">JAPANESE_KATAKANA_HALF</codeph> для использования со свойством <codeph class="+ topic/ph pr-d/codeph ">IME.conversionMode</codeph>. Эта константа используется со всеми редакторами IME для японского языка. Используйте синтаксис <codeph class="+ topic/ph pr-d/codeph ">IMEConversionMode.JAPANESE_KATAKANA_HALF</codeph>.
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.system.xml#IME/conversionMode" class="- topic/link "><linktext class="- topic/linktext ">flash.system.IME.conversionMode</linktext></link></related-links></apiValue><apiValue id="flash.system:IMEConversionMode:KOREAN" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">KOREAN</apiName><shortdesc class="- topic/shortdesc ">
	 Строка KOREAN для использования со свойством IME.conversionMode.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">KOREAN</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Строка <codeph class="+ topic/ph pr-d/codeph ">KOREAN</codeph> для использования со свойством <codeph class="+ topic/ph pr-d/codeph ">IME.conversionMode</codeph>. Эта константа используется со всеми редакторами IME для корейского языка. Используйте синтаксис <codeph class="+ topic/ph pr-d/codeph ">IMEConversionMode.KOREAN</codeph>.
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.system.xml#IME/conversionMode" class="- topic/link "><linktext class="- topic/linktext ">flash.system.IME.conversionMode</linktext></link></related-links></apiValue><apiValue id="flash.system:IMEConversionMode:UNKNOWN" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">UNKNOWN</apiName><shortdesc class="- topic/shortdesc ">
	 Строка UNKNOWN, которая может возвращаться при вызове свойства IME.conversionMode.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">UNKNOWN</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Строка <codeph class="+ topic/ph pr-d/codeph ">UNKNOWN</codeph>, которая может возвращаться при вызове свойства <codeph class="+ topic/ph pr-d/codeph ">IME.conversionMode</codeph>. Это значение не может быть установлено и возвращается только в том случае, если проигрыватель не может идентифицировать текущий активный редактор IME. Используйте синтаксис <codeph class="+ topic/ph pr-d/codeph ">IMEConversionMode.UNKNOWN</codeph>.
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.system.xml#IME/conversionMode" class="- topic/link "><linktext class="- topic/linktext ">flash.system.IME.conversionMode</linktext></link></related-links></apiValue></apiClassifier><apiClassifier languages="" id="flash.system:SecurityPanel" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">SecurityPanel</apiName><shortdesc class="- topic/shortdesc ">
 Класс SecurityPanel передает значения, задающие отображение одной из панелей параметров защиты.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Класс SecurityPanel передает значения, задающие отображение одной из панелей параметров защиты.
 
 <p class="- topic/p ">Этот класс содержит статические переменные, используемые с методом <codeph class="+ topic/ph pr-d/codeph ">Security.showSettings()</codeph>. Нельзя создать новые экземпляры класса SecurityPanel.</p>
 
 </apiDesc><example conref="examples\SecurityExample.as" class="- topic/example "> В следующем примере показано, как событие <codeph class="+ topic/ph pr-d/codeph ">click</codeph> для объекта Sprite может использоваться для отображения панели параметров локального хранилища в окне параметров проигрывателя Flash Player. К рабочей области добавляется оранжевый прямоугольник с помощью метода<codeph class="+ topic/ph pr-d/codeph ">draw()</codeph>. В методе <codeph class="+ topic/ph pr-d/codeph ">draw()</codeph>, добавляется прослушиватель события <codeph class="+ topic/ph pr-d/codeph ">click</codeph> с именем <codeph class="+ topic/ph pr-d/codeph ">clickHandler()</codeph>, который драгирует на события <codeph class="+ topic/ph pr-d/codeph ">click</codeph>, вызывая открытие панели настроек локального хранилища в проигрывателе Flash Player.
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
package {
    import flash.display.Sprite;
    import flash.text.TextField;
    import flash.events.*;
    import flash.system.Security;
    import flash.system.SecurityPanel;

    public class SecurityExample extends Sprite {
        private var bgColor:uint = 0xFFCC00;
        private var size:uint = 100;

        public function SecurityExample() {
            draw();
        }

        private function draw():void {
            var child:Sprite = new Sprite();
            child.graphics.beginFill(bgColor);
            child.graphics.drawRect(0, 0, size, size);
            child.graphics.endFill();
            child.buttonMode = true;

            var label:TextField = new TextField();
            label.text = "settings";
            label.selectable = false;
            label.mouseEnabled = false;
            child.addChild(label);

            child.addEventListener(MouseEvent.CLICK, clickHandler);
            addChild(child);
        }

        private function clickHandler(event:MouseEvent):void {
            Security.showSettings(SecurityPanel.LOCAL_STORAGE);
        }
    }
}
</codeblock></example></apiClassifierDetail><apiValue id="flash.system:SecurityPanel:CAMERA" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">CAMERA</apiName><shortdesc class="- topic/shortdesc ">
	 При переходе к Security.showSettings() отображает панель камеры в окне параметров проигрывателя Flash Player.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">Security, Security.CAMERA, CAMERA
	  
	  </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">camera</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 При переходе к <codeph class="+ topic/ph pr-d/codeph ">Security.showSettings()</codeph> отображает панель камеры в окне параметров проигрывателя Flash Player.
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.system.xml#Security/showSettings()" class="- topic/link "><linktext class="- topic/linktext ">Security.showSettings()</linktext></link></related-links></apiValue><apiValue id="flash.system:SecurityPanel:DEFAULT" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">DEFAULT</apiName><shortdesc class="- topic/shortdesc ">
	 При переходе к Security.showSettings() отображает панель, которая была открыта при последнем закрытии окна параметров проигрывателя Flash Player.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">Security, Security.DEFAULT, DEFAULT
	  
	  </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">default</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 При переходе к <codeph class="+ topic/ph pr-d/codeph ">Security.showSettings()</codeph> отображает панель, которая была открыта при последнем закрытии окна параметров проигрывателя Flash Player.
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.system.xml#Security/showSettings()" class="- topic/link "><linktext class="- topic/linktext ">Security.showSettings()</linktext></link></related-links></apiValue><apiValue id="flash.system:SecurityPanel:DISPLAY" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">DISPLAY</apiName><shortdesc class="- topic/shortdesc ">
	 При переходе к Security.showSettings() отображает панель отображения в окне параметров проигрывателя Flash Player.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">Security, Security.DISPLAY, DISPLAY
	  
	  </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">display</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 При переходе к <codeph class="+ topic/ph pr-d/codeph ">Security.showSettings()</codeph> отображает панель отображения в окне параметров проигрывателя Flash Player.
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.system.xml#Security/showSettings()" class="- topic/link "><linktext class="- topic/linktext ">Security.showSettings()</linktext></link></related-links></apiValue><apiValue id="flash.system:SecurityPanel:LOCAL_STORAGE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">LOCAL_STORAGE</apiName><shortdesc class="- topic/shortdesc ">
	 При переходе к Security.showSettings() отображает панель параметров локального хранилища в окне параметров проигрывателя Flash Player.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">Security, Security.LOCAL_STORAGE, LOCAL_STORAGE
	  
	  </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">localStorage</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 При переходе к <codeph class="+ topic/ph pr-d/codeph ">Security.showSettings()</codeph> отображает панель параметров локального хранилища в окне параметров проигрывателя Flash Player.
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.system.xml#Security/showSettings()" class="- topic/link "><linktext class="- topic/linktext ">Security.showSettings()</linktext></link></related-links></apiValue><apiValue id="flash.system:SecurityPanel:MICROPHONE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">MICROPHONE</apiName><shortdesc class="- topic/shortdesc ">
	 При переходе к Security.showSettings() отображает панель микрофона в окне параметров проигрывателя Flash Player.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">Security, Security.MICROPHONE, MICROPHONE
	  
	  </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">microphone</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 При переходе к <codeph class="+ topic/ph pr-d/codeph ">Security.showSettings()</codeph> отображает панель микрофона в окне параметров проигрывателя Flash Player.
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.system.xml#Security/showSettings()" class="- topic/link "><linktext class="- topic/linktext ">Security.showSettings()</linktext></link></related-links></apiValue><apiValue id="flash.system:SecurityPanel:PRIVACY" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">PRIVACY</apiName><shortdesc class="- topic/shortdesc ">
	 При переходе к Security.showSettings() отображает панель параметров конфиденциальности в окне параметров проигрывателя Flash Player.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">Security, Security.PRIVACY, PRIVACY
	  
	  </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">privacy</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 При переходе к <codeph class="+ topic/ph pr-d/codeph ">Security.showSettings()</codeph> отображает панель параметров конфиденциальности в окне параметров проигрывателя Flash Player.
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.system.xml#Security/showSettings()" class="- topic/link "><linktext class="- topic/linktext ">Security.showSettings()</linktext></link></related-links></apiValue><apiValue id="flash.system:SecurityPanel:SETTINGS_MANAGER" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">SETTINGS_MANAGER</apiName><shortdesc class="- topic/shortdesc ">
	 При переходе к Security.showSettings() отображает диспетчер параметров (в отдельном окне браузера).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">Security, Security.SETTINGS_MANAGER, SETTINGS_MANAGER
	  
	  </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">settingsManager</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 При переходе к <codeph class="+ topic/ph pr-d/codeph ">Security.showSettings()</codeph> отображает диспетчер параметров (в отдельном окне браузера).
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.system.xml#Security/showSettings()" class="- topic/link "><linktext class="- topic/linktext ">Security.showSettings()</linktext></link></related-links></apiValue></apiClassifier><apiClassifier languages="" id="flash.system:TouchscreenType" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">TouchscreenType</apiName><shortdesc class="- topic/shortdesc ">
 Класс TouchscreenType перечисляет значения для различных типов сенсорных экранов.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Класс TouchscreenType перечисляет значения для различных типов сенсорных экранов.
 
 <p class="- topic/p ">Используйте значения, определенные классом TouchscreenType вместе со свойством <codeph class="+ topic/ph pr-d/codeph ">Capabilities.touchscreenType</codeph>.</p>
 
 </apiDesc><example conref="examples\KeyboardType.as" class="- topic/example "> Следующий пример представляет собой простой тест, отображающий текущее состояние клавиш Num Lock и Caps Lock, а также тип клавиатуры и сенсорного экрана в среде выполнения. При тестировании этого примера щелкните текстовое поле, чтобы увидеть значения свойств:
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
import flash.events.~~;
import flash.display.~~;
import flash.ui.Keyboard;
import flash.system.Capabilities;
import flash.text.TextField;


var keyboardInfoTxt:TextField = new TextField();
keyboardInfoTxt.x = 30;
keyboardInfoTxt.y = 50;
keyboardInfoTxt.width = 300;
keyboardInfoTxt.height = 100;
keyboardInfoTxt.border = true;

addChild(keyboardInfoTxt);

addEventListener (MouseEvent.CLICK, getScreenKeyboardType);

function getScreenKeyboardType(e:MouseEvent):void{
    keyboardInfoTxt.text= "Caps Lock is : " + String(flash.ui.Keyboard.capsLock)+ "\n" + 
    "Num Lock is : " + String(flash.ui.Keyboard.numLock) +"\n" + 
    "Has Virtual Keyboard : " + String(flash.ui.Keyboard.hasVirtualKeyboard) + "\n" + 
    "Physical Keyboard Type : " + flash.ui.Keyboard.physicalKeyboardType + "\n" + 
    "flash.system.Capabilities.touchscreenType is : " + flash.system.Capabilities.touchscreenType;
}
</codeblock></example></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.system.xml#Capabilities/touchscreenType" class="- topic/link "><linktext class="- topic/linktext ">Capabilities.touchscreenType</linktext></link><link href="flash.ui.xml#Mouse/supportsCursor" class="- topic/link "><linktext class="- topic/linktext ">flash.ui.Mouse.supportsCursor</linktext></link></related-links><apiValue id="flash.system:TouchscreenType:FINGER" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">FINGER</apiName><shortdesc class="- topic/shortdesc ">
	 Сенсорный экран, предназначенный для реагирования на касания пальцев.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">finger</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Сенсорный экран, предназначенный для реагирования на касания пальцев.
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.system:TouchscreenType:NONE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">NONE</apiName><shortdesc class="- topic/shortdesc ">
	 У компьютера или устройства нет поддерживаемого сенсорного экрана.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">none</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 У компьютера или устройства нет поддерживаемого сенсорного экрана.
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.system:TouchscreenType:STYLUS" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">STYLUS</apiName><shortdesc class="- topic/shortdesc ">
	 Сенсорный экран, предназначенный для использования с сенсорным пером.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">stylus</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Сенсорный экран, предназначенный для использования с сенсорным пером.
	 
	 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.system:ApplicationDomain" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">ApplicationDomain</apiName><shortdesc class="- topic/shortdesc ">
 Класс ApplicationDomain является контейнером для дискретных групп определений классов.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><internal>Security considerations for application domains are discussed in the 
 applicationDomain property entries of URLRequest and LoaderInfo. 
 
 </internal></asCustoms></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Класс ApplicationDomain является контейнером для дискретных групп определений классов. Домены приложения используются для разделения классов в одном домене безопасности. Они обеспечивают возможность наличия нескольких определений одного класса и позволяют нижестоящим элементам многократно использовать определения вышестоящих элементов.
 
 <p class="- topic/p ">Домены приложений используются, если внешний SWF-файл загружается с помощью класса Loader. Все определения ActionScript 3.0 в загруженном SWF-файле хранятся в домене приложения, который указывается свойством <codeph class="+ topic/ph pr-d/codeph ">applicationDomain</codeph> объекта LoaderContext, передаваемого в параметре <codeph class="+ topic/ph pr-d/codeph ">context</codeph> объекта <codeph class="+ topic/ph pr-d/codeph ">load()</codeph> класса Loader или метода <codeph class="+ topic/ph pr-d/codeph ">loadBytes()</codeph>. Объект LoaderInfo также содержит свойство <codeph class="+ topic/ph pr-d/codeph ">applicationDomain</codeph>, доступное только для чтения.</p>
 
 <p class="- topic/p ">Все программные коды в SWF-файле определены для существования в домене приложения. Текущим доменом приложения является домен, где выполняется основное приложение. Системный домен содержит все домены приложений, включая текущий домен, и это означает, что он содержит все классы проигрывателя Flash Player.</p>
 
 <p class="- topic/p ">Каждый домен приложения, исключая системный домен, обладает связанным родительским доменом. Родительский домен домена главного приложения является системным доменом. Загруженные классы определяются только в том случае, если они уже не определены в своих родительских классах. Нельзя перезаписать определение загруженного класса новым определением.</p>
 
 <p class="- topic/p ">Примеры использования доменов приложений см. в <i class="+ topic/ph hi-d/i ">Руководстве разработчика по ActionScript 3.0</i>.</p>
 
 <p class="- topic/p ">Функция конструктора <codeph class="+ topic/ph pr-d/codeph ">ApplicationDomain()</codeph> позволяет создавать объект ApplicationDomain.</p>
 
 </apiDesc><example conref="examples\ApplicationDomainExample.as" class="- topic/example "> В следующем примере демонстрируется загрузка выполняемого класса, а также показано, как вызывать общедоступные методы класса, находящегося в другом SWF-файле.
 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Примечания.</b></p>
 <ul class="- topic/ul "><li class="- topic/li ">Поскольку класс ClassLoader загружает SWF-файл, необходимо обеспечивать локальную безопасность на уровне файловой системы.</li><li class="- topic/li ">Для выполнения этого примера необходимо наличие SWF-файла с именем RuntimeClasses.swf в той же папке, что и файл ApplicationDomainExample.swf.</li></ul>
 
 <p class="- topic/p ">Начните создавать файл RuntimeClasses.swf с помощью следующего программного кода:</p>
 <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
 package {
   import flash.display.Sprite;
   public class RuntimeClasses extends Sprite
   {
     public function RuntimeClasses()
     {}
      
     public function greet():String {
       return("Hello World");
     }
   }
 }
 </codeblock>
 
 <p class="- topic/p ">Затем выполните следующий программный код:</p>
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">

package {
    import flash.display.DisplayObject;
    import flash.display.Sprite;
    import flash.errors.IllegalOperationError;
    import flash.events.Event;
    import flash.text.TextField;

    public class ApplicationDomainExample extends Sprite {
        private var loader:ClassLoader;
        private var tf:TextField = new TextField();

        public function ApplicationDomainExample() {
            addChild(tf);

            loader = new ClassLoader();
            loader.addEventListener(ClassLoader.LOAD_ERROR,loadErrorHandler);
            loader.addEventListener(ClassLoader.CLASS_LOADED,classLoadedHandler);
            loader.load("RuntimeClasses.swf");
        }

        private function loadErrorHandler(e:Event):void {
            tf.text = "Load failed";
            throw new IllegalOperationError("Cannot load the specified file.");
        }

        private function classLoadedHandler(e:Event):void {
            var runtimeClassRef:Class = loader.getClass("RuntimeClasses");
            var greeter:Object = new runtimeClassRef();

            tf.text = greeter.greet();
        }
    }
}

import flash.display.Loader;
import flash.errors.IllegalOperationError;
import flash.events.Event;
import flash.events.EventDispatcher;
import flash.events.IOErrorEvent;
import flash.events.SecurityErrorEvent;
import flash.net.URLRequest;
import flash.system.ApplicationDomain;
import flash.system.LoaderContext;

class ClassLoader extends EventDispatcher {
    public static var CLASS_LOADED:String = "classLoaded";
    public static var LOAD_ERROR:String = "loadError";
    private var loader:Loader;
    private var swfLib:String;
    private var request:URLRequest;
    private var loadedClass:Class;

    public function ClassLoader() {

        loader = new Loader();
        loader.contentLoaderInfo.addEventListener(Event.COMPLETE,completeHandler);
        loader.contentLoaderInfo.addEventListener(IOErrorEvent.IO_ERROR,ioErrorHandler);
        loader.contentLoaderInfo.addEventListener(SecurityErrorEvent.SECURITY_ERROR,securityErrorHandler);
    }

    public function load(lib:String):void {
        swfLib = lib;
        request = new URLRequest(swfLib);
        var context:LoaderContext = new LoaderContext();
        context.applicationDomain=ApplicationDomain.currentDomain;
        loader.load(request,context);
    }

    public function getClass(className:String):Class {
        try {
            return loader.contentLoaderInfo.applicationDomain.getDefinition(className)  as  Class;
        } catch (e:Error) {
            throw new IllegalOperationError(className + " definition not found in " + swfLib);
        }
        return null;
    }

    private function completeHandler(e:Event):void {
        dispatchEvent(new Event(ClassLoader.CLASS_LOADED));
    }

    private function ioErrorHandler(e:Event):void {
        dispatchEvent(new Event(ClassLoader.LOAD_ERROR));
    }

    private function securityErrorHandler(e:Event):void {
        dispatchEvent(new Event(ClassLoader.LOAD_ERROR));
    }
}
</codeblock></example><example conref="examples\ApplicationDomainExample.2.as" class="- topic/example "> Если в нескольких SWF-файлах содержатся откомпилированные классы с одним и тем же именем, но по-разному реализованные, можно отделить классы загруженных извне SWF-файлов от классов каждого последующего примера. Ранее дочернему SWF-файлу предписывалось использовать <codeph class="+ topic/ph pr-d/codeph ">ApplicationDomain.currentDomain</codeph>. В этом случае новый домен приложения <codeph class="+ topic/ph pr-d/codeph ">ApplicationDomain</codeph> создается таким образом, что свойства и методы класса <codeph class="+ topic/ph pr-d/codeph ">Greeter</codeph> любого SWF-файла, загружаемого вторым, не будут замещать свойства и методы первого класса <codeph class="+ topic/ph pr-d/codeph ">Greeter</codeph>. Это можно проверить изменив свойство <codeph class="+ topic/ph pr-d/codeph ">context.applicationDomain</codeph> в методе <codeph class="+ topic/ph pr-d/codeph ">load</codeph> для <codeph class="+ topic/ph pr-d/codeph ">ClassLoader</codeph>.
 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Примечания.</b></p>
 <ul class="- topic/ul "><li class="- topic/li ">Поскольку класс ClassLoader загружает SWF-файл, необходимо обеспечивать локальную безопасность на уровне файловой системы.</li><li class="- topic/li ">Для выполнения этого примера необходимо иметь два SWF-файла с названиями Greeter.swf, расположенными в папках en и es соответственно.</li></ul>
 
 <p class="- topic/p ">Создайте файл Greeter.as в каталоге en, используя следующий программный код:</p>
 <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
 package {
    import flash.display.Sprite;
    public class Greeter extends Sprite
    {
        public function Greeter()
        {
        }
        
        public function greet():String {
            return("Good Morning");
        }
    }
 }
 </codeblock>
 <p class="- topic/p ">Затем создайте аналогичный файл Greeter.as в каталоге es:</p>
 
 <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
 package {
    import flash.display.Sprite;
    public class Greeter extends Sprite
    {
        public function Greeter()
        {
        }
        
        public function greet():String {
            return("Buenos Dias");
        }
    }
}
 </codeblock>
 
 <p class="- topic/p ">Скомпилируйте SWF-файлы для обоих случаев и затем выполните следующий программный код:</p>
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
package {
    import flash.display.DisplayObject;
    import flash.display.Sprite;
    import flash.errors.IllegalOperationError;
    import flash.events.Event;
    import flash.text.TextField;
    import flash.text.TextFieldAutoSize;

    public class ApplicationDomainExample2 extends Sprite {
        private var spanishGreeterLoader:ClassLoader;
        private var englishGreeterLoader:ClassLoader;
        private var tf:TextField = new TextField();
        private var greetersLoaded:uint = 0;

        public function ApplicationDomainExample2() {
            tf.autoSize = TextFieldAutoSize.LEFT;
            addChild(tf);

            spanishGreeterLoader = new ClassLoader();
            spanishGreeterLoader.addEventListener(ClassLoader.LOAD_ERROR,loadErrorHandler);
            spanishGreeterLoader.addEventListener(ClassLoader.CLASS_LOADED,classLoadedHandler);
            spanishGreeterLoader.load("es/Greeter.swf");
            
            englishGreeterLoader = new ClassLoader();
            englishGreeterLoader.addEventListener(ClassLoader.LOAD_ERROR,loadErrorHandler);
            englishGreeterLoader.addEventListener(ClassLoader.CLASS_LOADED,classLoadedHandler);
            englishGreeterLoader.load("en/Greeter.swf");
        }

        private function loadErrorHandler(e:Event):void {
            tf.text = "Load failed";
            throw new IllegalOperationError("Cannot load the specified file.");
        }

        private function classLoadedHandler(e:Event):void {
            greetersLoaded++;
            if(greetersLoaded == 2) {
                greet();    
            }
        }
        
        private function greet():void {
            var spanishGreeter:Class = spanishGreeterLoader.getClass("Greeter");
            var englishGreeter:Class = englishGreeterLoader.getClass("Greeter");
            var greeter1 = new spanishGreeter();
            var greeter2 = new englishGreeter();
            
            tf.text = greeter1.greet() + "\n" + greeter2.greet();
        }
    }
}

import flash.display.Loader;
import flash.errors.IllegalOperationError;
import flash.events.Event;
import flash.events.EventDispatcher;
import flash.events.IOErrorEvent;
import flash.events.SecurityErrorEvent;
import flash.net.URLRequest;
import flash.system.ApplicationDomain;
import flash.system.LoaderContext;

class ClassLoader extends EventDispatcher {
    public static var CLASS_LOADED:String = "classLoaded";
    public static var LOAD_ERROR:String = "loadError";
    private var loader:Loader;
    private var swfLib:String;
    private var request:URLRequest;
    private var loadedClass:Class;

    public function ClassLoader() {

        loader = new Loader();
        loader.contentLoaderInfo.addEventListener(Event.COMPLETE,completeHandler);
        loader.contentLoaderInfo.addEventListener(IOErrorEvent.IO_ERROR,ioErrorHandler);
        loader.contentLoaderInfo.addEventListener(SecurityErrorEvent.SECURITY_ERROR,securityErrorHandler);
    }

    public function load(lib:String):void {
        swfLib = lib;
        request = new URLRequest(swfLib);
        var context:LoaderContext = new LoaderContext();
//        context.applicationDomain = ApplicationDomain.currentDomain;
        context.applicationDomain = new ApplicationDomain();
        loader.load(request,context);
    }

    public function getClass(className:String):Class {
        try {
            return loader.contentLoaderInfo.applicationDomain.getDefinition(className)  as  Class;
        } catch (e:Error) {
            throw new IllegalOperationError(className + " definition not found in " + swfLib);
        }
        return null;
    }

    private function completeHandler(e:Event):void {
        dispatchEvent(new Event(ClassLoader.CLASS_LOADED));
    }

    private function ioErrorHandler(e:Event):void {
        dispatchEvent(new Event(ClassLoader.LOAD_ERROR));
    }

    private function securityErrorHandler(e:Event):void {
        dispatchEvent(new Event(ClassLoader.LOAD_ERROR));
    }
}
</codeblock></example></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.display.xml#Loader/load()" class="- topic/link "><linktext class="- topic/linktext ">flash.display.Loader.load()</linktext></link><link href="flash.display.xml#Loader/loadBytes()" class="- topic/link "><linktext class="- topic/linktext ">flash.display.Loader.loadBytes()</linktext></link><link href="flash.display.xml#LoaderInfo" class="- topic/link "><linktext class="- topic/linktext ">flash.display.LoaderInfo</linktext></link><link href="flash.net.xml#URLRequest" class="- topic/link "><linktext class="- topic/linktext ">flash.net.URLRequest</linktext></link><link href="flash.system.xml#LoaderContext" class="- topic/link "><linktext class="- topic/linktext ">flash.system.LoaderContext</linktext></link></related-links><apiConstructor id="flash.system:ApplicationDomain:ApplicationDomain" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">ApplicationDomain</apiName><shortdesc class="- topic/shortdesc ">
     Создает новый домен приложения.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">parentDomain</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.system:ApplicationDomain</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Если не указан родительский домен, родительским доменом для этого домена приложения становится системный домен.
     
     </apiDesc></apiParam><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">
     </apiTipText></apiTipTexts></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Создает новый домен приложения.
     
     </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="flash.system:ApplicationDomain:getDefinition" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">getDefinition</apiName><shortdesc class="- topic/shortdesc ">
     Получает общедоступное определение от указанного домена приложения.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><internal>throws SecurityError The definition belongs to a domain to which
     the calling code does not have access.
     
     </internal></asCustoms></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Общедоступного определения с указанным именем не существует.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ReferenceError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ReferenceError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Объект связан с определением.
     
     </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Object</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">name</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Имя определения.
     </apiDesc></apiParam><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">
     </apiTipText></apiTipTexts></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Получает общедоступное определение от указанного домена приложения. Это определение может быть определением класса, пространства имен или функции.
     
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.system:ApplicationDomain:hasDefinition" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">hasDefinition</apiName><shortdesc class="- topic/shortdesc ">
     Проверяет существование общедоступного определения в указанном домене приложения.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Устанавливается значение<codeph class="+ topic/ph pr-d/codeph ">true</codeph>, если указанное определение существует; в противном случае устанавливается значение <codeph class="+ topic/ph pr-d/codeph ">false</codeph>.
     
     </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">name</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Имя определения.
     </apiDesc></apiParam><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">
     </apiTipText></apiTipTexts></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Проверяет существование общедоступного определения в указанном домене приложения. Это определение может быть определением класса, пространства имен или функции.
     
     </apiDesc></apiOperationDetail></apiOperation><apiValue id="flash.system:ApplicationDomain:MIN_DOMAIN_MEMORY_LENGTH:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">MIN_DOMAIN_MEMORY_LENGTH</apiName><shortdesc class="- topic/shortdesc ">
     Определяет минимальную длину объекта памяти, необходимую для использования в качестве ApplicationDomain.domainMemory.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">uint</apiValueClassifier><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">
     </apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Определяет минимальную длину объекта памяти, необходимую для использования в качестве ApplicationDomain.domainMemory.
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.system:ApplicationDomain:currentDomain:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">currentDomain</apiName><shortdesc class="- topic/shortdesc ">
     Определяет текущий домен приложения, в котором выполняется код пользователя.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><internal>Question: Do you call System.currentDomain? or Loader.currentDomain or request.currentDomain?
     
     </internal></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.system:ApplicationDomain</apiValueClassifier><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">
     </apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Определяет текущий домен приложения, в котором выполняется код пользователя.
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.system:ApplicationDomain:domainMemory:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">domainMemory</apiName><shortdesc class="- topic/shortdesc ">
     Определяет и задает объект, на котором будут выполняться операции глобальной памяти домена в рамках данного ApplicationDomain.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.utils:ByteArray</apiValueClassifier><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">
     </apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Определяет и задает объект, на котором будут выполняться операции глобальной памяти домена в рамках данного ApplicationDomain.
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.system:ApplicationDomain:parentDomain:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">parentDomain</apiName><shortdesc class="- topic/shortdesc ">
     Определяет родительский домен данного домена приложения.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.system:ApplicationDomain</apiValueClassifier><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">
     </apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Определяет родительский домен данного домена приложения.
     
     </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.system:Security" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">Security</apiName><shortdesc class="- topic/shortdesc ">
 Класс Security позволяет задать способ взаимодействия содержимого в различных доменах.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">Security, XMLNode object, built-in class
  
  </keyword></asCustoms></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Класс Security позволяет задать способ взаимодействия содержимого в различных доменах.
 
 </apiDesc><example conref="examples\SecurityExample.as" class="- topic/example "> В следующем примере показано, как событие <codeph class="+ topic/ph pr-d/codeph ">click</codeph> для объекта Sprite может использоваться для отображения панели параметров локального хранилища в окне параметров проигрывателя Flash Player. К рабочей области добавляется оранжевый прямоугольник с помощью метода<codeph class="+ topic/ph pr-d/codeph ">draw()</codeph>. В методе <codeph class="+ topic/ph pr-d/codeph ">draw()</codeph>, добавляется прослушиватель события <codeph class="+ topic/ph pr-d/codeph ">click</codeph> с именем <codeph class="+ topic/ph pr-d/codeph ">clickHandler()</codeph>, который драгирует на события <codeph class="+ topic/ph pr-d/codeph ">click</codeph>, вызывая открытие панели настроек локального хранилища в проигрывателе Flash Player.
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
package {
    import flash.display.Sprite;
    import flash.text.TextField;
    import flash.events.*;
    import flash.system.Security;
    import flash.system.SecurityPanel;

    public class SecurityExample extends Sprite {
        private var bgColor:uint = 0xFFCC00;
        private var size:uint = 100;

        public function SecurityExample() {
            draw();
        }

        private function draw():void {
            var child:Sprite = new Sprite();
            child.graphics.beginFill(bgColor);
            child.graphics.drawRect(0, 0, size, size);
            child.graphics.endFill();
            child.buttonMode = true;

            var label:TextField = new TextField();
            label.text = "settings";
            label.selectable = false;
            label.mouseEnabled = false;
            child.addChild(label);

            child.addEventListener(MouseEvent.CLICK, clickHandler);
            addChild(child);
        }

        private function clickHandler(event:MouseEvent):void {
            Security.showSettings(SecurityPanel.LOCAL_STORAGE);
        }
    }
}
</codeblock></example></apiClassifierDetail><apiOperation id="flash.system:Security:allowDomain" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">allowDomain</apiName><shortdesc class="- topic/shortdesc ">
     Позволяет SWF-файлам в указанных доменах обращаться к объектам и переменным в SWF-файле, содержащем вызов allowDomain().</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">Security, Security.allowDomain, allowDomain
      
      </keyword></asCustoms></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">При вызове этого метода из кода в изолированной среде безопасности приложения AIR порождается исключение SecurityError. Содержимое за пределами изолированной среды безопасности приложения не может выполнять перекрестные сценарии для находящегося в ней содержимого. 
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">SecurityError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">SecurityError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">domains</apiItemName><apiType value="restParam" name="type" class="- topic/state reference/state apiRef/apiType "/><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Одна или несколько строк, а также объектов URLRequest, указывающих домены, из которых требуется разрешить доступ. Можно указать особый домен «~~», чтобы разрешить доступ из всех доменов.  
     
     <p class="- topic/p ">Во Flash Professional указание домена «~~» является единственным способом разрешения доступа к нелокальным SWF-файлам из локальных SWF-файлов, опубликованных с помощью инструмента разработки Adobe Flash с установленным для параметра «Безопасность локального воспроизведения» режимом «Предоставлен доступ только к сети».</p>
     <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Примечание.</b> Подстановочное значение не поддерживается для субдоменов. Например, нельзя использовать значение <codeph class="+ topic/ph pr-d/codeph ">~~.foo.com</codeph> для параметра <codeph class="+ topic/ph pr-d/codeph ">domains</codeph>. Хотя субдомен можно указать с использованием подстановочного значения в файле междоменной политики (как в случае с <codeph class="+ topic/ph pr-d/codeph ">~~.foo.com</codeph>), это недопустимо для метода <codeph class="+ topic/ph pr-d/codeph ">allowDomain()</codeph>.</p>
     
     </apiDesc></apiParam><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Обеспечивает SWF- и HTML-файлам доступ к объектам и переменным в вызывающем SWF-файле.
     
     </apiTipText></apiTipTexts></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     <ph class="- topic/ph ">Обеспечивает файлам SWF в указанных доменах доступ к объектам и переменным в файле SWF, содержащем вызов<codeph class="+ topic/ph pr-d/codeph ">allowDomain()</codeph>. </ph>
     
     
     
     <p class="- topic/p "><i class="+ topic/ph hi-d/i ">Примечание.</i> При вызове этого метода из кода в изолированной среде безопасности приложения AIR порождается исключение SecurityError. Содержимое за пределами домена защиты приложения не может выполнять перекрестные сценарии для находящегося в ней содержимого. Однако содержимое, находящееся за пределами изолированной программной среды приложения, может обращаться к содержимому в этой среде с помощью так называемого моста.</p>
     
     <p class="- topic/p ">Если два SWF-файла размещаются на одном домене, например http://mysite.com/swfA.swf и http://mysite.com/swfB.swf, то swfA.swf может анализировать и модифицировать переменные, объекты, свойства, методы и прочее в swfB.swf и наоборот. Это называется <i class="+ topic/ph hi-d/i ">выполнением сценариев между роликами</i> или <i class="+ topic/ph hi-d/i ">выполнением перекрестных сценариев</i>.</p>
     
     <p class="- topic/p ">Если два SWF-файла находятся в разных доменах, например http://siteA.com/swfA.swf и http://siteB.com/siteB.swf, то по умолчанию Flash Player не позволяет swfA.swf выполнять сценарии, связанные с swfB.swf, и наоборот. SWF-файл предоставляет доступ к SWF-файлам из других доменов путем вызова <codeph class="+ topic/ph pr-d/codeph ">Security.allowDomain()</codeph>. Это называется <i class="+ topic/ph hi-d/i ">выполнением междоменных сценариев</i>. Вызывая <codeph class="+ topic/ph pr-d/codeph ">Security.allowDomain("siteA.com")</codeph>, siteB.swf дает siteA.swf разрешение на выполнение сценариев.</p>
     
     <p class="- topic/p ">При междоменном вызове важно знать о двух участвующих сторонах. В этой документации сторона, осуществляющая перекрестное выполнение сценариев, называется <i class="+ topic/ph hi-d/i ">вызывающей стороной</i> (обычно вызывающий SWF-файл), а другая сторона называется <i class="+ topic/ph hi-d/i ">вызываемой стороной</i> (обычно вызываемый SWF-файл). Если файл siteA.swf создает сценарий для стороны siteB.swf, файл siteA.swf является вызывающей стороной, а файл siteB.swf — вызываемой стороной.</p>
     
     <p class="- topic/p "><adobeimage alt="Междоменная диаграмма" href="../../images/crossScript_load.jpg" placement="inline" class="+ topic/image adobe-d/adobeimage "/></p>
     
     <p class="- topic/p ">Междоменные права доступа, которые задаются с использованием метода <codeph class="+ topic/ph pr-d/codeph ">allowDomain()</codeph>, являются несимметричными. В предыдущем сценарии файл siteA.swf может создавать сценарий для файла siteB.swf, но файл siteB.swf не может создавать сценарий для файла siteA.swf, поскольку в файле siteA.swf отсутствует обращение к методу <codeph class="+ topic/ph pr-d/codeph ">allowDomain()</codeph> для предоставления SWF-файлам в узле siteB.com разрешения на создания сценариев. Можно настроить симметричные права доступа путем создания обращения в обоих SWF-файлах к методу <codeph class="+ topic/ph pr-d/codeph ">allowDomain()</codeph>.</p>
     
     <p class="- topic/p ">Кроме защиты SWF-файлов от междоменного создания сценариев другими SWF-файлами, в приложении Flash Player предусмотрена защита SWF-файлов от междоменного создания сценариев с использованием файлов HTML. Создание сценариев из файлов HTML в SWF-файлах может выполняться с использованием функций браузеров более ранних версий, например <codeph class="+ topic/ph pr-d/codeph ">SetVariable</codeph>, или обратных вызовов в функции <codeph class="+ topic/ph pr-d/codeph ">ExternalInterface.addCallback()</codeph>. Если создание сценариев из файлов HTML в SWF-файлах выполняется между доменами, вызываемый SWF-файл должен обращаться к методу <codeph class="+ topic/ph pr-d/codeph ">allowDomain()</codeph>, как и в том случае, если вызывающей стороной является SWF-файл, или произойдет сбой операции.</p>
     
     <p class="- topic/p ">При указании IP-адреса в качестве параметра для <codeph class="+ topic/ph pr-d/codeph ">allowDomain()</codeph> доступ всем сторонам, расположенным по указанному IP-адресу, предоставлен не будет. Благодаря этому можно разрешить доступ только стороне, которая содержит указанный IP-адрес в своем URL-адресе, а не имя домена, указывающее на этот IP-адрес.</p> 
     
     <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Различия, характерные для версий</b></p>
     <p class="- topic/p ">Правила междоменной защиты Flash Player изменяются от версии к версии. В следующей таблице приводится сводная информация о различиях.</p>
     
     <adobetable class="innertable"><tgroup cols="5" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Последние версии SWF участвуют в перекрестном выполнении сценариев</entry><entry class="- topic/entry ">Необходимость <codeph class="+ topic/ph pr-d/codeph ">allowDomain()</codeph>?</entry><entry class="- topic/entry ">Необходимость <codeph class="+ topic/ph pr-d/codeph ">allowInsecureDomain()</codeph>?</entry><entry class="- topic/entry ">SWF-файл, который должен вызывать метод <codeph class="+ topic/ph pr-d/codeph ">allowDomain()</codeph> или <codeph class="+ topic/ph pr-d/codeph ">allowInsecureDomain()</codeph></entry><entry class="- topic/entry ">Сведения, которые необходимо указать в <codeph class="+ topic/ph pr-d/codeph ">allowDomain()</codeph> или <codeph class="+ topic/ph pr-d/codeph ">allowInsecureDomain()</codeph></entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry align="center" class="- topic/entry ">5 или более ранняя</entry><entry class="- topic/entry ">Нет</entry><entry align="center" class="- topic/entry ">Нет</entry><entry align="center" class="- topic/entry ">нет</entry><entry align="center" class="- topic/entry ">нет</entry></row><row class="- topic/row "><entry align="center" class="- topic/entry ">6</entry><entry class="- topic/entry ">Да, если сверхобласти не соответствуют</entry><entry align="center" class="- topic/entry ">Нет</entry><entry class="- topic/entry ">Вызываемый SWF-файл или любой SWF-файл с такой же сверхобластью, как и у вызываемого SWF-файла</entry><entry class="- topic/entry "><ul class="- topic/ul "><li class="- topic/li ">Текстовый домен (mysite.com)</li><li class="- topic/li ">IP-адрес (192.168.1.1)</li></ul></entry></row><row class="- topic/row "><entry align="center" class="- topic/entry ">7</entry><entry class="- topic/entry ">Да, если отсутствует точное соответствие доменов</entry><entry class="- topic/entry ">Да, при выполнении доступа с HTTP к HTTPS (даже при точном соответствии доменов)</entry><entry class="- topic/entry ">Вызываемый SWF-файл или любой SWF-файл с доменом, точно соответствующим домену вызываемого SWF-файла</entry><entry class="- topic/entry "><ul class="- topic/ul "><li class="- topic/li ">Текстовый домен (mysite.com)</li><li class="- topic/li ">IP-адрес (192.168.1.1)</li></ul></entry></row><row class="- topic/row "><entry align="center" class="- topic/entry ">8 и более поздних версий</entry><entry class="- topic/entry ">Да, если отсутствует точное соответствие доменов</entry><entry class="- topic/entry ">Да, при выполнении доступа с HTTP к HTTPS (даже при точном соответствии доменов)</entry><entry class="- topic/entry ">Вызываемый SWF-файл</entry><entry class="- topic/entry "><ul class="- topic/ul "><li class="- topic/li ">Текстовый домен (mysite.com)</li><li class="- topic/li ">IP-адрес (192.168.1.1)</li><li class="- topic/li ">Подстановочный знак (~~)</li></ul></entry></row></tbody></tgroup></adobetable>
      
     <p class="- topic/p ">Версиями, в которых можно управлять поведением Flash Player, являются <i class="+ topic/ph hi-d/i ">версии SWF</i> (опубликованные версии SWF-файла), но не версии приложения Flash Player. Например, когда в приложении Flash Player 8 воспроизводится SWF-файл, опубликованный для версии 7, применяется поведение, характерное для версии 7. Такой подход позволяет убедиться в том, что поведение <codeph class="+ topic/ph pr-d/codeph ">Security.allowDomain()</codeph> в развернутых SWF-файлах не изменится из-за обновлений проигрывателя.</p>
     
     <p class="- topic/p ">В столбце с версиями в предыдущей таблице указана последняя версия SWF, которая задействована в операции перекрестного выполнения сценариев. Поведение Flash Player определяется в соответствии с версией вызывающего SWF-файла или вызываемого SWF-файла в зависимости от того, какая версия является новее.</p>
     
     <p class="- topic/p ">В следующих параграфах приводятся дополнительные сведения об изменениях безопасности Flash Player, в которых задействован метод <codeph class="+ topic/ph pr-d/codeph ">Security.allowDomain()</codeph>.</p>
     
     <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Версия 5</b>. Ограничения на междоменное выполнение сценариев не накладываются.</p>
     
     <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Версия 6</b>. Вводится защита междоменного выполнения сценариев. По умолчанию в приложении Flash Player междоменное выполнение сценариев запрещено; его можно разрешить с помощью метода <codeph class="+ topic/ph pr-d/codeph ">Security.allowDomain()</codeph>. Чтобы определить, находятся ли оба файла в одном домене, в приложении Flash Player используется сверхобласть каждого файла, которая представляет собой точное имя узла из URL-адреса файла, за исключением первого сегмента, но состоит как минимум из двух сегментов. Например, сверхобластью узла www.mysite.com является mysite.com. SWF-файлы с узлов www.mysite.com и store.mysite.com могут осуществлять перекрестное выполнение сценариев без вызова метода <codeph class="+ topic/ph pr-d/codeph ">Security.allowDomain()</codeph>.</p>
     
     <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Версия 7</b>. Соответствие сверхобластей заменено на точное соответствие доменов. Двум файлам разрешено перекрестное выполнение сценариев, только если имена узлов в их URL-адресах полностью идентичны; в противном случае необходимо вызвать метод <codeph class="+ topic/ph pr-d/codeph ">Security.allowDomain()</codeph>. По умолчанию файлам, загруженным с URL-адресов, отличных от HTTPS, запрещено выполнять сценарии в файлах, загруженных с URL-адресов HTTPS, даже если файлы загружены с полностью идентичного домена. Благодаря этому ограничению можно защитить файлы HTTPS, поскольку файл, отличный от HTTPS, подвержен изменениям при загрузке, а злоумышленно измененный файл, отличный от HTTPS, может повредить файл HTTPS, который в противном случае защищен от такого повреждения. Метод <codeph class="+ topic/ph pr-d/codeph ">Security.allowInsecureDomain()</codeph> используется, чтобы разрешить вызываемым SWF-файлам HTTPS свободно отключать это ограничение, но метод <codeph class="+ topic/ph pr-d/codeph ">Security.allowInsecureDomain()</codeph> использовать не рекомендуется.</p>
     
     <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Версия 8</b>. Изменения представлены в двух основных областях:</p>
     
     <ul class="- topic/ul "><li class="- topic/li ">Обращение к методу <codeph class="+ topic/ph pr-d/codeph ">Security.allowDomain()</codeph> теперь позволяет осуществлять операции междоменного выполнения сценариев, только если вызываемый SWF-файл является SWF-файлом, вызывающим метод <codeph class="+ topic/ph pr-d/codeph ">Security.allowDomain()</codeph>. Другими словами, доступ предоставляется только SWF-файлу, который вызывает метод <codeph class="+ topic/ph pr-d/codeph ">Security.allowDomain()</codeph>. В предыдущих версиях обращение к методу <codeph class="+ topic/ph pr-d/codeph ">Security.allowDomain()</codeph> позволяло разрешить перекрестное выполнение сценариев, в то время как вызываемый SWF-файл мог быть любым SWF-файлом в том же домене, что и SWF-файл, вызывающий метод <codeph class="+ topic/ph pr-d/codeph ">Security.allowDomain()</codeph>. Ранее обращение к методу <codeph class="+ topic/ph pr-d/codeph ">Security.allowDomain()</codeph> позволяло открыть весь домен вызывающего SWF-файла.</li><li class="- topic/li ">Добавлена поддержка значений подстановочного символа в методах <codeph class="+ topic/ph pr-d/codeph ">Security.allowDomain("~~")</codeph> и <codeph class="+ topic/ph pr-d/codeph ">Security.allowInsecureDomain("~~")</codeph>. Использование значения подстановочного символа (~~) позволяет разрешить операции перекрестного выполнения сценариев, если вызываемый файл является любым файлом, загруженным с любого узла. Подстановочный символ можно рассматривать как глобальное предоставление прав. Права доступа, предоставленные с использованием подстановочного символа, необходимы для включения определенных операций в соответствии с правилами безопасности локального файла. В частности, чтобы локальный SWF-файл с правами сетевого доступа мог выполнять сценарий в SWF-файле в Интернете, вызываемый интернет-файл SWF должен обращаться к методу <codeph class="+ topic/ph pr-d/codeph ">Security.allowDomain("~~")</codeph>, в котором указано, что источник локального SWF-файла неизвестен. (Если Интернет-файл SWF загружен с использованием адреса URL HTTPS, вместо этого интернет-файл SWF должен обращаться к методу <codeph class="+ topic/ph pr-d/codeph ">Security.allowInsecureDomain("~~")</codeph>.)</li></ul>
       
     <p class="- topic/p ">Иногда возникает следующая ситуация: выполняется загрузка дочерний SWF-файла из другого домена, и необходимо разрешить дочернему SWF-файлу выполнять сценарий в родительском SWF-файле, но при этом конечный домен дочернего SWF-файла неизвестен. Это может случиться, например, при использовании перенаправлений для балансировки нагрузки или серверов независимых производителей.</p>
     
     <p class="- topic/p ">В этой ситуации можно использовать свойство <codeph class="+ topic/ph pr-d/codeph ">url</codeph> объекта URLRequest, переданного в метод <codeph class="+ topic/ph pr-d/codeph ">Loader.load()</codeph>. Например, если загружен дочерний SWF-файл в родительский SWF-файл, можно получить доступ к свойству <codeph class="+ topic/ph pr-d/codeph ">contentLoaderInfo</codeph> объекта Loader для родительского SWF-файла: </p>
     <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">Security.allowDomain(loader.contentLoaderInfo.url)</codeblock>
     
     <p class="- topic/p ">Для получения правильного значения свойства <codeph class="+ topic/ph pr-d/codeph ">url</codeph> необходимо дождаться начала загрузки дочернего SWF-файла. Чтобы определить, когда началась загрузка дочернего SWF-файла, используйте событие <codeph class="+ topic/ph pr-d/codeph ">progress</codeph>.</p>
     
     <p class="- topic/p ">Кроме того, может возникнуть противоположная ситуация; то есть можно создать дочерний SWF-файл, в котором необходимо разрешить выполнение сценария родительским файлом, но при этом домен родительского файла неизвестен. В этой ситуации можно получить доступ к свойству <codeph class="+ topic/ph pr-d/codeph ">loaderInfo</codeph> экранного объекта, который является корневым объектом SWF-файла. В дочернем SWF-файле необходимо вызвать <codeph class="+ topic/ph pr-d/codeph "> Security.allowDomain( this.root.loaderInfo.loaderURL)</codeph>. Нет необходимости ждать загрузки родительского SWF-файла — он уже будет загружен к тому времени, когда будет проходить загрузка дочернего файла.</p>
     
     <p class="- topic/p ">При публикации для Flash Player 8 или более поздней версии можно также решить эти ситуации, вызвав <codeph class="+ topic/ph pr-d/codeph ">Security.allowDomain("~~")</codeph>. Однако это решение может быть опасным, поскольку при этом доступ к вызывающему SWF-файлу разрешается любому SWF-файлу из любого домена. Использование свойства <codeph class="+ topic/ph pr-d/codeph ">_url</codeph> является более безопасным.</p> 
     
     <p class="- topic/p "> Дополнительные сведения о безопасности см. в разделе центра разработчиков Flash Player <xref href="http://www.adobe.com/go/devnet_security_ru" scope="external" class="- topic/xref ">Безопасность</xref>.</p>
     
     </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.external.xml#ExternalInterface/addCallback()" class="- topic/link "><linktext class="- topic/linktext ">ExternalInterface.addCallback()</linktext></link><link href="flash.events.xml#Event/COMPLETE" class="- topic/link "><linktext class="- topic/linktext ">flash.events.Event.COMPLETE</linktext></link><link href="flash.display.xml#DisplayObject/parent" class="- topic/link "><linktext class="- topic/linktext ">flash.display.DisplayObject.parent</linktext></link><link href="flash.net.xml#URLRequest/url" class="- topic/link "><linktext class="- topic/linktext ">flash.net.URLRequest.url</linktext></link><link href="flash.system.xml#Security/allowInsecureDomain()" class="- topic/link "><linktext class="- topic/linktext ">allowInsecureDomain()</linktext></link></related-links></apiOperation><apiOperation id="flash.system:Security:allowInsecureDomain" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">allowInsecureDomain</apiName><shortdesc class="- topic/shortdesc ">
     Позволяет SWF- и HTML-файлам в определенных доменах обращаться к объектам и переменным в вызывающем SWF-файле, размещенном на сервере с использованием протокола HTTPS.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">Security, Security.allowInsecureDomain, allowInsecureDomain
      
      </keyword></asCustoms></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">При вызове этого метода из кода в изолированной среде безопасности приложения AIR выдается исключение SecurityError. Содержимое за пределами изолированной среды безопасности приложения не может выполнять перекрестные сценарии для находящегося в ней содержимого. 
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">SecurityError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">SecurityError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">domains</apiItemName><apiType value="restParam" name="type" class="- topic/state reference/state apiRef/apiType "/><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Одна или несколько строк, а также объектов URLRequest, указывающих домены, из которых требуется разрешить доступ. Можно указать особый домен «~~», чтобы разрешить доступ из всех доменов.  
     
     <p class="flashonly">Указание домена «~~» является единственным способом разрешения доступа к нелокальным SWF-файлам из локальных SWF-файлов, опубликованных с помощью инструмента разработки Adobe Flash с установленным для параметра «Безопасность локального воспроизведения» режимом «Предоставлен доступ только к сети» (Файл > Параметры публикации > вкладка Flash).</p>
     
     <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Примечание.</b> Подстановочное значение не поддерживается для субдоменов. Например, нельзя использовать значение <codeph class="+ topic/ph pr-d/codeph ">~~.foo.com</codeph> для параметра <codeph class="+ topic/ph pr-d/codeph ">domains</codeph>. Хотя субдомен можно указать с использованием подстановочного значения в файле междоменной политики (как в случае с <codeph class="+ topic/ph pr-d/codeph ">~~.foo.com</codeph>), это недопустимо для метода <codeph class="+ topic/ph pr-d/codeph ">allowDomain()</codeph>.</p>
     </apiDesc></apiParam><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Обеспечивает SWF- и HTML-файлам, принимаемым с помощью протокола HTTPS, доступ к объектам и переменным в вызывающем SWF-файле.
     
     </apiTipText></apiTipTexts></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     <ph class="- topic/ph ">Обеспечивает файлам SWF и HTML в указанных доменах доступ к объектам и переменным в вызывающем файле SWF, размещенном на сервере с использованием протокола HTTPS. </ph>
     
     
     
     
     <p class="- topic/p ">В проигрывателе Flash Player этот метод <codeph class="+ topic/ph pr-d/codeph ">allowInsecureDomain()</codeph> предусмотрен для увеличения гибкости, но вызывать его не рекомендуется. Размещение файлов с использованием HTTPS обеспечивает несколько факторов защиты для вас и ваших пользователей, а вызов метода <codeph class="+ topic/ph pr-d/codeph ">allowInsecureDomain</codeph> ослабляет один из этих факторов.</p>
     
     <p class="- topic/p "><i class="+ topic/ph hi-d/i ">Примечание.</i> При вызове этого метода из кода в изолированной среде безопасности приложения AIR порождается исключение SecurityError. Содержимое за пределами домена защиты приложения не может выполнять перекрестные сценарии для находящегося в ней содержимого. Однако содержимое, находящееся за пределами изолированной программной среды приложения, может обращаться к содержимому в этой среде с помощью так называемого моста.</p>
     
     <p class="- topic/p ">Этот метод работает так же, как и <codeph class="+ topic/ph pr-d/codeph ">Security.allowDomain()</codeph>, но, помимо этого, он позволяет выполнять операции, в которых вызываемая сторона загружается через протокол HTTPS, а вызывающая — нет. В Flash Player 7 и более поздних версиях файлам, загружаемым не через HTTPS, не разрешается выполнение перекрестных сценариев с файлами, загружаемым через HTTPS. Метод <codeph class="+ topic/ph pr-d/codeph ">allowInsecureDomain()</codeph> снимает это ограничение, когда его использует вызываемый SWF-файл с HTTPS.</p>
     
     <p class="- topic/p ">Используйте <codeph class="+ topic/ph pr-d/codeph ">allowInsecureDomain()</codeph> только для разрешения выполнения сценариев файлов без HTTPS для файлов с HTTPS. Используйте этот метод для разрешения сценариев, когда вызывающий файл без HTTPS и вызываемый файл с HTTPS находятся на одном домене, например, если SWF-файл с адресом http://mysite.com хочет выполнить сценарий для SWF-файла с адресом https://mysite.com. Не используйте этот метод для разрешения сценариев между файлами без HTTPS, между файлами с HTTPS, а также для выполнения сценариев файла с HTTPS для файла без HTTPS. В таких ситуациях следует использовать метод <codeph class="+ topic/ph pr-d/codeph ">allowDomain()</codeph>.</p>
     
     Следующий пример иллюстрирует, как метод <codeph class="+ topic/ph pr-d/codeph ">allowInsecureDomain()</codeph> может подвергнуть опасности защиту, если он используется без тщательного изучения.
     
     <p class="- topic/p ">Обратите внимание, что следующая информация является одним из возможных сценариев и предназначена для облегчения понимания метода <codeph class="+ topic/ph pr-d/codeph ">allowInsecureDomain()</codeph> с помощью наглядного примера перекрестного выполнения сценариев. Она не охватывает все вопросы, связанные с архитектурой безопасности, ее необходимо использовать только для справки. В центре разработки Flash Player содержится обширная информация о приложении Flash Player и безопасности. Дополнительные сведения см. в разделе центра разработки Flash Player <xref href="http://www.adobe.com/go/devnet_security_ru" scope="external" class="- topic/xref ">Безопасность</xref>.</p>
     
     <p class="- topic/p ">Предположим, выполняется построение web-сайта электронной коммерции, состоящего из двух компонентов: каталога, защита которого не требуется, поскольку в нем содержится только общедоступная информация; и компонента корзины для покупок или оформления, который должен быть защищенным для обеспечения безопасности финансовой и личной пользовательской информации. Предположим, рассматривается возможность обслуживания каталога с узла http://mysite.com/catalog.swf, а корзины — с узла https://mysite.com/cart.swf. Единственным требованием для web-сайта является обеспечение защиты, чтобы третья сторона не могла украсть номера пользовательских кредитных карт, воспользовавшись уязвимыми местами в архитектуре защиты.</p>
     
     <p class="- topic/p ">Предположим, злоумышленник вторгается в канал связи между серверами и пользователями, пытаясь украсть номера кредитных карт, которые пользователи указывают в приложении корзины для покупок. Злоумышленником может являться, например, недобросовестный пользователь, применяющий пакет программ, или нечестный администратор на пользовательском рабочем месте — любой человек, получающий возможность просматривать или изменять сетевые пакеты, переданные через Интернет по каналу между пользователем и сервером. Такая ситуация не является редкой.</p> 
     
     <p class="- topic/p ">Если в файле cart.swf для передачи сведений о кредитной карте на сервер используется протокол HTTPS, злоумышленник не может украсть эту информацию непосредственно из сетевых пакетов, поскольку передача HTTPS является зашифрованной. Однако злоумышленник может воспользоваться другим способом: изменить содержимое одного из SWF-файлов, например, который предоставляется пользователю, заменив существующий SWF-файл измененной версией, в которой выполняется передача пользовательской информации на другой сервер, владельцем которого является злоумышленник.</p>
     
     <p class="- topic/p ">Протокол HTTPS, помимо прочего, позволяет предотвратить подобное изменение, поскольку, кроме шифрования, передачи HTTPS защищены от несанкционированного доступа. Если злоумышленник изменяет пакет, получающая сторона обнаруживает изменение и отказывается от принятия пакета. Поэтому в данной ситуации злоумышленник не может изменить файл cart.swf, так как он доставляется по протоколу HTTPS.</p>
     
     <p class="- topic/p ">Однако предположим, что необходимо разрешить кнопки в файле catalog.swf, обслуживаемом по протоколу HTTP, для добавления элементов в корзину для покупок в файле cart.swf, обслуживаемом по протоколу HTTPS. Для этого в файле cart.swf вызывается метод <codeph class="+ topic/ph pr-d/codeph ">allowInsecureDomain()</codeph>, который позволяет файлу catalog.swf выполнять сценарий в файле cart.swf. Результат этого действия может быть непредвиденным: теперь злоумышленник может изменить файл catalog.swf при его первоначальной загрузке пользователем, поскольку файл catalog.swf передается по протоколу HTTP и не защищен от атак. Теперь злоумышленник, изменивший файл catalog.swf, может выполнять сценарий в файле script cart.swf, поскольку в файле cart.swf содержится вызов метода <codeph class="+ topic/ph pr-d/codeph ">allowInsecureDomain()</codeph>. В измененном файле catalog.swf можно использовать код ActionScript для доступа к переменным в файле cart.swf, что позволяет считывать пользовательскую информацию о кредитных картах и другие конфиденциальные данные. Затем измененный файл catalog.swf может передавать эти данные на сервер злоумышленника.</p>
     
     <p class="- topic/p ">Очевидно, что такая реализация является нежелательной, но пользователю по-прежнему необходимо разрешить перекрестное выполнение сценариев в двух SWF-файлах на web-сайте. Существует два способа доработки этого гипотетического сайта электронной коммерции без использования метода <codeph class="+ topic/ph pr-d/codeph ">allowInsecureDomain()</codeph>:</p>
     
     <ul class="- topic/ul "><li class="- topic/li ">Обслуживание всех SWF-файлов необходимо выполнять в приложении по протоколу HTTPS. Это явно наиболее простое и надежное решение. В описанном сценарии оба файла — catalog.swf и cart.swf — необходимо обслуживать по протоколу HTTPS. Слегка может увеличиться использование полосы пропускания и нагрузка на ЦП сервера при переключении в файле, например catalog.swf, протокола HTTP на протокол HTTPS, а на компьютерах пользователей может слегка увеличиться время загрузки приложений. Необходимо провести испытания на реальных серверах, чтобы определить степень важности этих эффектов; обычно увеличения происходят не более чем на 10-20%, а иногда они вовсе отсутствуют. Повысить эффективность можно с использованием на сервере оборудования или программ для ускорения при передаче по протоколу HTTPS. Основным преимуществом обслуживания всех взаимосвязанных SWF-файлов по протоколу HTTPS является то, что можно использовать указатель URL HTTPS в качестве основного URL-адреса в браузере без получения предупреждений о смешанном содержимом в браузере. Кроме того, в браузере становится видимым значок висячего замка, предоставляющего пользователям общие и доверенные индикаторы защиты.</li><li class="- topic/li ">Используйте выполнение сценариев из HTTPS в HTTP вместо из HTTP в HTTPS. В описанном сценарии содержимое пользовательской корзины для покупок можно сохранить в файле catalog.swf, а в файле cart.swf только управлять процессом расчета. Во время расчета файл cart.swf может получать содержимое корзины из переменных ActionScript в файле catalog.swf. Ограничением выполнения сценариев из HTTP в HTTPS является асимметричность; несмотря на то, что в файле catalog.swf, доставленном по протоколу HTTP, нельзя безопасно разрешить выполнение сценария в файле cart.swf, доставленном по протоколу HTTPS, файл cart.swf HTTPS может выполнять сценарии в файле catalog.swf HTTP. Этот подход является не настолько простым, как подход, при котором все файлы передаются по протоколу HTTPS; необходимо проявлять осторожность и не доверять всем SWF-файлам, полученным по протоколу HTTP, поскольку они подвержены несанкционированному доступу. Например, когда файл cart.swf получает переменную ActionScript, в которой описано содержимое корзины, код ActionScript в файле cart.swf не может доверять данному значению переменной, даже если она получена в ожидаемом формате. Необходимо убедиться, что в содержимом корзины отсутствуют недопустимые данные, которые приведут к тому, что в файле cart.swf будет предпринято нежелательное действие. Необходимо также учитывать риск, что злоумышленник, изменив файл catalog.swf, может предоставить действительные, но неточные данные в файле cart.swf (например путем замены элементов в пользовательской корзине). Принятый процесс оформления покупок в некоторой степени позволяет устранить риск путем отображения содержимого тележки и общей стоимости покупок для окончательного одобрения пользователем, но риск все равно существует.</li></ul>
     
     <p class="- topic/p ">В web-браузерах на протяжении многих лет вводится вынужденное разделение файлов HTTPS и отличных от HTTPS, и в приведенных сценариях описана одна из веских причин для такого ограничения. В приложении Flash Player доступна возможность устранения этого ограничения безопасности, но перед выполнением этого действия необходимо иметь полное понимание последствий.</p>
     
     <p class="- topic/p ">Дополнительные сведения о безопасности см. в разделе центра разработчиков Flash Player <xref href="http://www.adobe.com/go/devnet_security_ru" scope="external" class="- topic/xref ">Безопасность</xref>.</p>
     
     </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.system.xml#Security/allowDomain()" class="- topic/link "><linktext class="- topic/linktext ">allowDomain()</linktext></link></related-links></apiOperation><apiOperation id="flash.system:Security:loadPolicyFile" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">loadPolicyFile</apiName><shortdesc class="- topic/shortdesc ">  
     Поиск файла политик в каталоге, заданном параметром url.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">url</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">URL-адрес загружаемого файла политики.
     </apiDesc></apiParam><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Поиск файла политик в каталоге, заданном параметром url.
     
     </apiTipText></apiTipTexts></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">  
     Поиск файла политик в каталоге, заданном параметром <codeph class="+ topic/ph pr-d/codeph ">url</codeph>. Приложение Adobe AIR и проигрыватель Flash Player используют файлы политик, чтобы определить, можно ли разрешать приложениям загружать данные с других серверов, кроме того, на котором они находятся. Обратите внимание, что несмотря на то, что метод называется <codeph class="+ topic/ph pr-d/codeph "> loadPolicyFile()</codeph>, фактическая загрузка файла обычно не выполняется до получения сетевого запроса, который должен быть передан файлом политик.
     
	 <p class="- topic/p ">С помощью метода <codeph class="+ topic/ph pr-d/codeph ">Security.loadPolicyFile()</codeph> проигрыватель Flash Player или приложение AIR может загружать файлы политик из произвольно выбранных местоположений, как это показано в следующем примере.</p>
     
     <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
     Security.loadPolicyFile("http://www.example.com/sub/dir/pf.xml");
     </codeblock>
     
     
     
     <p class="- topic/p ">При этом проигрывателю Flash Player или приложению AIR предписывается извлечь файл политики по указанному URL-адресу. Любые разрешения, выдаваемые файлом политики, расположенном в определенном каталоге, будут действовать применительно ко всему содержимому, находящемуся на том же уровне или ниже в виртуальной иерархии каталогов данного сервера. </p>
     
     <p class="- topic/p ">Например, в предыдущем коде не выдают исключение следующие строки:</p>
     
     <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock "> import flash.net.~~;
     var request:URLRequest = new URLRequest("http://www.example.com/sub/dir/vars.txt");
     var loader:URLLoader = new URLLoader();
     loader.load(request);
     
     var loader2:URLLoader = new URLLoader();
     var request2:URLRequest = new URLRequest("http://www.example.com/sub/dir/deep/vars2.txt");
     loader2.load(request2);
     </codeblock>
     
     <p class="- topic/p ">Однако следующий код выдает исключение по безопасности:</p>
     
     <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock "> import flash.net.~~;
     var request3:URLRequest = new URLRequest("http://www.example.com/elsewhere/vars3.txt");
     var loader3:URLLoader = new URLLoader();
     loader3.load(request3);
     </codeblock>
     
     <p class="- topic/p ">Используя метод <codeph class="+ topic/ph pr-d/codeph ">loadPolicyFile()</codeph>, можно загрузить любое число файлов политик. Обрабатывая запрос, требующий использования файла политики, Flash Player или AIR всегда ждет завершения загрузок всех файлов политик, прежде чем отклонить этот запрос. В качестве последнего действия, если авторизующий запрос файл политики не указан с помощью метода <codeph class="+ topic/ph pr-d/codeph ">loadPolicyFile()</codeph>, проигрыватель Flash Player или приложение AIR обращается в исходные местоположения по умолчанию.</p>
     
     <p class="- topic/p ">Проверяя основной файл политики, проигрыватель Flash Player ожидает ответа сервера в течение трех секунд. Если ответ не получен, Flash Player делает вывод, что основной файл политики не существует. Однако для вызова метода <codeph class="+ topic/ph pr-d/codeph ">loadPolicyFile()</codeph> нет тайм-аута по умолчанию; проигрыватель Flash Player предполагает, что вызываемый файл существует и ожидает загрузки в течение неопределенного времени. Поэтому для гарантированной загрузки основного файла политики необходимо вызвать метод <codeph class="+ topic/ph pr-d/codeph ">loadPolicyFile()</codeph>.</p>
     
     <p class="- topic/p ">Нельзя подключаться к общепринятым зарезервированным портам. Полный список заблокированных портов см. в разделе «Ограничение API-интерфейсов сетевого подключения» в руководстве <i class="+ topic/ph hi-d/i ">ActionScript 3.0 Developer's Guide</i> (руководстве разработчика по ActionScript 3.0).</p>
     
     <p class="- topic/p ">Использование протокола <codeph class="+ topic/ph pr-d/codeph ">xmlsocket</codeph> вместе с определенным номером порта позволяет извлекать файл политики непосредственно с сервера XMLSocket, как показано в следующем примере. Описанное выше ограничение не распространяется на подключения через сокеты.</p>
     
     <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
     Security.loadPolicyFile("xmlsocket://foo.com:414");
     </codeblock>
     
     
     
     <p class="- topic/p ">Это вызывает попытку проигрывателя Flash Player или приложения AIR получить файл политики из указанного хоста и порта. После того как соединение с указанным портом установлено, проигрыватель Flash Player или приложение AIR передает <codeph class="+ topic/ph pr-d/codeph ">&lt;policy-file-request /></codeph>, прерываемый байтом со значением <codeph class="+ topic/ph pr-d/codeph ">null</codeph>. Сервер должен отправить байт null, чтобы прервать передачу файла политики, а после этого может закрыть соединение; если сервер не закроет соединение, это сделает проигрыватель Flash Player или приложение AIR после получения прерывающего байта <codeph class="+ topic/ph pr-d/codeph ">null</codeph>.</p>
     
     <p class="- topic/p ">Можно запретить использование SWF-файлом этого метода путем установки параметра <codeph class="+ topic/ph pr-d/codeph ">allowNetworking</codeph> для тегов <codeph class="+ topic/ph pr-d/codeph ">object</codeph> и <codeph class="+ topic/ph pr-d/codeph ">embed</codeph> на странице HTML, содержащей SWF-содержимое.</p>
     
     <p class="- topic/p ">Дополнительные сведения о безопасности см. в разделе центра разработчиков Flash Player <xref href="http://www.adobe.com/go/devnet_security_ru" scope="external" class="- topic/xref ">Безопасность</xref>.</p>
     
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.system:Security:showSettings" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">showSettings</apiName><shortdesc class="- topic/shortdesc ">
     Отображает панель параметров безопасности в проигрывателе Flash Player.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">Security, Security.showSettings(), showSettings()
      
      </keyword></asCustoms></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">panel</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">default</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Значение из класса SecurityPanel, указывающее, какую панель параметров конфиденциальности требуется отображать. Если этот параметр пропущен, используется <codeph class="+ topic/ph pr-d/codeph ">SecurityPanel.DEFAULT</codeph>. 
     
     </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Отображает панель параметров безопасности в проигрывателе Flash Player. Этот метод не применяется к содержимому в Adobe AIR; его вызов в приложении AIR игнорируется.
     
     </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.system.xml#SecurityPanel" class="- topic/link "><linktext class="- topic/linktext ">SecurityPanel</linktext></link></related-links></apiOperation><apiValue id="flash.system:Security:APPLICATION" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">APPLICATION</apiName><shortdesc class="- topic/shortdesc ">
	 Файл работает в приложении AIR и был установлен с пакетом (файлом AIR) для этого приложения.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">application</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Файл работает в приложении AIR и был установлен с пакетом (файлом AIR) для этого приложения. Это содержимое включено в каталог ресурсов приложения AIR (в котором установлено содержимое приложения).
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.system.xml#Security/sandboxType" class="- topic/link "><linktext class="- topic/linktext ">sandboxType</linktext></link><link href="flash.system.xml#Security/REMOTE" class="- topic/link "><linktext class="- topic/linktext ">REMOTE</linktext></link><link href="flash.system.xml#Security/LOCAL_WITH_FILE" class="- topic/link "><linktext class="- topic/linktext ">LOCAL_WITH_FILE</linktext></link><link href="flash.system.xml#Security/LOCAL_WITH_NETWORK" class="- topic/link "><linktext class="- topic/linktext ">LOCAL_WITH_NETWORK</linktext></link><link href="flash.system.xml#Security/LOCAL_TRUSTED" class="- topic/link "><linktext class="- topic/linktext ">LOCAL_TRUSTED</linktext></link></related-links></apiValue><apiValue id="flash.system:Security:LOCAL_TRUSTED" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">LOCAL_TRUSTED</apiName><shortdesc class="- topic/shortdesc ">
     Файл является локальным файлом, который указан в качестве доверенного с помощью диспетчера настроек проигрывателя Flash Player или файла конфигурации FlashPlayerTrust.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><refpath>
      
      </refpath></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">localTrusted</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Файл является локальным файлом, который указан в качестве доверенного с помощью диспетчера настроек проигрывателя Flash Player или файла конфигурации FlashPlayerTrust. Файл может считывать информацию из локальных источников данных и обмениваться данными через Интернет.
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.system.xml#Security/sandboxType" class="- topic/link "><linktext class="- topic/linktext ">sandboxType</linktext></link><link href="flash.system.xml#Security/REMOTE" class="- topic/link "><linktext class="- topic/linktext ">REMOTE</linktext></link><link href="flash.system.xml#Security/LOCAL_WITH_FILE" class="- topic/link "><linktext class="- topic/linktext ">LOCAL_WITH_FILE</linktext></link><link href="flash.system.xml#Security/LOCAL_WITH_NETWORK" class="- topic/link "><linktext class="- topic/linktext ">LOCAL_WITH_NETWORK</linktext></link><link href="flash.system.xml#Security/APPLICATION" class="- topic/link "><linktext class="- topic/linktext ">APPLICATION</linktext></link></related-links></apiValue><apiValue id="flash.system:Security:LOCAL_WITH_FILE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">LOCAL_WITH_FILE</apiName><shortdesc class="- topic/shortdesc ">
     Файл является локальным файлом, не является доверенным для пользователя и не публиковался с сетевым наименованием.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><refpath>
      
      </refpath></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">localWithFile</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Файл является локальным файлом, не является доверенным для пользователя и не публиковался с сетевым наименованием. В Adobe AIR локальный файл <i class="+ topic/ph hi-d/i ">не</i> находится в каталоге ресурсов приложения. Такие файлы помещаются в изолированную программную среду безопасности приложения. Файл может считывать информацию из локальных источников данных, но не может обмениваться данными через Интернет.
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.system.xml#Security/sandboxType" class="- topic/link "><linktext class="- topic/linktext ">sandboxType</linktext></link><link href="flash.system.xml#Security/REMOTE" class="- topic/link "><linktext class="- topic/linktext ">REMOTE</linktext></link><link href="flash.system.xml#Security/LOCAL_WITH_NETWORK" class="- topic/link "><linktext class="- topic/linktext ">LOCAL_WITH_NETWORK</linktext></link><link href="flash.system.xml#Security/LOCAL_TRUSTED" class="- topic/link "><linktext class="- topic/linktext ">LOCAL_TRUSTED</linktext></link><link href="flash.system.xml#Security/APPLICATION" class="- topic/link "><linktext class="- topic/linktext ">APPLICATION</linktext></link></related-links></apiValue><apiValue id="flash.system:Security:LOCAL_WITH_NETWORK" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">LOCAL_WITH_NETWORK</apiName><shortdesc class="- topic/shortdesc ">
	 Файл является локальным SWF-файлом, не является доверенным для пользователя и публиковался с сетевым наименованием.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><refpath>
      
      </refpath></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">localWithNetwork</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Файл является локальным SWF-файлом, не является доверенным для пользователя и публиковался с сетевым наименованием. Файл может обмениваться данными через Интернет, но не может считывать информацию из локальных источников данных.
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.system.xml#Security/sandboxType" class="- topic/link "><linktext class="- topic/linktext ">sandboxType</linktext></link><link href="flash.system.xml#Security/REMOTE" class="- topic/link "><linktext class="- topic/linktext ">REMOTE</linktext></link><link href="flash.system.xml#Security/LOCAL_WITH_FILE" class="- topic/link "><linktext class="- topic/linktext ">LOCAL_WITH_FILE</linktext></link><link href="flash.system.xml#Security/LOCAL_TRUSTED" class="- topic/link "><linktext class="- topic/linktext ">LOCAL_TRUSTED</linktext></link><link href="flash.system.xml#Security/APPLICATION" class="- topic/link "><linktext class="- topic/linktext ">APPLICATION</linktext></link></related-links></apiValue><apiValue id="flash.system:Security:REMOTE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">REMOTE</apiName><shortdesc class="- topic/shortdesc ">
     Файл взят с URL-адреса в Интернете и работает в соответствии с правилами изолированной программной среды на основе домена.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><refpath>
      
      </refpath></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">remote</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Файл взят с URL-адреса в Интернете и работает в соответствии с правилами изолированной программной среды на основе домена.
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.system.xml#Security/sandboxType" class="- topic/link "><linktext class="- topic/linktext ">sandboxType</linktext></link><link href="flash.system.xml#Security/LOCAL_WITH_FILE" class="- topic/link "><linktext class="- topic/linktext ">LOCAL_WITH_FILE</linktext></link><link href="flash.system.xml#Security/LOCAL_WITH_NETWORK" class="- topic/link "><linktext class="- topic/linktext ">LOCAL_WITH_NETWORK</linktext></link><link href="flash.system.xml#Security/LOCAL_TRUSTED" class="- topic/link "><linktext class="- topic/linktext ">LOCAL_TRUSTED</linktext></link><link href="flash.system.xml#Security/APPLICATION" class="- topic/link "><linktext class="- topic/linktext ">APPLICATION</linktext></link></related-links></apiValue><apiValue id="flash.system:Security:exactSettings:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">exactSettings</apiName><shortdesc class="- topic/shortdesc ">
     Определяет, каким образом проигрыватель Flash Player или приложение AIR выбирает домен для работы с такими параметрами Flash Player, как разрешения на доступ к камере и микрофону, квоты хранилища, а также параметры хранения постоянных общих объектов.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">Security, Security.exactSettings, exactSettings
      
      </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Проигрыватель Flash Player или приложение AIR уже использовало значение <codeph class="+ topic/ph pr-d/codeph ">exactSettings</codeph>, по крайней мере однажды, когда принималось решение о параметрах проигрывателя.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">SecurityError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">SecurityError</apiOperationClassifier></apiException></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Определяет, каким образом проигрыватель Flash Player или приложение AIR выбирает домен для работы с такими параметрами Flash Player, как разрешения на доступ к камере и микрофону, квоты хранилища, а также параметры хранения постоянных общих объектов. Чтобы в SWF-файле использовались настройки, аналогичные тем, которые использовались в приложении Flash Player 6, задайте для <codeph class="+ topic/ph pr-d/codeph ">exactSettings</codeph> значение <codeph class="+ topic/ph pr-d/codeph ">false</codeph>.
     
     
     
     <p class="- topic/p ">В Flash Player 6 домен, используемый для этих параметров проигрывателя, выбирался исходя из конечной порции домена SWF-файла. Если домен SWF-файла включает больше двух сегментов, например www.example.com, первый сегмент домена (www) удаляется, и используется оставшаяся часть домена: example.com. Так, в Flash Player 6 и www.example.com и store.example.com используют example.com в качестве домена для этих параметров. Подобным образом, и www.example.co.uk и store.example.co.uk используют example.co.uk в качестве домена для параметров. В Flash Player 7 и более поздних версиях параметры проигрывателя по умолчанию выбираются в соответствии с точным доменом SWF- файла. Например SWF-файл с www.example.com будет использовать параметры проигрывателя для www.example.com, а SWF-файл с store.example.com — отдельные параметры для store.example.com.</p>
     
     <p class="- topic/p ">Когда <codeph class="+ topic/ph pr-d/codeph ">Security.exactSettings</codeph> имеет значение <codeph class="+ topic/ph pr-d/codeph ">true</codeph>, Flash Player ли AIR использует точные домены для параметров проигрывателя. По умолчанию <codeph class="+ topic/ph pr-d/codeph ">exactSettings</codeph> имеет значение <codeph class="+ topic/ph pr-d/codeph ">true</codeph>. Изменение значения по умолчанию свойства <codeph class="+ topic/ph pr-d/codeph ">exactSettings</codeph> необходимо выполнить до появления событий, требующих выбора параметров проигрывателя Flash Player или AIR, таких как использование камеры или микрофона или получение постоянного общего объекта.</p>
     
     <p class="- topic/p ">Если ранее был опубликован SWF-файл версии 6, из которого были созданы постоянные общие объекты, и теперь эти объекты необходимо получить из этого SWF-файла после перехода к версии 7 или более поздней или из другого SWF-версии 7 или более поздней, необходимо задать для <codeph class="+ topic/ph pr-d/codeph ">Security.exactSettings</codeph> значение <codeph class="+ topic/ph pr-d/codeph ">false</codeph> перед вызовом метода <codeph class="+ topic/ph pr-d/codeph ">SharedObject.getLocal()</codeph>.</p>
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.system:Security:pageDomain:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">pageDomain</apiName><shortdesc class="- topic/shortdesc ">
     Получает домен страницы, содержащей swf.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.3" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2.7" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Получает домен страницы, содержащей swf. Из соображений безопасности метод не возвращает полный URL-адрес, а возвращает только домен страницы, например http://www.example.com. 
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.system:Security:sandboxType:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">sandboxType</apiName><shortdesc class="- topic/shortdesc ">
     Показывает тип изолированной программной среды безопасности, в которой работает вызывающий файл.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Показывает тип изолированной программной среды безопасности, в которой работает вызывающий файл.
     
     <p class="- topic/p ">Для <codeph class="+ topic/ph pr-d/codeph ">Security.sandboxType</codeph> можно устанавливать одно из следующих значений.</p>
     
     <ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">remote</codeph> (<codeph class="+ topic/ph pr-d/codeph ">Security.REMOTE</codeph>): этот файл загружается с URL-адреса в Интернете и используется в соответствии с правилами изолированной программной среды на основе домена.</li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">localWithFile</codeph> (<codeph class="+ topic/ph pr-d/codeph ">Security.LOCAL_WITH_FILE</codeph>): этот файл является локальным файлом, не является доверенным для пользователя и не публиковался с сетевым наименованием. Файл может считывать информацию из локальных источников данных, но не может обмениваться данными через Интернет.</li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">localWithNetwork</codeph> (<codeph class="+ topic/ph pr-d/codeph ">Security.LOCAL_WITH_NETWORK</codeph>): этот SWF-файл является локальным файлом, не является доверенным для пользователя и публиковался с сетевым наименованием. SWF-файл может обмениваться данными через Интернет, но не может считывать информацию из локальных источников данных.</li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">localTrusted</codeph> (<codeph class="+ topic/ph pr-d/codeph ">Security.LOCAL_TRUSTED</codeph>): этот SWF-файл является локальным файлом, пользователь сделал его доверенным с помощью диспетчера настроек проигрывателя Flash Player или файла конфигурации FlashPlayerTrust. Файл может считывать информацию из локальных источников данных и обмениваться данными через Интернет.</li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">application</codeph> (<codeph class="+ topic/ph pr-d/codeph ">Security.APPLICATION</codeph>): файл работает в приложении AIR и был установлен с пакетом (файлом AIR) для этого приложения. По умолчанию файлы в изолированной программной среде безопасности приложения AIR могут выполнять перекрестные сценарии с любым файлом из любого домена (в то время как файлы за ее пределами могут не иметь разрешения на выполнение перекрестных сценариев с файлом AIR). По умолчанию файлы в изолированной программной среде безопасности приложения AIR могут загружать содержимое и данные из любого домена. </li></ul>
     
     <p class="- topic/p ">Дополнительные сведения о безопасности см. в разделе центра разработчиков Flash Player <xref href="http://www.adobe.com/go/devnet_security_ru" scope="external" class="- topic/xref ">Безопасность</xref>.</p>
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.system.xml#Security/REMOTE" class="- topic/link "><linktext class="- topic/linktext ">REMOTE</linktext></link><link href="flash.system.xml#Security/LOCAL_WITH_FILE" class="- topic/link "><linktext class="- topic/linktext ">LOCAL_WITH_FILE</linktext></link><link href="flash.system.xml#Security/LOCAL_WITH_NETWORK" class="- topic/link "><linktext class="- topic/linktext ">LOCAL_WITH_NETWORK</linktext></link><link href="flash.system.xml#Security/LOCAL_TRUSTED" class="- topic/link "><linktext class="- topic/linktext ">LOCAL_TRUSTED</linktext></link><link href="flash.system.xml#Security/APPLICATION" class="- topic/link "><linktext class="- topic/linktext ">APPLICATION</linktext></link></related-links></apiValue></apiClassifier><apiClassifier languages="" id="flash.system:LoaderContext" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">LoaderContext</apiName><shortdesc class="- topic/shortdesc ">
 Класс LoaderContext передает параметры для загрузки SWF-файлов и другого мультимедийного содержимого с помощью класса Loader.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Класс LoaderContext передает параметры для загрузки SWF-файлов и другого мультимедийного содержимого с помощью класса Loader. Класс LoaderContext используется в качестве параметра <codeph class="+ topic/ph pr-d/codeph ">context</codeph> в методах <codeph class="+ topic/ph pr-d/codeph ">load()</codeph> и <codeph class="+ topic/ph pr-d/codeph ">loadBytes()</codeph> класса Loader.
 
 <p class="- topic/p ">Если SWF-файлы загружаются с помощью метода <codeph class="+ topic/ph pr-d/codeph ">Loader.load()</codeph>, необходимо принять два решения: в какой домен защиты должен быть помещен загружаемый SWF-файл, а также в какой домен приложения в этом домене защиты? Дополнительные сведения об этом см. в информации по свойствам <codeph class="+ topic/ph pr-d/codeph ">applicationDomain</codeph> и <codeph class="+ topic/ph pr-d/codeph ">securityDomain</codeph>.</p>
 
 <p class="- topic/p ">Если загружается SWF-файл с помощью метода <codeph class="+ topic/ph pr-d/codeph ">Loader.loadBytes()</codeph>, также необходимо выбрать домен приложения как и при использовании метода <codeph class="+ topic/ph pr-d/codeph ">Loader.load()</codeph>. Но нет необходимости указывать домен защиты, поскольку <codeph class="+ topic/ph pr-d/codeph ">Loader.loadBytes()</codeph> всегда помещает загруженный SWF-файл в предназначенный для него домен защиты.</p>
 
 <p class="- topic/p ">Если вместо SWF-файлов загружаются изображения (JPEG, GIF или PNG), то не требуется указывать ни домен защиты, ни домен безопасности, поскольку эти понятия имеют смысл только применительно к SWF-файлам. Необходимо принять всего одно решение: требуется ли программный доступ к растровому представлению загруженного изображения? Если да, см. свойство <codeph class="+ topic/ph pr-d/codeph ">checkPolicyFile</codeph>. Если при загрузке изображения необходимо применить подавление блочности, используйте класс JPEGLoaderContext вместо класса LoaderContext.</p>
 
 </apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.display.xml#Loader/load()" class="- topic/link "><linktext class="- topic/linktext ">flash.display.Loader.load()</linktext></link><link href="flash.display.xml#Loader/loadBytes()" class="- topic/link "><linktext class="- topic/linktext ">flash.display.Loader.loadBytes()</linktext></link><link href="flash.system.xml#ApplicationDomain" class="- topic/link "><linktext class="- topic/linktext ">flash.system.ApplicationDomain</linktext></link><link href="flash.system.xml#JPEGLoaderContext" class="- topic/link "><linktext class="- topic/linktext ">flash.system.JPEGLoaderContext</linktext></link><link href="flash.system.xml#LoaderContext/applicationDomain" class="- topic/link "><linktext class="- topic/linktext ">flash.system.LoaderContext.applicationDomain</linktext></link><link href="flash.system.xml#LoaderContext/checkPolicyFile" class="- topic/link "><linktext class="- topic/linktext ">flash.system.LoaderContext.checkPolicyFile</linktext></link><link href="flash.system.xml#LoaderContext/securityDomain" class="- topic/link "><linktext class="- topic/linktext ">flash.system.LoaderContext.securityDomain</linktext></link><link href="flash.system.xml#SecurityDomain" class="- topic/link "><linktext class="- topic/linktext ">flash.system.SecurityDomain</linktext></link><link href="flash.system.xml#ImageDecodingPolicy" class="- topic/link "><linktext class="- topic/linktext ">flash.system. ImageDecodingPolicy</linktext></link></related-links><apiConstructor id="flash.system:LoaderContext:LoaderContext" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">LoaderContext</apiName><shortdesc class="- topic/shortdesc ">
     Создает новый объект LoaderContext с заданными параметрами.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">checkPolicyFile</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Указывает необходимость проверки существования файла политики для URL-адреса перед загрузкой объекта.
     
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">applicationDomain</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.system:ApplicationDomain</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Указывает, какой объект ApplicationDomain следует использовать для объекта Loader.
     
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">securityDomain</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.system:SecurityDomain</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Указывает, какой объект SecurityDomain следует использовать для объекта Loader.
     
     <p class="- topic/p "><i class="+ topic/ph hi-d/i ">Примечание.</i> Содержимое в изолированной среде безопасности приложения AIR не может загружать содержимое из других изолированных программных сред в свой SecurityDomain.</p>
     
     </apiDesc></apiParam></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Создает новый объект LoaderContext с заданными параметрами. Дополнительные сведения об этих параметрах см. в описаниях свойств этого класса.
     
     </apiDesc></apiConstructorDetail><related-links class="- topic/related-links "><link href="flash.display.xml#Loader/load()" class="- topic/link "><linktext class="- topic/linktext ">flash.display.Loader.load()</linktext></link><link href="flash.display.xml#Loader/loadBytes()" class="- topic/link "><linktext class="- topic/linktext ">flash.display.Loader.loadBytes()</linktext></link><link href="flash.system.xml#ApplicationDomain" class="- topic/link "><linktext class="- topic/linktext ">flash.system.ApplicationDomain</linktext></link><link href="flash.system.xml#SecurityDomain" class="- topic/link "><linktext class="- topic/linktext ">flash.system.SecurityDomain</linktext></link></related-links></apiConstructor><apiValue id="flash.system:LoaderContext:allowCodeImport" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">allowCodeImport</apiName><shortdesc class="- topic/shortdesc ">
     Указывает, можно ли использовать объект Loader для импорта содержимого с исполняемым кодом, например SWF-файла, в изолированную среду безопасности вызывающего приложения.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Указывает, можно ли использовать объект <codeph class="+ topic/ph pr-d/codeph ">Loader</codeph> для импорта содержимого с исполняемым кодом, например SWF-файла, в изолированную среду безопасности вызывающего приложения. Существует две затрагиваемые операции импорта: метод <codeph class="+ topic/ph pr-d/codeph ">Loader.loadBytes()</codeph> и метод <codeph class="+ topic/ph pr-d/codeph ">Loader.load()</codeph> с параметром <codeph class="+ topic/ph pr-d/codeph ">LoaderContext.securityDomain = SecurityDomain.currentDomain</codeph>. (Вторая операция не поддерживается в изолированной программной среде приложения AIR.) Когда свойство <codeph class="+ topic/ph pr-d/codeph ">allowCodeImport</codeph> имеет значение <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, допускаются только безопасные операции импорта, такие как загрузка изображений. Значение этого свойства не влияет на обычную загрузку SWF-файла (без импорта) с помощью метода <codeph class="+ topic/ph pr-d/codeph ">Loader.load()</codeph>.
     
     <p class="- topic/p ">Это свойство полезно, когда требуется импортировать изображения в изолированную среду безопасности (например, когда требуется скопировать или обработать изображение из другого домена), но желательно избежать риска для безопасности, связанного с получением SWF-файла, если ожидается только графический файл. Так как SWF-файлы могут содержать код ActionScript, импорт SWF-файла представляет намного больше риска, чем импорт файла изображения.</p>
     
     <p class="- topic/p ">Для содержимого в изолированной программной среде безопасности приложения AIR значением по умолчанию является <codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Для всего содержимого, кроме самого приложения (то есть для всего содержимого во Flash Player) по умолчанию используется значение <codeph class="+ topic/ph pr-d/codeph ">true</codeph>.</p>
     
     <p class="- topic/p ">Примечание. Свойство <codeph class="+ topic/ph pr-d/codeph ">allowCodeImport</codeph> впервые добавлено в версии Flash Player 10.1 и AIR 2.0. Однако оно доступно для файлов SWF и приложений Air, созданных во всех версиях, если его поддерживает сред выполнения Flash.</p>
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#Loader/loadBytes()" class="- topic/link "><linktext class="- topic/linktext ">flash.display.Loader.loadBytes()</linktext></link><link href="flash.display.xml#Loader/load()" class="- topic/link "><linktext class="- topic/linktext ">flash.display.Loader.load()</linktext></link><link href="flash.system.xml#LoaderContext/securityDomain" class="- topic/link "><linktext class="- topic/linktext ">securityDomain</linktext></link></related-links></apiValue><apiValue id="flash.system:LoaderContext:applicationDomain" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">applicationDomain</apiName><shortdesc class="- topic/shortdesc ">
     Указывает домен приложения для использования в методе Loader.load() или Loader.loadBytes().</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.system:ApplicationDomain</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Указывает домен приложения для использования в методе <codeph class="+ topic/ph pr-d/codeph ">Loader.load()</codeph> или <codeph class="+ topic/ph pr-d/codeph ">Loader.loadBytes()</codeph>. Используйте это свойство только при загрузке SWF-файлов, записанных на ActionScript 3.0 (но не изображений и не SWF-файлов, записанных на ActionScript 1.0 или ActionScript 2.0).
     
     <p class="- topic/p ">Каждый домен защиты содержит один или несколько доменов приложений, представленных объектами ApplicationDomain. Домены приложений создаются не в целях защиты; они предназначены для совместного использования объектов программного кода ActionScript. Если загрузка SWF-файла выполняется из другого домена, и его разрешено размещать в отдельном домене защиты, то управлять выбором домена приложений для размещения загружаемого SWF-файла нельзя; и даже если указать какой-либо домен приложений, это будет игнорироваться. Однако, если выполняется загрузка SWF-файла в собственный домен защиты (либо потому, что SWF-файл получен из собственного домена, либо потому, что в него выполняется импорт), то можно управлять выбором домена приложений для загружаемого SWF-файла.</p>
     
     <p class="- topic/p ">В <codeph class="+ topic/ph pr-d/codeph ">LoaderContext.applicationDomain</codeph> можно указывать домен приложения только из собственного домена защиты. Попытка указать домен приложения из какого-либо другого домена защиты приводит к исключению <codeph class="+ topic/ph pr-d/codeph ">SecurityError</codeph>.</p>
     
     <p class="- topic/p ">Существует четыре возможных варианта для выбора свойства <codeph class="+ topic/ph pr-d/codeph ">ApplicationDomain</codeph>.</p>
     
     <ul class="- topic/ul "><li class="- topic/li "><b class="+ topic/ph hi-d/b ">Дочерний домен по отношению к ApplicationDomain объекта Loader. </b> По умолчанию. Можно явным образом сделать этот выбор, используя синтаксис <codeph class="+ topic/ph pr-d/codeph ">new ApplicationDomain(ApplicationDomain.currentDomain)</codeph>. Это позволяет загружаемому SWF-файлу напрямую использовать классы родительского домена, например, используя синтаксис <codeph class="+ topic/ph pr-d/codeph ">new MyClassDefinedInParent()</codeph>. Родительский домен, однако, не может использовать этот синтаксис; если ему требуется использовать классы дочернего домена, необходимо вызывать <codeph class="+ topic/ph pr-d/codeph ">ApplicationDomain.getDefinition()</codeph> для их извлечения. Преимущество такого выбора состоит в том, что если в дочернем домене определяется класс с тем же именем, что у класса, уже определенного в родительском домене, то ошибок не происходит; дочерний домен просто наследует определение такого класса из родительского домена, а конфликтное определение дочернего домена не используется до тех пор, пока либо дочерний, либо родительский домен не вызовет метод <codeph class="+ topic/ph pr-d/codeph ">ApplicationDomain.getDefinition()</codeph> для его извлечения.</li><li class="- topic/li "><b class="+ topic/ph hi-d/b ">ApplicationDomain принадлежит объекту Loader. </b> Этот домен приложения используется при выполнении <codeph class="+ topic/ph pr-d/codeph ">ApplicationDomain.currentDomain</codeph>. Когда загрузка завершена, родительский и дочерний домены могут использовать классы друг друга напрямую. Если выполняется попытка определить в дочернем объекте класс с тем же именем, что и класс, уже определенный в родительском домене, то используется класс родительского домена, а класс дочернего домена игнорируется.</li><li class="- topic/li "><b class="+ topic/ph hi-d/b ">Дочерний домен системного ApplicationDomain. </b> Этот домен приложения используется при выполнении <codeph class="+ topic/ph pr-d/codeph ">new ApplicationDomain(null)</codeph>. Это полностью разделяет загружающий и загружаемый домены, позволяя им определять отдельные версии классов с одинаковым именем без конфликтов и пересечений. Единственным способом, которым каждая из сторон может видеть классы другой стороны, является вызов метода <codeph class="+ topic/ph pr-d/codeph ">ApplicationDomain.getDefinition()</codeph>.</li><li class="- topic/li "><b class="+ topic/ph hi-d/b ">Дочерний домен какого-то другого ApplicationDomain. </b> Иногда могут возникать более сложные иерархии доменов приложений. Можно загружать SWF-файл в любой домен приложения своего собственного домена защиты. Например, при выполнении <codeph class="+ topic/ph pr-d/codeph ">new ApplicationDomain(ApplicationDomain.currentDomain.parentDomain.parentDomain)</codeph> SWF-файл загружается в новый дочерний домен по отношению к родительскому домену родительского домена текущего домена.</li></ul>
     
     <p class="- topic/p ">Когда загрузка завершается, каждой из сторон (загружающей и загружаемой) может потребоваться выполнить поиск собственного ApplicationDomain или ApplicationDomain другой стороны, чтобы вызвать <codeph class="+ topic/ph pr-d/codeph ">ApplicationDomain.getDefinition()</codeph>. Каждая из сторон может извлечь ссылку на собственный домен приложения, используя <codeph class="+ topic/ph pr-d/codeph ">ApplicationDomain.currentDomain</codeph>. Загружающий SWF-файл может извлекать ссылку на домен приложения загружаемого SWF-файла с помощью <codeph class="+ topic/ph pr-d/codeph ">Loader.contentLoaderInfo.applicationDomain</codeph>. Если для загруженного SWF-файла известен способ его загрузки, можно определить путь к объекту ApplicationDomain загружающего SWF-файла. Например, если дочерний объект был загружен принятым по умолчанию способом, он может найти домен приложения, загружающего SWF-файла, используя <codeph class="+ topic/ph pr-d/codeph ">ApplicationDomain.currentDomain.parentDomain</codeph>.</p>
     
     <p class="- topic/p ">Дополнительные сведения см. в разделе «Класс ApplicationDomain» главы «Системная среда клиента» в <i class="+ topic/ph hi-d/i ">Руководстве разработчика по ActionScript 3.0</i>.</p>
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#Loader/load()" class="- topic/link "><linktext class="- topic/linktext ">flash.display.Loader.load()</linktext></link><link href="flash.display.xml#Loader/loadBytes()" class="- topic/link "><linktext class="- topic/linktext ">flash.display.Loader.loadBytes()</linktext></link><link href="flash.system.xml#ApplicationDomain" class="- topic/link "><linktext class="- topic/linktext ">flash.system.ApplicationDomain</linktext></link></related-links></apiValue><apiValue id="flash.system:LoaderContext:checkPolicyFile" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">checkPolicyFile</apiName><shortdesc class="- topic/shortdesc ">
     Указывает, должно ли приложение пытаться загрузить файл политики для URL-адреса с сервера загружаемого объекта перед началом загрузки самого объекта.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Указывает, должно ли приложение пытаться загрузить файл политики для URL-адреса с сервера загружаемого объекта перед началом загрузки самого объекта. Этот флаг применим к методу <codeph class="+ topic/ph pr-d/codeph ">Loader.load()</codeph>, но не работает для метода<codeph class="+ topic/ph pr-d/codeph ">Loader.loadBytes()</codeph>.
     
     <p class="- topic/p ">Установите для этого флага значение <codeph class="+ topic/ph pr-d/codeph ">true</codeph>, если изображение (JPEG, GIF или PNG) загружается извне домена вызывающего SWF-файла и предполагается доступ к содержимому этого изображения из ActionScript. В число примеров обращения к содержимому изображений входят обращение к свойству <codeph class="+ topic/ph pr-d/codeph ">Loader.content</codeph> для получения объекта Bitmap, а также вызов метода <codeph class="+ topic/ph pr-d/codeph ">BitmapData.draw()</codeph> для получения копии растрового представления загруженного изображения. Если попытаться выполнить одну из этих операций, не указав <codeph class="+ topic/ph pr-d/codeph ">checkPolicyFile</codeph> во время загрузки, можно получить исключение <codeph class="+ topic/ph pr-d/codeph ">SecurityError</codeph>, поскольку необходимый файл политики еще не был загружен.</p>
     
     <p class="- topic/p ">При вызове метода <codeph class="+ topic/ph pr-d/codeph ">Loader.load()</codeph> с установленным для <codeph class="+ topic/ph pr-d/codeph ">LoaderContext.checkPolicyFile</codeph> значением <codeph class="+ topic/ph pr-d/codeph ">true</codeph>, приложение не начнет загрузку указанного в <codeph class="+ topic/ph pr-d/codeph ">URLRequest.url</codeph> объекта до тех пор, пока успешно не загрузит соответствующий файл политики для URL-адреса или не обнаружит отсутствие такого файла. Приложение Flash Player или AIR в первую очередь учитывает файлы политик, которые уже загружены, затем пытается загрузить ожидающие файлы политик, указанные в вызовах метода <codeph class="+ topic/ph pr-d/codeph ">Security.loadPolicyFile()</codeph>, затем пытается загрузить файл политики из местоположения по умолчанию, соответствующему <codeph class="+ topic/ph pr-d/codeph ">URLRequest.url</codeph> (это файл <codeph class="+ topic/ph pr-d/codeph ">/crossdomain.xml</codeph> на том же сервере, что и <codeph class="+ topic/ph pr-d/codeph ">URLRequest.url</codeph>). Во всех случаях требуется, чтобы по адресу <codeph class="+ topic/ph pr-d/codeph ">URLRequest.url</codeph> существовал соответствующий файл политики на основе места размещения файла политики, а также, чтобы он обеспечивал доступ посредством одного или нескольких тегов <codeph class="+ topic/ph pr-d/codeph ">&lt;allow-access-from></codeph>.</p>
     
     <p class="- topic/p ">Если для свойства <codeph class="+ topic/ph pr-d/codeph ">checkPolicyFile</codeph> задать значение <codeph class="+ topic/ph pr-d/codeph ">true</codeph>, основная загрузка, указанная в методе <codeph class="+ topic/ph pr-d/codeph ">Loader.load()</codeph>, не будет выполнена до полного завершения обработки файла политики. Поэтому, пока необходимый файл политики существует, как только будет получено любое из событий <codeph class="+ topic/ph pr-d/codeph ">ProgressEvent.PROGRESS</codeph> или <codeph class="+ topic/ph pr-d/codeph ">Event.COMPLETE</codeph> для свойства <codeph class="+ topic/ph pr-d/codeph ">contentLoaderInfo</codeph> объекта Loader, загрузка файла политики завершается и можно безопасно начинать выполнение операций, требующих этот файл политики.</p>
     
     <p class="- topic/p ">Если для <codeph class="+ topic/ph pr-d/codeph ">checkPolicyFile</codeph> установлено значение <codeph class="+ topic/ph pr-d/codeph ">true</codeph>, а соответствующий файл политики не найден, сообщение об ошибке не будет отправляться до тех пор, пока не будет предпринята попытка выполнить операцию, создающую исключение <codeph class="+ topic/ph pr-d/codeph ">SecurityError</codeph>. Однако как только объект LoaderInfo передаст событие <codeph class="+ topic/ph pr-d/codeph ">ProgressEvent.PROGRESS</codeph> или <codeph class="+ topic/ph pr-d/codeph ">Event.COMPLETE</codeph>, можно убедиться, найден ли соответствующий файл политики, проверив значение свойства <codeph class="+ topic/ph pr-d/codeph ">LoaderInfo.childAllowsParent</codeph>.</p>
     
     <p class="- topic/p ">Если необходим доступ к загружаемому изображению на уровне растрового представления, не следует устанавливать для свойства <codeph class="+ topic/ph pr-d/codeph ">checkPolicyFile</codeph> значение <codeph class="+ topic/ph pr-d/codeph ">true</codeph>. Проверка файла политики в этом случае бесполезна, поскольку это может задержать запуск загрузки, а также нерационально израсходовать дополнительные ресурсы полосы пропускания.</p>
     
     <p class="- topic/p ">Также постарайтесь избегать установки для <codeph class="+ topic/ph pr-d/codeph ">checkPolicyFile</codeph> значения <codeph class="+ topic/ph pr-d/codeph ">true</codeph>, если для загрузки SWF-файла используется метод <codeph class="+ topic/ph pr-d/codeph ">Loader.load()</codeph>. Причина этого в том, что разрешения на взаимные обращения между SWF-файлами не контролируются файлами политик, а только с помощью метода <codeph class="+ topic/ph pr-d/codeph ">Security.allowDomain()</codeph>, поэтому вызов <codeph class="+ topic/ph pr-d/codeph ">checkPolicyFile</codeph> никак не влияет на загрузку SWF-файла. Проверка файла политики в этом случае бесполезна, поскольку это может задержать загрузку SWF-файла, а также нерационально израсходовать дополнительные ресурсы полосы пропускания. (Приложение Flash Player или AIR не может определить, будет ли основная загрузка выполняться для SWF-файла или изображения, поскольку загрузка файла политики произошла перед основной загрузкой.)</p>
     
     <p class="- topic/p ">Будьте осторожны с <codeph class="+ topic/ph pr-d/codeph ">checkPolicyFile</codeph>, если выполняется загрузка объекта из URL-адреса, который может использовать HTTP-перенаправления на стороне сервера. Файлы политик всегда извлекаются по исходному URL-адресу, указанному в <codeph class="+ topic/ph pr-d/codeph ">URLRequest.url</codeph>. Если окончательный объект передается с другого URL-адреса из-за HTTP-перенаправлений, то изначально загруженные файлы политик могут быть не применимы к окончательному URL-адресу объекта, который и следует учитывать при принятии мер безопасности. В случае возникновения подобной ситуации можно проверить значение <codeph class="+ topic/ph pr-d/codeph ">LoaderInfo.url</codeph> после получения события <codeph class="+ topic/ph pr-d/codeph ">ProgressEvent.PROGRESS</codeph> или <codeph class="+ topic/ph pr-d/codeph ">Event.COMPLETE</codeph>, в котором сообщается окончательный URL-адрес объекта. Затем вызовите метод <codeph class="+ topic/ph pr-d/codeph ">Security.loadPolicyFile()</codeph> с файлом политики на основе URL-адресов, где учитывается окончательный URL-адрес объекта. Затем опрашивайте значение <codeph class="+ topic/ph pr-d/codeph ">LoaderInfo.childAllowsParent</codeph> до тех пор, пока оно не изменится на<codeph class="+ topic/ph pr-d/codeph ">true</codeph>.</p>
     
         <p class="- topic/p ">Нет необходимости задавать это свойство для содержимого AIR, выполняющегося в изолированной программной среде приложения. Содержимое в изолированной программной среде приложения AIR может вызывать метод <codeph class="+ topic/ph pr-d/codeph ">BitmapData.draw()</codeph>, используя в качестве источника любое загруженное содержимое изображения. </p>
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#BitmapData/draw()" class="- topic/link "><linktext class="- topic/linktext ">flash.display.BitmapData.draw()</linktext></link><link href="flash.display.xml#Loader/content" class="- topic/link "><linktext class="- topic/linktext ">flash.display.Loader.content</linktext></link><link href="flash.display.xml#Loader/load()" class="- topic/link "><linktext class="- topic/linktext ">flash.display.Loader.load()</linktext></link><link href="flash.display.xml#LoaderInfo/childAllowsParent" class="- topic/link "><linktext class="- topic/linktext ">flash.display.LoaderInfo.childAllowsParent</linktext></link><link href="flash.display.xml#LoaderInfo/url" class="- topic/link "><linktext class="- topic/linktext ">flash.display.LoaderInfo.url</linktext></link><link href="flash.system.xml#Security/allowDomain()" class="- topic/link "><linktext class="- topic/linktext ">flash.system.Security.allowDomain()</linktext></link><link href="flash.system.xml#Security/loadPolicyFile()" class="- topic/link "><linktext class="- topic/linktext ">flash.system.Security.loadPolicyFile()</linktext></link></related-links></apiValue><apiValue id="flash.system:LoaderContext:imageDecodingPolicy" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">imageDecodingPolicy</apiName><shortdesc class="- topic/shortdesc ">
     Указывает на то, будут ли данные изображения декодироваться при использовании или при загрузке изображения.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="2.6" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Указывает на то, будут ли данные изображения декодироваться при использовании или при загрузке изображения.
     
     <p class="- topic/p ">Стандартная политика <codeph class="+ topic/ph pr-d/codeph ">ImageDecodingPolicy.ON_DEMAND</codeph> определяет декодирование данных изображения средой выполнения, когда данные необходимы для отображения или других целей. Эта политика сохраняет поведение декодирования, использовавшееся в предшествующих версиях среды выполнения.</p>
	 
	 <p class="- topic/p ">Политика <codeph class="+ topic/ph pr-d/codeph ">ImageDecodingPolicy.ON_LOAD</codeph> определяет декодирование данных изображения средой выполнения сразу после его загрузки перед передачей события complete. Декодирование изображений при загрузке, а не когда они необходимы, может улучшить производительность анимации и интерфейса пользователя, если несколько загруженных изображений выводятся одно за другим через короткие промежутки времени, например в прокручиваемом списке элемента управления cover flow. С другой стороны, постоянное применение политики onLoad может увеличить пиковое использование памяти приложением, так как в памяти одновременно будет больше данных декодированных изображений, чем при применении политики onDemand.</p>
	 
     <p class="- topic/p ">Под обеими политиками среда выполнения использует тот же самый кэш и метод очистки после декодирования изображения. Среда выполнения может в любое время очистить декодированные данные и повторно декодировать изображение, когда оно понадобится в следующий раз.</p>
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.system.xml#ImageDecodingPolicy" class="- topic/link "><linktext class="- topic/linktext ">flash.system. ImageDecodingPolicy</linktext></link></related-links></apiValue><apiValue id="flash.system:LoaderContext:parameters" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">parameters</apiName><shortdesc class="- topic/shortdesc ">
     Объект, содержащий параметры, передаваемые объекту содержимого LoaderInfo.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2.6" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Object</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Объект, содержащий параметры, передаваемые объекту содержимого LoaderInfo.
     
     <p class="- topic/p ">Как правило, значение свойства <codeph class="+ topic/ph pr-d/codeph ">contentLoaderInfo.parameters</codeph> получается путем анализа запрашивающего URL-адреса. Если задана переменная <codeph class="+ topic/ph pr-d/codeph ">parameters</codeph>, метод <codeph class="+ topic/ph pr-d/codeph ">contentLoaderInfo.parameters</codeph> получает значение из объекта LoaderContext, а не из запрашивающего URL-адреса. Переменная <codeph class="+ topic/ph pr-d/codeph ">parameters</codeph> допускает только объекты, содержащие пары «имя-значение» типа String (аналогично параметрам URL-адреса). Если объект не содержит пары «имя-значение» типа String, передается ошибка <codeph class="+ topic/ph pr-d/codeph ">IllegalOperationError</codeph>.</p>
     <p class="- topic/p ">Данный API-интерфейс предназначен для включения загрузки SWF-файла для передачи его параметров в загруженный SWF-файл. Эта функция особенно полезна при использовании метода <codeph class="+ topic/ph pr-d/codeph ">loadBytes()</codeph>, поскольку метод <codeph class="+ topic/ph pr-d/codeph ">LoadBytes</codeph> не предоставляет средства передачи параметров с помощью URL-адреса. Параметры могут быть успешно переданы только в другой SWF-файл AS3. SWF-файл AS1 или AS2 не поддерживает получение параметров в доступной форме, хотя объект loaderInfo.parameters AVM1Movie AS3 будет являться переданным объектом. </p>
     
     
     <p class="- topic/p ">Например, рассмотрим следующий URL: </p>
     <p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">http://yourdomain/users/jdoe/test01/child.swf?foo=bar;</codeph></p>
     <p class="- topic/p ">В следующем коде используется свойство LoaderContext.parameters для копирования параметра, переданного этому URL-адресу: </p>
     
     <pre xml:space="preserve" class="- topic/pre ">
      import flash.system.LoaderContext; 
      import flash.display.Loader; 
      var l:Loader = new Loader(); 
      var lc:LoaderContext = new LoaderContext; 
      lc.parameters = { "foo": "bar" }; 
      l.load(new URLRequest("child.swf"), lc);
     </pre>
     
     <p class="- topic/p ">Чтобы убедиться в правильной передаче параметра, используйте следующую инструкцию trace после выполнения этого кода:</p>
     <p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">trace(loaderInfo.parameters.foo);</codeph></p>
     <p class="- topic/p ">Если содержимое загружено успешно, будет выведена строка bar.</p>
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.system:LoaderContext:requestedContentParent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">requestedContentParent</apiName><shortdesc class="- topic/shortdesc ">
     Родительский объект, к которому загрузчик попытается добавить загруженное содержимое.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.2" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2.6" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.display:DisplayObjectContainer</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Родительский объект, к которому загрузчик попытается добавить загруженное содержимое. 
     
     <p class="- topic/p ">Когда содержимое полностью загружено, объект Loader обычно становится родительским элементом для содержимого. Если задано свойство <codeph class="+ topic/ph pr-d/codeph ">requestedContentParent</codeph>, указанный в нем объект становится родительским элементом при отсутствии ошибки времени выполнения, препятствующей назначению. Подобное переназначение родительского элемента можно выполнить после получения события <codeph class="+ topic/ph pr-d/codeph ">complete</codeph> без использования данного свойства. Однако указание родительского элемента с помощью свойства <codeph class="+ topic/ph pr-d/codeph ">LoaderContext.requestedContentParent</codeph> позволяет исключить дополнительные события. </p>
     <p class="- topic/p ">Свойство <codeph class="+ topic/ph pr-d/codeph ">LoaderContext.requestedContentParent</codeph> задает нужный родительский элемент перед выполнением сценариев первого кадра в загруженном содержимом, но после запуска конструктора. Если <codeph class="+ topic/ph pr-d/codeph ">requestedContentParent</codeph> имеет значение null (по умолчанию), объект Loader становится родительским элементом для содержимого.</p>
     <p class="- topic/p ">Если загруженное содержимое является объектом AVM1Movie или при вызове метода <codeph class="+ topic/ph pr-d/codeph ">addChild()</codeph> в объекте <codeph class="+ topic/ph pr-d/codeph ">requestedContentParent</codeph> возникает ошибка, выполняются следующие действия:
     <ul class="- topic/ul "><li class="- topic/li ">Объект Loader становится родительским элементом для загруженного содержимого.</li><li class="- topic/li ">Среда выполнения отправляет событие <codeph class="+ topic/ph pr-d/codeph ">AsyncErrorEvent</codeph>.</li></ul></p>
     <p class="- topic/p ">Если запрошенный родительский элемент и загруженное содержимое находятся в различных изолированных программных средах системы защиты и запрошенный родительский элемент не имеет доступа к загруженному содержимому, то выполняются следующие действия:
     <ul class="- topic/ul "><li class="- topic/li ">Объект Loader становится родительским элементом для загруженного содержимого.</li><li class="- topic/li ">Среда выполнения отправляет событие <codeph class="+ topic/ph pr-d/codeph ">SecurityErrorEvent</codeph>.</li></ul></p>
     
     <p class="- topic/p ">В следующем коде используется <codeph class="+ topic/ph pr-d/codeph ">requestedContentParent</codeph> для помещения загруженного содержимого в объект Sprite:</p>
     <pre xml:space="preserve" class="- topic/pre ">
      import flash.system.LoaderContext; 
      import flash.display.Loader; 
      import flash.display.Sprite; 
     
      var lc:LoaderContext = new LoaderContext(); 
      var l:Loader = new Loader(); 
      var s:Sprite = new Sprite(); 
      lc.requestedContentParent = s; 
      addChild(s); 
      l.load(new URLRequest("child.swf"), lc);
     </pre>
     
     <p class="- topic/p ">При выполнении этого кода дочерний SWF-файл появляется на рабочей области. Это подтверждает, что объект Sprite, добавленный в рабочую область, является вышестоящим узлом загруженного дочернего SWF-файла.</p>
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.system:LoaderContext:securityDomain" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">securityDomain</apiName><shortdesc class="- topic/shortdesc ">
     Указывает домен защиты для использования в операции Loader.load().</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.system:SecurityDomain</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Указывает домен защиты для использования в операции <codeph class="+ topic/ph pr-d/codeph ">Loader.load()</codeph>. Используйте это свойство только при загрузке SWF-файлов (но не изображений).
     
     <p class="- topic/p ">Выбор домена безопасности имеет смысл только в том случае, если загружается SWF-файл, который мог быть получен из другого домена (другой сервер), отличающегося от загружающего SWF-файла. Если SWF-файл загружается из собственного домена, он всегда помещается в собственный домен защиты. Но если SWF-файл загружается из другого домена, есть два варианта действий. Можно разрешить загружаемому SWF-файлу быть помещенным в «обычный» домен защиты, который отличается от домена защиты загружающего SWF-файла; это вариант по умолчанию. Другим вариантом является указание того, что загружаемый SWF-файл требуется поместить в тот же домен защиты, что и загружающий SWF-файл, установив для <codeph class="+ topic/ph pr-d/codeph ">myLoaderContext.securityDomain</codeph> значение равное <codeph class="+ topic/ph pr-d/codeph ">SecurityDomain.currentDomain</codeph>. Это называется <i class="+ topic/ph hi-d/i ">загрузка импортом</i>, что с точки зрения обеспечения безопасности, эквивалентно копированию загружаемого SWF-файла на собственный сервер и загрузки его оттуда. Чтобы загрузка импортом завершилась успешно, загруженный SWF-файл должен иметь файл политики, определяющий в качестве доверенного домен загружающего SWF-файла.</p>
     
     <p class="- topic/p ">Указывать собственный домен защиты можно только в <codeph class="+ topic/ph pr-d/codeph ">LoaderContext.securityDomain</codeph>. Попытка указать какой-либо другой домен защиты приводит к исключению <codeph class="+ topic/ph pr-d/codeph ">SecurityError</codeph>.</p>
     
     <p class="- topic/p ">Содержимое в изолированной среде безопасности приложения AIR не может загружать содержимое из других изолированных программных сред в свой объект SecurityDomain.</p>
     
     <p class="- topic/p ">Дополнительные сведения см. в главе «Безопасность» в <i class="+ topic/ph hi-d/i ">Руководстве разработчика по ActionScript 3.0</i>.</p>
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#Loader/load()" class="- topic/link "><linktext class="- topic/linktext ">flash.display.Loader.load()</linktext></link><link href="flash.system.xml#SecurityDomain" class="- topic/link "><linktext class="- topic/linktext ">flash.system.SecurityDomain</linktext></link></related-links></apiValue><apiValue id="flash.system:LoaderContext:allowLoadBytesCodeExecution:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">allowLoadBytesCodeExecution</apiName><shortdesc class="- topic/shortdesc ">
     Устаревшее свойство, которое заменено на allowCodeImport, но все еще поддерживается с целью обеспечения совместимости.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Устаревшее свойство, которое заменено на <codeph class="+ topic/ph pr-d/codeph ">allowCodeImport</codeph>, но все еще поддерживается с целью обеспечения совместимости. Раньше свойство <codeph class="+ topic/ph pr-d/codeph ">allowLoadBytesCodeExecution</codeph> затрагивало только операцию <codeph class="+ topic/ph pr-d/codeph ">Loader.loadBytes()</codeph>, но начиная с версий Flash Player 10.1 и AIR 2.0 оно также влияет на операцию импорта и загрузки методом <codeph class="+ topic/ph pr-d/codeph ">Loader.load()</codeph> с параметром <codeph class="+ topic/ph pr-d/codeph ">LoaderContext.securityDomain = SecurityDomain.currentDomain</codeph>. (Вторая операция не поддерживается в изолированной программной среде приложения AIR.) В результате такого двойного действия название <codeph class="+ topic/ph pr-d/codeph ">allowLoadBytesCodeExecution</codeph> стало слишком конкретным, поэтому теперь это свойство предпочтительно называть <codeph class="+ topic/ph pr-d/codeph ">allowCodeImport</codeph>. Установка одного из этих свойств затрагивает значения и того и другого: <codeph class="+ topic/ph pr-d/codeph ">allowCodeImport</codeph> и <codeph class="+ topic/ph pr-d/codeph ">allowLoadBytesCodeExecution</codeph>.
     
     <p class="- topic/p ">Указывает, можно ли использовать объект <codeph class="+ topic/ph pr-d/codeph ">Loader</codeph> для импорта содержимого с исполняемым кодом, например SWF-файла, в изолированную среду безопасности вызывающего приложения. Когда это свойство имеет значение <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, допускаются только безопасные операции импорта, такие как загрузка изображений.</p>
     
     <p class="- topic/p ">Для содержимого в изолированной программной среде безопасности приложения AIR значением по умолчанию является <codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Для содержимого вне изолированной программной среды приложения значением по умолчанию является <codeph class="+ topic/ph pr-d/codeph ">true</codeph>.</p>
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#Loader/loadBytes()" class="- topic/link "><linktext class="- topic/linktext ">flash.display.Loader.loadBytes()</linktext></link></related-links></apiValue></apiClassifier><apiClassifier languages="" id="flash.system:JPEGLoaderContext" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">JPEGLoaderContext</apiName><shortdesc class="- topic/shortdesc ">
 Класс JPEGLoaderContext содержит свойство для инициализации фильтра подавления блочности при загрузке изображения JPEG.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.system:LoaderContext</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Класс JPEGLoaderContext содержит свойство для инициализации фильтра подавления блочности при загрузке изображения JPEG. Фильтр подавления блочности повышает качество изображения при более высокой степени сжатия путем сглаживания соседних пикселей. Чтобы применить подавление блочности при загрузке изображения JPEG, создайте объект JPEGLoaderContext и задайте его свойство <codeph class="+ topic/ph pr-d/codeph ">deblockingFilter</codeph>. Затем укажите имя объекта JPEGLoaderContext в качестве значения параметра <codeph class="+ topic/ph pr-d/codeph ">context</codeph> метода <codeph class="+ topic/ph pr-d/codeph ">load()</codeph> объекта Loader, используемого для загрузки изображения.
 
 <p class="- topic/p ">Класс JPEGLoaderContext является расширением класса LoaderContext. Установите для свойства <codeph class="+ topic/ph pr-d/codeph ">checkPolicyFile</codeph> значение <codeph class="+ topic/ph pr-d/codeph ">true</codeph>, если требуется программный доступ к растровому представлению загруженного изображения (например, при использовании метода <codeph class="+ topic/ph pr-d/codeph ">BitmapData.draw()</codeph>). Для содержимого AIR, выполняющегося в изолированной программной среде приложения, задавать свойство <codeph class="+ topic/ph pr-d/codeph ">checkPolicyFile</codeph> не требуется.</p>
 
 </apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.display.xml#Loader/load()" class="- topic/link "><linktext class="- topic/linktext ">flash.display.Loader.load()</linktext></link><link href="flash.display.xml#BitmapData/draw()" class="- topic/link "><linktext class="- topic/linktext ">flash.display.BitmapData.draw()</linktext></link></related-links><apiConstructor id="flash.system:JPEGLoaderContext:JPEGLoaderContext" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">JPEGLoaderContext</apiName><shortdesc class="- topic/shortdesc ">
     Создает новый объект JPEGLoaderContext с указанными параметрами.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">deblockingFilter</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0.0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Задает интенсивность фильтра подавления блочности. Значение 1,0 задает полную интенсивность фильтра подавления блочности, а значение 0,0 отключает этот фильтр.
     
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">checkPolicyFile</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Указывает, должен ли проигрыватель Flash Player проверять существование файла политики для URL-адреса перед загрузкой объекта. Не применяется для содержимого AIR, выполняемого в изолированной среде безопасности приложения.
     
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">applicationDomain</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.system:ApplicationDomain</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Указывает, какой объект ApplicationDomain следует использовать для объекта Loader.
     
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">securityDomain</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.system:SecurityDomain</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Указывает, какой объект SecurityDomain следует использовать для объекта Loader.
     
     </apiDesc></apiParam></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Создает новый объект JPEGLoaderContext с указанными параметрами. 
     
     </apiDesc></apiConstructorDetail><related-links class="- topic/related-links "><link href="flash.system.xml#LoaderContext" class="- topic/link "><linktext class="- topic/linktext ">flash.system.LoaderContext</linktext></link><link href="flash.display.xml#Loader/load()" class="- topic/link "><linktext class="- topic/linktext ">flash.display.Loader.load()</linktext></link><link href="flash.display.xml#Loader/loadBytes()" class="- topic/link "><linktext class="- topic/linktext ">flash.display.Loader.loadBytes()</linktext></link><link href="flash.system.xml#ApplicationDomain" class="- topic/link "><linktext class="- topic/linktext ">flash.system.ApplicationDomain</linktext></link><link href="flash.system.xml#SecurityDomain" class="- topic/link "><linktext class="- topic/linktext ">flash.system.SecurityDomain</linktext></link></related-links></apiConstructor><apiValue id="flash.system:JPEGLoaderContext:deblockingFilter" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">deblockingFilter</apiName><shortdesc class="- topic/shortdesc "> 
	 Задает интенсивность фильтра подавления блочности.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">0.0</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	 Задает интенсивность фильтра подавления блочности. Значение 1,0 задает полную интенсивность фильтра подавления блочности, а значение 0,0 отключает этот фильтр.
	 
	 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.system:Capabilities" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">Capabilities</apiName><shortdesc class="- topic/shortdesc ">
 Класс Capabilities предоставляет свойства, описывающие систему и среду выполнения, в которых находится приложение.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">Capabilities, Capabilities object, built-in class
  
  </keyword></asCustoms></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 <ph class="- topic/ph ">Класс Capabilities предоставляет свойства, описывающие систему и среду выполнения, в которых находится приложение. Например, экран мобильного телефона может содержать 100 квадратных пикселей (черно-белых), в то время как экран ПК будет 1000 иметь квадратных пикселей (цветных). Используя объект Capabilities для определения возможностей клиента, можно предоставлять соответствующее содержимое максимально возможному количеству пользователей. Если известны возможности устройства, можно указать серверу подходящие SWF-файлы для отправки или задать смену презентации для SWF-файла. </ph>
 
 
 
 <p class="- topic/p ">Однако некоторые возможности Adobe AIR не обеспечиваются свойствами класса Capabilities. Они являются свойствами других классов:</p>
 
 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Свойство</entry><entry class="- topic/entry ">Описание</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">NativeApplication.supportsDockIcon</codeph></entry><entry class="- topic/entry ">Наличие в операционной системе поддержки значков приложения на панели Dock.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">NativeApplication.supportsMenu</codeph></entry><entry class="- topic/entry ">Наличие в операционной системе поддержки глобальных строк меню приложений.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">NativeApplication.supportsSystemTrayIcon</codeph></entry><entry class="- topic/entry ">Наличие в операционной системе поддержки значков на панели задач.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">NativeWindow.supportsMenu</codeph></entry><entry class="- topic/entry ">Наличие в операционной системе поддержки оконных меню.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">NativeWindow.supportsTransparency</codeph></entry><entry class="- topic/entry ">Наличие в операционной системе поддержки прозрачных окон.</entry></row></tbody></tgroup></adobetable>
 
 <p class="- topic/p "><i class="+ topic/ph hi-d/i ">Не</i> используйте <codeph class="+ topic/ph pr-d/codeph ">Capabilities.os</codeph> или <codeph class="+ topic/ph pr-d/codeph ">Capabilities.manufacturer</codeph> для определения возможности на основе операционной системы. Создание функций на основе одной операционной системы не рекомендуется, так как это может привести к проблемам, если в приложении не рассмотрены все потенциальные целевые операционные системы. Вместо этого используйте свойство, соответствующее функции, для которой выполняется тестирование.</p>
 
 <p class="- topic/p ">Информацию о возможностях, которая хранится в свойстве <codeph class="+ topic/ph pr-d/codeph ">Capabilities.serverString</codeph> в виде URL-строки, можно отправить с помощью HTTP-методов <codeph class="+ topic/ph pr-d/codeph ">GET</codeph> или <codeph class="+ topic/ph pr-d/codeph ">POST</codeph>. В следующем примере показана строка сервера для компьютера с поддержкой MP3 и разрешением экрана 1600 x 1200 пикселей, который работает под управлением Windows XP с установленным редактором методов ввода (IME).</p>
 
 <pre xml:space="preserve" class="- topic/pre ">A=t&amp;SA=t&amp;SV=t&amp;EV=t&amp;MP3=t&amp;AE=t&amp;VE=t&amp;ACC=f&amp;PR=t&amp;SP=t&amp;
     SB=f&amp;DEB=t&amp;V=WIN%209%2C0%2C0%2C0&amp;M=Adobe%20Windows&amp;
     R=1600x1200&amp;DP=72&amp;COL=color&amp;AR=1.0&amp;OS=Windows%20XP&amp;
     L=en&amp;PT=External&amp;AVD=f&amp;LFD=f&amp;WD=f&amp;IME=t</pre>
 
 <p class="- topic/p ">В следующей таблице перечислены свойства класса Capabilities и соответствующие строки сервера.
 <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry align="left" class="- topic/entry ">Свойство класса Capabilities</entry><entry align="left" class="- topic/entry ">Строка сервера</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">avHardwareDisable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">AVD</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">hasAccessibility</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">ACC</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">hasAudio</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">A</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">hasAudioEncoder</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">AE</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">hasEmbeddedVideo</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">EV</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">hasIME</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">IME</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">hasMP3</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">MP3</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">hasPrinting</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">PR</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">hasScreenBroadcast</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">SB</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">hasScreenPlayback</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">SP</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">hasStreamingAudio</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">SA</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">hasStreamingVideo</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">SV</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">hasTLS</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">TLS</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">hasVideoEncoder</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">VE</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">isDebugger</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">DEB</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">language</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">L</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">localFileReadDisable</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">LFD</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">manufacturer</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">M</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">maxLevelIDC</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">ML</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">os</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">OS</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">pixelAspectRatio</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">AR</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">playerType</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">PT</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">screenColor</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">COL</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">screenDPI</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">DP</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">screenResolutionX</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">R</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">screenResolutionY</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">R</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">version</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">V</codeph></entry></row></tbody></tgroup></adobetable>
 </p>
  
 <p class="- topic/p ">Существует также строка сервера <codeph class="+ topic/ph pr-d/codeph ">WD</codeph>, указывающая, отключен ли безоконный режим. Безоконный режим может быть отключен в Flash Player вследствие несовместимости с web-браузером или из-за пользовательской настройки в файле mms.cfg. Соответствующее значение свойства Capabilities отсутствует.</p>
  
 <p class="- topic/p ">Все свойства класса Capabilities доступны только для чтения.</p>
 
 </apiDesc><example conref="examples\CapabilitiesExample.as" class="- topic/example "> Следующий код выводит значения, найденные в объекте flash.system.Capabilities. Сначала значения выводятся в текстовое поле. Затем они выводятся путем многократного вызова метода <codeph class="+ topic/ph pr-d/codeph ">trace()</codeph>.
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">

package {
    import flash.display.Sprite;
    import flash.system.Capabilities;
    import flash.text.TextField;
    import flash.text.TextFieldAutoSize;

    public class CapabilitiesExample extends Sprite {
        
        public function CapabilitiesExample() {
            showCapabilities();
        }
        
        private function showCapabilities():void {
            var tf:TextField = new TextField();
            tf.height = 600;
            tf.width = 400;
            tf.autoSize = TextFieldAutoSize.LEFT;
            tf.wordWrap = true;
            
            tf.text = "avHardwareDisable: " + Capabilities.avHardwareDisable +
                
                "\nhasAccessibility: " + Capabilities.hasAccessibility +
                "\nhasAudio: " + Capabilities.hasAudio +
                "\nhasAudioEncoder: " + Capabilities.hasAudioEncoder +
                "\nhasEmbeddedVideo: " + Capabilities.hasEmbeddedVideo +
                "\nhasIME: " + Capabilities.hasIME +
                "\nhasMP3: " + Capabilities.hasMP3 +
                "\nhasPrinting: " + Capabilities.hasPrinting +
                "\nhasScreenBroadcast: " + Capabilities.hasScreenBroadcast +
                "\nhasScreenPlayback: " + Capabilities.hasScreenPlayback +
                "\nhasStreamingAudio: " + Capabilities.hasStreamingAudio +
                "\nhasStreamingVideo: " + Capabilities.hasStreamingVideo +
                "\nhasTLS: " + Capabilities.hasTLS +
                "\nhasVideoEncoder: " + Capabilities.hasVideoEncoder +
                "\nisDebugger: " + Capabilities.isDebugger +
                "\nisEmbeddedInAcrobat: " + Capabilities.isEmbeddedInAcrobat +
                "\nlanguage: " + Capabilities.language +
                "\nlocalFileReadDisable: " + Capabilities.localFileReadDisable +
                "\nmanufacturer: " + Capabilities.manufacturer +
                "\nmaxLevelIDC: " + Capabilities.maxLevelIDC +
                "\nos: " + Capabilities.os +
                "\npixelAspectRatio: " + Capabilities.pixelAspectRatio +
                "\nplayerType: " + Capabilities.playerType +
                "\nscreenColor: " + Capabilities.screenColor +
                "\nscreenDPI: " + Capabilities.screenDPI +
                "\nscreenResolutionX: " + Capabilities.screenResolutionX +
                "\nscreenResolutionY: " + Capabilities.screenResolutionY +
                "\nserverString: " + Capabilities.serverString +
                "\ntouchscreenType: " + Capabilities.touchscreenType +
                
                // The following capabilities are supported only when publishing for AIR.
                // If you are publishing for AIR, uncomment the following lines.
                //"\nlanguages: " + Capabilities.languages +
                //"\ncpuArchitecture: " + Capabilities.cpuArchitecture +
                //"\nsupports32BitProcesses: " + Capabilities.supports32BitProcesses +
                //"\nsupports64BitProcesses: " + Capabilities.supports64BitProcesses +    
                                
                "\nversion: " + Capabilities.version;
                
            addChild(tf);   
                
            trace("avHardwareDisable: " + Capabilities.avHardwareDisable);
            trace("hasAccessibility: " + Capabilities.hasAccessibility);
            trace("hasAudio: " + Capabilities.hasAudio);
            trace("hasAudioEncoder: " + Capabilities.hasAudioEncoder);
            trace("hasEmbeddedVideo: " + Capabilities.hasEmbeddedVideo);
            trace("hasIME: " + Capabilities.hasIME);
            trace("hasMP3: " + Capabilities.hasMP3);
            trace("hasPrinting: " + Capabilities.hasPrinting);
            trace("hasScreenBroadcast: " + Capabilities.hasScreenBroadcast);
            trace("hasScreenPlayback: " + Capabilities.hasScreenPlayback);
            trace("hasStreamingAudio: " + Capabilities.hasStreamingAudio);
            trace("hasStreamingVideo: " + Capabilities.hasStreamingVideo);
            trace("hasTLS: " + Capabilities.hasTLS);
            trace("hasVideoEncoder: " + Capabilities.hasVideoEncoder);
            trace("isDebugger: " + Capabilities.isDebugger);
            trace("isEmbeddedInAcrobat: " + Capabilities.isEmbeddedInAcrobat);
            trace("language: " + Capabilities.language);
            trace("localFileReadDisable: " + Capabilities.localFileReadDisable);
            trace("manufacturer: " + Capabilities.manufacturer);
            trace("maxLevelIDC: " + Capabilities.maxLevelIDC);
            trace("os: " + Capabilities.os);
            trace("pixelAspectRatio: " + Capabilities.pixelAspectRatio);
            trace("playerType: " + Capabilities.playerType);
            trace("screenColor: " + Capabilities.screenColor);
            trace("screenDPI: " + Capabilities.screenDPI);
            trace("screenResolutionX: " + Capabilities.screenResolutionX);
            trace("screenResolutionY: " + Capabilities.screenResolutionY);
            trace("serverString: " + Capabilities.serverString);
            trace("touchscreenType: " + Capabilities.touchscreenType);
            
            // The following capabilities are supported only when publishing for AIR.
            // If you are publishing for AIR, uncomment the following lines.       
            //trace("cpuArchitecture: " + Capabilities.cpuArchitecture);
            //trace("languages: " + Capabilities.languages);
            //trace("supports32BitProcesses: " + Capabilities.supports32BitProcesses);
            //trace("supports64BitProcesses: " + Capabilities.supports64BitProcesses);        
                        
            trace("version: " + Capabilities.version);
       
        }
    }
}

</codeblock></example></apiClassifierDetail><apiValue id="flash.system:Capabilities:avHardwareDisable:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">avHardwareDisable</apiName><shortdesc class="- topic/shortdesc ">
	 Показывает, был ли запрещен администратором доступ к камере и микрофону пользователя (значение true) или нет (значение false).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">Capabilities, Capabilities.avHardwareDisable, avHardwareDisable
	  
	  </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Показывает, был ли запрещен администратором доступ к камере и микрофону пользователя (значение <codeph class="+ topic/ph pr-d/codeph ">true</codeph>) или нет (значение <codeph class="+ topic/ph pr-d/codeph ">false</codeph>). Строка сервера <codeph class="+ topic/ph pr-d/codeph ">AVD</codeph>.
	 
	 <p class="- topic/p ">В Adobe AIR™ это свойство применяется только к содержимому, находящемуся за пределами изолированной программной среды приложения. Содержимое, находящееся в изолированной программной среде приложения, может всегда обращаться к камере и микрофону пользователя.</p>
 	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.media.xml#Camera/getCamera()" class="- topic/link "><linktext class="- topic/linktext ">flash.media.Camera.getCamera()</linktext></link><link href="flash.media.xml#Microphone/getMicrophone()" class="- topic/link "><linktext class="- topic/linktext ">flash.media.Microphone.getMicrophone()</linktext></link><link href="flash.system.xml#Security/showSettings()" class="- topic/link "><linktext class="- topic/linktext ">Security.showSettings()</linktext></link></related-links></apiValue><apiValue id="flash.system:Capabilities:cpuArchitecture:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">cpuArchitecture</apiName><shortdesc class="- topic/shortdesc ">
	 Определяет текущую архитектуру центрального процессора.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.0.32" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5.1" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><oldexample>The following example traces the value of this read-only property:
	 <pre xml:space="preserve" class="- topic/pre ">
	 trace(Capabilities.cpuArchitecture);
	 </pre>
	  
	 </oldexample></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Определяет текущую архитектуру центрального процессора. Свойство <codeph class="+ topic/ph pr-d/codeph ">cpuArchitecture</codeph> может возвратить следующие строки: <codeph class="+ topic/ph pr-d/codeph ">PowerPC</codeph>, <codeph class="+ topic/ph pr-d/codeph ">x86</codeph>, <codeph class="+ topic/ph pr-d/codeph ">SPARC</codeph> и <codeph class="+ topic/ph pr-d/codeph ">ARM</codeph>. Строка сервера <codeph class="+ topic/ph pr-d/codeph ">ARCH</codeph>.
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.system:Capabilities:hasAccessibility:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">hasAccessibility</apiName><shortdesc class="- topic/shortdesc ">
	 Указывает, поддерживает ли система связь со средствами для обеспечения специальных возможностей (true) или нет (false).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">Capabilities, Capabilities.hasAccessibility, hasAccessibility,
	 accessibility
	  
	  </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Указывает, поддерживает ли система связь со средствами для обеспечения специальных возможностей (<codeph class="+ topic/ph pr-d/codeph ">true</codeph>) или нет (<codeph class="+ topic/ph pr-d/codeph ">false</codeph>). Строка сервера <codeph class="+ topic/ph pr-d/codeph ">ACC</codeph>. 
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.accessibility.xml#Accessibility/active" class="- topic/link "><linktext class="- topic/linktext ">flash.accessibility.Accessibility.active</linktext></link><link href="flash.accessibility.xml#Accessibility/updateProperties()" class="- topic/link "><linktext class="- topic/linktext ">flash.accessibility.Accessibility.updateProperties()</linktext></link></related-links></apiValue><apiValue id="flash.system:Capabilities:hasAudioEncoder:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">hasAudioEncoder</apiName><shortdesc class="- topic/shortdesc ">
	 Показывает, может ли система кодировать аудиопотоки, например данные с микрофона (true), или нет (false).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">Capabilities, Capabilities.hasAudioEncoder, hasAudioEncoder 
	  
	  </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Показывает, может ли система кодировать аудиопотоки, например данные с микрофона (<codeph class="+ topic/ph pr-d/codeph ">true</codeph>), или нет (<codeph class="+ topic/ph pr-d/codeph ">false</codeph>). Строка сервера <codeph class="+ topic/ph pr-d/codeph ">AE</codeph>.
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.system:Capabilities:hasAudio:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">hasAudio</apiName><shortdesc class="- topic/shortdesc ">
	 Указывает, поддерживает ли система воспроизведение аудио.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">Capabilities, Capabilities.hasAudio, hasAudio
	  
	  </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Указывает, поддерживает ли система воспроизведение аудио. Для этого свойства всегда установлено значение<codeph class="+ topic/ph pr-d/codeph ">true</codeph>. Строка сервера <codeph class="+ topic/ph pr-d/codeph ">A</codeph>.
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.system:Capabilities:hasEmbeddedVideo:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">hasEmbeddedVideo</apiName><shortdesc class="- topic/shortdesc ">
	 Указывает, поддерживает ли система внедренное видео (true) или нет (false).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">Capabilities, Capabilities.hasEmbeddedVideo, hasEmbeddedVideo, video
	  
	  </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Указывает, поддерживает ли система внедренное видео (<codeph class="+ topic/ph pr-d/codeph ">true</codeph>) или нет (<codeph class="+ topic/ph pr-d/codeph ">false</codeph>). Строка сервера <codeph class="+ topic/ph pr-d/codeph ">EV</codeph>. 
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.system:Capabilities:hasIME:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">hasIME</apiName><shortdesc class="- topic/shortdesc ">
	 Указывает, установлен ли в системе редактор метода ввода (IME) (true) или нет (false).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">Capabilities, Capabilities.hasIME, hasIME, IME 
	  
	  </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Указывает, установлен ли в системе редактор метода ввода (IME) (<codeph class="+ topic/ph pr-d/codeph ">true</codeph>) или нет (<codeph class="+ topic/ph pr-d/codeph ">false</codeph>). Строка сервера <codeph class="+ topic/ph pr-d/codeph ">IME</codeph>. 
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.system.xml#IME" class="- topic/link "><linktext class="- topic/linktext ">flash.system.IME</linktext></link><link href="flash.system.xml#System/ime" class="- topic/link "><linktext class="- topic/linktext ">flash.system.System.ime</linktext></link></related-links></apiValue><apiValue id="flash.system:Capabilities:hasMP3:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">hasMP3</apiName><shortdesc class="- topic/shortdesc ">
	 Указывает, имеет ли система декодер МР3 (true) или нет (false).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">Capabilities, Capabilities.hasMP3, hasMP3, MP3, audio
	  
	  </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Указывает, имеет ли система декодер МР3 (<codeph class="+ topic/ph pr-d/codeph ">true</codeph>) или нет (<codeph class="+ topic/ph pr-d/codeph ">false</codeph>). Строка сервера <codeph class="+ topic/ph pr-d/codeph ">MP3</codeph>.
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.system:Capabilities:hasPrinting:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">hasPrinting</apiName><shortdesc class="- topic/shortdesc ">
	 Указывает, поддерживает ли система печать (true) или нет (false).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">Capabilities, Capabilities.hasPrinting, hasPrinting, printing 
	  
	  </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Указывает, поддерживает ли система печать (<codeph class="+ topic/ph pr-d/codeph ">true</codeph>) или нет (<codeph class="+ topic/ph pr-d/codeph ">false</codeph>). Строка сервера <codeph class="+ topic/ph pr-d/codeph ">PR</codeph>. 
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.system:Capabilities:hasScreenBroadcast:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">hasScreenBroadcast</apiName><shortdesc class="- topic/shortdesc ">
	 Показывает, поддерживает ли система разработку приложений видеотрансляции для работы через Flash Media Server (true) или нет (false).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">Capabilities, Capabilities.hasScreenBroadcast, hasScreenBroadcast
	  
	  </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Показывает, поддерживает ли система разработку приложений видеотрансляции для работы через Flash Media Server (<codeph class="+ topic/ph pr-d/codeph ">true</codeph>) или нет (<codeph class="+ topic/ph pr-d/codeph ">false</codeph>). Строка сервера <codeph class="+ topic/ph pr-d/codeph ">SB</codeph>.
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.system:Capabilities:hasScreenPlayback:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">hasScreenPlayback</apiName><shortdesc class="- topic/shortdesc ">
	 Показывает, поддерживает ли система воспроизведение приложений видеотрансляции, выполняемых через Flash Media Server (true) или нет (false).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">Capabilities, Capabilities.hasScreenPlayback, hasScreenPlayback
	  
	  </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Показывает, поддерживает ли система воспроизведение приложений видеотрансляции, выполняемых через Flash Media Server (<codeph class="+ topic/ph pr-d/codeph ">true</codeph>) или нет (<codeph class="+ topic/ph pr-d/codeph ">false</codeph>). Строка сервера <codeph class="+ topic/ph pr-d/codeph ">SP</codeph>.
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.system:Capabilities:hasStreamingAudio:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">hasStreamingAudio</apiName><shortdesc class="- topic/shortdesc ">
	 Показывает, поддерживает ли система воспроизведение потокового аудио (true) или нет (false).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">Capabilities, Capabilities.hasStreamingAudio, hasStreamingAudio, audio
	  
	  </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Показывает, поддерживает ли система воспроизведение потокового аудио (<codeph class="+ topic/ph pr-d/codeph ">true</codeph>) или нет (<codeph class="+ topic/ph pr-d/codeph ">false</codeph>). Строка сервера <codeph class="+ topic/ph pr-d/codeph ">SA</codeph>.
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.system:Capabilities:hasStreamingVideo:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">hasStreamingVideo</apiName><shortdesc class="- topic/shortdesc ">
	 Показывает, поддерживает ли система воспроизведение потокового видео (true) или нет (false).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">Capabilities, Capabilities.hasStreamingVideo, hasStreamingVideo, video
	  
	  </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Показывает, поддерживает ли система воспроизведение потокового видео (<codeph class="+ topic/ph pr-d/codeph ">true</codeph>) или нет (<codeph class="+ topic/ph pr-d/codeph ">false</codeph>). Строка сервера <codeph class="+ topic/ph pr-d/codeph ">SV</codeph>.
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.system:Capabilities:hasTLS:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">hasTLS</apiName><shortdesc class="- topic/shortdesc ">
	 Показывает, поддерживает ли система собственные сокеты SSL через NetConnection (true) или нет (false).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">Capabilities, Capabilities.hasTLS, hasTLS, TLS 
	  
	  </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Показывает, поддерживает ли система собственные сокеты SSL через NetConnection (<codeph class="+ topic/ph pr-d/codeph ">true</codeph>) или нет (<codeph class="+ topic/ph pr-d/codeph ">false</codeph>). Строка сервера <codeph class="+ topic/ph pr-d/codeph ">TLS</codeph>.
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.net.xml#NetConnection/connectedProxyType" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetConnection.connectedProxyType</linktext></link><link href="flash.net.xml#NetConnection/proxyType" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetConnection.proxyType</linktext></link><link href="flash.net.xml#NetConnection/usingTLS" class="- topic/link "><linktext class="- topic/linktext ">flash.net.NetConnection.usingTLS</linktext></link></related-links></apiValue><apiValue id="flash.system:Capabilities:hasVideoEncoder:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">hasVideoEncoder</apiName><shortdesc class="- topic/shortdesc ">
	 Показывает, способна ли система кодировать видеопотоки, например данные с web-камеры (true), или нет (false).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">Capabilities, Capabilities.hasVideoEncoder, hasVideoEncoder
	  
	  </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Показывает, способна ли система кодировать видеопотоки, например данные с web-камеры (<codeph class="+ topic/ph pr-d/codeph ">true</codeph>), или нет (<codeph class="+ topic/ph pr-d/codeph ">false</codeph>). Строка сервера <codeph class="+ topic/ph pr-d/codeph ">VE</codeph>.
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.system:Capabilities:isDebugger:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">isDebugger</apiName><shortdesc class="- topic/shortdesc "> 
	 Показывает, является ли система специальной отладочной версией (true) или официально выпущенной версией (false).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">Capabilities, Capabilities.isDebugger, isDebugger, debugging 
	  
	  </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	 Показывает, является ли система специальной отладочной версией (<codeph class="+ topic/ph pr-d/codeph ">true</codeph>) или официально выпущенной версией (<codeph class="+ topic/ph pr-d/codeph ">false</codeph>). Строка сервера <codeph class="+ topic/ph pr-d/codeph ">DEB</codeph>. Это свойство имеет значение <codeph class="+ topic/ph pr-d/codeph ">true</codeph>, когда работает <ph class="- topic/ph ">отладочная версия Flash Player или</ph> AIR Debug Launcher (ADL).
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.system:Capabilities:isEmbeddedInAcrobat:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">isEmbeddedInAcrobat</apiName><shortdesc class="- topic/shortdesc ">
	 Указывает, в какой версии среды выполнения Flash открывается PDF-файл, в который встроен проигрыватель в PDF-файл: в Acrobat 9.0 или более поздней (true) или нет (false).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9.0.127.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">Capabilities, Capabilities.isEmbeddedInAcrobat, isEmbeddedInAcrobat, Acrobat
	  
	  </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Указывает, в какой версии среды выполнения Flash открывается PDF-файл, в который встроен проигрыватель в PDF-файл: в Acrobat 9.0 или более поздней (<codeph class="+ topic/ph pr-d/codeph ">true</codeph>) или нет (<codeph class="+ topic/ph pr-d/codeph ">false</codeph>).
	 
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.system:Capabilities:languages:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">languages</apiName><shortdesc class="- topic/shortdesc ">
		 Массив строк, содержащий сведения о предпочитаемых языках пользовательского интерфейса, заданных в операционной системе.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.1" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Array</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 Массив строк, содержащий сведения о предпочитаемых языках пользовательского интерфейса, заданных в операционной системе. Строки будут содержать теги языков (а также, где это применимо, сведения о сценарии и регионе), определенные в RFC4646 (<xref href="http://www.ietf.org/rfc/rfc4646.txt" scope="external" class="- topic/xref ">http://www.ietf.org/rfc/rfc4646.txt</xref>), и будут использовать дефисы в качестве разделителей (например, <codeph class="+ topic/ph pr-d/codeph ">"en-US"</codeph> или <codeph class="+ topic/ph pr-d/codeph ">"ja-JP"</codeph>). Языки перечисляются в массиве в порядке предпочтения, в соответствии с параметрами операционной системы. 
		 
		 <p class="- topic/p ">Операционные системы отличаются сведениями о регионе, возвращенными строками языковых стандартов. Одна операционная система может возвратить <codeph class="+ topic/ph pr-d/codeph ">en-us</codeph>, а другая — <codeph class="+ topic/ph pr-d/codeph ">en</codeph>.</p>
		 
		 <p class="- topic/p ">Первая запись в возвращенном массиве, как правило, имеет тот же идентификатор основного языка, что и свойство <codeph class="+ topic/ph pr-d/codeph ">Capabilities.language</codeph>. Например, если <codeph class="+ topic/ph pr-d/codeph ">Capabilities.languages[0]</codeph> имеет значение <codeph class="+ topic/ph pr-d/codeph ">en-US</codeph>, то свойство <codeph class="+ topic/ph pr-d/codeph ">language</codeph> имеет значение <codeph class="+ topic/ph pr-d/codeph ">en</codeph>. Однако, если свойство <codeph class="+ topic/ph pr-d/codeph ">Capabilities.language</codeph> имеет значение <codeph class="+ topic/ph pr-d/codeph ">xu</codeph> (указывающее неизвестный язык), то первый элемент в этом массиве будет другим. В связи с этим <codeph class="+ topic/ph pr-d/codeph ">Capabilities.languages[0]</codeph> может указывать более точную информацию, чем <codeph class="+ topic/ph pr-d/codeph ">Capabilities.language</codeph>.</p>
		 
		 <p class="- topic/p ">Строка сервера <codeph class="+ topic/ph pr-d/codeph ">LS</codeph>.</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.system:Capabilities:language:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">language</apiName><shortdesc class="- topic/shortdesc ">
	 Указывает код языка системы, в которой запущено содержимое.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">Capabilities, Capabilities.language, language
	 
	 </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Указывает код языка системы, в которой запущено содержимое. Язык указан как строчная двухсимвольная кодировка ISO 639-1. Для китайского языка предусмотрена дополнительная двухсимвольная национальная кодировка верхнего регистра из ISO 3166, различающая упрощенный и традиционный китайский языки. Обозначения кодировок основаны на английских названиях соответствующих языков, например: <codeph class="+ topic/ph pr-d/codeph ">hu</codeph> обозначает венгерский язык (Hungarian).
	 
	 <p class="- topic/p ">В системах на английском языке это свойство возвращает только код языка (<codeph class="+ topic/ph pr-d/codeph ">en</codeph>), но не код страны. В системах Microsoft Windows это свойство возвращает значение для языка интерфейса пользователя (UI), указывающее, какой язык используется во всех меню, диалоговых окнах, сообщениях об ошибках и файлах справки. В следующей таблице перечислены возможные значения.
	 
     <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry align="left" class="- topic/entry ">Язык</entry><entry align="left" class="- topic/entry ">Значение</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry ">Чешский</entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">cs</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry ">Датский</entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">da</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry ">Голландский</entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">nl</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry ">Английский</entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">en</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry ">Финский</entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">fi</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry ">Французский</entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">fr</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry ">Немецкий</entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">de</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry ">Венгерский</entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">hu</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry ">Итальянский</entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">it</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry ">Японский</entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">ja</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry ">Корейский</entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">ko</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry ">Норвежский</entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">no</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry ">Другой/неизвестен</entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">xu</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry ">Польский</entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">pl</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry ">Португальский</entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">pt</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry ">Русский</entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">ru</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry ">Китайский (упрощенный)</entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">zh-CN</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry ">Испанский</entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">es</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry ">Шведский</entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">sv</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry ">Китайский (традиционный)</entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">zh-TW</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry ">Турецкий</entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">tr</codeph></entry></row></tbody></tgroup></adobetable>
	 </p>
	 
	 <p class="- topic/p "><i class="+ topic/ph hi-d/i ">Примечание.</i> Свойство <codeph class="+ topic/ph pr-d/codeph ">Capabilities.language</codeph> может иметь только те значения, которые перечислены в списке. Вследствие этого ограничения приложения Adobe AIR должны использовать первый элемент в массиве <codeph class="+ topic/ph pr-d/codeph ">Capabilities.languages</codeph> для определения основного языка пользовательского интерфейса в системе. </p>
	 
	 <p class="- topic/p ">Строка сервера <codeph class="+ topic/ph pr-d/codeph ">L</codeph>.</p>
	 
	 </apiDesc><example conref="examples\Capabilities_languageExample.as" class="- topic/example "> В следующем примере отображаемое содержимое зависит от языка операционной системы пользователя.
 
 <p class="- topic/p ">В свойстве <codeph class="+ topic/ph pr-d/codeph ">Capabilities.language</codeph> возвращается код языка по стандарту ISO 639-1 (например, «en» для английского). Инструкция <codeph class="+ topic/ph pr-d/codeph ">switch</codeph> проверяет код языка и устанавливает в качестве содержимого текстового поля <codeph class="+ topic/ph pr-d/codeph ">myTextField</codeph> приветствие, характерное для данного языка. Если код этого языка в данном примере не поддерживается, возвращается строка ошибки по умолчанию.</p>
 
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
package {
    import flash.display.Sprite;
    import flash.text.TextField;
    import flash.text.TextFieldAutoSize;
    import flash.system.Capabilities;

    public class Capabilities_languageExample extends Sprite {

        public function Capabilities_languageExample()  {
            var myTextField:TextField = new TextField();         
            myTextField.x = 10;
            myTextField.y = 10;
            myTextField.background = true;
            myTextField.autoSize = TextFieldAutoSize.LEFT;
            
            var greetingEnglish:String = "Hello World";
            var greetingGerman:String = "Hallo Welt";
            var greetingFrench:String = "Bonjour Monde";
            var greetingSpanish:String = "Hola Mundo";

            var lang:String = Capabilities.language;
                         
            switch (lang) {
                case "en":
                    myTextField.text = greetingEnglish;
                    break;
                case "de":
                    myTextField.text = greetingGerman;
                    break;
                case "fr":
                    myTextField.text = greetingFrench;
                    break;
                case "es":
                    myTextField.text = greetingSpanish;
                    break;
                default:
                    myTextField.text = "Sorry your system's language is not supported at this time.";               
            }
             
            this.addChild(myTextField);
        }
    }
}
</codeblock></example></apiValueDetail><related-links class="- topic/related-links "><link href="flash.system.xml#Capabilities/languages" class="- topic/link "><linktext class="- topic/linktext ">languages</linktext></link></related-links></apiValue><apiValue id="flash.system:Capabilities:localFileReadDisable:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">localFileReadDisable</apiName><shortdesc class="- topic/shortdesc ">
	 Показывает, был ли запрещен администратором доступ к жесткому диску пользователя (значение true) или нет (значение false).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">Capabilities, Capabilities.localFileReadDisable, localFileReadDisable
	  
	  </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Показывает, был ли запрещен администратором доступ к жесткому диску пользователя (значение <codeph class="+ topic/ph pr-d/codeph ">true</codeph>) или нет (значение <codeph class="+ topic/ph pr-d/codeph ">false</codeph>). В Adobe AIR это свойство применяется только к содержимому, находящемуся за пределами изолированной программной среды приложения. (Содержимое в изолированной программной среде приложения всегда может считывать данные в файловой системе.) <ph class="- topic/ph ">Если для этого свойства установлено значение <codeph class="+ topic/ph pr-d/codeph ">true</codeph>, проигрыватель Flash Player не может читать файлы (включая первый файл, с которым запускается проигрыватель Flash Player) с жесткого диска пользователя. </ph> Если это свойство имеет значение <codeph class="+ topic/ph pr-d/codeph ">true</codeph>, содержимое AIR, находящееся за пределами изолированной программной среды приложения, не может считывать файлы с локального жесткого диска. Например, попытки прочитать файл на жестком диске пользователя с помощью методов загрузки завершаться ошибкой, если для этого свойства задано значение <codeph class="+ topic/ph pr-d/codeph ">true</codeph>.
	 
	 <p class="- topic/p ">Чтение общих во время выполнения библиотек также блокируется, если для этого свойства установлено значение <codeph class="+ topic/ph pr-d/codeph ">true</codeph>, но чтение локальных общих библиотек разрешено независимо от значения этого свойства.</p>
	 
	 <p class="- topic/p ">Строка сервера <codeph class="+ topic/ph pr-d/codeph ">LFD</codeph>.</p>
	 
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#Loader" class="- topic/link "><linktext class="- topic/linktext ">flash.display.Loader</linktext></link></related-links></apiValue><apiValue id="flash.system:Capabilities:manufacturer:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">manufacturer</apiName><shortdesc class="- topic/shortdesc ">
	 Указывает производителя работающей версии Flash Player или среды выполнения AIR в формате «Adobe OSName».</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">Capabilities, Capabilities.manufacturer, manufacturer
	  
	  </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Указывает производителя <ph class="- topic/ph ">работающей версии Flash Player</ph> или среды выполнения AIR в формате <codeph class="+ topic/ph pr-d/codeph ">«Adobe</codeph> <codeph class="+ topic/ph pr-d/codeph "><i class="+ topic/ph hi-d/i ">OSName</i>»</codeph>. Значением для <codeph class="+ topic/ph pr-d/codeph "><i class="+ topic/ph hi-d/i ">OSName</i></codeph> могут быть <codeph class="+ topic/ph pr-d/codeph ">Windows</codeph>, <codeph class="+ topic/ph pr-d/codeph ">Macintosh</codeph>, <codeph class="+ topic/ph pr-d/codeph ">Linux</codeph> или название другой операционной системы. Строка сервера <codeph class="+ topic/ph pr-d/codeph ">M</codeph>.
	 
	 <p class="- topic/p "><i class="+ topic/ph hi-d/i ">Не</i> используйте <codeph class="+ topic/ph pr-d/codeph ">Capabilities.manufacturer</codeph> для определения возможности на основе операционной системы, если существует более конкретное свойство, соответствующее возможности. Создание функций на основе одной операционной системы не рекомендуется, так как это может привести к проблемам, если в приложении не рассмотрены все потенциальные целевые операционные системы. Вместо этого используйте свойство, соответствующее функции, для которой выполняется тестирование. Дополнительные сведения см. в описании класса Capabilities.</p>
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.system:Capabilities:maxLevelIDC:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">maxLevelIDC</apiName><shortdesc class="- topic/shortdesc ">
     Извлечение самого высокого уровня IDC H.264, поддерживаемого оборудованием клиента.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">Capabilities, Capabilities.maxLevelIDC, maxLevelIDC
      
      </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Извлечение самого высокого уровня IDC H.264, поддерживаемого оборудованием клиента. На этом уровне носитель будет гарантированно запущен; однако носитель, запущенный на более высоком уровне, может выполняться с более низким качеством. Это свойство необходимо для серверов, на которых предпринимается попытка получения сведений о возможностях клиента. С помощью этого свойства сервер может определить уровень видео, переданного клиенту.
     
     <p class="- topic/p ">Серверной строкой является <codeph class="+ topic/ph pr-d/codeph ">ML</codeph>.</p>
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.system:Capabilities:os:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">os</apiName><shortdesc class="- topic/shortdesc ">
	 Указывает текущую операционную систему.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">Capabilities, Capabilities.os, os
	  
	  </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Указывает текущую операционную систему. Свойство <codeph class="+ topic/ph pr-d/codeph ">os</codeph> может возвращать следующие строки:
	
	<adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Операционная система</entry><entry class="- topic/entry ">Значение</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry ">Windows 7</entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"Windows 7"</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry ">Windows Vista</entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"Windows Vista"</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry ">Windows Server 2008 R2</entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"Windows Server 2008 R2"</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry ">Windows Server 2008</entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"Windows Server 2008"</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry ">Windows Home Server</entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"Windows Home Server"</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry ">Windows Server 2003 R2</entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"Windows Server 2003 R2"</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry ">Windows Server 2003</entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"Windows Server 2003"</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry ">Windows XP 64</entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"Windows Server XP 64"</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry ">Windows XP</entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"Windows XP"</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry ">Windows 98</entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"Windows 98"</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry ">Windows 95</entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"Windows 95"</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry ">Windows NT</entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"Windows NT"</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry ">Windows 2000</entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"Windows 2000"</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry ">Windows ME</entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"Windows ME"</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry ">Windows CE</entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"Windows CE"</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry ">Windows SmartPhone</entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"Windows SmartPhone"</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry ">Windows PocketPC</entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"Windows PocketPC"</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry ">Windows CEPC</entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"Windows CEPC"</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry ">Windows Mobile</entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"Windows Mobile"</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry ">Mac OS</entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"Mac OS X.Y.Z"</codeph> (где X.Y.Z обозначает номер версии, например <codeph class="+ topic/ph pr-d/codeph ">"Mac OS 10.5.2"</codeph>)</entry></row><row class="- topic/row "><entry class="- topic/entry ">Linux</entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"Linux"</codeph> (Flash Player подключает версию Linux, например <codeph class="+ topic/ph pr-d/codeph ">"Linux 2.6.15-1.2054_FC5smp"</codeph></entry></row><row class="- topic/row "><entry class="- topic/entry ">iPhone OS 4.1</entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">"iPhone3,1"</codeph></entry></row></tbody></tgroup></adobetable>
	
	 <p class="- topic/p ">Строка сервера <codeph class="+ topic/ph pr-d/codeph ">OS</codeph>.</p>
	 
	 <p class="- topic/p "><i class="+ topic/ph hi-d/i ">Не</i> используйте <codeph class="+ topic/ph pr-d/codeph ">Capabilities.os</codeph> для определения возможности на основе операционной системы, если существует более конкретное свойство, соответствующее функции. Создание функций на основе одной операционной системы не рекомендуется, так как это может привести к проблемам, если в приложении не рассмотрены все потенциальные целевые операционные системы. Вместо этого используйте свойство, соответствующее функции, для которой выполняется тестирование. Дополнительные сведения см. в описании класса Capabilities.</p>
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.system:Capabilities:pixelAspectRatio:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">pixelAspectRatio</apiName><shortdesc class="- topic/shortdesc "> 
	 Задает пропорции экрана в пикселях.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">Capabilities, Capabilities.pixelAspectRatio, pixelAspectRatio
	  
	  </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	 Задает пропорции экрана в пикселях. Строка сервера <codeph class="+ topic/ph pr-d/codeph ">AR</codeph>.
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.system:Capabilities:playerType:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">playerType</apiName><shortdesc class="- topic/shortdesc ">
	 Указывает тип среды выполнения.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">Capabilities, Capabilities.playerType, playerType
	  
	  </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Указывает тип среды выполнения. Это свойство может иметь одно из следующих значений.
	 
	 <ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">ActiveX</codeph> для управляющего элемента ActiveX с проигрывателем Flash Player, используемого в Microsoft Internet Explorer</li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">Desktop</codeph> для среды выполнения Adobe AIR (за исключением SWF-содержимого, загруженного HTML-страницей, со свойством <codeph class="+ topic/ph pr-d/codeph ">Capabilities.playerType</codeph> в значении <codeph class="+ topic/ph pr-d/codeph ">PlugIn</codeph>)</li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">External</codeph> для внешнего проигрывателя Flash Player<ph outputclass="flashonly" class="- topic/ph "> или для работы в режиме тестирования</ph></li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">PlugIn</codeph> для внешнего модуля браузера Flash Player (и для SWF-содержимого, загруженного HTML-страницей в приложении AIR)</li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">StandAlone</codeph> для автономного проигрывателя Flash Player</li></ul>
	 <p class="- topic/p ">Строка сервера <codeph class="+ topic/ph pr-d/codeph ">PT</codeph>.</p>
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.system:Capabilities:screenColor:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">screenColor</apiName><shortdesc class="- topic/shortdesc ">
	 Задает цвет экрана.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">Capabilities, Capabilities.screenColor, screenColor
	  
	  </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Задает цвет экрана. Это свойство может иметь значение <codeph class="+ topic/ph pr-d/codeph ">color</codeph>, <codeph class="+ topic/ph pr-d/codeph ">gray</codeph> (для изображения в оттенках серого) или <codeph class="+ topic/ph pr-d/codeph ">bw</codeph> (для черно-белого изображения). Строка сервера <codeph class="+ topic/ph pr-d/codeph ">COL</codeph>.
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.system:Capabilities:screenDPI:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">screenDPI</apiName><shortdesc class="- topic/shortdesc ">
	 Задает разрешение dpi (точек на дюйм) экрана в пикселях.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">Capabilities, Capabilities.screenDPI, screenDPI
	  
	  </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Задает разрешение dpi (точек на дюйм) экрана в пикселях. Строка сервера <codeph class="+ topic/ph pr-d/codeph ">DP</codeph>.
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.system:Capabilities:screenResolutionX:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">screenResolutionX</apiName><shortdesc class="- topic/shortdesc ">
	 Задает максимальное разрешение экрана по горизонтали.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">Capabilities, Capabilities.screenResolutionX, screenResolutionY
	 </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Задает максимальное разрешение экрана по горизонтали. Строка сервера <codeph class="+ topic/ph pr-d/codeph ">R</codeph> (возвращает значения как для ширины, так и для высоты экрана). Это свойство не обновляется пользовательским значением разрешения экрана, а только показывает разрешение в момент запуска проигрывателя <ph class="- topic/ph ">Flash Player или</ph> приложения Adobe AIR. Кроме того, это значение указывает характеристики только для основного экрана.
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.system:Capabilities:screenResolutionY:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">screenResolutionY</apiName><shortdesc class="- topic/shortdesc "> 
	 Задает максимальное разрешение экрана по вертикали.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">Capabilities, Capabilities.screenResolutionY, screenResolutionY
	 </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	 Задает максимальное разрешение экрана по вертикали. Строка сервера <codeph class="+ topic/ph pr-d/codeph ">R</codeph> (возвращает значения как для ширины, так и для высоты экрана). Это свойство не обновляется пользовательским значением разрешения экрана, а только показывает разрешение в момент запуска проигрывателя <ph class="- topic/ph ">Flash Player или</ph> приложения Adobe AIR. Кроме того, это значение указывает характеристики только для основного экрана.
	 
	 </apiDesc><example conref="examples\Capabilities_ScreenRes.as" class="- topic/example "> Следующий пример представляет собой простой тест, отображающий текущее разрешение экрана и версию операционной системы. При тестировании этого примера щелкните текстовое поле, чтобы увидеть значения свойств:
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
import flash.events.~;
import flash.display.~;
import flash.system.Capabilities;
import flash.text.TextField;

var screenInfoTxt:TextField = new TextField();
var screenInfoTxt.x = 30;
var screenInfoTxt.y = 50;
var screenInfoTxt.width = 300;
var screenInfoTxt.height = 100;
var screenInfoTxt.border = true;

addChild(screenInfoTxt);

addEventListener(MouseEvent.CLICK, getScreenNVersion);

function getScreenNVersion(e:MouseEvent):void{
    screenInfoTxt.text= "flash.system.Capabilities.screenResolutionX is : " + String(flash.system.Capabilities.screenResolutionX) + "\n" +
    "flash.system.Capabilities.screenResolutionY is : " + String(flash.system.Capabilities.screenResolutionY) + "\n" +
    "flash.system.Capabilities.version is : " + flash.system.Capabilities.version;
}
</codeblock></example></apiValueDetail></apiValue><apiValue id="flash.system:Capabilities:serverString:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">serverString</apiName><shortdesc class="- topic/shortdesc "> 
	 Строка в кодировке URL, задающая значения для каждого свойства Capabilities.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">Capabilities, Capabilities.serverString, serverString
	  
	  </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	 Строка в кодировке URL, задающая значения для каждого свойства Capabilities.
	 
	 <p class="- topic/p ">В следующем примере показана закодированная в URL строка:
	 <pre xml:space="preserve" class="- topic/pre ">A=t&amp;SA=t&amp;SV=t&amp;EV=t&amp;MP3=t&amp;AE=t&amp;VE=t&amp;ACC=f&amp;PR=t&amp;SP=t&amp;
	 SB=f&amp;DEB=t&amp;V=WIN%208%2C5%2C0%2C208&amp;M=Adobe%20Windows&amp;
	 R=1600x1200&amp;DP=72&amp;COL=color&amp;AR=1.0&amp;OS=Windows%20XP&amp;
	 L=en&amp;PT=External&amp;AVD=f&amp;LFD=f&amp;WD=f</pre></p>
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.system:Capabilities:supports32BitProcesses:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">supports32BitProcesses</apiName><shortdesc class="- topic/shortdesc ">
	Показывает, поддерживает ли система выполнение 32-разрядных процессов.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.0.32" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5.2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><oldexample>The following example traces the value of this read-only property:
	<pre xml:space="preserve" class="- topic/pre ">
	trace(Capabilities.supports32BitProcesses);
	</pre>
	 
	</oldexample></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Показывает, поддерживает ли система выполнение 32-разрядных процессов. Строка сервера <codeph class="+ topic/ph pr-d/codeph ">PR32</codeph>.
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.system:Capabilities:supports64BitProcesses:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">supports64BitProcesses</apiName><shortdesc class="- topic/shortdesc ">
	Показывает, поддерживает ли система выполнение 64-разрядных процессов.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.0.32" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5.2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><oldexample>The following example traces the value of this read-only property:
	<pre xml:space="preserve" class="- topic/pre ">
	trace(Capabilities.supports64BitProcesses);
	</pre>
	 
	</oldexample></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Показывает, поддерживает ли система выполнение 64-разрядных процессов. Строка сервера <codeph class="+ topic/ph pr-d/codeph ">PR64</codeph>.
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.system:Capabilities:touchscreenType:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">touchscreenType</apiName><shortdesc class="- topic/shortdesc ">
	 Определяет тип поддерживаемого сенсорного экрана, если он имеется.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Определяет тип поддерживаемого сенсорного экрана, если он имеется. Значения определяются в классе flash.system.TouchscreenType.
	 
	 </apiDesc><example conref="examples\Capabilities_touchScreenType.as" class="- topic/example "> Следующий пример представляет собой простой тест, отображающий текущий тип сенсорного экрана. При тестировании этого примера щелкните текстовое поле, чтобы увидеть значения свойств:
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
import flash.events.~~;
import flash.display.~~;
import flash.system.Capabilities;
import flash.text.TextField;

var capabilitiesTouchScreenTypeTxt:TextField = new TextField();
capabilitiesTouchScreenTypeTxt.width = 300;
capabilitiesTouchScreenTypeTxt.border = true;

addChild(capabilitiesTouchScreenTypeTxt);

addEventListener(MouseEvent.CLICK, getScreenKeyboardType);

function getScreenKeyboardType(e:MouseEvent):void{
    capabilitiesTouchScreenTypeTxt.text= "flash.system.Capabilities.touchscreenType is : " + flash.system.Capabilities.touchscreenType;
}
</codeblock></example></apiValueDetail><related-links class="- topic/related-links "><link href="flash.system.xml#TouchscreenType" class="- topic/link "><linktext class="- topic/linktext ">Класс TouchscreenType</linktext></link><link href="flash.ui.xml#Mouse/supportsCursor" class="- topic/link "><linktext class="- topic/linktext ">flash.ui.Mouse.supportsCursor</linktext></link></related-links></apiValue><apiValue id="flash.system:Capabilities:version:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">version</apiName><shortdesc class="- topic/shortdesc "> 
	 Показывает сведения о платформе и версии Flash Player или Adobe&amp;#xAE; AIR&amp;#xAE;.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">Capabilities, Capabilities.version, version
	  
	  </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	 Показывает сведения о платформе и версии Flash Player или Adobe<sup class="+ topic/ph hi-d/sup ">®</sup> AIR<sup class="+ topic/ph hi-d/sup ">®</sup>. Номер версии имеет следующий формат: <i class="+ topic/ph hi-d/i ">platform majorVersion, minorVersion, buildNumber, internalBuildNumber</i>. Возможные значения для <i class="+ topic/ph hi-d/i ">platform</i>: <codeph class="+ topic/ph pr-d/codeph ">"WIN"</codeph>, <codeph class="+ topic/ph pr-d/codeph ">"MAC"</codeph>, <codeph class="+ topic/ph pr-d/codeph ">"LNX"</codeph> и <codeph class="+ topic/ph pr-d/codeph ">"AND"</codeph>. Вот несколько примеров информации о версии.
	 
	 <pre xml:space="preserve" class="- topic/pre ">
	 WIN 9,0,0,0  // Flash Player 9 for Windows
	 MAC 7,0,25,0   // Flash Player 7 for Macintosh
	 LNX 9,0,115,0  // Flash Player 9 for Linux
	 AND 10,2,150,0 // Flash Player 10 for Android
	 </pre>
	 
	 <p class="- topic/p "><i class="+ topic/ph hi-d/i ">Не</i> используйте <codeph class="+ topic/ph pr-d/codeph ">Capabilities.version</codeph> для определения возможности на основе операционной системы, если существует более конкретное свойство, соответствующее возможности. Создание функций на основе одной операционной системы не рекомендуется, так как это может привести к проблемам, если в приложении не рассмотрены все потенциальные целевые операционные системы. Вместо этого используйте свойство, соответствующее функции, для которой выполняется тестирование. Дополнительные сведения см. в описании класса Capabilities.</p>
	 
	 <p class="- topic/p ">Строка сервера <codeph class="+ topic/ph pr-d/codeph ">V</codeph>.</p>
	 
	 </apiDesc><example conref="examples\Capabilities_ScreenRes.as" class="- topic/example "> Следующий пример представляет собой простой тест, отображающий текущее разрешение экрана и версию операционной системы. При тестировании этого примера щелкните текстовое поле, чтобы увидеть значения свойств:
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
import flash.events.~;
import flash.display.~;
import flash.system.Capabilities;
import flash.text.TextField;

var screenInfoTxt:TextField = new TextField();
var screenInfoTxt.x = 30;
var screenInfoTxt.y = 50;
var screenInfoTxt.width = 300;
var screenInfoTxt.height = 100;
var screenInfoTxt.border = true;

addChild(screenInfoTxt);

addEventListener(MouseEvent.CLICK, getScreenNVersion);

function getScreenNVersion(e:MouseEvent):void{
    screenInfoTxt.text= "flash.system.Capabilities.screenResolutionX is : " + String(flash.system.Capabilities.screenResolutionX) + "\n" +
    "flash.system.Capabilities.screenResolutionY is : " + String(flash.system.Capabilities.screenResolutionY) + "\n" +
    "flash.system.Capabilities.version is : " + flash.system.Capabilities.version;
}
</codeblock></example></apiValueDetail></apiValue></apiClassifier><apiOperation id="globalOperation:flash.system:fscommand" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">fscommand</apiName><shortdesc class="- topic/shortdesc ">
 Обеспечивает взаимодействие SWF-файла с проигрывателем Flash Player или программой, содержащей Flash Player, например web-браузером.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><oldexample><p class="- topic/p ">In the following example, the <code>fscommand()</code> function sets Flash Player to 
 scale the SWF file to the full monitor screen size when the <code>fullscreen_btn</code> button or 
 <code>unfullscreen_btn</code> is released:</p>
 
 <pre xml:space="preserve" class="- topic/pre ">this.fullscreen_btn.onRelease = function() {
   fscommand("fullscreen", true);
 };
 this.unfullscreen_btn.onRelease = function() {
   fscommand("fullscreen", false);
 };
 </pre>
 
 <p class="- topic/p ">The following example uses the <code>fscommand()</code> function applied to a button in Flash to 
 open a JavaScript message box in an HTML page. The message itself is sent to JavaScript as the 
 <code>fscommand</code> parameter. </p>
 
 <p class="- topic/p ">You must add a function to the HTML page that contains the SWF file. This function, 
 <code><i class="+ topic/ph hi-d/i ">myDocument</i></code><code>_DoFSCommand</code>, sits in the HTML page and waits for an 
 <code>fscommand()</code> function in Flash. When an <code>fscommand</code> is triggered in Flash 
 (for example, when a user presses the button), the <code>command</code> and <code>args</code> strings 
 are passed to the <code><i class="+ topic/ph hi-d/i ">myDocument</i></code><code>_DoFSCommand </code>function. You can use the 
 passed strings in your JavaScript or VBScript code in any way you like. In this example, the function 
 contains a conditional <code>if</code> statement that checks to see if the command string is 
 "<code>messagebox</code>". If it is, a JavaScript alert box (or "message box") opens 
 and displays the contents of the <code>args</code> string.</p>
 
 <pre xml:space="preserve" class="- topic/pre ">function myDocument_DoFSCommand(command, args) {
   if (command == "messagebox") {
      alert(args);
   }
 
 </pre>
 
 <p class="- topic/p ">In the Flash document, add the <code>fscommand()</code> function to a button:</p>
 
 <pre xml:space="preserve" class="- topic/pre ">fscommand("messagebox", "This is a message box called from within Flash.")
 </pre>
 
 <p class="- topic/p ">You can also use expressions for the <code>fscommand()</code> function and parameters, as in the 
 following example:</p>
 
 <pre xml:space="preserve" class="- topic/pre ">fscommand("messagebox", "Hello, " + name + ", welcome to our website!")
 </pre>
 
 <p class="- topic/p ">To test the SWF file, select File > Publish Preview > HTML.</p>
 
 <p class="- topic/p "><strong>Note: </strong>If you publish your SWF file using the Flash with FSCommand template in the 
 HTML 
 tab of the Publish Settings dialog box, the <code>myDocument_DoFSCommand</code> function is inserted 
 automatically. The SWF file's <code>NAME</code> and <code>ID</code> attributes will be the filename. 
 For example, for the file myDocument.fla, the attributes would be set to <code>myDocument</code>.</p>
 </oldexample></asCustoms></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Если вызов функции не выполняется в ответ на действие пользователя, например событие мыши или нажатие клавиши.
 
 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">Error</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Error</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">command</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Строка, переданная главному приложению в различных целях, или команда, переданная проигрывателю Flash Player.
 
 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">args</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData "/><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Строка, переданная главному приложению в различных целях, или значение, переданное проигрывателю Flash Player.
 
 </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Обеспечивает взаимодействие SWF-файла с проигрывателем Flash Player или программой, содержащей Flash Player, например web-браузером. Чтобы передавать сообщения в Director или в Visual Basic, Visual C++ и другие программы, способные вмещать управляющие элементы ActiveX, можно также использовать функцию <codeph class="+ topic/ph pr-d/codeph ">fscommand()</codeph>.
 
  
 <p class="- topic/p ">Функция <codeph class="+ topic/ph pr-d/codeph ">fscommand()</codeph> обеспечивает взаимодействие SWF-файла со сценарием на web-странице. Но доступ к сценариям контролируется параметрами <codeph class="+ topic/ph pr-d/codeph ">allowScriptAccess</codeph> для web-страниц. (Этот атрибут устанавливается в коде HTML, встроенном в SWF-файл. Например, в тег <codeph class="+ topic/ph pr-d/codeph ">PARAM</codeph> для Internet Explorer или тег <codeph class="+ topic/ph pr-d/codeph ">EMBED</codeph> для Netscape.) </p>
  <ul class="- topic/ul "><li class="- topic/li "> Если свойство <codeph class="+ topic/ph pr-d/codeph ">allowScriptAccess</codeph> имеет значение <codeph class="+ topic/ph pr-d/codeph ">sameDomain</codeph> (по умолчанию), работа со сценариями разрешена только для SWF-файлов, находящихся в том же домене, что и web-страница. </li><li class="- topic/li "> Если свойство <codeph class="+ topic/ph pr-d/codeph ">allowScriptAccess</codeph> имеет значение <codeph class="+ topic/ph pr-d/codeph ">always</codeph>, SWF-может обращаться к HTML-странице, в которую он встроен, даже если он находится на другом домене. </li><li class="- topic/li ">Если свойство <codeph class="+ topic/ph pr-d/codeph ">allowScriptAccess</codeph> имеет значение <codeph class="+ topic/ph pr-d/codeph ">never</codeph>, SWF-файл не может обращаться ни к каким HTML-страницам. Обратите внимание, что использование этого значения не рекомендуется. Оно не требуется, если в вашем собственном домене не обслуживаются недоверенные SWF-файлы. В случае необходимости обслуживать недоверенный SWF-файлы Adobe рекомендует создать отдельный субдомен, на который следует помещать все недоверенное содержимое. </li></ul>
 
 <p class="- topic/p ">Можно запретить использование SWF-файлом этого метода путем установки параметра <codeph class="+ topic/ph pr-d/codeph ">allowNetworking</codeph> для тегов <codeph class="+ topic/ph pr-d/codeph ">object</codeph> и <codeph class="+ topic/ph pr-d/codeph ">embed</codeph> на странице HTML, содержащей SWF-содержимое. </p>
 
 <p class="- topic/p ">Функция <codeph class="+ topic/ph pr-d/codeph ">fscommand()</codeph> не разрешена, если вызывающий SWF-файл находится вне локальной файловой системы или изолированной сетевой среды, а содержащая его страница HTML находится не в доверенной изолированной среде.</p>
 
 <p class="- topic/p ">Дополнительные сведения о безопасности см. в разделе центра разработчиков Flash Player <xref href="http://www.adobe.com/go/devnet_security_ru" scope="external" class="- topic/xref ">Безопасность</xref>.</p>
 
 <p class="- topic/p ">Применение 1: чтобы использовать функцию <codeph class="+ topic/ph pr-d/codeph ">fscommand()</codeph> для отправки сообщения проигрывателю Flash Player, необходимо использовать предварительно определенные команды и параметры. В следующей таблице показаны значения, которые можно указать для передаваемых с функцией <codeph class="+ topic/ph pr-d/codeph ">fscommand()</codeph> параметров <codeph class="+ topic/ph pr-d/codeph ">command</codeph> и <codeph class="+ topic/ph pr-d/codeph ">args</codeph>. Эти значения управляют SWF-файлам, воспроизводимыми в проигрывателе Flash Player, включая проекторы. (<i class="+ topic/ph hi-d/i ">Проектором</i> называют SWF-файл, сохраненный в формате, который позволяет выполнять его в автономном приложении, то есть, не используя проигрыватель Flash Player.)</p>
 
              <adobetable class="innertable"><tgroup cols="3" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Команда</entry><entry class="- topic/entry ">Параметр (args)</entry><entry class="- topic/entry ">Цель</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">quit</codeph></entry><entry class="- topic/entry ">Не задан</entry><entry class="- topic/entry ">Закрывает проектор.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">fullscreen</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> или <codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry><entry class="- topic/entry ">Установка значения <codeph class="+ topic/ph pr-d/codeph ">true</codeph> переводит проигрыватель Flash Player в полноэкранный режим работы. Установка значения <codeph class="+ topic/ph pr-d/codeph ">false</codeph> возвращает проигрыватель в обычный режим работы с отображением меню.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">allowscale</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> или <codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry><entry class="- topic/entry ">Установка значения <codeph class="+ topic/ph pr-d/codeph ">false</codeph> задает режим проигрывателя, в котором SWF-файл всегда воспроизводится в окне исходного размера и никогда не масштабируется. Установка значения <codeph class="+ topic/ph pr-d/codeph ">true</codeph> заставляет SWF-файл масштабироваться в проигрывателе до 100%.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">showmenu</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> или <codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry><entry class="- topic/entry ">Установка значения <codeph class="+ topic/ph pr-d/codeph ">true</codeph> включает полный набор команд в контекстное меню. Установка значения <codeph class="+ topic/ph pr-d/codeph ">false</codeph> скрывает все команды контекстного меню, за исключением пунктов «О Flash Player» и «Параметры».</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">exec</codeph></entry><entry class="- topic/entry ">Путь к приложению </entry><entry class="- topic/entry ">Выполняет приложение из проектора.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">trapallkeys</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">true</codeph> или <codeph class="+ topic/ph pr-d/codeph ">false</codeph></entry><entry class="- topic/entry ">Установка значения <codeph class="+ topic/ph pr-d/codeph ">true</codeph> отправляет все связанные с клавишами события, включая клавиши быстрого вызова, обработчику <codeph class="+ topic/ph pr-d/codeph ">onClipEvent(keyDown/keyUp)</codeph> в проигрывателе Flash Player. </entry></row></tbody></tgroup></adobetable>
 <p class="- topic/p ">Не все из перечисленных в таблице команд доступны во всех приложениях. 
 <ul class="- topic/ul "><li class="- topic/li ">Ни одна из этих команд не доступна в веб-проигрывателях.</li><li class="- topic/li ">Все команды доступны в автономных приложениях проектора.</li><li class="- topic/li ">Приложения AIR должны использовать класс flash.desktop.NativeApplication для аналогичных функций, таких как <codeph class="+ topic/ph pr-d/codeph ">NativeApplication.nativeApplication.exit()</codeph> вместо <codeph class="+ topic/ph pr-d/codeph ">fscommand("quit")</codeph>.</li><li class="- topic/li ">Только команды <codeph class="+ topic/ph pr-d/codeph ">allowscale</codeph> и <codeph class="+ topic/ph pr-d/codeph ">exec</codeph> доступны в проигрывателях тестовых роликов.</li></ul>
 </p>
 
 <p class="- topic/p ">Команда <codeph class="+ topic/ph pr-d/codeph ">exec</codeph> может содержать только символы A-Z, a-z, 0-9, точку (.) и подчеркивание (_). Команда <codeph class="+ topic/ph pr-d/codeph ">exec</codeph> выполняется только в подкаталоге fscommand. Другими словами, если для вызова приложения используется команда <codeph class="+ topic/ph pr-d/codeph ">exec</codeph>, это приложение должно находиться в подкаталоге с названием fscommand. Команда <codeph class="+ topic/ph pr-d/codeph ">exec</codeph> работает только из файла проектора Adobe Flash.</p>
 
 <p class="- topic/p ">Применение 2: чтобы использовать функцию <codeph class="+ topic/ph pr-d/codeph ">fscommand()</codeph> для отправки сообщения с использованием языка сценариев, например JavaScript в web-браузере, можно передать любые два параметра с помощью параметров <codeph class="+ topic/ph pr-d/codeph ">command</codeph> и <codeph class="+ topic/ph pr-d/codeph ">args</codeph>. Эти параметры могут быть строками или выражениями, они используются в функции JavaScript, которая обрабатывает или <i class="+ topic/ph hi-d/i ">перехватывает</i> функцию <codeph class="+ topic/ph pr-d/codeph ">fscommand()</codeph>. </p>
 
 <p class="- topic/p ">В web-браузере функция <codeph class="+ topic/ph pr-d/codeph ">fscommand()</codeph> вызывает функцию JavaScript <codeph class="+ topic/ph pr-d/codeph ">moviename_DoFScommand</codeph>, которая находится на web-странице, содержащей SWF-файл. Для <codeph class="+ topic/ph pr-d/codeph ">moviename</codeph> укажите имя объекта Adobe Flash, используемого в качестве атрибута <codeph class="+ topic/ph pr-d/codeph ">NAME</codeph> для тега <codeph class="+ topic/ph pr-d/codeph ">EMBED</codeph> или свойства ID тега <codeph class="+ topic/ph pr-d/codeph ">OBJECT</codeph>. Если SWF-файлу назначается имя myMovie, вызывается функция JavaScript <codeph class="+ topic/ph pr-d/codeph ">myMovie_DoFScommand</codeph>. </p>
 
 <p class="- topic/p ">На web-странице, содержащей SWF-файл, установите атрибут <codeph class="+ topic/ph pr-d/codeph ">allowScriptAccess</codeph>, разрешив или запретив возможность доступа к web-странице из этого SWF-файла, как описано выше. (Этот атрибут устанавливается в коде HTML, встроенном в SWF-файл. Например, в тег <codeph class="+ topic/ph pr-d/codeph ">PARAM</codeph> для Internet Explorer или тег <codeph class="+ topic/ph pr-d/codeph ">EMBED</codeph> для Netscape.) </p>
 
 <p class="- topic/p ">В приложении Flash Player версии 10 и старше, запущенном в браузере, при использовании этого метода в программных средствах открытие всплывающего окна может не выполняться. Различные браузеры (и конфигурации браузеров) могут блокировать всплывающие окна в любое время; невозможно гарантировать, что какое-либо всплывающее окно будет отображаться. Однако для повышения вероятности открытия всплывающего окна используйте этот метод только в коде, который выполняется в качестве непосредственного результата действия пользователя (например, в обработчике событий для события щелчка мышью или нажатия клавиши).</p>
 
 <p class="- topic/p ">Применение 3: функция <codeph class="+ topic/ph pr-d/codeph ">fscommand()</codeph> может отправлять сообщения в программу Director (Adobe Macromedia Director). Эти сообщения интерпретируются в Lingo (языке сценариев, используемом в Director) как строки, события или выполняемый код Lingo. Если сообщение является строкой или событием, необходимо написать код Lingo для получения сообщения из функции <codeph class="+ topic/ph pr-d/codeph ">fscommand()</codeph> и выполнить это действие в Director. Дополнительные сведения см. в центре поддержки Director по адресу <xref href="http://www.adobe.com/support/director/" scope="external" class="- topic/xref ">www.adobe.com/support/director/</xref>.</p>
 
 <p class="- topic/p ">Применение 4: в VisualBasic, Visual C++ и других программах, в которых можно размещать управляющие элементы ActiveX, функция <codeph class="+ topic/ph pr-d/codeph ">fscommand()</codeph> отправляет событие VB с двумя строками, которые могут обрабатываться языком программирования, используемом в среде. Дополнительные сведения можно найти по ключевым словам «Flash method» в центре поддержки Adobe Flash по адресу <xref href="http://www.adobe.com/support/flash/" scope="external" class="- topic/xref ">www.adobe.com/support/flash/</xref>.</p>
 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Примечание.</b> Класс ExternalInterface обеспечивает лучшую функциональность для взаимодействия между JavaScript и ActionScript (применение 2), а также между ActionScript и VisualBasic, Visual C++ или другими программами, которые могут содержать управляющие элементы ActiveX (применение 4). Необходимо продолжать использовать функцию <codeph class="+ topic/ph pr-d/codeph ">fscommand()</codeph> для отправки сообщений в проигрыватель Flash Player (применение 1) и программу Director (применение 3).</p>
 
 </apiDesc><example conref="examples\FSCommandExample.as" class="- topic/example "> В следующем примере показано, как функция <codeph class="+ topic/ph pr-d/codeph ">fscommand()</codeph> может использоваться для перевода проигрывателя Flash Player в полноэкранный режим работы и разрешения масштабирования. Затем к рабочей области добавляется оранжевый прямоугольник с помощью метода<codeph class="+ topic/ph pr-d/codeph ">draw()</codeph>. В методе <codeph class="+ topic/ph pr-d/codeph ">draw()</codeph>, добавляется прослушиватель события <codeph class="+ topic/ph pr-d/codeph ">click</codeph> с именем <codeph class="+ topic/ph pr-d/codeph ">clickHandler()</codeph>, который реагирует на события <codeph class="+ topic/ph pr-d/codeph ">click</codeph>, вызывая завершение работы Flash Player с помощью другого обращения к функции <codeph class="+ topic/ph pr-d/codeph ">fscommand().</codeph>
 
 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Примечание. </b> Этот пример должен выполняться в автономном проигрывателе Flash Player, но не в web-браузере.</p>
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
package {
    import flash.display.Sprite;
    import flash.text.TextField;
    import flash.system.fscommand;
    import flash.events.MouseEvent;

    public class FSCommandExample extends Sprite {
        private var bgColor:uint = 0xFFCC00;
        private var size:uint = 100;

        public function FSCommandExample() {
            fscommand("fullscreen", "true");
            fscommand("allowscale", "false");
            draw();
        }

        private function clickHandler(event:MouseEvent):void {
            fscommand("quit");
            trace("clickHandler");
        }

        private function draw():void {
            var child:Sprite = new Sprite();
            child.graphics.beginFill(bgColor);
            child.graphics.drawRect(0, 0, size, size);
            child.graphics.endFill();
            child.buttonMode = true;
            addEventListener(MouseEvent.CLICK, clickHandler);

            var label:TextField = new TextField();
            label.text = "quit";
            label.selectable = false;
            label.mouseEnabled = false;
            child.addChild(label);

            addChild(child);
        }
    }
}
</codeblock></example></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.desktop.xml#NativeApplication" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.NativeApplication</linktext></link></related-links></apiOperation><apiClassifier languages="" id="flash.system:IME" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">IME</apiName><shortdesc class="- topic/shortdesc ">
 Класс IME позволяет непосредственно управлять редактором методов ввода (IME) операционной системы в среде выполнения Flash, работающей на клиентском компьютере.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Позволяет непосредственно управлять редактором методов ввода (IME) операционной системы.
 
 </apiTipText></apiTipTexts><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:EventDispatcher</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Класс IME позволяет непосредственно управлять редактором методов ввода (IME) операционной системы в среде выполнения Flash, работающей на клиентском компьютере. Можно определить, был ли установлен редактор IME, был или нет этот IME включен в данный момент, а также какой редактор IME включен. Можно включить или выключить редактор IME в приложении, а также выполнить другие ограниченные функции, зависящие от операционной системы.
 
 
 <p class="- topic/p "><i class="+ topic/ph hi-d/i ">Поддержка в профилях AIR: </i>эта функция поддерживается в компьютерных операционных системах, но не на всех мобильных устройствах. Она также не поддерживается в среде AIR для телевизионных устройств. Используйте свойство <codeph class="+ topic/ph pr-d/codeph ">IME.isSupported</codeph>, чтобы проверить наличие поддержки в cреде выполнения. Дополнительные сведения о поддержке API-интерфейса в разных профилях см. в разделе «<xref href="http://help.adobe.com/en_US/air/build/WS144092a96ffef7cc16ddeea2126bb46b82f-8000.html" class="- topic/xref ">Поддержка в профилях AIR</xref>».</p>
 
 <p class="- topic/p ">Редакторы IME позволяют пользователям вводить тексты с символами, отличными от ASCII, используя многобайтовые языки, такие как китайский, японский и корейский. Дополнительные сведения о работе с редактором IME см. в документации по операционной системе, для которой разрабатывается приложение. Дополнительные ресурсы доступны на следующих web-сайтах:
 <ul class="- topic/ul "><li class="- topic/li "><xref href="http://www.microsoft.com/globaldev/default.mspx" scope="external" class="- topic/xref ">http://www.microsoft.com/globaldev/default.mspx</xref></li><li class="- topic/li "><xref href="http://developer.apple.com/documentation/" scope="external" class="- topic/xref ">http://developer.apple.com/documentation/</xref></li><li class="- topic/li "><xref href="http://java.sun.com" scope="external" class="- topic/xref ">http://java.sun.com</xref></li></ul>
  </p>
 
 <p class="- topic/p ">Если редактор IME не активен на компьютере пользователя, то обращения к методам или свойствам IME, отличным от <codeph class="+ topic/ph pr-d/codeph ">Capabilities.hasIME</codeph>, будут завершаться ошибками. Как только редактор IME будет активирован вручную, последующие обращения ActionScript к методам и свойствам IME будут срабатывать ожидаемым образом. Например, если используется японский редактор IME, он должен быть активирован до того, как вызывается любой метод или свойство IME.</p>
 
 <p class="- topic/p ">В следующей таблице показаны платформы, поддерживаемые данным классом:</p>
 
 
 <adobetable class="innertable"><tgroup cols="4" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Возможность</entry><entry class="- topic/entry ">Windows</entry><entry class="- topic/entry ">Mac OSX</entry><entry class="- topic/entry ">Linux</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry ">Определяет, установлен ли редактор IME: <codeph class="+ topic/ph pr-d/codeph ">Capabilities.hasIME</codeph></entry><entry class="- topic/entry ">Да</entry><entry class="- topic/entry ">Да</entry><entry class="- topic/entry ">Да</entry></row><row class="- topic/row "><entry class="- topic/entry ">Переключает редактор IME в активное или неактивное состояние: <codeph class="+ topic/ph pr-d/codeph ">IME.enabled</codeph></entry><entry class="- topic/entry ">Да</entry><entry class="- topic/entry ">Да</entry><entry class="- topic/entry ">Да</entry></row><row class="- topic/row "><entry class="- topic/entry ">Определяет, активен ли редактор IME или нет: <codeph class="+ topic/ph pr-d/codeph ">IME.enabled</codeph></entry><entry class="- topic/entry ">Да</entry><entry class="- topic/entry ">Да</entry><entry class="- topic/entry ">Да</entry></row><row class="- topic/row "><entry class="- topic/entry ">Получает или устанавливает режим преобразования IME: <codeph class="+ topic/ph pr-d/codeph ">IME.conversionMode</codeph></entry><entry class="- topic/entry ">Да</entry><entry class="- topic/entry ">Да ~~~~</entry><entry class="- topic/entry ">Нет</entry></row><row class="- topic/row "><entry class="- topic/entry ">Посылает редактору IME строку для преобразования: <codeph class="+ topic/ph pr-d/codeph ">IME.setCompositionString()</codeph></entry><entry class="- topic/entry ">Да ~~</entry><entry class="- topic/entry ">Нет</entry><entry class="- topic/entry ">Нет</entry></row><row class="- topic/row "><entry class="- topic/entry ">Получает из редактора IME исходную строку до преобразования: <codeph class="+ topic/ph pr-d/codeph ">System.ime.addEventListener()</codeph></entry><entry class="- topic/entry ">Да ~~</entry><entry class="- topic/entry ">Нет</entry><entry class="- topic/entry ">Нет</entry></row><row class="- topic/row "><entry class="- topic/entry ">Отправляет запрос на преобразование в редактор IME: <codeph class="+ topic/ph pr-d/codeph ">IME.doConversion()</codeph></entry><entry class="- topic/entry ">Да ~~</entry><entry class="- topic/entry ">Нет</entry><entry class="- topic/entry ">Нет</entry></row></tbody></tgroup></adobetable>
 
 <p class="- topic/p ">~~ Не все редакторы IME в Windows поддерживают эти операции в полном объеме. Единственный редактор IME, который поддерживает их все, это японский редактор IME.</p>
 
 <p class="- topic/p ">~~~~ На платформе Macintosh только японский редактор IME поддерживает эти методы, а редакторы IME независимых поставщиков не поддерживают их.</p>
 <p class="- topic/p ">Версия этого класса в ActionScript 3.0 не поддерживает Macintosh Classic.</p>
 
 </apiDesc></apiClassifierDetail><adobeApiEvent id="flash.system:IME_flash.events.IMEEvent.IME_COMPOSITION_imeComposition" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">imeComposition</apiName><shortdesc class="- topic/shortdesc ">
 Отправляется, когда пользователь завершил работу в редакторе методов ввода (IME), и доступна строка чтения.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.IMEEvent.IME_COMPOSITION</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.IMEEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Отправляется, когда пользователь завершил работу в редакторе методов ввода (IME), и доступна строка чтения. Обычно редакторы IME применяются для ввода текста на языках, в которых используются иероглифы, а не буквы. Это такие языки как японский, корейский и китайский.
 </apiDesc></adobeApiEventDetail></adobeApiEvent><apiOperation id="flash.system:IME:compositionAbandoned" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">compositionAbandoned</apiName><shortdesc class="- topic/shortdesc ">
	  Заставляет среду выполнения прерывать выполняемую компоновку.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	  Заставляет среду выполнения прерывать выполняемую компоновку. Этот метод следует вызывать, когда пользователь делает щелчок за пределами области компоновки или когда интерактивный объект, находящийся в фокусе, удаляется или сбрасывается. Среда выполнения подтверждает компоновку, вызовом метода <codeph class="+ topic/ph pr-d/codeph ">confirmComposition()</codeph> в клиенте. Среда выполнения также сбрасывает IME, чтобы сообщить операционной системе о том, что компоновка прервана. 
	   
	 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.system:IME:compositionSelectionChanged" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">compositionSelectionChanged</apiName><shortdesc class="- topic/shortdesc ">
	  Этот метод следует вызывать, когда выделенная область в пределах компоновки обновляется в результате взаимодействия пользователя или выполнения кода программы.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">start</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Указывает смещение (в байтах) от начала выделенной области.
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">end</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Указывает смещение (в байтах) от конца выделенной области.
	   
	 </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	  Этот метод следует вызывать, когда выделенная область в пределах компоновки обновляется в результате взаимодействия пользователя или выполнения кода программы.
	 
	 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.system:IME:doConversion" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">doConversion</apiName><shortdesc class="- topic/shortdesc ">
	 Предписывает IME выбрать первого кандидата для текущей строки композиции.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Вызов завершился с ошибкой.
	 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">Error</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Error</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Предписывает IME выбрать первого кандидата для текущей строки композиции.
	 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.system:IME:setCompositionString" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">setCompositionString</apiName><shortdesc class="- topic/shortdesc ">
	 Задает строку композиции IME.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><internal>Need some examples of valid values for the param composition.
	 </internal></asCustoms></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Неудачный вызов.
	 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">Error</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Error</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">composition</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Строка для отправки редактору IME.
	 </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Задает строку композиции IME. Если строка задана, пользователь может выбирать варианты в редакторе IME перед тем, как отправить результаты в активное текстовое поле.
	 <p class="- topic/p ">Если нет активного текстового поля, этот метод завершается с ошибкой.</p>
	 
	 </apiDesc></apiOperationDetail></apiOperation><apiValue id="flash.system:IME:conversionMode:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">conversionMode</apiName><shortdesc class="- topic/shortdesc ">
	 Режим преобразования текущего IME.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Попытка установки завершилась неудачно.
	 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">Error</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Error</apiOperationClassifier></apiException></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Режим преобразования текущего IME. Возможными значениями являются строковые константы режима IME, указывающие режим преобразования:
	 <ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">ALPHANUMERIC_FULL</codeph></li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">ALPHANUMERIC_HALF</codeph></li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">CHINESE</codeph></li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">JAPANESE_HIRAGANA</codeph></li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">JAPANESE_KATAKANA_FULL</codeph></li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">JAPANESE_KATAKANA_HALF</codeph></li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">KOREAN</codeph></li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">UNKNOWN</codeph> (значение доступно только для чтения; не может быть установлено вручную)</li></ul>
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.system.xml#IMEConversionMode/ALPHANUMERIC_FULL" class="- topic/link "><linktext class="- topic/linktext ">flash.system.IMEConversionMode.ALPHANUMERIC_FULL</linktext></link><link href="flash.system.xml#IMEConversionMode/ALPHANUMERIC_HALF" class="- topic/link "><linktext class="- topic/linktext ">flash.system.IMEConversionMode.ALPHANUMERIC_HALF</linktext></link><link href="flash.system.xml#IMEConversionMode/CHINESE" class="- topic/link "><linktext class="- topic/linktext ">flash.system.IMEConversionMode.CHINESE</linktext></link><link href="flash.system.xml#IMEConversionMode/JAPANESE_HIRAGANA" class="- topic/link "><linktext class="- topic/linktext ">flash.system.IMEConversionMode.JAPANESE_HIRAGANA</linktext></link><link href="flash.system.xml#IMEConversionMode/JAPANESE_KATAKANA_FULL" class="- topic/link "><linktext class="- topic/linktext ">flash.system.IMEConversionMode.JAPANESE_KATAKANA_FULL</linktext></link><link href="flash.system.xml#IMEConversionMode/JAPANESE_KATAKANA_HALF" class="- topic/link "><linktext class="- topic/linktext ">flash.system.IMEConversionMode.JAPANESE_KATAKANA_HALF</linktext></link><link href="flash.system.xml#IMEConversionMode/KOREAN" class="- topic/link "><linktext class="- topic/linktext ">flash.system.IMEConversionMode.KOREAN</linktext></link><link href="flash.system.xml#IMEConversionMode/UNKNOWN" class="- topic/link "><linktext class="- topic/linktext ">flash.system.IMEConversionMode.UNKNOWN</linktext></link></related-links></apiValue><apiValue id="flash.system:IME:enabled:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">enabled</apiName><shortdesc class="- topic/shortdesc ">
	 Указывает, включен ли системный редактор IME (значение true) или выключен (значение false).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Попытка установки завершилась неудачно.
	 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">Error</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Error</apiOperationClassifier></apiException></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Указывает, включен ли системный редактор IME (значение <codeph class="+ topic/ph pr-d/codeph ">true</codeph>) или выключен (значение <codeph class="+ topic/ph pr-d/codeph ">false</codeph>). Если редактор IME включен, можно выполнять ввод в многобайтовой кодировке; а если выключен — только буквенно-символьный ввод. 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.system:IME:isSupported:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">isSupported</apiName><shortdesc class="- topic/shortdesc ">
    Свойству isSupported задается значение true, если текущая платформа поддерживает класс IME, в противном случае задается значение false.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Свойству <codeph class="+ topic/ph pr-d/codeph ">isSupported</codeph> задается значение <codeph class="+ topic/ph pr-d/codeph ">true</codeph>, если текущая платформа поддерживает класс IME, в противном случае задается значение <codeph class="+ topic/ph pr-d/codeph ">false</codeph>. 
    
    
    </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.system:System" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">System</apiName><shortdesc class="- topic/shortdesc ">
 Класс System содержит свойства, связанные с локальными настройками и операциями.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">System, System object, built-in class
  
  </keyword></asCustoms></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Класс System содержит свойства, связанные с локальными настройками и операциями. Сюда относятся <ph class="- topic/ph ">настройки камер и микрофонов, операции с общими объектами и</ph> использование буфера обмена.
 
 <p class="- topic/p ">Дополнительные свойства и методы находятся в других классах пакета flash.system: класс Capabilities, <ph class="- topic/ph ">класс IME</ph> и класс Security.</p>
 
 <p class="- topic/p ">Этот класс содержит только статические методы и свойства. Невозможно создать новые экземпляры класса System.</p>
 
 </apiDesc><example conref="examples\SystemExample.as" class="- topic/example "> В следующем примере показано, как информация об общем объеме памяти системы копируется в буфер обмена системы путем обращения к <codeph class="+ topic/ph pr-d/codeph ">System.totalMemory</codeph> при вызове метода <codeph class="+ topic/ph pr-d/codeph ">System.setClipboard()</codeph>.
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
package {
    import flash.display.Sprite;
    import flash.system.System;

    public class SystemExample extends Sprite {
        public function SystemExample() {
            System.setClipboard("System.totalMemory: " + System.totalMemory);
        }
    }
}
</codeblock></example></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.system.xml#Security" class="- topic/link "><linktext class="- topic/linktext ">flash.system.Security</linktext></link><link href="flash.events.xml#IMEEvent" class="- topic/link "><linktext class="- topic/linktext ">flash.events.IMEEvent</linktext></link></related-links><apiOperation id="flash.system:System:disposeXML" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">disposeXML</apiName><shortdesc class="- topic/shortdesc ">
	 Объект XML сразу же становится доступным для сборки мусора.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage name="ActionScript" version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5.2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">node</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">XML</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ссылка XML, которую необходимо сделать доступной для сборки мусора.
	 </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Объект XML сразу же становится доступным для сборки мусора. С помощью этого метода удаляются родительские и дочерние соединения всех узлов указанного узла XML.
	 
	 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.system:System:exit" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">exit</apiName><shortdesc class="- topic/shortdesc "> 
     Закрывает проигрыватель Flash Player.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage name="ActionScript" version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9.0.115.0" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">System, System.exit(), exit()             
	 
	 </keyword></asCustoms></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">code</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">uint</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Значение, передаваемое в операционную систему. Обычно, если процесс нормально завершается, это значение равно 0.
	 
     </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
     Закрывает проигрыватель Flash Player.
	 
     <p class="- topic/p "><i class="+ topic/ph hi-d/i ">Только для отладочной версии проигрывателя Flash Player.</i></p> 
	 
     <p class="- topic/p ">Чтобы выйти из приложения, приложения AIR должны вызвать метод <codeph class="+ topic/ph pr-d/codeph ">NativeApplication.exit()</codeph>.</p> 
	 
     </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.desktop.xml#NativeApplication/exit()" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.NativeApplication.exit()</linktext></link></related-links></apiOperation><apiOperation id="flash.system:System:gc" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">gc</apiName><shortdesc class="- topic/shortdesc ">
     Запускает процесс очистки.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage name="ActionScript" version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9.0.115.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Запускает процесс очистки.
	 
     <p class="- topic/p "><ph class="- topic/ph "> <i class="+ topic/ph hi-d/i ">Только для отладочной версии Flash Player и приложений AIR. </i> </ph> В приложении AIR метод <codeph class="+ topic/ph pr-d/codeph ">System.gc()</codeph> работает только в содержимом, выполняющемся в AIR Debug Launcher (ADL), или, в случае с установленным приложением, в содержимом в изолированной программной среде безопасности приложения.</p>
	 
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.system:System:pause" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">pause</apiName><shortdesc class="- topic/shortdesc "> 
     Устанавливает паузу в работе Flash Player или AIR Debug Launcher (ADL).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage name="ActionScript" version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9.0.115.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">System, System.pause(), pause()   
	 
	 </keyword></asCustoms></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
     Устанавливает паузу в работе <ph class="- topic/ph ">Flash Player или</ph> AIR Debug Launcher (ADL). После вызова этого метода все операции приложения прекращаются, за исключением доставки событий Socket.
	 
     <p class="- topic/p "><i class="+ topic/ph hi-d/i ">Только для отладочной версии Flash Player или AIR Debug Launcher (ADL).</i></p>
     
     </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.system.xml#System/resume()" class="- topic/link "><linktext class="- topic/linktext ">resume()</linktext></link></related-links></apiOperation><apiOperation id="flash.system:System:resume" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">resume</apiName><shortdesc class="- topic/shortdesc "> 
     Возобновляет работу приложения после вызова метода System.pause().</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage name="ActionScript" version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9.0.115.0" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">System, System.resume(), resume()        
	 
	 </keyword></asCustoms></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
     Возобновляет работу приложения после вызова метода <codeph class="+ topic/ph pr-d/codeph ">System.pause()</codeph>.
	 
     <p class="- topic/p "><i class="+ topic/ph hi-d/i ">Только для отладочной версии Flash Player или AIR Debug Launcher (ADL).</i></p>  
     
     </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.system.xml#System/pause()" class="- topic/link "><linktext class="- topic/linktext ">pause()</linktext></link></related-links></apiOperation><apiOperation id="flash.system:System:setClipboard" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">setClipboard</apiName><shortdesc class="- topic/shortdesc ">
	 Заменяет содержимое буфера обмена заданной текстовой строкой.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">System.setClipboard, setClipboard
	  
	 </keyword></asCustoms></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">string</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Состоящая из символов строка с обычным текстом для размещения в буфере обмена системы, замещая текущее содержимое (если есть).
	 
	 
	 </apiDesc></apiParam><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Заменяет содержимое буфера обмена заданной текстовой строкой.
	 
	 </apiTipText></apiTipTexts></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Заменяет содержимое буфера обмена заданной текстовой строкой. Этот метод работает в любом контексте безопасности, если вызывается в результате пользовательского события (например, обработчика события клавиатуры или устройства ввода).
	 
	 <p class="- topic/p ">Этот метод доступен для SWF-содержимого, выполняемого во Flash Player 9. Он позволяет добавлять в буфер обмена только содержимое типа String. </p> 
	 
	 <p class="- topic/p ">Содержимое Flash Player 10 и содержимое в изолированной программной среде безопасности приложения AIR может вызывать метод <codeph class="+ topic/ph pr-d/codeph ">Clipboard.setData()</codeph>.</p>
	 
	 </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.desktop.xml#Clipboard" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.Clipboard</linktext></link></related-links></apiOperation><apiValue id="flash.system:System:freeMemory:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">freeMemory</apiName><shortdesc class="- topic/shortdesc ">
	 Объем памяти (в байтах), который выделен для Adobe&amp;#xAE; Flash&amp;#xAE; Player или Adobe&amp;#xAE; AIR&amp;#xAE; и не используется в данный момент.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Объем памяти (в байтах), который выделен для <ph class="- topic/ph ">Adobe<sup class="+ topic/ph hi-d/sup ">®</sup> Flash<sup class="+ topic/ph hi-d/sup ">®</sup> Player или </ph> Adobe<sup class="+ topic/ph hi-d/sup ">®</sup> AIR<sup class="+ topic/ph hi-d/sup ">®</sup> и не используется в данный момент. Эта неиспользованная часть выделенной памяти (<codeph class="+ topic/ph pr-d/codeph ">System.totalMemory</codeph>) меняется по мере «сбора мусора». Используйте это свойство для отслеживания «сбора мусора»
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.system.xml#System/privateMemory" class="- topic/link "><linktext class="- topic/linktext ">privateMemory</linktext></link><link href="flash.system.xml#System/totalMemory" class="- topic/link "><linktext class="- topic/linktext ">totalMemory</linktext></link><link href="flash.system.xml#System/totalMemoryNumber" class="- topic/link "><linktext class="- topic/linktext ">totalMemoryNumber</linktext></link></related-links></apiValue><apiValue id="flash.system:System:ime:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">ime</apiName><shortdesc class="- topic/shortdesc ">
	 Текущая установленная система IME.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.system:IME</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Текущая установленная система IME. Чтобы подписаться на события imeComposition, вызовите <codeph class="+ topic/ph pr-d/codeph ">addEventListener()</codeph> для этого экземпляра.
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.system.xml#IMEConversionMode" class="- topic/link "><linktext class="- topic/linktext ">IMEConversionMode</linktext></link></related-links></apiValue><apiValue id="flash.system:System:privateMemory:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">privateMemory</apiName><shortdesc class="- topic/shortdesc ">
	 Весь объем памяти (в байтах), используемый приложением.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Весь объем памяти (в байтах), используемый приложением. Это объем резидентной памяти всего процесса
	 
	 <p class="- topic/p ">Разработчикам AIR следует использовать это свойство для определения общего потребления памяти приложением.</p>
	 
	 <p class="- topic/p ">Для Flash Player это значение включает память, используемую приложением-контейнером, например веб-браузером.</p>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.system.xml#System/freeMemory" class="- topic/link "><linktext class="- topic/linktext ">freeMemory</linktext></link><link href="flash.system.xml#System/totalMemory" class="- topic/link "><linktext class="- topic/linktext ">totalMemory</linktext></link><link href="flash.system.xml#System/totalMemoryNumber" class="- topic/link "><linktext class="- topic/linktext ">totalMemoryNumber</linktext></link></related-links></apiValue><apiValue id="flash.system:System:totalMemoryNumber:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">totalMemoryNumber</apiName><shortdesc class="- topic/shortdesc ">
	Используемый в данным момент объем памяти (в байтах), который выделен непосредственно средой Flash Player или AIR.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="2" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Используемый в данным момент объем памяти (в байтах), который выделен непосредственно средой <ph class="- topic/ph ">Flash Player или</ph> AIR.  
	
	<p class="- topic/p ">Это свойство представлено объектом Number, который позволяет использовать более высокие значения, чем свойство <codeph class="+ topic/ph pr-d/codeph ">System.totalMemory</codeph>, которое представлено целым числом.</p>
	
	<p class="- topic/p ">Это свойство не указывает <i class="+ topic/ph hi-d/i ">весь</i> объем памяти, используемый приложением Adobe AIR <ph class="- topic/ph ">или приложением (например, браузером), в котором выполняется содержимое Flash Player</ph>. <ph class="- topic/ph ">Браузер или</ph> операционная система может использовать остальную часть памяти. Свойство <codeph class="+ topic/ph pr-d/codeph ">System.privateMemory</codeph> отражает <i class="+ topic/ph hi-d/i ">весь</i> объем памяти, используемый приложением.</p>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.system.xml#System/freeMemory" class="- topic/link "><linktext class="- topic/linktext ">freeMemory</linktext></link><link href="flash.system.xml#System/privateMemory" class="- topic/link "><linktext class="- topic/linktext ">privateMemory</linktext></link><link href="flash.system.xml#System/totalMemory" class="- topic/link "><linktext class="- topic/linktext ">totalMemory</linktext></link></related-links></apiValue><apiValue id="flash.system:System:totalMemory:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">totalMemory</apiName><shortdesc class="- topic/shortdesc ">
	Используемый в данным момент объем памяти (в байтах), который выделен непосредственно средой Flash Player или AIR.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">uint</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Используемый в данным момент объем памяти (в байтах), который выделен непосредственно средой <ph class="- topic/ph ">Flash Player или</ph> AIR.  
	
	<p class="- topic/p ">Это свойство не указывает <i class="+ topic/ph hi-d/i ">весь</i> объем памяти, используемый приложением Adobe AIR <ph class="- topic/ph ">или приложением (например, браузером), в котором выполняется содержимое Flash Player</ph>. <ph class="- topic/ph ">Браузер или</ph> операционная система может использовать остальную часть памяти. Свойство <codeph class="+ topic/ph pr-d/codeph ">System.privateMemory</codeph> отражает <i class="+ topic/ph hi-d/i ">весь</i> объем памяти, используемый приложением.</p>
	
	<p class="- topic/p ">Если выделенный объем памяти превышает максимальное значение для объекта uint (<codeph class="+ topic/ph pr-d/codeph ">uint.MAX_VALUE</codeph>, или 4294967295), тогда это свойство получает значение 0. Свойство <codeph class="+ topic/ph pr-d/codeph ">System.totalMemoryNumber</codeph> допускает использование объема памяти, превышающего это значение. </p>
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.system.xml#System/freeMemory" class="- topic/link "><linktext class="- topic/linktext ">freeMemory</linktext></link><link href="flash.system.xml#System/privateMemory" class="- topic/link "><linktext class="- topic/linktext ">privateMemory</linktext></link><link href="flash.system.xml#System/totalMemoryNumber" class="- topic/link "><linktext class="- topic/linktext ">totalMemoryNumber</linktext></link></related-links></apiValue><apiValue id="flash.system:System:useCodePage:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">useCodePage</apiName><shortdesc class="- topic/shortdesc ">
	 Значение типа Boolean, указывающее кодовую страницу, которую следует использовать для интерпретации внешних текстовых файлов.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">System.useCodepage, useCodepage, Unicode, code page
	  
	  </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Значение типа Boolean, указывающее кодовую страницу, которую следует использовать для интерпретации внешних текстовых файлов. Если это свойство имеет значение <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, при интерпретации внешних текстовых файлов используется кодировка Юникод. (Эти файлы должны быть в кодировке Юникод при сохранении.) Если для этого свойства задано значение <codeph class="+ topic/ph pr-d/codeph ">true</codeph>, внешние текстовые файлы интерпретируются с помощью стандартной кодовой страницы операционной системы, в которой выполняется приложение. По умолчанию для свойства <codeph class="+ topic/ph pr-d/codeph ">useCodePage</codeph> задано значение <codeph class="+ topic/ph pr-d/codeph ">false</codeph>.
	 
	 <p class="- topic/p ">Текст, загружаемый как внешний файл (с помощью <codeph class="+ topic/ph pr-d/codeph ">Loader.load()</codeph>, класса URLLoader или класса URLStream), должен быть сохранен в кодировке Юникод, чтобы приложение правильно распознало его. Чтобы изменить кодировку внешних файлов на Юникод, сохраните их в приложении, поддерживающем эту кодировку, например с помощью программы блокнот в Windows.</p>
	 
	 <p class="- topic/p ">При загрузке внешних текстовых файлов, кодировка которых не Юникод, установите для свойства <codeph class="+ topic/ph pr-d/codeph ">useCodePage</codeph> значение <codeph class="+ topic/ph pr-d/codeph ">true</codeph>. Добавьте следующий фрагмент в качестве первой строки кода в файле, который загружает данные (для Flash Professional эту строку нужно добавить в первый кадр):</p>
	 
	 <pre xml:space="preserve" class="- topic/pre "><codeph class="+ topic/ph pr-d/codeph ">System.useCodePage = true;</codeph></pre>
	 
	 <p class="- topic/p ">Если имеется эта кодировка, приложение интерпретирует внешний текст с помощью стандартной кодовой страницы операционной системы. Например, это обычно бывает кодировка CP1252 для английской версии операционной системы Windows и Shift-JIS для японской операционной системы.</p> 
	 
	 <p class="- topic/p "><ph class="- topic/ph ">Если для свойства <codeph class="+ topic/ph pr-d/codeph ">useCodePage</codeph> установить значение <codeph class="+ topic/ph pr-d/codeph ">true</codeph>, в проигрывателе Flash Player 6 и более поздних версиях обрабатывают текст также, как проигрыватель Flash Player 5. (Проигрыватель Flash Player 5 обрабатывает все тексты таким образом, как если бы они все были в стандартной кодировке операционной системы, в которой запущен проигрыватель.)</ph></p>
	 
	 <p class="- topic/p ">Если для свойства <codeph class="+ topic/ph pr-d/codeph ">useCodePage</codeph> установлено значение <codeph class="+ topic/ph pr-d/codeph ">true</codeph>, помните, что стандартная кодовая страница операционной системы, в которой выполняется приложение, должна включать символы, используемые во внешнем текстовом файле, чтобы можно было отобразить данный текст. Например, если загружается внешний текстовый файл, содержащий китайские символы, эти символы невозможно отобразить в системе, где используется кодовая страница CP1252, поскольку она не содержит символов для китайского языка.</p>
	 
	 <p class="- topic/p ">Чтобы обеспечить пользователям на всех платформах возможность просматривать внешние текстовые файлы, используемые в вашем приложении, необходимо использовать в этих текстовых файлах кодировку Юникод и оставить для свойства <codeph class="+ topic/ph pr-d/codeph ">useCodePage</codeph> значение <codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Таким образом приложение <ph class="- topic/ph ">(Flash Player 6 и более поздних версий или AIR)</ph> интерпретирует текст как Юникод.</p>
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#Loader/load()" class="- topic/link "><linktext class="- topic/linktext ">flash.display.Loader.load()</linktext></link></related-links></apiValue></apiClassifier><apiClassifier languages="" id="flash.system:SecurityDomain" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">SecurityDomain</apiName><shortdesc class="- topic/shortdesc ">
	Класс SecurityDomain представляет текущую изолированную программную среду, безопасности, также называемую доменом защиты.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Класс SecurityDomain представляет текущую изолированную программную среду, безопасности, также называемую доменом защиты. Передавая экземпляр этого класса в <codeph class="+ topic/ph pr-d/codeph ">Loader.load()</codeph>, можно запросить размещение загруженных мультимедийных данных в определенной изолированной среде.
	</apiDesc></apiClassifierDetail><apiValue id="flash.system:SecurityDomain:currentDomain:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">currentDomain</apiName><shortdesc class="- topic/shortdesc ">
		Определяет текущий домен защиты.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.system:SecurityDomain</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		Определяет текущий домен защиты. 
		
		</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#Loader/load()" class="- topic/link "><linktext class="- topic/linktext ">flash.display.Loader.load()</linktext></link><link href="flash.display.xml#Loader/loadBytes()" class="- topic/link "><linktext class="- topic/linktext ">flash.display.Loader.loadBytes()</linktext></link><link href="flash.system.xml#LoaderContext" class="- topic/link "><linktext class="- topic/linktext ">flash.system.LoaderContext</linktext></link></related-links></apiValue></apiClassifier><apiClassifier languages="" id="flash.system:SystemUpdater" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">SystemUpdater</apiName><shortdesc class="- topic/shortdesc ">
	 
	 Класс SystemUpdater позволяет обновлять модули Flash Player, такие как модуль DRM для Flash Access, а также сам проигрыватель Flash Player.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:EventDispatcher</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 
	 Класс SystemUpdater позволяет обновлять модули Flash Player, такие как модуль DRM для Flash Access, а также сам проигрыватель Flash Player. Доступные модули перечисляются в классе SystemUpdaterType.
	 
	 <p class="- topic/p ">Flash Player определяет необходимость обновления модуля Flash Access путем отправки события NetStatusEvent. Это событие имеет свойство <codeph class="+ topic/ph pr-d/codeph ">code</codeph> со значением <codeph class="+ topic/ph pr-d/codeph ">"DRM.UpdateNeeded"</codeph>. Для обновления модуля Flash Access не требуется согласия пользователя. Прослушивайте событие и запустите обновление, вызвав метод <codeph class="+ topic/ph pr-d/codeph ">update("DRM")</codeph>.</p>
	 
	 <p class="- topic/p ">Flash Player определяет необходимость обновления проигрывателя, отправляя событие StatusEvent, его свойство <codeph class="+ topic/ph pr-d/codeph ">code</codeph> может иметь одно из нескольких значений (см. описание события <codeph class="+ topic/ph pr-d/codeph ">status</codeph>). Для обновления проигрывателя требуется согласие пользователя. Прослушивайте событие и предложите пользователю возможность обновления. Пользователь должен дать согласие на фактическое обновление и запустить процесс, например, нажав кнопку в интерфейсе приложения. После этого можно инициировать обновление проигрывателя непосредственно в коде ActionScript, вызвав метод <codeph class="+ topic/ph pr-d/codeph ">update("SYSTEM")</codeph>.</p>
	 
	 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Примечание.</b> API SystemUpdater поддерживается для всех стационарных компьютеров.</p>
	 
	 </apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.system.xml#SystemUpdaterType" class="- topic/link "><linktext class="- topic/linktext ">flash.system.SystemUpdaterType</linktext></link></related-links><adobeApiEvent id="flash.system:SystemUpdater_flash.events.Event.CANCEL_cancel" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">cancel</apiName><shortdesc class="- topic/shortdesc ">
	 Отправляется, когда обновление самого проигрывателя отменено пользователем.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.Event.CANCEL</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.Event</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Отправляется, когда обновление самого проигрывателя отменено пользователем. Это событие отправляется, только если запрашивается обновление типа <codeph class="+ topic/ph pr-d/codeph ">SystemUpdaterType.SYSTEM</codeph> и отменяется пользователем.
	 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flash.system:SystemUpdater_flash.events.Event.COMPLETE_complete" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">complete</apiName><shortdesc class="- topic/shortdesc ">
	 Отправляется после завершения обновления.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.Event.COMPLETE</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.Event</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Отправляется после завершения обновления.
	 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flash.system:SystemUpdater_flash.events.SecurityErrorEvent.SECURITY_ERROR_securityError" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">securityError</apiName><shortdesc class="- topic/shortdesc ">
	 Отправляется в случае возникновения ошибки безопасности.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.SecurityErrorEvent.SECURITY_ERROR</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.SecurityErrorEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Отправляется в случае возникновения ошибки безопасности. Например, это событие может быть отправлено, если проигрыватель пытается выполнить обновление, когда это запрещено политикой безопасности.
	 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flash.system:SystemUpdater_flash.events.IOErrorEvent.IO_ERROR_ioError" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">ioError</apiName><shortdesc class="- topic/shortdesc ">
	 Отправляется в случае ошибки ввода-вывода.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.IOErrorEvent.IO_ERROR</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.IOErrorEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Отправляется в случае ошибки ввода-вывода. Например, это событие может отправляться, если прерывается подключение к Интернету.
	 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flash.system:SystemUpdater_flash.events.ProgressEvent.PROGRESS_progress" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">progress</apiName><shortdesc class="- topic/shortdesc ">
	 Отправляется для обозначения хода выполнения загрузки.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.ProgressEvent.PROGRESS</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.ProgressEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Отправляется для обозначения хода выполнения загрузки. Напоминает событие <codeph class="+ topic/ph pr-d/codeph ">progress</codeph> классов Loader и URLLoader.
	 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flash.system:SystemUpdater_flash.events.StatusEvent.STATUS_status" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">status</apiName><shortdesc class="- topic/shortdesc ">
	  Отправляется в случае сбоя обновления.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.StatusEvent.STATUS</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.StatusEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	  Отправляется в случае сбоя обновления. Сбой обновления может возникать по одной из следующих причин.
	  <p class="- topic/p "><ul class="- topic/ul "><li class="- topic/li ">Вызывающее приложение работает в неподдерживаемой среде или архитектуре. В таком случае свойство <codeph class="+ topic/ph pr-d/codeph ">code</codeph> имеет значение DRM.UpdateFailedNotSupported, а свойство <codeph class="+ topic/ph pr-d/codeph ">level</codeph> — error.</li><li class="- topic/li ">Запрашиваемый пакет обновления не удается найти на сервере. В таком случае свойство <codeph class="+ topic/ph pr-d/codeph ">code</codeph> имеет значение DRM.UpdateFailedNotCurrentlyAvailable, а свойство <codeph class="+ topic/ph pr-d/codeph ">level</codeph> — error.</li><li class="- topic/li ">Модуль Flash Access не установлен. Эта ошибка аналогична коду DRM.UpdateNeeded, который отправляется в событии NetStatusEvent. Однако в этом случае сначала необходимо загрузить более свежую версию Flash Player. В таком случае свойство <codeph class="+ topic/ph pr-d/codeph ">code</codeph> имеет значение DRM.UpdateNeededButIncompatible, а свойство <codeph class="+ topic/ph pr-d/codeph ">level</codeph> — error. Чтобы выполнить обновление Flash Player, вызовите метод <codeph class="+ topic/ph pr-d/codeph ">SystemUpdater.update(SystemUpdaterType.SYSTEM)</codeph>.</li><li class="- topic/li ">Не удалось загрузить новый модуль DRM. В таком случае свойство <codeph class="+ topic/ph pr-d/codeph ">code</codeph> имеет значение DRM.UpdateFailed, а свойство <codeph class="+ topic/ph pr-d/codeph ">level</codeph> — error.</li></ul></p>
	  
	  </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flash.system:SystemUpdater_flash.events.Event.OPEN_open" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">open</apiName><shortdesc class="- topic/shortdesc ">
	 Отправляется после начала обновления.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.Event.OPEN</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.Event</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Отправляется после начала обновления. Обновление завершается, когда отправляется событие complete или когда отправляется событие IOErrorEvent, SecurityErrorEvent или StatusEvent.
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="flash.system:SystemUpdater:SystemUpdater" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">SystemUpdater</apiName><shortdesc class="- topic/shortdesc ">
		 Конструктор.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 Конструктор.
		 </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="flash.system:SystemUpdater:cancel" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">cancel</apiName><shortdesc class="- topic/shortdesc ">
		Отменяет активное обновление.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		Отменяет активное обновление.
		
		</apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.system:SystemUpdater:update" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">update</apiName><shortdesc class="- topic/shortdesc ">
		Начинает обновление того или иного типа.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10.1" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">type</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		Начинает обновление того или иного типа. Типы обновления перечислены как константы в классе SystemUpdaterType. Одновременно во всех браузерах разрешается выполнять только одно обновление.
		<p class="- topic/p ">После начала обновления необходимо прослушивать события, определенные в этом классе. Следующие события указывают на завершение обновления и позволяют перейти к новому обновлению или к следующей попытке обновления, аналогично функции <codeph class="+ topic/ph pr-d/codeph ">update()</codeph>:</p>
		<p class="- topic/p "><ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">complete</codeph></li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">cancel</codeph></li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">securityError</codeph></li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">ioError</codeph></li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">status</codeph></li></ul></p>
		
		</apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.system.xml#SystemUpdaterType" class="- topic/link "><linktext class="- topic/linktext ">flash.system.SystemUpdaterType</linktext></link></related-links></apiOperation></apiClassifier></apiPackage>