<?xml version="1.0" encoding="UTF-8"?>
<!--

  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.

-->
<apiPackage xmlns:ditaarch="http://dita.oasis-open.org/architecture/2005/" id="flash.text" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiPackage/apiPackage "><apiName class="- topic/title reference/title apiRef/apiName ">flash.text</apiName><apiDetail class="- topic/body reference/refbody apiRef/apiDetail "/><apiClassifier languages="" id="flash.text:TextExtent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">TextExtent</apiName><shortdesc class="- topic/shortdesc ">
 Класс TextExtent содержит информацию о размере текста в текстовом поле.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Класс TextExtent содержит информацию о размере текста в текстовом поле. Объекты этого класса возвращаются методом <codeph class="+ topic/ph pr-d/codeph ">TextFormat.getTextExtent</codeph>.
 </apiDesc></apiClassifierDetail><apiConstructor id="flash.text:TextExtent:TextExtent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">TextExtent</apiName><shortdesc class="- topic/shortdesc "/><prolog class="- topic/prolog "/><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">width</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">height</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">textFieldWidth</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">textFieldHeight</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ascent</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">descent</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier></apiParam></apiConstructorDef></apiConstructorDetail></apiConstructor><apiValue id="flash.text:TextExtent:ascent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">ascent</apiName><shortdesc class="- topic/shortdesc "/><prolog class="- topic/prolog "/><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef></apiValueDetail></apiValue><apiValue id="flash.text:TextExtent:descent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">descent</apiName><shortdesc class="- topic/shortdesc "/><prolog class="- topic/prolog "/><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef></apiValueDetail></apiValue><apiValue id="flash.text:TextExtent:height" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">height</apiName><shortdesc class="- topic/shortdesc "/><prolog class="- topic/prolog "/><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef></apiValueDetail></apiValue><apiValue id="flash.text:TextExtent:textFieldHeight" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">textFieldHeight</apiName><shortdesc class="- topic/shortdesc "/><prolog class="- topic/prolog "/><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef></apiValueDetail></apiValue><apiValue id="flash.text:TextExtent:textFieldWidth" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">textFieldWidth</apiName><shortdesc class="- topic/shortdesc "/><prolog class="- topic/prolog "/><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef></apiValueDetail></apiValue><apiValue id="flash.text:TextExtent:width" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">width</apiName><shortdesc class="- topic/shortdesc "/><prolog class="- topic/prolog "/><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.text:CSMSettings" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">CSMSettings</apiName><shortdesc class="- topic/shortdesc ">
	 Класс CSMSettings содержит свойства для применения с методом TextRenderer.setAdvancedAntiAliasingTable(), позволяющие обеспечить непрерывную модуляцию линий (CSM).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage name="ActionScript" version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><internal>Not functioning correctly. Bug report 193833
	 </internal></asCustoms></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Класс CSMSettings содержит свойства для применения с методом <codeph class="+ topic/ph pr-d/codeph ">TextRenderer.setAdvancedAntiAliasingTable()</codeph>, позволяющие обеспечить непрерывную модуляцию линий (CSM). CSM включает непрерывную модуляцию веса линии и четкости краев.
	 
     </apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.text.xml#TextRenderer/setAdvancedAntiAliasingTable()" class="- topic/link "><linktext class="- topic/linktext ">TextRenderer.setAdvancedAntiAliasingTable()</linktext></link></related-links><apiConstructor id="flash.text:CSMSettings:CSMSettings" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">CSMSettings</apiName><shortdesc class="- topic/shortdesc ">
     Создает объект CSMSettings, в котором хранятся значения линий для пользовательских параметров сглаживания.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage name="ActionScript" version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">fontSize</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Размер в пикселах, для которого применяются параметры.
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">insideCutoff</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Значение внутренней отсечки, при превышении которого плотности присваивается максимальное значение (например, 255).
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">outsideCutoff</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Значение внешней отсечки, ниже которого плотности присваивается значение 0.
     
	 </apiDesc></apiParam></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Создает объект CSMSettings, в котором хранятся значения линий для пользовательских параметров сглаживания. 
	 </apiDesc></apiConstructorDetail></apiConstructor><apiValue id="flash.text:CSMSettings:fontSize" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">fontSize</apiName><shortdesc class="- topic/shortdesc ">
		 Размер в пикселах, для которого применяются параметры.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 Размер в пикселах, для которого применяются параметры.
		 
		 <p class="- topic/p ">Массив <codeph class="+ topic/ph pr-d/codeph ">advancedAntiAliasingTable</codeph>, передаваемый методу <codeph class="+ topic/ph pr-d/codeph ">setAdvancedAntiAliasingTable()</codeph>, может содержать несколько записей, задающих параметры CSM для разных размеров шрифта. С помощью этого свойства можно задавать размер шрифта, к которому применяются другие параметры.
		 </p>
		 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.xml#TextRenderer/setAdvancedAntiAliasingTable()" class="- topic/link "><linktext class="- topic/linktext ">TextRenderer.setAdvancedAntiAliasingTable()</linktext></link></related-links></apiValue><apiValue id="flash.text:CSMSettings:insideCutoff" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">insideCutoff</apiName><shortdesc class="- topic/shortdesc ">
		 Значение внутренней отсечки, при превышении которого плотности присваивается максимальное значение (например, 255).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 Значение внутренней отсечки, при превышении которого плотности присваивается максимальное значение (например, 255).
         
		 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.xml#TextRenderer/setAdvancedAntiAliasingTable()" class="- topic/link "><linktext class="- topic/linktext ">TextRenderer.setAdvancedAntiAliasingTable()</linktext></link></related-links></apiValue><apiValue id="flash.text:CSMSettings:outsideCutoff" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">outsideCutoff</apiName><shortdesc class="- topic/shortdesc ">
		 Значение внешней отсечки, ниже которого плотности присваивается значение 0.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 Значение внешней отсечки, ниже которого плотности присваивается значение 0.
		 
		 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.xml#TextRenderer/setAdvancedAntiAliasingTable()" class="- topic/link "><linktext class="- topic/linktext ">TextRenderer.setAdvancedAntiAliasingTable()</linktext></link></related-links></apiValue></apiClassifier><apiClassifier languages="" id="flash.text:TextColorType" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">TextColorType</apiName><shortdesc class="- topic/shortdesc ">
Класс TextColorType обеспечивает значения цвета для класса flash.text.TextRenderer.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
Класс TextColorType обеспечивает значения цвета для класса flash.text.TextRenderer.

</apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.text.xml#TextRenderer" class="- topic/link "><linktext class="- topic/linktext ">flash.text.TextRenderer</linktext></link></related-links><apiValue id="flash.text:TextColorType:DARK_COLOR" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">DARK_COLOR</apiName><shortdesc class="- topic/shortdesc ">
    Используется параметром colorType метода setAdvancedAntiAliasingTable().</shortdesc><prolog class="- topic/prolog "><author class="- topic/author ">Bob Pappas
	</author><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">dark</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Используется параметром <codeph class="+ topic/ph pr-d/codeph ">colorType</codeph> метода <codeph class="+ topic/ph pr-d/codeph ">setAdvancedAntiAliasingTable()</codeph>. Используйте синтаксис <codeph class="+ topic/ph pr-d/codeph ">TextColorType.DARK_COLOR</codeph>.
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.xml#TextRenderer/setAdvancedAntiAliasingTable()" class="- topic/link "><linktext class="- topic/linktext ">flash.text.TextRenderer.setAdvancedAntiAliasingTable()</linktext></link></related-links></apiValue><apiValue id="flash.text:TextColorType:LIGHT_COLOR" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">LIGHT_COLOR</apiName><shortdesc class="- topic/shortdesc ">
    Используется параметром colorType метода setAdvancedAntiAliasingTable().</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">light</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Используется параметром <codeph class="+ topic/ph pr-d/codeph ">colorType</codeph> метода <codeph class="+ topic/ph pr-d/codeph ">setAdvancedAntiAliasingTable()</codeph>. Используйте синтаксис <codeph class="+ topic/ph pr-d/codeph ">TextColorType.LIGHT_COLOR</codeph>.	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.xml#TextRenderer/setAdvancedAntiAliasingTable()" class="- topic/link "><linktext class="- topic/linktext ">flash.text.TextRenderer.setAdvancedAntiAliasingTable()</linktext></link></related-links></apiValue></apiClassifier><apiClassifier languages="" id="flash.text:GridFitType" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">GridFitType</apiName><shortdesc class="- topic/shortdesc ">
Класс GridFitType определяет значения для хинтования (подгонки к сетке) в классе TextField.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
Класс GridFitType определяет значения для хинтования (подгонки к сетке) в классе TextField.

</apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.text.xml#TextField" class="- topic/link "><linktext class="- topic/linktext ">flash.text.TextField</linktext></link></related-links><apiValue id="flash.text:GridFitType:NONE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">NONE</apiName><shortdesc class="- topic/shortdesc "> 
	Не задавайте подгонку к сетке.</shortdesc><prolog class="- topic/prolog "><author class="- topic/author ">Bob Pappas
	
	</author><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">none</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	Не задавайте подгонку к сетке. Горизонтальные и вертикальные линии в глифах не подгоняются к пиксельной сетке. С помощью этой константы задается свойство <codeph class="+ topic/ph pr-d/codeph ">gridFitType</codeph> класса TextField. Как правило, этот параметр хорош для анимации и крупного шрифта. Используйте синтаксис <codeph class="+ topic/ph pr-d/codeph ">GridFitType.NONE</codeph>.
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.xml#TextField/gridFitType" class="- topic/link "><linktext class="- topic/linktext ">flash.text.TextField.gridFitType</linktext></link></related-links></apiValue><apiValue id="flash.text:GridFitType:PIXEL" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">PIXEL</apiName><shortdesc class="- topic/shortdesc ">
	Подгоняет жирные горизонтальные и вертикальные линии к пиксельной сетке.</shortdesc><prolog class="- topic/prolog "><author class="- topic/author ">Bob Pappas
	
	</author><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">pixel</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Подгоняет жирные горизонтальные и вертикальные линии к пиксельной сетке. С помощью этой константы задается свойство <codeph class="+ topic/ph pr-d/codeph ">gridFitType</codeph> класса TextField. Этот параметр применяется только к текстовым полям с выравниванием по левому краю. Она имеет то же действие, что и константа <codeph class="+ topic/ph pr-d/codeph ">GridFitType.SUBPIXEL</codeph> в статическом тексте. Этот параметр, как правило, дает максимальную четкость для текста с выравниванием по левому краю. Используйте синтаксис <codeph class="+ topic/ph pr-d/codeph ">GridFitType.PIXEL</codeph>.
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.xml#TextField/gridFitType" class="- topic/link "><linktext class="- topic/linktext ">flash.text.TextField.gridFitType</linktext></link></related-links></apiValue><apiValue id="flash.text:GridFitType:SUBPIXEL" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">SUBPIXEL</apiName><shortdesc class="- topic/shortdesc ">
	Подгоняет жирно горизонтальные и вертикальные линии к подпиксельной сетке на ЖК-мониторах.</shortdesc><prolog class="- topic/prolog "><author class="- topic/author ">Bob Pappas
	
	</author><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">subpixel</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Подгоняет жирно горизонтальные и вертикальные линии к подпиксельной сетке на ЖК-мониторах. (Красный, зеленый и синий являются фактическими пикселями на ЖК-экране.) Эту установку рекомендуется использовать для динамического текста с выравниванием по правому краю или по центру, а в некоторых случаях она позволяет найти оптимальный баланс качества анимации и качества текста. С помощью этой константы задается свойство <codeph class="+ topic/ph pr-d/codeph ">gridFitType</codeph> класса TextField. Используйте синтаксис <codeph class="+ topic/ph pr-d/codeph ">GridFitType.SUBPIXEL</codeph>.
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.xml#TextField/gridFitType" class="- topic/link "><linktext class="- topic/linktext ">flash.text.TextField.gridFitType</linktext></link></related-links></apiValue></apiClassifier><apiClassifier languages="" id="flash.text:StaticText" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">StaticText</apiName><shortdesc class="- topic/shortdesc ">
 Этот класс представляет объекты StaticText в списке отображения.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.display:DisplayObject</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Этот класс представляет объекты StaticText в списке отображения. Объект StaticText нельзя создать с помощью ActionScript. Создать объект StaticText можно только в инструменте разработке. При попытке создать новый объект StaticText выдается ошибка <codeph class="+ topic/ph pr-d/codeph ">ArgumentError</codeph>.
 
 <p class="- topic/p ">Чтобы создать ссылку на существующее статическое текстовое поле в ActionScript 3.0, можно повторять операцию для всех элементов списка отображения. Например, следующий фрагмент кода проверяет, содержит ли список отображения статическое текстовое поле и назначает его переменной.</p>
 
 <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
 var i:uint;
 for (i = 0; i &lt; this.numChildren; i++) {
     var displayitem:DisplayObject = this.getChildAt(i);
     if (displayitem instanceof StaticText) {
         trace("a static text field is item " + i + " on the display list");
         var myFieldLabel:StaticText = StaticText(displayitem);
         trace("and contains the text: " + myFieldLabel.text);
     }
 }
 </codeblock>
 </apiDesc></apiClassifierDetail><apiValue id="flash.text:StaticText:text:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">text</apiName><shortdesc class="- topic/shortdesc ">
     Возвращает текущий текст статического текстового поля.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Возвращает текущий текст статического текстового поля. Инструмент разработки может экспортировать несколько объектов текстового поля, составляющих полный текст. Например, для вертикального текста инструмент разработки создаст по одному текстовому полю для каждого символа.
     </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.text:TextField" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">TextField</apiName><shortdesc class="- topic/shortdesc ">
 Класс TextField используется для создания экранных объектов для отображения и ввода текста.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">TextField, TextField object, built-in class
 
  
  </keyword></asCustoms></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Класс TextField используется для создания экранных объектов для отображения и ввода текста.
 
 </apiTipText></apiTipTexts><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.display:InteractiveObject</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Класс TextField используется для создания экранных объектов для отображения и ввода текста. <ph outputclass="flexonly" class="- topic/ph "> Класс TextField можно использовать для выполнения визуализации текста на низком уровне. Однако в Flex для обработки текста обычно используются элементы управления Label, Text, TextArea и TextInput. </ph> <ph outputclass="flashonly" class="- topic/ph ">Текстовому полю можно присвоить имя экземпляра в инспекторе свойств и использовать методы и свойства класса TextField для управления им с помощью ActionScript. Имена экземпляров TextField отображаются в обозревателе ролика Movie Explorer и в диалоговом окне «Целевой путь« на панели «Действия».</ph>
 
 <p class="- topic/p ">Для динамического создания текстового поля используется конструктор метода <codeph class="+ topic/ph pr-d/codeph ">TextField()</codeph>.</p>
 
 <p class="- topic/p ">Методы класса TextField позволяют задавать, выделять текст и выполнять манипуляции с ним в динамическом текстовом поле или поле ввода, создаваемом при разработке программы или при исполнении. </p>
 
 <p class="- topic/p ">ActionScript предусматривает несколько способов форматирования текста при исполнении. Класс TextFormat позволяет задавать форматирование символов и абзацев для объектов TextField. К текстовым полям можно применять стили CSS с помощью свойства <codeph class="+ topic/ph pr-d/codeph ">TextField.styleSheet</codeph> и класса StyleSheet. Можно использовать CSS для изменения стиля встроенных тегов HTML, определения новых тегов форматирования или применения стилей. Текстовому полю можно напрямую назначить текст с форматированием HTML, который также может использовать стили CSS. HTML-текст, назначаемый текстовому полю, может содержать встроенное мультимедийное содержимое (фрагменты роликов, SWF-файлы, GIF-файлы, PNG-файлы и JPEG-файлы). Текст «обтекает» встроенное в него мультимедийное содержимое так же, как в документе HTML в обозревателе. </p>
 
 <p class="- topic/p ">Проигрыватель Flash Player поддерживает подгруппу тегов HTML, которые можно использовать для форматирования текста. См. список поддерживаемых тегов HTML в описании свойства <codeph class="+ topic/ph pr-d/codeph ">htmlText</codeph>.</p>
 
 </apiDesc><example conref="examples\TextFieldExample.as" class="- topic/example "> В следующем примере класс <codeph class="+ topic/ph pr-d/codeph ">TextFieldExample</codeph> используется для отображения текстового сообщения. Для этого выполняются следующие действия.
 <ol class="- topic/ol "><li class="- topic/li ">Создается свойство <codeph class="+ topic/ph pr-d/codeph ">label</codeph> типа TextField.</li><li class="- topic/li ">Конструктор класса вызывает функцию <codeph class="+ topic/ph pr-d/codeph ">configureLabel()</codeph>.</li><li class="- topic/li "> Метод <codeph class="+ topic/ph pr-d/codeph ">configureLabel()</codeph> сначала создает новый объект TextField и назначает его свойству <codeph class="+ topic/ph pr-d/codeph ">label</codeph>, а затем задает для него следующие параметры:
  <ul class="- topic/ul "><li class="- topic/li ">Полная выключка текстового поля по левому краю.</li><li class="- topic/li ">Включить заливку фона.</li><li class="- topic/li ">Включить рамку</li></ul>
  </li><li class="- topic/li ">Метод <codeph class="+ topic/ph pr-d/codeph ">configureLabel()</codeph> создает переменную <codeph class="+ topic/ph pr-d/codeph ">format</codeph> и назначает ее новому экземпляру TextFormat, задав следующие параметры:
  <ul class="- topic/ul "><li class="- topic/li ">Font type = Verdana</li><li class="- topic/li ">Font color = solid red</li><li class="- topic/li ">Font size = 10</li><li class="- topic/li ">Font underline = true</li></ul>
  </li><li class="- topic/li ">Свойство <codeph class="+ topic/ph pr-d/codeph ">defaultTextFormat</codeph> текстового поля <codeph class="+ topic/ph pr-d/codeph ">label</codeph> получает значение <codeph class="+ topic/ph pr-d/codeph ">format</codeph>, и экземпляр <codeph class="+ topic/ph pr-d/codeph ">label</codeph> добавляется в список отображения, который сначала показывает на монтажном столе текстовое поле без текста.</li><li class="- topic/li ">Конструктор задает для текстового поля <codeph class="+ topic/ph pr-d/codeph ">label</codeph> текст <codeph class="+ topic/ph pr-d/codeph ">Hello world and welcome to the show. </codeph> (Здравствуйте все и добро пожаловать на представление), вызвав метод <codeph class="+ topic/ph pr-d/codeph ">setLabel()</codeph>.</li></ol>
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
package {
    import flash.display.Sprite;
    import flash.text.TextField;
    import flash.text.TextFieldAutoSize;
    import flash.text.TextFormat;


    public class TextFieldExample extends Sprite {
        private var label:TextField;
        private var labelText:String = "Hello world and welcome to the show.";

        public function TextFieldExample() {
            configureLabel();
            setLabel(labelText);
        }

        public function setLabel(str:String):void {
            label.text = str;
        }

        private function configureLabel():void {
            label = new TextField();
            label.autoSize = TextFieldAutoSize.LEFT;
            label.background = true;
            label.border = true;

            var format:TextFormat = new TextFormat();
            format.font = "Verdana";
            format.color = 0xFF0000;
            format.size = 10;
            format.underline = true;

            label.defaultTextFormat = format;
            addChild(label);
        }
    }
}
</codeblock></example></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.text.xml#TextFormat" class="- topic/link "><linktext class="- topic/linktext ">flash.text.TextFormat</linktext></link><link href="flash.text.xml#StyleSheet" class="- topic/link "><linktext class="- topic/linktext ">flash.text.StyleSheet</linktext></link><link href="flash.text.xml#TextField/htmlText" class="- topic/link "><linktext class="- topic/linktext ">htmlText</linktext></link></related-links><adobeApiEvent id="flash.text:TextField_flash.events.Event_textInteractionModeChange" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">textInteractionModeChange</apiName><shortdesc class="- topic/shortdesc ">
 Flash Player отправляет textInteractionModeChange событие когда смены пользователя режим взаимодействия текстового поля.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="11" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.Event</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Flash Player отправляется <codeph class="+ topic/ph pr-d/codeph ">textInteractionModeChange</codeph> событие, когда смены пользователя режим взаимодействия текстового поля. например на Андроиде, можно переключить от НОРМАЛЬНОГО режима до параметров контекстного меню использования РЕЖИМА ВЫДЕЛЕНИЯ
 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flash.text:TextField_flash.events.TextEvent.TEXT_INPUT_textInput" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">textInput</apiName><shortdesc class="- topic/shortdesc ">
 Flash Player отправляет событие textInput, когда пользователь вводит один или несколько символов текста.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.TextEvent.TEXT_INPUT</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.TextEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Flash Player отправляет событие <codeph class="+ topic/ph pr-d/codeph ">textInput</codeph>, когда пользователь вводит один или несколько символов текста. Это событие может генерироваться различными методами ввода текста, включая стандартную клавиатуру, редакторы ввода текста (IME), системы распознавания голоса и речи и даже просто вставкой обычного текста без форматирования или информации о стилях.
 </apiDesc><example conref="examples\TextField_textInput.as" class="- topic/example "> В следующем примере определяются два объекта TextField: первый объект является полем ввода, а второй — динамическим текстовым полем. При вводе символом в первое поле отправляется событие <codeph class="+ topic/ph pr-d/codeph ">textInput</codeph>, вызывается обработчик <codeph class="+ topic/ph pr-d/codeph ">textInputHandler()</codeph>, и символы отображаются во втором текстовом поле. При вставке блока текста в поле ввода, обработчик события копирует весь блок во второе поле.
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">

package
{
    import flash.display.Sprite;
    import flash.text.*;
    import flash.events.Event;
    import flash.events.TextEvent;
    import flash.events.MouseEvent;

    public class TextInputExample extends Sprite
    {
        private var myTextBox1:TextField = new TextField();
        private var myTextBox2:TextField = new TextField();

        public function TextInputExample()
        {
            myTextBox1.type = TextFieldType.INPUT;
            myTextBox1.width = 200;
            myTextBox1.height = 20;
            myTextBox1.background = true;
            myTextBox1.border = true;
            
            myTextBox2.x=220;

            addChild(myTextBox1);
            addChild(myTextBox2);
            myTextBox1.addEventListener(TextEvent.TEXT_INPUT,textInputHandler);
        }

        public function textInputHandler(event:TextEvent):void
        {
           myTextBox2.text=event.text;
        }
    }
}
</codeblock></example></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flash.text:TextField_flash.events.Event.SCROLL_scroll" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">scroll</apiName><shortdesc class="- topic/shortdesc ">
 Отправляется объектом TextField, когда пользователь выполняет прокрутку.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.Event.SCROLL</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.Event</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Отправляется объектом <i class="+ topic/ph hi-d/i ">TextField</i>, когда пользователь выполняет прокрутку. 
 </apiDesc><example conref="examples\TextField_scroll.as" class="- topic/example "> В следующем примере определяются два объекта TextField. С первым объектом TextField связано два обработчика событий. При щелчке мыши внутри первого текстового поля отправляется событие <codeph class="+ topic/ph pr-d/codeph ">mouseDown</codeph> и вызывается связанный с ним обработчик <codeph class="+ topic/ph pr-d/codeph ">mouseDownScroll</codeph>. Обработчик <codeph class="+ topic/ph pr-d/codeph ">mouseDownScroll()</codeph> инициирует прокручивание поля. Затем отправляется событие <codeph class="+ topic/ph pr-d/codeph ">scroll</codeph>, и связанный обработчик <codeph class="+ topic/ph pr-d/codeph ">scrollHandler()</codeph> обновляет второе текстовое поле, так чтобы в нем отображалась текущее положение прокрутки.
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">

package
{
    import flash.display.Sprite;
    import flash.text.*;
    import flash.events.Event;
    import flash.events.TextEvent;
    import flash.events.MouseEvent;

    public class TextScrollExample extends Sprite
    {
        private var myTextBox1:TextField = new TextField();
        private var myTextBox2:TextField = new TextField();
        private var myText:String = "Hello world and welcome to the show. It's really nice to meet you. Take your coat off and stay a while. OK, show is over. Hope you had fun. You can go home now. Don't forget to tip your waiter. There are mints in the bowl by the door. Thank you. Please come again.";

        public function TextScrollExample()
        {
            myTextBox1.text = myText;
            myTextBox1.width = 200;
            myTextBox1.height = 50;
            myTextBox1.multiline = true;
            myTextBox1.wordWrap = true;
            myTextBox1.background = true;
            myTextBox1.border = true;
            
            myTextBox2.x=220;
            myTextBox2.text="scrolled to line: " + myTextBox1.scrollV;

            addChild(myTextBox1);
            addChild(myTextBox2);
            myTextBox1.addEventListener(MouseEvent.MOUSE_DOWN, mouseDownScroll);
            myTextBox1.addEventListener(Event.SCROLL, scrollHandler);
        }

        public function mouseDownScroll(event:MouseEvent):void
        {
            myTextBox1.scrollV++;
        }
        public function scrollHandler(event:Event):void
        {
           myTextBox2.text="scrolled to line: " + myTextBox1.scrollV;
        }
    }
}
</codeblock></example></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flash.text:TextField_flash.events.TextEvent.LINK_link" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">link</apiName><shortdesc class="- topic/shortdesc ">
 Передается, когда пользователь щелкает в текстовом поле с поддержкой HTML гиперссылку, в которой URL-адрес начинается с event:.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.TextEvent.LINK</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.TextEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Передается, когда пользователь щелкает в текстовом поле с поддержкой HTML гиперссылку, в которой URL-адрес начинается с event:. Часть URL-адреса после event: помещается в свойство text события LINK.
 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Примечание.</b> Поведение по умолчанию (добавление текста в текстовое поле) происходит только тогда, когда проигрыватель Flash Player генерирует событие, что в данном случае имеет место, когда пользователь пытается ввести текст. Нельзя ввести текст в текстовое поле, отправляя ему события <codeph class="+ topic/ph pr-d/codeph ">textInput</codeph>.</p>
 </apiDesc><example conref="examples\TextField_event_link.as" class="- topic/example "> В следующем примере определяется функция <codeph class="+ topic/ph pr-d/codeph ">playMP3()</codeph>. Создается объект TextField с именем <codeph class="+ topic/ph pr-d/codeph ">list</codeph>, который заполняется HTML-текстом. Текст <codeph class="+ topic/ph pr-d/codeph ">Track 1</codeph> (Трек 1) и <codeph class="+ topic/ph pr-d/codeph ">Track 2</codeph> являются ссылками внутри текстового поля. Когда пользователь щелкает любую из ссылок, вызывается функция playMP3(). Имя файла MP3, которое идет после строки event: в атрибуте <codeph class="+ topic/ph pr-d/codeph ">href</codeph> тега HTML, передается методу <codeph class="+ topic/ph pr-d/codeph ">linkHandler()</codeph> в качестве свойства <codeph class="+ topic/ph pr-d/codeph ">text</codeph> объекта события <codeph class="+ topic/ph pr-d/codeph ">link</codeph>.
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">

package {
    import flash.display.Sprite;
    import flash.errors.IOError;
    import flash.events.IOErrorEvent;
    import flash.events.TextEvent;
    import flash.media.Sound;
    import flash.media.SoundChannel;
    import flash.net.URLRequest;
    import flash.text.TextField;
    import flash.text.TextFieldAutoSize;

    public class TextField_event_link extends Sprite
    {
        private var myMP3:Sound;
        public function TextField_event_link() {
            myMP3 = new Sound();
            var list:TextField = new TextField();
            list.autoSize = TextFieldAutoSize.LEFT;
            list.multiline = true;
            list.htmlText = "&lt;a href=\"event:track1.mp3\">Track 1&lt;/a>&lt;br>";
            list.htmlText += "&lt;a href=\"event:track2.mp3\">Track 2&lt;/a>&lt;br>";
            addEventListener(TextEvent.LINK, linkHandler);
            addChild(list);
        }
        
        private function playMP3(mp3:String):void {
            try {    
                myMP3.load(new URLRequest(mp3));
                myMP3.play();
            }
            catch(err:Error) {
                trace(err.message);
            }
            myMP3.addEventListener(IOErrorEvent.IO_ERROR, errorHandler);
        }
        
        private function linkHandler(linkEvent:TextEvent):void {
            playMP3(linkEvent.text);
        }
        
        private function errorHandler(errorEvent:IOErrorEvent):void {
            trace(errorEvent.text);
        }
    }
}
</codeblock></example></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="flash.text:TextField_flash.events.Event.CHANGE_change" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">change</apiName><shortdesc class="- topic/shortdesc ">
 Отправляется после изменения значения элемента управления, в отличие от события textInput, которое отправляется перед изменением значения.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.Event.CHANGE</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.Event</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Отправляется после изменения значения элемента управления, в отличие от события <codeph class="+ topic/ph pr-d/codeph ">textInput</codeph>, которое отправляется перед изменением значения. В отличие от события <codeph class="+ topic/ph pr-d/codeph ">change</codeph> версии W3C DOM Event Model, которое отправляет событие только после перехода фокуса с элемента управления, событие <codeph class="+ topic/ph pr-d/codeph ">change</codeph> версии ActionScript 3.0 отправляется при каждом изменении элемента управления. Например, если пользователь вводит текст в текстовое поле, то событие <codeph class="+ topic/ph pr-d/codeph ">change</codeph> отправляется после каждого нажатия клавиши.
 </apiDesc><example conref="examples\TextField_Event_changeExample.as" class="- topic/example "> В следующем примере вводимый пользователем текст (пользовательский ввод)) немедленно копируется в другое текстовое поле с другим форматом. 
 
 <p class="- topic/p ">Создается два текстовых поля: одно для пользовательского ввода, а другое (<codeph class="+ topic/ph pr-d/codeph ">headingTextField</codeph>) для его копии. Также создается объект TextFormat, и текстовому полю <codeph class="+ topic/ph pr-d/codeph ">headingTextField</codeph> назначается формат текста по умолчанию. При изменении содержимого текстового поля вызывается метод <codeph class="+ topic/ph pr-d/codeph ">changeHandler()</codeph>, который назначает текст в поле<codeph class="+ topic/ph pr-d/codeph ">inputTextField</codeph> текстовому полю<codeph class="+ topic/ph pr-d/codeph ">headingTextField</codeph>. (Если метод был вызван для события <codeph class="+ topic/ph pr-d/codeph ">TextEvent.TEXT_INPUT</codeph>, а не для события <codeph class="+ topic/ph pr-d/codeph ">Event.CHANGE</codeph>, содержимое пользовательского ввода копируется только после того, как пользователь введет больше текста.)</p>
  
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
package {
    import flash.display.Sprite;
    import flash.text.TextField;
    import flash.text.TextFieldType;
    import flash.text.TextFormat;
    import flash.text.TextFormatAlign;
    import flash.events.Event;
    
    import flash.events.TextEvent;

    public class TextField_Event_changeExample extends Sprite {
        private var inputTextField:TextField = new TextField(); 
        private var headingTextField:TextField = new TextField(); 
        private var newFormat:TextFormat = new TextFormat();
         
        public function TextField_Event_changeExample() {
            headingTextField.x = 10;
            headingTextField.y = 10;
            headingTextField.height = 30;
            headingTextField.width = 400;
            headingTextField.background = true;
            headingTextField.backgroundColor = 0xF5F5DC;
            headingTextField.selectable = false;
 
            inputTextField.x = 10;
            inputTextField.y = 70;
            inputTextField.height = 20;
            inputTextField.width = 230;
            inputTextField.background = true;
            inputTextField.border = true;
            inputTextField.maxChars = 40;
            inputTextField.wordWrap = true;
            inputTextField.type = TextFieldType.INPUT;

            inputTextField.addEventListener(Event.CHANGE, changeHandler);

            newFormat.bold = true;
            newFormat.size = 18;
            newFormat.color = 0xFF0000;
            newFormat.align = TextFormatAlign.CENTER;

            headingTextField.defaultTextFormat = newFormat;

            this.addChild(inputTextField);
            this.addChild(headingTextField);
        }

        private function changeHandler(e:Event):void {
            headingTextField.text = inputTextField.text;
        }
    }
}
</codeblock></example></adobeApiEventDetail></adobeApiEvent><apiConstructor id="flash.text:TextField:TextField" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">TextField</apiName><shortdesc class="- topic/shortdesc ">
    Создает новый экземпляр TextField.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Создает новый экземпляр TextField. После создания экземпляра TextField вызовите метод <codeph class="+ topic/ph pr-d/codeph ">addChild()</codeph> или <codeph class="+ topic/ph pr-d/codeph ">addChildAt()</codeph> родительского объекта DisplayObjectContainer, чтобы добавить экземпляр в список отображения TextField.
     <p class="- topic/p ">Размер по умолчанию для текстового поля — 100 х 100 пикселей.</p>
     
     
     
     </apiDesc><example conref="examples\TextField_new.as" class="- topic/example "> Следующий пример демонстрирует динамическое создание вводимого объекта TextField в ActionScript 3.0 путем использования константы TextFieldType.INPUT в качестве значения свойства type объекта текстового поля. Пример предоставлен <xref href="http://actionscriptexamples.com/2008/12/02/dynamically-creating-an-input-text-field-in-actionscript-30/" scope="_mmexternal" class="- topic/xref ">ActionScriptExamples.com</xref>. 
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
var theTextField:TextField = new TextField();
theTextField.type = TextFieldType.INPUT;
theTextField.border = true;
theTextField.x = 10;
theTextField.y = 10;
theTextField.multiline = true;
theTextField.wordWrap = true;
addChild(theTextField);
</codeblock></example></apiConstructorDetail></apiConstructor><apiOperation id="flash.text:TextField:appendText" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">appendText</apiName><shortdesc class="- topic/shortdesc ">
     Добавляет строку, указанную параметром newText, в конец текста в текстовом поле.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">newText</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Строка, добавляемая к существующему тексту.
     
     </apiDesc></apiParam><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Добавляет текст к концу существующего текста в TextField.
      
      </apiTipText></apiTipTexts></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Добавляет строку, указанную параметром <codeph class="+ topic/ph pr-d/codeph ">newText</codeph>, в конец текста в текстовом поле. Этот метод более эффективен, чем присвоение сложения (<codeph class="+ topic/ph pr-d/codeph ">+=</codeph>) в свойстве <codeph class="+ topic/ph pr-d/codeph ">text</codeph> (например, <codeph class="+ topic/ph pr-d/codeph ">someTextField.text += moreText</codeph>), особенно для текстовых полей с большим объемом содержимого.
     
     </apiDesc><example conref="examples\TextField_appendTextExample.as" class="- topic/example "> В следующем примере отображается время, если сейчас будний день, или текст «Сегодня выходной», если это выходной день. Также подсчитывается число символов до определенного положения и число строк в текстовом поле.
 
 <p class="- topic/p ">Текстовое поле <codeph class="+ topic/ph pr-d/codeph ">outputText</codeph> настроено так, чтобы автоматически соответствовать тексту и изменять размер с выравниванием текста по левому краю с помощью свойства <codeph class="+ topic/ph pr-d/codeph ">autoSize</codeph>. Свойство <codeph class="+ topic/ph pr-d/codeph ">outputText.text</codeph> записывает первую строку содержимого и метод <codeph class="+ topic/ph pr-d/codeph ">appendText()</codeph> добавляет оставшуюся часть текста. (Необязательно начинать со свойства <codeph class="+ topic/ph pr-d/codeph ">text</codeph>. Метод <codeph class="+ topic/ph pr-d/codeph ">appendText()</codeph> можно было использовать также для добавления текста с самого начала.) Повторное определение свойства <codeph class="+ topic/ph pr-d/codeph ">text</codeph> приведет к перезаписи исходного текста. Используйте оператор <codeph class="+ topic/ph pr-d/codeph ">+=</codeph>, чтобы добавлять содержимое с помощью свойства <codeph class="+ topic/ph pr-d/codeph ">text</codeph>.</p>
 
 <p class="- topic/p ">Инструкция <codeph class="+ topic/ph pr-d/codeph ">if</codeph> проверяет, выпадает ли дата на субботу (6) или воскресенье (0). Если нет, то метод <codeph class="+ topic/ph pr-d/codeph ">toLocaleTimeString()</codeph> возвращает местное время, которое добавляется к содержимому текстового поля.</p> 
 
 <p class="- topic/p ">Свойство <codeph class="+ topic/ph pr-d/codeph ">length</codeph> текстового поля используется для считывания количества символов вплоть до вызова функции, а свойство <codeph class="+ topic/ph pr-d/codeph ">numLines</codeph> используется для подсчета числа строк в текстовом поле. Обратите внимание, что пустые строки учитываются при подсчете строк, а пробелы или разрывы строки (\n) учитываются при определении длины содержимого.</p>   
 
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
  package {
    import flash.display.Sprite;
    import flash.text.TextField;
    import flash.text.TextFieldAutoSize;
 
    public class TextField_appendTextExample extends Sprite {
         
        public function TextField_appendTextExample() {
            var outputText:TextField = new TextField();
            var today:Date = new Date();
                
            outputText.x = 10;
            outputText.y = 10;
            outputText.background = true;
            outputText.autoSize = TextFieldAutoSize.LEFT;
 
            outputText.text = "WHAT TIME IS IT?" + "\n\n";
 
            if((today.day == 0) || (today.day == 6)) {
                outputText.appendText("It's the weekend.");
                outputText.appendText("\n\n");
           
            } else {
                outputText.appendText("The time is: ");
                outputText.appendText(today.toLocaleTimeString() + ".\n\n");  
            }

            outputText.appendText("Number of characters including line breaks and spaces so far: ");
            outputText.appendText(outputText.length.toString() + "\n");
            outputText.appendText("Number of lines in the outputText: ");
            outputText.appendText(outputText.numLines.toString());   

            this.addChild(outputText);
        }
    }
}
</codeblock></example></apiOperationDetail></apiOperation><apiOperation id="flash.text:TextField:getCharBoundaries" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">getCharBoundaries</apiName><shortdesc class="- topic/shortdesc ">
     Возвращает прямоугольник, который является ограничительным блоком символа.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Прямоугольник с минимальными и максимальными значениями по осям <codeph class="+ topic/ph pr-d/codeph ">x</codeph> и <codeph class="+ topic/ph pr-d/codeph ">y</codeph>, определяющий ограничительный блок символа.
     
     </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.geom:Rectangle</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">charIndex</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Отсчитываемое от нуля значение индекса для символа (например, первая позиция — 0, вторая позиция — 1 и т.д.)
     
     </apiDesc></apiParam><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Возвращает прямоугольник, который является ограничительным блоком символа.
     
     </apiTipText></apiTipTexts></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Возвращает прямоугольник, который является ограничительным блоком символа.
     
     </apiDesc><example conref="examples\TextField_getCharBoundariesExample.as" class="- topic/example "> В следующем примере метод <codeph class="+ topic/ph pr-d/codeph ">getCharBoundaries()</codeph> используется для пометки (подсветки) символа, выделенного пользователем.
 
 <p class="- topic/p ">Класс определяет объект Shape с именем <codeph class="+ topic/ph pr-d/codeph ">spotlight</codeph>, который будет использоваться для рисования прямоугольника вокруг каждого выделенного символа. Когда пользователь щелкает текстовое поле <codeph class="+ topic/ph pr-d/codeph ">myTextField</codeph>, вызывается метод <codeph class="+ topic/ph pr-d/codeph ">clickHandler()</codeph>.</p>
 
 <p class="- topic/p ">В методе <codeph class="+ topic/ph pr-d/codeph ">clickHandler()</codeph> метод <codeph class="+ topic/ph pr-d/codeph ">getCharIndexAtPoint()</codeph> получает индекс выбранного символа на основе координат <codeph class="+ topic/ph pr-d/codeph ">localX</codeph> и <codeph class="+ topic/ph pr-d/codeph ">localY</codeph> щелчка мыши, которые определяются относительно содержащего объекта <codeph class="+ topic/ph pr-d/codeph ">Sprite</codeph>. Метод <codeph class="+ topic/ph pr-d/codeph ">getCharIndexAtPoint()</codeph> возвращает <codeph class="+ topic/ph pr-d/codeph ">-1</codeph>, если точка (щелчок мыши) не находится в области символов. Так как текстовое поле может быть больше текста, проверяется возвращенное целое число (<codeph class="+ topic/ph pr-d/codeph ">index</codeph>), чтобы убедиться, что пользователь щелкнул по символу. Целое число <codeph class="+ topic/ph pr-d/codeph ">index</codeph> также используется методом <codeph class="+ topic/ph pr-d/codeph ">getCharBoundaries()</codeph> для получения объекта <codeph class="+ topic/ph pr-d/codeph ">Rectangle</codeph>, содержащего ограничительный блок символа. Метод <codeph class="+ topic/ph pr-d/codeph ">clear()</codeph> все отображавшиеся ранее объекты Shape с именем <codeph class="+ topic/ph pr-d/codeph ">spotlight</codeph>. Новый прямоугольник с размерами ширины и высоты символа создается в местоположении символа (смещение с точки с координатами (10, 10)) с помощью возвращенных координат х и у прямоугольника <codeph class="+ topic/ph pr-d/codeph ">frame</codeph>. Чтобы сделать подсветку символа, объект Shape с именем <codeph class="+ topic/ph pr-d/codeph ">spotlight</codeph> заполняется желтым цветом с прозрачностью 35%, чтобы символ можно было увидеть. Обратите внимание, что пробелы также рассматриваются как символы.</p>
 
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
package {
    import flash.display.Sprite;
    import flash.events.MouseEvent;
    import flash.text.TextField;
    import flash.geom.Rectangle;
    import flash.events.MouseEvent;
    import flash.text.TextFieldAutoSize;
    import flash.display.Shape;

    public class TextField_getCharBoundariesExample extends Sprite
    {
        private var myTextField:TextField = new TextField();    
        private var spotlight:Shape = new Shape();
        
        public function TextField_getCharBoundariesExample() {
            
            myTextField.x = 10;
            myTextField.y = 10; 
            myTextField.border = true;
            myTextField.selectable = false;
            myTextField.autoSize = TextFieldAutoSize.LEFT;
            
            myTextField.text = "Selected a character from this text by clicking on it."

            myTextField.addEventListener(MouseEvent.CLICK, clickHandler);
            
            this.addChild(myTextField);    
            this.addChild(spotlight);
         }

        private function clickHandler (e:MouseEvent):void {
            var index:int = myTextField.getCharIndexAtPoint(e.localX, e.localY);
 
            if (index != -1) {
                 var frame:Rectangle = myTextField.getCharBoundaries(index);

                spotlight.graphics.clear();    
                spotlight.graphics.beginFill(0xFFFF00, .35);
                spotlight.graphics.drawRect((frame.x + 10), (frame.y + 10), frame.width, frame.height);            
                spotlight.graphics.endFill();
            }
        } 
    }
}
</codeblock></example></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.geom.xml#Rectangle" class="- topic/link "><linktext class="- topic/linktext ">flash.geom.Rectangle</linktext></link></related-links></apiOperation><apiOperation id="flash.text:TextField:getCharIndexAtPoint" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">getCharIndexAtPoint</apiName><shortdesc class="- topic/shortdesc ">
     Возвращает значение индекса, отсчитываемое от нуля, для символа в точке, определенной параметрами x и y.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Отсчитываемое от нуля значение индекса для символа (например, первая позиция — 0, вторая позиция — 1 и т.д.). Возвращает -1, если точка не находится в области символа.
     
     </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">x</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Координата <i class="+ topic/ph hi-d/i ">x</i> символа.
     
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">y</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Координата <i class="+ topic/ph hi-d/i ">y</i> символа.
     
     </apiDesc></apiParam><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Возвращает для символа значение индекса, отсчитываемое от нуля.
     
     </apiTipText></apiTipTexts></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Возвращает значение индекса, отсчитываемое от нуля, для символа в точке, определенной параметрами <codeph class="+ topic/ph pr-d/codeph ">x</codeph> и <codeph class="+ topic/ph pr-d/codeph ">y</codeph>.
     
     </apiDesc><example conref="examples\TextField_getCharIndexAtPointExample.as" class="- topic/example "> В следующем примере, когда пользователь щелкает по символу, он повторяется в другом текстовом поле, расположенном над текстом.
 
 <p class="- topic/p ">Первое текстовое поле содержит текст, который будет выбирать пользователь. Чтобы текст не выделялся при щелчке, свойству <codeph class="+ topic/ph pr-d/codeph ">selectable</codeph> задается значение false. Когда пользователь щелкает текстовое поле <codeph class="+ topic/ph pr-d/codeph ">firstTextField</codeph>, вызывается метод <codeph class="+ topic/ph pr-d/codeph ">clickHandler()</codeph>.</p>
 
 <p class="- topic/p ">В методе <codeph class="+ topic/ph pr-d/codeph ">clickHandler()</codeph> метод <codeph class="+ topic/ph pr-d/codeph ">getCharIndexAtPoint()</codeph> возвращает индекс символа на основе координат <codeph class="+ topic/ph pr-d/codeph ">localX</codeph> и <codeph class="+ topic/ph pr-d/codeph ">localY</codeph> щелчка мыши. Так как текстовое поле может быть больше текста, проверяется возвращаемое целое число (<codeph class="+ topic/ph pr-d/codeph ">index</codeph>), чтобы убедиться, что пользователь щелкнул по символу. (Метод <codeph class="+ topic/ph pr-d/codeph ">getCharIndexAtPoint()</codeph> возвращает <codeph class="+ topic/ph pr-d/codeph ">-1</codeph>, если точка (щелчок мыши) не находится в области символа.) Координаты мыши используются для определения координат нового текстового поля, где будет повторяться выбранный символ. Задается красный цвет для символа во втором текстовом поле. В завершение, тексту во втором поле назначается выбранный символ, получаемый с помощью метода <codeph class="+ topic/ph pr-d/codeph ">charAt()</codeph>. Обратите внимание, что при использовании свойства <codeph class="+ topic/ph pr-d/codeph ">text</codeph> вместо метода <codeph class="+ topic/ph pr-d/codeph ">appendText()</codeph> приведет к перезаписи символа во втором текстовом поле, а не к его добавлению.</p>
 
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
package {
    import flash.display.Sprite;
    import flash.events.MouseEvent;
    import flash.text.TextField;
    import flash.geom.Rectangle;
    import flash.events.MouseEvent;
    import flash.text.TextFieldAutoSize;
    
    public class TextField_getCharIndexAtPointExample extends Sprite {
        private var firstTextField:TextField = new TextField();    
        private var secondTextField:TextField = new TextField();
        
        public function TextField_getCharIndexAtPointExample() {

            firstTextField.x = 100;
            firstTextField.y = 100; 
            firstTextField.width = 260;
            firstTextField.height = 20;
            firstTextField.border = true;
            firstTextField.background = true;
            firstTextField.selectable = false;
            
            firstTextField.text = "Selected a character from this text by clicking on it."

            firstTextField.addEventListener(MouseEvent.CLICK, clickHandler);

            this.addChild(firstTextField);    
            this.addChild(secondTextField);
         }

        private function clickHandler (e:MouseEvent):void {
            var index:int = firstTextField.getCharIndexAtPoint(e.localX, e.localY);

            if (index != -1) {
                secondTextField.x = mouseX;
                secondTextField.y =  70;
                secondTextField.border = true;
                secondTextField.selectable = false;
                secondTextField.background = true;
                secondTextField.textColor = 0xFF0000;
                secondTextField.autoSize = TextFieldAutoSize.LEFT;
                secondTextField.text = firstTextField.text.charAt(index);    
            }
        } 
    }
}
</codeblock></example></apiOperationDetail></apiOperation><apiOperation id="flash.text:TextField:getFirstCharInParagraph" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">getFirstCharInParagraph</apiName><shortdesc class="- topic/shortdesc ">
     Получив индекс символа, возвращает индекс первого символа в том же абзаце.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Указанный индекс символа находится за пределами диапазона.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">RangeError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">RangeError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Отсчитываемое от нуля значение индекса для первого символа в строке в том же абзаце.
     
     </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">charIndex</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Отсчитываемое от нуля значение индекса для символа (например, первый символ — 0, второй символ — 1 и т. д.).
     
     </apiDesc></apiParam><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Отсчитываемое от нуля значение индекса для символа.
     
     </apiTipText></apiTipTexts></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Получив индекс символа, возвращает индекс первого символа в том же абзаце.
     
     </apiDesc><example conref="examples\TextField_getFirstCharInParagraphExample.as" class="- topic/example "> В следующем примере к содержимому текстового поля применяется форматирование абзаца. Когда пользователь щелкает по абзацу, его текст будет выравниваться по правому краю, а при повторном щелчке он возвращается к исходному формату (по умолчанию) с выравниванием по левому краю.
 
 <p class="- topic/p ">В конструкторе для текстового поля <codeph class="+ topic/ph pr-d/codeph ">myTextField</codeph> задается перенос текста. Метод <codeph class="+ topic/ph pr-d/codeph ">getTextFormat</codeph> возвращает исходный формат первого символа содержимого текстового поля, которое помещается в объект TextFormat с именем <codeph class="+ topic/ph pr-d/codeph ">originalFormat</codeph>. Также определяется новый объект TextFormat (<codeph class="+ topic/ph pr-d/codeph ">newFormat</codeph>) и его свойству <codeph class="+ topic/ph pr-d/codeph ">align</codeph> задается выравнивание по правому краю. Когда пользователь щелкает текстовое поле, вызывается метод <codeph class="+ topic/ph pr-d/codeph ">clickHandler()</codeph>.</p>
 
 <p class="- topic/p ">В методе <codeph class="+ topic/ph pr-d/codeph ">clickHandler()</codeph> метод <codeph class="+ topic/ph pr-d/codeph ">getCharIndexAtPoint()</codeph> возвращает индекс символа на основе координат <codeph class="+ topic/ph pr-d/codeph ">localX</codeph> и <codeph class="+ topic/ph pr-d/codeph ">localY</codeph> щелчка мыши. Первая инструкция <codeph class="+ topic/ph pr-d/codeph ">if</codeph> проверяет, щелкнул ли пользователь по символу. С помощью целого числа <codeph class="+ topic/ph pr-d/codeph ">clickIndex</codeph>, возвращенного методом <codeph class="+ topic/ph pr-d/codeph ">getCharIndexAtPoint()</codeph>, метод <codeph class="+ topic/ph pr-d/codeph ">getFirstCharInParagraph()</codeph> возвращает индекс первого символа в абзаце, получившем щелчок пользователя. Индекс последнего символа в абзаце определяется путем добавления длины абзаца (с помощью метода <codeph class="+ topic/ph pr-d/codeph ">getParagraphLength()</codeph>) к индексу первого символа минут последний символ (<codeph class="+ topic/ph pr-d/codeph ">\n</codeph>). Второй оператор <codeph class="+ topic/ph pr-d/codeph ">if</codeph> проверяет формат первого символа в абзаце. Если значение свойства выравнивания совпадает с исходным форматом (по левому краю), новый формат применяется ко всем символам абзаца. В противном случае формат абзаца возвращается к исходному формату. Выравнивание, а также такие элементы форматирования, как отступ, маркер, табуляция, левое и правое поля, предназначены для абзацев. Обратите внимание, что при использовании переноса слов и разрыва строк, форматирование применяется только к верой строка абзаца, если не определен аргумент <codeph class="+ topic/ph pr-d/codeph ">endIndex</codeph> для метода <codeph class="+ topic/ph pr-d/codeph ">setTextFormat()</codeph>.</p>
     
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
package {
    import flash.display.Sprite;
    import flash.text.TextField;
    import flash.events.MouseEvent;
    import flash.text.TextFormat;
    import flash.text.TextFormatAlign;

    public class TextField_getFirstCharInParagraphExample extends Sprite
    {
        private var myTextField:TextField = new TextField();
        private var originalFormat:TextFormat = new TextFormat();
        private var newFormat:TextFormat = new TextFormat(); 
        
        public function TextField_getFirstCharInParagraphExample() {
            myTextField.x = 10;
            myTextField.y = 10; 
            myTextField.border = true;
            myTextField.wordWrap = true;
            myTextField.width = 300;
            myTextField.height = 300; 
            myTextField.background = true;
             
            myTextField.appendText("The TextField class is used to create display objects for "
                        + "text display and input. All dynamic and input text fields in a SWF file " 
                        + "are instances of the TextField class. You can use the TextField class "
                        + "to perform low-level text rendering. However, in Flex, you typically use "
                        + "the Label, Text, TextArea, and TextInput controls to process text. "  
                        + "You can give a text field an instance name in the Property inspector "
                        + "and use the methods and properties of the TextField class to manipulate it with ActionScript. "
                        + "TextField instance names are displayed in the Movie Explorer and in the Insert "
                        + "Target Path dialog box in the Actions panel.\n\n"  
                        + "To create a text field dynamically, use the TextField constructor.\n\n"
                        + "The methods of the TextField class let you set, select, and manipulate "  
                        + "text in a dynamic or input text field that you create during authoring or at runtime.\n\n");

            originalFormat = myTextField.getTextFormat(0);

            newFormat.align = TextFormatAlign.RIGHT;

            myTextField.addEventListener(MouseEvent.CLICK, clickHandler);
  
            this.addChild(myTextField);
        }

        private function clickHandler(e:MouseEvent):void {
            var clickIndex:int = myTextField.getCharIndexAtPoint(e.localX, e.localY);
                  
            if(clickIndex != -1) {
                var paragraphFirstIndex:int = myTextField.getFirstCharInParagraph(clickIndex);
                var paragraphEndIndex:int = paragraphFirstIndex + ((myTextField.getParagraphLength(clickIndex) - 1));
            
                if (myTextField.getTextFormat(paragraphFirstIndex).align == originalFormat.align) {
                     myTextField.setTextFormat(newFormat, paragraphFirstIndex, paragraphEndIndex);
                }else {
                     myTextField.setTextFormat(originalFormat, paragraphFirstIndex, paragraphEndIndex);
                }
            } 
        }
    }
}
 
</codeblock></example></apiOperationDetail></apiOperation><apiOperation id="flash.text:TextField:getImageReference" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">getImageReference</apiName><shortdesc class="- topic/shortdesc ">
     Возвращает ссылку DisplayObject для данного идентификатора, изображения или SWF-файла, добавленного в текстовое поле с форматированием HTML с помощью тега &amp;lt;img&amp;gt;.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Экранный объект, соответствующий изображению или SWF-файлу с соответствующим атрибутом <codeph class="+ topic/ph pr-d/codeph ">id</codeph> в теге <codeph class="+ topic/ph pr-d/codeph ">&lt;img></codeph> текстового поля. Для мультимедийного содержимого, загруженного из внешнего источника, этот объект является объектом Loader, и после загрузки мультимедийный объект становится дочерним по отношению к нему. Для мультимедийного содержимого, встроенного в SWF-файл, это загруженный объект Если не существует тега <codeph class="+ topic/ph pr-d/codeph ">&lt;img></codeph> с идентичным атрибутом <codeph class="+ topic/ph pr-d/codeph ">id</codeph>, метод возвращает значение <codeph class="+ topic/ph pr-d/codeph ">null</codeph>.
     
     </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.display:DisplayObject</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">id</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Идентификатор <codeph class="+ topic/ph pr-d/codeph ">id</codeph> для сопоставления (в атрибуте <codeph class="+ topic/ph pr-d/codeph ">id</codeph> тега <codeph class="+ topic/ph pr-d/codeph ">&lt;img></codeph>). 
     
     </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Возвращает ссылку DisplayObject по данному идентификатору <codeph class="+ topic/ph pr-d/codeph ">id</codeph> для изображения или SWF-файла, добавленного в текстовое поле с форматированием HTML с помощью тега <codeph class="+ topic/ph pr-d/codeph ">&lt;img></codeph>. Тег <codeph class="+ topic/ph pr-d/codeph ">&lt;img></codeph> имеет следующий формат:
     
     <p class="- topic/p "><pre xml:space="preserve" class="- topic/pre "><codeph class="+ topic/ph pr-d/codeph ">   &lt;img src = 'filename.jpg' id = 'instanceName' ></codeph></pre></p>
     
     </apiDesc><example conref="examples\TextField_getImageReferenceExample.as" class="- topic/example "> В следующем примере при щелчке по текстовому полю встроенное в него изображение становится прозрачным на 25 процентов и поворачивается на 90 градусов от исходного положения. Изображение продолжает поворачиваться при каждом последующем щелчке.
 
 <p class="- topic/p ">Изображение (<codeph class="+ topic/ph pr-d/codeph ">image.jpg</codeph>) добавлено с помощью HTML. (Предполагается, что файл изображения находится в том же каталоге, что и SWF-файл.) Необходимо определить атрибут <codeph class="+ topic/ph pr-d/codeph ">id</codeph> для тега <codeph class="+ topic/ph pr-d/codeph ">img</codeph>, чтобы получить изображение с помощью метода <codeph class="+ topic/ph pr-d/codeph ">getImageReference()</codeph>. Свойство <codeph class="+ topic/ph pr-d/codeph ">htmlText</codeph> используется для добавление строкового содержимого в формате HTML. Когда пользователь щелкает текстовое поле <codeph class="+ topic/ph pr-d/codeph ">myTextField</codeph>, вызывается метод <codeph class="+ topic/ph pr-d/codeph ">clickHandler()</codeph>.</p> 
 
 <p class="- topic/p ">В методе <codeph class="+ topic/ph pr-d/codeph ">clickHandler()</codeph> метод <codeph class="+ topic/ph pr-d/codeph ">getImageReference()</codeph> возвращает ссылку на изображение в качестве <codeph class="+ topic/ph pr-d/codeph ">DisplayObject</codeph>. Эта ссылка может использовать для выполнения манипуляций с изображением, как с любым объектом <codeph class="+ topic/ph pr-d/codeph ">DisplayObject</codeph>. В данном примере заданы свойства <codeph class="+ topic/ph pr-d/codeph ">alpha</codeph> (прозрачность) и <codeph class="+ topic/ph pr-d/codeph ">rotation</codeph>. Также можно использовать свойство <codeph class="+ topic/ph pr-d/codeph ">transform</codeph> для получения матрицы экранного объекта, преобразования цвета и пиксельных границ. Также обратите внимание, что необходимо импортировать объект <codeph class="+ topic/ph pr-d/codeph ">flash.display.DisplayObject</codeph>.</p> 
 
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
package {
    import flash.display.Sprite;
    import flash.text.TextField;
    import flash.events.Event;
    import flash.events.MouseEvent;
    import flash.display.DisplayObject;
    
    import flash.text.TextFieldAutoSize;
    
    public class TextField_getImageReferenceExample extends Sprite
    {
        private var myTextField:TextField = new TextField();
        
        public function TextField_getImageReferenceExample()
        {
            var myText1:String = "&lt;p>Here is an image we want to mainpulate: &lt;img src='image.jpg' id='testimage'>&lt;/p>";

            myTextField.x = 10;
            myTextField.y = 10;
            myTextField.width = 250;
            myTextField.height = 250;
            myTextField.background = true;
            myTextField.border = true;
            myTextField.border = true;
            myTextField.multiline = true;

            myTextField.htmlText = myText1;
            
            myTextField.addEventListener(MouseEvent.CLICK, clickHandler);
            
            this.addChild(myTextField);
        }
 
        private function clickHandler(e:MouseEvent):void {
            var imageRef:DisplayObject = myTextField.getImageReference("testimage");
 
            imageRef.rotation += 90;
            imageRef.x = 125;
            imageRef.y = 125;
            imageRef.alpha = 0.25;      
        }
    }
}
</codeblock></example></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.text.xml#TextField/htmlText" class="- topic/link "><linktext class="- topic/linktext ">htmlText</linktext></link></related-links></apiOperation><apiOperation id="flash.text:TextField:getLineIndexAtPoint" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">getLineIndexAtPoint</apiName><shortdesc class="- topic/shortdesc ">
     Возвращает значение индекса, отсчитываемое от нуля, для строки в точке с координатами x и y.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Отсчитываемое от нуля значение индекса для строки (например, первая строка — 0, вторая строка — 1 и т.д.). Возвращает -1, если точка не находится в области строки.
     
     </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">x</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Координата <i class="+ topic/ph hi-d/i ">x</i> строки.
     
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">y</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Координата <i class="+ topic/ph hi-d/i ">x</i> строки.
     
     </apiDesc></apiParam><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Значение индекса для строки в заданной точке, отсчитываемое от нуля.
     
     </apiTipText></apiTipTexts></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Возвращает значение индекса, отсчитываемое от нуля, для строки в точке с координатами <codeph class="+ topic/ph pr-d/codeph ">x</codeph> и <codeph class="+ topic/ph pr-d/codeph ">y</codeph>.
     
     </apiDesc><example conref="examples\TextField_getLineIndexAtPointExample.as" class="- topic/example "> В следующем примере, когда пользователь выбирает строку из сонета Шекспира, она копируется (добавляется) в новое текстовое поле.   
 
 <p class="- topic/p ">В конструкторе для текстового поля <codeph class="+ topic/ph pr-d/codeph ">poem</codeph> запрещается перенос, так как это стихотворение. Также используется свойство <codeph class="+ topic/ph pr-d/codeph ">autoSize</codeph> для автоматического соответствия поля тексту и для изменения размера с выравниванием по левому краю. Текстовое поле <codeph class="+ topic/ph pr-d/codeph ">poemCopy</codeph> располагается под полем <codeph class="+ topic/ph pr-d/codeph ">poem</codeph>. Когда пользователь щелкает по строке сонета, вызывается метод <codeph class="+ topic/ph pr-d/codeph ">clickHandler()</codeph>.</p>
 
 <p class="- topic/p ">В методе <codeph class="+ topic/ph pr-d/codeph ">clickHandler()</codeph> метод <codeph class="+ topic/ph pr-d/codeph ">getLineIndexAtPoint()</codeph> возвращает индекс строки, по которой щелкнул пользователь, на основе координат <codeph class="+ topic/ph pr-d/codeph ">localX</codeph> и <codeph class="+ topic/ph pr-d/codeph ">localY</codeph> щелчка мыши. (Так как стихотворение укладывается в исходный размер текстового поля, нет необходимости отлеживать ошибку (<codeph class="+ topic/ph pr-d/codeph ">RangeError</codeph>), выдаваемую методом <codeph class="+ topic/ph pr-d/codeph ">getCharIndexAtPoint()</codeph>.) Затем индекс строки используется для получения ее содержимого в виде строкового значения с помощью метода <codeph class="+ topic/ph pr-d/codeph ">getLineText()</codeph>, которое после этого добавляется к содержимому текстового поля <codeph class="+ topic/ph pr-d/codeph ">poemCopy</codeph>. Копирование может продолжаться бесконечно вплоть до момента, когда текст выйдет за пределы видимого текстового поля <codeph class="+ topic/ph pr-d/codeph ">poemCopy</codeph>.</p>    
 
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
package {
    import flash.display.Sprite;
    import flash.text.TextField;
    import flash.events.MouseEvent;
    import flash.text.TextFormat;
    import flash.text.TextFieldAutoSize;

    public class TextField_getLineIndexAtPointExample extends Sprite {
        private var poem:TextField = new TextField();
        private var poemCopy:TextField = new TextField();
        
        public function TextField_getLineIndexAtPointExample() {
            poem.border = true;
            poem.autoSize = TextFieldAutoSize.LEFT;
            poem.x = 10;
            poem.wordWrap = false;

            poemCopy.height = 250;
            poemCopy.width = 270;
            poemCopy.y = 230;
            poemCopy.x = 10;
            poemCopy.background = true;
            poemCopy.border = true;
            poemCopy.wordWrap = false;
            
            poem.appendText("Let me not to the marriage of true minds\n"
                              + "Admit impediments. love is not love\n"
                              + "Which alters when it alteration finds\n"
                              + "Or bends with the remover to remove:\n"
                              + "O no! it is an ever-fixed mark\n" 
                              + "That looks on tempests and is never shaken;\n"
                              + "It is the star to every wandering bark,\n"
                              + "Whose worth's unknown, although his height be taken.\n"
                              + "Love's not Time's fool, though rosy lips and cheeks\n"
                              + "Within his bending sickle's compass come:\n"
                              + "Love alters not with his brief hours and weeks,\n"
                              + "But bears it out even to the edge of doom.\n"
                              + "If this be error and upon me proved,\n"
                              + "I never writ, nor no man ever loved.");

           poem.addEventListener(MouseEvent.CLICK, clickHandler); 

           this.addChild(poem); 
           this.addChild(poemCopy);
        }
    
        private function clickHandler(e:MouseEvent):void {
                var index:int = poem.getLineIndexAtPoint(e.localX, e.localY);
                var s:String;

                s = poem.getLineText(index);
                poemCopy.appendText(s + "\n");
        }
    }
}
</codeblock></example></apiOperationDetail></apiOperation><apiOperation id="flash.text:TextField:getLineIndexOfChar" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">getLineIndexOfChar</apiName><shortdesc class="- topic/shortdesc ">
     Отсчитываемое от нуля значение индекса для строки, которая содержит символ, заданный параметром charIndex.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Указанный индекс символа находится за пределами диапазона.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">RangeError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">RangeError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Отсчитываемое от нуля значение индекса для строки.
     
     </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">charIndex</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Отсчитываемое от нуля значение индекса для символа (например, первый символ — 0, второй символ — 1 и т. д.).
     
     </apiDesc></apiParam><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Отсчитываемое от нуля значение индекса для строки, которая содержит символ, заданный параметром <codeph class="+ topic/ph pr-d/codeph ">charIndex</codeph>.
     
     </apiTipText></apiTipTexts></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Отсчитываемое от нуля значение индекса для строки, которая содержит символ, заданный параметром <codeph class="+ topic/ph pr-d/codeph ">charIndex</codeph>.
     
     </apiDesc><example conref="examples\TextField_getLineIndexOfCharExample.as" class="- topic/example "> В следующем примере метод <codeph class="+ topic/ph pr-d/codeph ">getLineIndexOfChar()</codeph> возвращает номера строк для сотого и пятисотого символов в текстовом поле.
 
 <p class="- topic/p ">Для текстового поля <codeph class="+ topic/ph pr-d/codeph ">myTextField</codeph> задается перенос слов и изменение размера с выравниванием по левому краю. Метод <codeph class="+ topic/ph pr-d/codeph ">getLineIndexOfChar()</codeph> возвращает индекс строки для символов с указанными индексами (100 и 500). Затем эти сведения добавляются после абзаца. Обратите внимание, что индекс строки отсчитывается от нуля, и поэтому индекс строки (<codeph class="+ topic/ph pr-d/codeph ">index</codeph>) увеличивается на 1 для получения номера строки. Кроме того, если изменяется размер экрана, номер строки может измениться, но информация останется без изменений, так как метод вызывается только один раз.</p> 
 
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
package {
    import flash.display.Sprite;
    import flash.text.TextField;
    import flash.text.TextFieldAutoSize;

    public class TextField_getLineIndexOfCharExample extends Sprite 
    {
        public function TextField_getLineIndexOfCharExample()
        {
            var myTextField:TextField = new TextField();
            
            myTextField.x = 10;
            myTextField.y = 10;
            myTextField.width = 200;
            myTextField.background = true;  
            myTextField.border = true;
            myTextField.wordWrap = true;
            myTextField.autoSize = TextFieldAutoSize.LEFT;

            myTextField.appendText("The TextField class is used to create display objects for "
                + "text display and input. All dynamic and input text fields in a SWF file" 
                + "are instances of the TextField class. You can use the TextField class "
                + "to perform low-level text rendering. However, in Flex, you typically use "
                + "the Label, Text, TextArea, and TextInput controls to process text. "  
                + "You can give a text field an instance name in the Property inspector "
                + "and use the methods and properties of the TextField class to manipulate it with ActionScript. "
                + "TextField instance names are displayed in the Movie Explorer and in the Insert "
                + "Target Path dialog box in the Actions panel.\n\n");

            var index:int = myTextField.getLineIndexOfChar(100);
            myTextField.appendText("100th character is in line: " +  (index + 1) + "\n");
            index = myTextField.getLineIndexOfChar(500);
            myTextField.appendText("500th character is in line: " + (index + 1));

            this.addChild(myTextField);
        }
    }
}
</codeblock></example></apiOperationDetail></apiOperation><apiOperation id="flash.text:TextField:getLineLength" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">getLineLength</apiName><shortdesc class="- topic/shortdesc ">
     Возвращает число символов в заданной строке текста.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">TextField, TextField.getLineLength, getLineLength
     
     </keyword></asCustoms></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Заданный номер строки находится за пределами диапазона.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">RangeError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">RangeError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Количество символов в строке.
     
     </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">lineIndex</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Номер строки, длину которой требуется определить.
     </apiDesc></apiParam><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Возвращает число символов в заданной строке текста.
     
     </apiTipText></apiTipTexts></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Возвращает число символов в заданной строке текста.
     
     </apiDesc><example conref="examples\TextField_getLineLengthExample.as" class="- topic/example "> В следующем примере, когда пользователь выбирает строку, ее длина (количество символов) отображается в отдельном текстовом поле. 
 <p class="- topic/p ">В качестве иллюстрации, для текстового поля <codeph class="+ topic/ph pr-d/codeph ">myTextField</codeph>, отображающего текст, который будет подсчитываться, задается значение <codeph class="+ topic/ph pr-d/codeph ">INPUT</codeph>, благодаря чему пользователи смогут изменять строки или добавлять строки между строк или в конце текста. (Создается пустая строка с помощью разрыва строки (<codeph class="+ topic/ph pr-d/codeph ">\n</codeph>) в конце последней строки.) Текстовое поле <codeph class="+ topic/ph pr-d/codeph ">countLines</codeph>, в котором отображается результат подсчета длины строки, помещается под полем <codeph class="+ topic/ph pr-d/codeph ">myTextField</codeph>, и его содержимое не реагирует на выделение. Когда пользователь щелкает строку в текстовом поле <codeph class="+ topic/ph pr-d/codeph ">myTextField</codeph>, вызывается метод <codeph class="+ topic/ph pr-d/codeph ">clickHandler()</codeph>.</p>
 <p class="- topic/p ">В методе <codeph class="+ topic/ph pr-d/codeph ">clickHandler()</codeph> метод <codeph class="+ topic/ph pr-d/codeph ">getLineIndexAtPoint()</codeph> возвращает индекс строки, по которой щелкнул пользователь, на основе координат <codeph class="+ topic/ph pr-d/codeph ">localX</codeph> и <codeph class="+ topic/ph pr-d/codeph ">localY</codeph> щелчка мыши. Первая инструкция <codeph class="+ topic/ph pr-d/codeph ">if</codeph> проверяет, щелкнул ли пользователь по символу. Если да, то метод <codeph class="+ topic/ph pr-d/codeph ">getLineLength()</codeph> возвращает число символов в строке на основе ее индекса. Обратите внимание, что пустые строки между строк содержат второй разрыв строки (<codeph class="+ topic/ph pr-d/codeph ">\n</codeph>), вследствие чего их длина составляет один символ, а пустая строка после последней строки не имеет символов. Пробел засчитывается как один символ. Пользователь может написать новую строку или изменить существующую и, щелкнув по ней, получить число символов. Если используется перенос текста и изменился размер экрана, то индекс строки может измениться.</p>
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
 package {
    import flash.display.Sprite;
    import flash.text.TextField;
    import flash.text.TextFieldType;
    import flash.events.Event;
    import flash.events.MouseEvent;

    public class TextField_getLineLengthExample extends Sprite {
        private var myTextField:TextField = new TextField();
        private var countLines:TextField = new TextField();  

        public function TextField_getLineLengthExample() {
            myTextField.x = 10;
            myTextField.y = 10;
            myTextField.width = 350;
            myTextField.height = 150;
            myTextField.background = true;
            myTextField.border = true;
            myTextField.type = TextFieldType.INPUT;
            
            myTextField.appendText("Click on the lines to count its number of characters:\n\n");
            myTextField.appendText("This is a short line.\n");
            myTextField.appendText("This is a longer line than the last line.\n\n");
            myTextField.appendText("This one is even longer than the one before. It has two sentences.\n");

            this.addChild(myTextField);

            countLines.border = true;
            countLines.x = 10;
            countLines.y = 180;
            countLines.height = 30;
            countLines.width = 200;
            countLines.background = true;
            countLines.selectable = false;

           this.addChild(countLines);    

            myTextField.addEventListener(MouseEvent.CLICK, clickHandler);
        }

        private function clickHandler(e:MouseEvent):void {
            var index:int = myTextField.getLineIndexAtPoint(e.localX, e.localY);
        
            if (index != -1) {
            var lenght:int = myTextField.getLineLength(index);

            countLines.text = "Number of characters in the line is: " + lenght.toString();
            }
        }
    }
}
</codeblock></example></apiOperationDetail></apiOperation><apiOperation id="flash.text:TextField:getLineMetrics" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">getLineMetrics</apiName><shortdesc class="- topic/shortdesc ">
     Возвращает данные метрик для заданной строки текста.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">TextField, TextField.getLineMetrics, getLineMetrics
     
     </keyword></asCustoms></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Заданный номер строки находится за пределами диапазона.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">RangeError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">RangeError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Объект TextLineMetrics.
     </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.text:TextLineMetrics</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">lineIndex</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Номер строки, для которой требуется получить данные метрик.
     </apiDesc></apiParam><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Возвращает данные метрик для заданной строки текста.
     
     </apiTipText></apiTipTexts></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Возвращает данные метрик для заданной строки текста.
     
     </apiDesc><example conref="examples\TextField_getLineMetricsExample.as" class="- topic/example "> В следующем примере отображаются некоторые значения метрик строки для двух строк текста с разным форматированием.
 
 <p class="- topic/p ">Добавляются две строки из стихотворения Уолта Уитмена <i class="+ topic/ph hi-d/i ">Песня о себе</i>. Новый объект TextFormat (<codeph class="+ topic/ph pr-d/codeph ">newFormat</codeph>) используется для указания формата второй строки. Первая строка сохраняет формат по умолчанию. Метод <codeph class="+ topic/ph pr-d/codeph ">getLineMetrics()</codeph> возвращает объект <codeph class="+ topic/ph pr-d/codeph ">TextLineMetrics</codeph> для конкретной строки. (Индекс строки отсчитывается от нуля.) С использованием объектов TextLineMetrics с именами <codeph class="+ topic/ph pr-d/codeph ">metrics1</codeph> и <codeph class="+ topic/ph pr-d/codeph ">metrics2</codeph> для строк 1 и 2 соответственно получаются и отображаются значения для верхнего выносного элемента, нижнего выносного элемента, высоты и веса строки. Полученные числа преобразуются в строковые значения, но не округляются. Обратите внимание, что это значение для строки, а не для отдельного символа. Оно отражает диапазон символов всей строки. Например, если в строке есть разные символы с разными форматами высоты, то это значение будет определяться символом с наибольшей высотой. Так же это значит, что при изменении формата одного из символов могут измениться и некоторые значения метрик.</p>
  
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
package {
    import flash.display.Sprite;
    import flash.text.TextField;
    import flash.text.TextLineMetrics;
    import flash.text.TextFieldAutoSize;
    import flash.text.AntiAliasType;
    import flash.text.TextFormat;
 
    public class TextField_getLineMetricsExample extends Sprite {

        public function TextField_getLineMetricsExample() {
            var myTextField:TextField = new TextField();
            var newFormat:TextFormat = new TextFormat(); 

            myTextField.x = 10;
            myTextField.y = 10;
            myTextField.background = true;
            myTextField.wordWrap = false;
            myTextField.autoSize = TextFieldAutoSize.LEFT;
            
            myTextField.appendText("A child said What is the grass? fetching it to me with full hands;\n");
            myTextField.appendText("How could I answer the child? I do not know what it is any more than he.\n\n");

            newFormat.size = 14;
            newFormat.font = "Arial";
            newFormat.italic = true;
            myTextField.setTextFormat(newFormat, 67, 139);
               
            var metrics1:TextLineMetrics = myTextField.getLineMetrics(0);
             
            myTextField.appendText("Metrics ascent for the line 1 is: " + metrics1.ascent.toString() + "\n");
            myTextField.appendText("Metrics descent is: " + metrics1.descent.toString() + "\n");
            myTextField.appendText("Metrics height is: " + metrics1.height.toString() + "\n"); 
            myTextField.appendText("Metrics width is: " + metrics1.width.toString() + "\n\n");

            var metrics2:TextLineMetrics = myTextField.getLineMetrics(1);
             
            myTextField.appendText("Metrics ascent for the line 2 is: " + metrics2.ascent.toString() + "\n");
            myTextField.appendText("Metrics descent is: " + metrics2.descent.toString() + "\n");
            myTextField.appendText("Metrics height is: " + metrics2.height.toString() + "\n"); 
            myTextField.appendText("Metrics width is: " + metrics2.width.toString() + "\n");

            addChild(myTextField);
        }
    }
}
</codeblock></example></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.text.xml#TextLineMetrics" class="- topic/link "><linktext class="- topic/linktext ">flash.text.TextLineMetrics</linktext></link><link href="flash.text.xml#TextLineMetrics" class="- topic/link "><linktext class="- topic/linktext ">flash.text.TextLineMetrics</linktext></link></related-links></apiOperation><apiOperation id="flash.text:TextField:getLineOffset" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">getLineOffset</apiName><shortdesc class="- topic/shortdesc ">
     Возвращает индекс первого символа в строке, заданной параметром lineIndex.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Заданный номер строки находится за пределами диапазона.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">RangeError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">RangeError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Отсчитываемое от нуля значение индекса для первого символа в строке.
     
     </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">lineIndex</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Отсчитываемое от нуля значение индекса для строки (например, первая строка — 0, вторая строка — 1 и т.д.).
     
     </apiDesc></apiParam><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Отсчитываемое от нуля значение индекса для первого символа в строке.
     
     </apiTipText></apiTipTexts></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Возвращает индекс первого символа в строке, заданной параметром <codeph class="+ topic/ph pr-d/codeph ">lineIndex</codeph>.
     
     </apiDesc><example conref="examples\TextField_getLineOffsetExample.as" class="- topic/example "> В следующем примере определяется индекс первого символа в строке 4, который изменится при изменении размеров экрана (и текстового поля).
 
 <p class="- topic/p ">Для текстового поля <codeph class="+ topic/ph pr-d/codeph ">myTextField</codeph> разрешается перенос слов. В текстовом поле <codeph class="+ topic/ph pr-d/codeph ">countField</codeph> будет отображаться первый символ строки 4. Когда пользователь щелкает текстовое поле <codeph class="+ topic/ph pr-d/codeph ">myTextField</codeph>, вызывается метод <codeph class="+ topic/ph pr-d/codeph ">clickHandler()</codeph>.</p>
 
 <p class="- topic/p ">В методе <codeph class="+ topic/ph pr-d/codeph ">clickHandler()</codeph> метод <codeph class="+ topic/ph pr-d/codeph ">getLineOffset()</codeph> возвращает индекс первого символа в строке с индексом 3, которая является четвертой строкой текста. (Первая строка имеет индекс 0.) Метод <codeph class="+ topic/ph pr-d/codeph ">charAt()</codeph> используется для получения символа на основе индекса первого символа четвертой строки. Содержимое <codeph class="+ topic/ph pr-d/codeph ">countField</codeph> обновляется этой информацией с помощью свойства<codeph class="+ topic/ph pr-d/codeph ">text</codeph> текстового поля<codeph class="+ topic/ph pr-d/codeph ">countField</codeph>. Использование свойства <codeph class="+ topic/ph pr-d/codeph ">countField.text</codeph> означает, что после каждого щелчка мыши содержимое текстового поля <codeph class="+ topic/ph pr-d/codeph ">countField</codeph> будет переписываться. Если пользователь изменит размер экрана, содержимое будет перенесено, и первый символ строки 4 может измениться. При повторном щелчке по полю <codeph class="+ topic/ph pr-d/codeph ">myTextField</codeph> содержимое текстового поля <codeph class="+ topic/ph pr-d/codeph ">countField</codeph> обновляется, отображая новый первый символ четвертой строки.</p>    
 
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
package {
    import flash.display.Sprite;
    import flash.text.TextField;
    import flash.events.MouseEvent;

    public class TextField_getLineOffsetExample extends Sprite {
        private var myTextField:TextField = new TextField();
        private var countField:TextField = new TextField();
        
        public function TextField_getLineOffsetExample() {
            myTextField.x = 10;
            myTextField.y = 10;
            myTextField.width = 150;
            myTextField.height = 300;
            myTextField.background = true;
            myTextField.border = true;
            myTextField.wordWrap = true;

            countField.height = 20;
            countField.width = 200;
            countField.x = 10;
            countField.y = 320;
            countField.selectable = false;
            
            myTextField.appendText("The TextField class is used to create display objects for "
                        + "text display and input. All dynamic and input text fields in a SWF file " 
                        + "are instances of the TextField class. You can use the TextField class "
                        + "to perform low-level text rendering. However, in Flex, you typically use "
                        + "the Label, Text, TextArea, and TextInput controls to process text. "  
                        + "You can give a text field an instance name in the Property inspector "
                        + "and use the methods and properties of the TextField class to manipulate it with ActionScript.");

            myTextField.addEventListener(MouseEvent.CLICK, clickHandler);
        
            this.addChild(myTextField);
            this.addChild(countField);
        }
    
            private function clickHandler(e:MouseEvent):void {
                var c:String;
                var index:int;
                
                index = myTextField.getLineOffset(3);
                c = myTextField.text.charAt(index);
                countField.text = "The first character of line 4 is: " + c;
            }
    }
}
</codeblock></example></apiOperationDetail></apiOperation><apiOperation id="flash.text:TextField:getLineText" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">getLineText</apiName><shortdesc class="- topic/shortdesc ">
     Возвращает текст строки, заданной параметром lineIndex.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Заданный номер строки находится за пределами диапазона.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">RangeError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">RangeError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Текстовая строка, содержащаяся в заданной строке.
     
     </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">lineIndex</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Отсчитываемое от нуля значение индекса для строки (например, первая строка — 0, вторая строка — 1 и т. д.).
     
     </apiDesc></apiParam><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Текстовая строка, содержащаяся в заданной строке.
     
     </apiTipText></apiTipTexts></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Возвращает текст строки, заданной параметром <codeph class="+ topic/ph pr-d/codeph ">lineIndex</codeph>.
     
     </apiDesc><example conref="examples\TextField_getLineTextExample.as" class="- topic/example "> В следующем примере определяются и отображаются номера строк всех случаев употребления слова love в тексте сонета Шекспира.
 
 <p class="- topic/p ">Для текстового поля <codeph class="+ topic/ph pr-d/codeph ">poem</codeph> задано автоматическое соответствие тексту и изменение размера с выравниванием по левому краю. Свойству <codeph class="+ topic/ph pr-d/codeph ">wordWrap</codeph> задано значение <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, чтобы строки стихотворения не переносились, хотя обычно при использовании свойства <codeph class="+ topic/ph pr-d/codeph ">autoSize</codeph> это не вызывает проблем. Цикл <codeph class="+ topic/ph pr-d/codeph ">for</codeph> повторяет процедуру для всех строк сонета с использованием свойства <codeph class="+ topic/ph pr-d/codeph ">numLines</codeph> текстового поля. Метод <codeph class="+ topic/ph pr-d/codeph ">getLineText()</codeph> возвращает содержимое строки в виде строкового значения. (Обратите внимание, что свойство <codeph class="+ topic/ph pr-d/codeph ">numLines</codeph> возвращает количество строк, начиная со строки 1, а метод <codeph class="+ topic/ph pr-d/codeph ">getLineText()</codeph> начинает отсчет строк с 0.) С помощью регулярного выражения (<codeph class="+ topic/ph pr-d/codeph ">/love/i</codeph>) оператор <codeph class="+ topic/ph pr-d/codeph ">if</codeph> ищет любую подстроку слова, написанного заглавными и строчными буквами. Если слово обнаружено, метод <codeph class="+ topic/ph pr-d/codeph ">search</codeph> возвращает индекс первой соответствующей подстроки, в противном случае он возвращает значение <codeph class="+ topic/ph pr-d/codeph ">-1</codeph> (если соответствий не найдено). Строка, в которой найдено слово love (<codeph class="+ topic/ph pr-d/codeph ">(i + 1)</codeph>) помещается в строковое значение <codeph class="+ topic/ph pr-d/codeph ">lineResult</codeph>. Метод string преобразует аргумент номера (<codeph class="+ topic/ph pr-d/codeph ">(i + 1)</codeph>) в строковое значение, если присутствует другой строковый аргумент (" "). Результат поиска будет включать строки со словами loved или Love's. Если перед циклом <codeph class="+ topic/ph pr-d/codeph ">for</codeph> была добавлена строка «Слово love найдено в строках:», то слово Love в этой строке также будет включено в результат.</p>
 
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
package {
    import flash.display.Sprite;
    import flash.text.TextField;
    import flash.text.TextFieldAutoSize;
    import flash.utils.Timer;
    import flash.events.TimerEvent;
 
    public class TextField_getLineTextExample extends Sprite {
           
        public function TextField_getLineTextExample() {
           var poem:TextField = new TextField();
           var lineResult:String = ""; 
           var pattern:RegExp = /love/i;

            poem.x = 10;
            poem.y = 10;
            poem.background = true;
            poem.wordWrap = false;
            poem.autoSize = TextFieldAutoSize.LEFT;
            
            poem.text = "Let me not to the marriage of true minds\n"
                              + "Admit impediments. love is not love\n"
                              + "Which alters when it alteration finds\n"
                              + "Or bends with the remover to remove:\n"
                              + "O no! it is an ever-fixed mark\n" 
                              + "That looks on tempests and is never shaken;\n"
                              + "It is the star to every wandering bark,\n"
                              + "Whose worth's unknown, although his height be taken.\n"
                              + "Love's not Time's fool, though rosy lips and cheeks\n"
                              + "Within his bending sickle's compass come:\n"
                              + "Love alters not with his brief hours and weeks,\n"
                              + "But bears it out even to the edge of doom.\n"
                              + "If this be error and upon me proved,\n"
                              + "I never writ, nor no man ever loved.\n\n";

            for (var i:int = 0; i &lt; poem.numLines; i++) {

                var s:String = poem.getLineText(i);
                        
                if(s.search(pattern) != -1) {
                    lineResult += (i + 1) + " ";
                }
            }

            poem.appendText("Love was found in lines: " + lineResult);
             
            this.addChild(poem);                      
        }
    }
}
</codeblock></example></apiOperationDetail></apiOperation><apiOperation id="flash.text:TextField:getParagraphLength" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">getParagraphLength</apiName><shortdesc class="- topic/shortdesc ">
     Используя полученный индекс символа, возвращает длину абзаца, содержащего этот символ.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Указанный индекс символа находится за пределами диапазона.
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">RangeError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">RangeError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Возвращает количество символов в абзаце.
     
     </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">charIndex</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Отсчитываемое от нуля значение индекса для символа (например, первый символ — 0, второй символ — 1 и т. д.).
     
     </apiDesc></apiParam><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Отсчитываемое от нуля значение индекса для символа.
     
     </apiTipText></apiTipTexts></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Используя полученный индекс символа, возвращает длину абзаца, содержащего этот символ. Длина отсчитывается от первого символа в абзаце (возвращенного методом <codeph class="+ topic/ph pr-d/codeph ">getFirstCharInParagraph()</codeph>), а не от переданного индекса символа.
     
     </apiDesc><example conref="examples\TextField_getParagraphLengthExample.as" class="- topic/example "> В следующем примере, когда пользователь выделяет абзац, в отдельном текстовом поле отображается его длина и количество символов s.
 
 <p class="- topic/p ">В текстовом поле <codeph class="+ topic/ph pr-d/codeph ">myTextField</codeph> отображаются абзацы, которые будет выбирать пользователь. При щелчке по текстовому полю отправляется событие <codeph class="+ topic/ph pr-d/codeph ">MouseEvent.CLICK</codeph>, и вызывается метод <codeph class="+ topic/ph pr-d/codeph ">clickHandler()</codeph>. Длина абзаца и количество символов s будут отображаться в текстовом поле <codeph class="+ topic/ph pr-d/codeph ">countField</codeph>, расположенном под полем <codeph class="+ topic/ph pr-d/codeph ">myTextField</codeph>.</p> 
 
 <p class="- topic/p ">В методе <codeph class="+ topic/ph pr-d/codeph ">clickHandler()</codeph> метод <codeph class="+ topic/ph pr-d/codeph ">getCharIndexAtPoint()</codeph> возвращает индекс символа на основе координат <codeph class="+ topic/ph pr-d/codeph ">localX</codeph> и <codeph class="+ topic/ph pr-d/codeph ">localY</codeph> щелчка мыши. Первая инструкция <codeph class="+ topic/ph pr-d/codeph ">if</codeph> проверяет, щелкнул ли пользователь по символу. Метод <codeph class="+ topic/ph pr-d/codeph ">getFirstCharInParagraph()</codeph> использует этот индекс, чтобы получить индекс первого символа в том же абзаце. Длина абзаца, возвращенная методом <codeph class="+ topic/ph pr-d/codeph ">getParagraphLength()</codeph>, используется вместе с индексом первого символа в абзаце для определения индекса последнего символа. Цикл <codeph class="+ topic/ph pr-d/codeph ">for</codeph> повторяет операцию поиска и подсчета символов s в абзаце.</p>  
 
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
package {
    import flash.display.Sprite;
    import flash.text.TextField;
    import flash.events.MouseEvent;

    public class TextField_getParagraphLengthExample extends Sprite {
        private var myTextField:TextField = new TextField();
        private var countField:TextField = new TextField();

        public function TextField_getParagraphLengthExample() {
            myTextField.x = 10;
            myTextField.y = 10;
            myTextField.background = true;
            myTextField.border = true;
            myTextField.wordWrap = true;
            myTextField.width = 300;
            myTextField.height = 280;
            
            myTextField.appendText("The TextField class is used to create display objects for "
                        + "text display and input. All dynamic and input text fields in a SWF file" 
                        + "are instances of the TextField class. You can use the TextField class "
                        + "to perform low-level text rendering. However, in Flex, you typically use "
                        + "the Label, Text, TextArea, and TextInput controls to process text. "  
                        + "You can give a text field an instance name in the Property inspector "
                        + "and use the methods and properties of the TextField class to manipulate it with ActionScript. "
                        + "TextField instance names are displayed in the Movie Explorer and in the Insert "
                        + "Target Path dialog box in the Actions panel.\n\n"  
                        + "To create a text field dynamically, use the TextField() constructor.\n\n"
                        + "The methods of the TextField class let you set, select, and manipulate "  
                        + "text in a dynamic or input text field that you create during authoring or at runtime.");

            myTextField.addEventListener(MouseEvent.CLICK, clickHandler);
            
            countField.x = 10;
            countField.y = 300;
            countField.height = 50;
            countField.width = 250;
            countField.background = true;
            countField.selectable = false;

            this.addChild(myTextField);
            this.addChild(countField);
        }

        private function clickHandler(e:MouseEvent):void {
            var index:int = myTextField.getCharIndexAtPoint(e.localX, e.localY);
            
            if(index != -1) {
                var beginParag:int = myTextField.getFirstCharInParagraph(index);
                var paragLength:int = myTextField.getParagraphLength(index);
                var endParag:int = beginParag + paragLength;
                var sCount:uint = 0;

                for (var i:int = beginParag; i &lt;= endParag; i++) {
                    if ((myTextField.text.charAt(i) == "s") || (myTextField.text.charAt(i) == "S")) {
                        sCount++; 
                    }

                countField.text = "Paragraph length is: " + paragLength.toString() + "\n" 
                        + "Number of 's' characters in the paragraph: " + sCount.toString();
                }
            }
        }
    }
}
</codeblock></example></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.text.xml#TextField/getFirstCharInParagraph()" class="- topic/link "><linktext class="- topic/linktext ">flash.text.TextField.getFirstCharInParagraph()</linktext></link></related-links></apiOperation><apiOperation id="flash.text:TextField:getTextFormat" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">getTextFormat</apiName><shortdesc class="- topic/shortdesc ">
     Возвращает объект TextFormat, содержащий данные о форматировании для фрагмента текста, заданного параметрами beginIndex и endIndex.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">TextField, TextField.getTextFormat, getTextFormat
     
     </keyword></asCustoms></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Заданный параметр <codeph class="+ topic/ph pr-d/codeph ">beginIndex</codeph> или <codeph class="+ topic/ph pr-d/codeph ">endIndex</codeph> находится за пределами диапазона.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">RangeError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">RangeError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Объект TextFormat, представляющий свойства форматирования для указанного текста.
     
     </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.text:TextFormat</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">beginIndex</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">-1</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Необязательно; целое число, указывающее начальное положение фрагмента текста в текстовом поле.
     
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">endIndex</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">-1</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Необязательно: целое число, указывающее положение первого символа после нужного фрагмента текста. В соответствии с дизайном, если задать значения <codeph class="+ topic/ph pr-d/codeph ">beginIndex</codeph> и <codeph class="+ topic/ph pr-d/codeph ">endIndex</codeph>, считывается текст с <codeph class="+ topic/ph pr-d/codeph ">beginIndex</codeph> по <codeph class="+ topic/ph pr-d/codeph ">endIndex-1</codeph>. 
     
     </apiDesc></apiParam><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Возвращает объект TextFormat.
     
     </apiTipText></apiTipTexts></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Возвращает объект TextFormat, содержащий данные о форматировании для фрагмента текста, заданного параметрами <codeph class="+ topic/ph pr-d/codeph ">beginIndex</codeph> и <codeph class="+ topic/ph pr-d/codeph ">endIndex</codeph>. В полученном объекте TextFormat задаются только свойства, используемые для всего заданного текста. <i class="+ topic/ph hi-d/i ">Смешанные</i> свойства (те, которые имеют разные значения для разных участков текста) имеют значение <codeph class="+ topic/ph pr-d/codeph ">null</codeph>.
     
     <p class="- topic/p ">Если не задать значения для этих параметров, то метод применяется ко всему содержимому текстового поля.  </p>
     
     <p class="- topic/p ">В следующей таблице описываются три способа применения.</p>
     
     <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Применение</entry><entry class="- topic/entry ">Описание</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">my_textField.getTextFormat()</codeph></entry><entry class="- topic/entry ">Возвращает объект TextFormat, содержащий информацию о форматировании для всего содержимого текстового поля. В полученном объекте TextFormat задаются только свойства, используемые для всего текста в текстовом поле. <i class="+ topic/ph hi-d/i ">Смешанные</i> свойства (те, которые имеют разные значения для разных участков текста) имеют значение <codeph class="+ topic/ph pr-d/codeph ">null</codeph>.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">my_textField.getTextFormat(beginIndex:Number)</codeph></entry><entry class="- topic/entry ">Возвращает объект TextFormat, содержащий копию формата текста для символа в положении <codeph class="+ topic/ph pr-d/codeph ">beginIndex</codeph>.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">my_textField.getTextFormat(beginIndex:Number,endIndex:Number)</codeph></entry><entry class="- topic/entry ">Возвращает объект TextFormat, содержащий информацию о форматировании для фрагмента текста от <codeph class="+ topic/ph pr-d/codeph ">beginIndex</codeph> до <codeph class="+ topic/ph pr-d/codeph ">endIndex-1</codeph>. В полученном объекте TextFormat задаются только свойства, используемые для всего заданного текста. Смешанные свойства (те, которые имеют разные значения для разных участков выбранного текста) имеют значение <codeph class="+ topic/ph pr-d/codeph ">null</codeph>.</entry></row></tbody></tgroup></adobetable>
     
     </apiDesc><example class="- topic/example ">См. примеры метода <xref href="TextField.html#getFirstCharInParagraph()" class="- topic/xref ">getFirstCharInParagraph()</xref> или <xref href="TextField.html#setTextFormat()" class="- topic/xref ">setTextFormat()</xref>, иллюстрирующие использование <codeph class="+ topic/ph pr-d/codeph ">getTextFormat()</codeph>. 
      
      </example></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.text.xml#TextFormat" class="- topic/link "><linktext class="- topic/linktext ">flash.text.TextFormat</linktext></link><link href="flash.text.xml#TextField/defaultTextFormat" class="- topic/link "><linktext class="- topic/linktext ">flash.text.TextField.defaultTextFormat</linktext></link><link href="flash.text.xml#TextField/setTextFormat()" class="- topic/link "><linktext class="- topic/linktext ">flash.text.TextField.setTextFormat()</linktext></link></related-links></apiOperation><apiOperation id="flash.text:TextField:isFontCompatible" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">isFontCompatible</apiName><shortdesc class="- topic/shortdesc ">
     Возвращает значение true, если доступен встроенный шрифт с указанными свойствами fontName и fontStyle, где Font.fontType — это flash.text.FontType.EMBEDDED.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Заданное свойство <codeph class="+ topic/ph pr-d/codeph ">fontStyle</codeph> не является членом <codeph class="+ topic/ph pr-d/codeph ">flash.text.FontStyle</codeph>.
      
      </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Значение <codeph class="+ topic/ph pr-d/codeph ">true</codeph>, если доступен совместимый встроенный шрифт, в противном случае, значение — <codeph class="+ topic/ph pr-d/codeph ">false</codeph>.
     
     </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">fontName</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Имя проверяемого встроенного шрифта.
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">fontStyle</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Задает стиль шрифта для проверки. Используйте <codeph class="+ topic/ph pr-d/codeph ">flash.text.FontStyle</codeph>
     </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Возвращает значение true, если доступен встроенный шрифт с указанными свойствами <codeph class="+ topic/ph pr-d/codeph ">fontName</codeph> и <codeph class="+ topic/ph pr-d/codeph ">fontStyle</codeph>, где <codeph class="+ topic/ph pr-d/codeph ">Font.fontType</codeph> — это <codeph class="+ topic/ph pr-d/codeph ">flash.text.FontType.EMBEDDED</codeph>. Начиная с Flash Player 10, SWF-файле могут отображаться два вида встроенных шрифтов. Обычные встроенные шрифты используются только с объектами TextField. Встроенные шрифты CFF используются только с классами flash.text.engine. Два типа различаются свойством <codeph class="+ topic/ph pr-d/codeph ">fontType</codeph> класса <codeph class="+ topic/ph pr-d/codeph ">Font</codeph>, возвращенным функцией <codeph class="+ topic/ph pr-d/codeph ">enumerateFonts()</codeph>.
     
     <p class="- topic/p ">Объект TextField не может использовать шрифт типа <codeph class="+ topic/ph pr-d/codeph ">EMBEDDED_CFF</codeph>. Если свойство <codeph class="+ topic/ph pr-d/codeph ">embedFonts</codeph> имеет значение <codeph class="+ topic/ph pr-d/codeph ">true</codeph> и в среде выполнения единственным доступным шрифтом с заданным именем и стилем является шрифт типа <codeph class="+ topic/ph pr-d/codeph ">EMBEDDED_CFF</codeph>, Flash Player не визуализирует текст, как если бы встроенного шрифта с заданным именем и стилем не было.</p>
     
     <p class="- topic/p ">Если имеются шрифты <codeph class="+ topic/ph pr-d/codeph ">EMBEDDED</codeph> и <codeph class="+ topic/ph pr-d/codeph ">EMBEDDED_CFF</codeph> с одинаковым именем и стилем, выбирается шрифт типа <codeph class="+ topic/ph pr-d/codeph ">EMBEDDED</codeph> и используется для визуализации текста с помощью шрифта <codeph class="+ topic/ph pr-d/codeph ">EMBEDDED</codeph>.</p>
     
     </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#FontDescription/fontLookup" class="- topic/link "><linktext class="- topic/linktext ">flash.text.engine.FontDescription.fontLookup</linktext></link><link href="flash.text.engine.xml#TextBlock/createTextLine()" class="- topic/link "><linktext class="- topic/linktext ">flash.text.engine.TextBlock.createTextLine()</linktext></link><link href="flash.text.xml#FontType/EMBEDDED_CFF" class="- topic/link "><linktext class="- topic/linktext ">flash.text.FontType.EMBEDDED_CFF</linktext></link></related-links></apiOperation><apiOperation id="flash.text:TextField:replaceSelectedText" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">replaceSelectedText</apiName><shortdesc class="- topic/shortdesc ">
     Заменяет текущий выделенный фрагмент содержимым параметра value.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">TextField, TextField.replaceSelectedText, replaceSelectedText
     
     </keyword></asCustoms></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Этот метод невозможно использовать для текстового поля с таблицей стилей.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">Error</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Error</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">value</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Строка для замены текущего выделенного текста.
     
     </apiDesc></apiParam><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Заменяет текущий выделенный фрагмент содержимым параметра value.
     
     </apiTipText></apiTipTexts></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Заменяет текущий выделенный фрагмент содержимым параметра <codeph class="+ topic/ph pr-d/codeph ">value</codeph>. Текст вставляется в положении текущего выделенного фрагмента с использованием текущих форматов символов и абзаца по умолчанию. Текст обрабатывается не как HTML.
     
     <p class="- topic/p ">Можно использовать метод <codeph class="+ topic/ph pr-d/codeph ">replaceSelectedText()</codeph> для вставки и удаления текста без нарушения форматирования символов и абзацев остальной части текста.</p>
     <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Примечание.</b> Этот метод не работает, если к текстовому полю применена таблица стилей.</p>
     
     
     </apiDesc><example conref="examples\TextField_replaceSelectedTextExample.as" class="- topic/example "> В следующем примере пользователь удаляет часть текста из первого текстового поля путем выделения и заменяет выделенный текст во втором поле строкой NEW TEXT.
 
 <p class="- topic/p ">Создаются два разных объекта TextField, к которым добавляются два прослушивателя события <codeph class="+ topic/ph pr-d/codeph ">MouseEvent.MOUSE_UP</codeph>. Это событие (подъем мыши) происходит, когда пользователь отпускает кнопку мыши, что обычно бывает после выделения текста. Обратите внимание, что по умолчанию текстовое поле допускает выделение текста.</p>
 
 <p class="- topic/p ">Метод <codeph class="+ topic/ph pr-d/codeph ">mouseHandler1()</codeph> стирает выделенный текст, заменяя его пустой строкой, когда пользователь отпускает кнопку мыши в текстовом поле <codeph class="+ topic/ph pr-d/codeph ">myTextField1</codeph>. Это может продолжаться, пока не будет удален весь текст. Когда пользователь выделяет текст в текстовом поле <codeph class="+ topic/ph pr-d/codeph ">myTextField2</codeph>, метод <codeph class="+ topic/ph pr-d/codeph ">mouseHandler2()</codeph> проверяет свойства <codeph class="+ topic/ph pr-d/codeph ">selectionBeginIndex</codeph> и <codeph class="+ topic/ph pr-d/codeph ">selectionEndIndex</codeph>, чтобы определить, выделены ли символы. (Свойства <codeph class="+ topic/ph pr-d/codeph ">selectionBeginIndex</codeph> и <codeph class="+ topic/ph pr-d/codeph ">selectionEndIndex</codeph> имеют разное значение при выделении текста.) После этого выделенный текст заменяется строкой «NEW TEXT». Это может продолжаться до тех пор, пока весь исходный текст во втором текстовом поле не будет заменен строкой NEW TEXT.</p>
 
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
package {
    import flash.display.Sprite;
    import flash.text.TextField;    
    import flash.events.MouseEvent;

    public class TextField_replaceSelectedTextExample extends Sprite {
        private var myTextField1:TextField = new TextField();
        private var myTextField2:TextField = new TextField();
        
        public function TextField_replaceSelectedTextExample() {
            myTextField1.x = 10;
            myTextField1.width = 300;
            myTextField1.height = 50; 
            myTextField1.background = true; 
            myTextField1.border = true;
            myTextField1.text = "Select the text you want to remove from the line.";
            
            myTextField2.x = 10;
            myTextField2.y = 60;
            myTextField2.width = 300;
            myTextField2.height = 50;
            myTextField2.background = true;
            myTextField2.border = true;
            myTextField2.text = "Select the text you want to replace with NEW TEXT.";
            
            myTextField1.addEventListener(MouseEvent.MOUSE_UP, mouseHandler1);
            myTextField2.addEventListener(MouseEvent.MOUSE_UP, mouseHandler2);
            
            this.addChild(myTextField1);
            this.addChild(myTextField2);
        }
        
        private function mouseHandler1(e:MouseEvent):void {
            myTextField1.replaceSelectedText("");
        }

        private function mouseHandler2(e:MouseEvent):void {
            if(myTextField2.selectionBeginIndex != myTextField2.selectionEndIndex) {
                myTextField2.replaceSelectedText("NEW TEXT");    
            }
        }
    }
}
</codeblock></example></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.display.xml#Stage/focus" class="- topic/link "><linktext class="- topic/linktext ">flash.display.Stage.focus</linktext></link></related-links></apiOperation><apiOperation id="flash.text:TextField:replaceText" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">replaceText</apiName><shortdesc class="- topic/shortdesc ">
     Заменяет диапазон символов, заданный параметрами beginIndex и endIndex, содержанием параметра newText.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">
     
     </keyword></asCustoms></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Этот метод невозможно использовать для текстового поля с таблицей стилей.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">Error</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Error</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">beginIndex</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Отсчитываемое от нуля значение индекса для начального положения диапазона замены.
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">endIndex</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Отсчитываемая от нуля позиция индекса первого символа после требуемого фрагмента текста.
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">newText</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Текст для замены заданного диапазона символов.
     
     </apiDesc></apiParam><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Заменяет диапазон символов.
     
     </apiTipText></apiTipTexts></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Заменяет диапазон символов, заданный параметрами <codeph class="+ topic/ph pr-d/codeph ">beginIndex</codeph> и <codeph class="+ topic/ph pr-d/codeph ">endIndex</codeph>, содержанием параметра <codeph class="+ topic/ph pr-d/codeph ">newText</codeph>. Согласно плану, заменяется текст от <codeph class="+ topic/ph pr-d/codeph ">beginIndex</codeph> до <codeph class="+ topic/ph pr-d/codeph ">endIndex-1</codeph>.  
     <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Примечание.</b> Этот метод не работает, если к текстовому полю применена таблица стилей.</p>
     
     </apiDesc><example conref="examples\TextField_replaceTextExample.as" class="- topic/example "> В следующем примере используется метод <codeph class="+ topic/ph pr-d/codeph ">replaceText()</codeph> для удаления, замены и вставки текста в текстовое поле.
 
 <p class="- topic/p ">Для текстового поля <codeph class="+ topic/ph pr-d/codeph ">outputText</codeph> задано автоматическое соответствие размерам текста и изменение размера с выравниванием по левому краю. Первый вызов метода <codeph class="+ topic/ph pr-d/codeph ">replaceText()</codeph> заменяет первую строку (This is the wrong heading (Это неправильный заголовок)) текстом THIS IS THE HEADING FOR EVERYONE (ЭТО ЗАГОЛОВОК ДЛЯ ВСЕХ). Второй вызов метода вставляет слово CORRECT (ПРАВИЛЬНЫЙ) между THE и HEADING. Третий вызов метода удаляет слова FOR EVERYONE. Обратите внимание, что при каждом вызове метода<codeph class="+ topic/ph pr-d/codeph ">appendText()</codeph>изменяются текущие начальный и конечный индексы текста. Здесь будет отображаться только окончательный текст (после всех изменений).</p>
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
package {
    import flash.display.Sprite;
    import flash.text.TextField;
    import flash.text.TextFieldAutoSize;
    
    public class TextField_replaceTextExample extends Sprite {

        public function TextField_replaceTextExample() {
            var outputText:TextField = new TextField();

            outputText.x = 10;
            outputText.y = 10;
            outputText.background = true;
            outputText.autoSize = TextFieldAutoSize.LEFT;
            
            outputText.appendText("This is the wrong heading");
            outputText.appendText("\n\n"); 
            outputText.appendText("This is the body of the text.");

            outputText.replaceText(0, 25, "THIS IS THE HEADING FOR EVERYONE");

            outputText.replaceText(12, 12, "CORRECT ");
            
            outputText.replaceText(27, 40, "");
            
           this.addChild(outputText);
         }
    }
}
</codeblock></example></apiOperationDetail></apiOperation><apiOperation id="flash.text:TextField:setSelection" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">setSelection</apiName><shortdesc class="- topic/shortdesc ">
     Задает способ разметки текста с помощью индексов первого и последнего символов, которые указываются параметрами beginIndex и endIndex</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><internal>Need to add an example.
     
     </internal></asCustoms></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">beginIndex</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Отсчитываемое от нуля значение индекса для выделенного символа (например, первый символ — 0, второй символ — 1 и т.д.).
     
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">endIndex</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Отсчитываемое от нуля значение индекса для последнего символа в выделенном фрагменте.
     
     </apiDesc></apiParam><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Задает новый выделенный фрагмент текста.
     
     </apiTipText></apiTipTexts></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Задает способ разметки текста с помощью индексов первого и последнего символов, которые указываются параметрами <codeph class="+ topic/ph pr-d/codeph ">beginIndex</codeph> и <codeph class="+ topic/ph pr-d/codeph ">endIndex</codeph> Если два параметра имеют одинаковые значения, этот метод задает точку вставки, как при использовании свойства <codeph class="+ topic/ph pr-d/codeph ">caretIndex</codeph>.
     
     </apiDesc><example conref="examples\TextField_setSelectionExample.as" class="- topic/example "> В следующем примере, когда пользователь щелкает по любому месту текстового поля, выделяется предварительно заданный фрагмент текста (выделяются слова TEXT IN ALL CAPS (ТЕКСТ ЗАГЛАВНЫМИ БУКВАМИ)).
 
 <p class="- topic/p ">Два прослушивателя событий для текстового поля <codeph class="+ topic/ph pr-d/codeph ">myTextField</codeph> реагируют на щелчки и подъем мыши. Подъем мыши происходит, когда пользователь отпускает кнопку мыши, что обычно бывает после выделения текста. Обратите внимание, что по умолчанию текстовое поле допускает выделение текста. При щелчке по тексту вызывается метод <codeph class="+ topic/ph pr-d/codeph ">clickHandler()</codeph>. Когда мышь отпускается после выделения текста, вызывается метод <codeph class="+ topic/ph pr-d/codeph ">mouseUpHandler()</codeph>.</p>
 
 <p class="- topic/p ">И в <codeph class="+ topic/ph pr-d/codeph ">clickHandler()</codeph> и в <codeph class="+ topic/ph pr-d/codeph ">mouseUpHandler()</codeph> метод <codeph class="+ topic/ph pr-d/codeph ">setSelection()</codeph> задает для выделения только символы между индексами 54 и 70 (ТЕКСТ ЗАГЛАВНЫМИ БУКВАМИ).</p>
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
package {
    import flash.display.Sprite;
    import flash.events.MouseEvent;
    import flash.text.TextField;
    import flash.text.TextFieldAutoSize;
    
    public class TextField_setSelectionExample extends Sprite
    {
        private var myTextField:TextField = new TextField();

        public function TextField_setSelectionExample() {
            myTextField.autoSize = TextFieldAutoSize.LEFT;
            myTextField.text = "No matter where you click on this text field only the TEXT IN ALL CAPS is selected.";

            myTextField.addEventListener(MouseEvent.CLICK, clickHandler);
            myTextField.addEventListener(MouseEvent.MOUSE_UP, mouseUpHandler);

            this.addChild(myTextField);
        }

        private function clickHandler(event:MouseEvent):void {
            myTextField.setSelection(54, 70);
        }

        private function mouseUpHandler(event:MouseEvent):void {
            myTextField.setSelection(54, 70);
        }

    }
}
</codeblock></example></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.text.xml#TextField/selectable" class="- topic/link "><linktext class="- topic/linktext ">selectable</linktext></link><link href="flash.text.xml#TextField/selectionBeginIndex" class="- topic/link "><linktext class="- topic/linktext ">selectionBeginIndex</linktext></link><link href="flash.text.xml#TextField/selectionEndIndex" class="- topic/link "><linktext class="- topic/linktext ">selectionEndIndex</linktext></link><link href="flash.text.xml#TextField/caretIndex" class="- topic/link "><linktext class="- topic/linktext ">caretIndex</linktext></link></related-links></apiOperation><apiOperation id="flash.text:TextField:setTextFormat" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">setTextFormat</apiName><shortdesc class="- topic/shortdesc ">
     Применяет форматирование текста, заданное параметром format, к указанному содержимому текстового поля.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">TextField, TextField.setTextFormat, setTextFormat
     
     </keyword></asCustoms></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Этот метод невозможно использовать для текстового поля с таблицей стилей.
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">Error</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Error</apiOperationClassifier></apiException><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Заданный параметр <codeph class="+ topic/ph pr-d/codeph ">beginIndex</codeph> или <codeph class="+ topic/ph pr-d/codeph ">endIndex</codeph> находится за пределами диапазона.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">RangeError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">RangeError</apiOperationClassifier></apiException><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">format</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.text:TextFormat</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Объект TextFormat, содержащий информацию о форматировании символов и абзацев.
     
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">beginIndex</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">-1</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Необязательно; целое число, указывающее отсчитываемую от нуля позицию индекса, определяющую первый символ требуемого фрагмента текста.
     
     </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">endIndex</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">-1</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Необязательно; целое число, указывающее первый символ после требуемого фрагмента текста. В соответствии с планом, если задать значения <codeph class="+ topic/ph pr-d/codeph ">beginIndex</codeph> и <codeph class="+ topic/ph pr-d/codeph ">endIndex</codeph>, обновляется текст с <codeph class="+ topic/ph pr-d/codeph ">beginIndex</codeph> по <codeph class="+ topic/ph pr-d/codeph ">endIndex-1</codeph>.  
     
     <p class="- topic/p ">
     <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Применение</entry><entry class="- topic/entry ">Описание</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">my_textField.setTextFormat(textFormat:TextFormat)</codeph></entry><entry class="- topic/entry ">Применяет свойства <codeph class="+ topic/ph pr-d/codeph ">textFormat</codeph> ко всему тексту в поле.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">my_textField.setTextFormat(textFormat:TextFormat, beginIndex:int)</codeph></entry><entry class="- topic/entry ">Применяет свойства <codeph class="+ topic/ph pr-d/codeph ">textFormat</codeph> к тексту, начиная с положения <codeph class="+ topic/ph pr-d/codeph ">beginIndex</codeph>.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">my_textField.setTextFormat(textFormat:TextFormat, beginIndex:int, endIndex:int)</codeph></entry><entry class="- topic/entry ">Применяет свойства параметра <codeph class="+ topic/ph pr-d/codeph ">textFormat</codeph> к фрагменту текста с положения <codeph class="+ topic/ph pr-d/codeph ">beginIndex</codeph> до положения <codeph class="+ topic/ph pr-d/codeph ">endIndex-1</codeph>.</entry></row></tbody></tgroup></adobetable>
     </p>
     
     <p class="- topic/p ">Обратите внимание, что текст, вставленный пользователем вручную или замененный методом <codeph class="+ topic/ph pr-d/codeph ">replaceSelectedText()</codeph>, получает форматирование текстового поля по умолчанию для нового текста, а не то, которое задано для точки вставки текста. Форматирование по умолчанию для нового текста в текстовом поле задается с помощью свойства <codeph class="+ topic/ph pr-d/codeph ">defaultTextFormat</codeph>.</p>
     
     
     </apiDesc></apiParam><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Применяет форматирование текста.
     
     </apiTipText></apiTipTexts></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Применяет форматирование текста, заданное параметром <codeph class="+ topic/ph pr-d/codeph ">format</codeph>, к указанному содержимому текстового поля. Значением параметра <codeph class="+ topic/ph pr-d/codeph ">format</codeph> должен быть объект TextFormat, определяющий необходимые изменения формата текста. К текстовому полю применяются только ненулевые свойства <codeph class="+ topic/ph pr-d/codeph ">format</codeph>. Свойства параметра <codeph class="+ topic/ph pr-d/codeph ">format</codeph>, имеющие значение <codeph class="+ topic/ph pr-d/codeph ">null</codeph>, не применяются. По умолчанию все свойства вновь созданного объекта TextFormat имеют значение <codeph class="+ topic/ph pr-d/codeph ">null</codeph>.
     <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Примечание.</b> Этот метод не работает, если к текстовому полю применена таблица стилей.</p>
     
     <p class="- topic/p ">Метод <codeph class="+ topic/ph pr-d/codeph ">setTextFormat()</codeph> изменяет форматирование текста, применяемое к диапазону символов или ко всему содержимому текстового поля. Чтобы применить свойства формата ко всему тексту в текстовом поле, не нужно задавать значения для <codeph class="+ topic/ph pr-d/codeph ">beginIndex</codeph> и <codeph class="+ topic/ph pr-d/codeph ">endIndex</codeph>. Чтобы применить свойства формата к фрагменту текста, задайте значения для параметров <codeph class="+ topic/ph pr-d/codeph ">beginIndex</codeph> и <codeph class="+ topic/ph pr-d/codeph ">endIndex</codeph>. Для определения значений индекса можно использовать свойство <codeph class="+ topic/ph pr-d/codeph ">length</codeph>.</p>
     
     <p class="- topic/p ">Объект TextFormat содержит два типа информации о форматировании: форматирование символов и форматирование абзацев. Каждый символ в текстовом поле может иметь собственные параметры формата символов, такие как имя и размер шрифта, полужирное или курсивное начертание.</p>
     
     <p class="- topic/p ">Для абзацев параметры форматирования всего абзаца определяются по его первому символу. В качестве примера можно назвать такие параметры форматирования, как левое, правое поле и отступ.</p>
     
     <p class="- topic/p ">Любой текст, вставленный пользователем вручную или замененный методом <codeph class="+ topic/ph pr-d/codeph ">replaceSelectedText()</codeph>, получает форматирование текстового поля по умолчанию для нового текста, а не то, которое задано для точки вставки текста. Форматирование по умолчанию для нового текста задается с помощью свойства <codeph class="+ topic/ph pr-d/codeph ">defaultTextFormat</codeph>.</p>
     
     </apiDesc><example conref="examples\TextField_setTextFormatExample.as" class="- topic/example "> В следующем примере, при щелчке по тексту для предварительно определенного фрагмента текста, TEXT IN ALL CAPS (ТЕКСТ ЗАГЛАВНЫМИ БУКВАМИ), происходит переключение с формата текста по умолчанию на новый формат и наоборот.
 
 <p class="- topic/p ">Добавляется прослушиватель событий для текстового поля <codeph class="+ topic/ph pr-d/codeph ">myTextField</codeph>, который реагирует на щелчки мышью, вызывая метод <codeph class="+ topic/ph pr-d/codeph ">clickHandler()</codeph>. В методе <codeph class="+ topic/ph pr-d/codeph ">clickHandler()</codeph> метод <codeph class="+ topic/ph pr-d/codeph ">getTextFormat()</codeph> возвращает текущий формат символа (индекс 55) из заданного фрагмента текста, который затем помещается в объект TextFormat с именем <codeph class="+ topic/ph pr-d/codeph ">currentTextFormat</codeph>. Инструкция <codeph class="+ topic/ph pr-d/codeph ">if</codeph> проверяет формат текста <codeph class="+ topic/ph pr-d/codeph ">currentTextFormat</codeph>, чтобы узнать, использует ли символ заданного диапазона новый формат (с размером шрифта 18). Если нет, новый формат изменяет размер на 18, задает красный цвет, а также применяет подчеркивание и курсив к диапазону символов 54-70 (ТЕКСТ ЗАГЛАВНЫМИ БУКВАМИ). Если символ в диапазоне использует новый формат, то формат диапазона возвращается к исходному формату по умолчанию для данного текстового поля.</p> 
 
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
package {
    import flash.display.Sprite;
    import flash.text.TextField;
    import flash.text.TextFormat;  
    import flash.text.TextFieldAutoSize;  
    import flash.events.MouseEvent;

    public class TextField_setTextFormatExample extends Sprite {
        private var myTextField:TextField = new TextField();
        private var newFormat:TextFormat = new TextFormat();
        
        public function TextField_setTextFormatExample() {
            myTextField.autoSize = TextFieldAutoSize.LEFT;
            myTextField.selectable = false;
            myTextField.background = true;
            myTextField.text = "No matter where you click on this text field only the TEXT IN ALL CAPS changes format.";

            myTextField.addEventListener(MouseEvent.CLICK, clickHandler);

            newFormat.color = 0xFF0000;
            newFormat.size = 18;
            newFormat.underline = true;
            newFormat.italic = true;
                
            this.addChild(myTextField);
        }

        private function clickHandler(event:MouseEvent):void {
            var currentTextFormat:TextFormat = myTextField.getTextFormat(55);
            
            if(currentTextFormat.size != 18) {
                myTextField.setTextFormat(newFormat, 54, 70);
            }
            else {
                myTextField.setTextFormat(myTextField.defaultTextFormat);
            }    
        }    
    }
}
</codeblock></example></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.text.xml#TextFormat" class="- topic/link "><linktext class="- topic/linktext ">flash.text.TextFormat</linktext></link><link href="flash.text.xml#TextField/defaultTextFormat" class="- topic/link "><linktext class="- topic/linktext ">flash.text.TextField.defaultTextFormat</linktext></link></related-links></apiOperation><apiValue id="flash.text:TextField:alwaysShowSelection:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">alwaysShowSelection</apiName><shortdesc class="- topic/shortdesc ">
    При значении true и отсутствии фокуса на текстовом поле проигрыватель Flash Player выделяет фрагмент в текстовом поле серым цветом.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">TextField, TextField object, built-in class
    </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier><apiDefaultValue>false
    
    </apiDefaultValue></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    При значении <codeph class="+ topic/ph pr-d/codeph ">true</codeph> и отсутствии фокуса на текстовом поле проигрыватель Flash Player выделяет фрагмент в текстовом поле серым цветом. При значении <codeph class="+ topic/ph pr-d/codeph ">false</codeph> и отсутствии фокуса на текстовом поле проигрыватель Flash Player не выделяет фрагмент в текстовом поле.
    
    </apiDesc><example conref="examples\TextField_alwaysShowSelection.as" class="- topic/example "> Скомпилируйте и запустите следующий файл. После запуска файла, выделите текст в каждом из двух текстовых полей, удерживая нажатой кнопку мыши, и обратите внимание на отличия выделения в этих полях (при изменении фокуса).
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">

    package {
    import flash.display.Sprite;
    import flash.text.TextField;
    import flash.text.TextFieldType;

    public class TextField_alwaysShowSelection extends Sprite {
        public function TextField_alwaysShowSelection() {
            var label1:TextField = createCustomTextField(0, 20, 200, 20);
            label1.text = "This text is selected.";
            label1.setSelection(0, 9);
            label1.alwaysShowSelection = true;

            var label2:TextField = createCustomTextField(0, 50, 200, 20);
            label2.text = "Drag to select some of this text.";
        }

        private function createCustomTextField(x:Number, y:Number, width:Number, height:Number):TextField {
            var result:TextField = new TextField();
            result.x = x; result.y = y;
            result.width = width; result.height = height;
            addChild(result);
            return result;
        }
    }
}
</codeblock></example></apiValueDetail><related-links class="- topic/related-links "><link href="flash.display.xml#Stage/focus" class="- topic/link "><linktext class="- topic/linktext ">flash.display.Stage.focus</linktext></link></related-links></apiValue><apiValue id="flash.text:TextField:antiAliasType:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">antiAliasType</apiName><shortdesc class="- topic/shortdesc ">
     Тип сглаживания, применяемый для данного текстового поля.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><maelexample>This example creates two text fields and applies advanced anti-aliasing to the first one
     only.  It assumes that you have a font
     embedded in the Library with the linkage identifier set to <code>"Times-12"</code>.
     To embed the font, follow these steps:
     <ol class="- topic/ol "><li class="- topic/li ">Open your Library</li><li class="- topic/li ">Click the Library options menu in the upper right corner of the Library</li><li class="- topic/li ">Select "New Font" from the dropdown list</li><li class="- topic/li ">Name the font "Times-12"</li><li class="- topic/li ">Select "Times New Roman" from the font dropdown list</li><li class="- topic/li ">Press the "OK" button</li><li class="- topic/li ">Right-click on the newly created font and select "Linkage..."</li><li class="- topic/li ">Check the "Export for ActionScript" box</li><li class="- topic/li ">Accept the default identifier "Times-12" by pressing the "OK" button</li></ol>
     
     <listing version="2.0">
     var my_format:TextFormat = new TextFormat();
     my_format.font = "Times-12";
     
     var my_text1:TextField = this.createTextField("my_text1", this.getNextHighestDepth(), 10, 10, 300, 30);
     my_text1.text = "This text uses advanced anti-aliasing.";
     my_text1.antiAliasType = "advanced";
     my_text1.border = true;
     my_text1.embedFonts = true;
     my_text1.setTextFormat(my_format);
     
     var my_text2:TextField = this.createTextField("my_text2", this.getNextHighestDepth(), 10, 50, 300, 30);
     my_text2.text = "This text uses normal anti-aliasing."
     my_text2.antiAliasType = "normal";
     my_text2.border = true;
     my_text2.embedFonts = true;
     my_text2.setTextFormat(my_format);
     </listing>
     
     </maelexample></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Используемый тип сглаживания.
     
     </apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Тип сглаживания, применяемый для данного текстового поля. Используйте константы <codeph class="+ topic/ph pr-d/codeph ">flash.text.AntiAliasType</codeph> для этого свойства. Этим параметром можно управлять, только если используется встроенный шрифт (свойство <codeph class="+ topic/ph pr-d/codeph ">embedFonts</codeph> имеет значение <codeph class="+ topic/ph pr-d/codeph ">true</codeph>). Параметр по умолчанию — <codeph class="+ topic/ph pr-d/codeph ">flash.text.AntiAliasType.NORMAL</codeph>.
     
     <p class="- topic/p ">В качестве значений этого свойства используйте следующие строковые значения:</p>
     
     <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Строковое значение</entry><entry class="- topic/entry ">Описание</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">flash.text.AntiAliasType.NORMAL</codeph></entry><entry class="- topic/entry ">Применяет обычное сглаживание текста. Значение соответствует типу сглаживания, который использовался в проигрывателе Flash Player 7 и более ранних версиях.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">flash.text.AntiAliasType.ADVANCED</codeph></entry><entry class="- topic/entry ">Применяет расширенное сглаживание, которое делает текст более четким. (Эта функция стала доступной в проигрывателе Flash Player 8.) Расширенное сглаживание обеспечивает высококачественную визуализацию шрифтов мелкого размера. Оно оптимально для приложений с большим объемом мелкого текста. Расширенное сглаживание не рекомендуется для шрифтов больше 48 размера.</entry></row></tbody></tgroup></adobetable>
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.xml#AntiAliasType" class="- topic/link "><linktext class="- topic/linktext ">flash.text.AntiAliasType</linktext></link><link href="flash.text.xml#TextField/embedFonts" class="- topic/link "><linktext class="- topic/linktext ">flash.text.TextField.embedFonts</linktext></link></related-links></apiValue><apiValue id="flash.text:TextField:autoSize:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">autoSize</apiName><shortdesc class="- topic/shortdesc ">
     Управляет автоматической настройкой размеров и выравниванием текстовых полей.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">TextField, TextField.autoSize, autoSize
      
      </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Заданный параметр <codeph class="+ topic/ph pr-d/codeph ">autoSize</codeph> не является элементом flash.text.TextFieldAutoSize.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Управляет автоматической настройкой размеров и выравниванием текстовых полей.
     
     </apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Управляет автоматической настройкой размеров и выравниванием текстовых полей. Допустимые значения констант <codeph class="+ topic/ph pr-d/codeph ">TextFieldAutoSize</codeph>: <codeph class="+ topic/ph pr-d/codeph ">TextFieldAutoSize.NONE</codeph> (по умолчанию), <codeph class="+ topic/ph pr-d/codeph ">TextFieldAutoSize.LEFT</codeph>, <codeph class="+ topic/ph pr-d/codeph ">TextFieldAutoSize.RIGHT</codeph> и <codeph class="+ topic/ph pr-d/codeph ">TextFieldAutoSize.CENTER</codeph>.
     
     <p class="- topic/p ">Если <codeph class="+ topic/ph pr-d/codeph ">autoSize</codeph> имеет значение <codeph class="+ topic/ph pr-d/codeph ">TextFieldAutoSize.NONE</codeph> (по умолчанию) размер не изменяется.</p>
     
     <p class="- topic/p ">Если <codeph class="+ topic/ph pr-d/codeph ">autoSize</codeph> имеет значение <codeph class="+ topic/ph pr-d/codeph ">TextFieldAutoSize.LEFT</codeph>, тексту задается выравнивание по левому краю, то есть левое поле текста остается неподвижным и изменение размера одной строки текстового поля осуществляется по правому полю. Если в тексте встречается разрыв строки (например, <codeph class="+ topic/ph pr-d/codeph ">\n</codeph> или <codeph class="+ topic/ph pr-d/codeph ">\r</codeph>), размер нижнего края также изменяется, чтобы вместить следующую строку текста. Если свойство <codeph class="+ topic/ph pr-d/codeph ">wordWrap</codeph> также имеет значение <codeph class="+ topic/ph pr-d/codeph ">true</codeph>, размер текстового поля изменяется только по нижнему краю, а правый край остается фиксированным.</p>
     
     <p class="- topic/p ">Если <codeph class="+ topic/ph pr-d/codeph ">autoSize</codeph> имеет значение <codeph class="+ topic/ph pr-d/codeph ">TextFieldAutoSize.RIGHT</codeph>, тексту задается выравнивание по правому краю, то есть правое поле текста остается неподвижным и изменение размера одной строки текстового поля осуществляется по левому полю. Если в тексте встречается разрыв строки (например, <codeph class="+ topic/ph pr-d/codeph ">\n или \r</codeph>), размер нижнего края также изменяется, чтобы вместить следующую строку текста. Если свойство <codeph class="+ topic/ph pr-d/codeph ">wordWrap</codeph> также имеет значение <codeph class="+ topic/ph pr-d/codeph ">true</codeph>, размер текстового поля изменяется только по нижнему краю, а левый край остается фиксированным.</p>
     
     <p class="- topic/p ">Если <codeph class="+ topic/ph pr-d/codeph ">autoSize</codeph> имеет значение <codeph class="+ topic/ph pr-d/codeph ">TextFieldAutoSize.CENTER</codeph>, текст обрабатывается с учетом выравнивания по центру, то есть изменение размера одной строки текстового поля равномерно распределяется по правому и левому полям. Если в тексте встречается разрыв строки (например, <codeph class="+ topic/ph pr-d/codeph ">\n</codeph> или <codeph class="+ topic/ph pr-d/codeph ">\r</codeph>), размер нижнего края также изменяется, чтобы вместить следующую строку текста. Если свойство <codeph class="+ topic/ph pr-d/codeph ">wordWrap</codeph> также имеет значение <codeph class="+ topic/ph pr-d/codeph ">true</codeph>, размер текстового поля изменяется только по нижнему краю, а левый и правый края остаются фиксированными.</p>
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.xml#TextFieldAutoSize" class="- topic/link "><linktext class="- topic/linktext ">flash.text.TextFieldAutoSize</linktext></link><link href="flash.text.xml#TextField/autoSize" class="- topic/link "><linktext class="- topic/linktext ">flash.text.TextField.autoSize</linktext></link><link href="flash.text.xml#TextField/wordWrap" class="- topic/link "><linktext class="- topic/linktext ">flash.text.TextField.wordWrap</linktext></link></related-links></apiValue><apiValue id="flash.text:TextField:backgroundColor:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">backgroundColor</apiName><shortdesc class="- topic/shortdesc ">
     Цвет фона текстового поля.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">TextField, TextField.backgroundColor, backgroundColor, background Color
      
      </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">uint</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Цвет фона текстового поля. Значение по умолчанию — <codeph class="+ topic/ph pr-d/codeph ">0xFFFFFF</codeph> (белый). Это свойство можно получить или задать, даже если в настоящее время фона нет, однако цвет будет видимым, только если свойству <codeph class="+ topic/ph pr-d/codeph ">background</codeph> текстового поля задано значение <codeph class="+ topic/ph pr-d/codeph ">true</codeph>.
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.xml#TextField/background" class="- topic/link "><linktext class="- topic/linktext ">flash.text.TextField.background</linktext></link></related-links></apiValue><apiValue id="flash.text:TextField:background:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">background</apiName><shortdesc class="- topic/shortdesc ">
     Указывает, используется ли в текстовом поле фоновая заливка.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">TextField, TextField.background, background
      
      </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier><apiDefaultValue>false
     
     </apiDefaultValue></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Указывает, используется ли в текстовом поле фоновая заливка. При значении <codeph class="+ topic/ph pr-d/codeph ">true</codeph> фоновая заливка текстового поля используется. При значении <codeph class="+ topic/ph pr-d/codeph ">false</codeph> фоновая заливка текстового поля не используется. Цвет фона для текстового поля задается с помощью свойства <codeph class="+ topic/ph pr-d/codeph ">backgroundColor</codeph>.
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.xml#TextField/backgroundColor" class="- topic/link "><linktext class="- topic/linktext ">flash.text.TextField.backgroundColor</linktext></link></related-links></apiValue><apiValue id="flash.text:TextField:borderColor:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">borderColor</apiName><shortdesc class="- topic/shortdesc ">
     Цвет рамки текстового поля.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">TextField, TextField.borderColor, borderColor
      
      </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">uint</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Цвет рамки текстового поля. Значение по умолчанию — <codeph class="+ topic/ph pr-d/codeph ">0x000000</codeph> (черный). Это свойство можно получить или задать, даже если в настоящее время рамки нет, однако цвет будет видимым, только если свойству <codeph class="+ topic/ph pr-d/codeph ">border</codeph> текстового поля задано значение <codeph class="+ topic/ph pr-d/codeph ">true</codeph>.
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.xml#TextField/border" class="- topic/link "><linktext class="- topic/linktext ">flash.text.TextField.border</linktext></link></related-links></apiValue><apiValue id="flash.text:TextField:border:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">border</apiName><shortdesc class="- topic/shortdesc ">
     Указывает, есть ли у текстового поля рамка.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">TextField, TextField.border, border
      
      </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier><apiDefaultValue>false
     
     </apiDefaultValue></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Указывает, есть ли у текстового поля рамка. При значении <codeph class="+ topic/ph pr-d/codeph ">true</codeph> текстовое поле имеет рамку. При значении <codeph class="+ topic/ph pr-d/codeph ">false</codeph> текстовое поле не имеет рамки. Цвет рамки задается с помощью свойства <codeph class="+ topic/ph pr-d/codeph ">borderColor</codeph>.
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.xml#TextField/borderColor" class="- topic/link "><linktext class="- topic/linktext ">flash.text.TextField.borderColor</linktext></link></related-links></apiValue><apiValue id="flash.text:TextField:bottomScrollV:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">bottomScrollV</apiName><shortdesc class="- topic/shortdesc ">
     Целое число (индекс, отсчитываемый от 1), соответствующее самой нижней строке, которую видно в заданном текстовом поле.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">TextField, TextField.bottomScrollV, bottomScrollV
      
      </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">int</apiValueClassifier><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Целое число, указывающее самую нижнюю строку в текстовом поле.
     
     </apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Целое число (индекс, отсчитываемый от 1), соответствующее самой нижней строке, которую видно в заданном текстовом поле. Представьте, что текстовое поле — это окно на блоке текста. Свойство <codeph class="+ topic/ph pr-d/codeph ">scrollV</codeph> представляет собой отсчитываемый от единицы индекс самой верхней видимой строки в окне.
     
     <p class="- topic/p ">Весь текст между линиями, заданными параметрами <codeph class="+ topic/ph pr-d/codeph ">scrollV</codeph> и <codeph class="+ topic/ph pr-d/codeph ">bottomScrollV</codeph> в данный момент отображается в текстовом поле.</p>
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.xml#TextField/scrollV" class="- topic/link "><linktext class="- topic/linktext ">flash.text.TextField.scrollV</linktext></link></related-links></apiValue><apiValue id="flash.text:TextField:caretIndex:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">caretIndex</apiName><shortdesc class="- topic/shortdesc ">
     Индекс точки вставки (каре).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">int</apiValueClassifier><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Возвращает для мигающей точки вставки значение индекса, начинающегося с нуля.
     
     </apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Индекс точки вставки (каре). Если точка вставки не отображается, значением является положение, которое она бы занимала, если бы поле было в фокусе (обычно это последнее место вставки или 0, если поле не было в фокусе).
     
     <p class="- topic/p ">Индексы выделенного фрагмента отсчитываются от нуля (например, первая позиция — 0, вторая — 1 и т. д.).</p>
     
     
     </apiDesc><example conref="examples\TextField_caretIndex.as" class="- topic/example "> В данном примере создается и заполняется текстом экземпляр TextField. Назначается прослушиватель событий, чтобы при щелчке по объекту TextField вызывался метод <codeph class="+ topic/ph pr-d/codeph ">printCursorPosition</codeph>. В данном случае значения свойств <codeph class="+ topic/ph pr-d/codeph ">caretIndex</codeph>, <codeph class="+ topic/ph pr-d/codeph ">selectionBeginIndex</codeph> и <codeph class="+ topic/ph pr-d/codeph ">selectionEndIndex</codeph> выводятся на экран.
 
 <p class="- topic/p ">Запустите этот пример и попробуйте щелкнуть мышью в текстовом поле TextField, чтобы выделить текст. После этого щелкните поле, не выделяя текст. При щелчке по тексту без выделения, свойство <codeph class="+ topic/ph pr-d/codeph ">caretIndex</codeph> указывает местоположение точки вставки, а свойства <codeph class="+ topic/ph pr-d/codeph ">selectionBeginIndex</codeph> и <codeph class="+ topic/ph pr-d/codeph ">selectionEndIndex</codeph> имеют то же значение, что <codeph class="+ topic/ph pr-d/codeph ">caretIndex</codeph>.</p>
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">

package {
    import flash.display.Sprite;
    import flash.events.MouseEvent;
    import flash.text.TextField;
    import flash.text.TextFieldType;

    public class TextField_caretIndex extends Sprite {
        public function TextField_caretIndex() {
            var tf:TextField = createCustomTextField(10, 10, 100, 100);
            tf.wordWrap = true;
            tf.type = TextFieldType.INPUT;
            tf.text = "Click in this text field. Compare the difference between clicking without selecting versus clicking and selecting text.";
            tf.addEventListener(MouseEvent.CLICK, printCursorPosition);
        }

        private function printCursorPosition(event:MouseEvent):void {
            var tf:TextField = TextField(event.target);
            trace("caretIndex:", tf.caretIndex);
            trace("selectionBeginIndex:", tf.selectionBeginIndex);
            trace("selectionEndIndex:", tf.selectionEndIndex);
        }

        private function createCustomTextField(x:Number, y:Number, width:Number, height:Number):TextField {
            var result:TextField = new TextField();
            result.x = x;
            result.y = y;
            result.width = width;
            result.height = height;
            addChild(result);
            return result;
        }
    }
}
</codeblock></example></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.xml#TextField/selectable" class="- topic/link "><linktext class="- topic/linktext ">selectable</linktext></link><link href="flash.text.xml#TextField/selectionBeginIndex" class="- topic/link "><linktext class="- topic/linktext ">selectionBeginIndex</linktext></link><link href="flash.text.xml#TextField/selectionEndIndex" class="- topic/link "><linktext class="- topic/linktext ">selectionEndIndex</linktext></link></related-links></apiValue><apiValue id="flash.text:TextField:condenseWhite:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">condenseWhite</apiName><shortdesc class="- topic/shortdesc ">
     Логическое значение, определяющее, следует ли удалять лишние разделители (пробелы, разрывы строк и т.д.) в текстовом поле с текстом HTML.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">textfield, text, HTML
      
      </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Логическое значение, определяющее, удаляются ли лишние пробелы в текстовом поле с HTML-текстом.
     
     </apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Логическое значение, определяющее, следует ли удалять лишние разделители (пробелы, разрывы строк и т.д.) в текстовом поле с текстом HTML. Значение по умолчанию <codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Свойство <codeph class="+ topic/ph pr-d/codeph ">condenseWhite</codeph> влияет только на текст, определенный с помощью свойства <codeph class="+ topic/ph pr-d/codeph ">htmlText</codeph>, а не с помощью свойства <codeph class="+ topic/ph pr-d/codeph ">text</codeph>. Если текст определен посредством свойства <codeph class="+ topic/ph pr-d/codeph ">text</codeph>, <codeph class="+ topic/ph pr-d/codeph ">condenseWhite</codeph> игнорируется.
     
     <p class="- topic/p ">Если свойству <codeph class="+ topic/ph pr-d/codeph ">condenseWhite</codeph> присваивается значение <codeph class="+ topic/ph pr-d/codeph ">true</codeph>, необходимо использовать стандартные команды HTML (например, <codeph class="+ topic/ph pr-d/codeph ">&lt;BR></codeph> и <codeph class="+ topic/ph pr-d/codeph ">&lt;P></codeph>), чтобы поместить в текстовое поле разрывы строк.</p>
     
     <p class="- topic/p ">Свойство <codeph class="+ topic/ph pr-d/codeph ">condenseWhite</codeph> задается перед свойством <codeph class="+ topic/ph pr-d/codeph ">htmlText</codeph>.</p>
     
     
     </apiDesc><example conref="examples\TextField_condenseWhite.as" class="- topic/example "> В следующем примере демонстрируется различие между использованием свойства <codeph class="+ topic/ph pr-d/codeph ">condenseWhite</codeph> в значении <codeph class="+ topic/ph pr-d/codeph ">false</codeph> и в значении <codeph class="+ topic/ph pr-d/codeph ">true</codeph>.
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">

package {
    import flash.display.Sprite;
    import flash.text.TextField;

    public class TextField_condenseWhite extends Sprite {
        public function TextField_condenseWhite() {
            var tf1:TextField = createCustomTextField(0, 0, 200, 50);
            tf1.condenseWhite = false;
            tf1.htmlText = "keep    on\n\ttruckin'";
            
            var tf2:TextField = createCustomTextField(0, 120, 200, 50);
            tf2.condenseWhite = true;
            tf2.htmlText = "keep    on\n\ttruckin'";
        }

        private function createCustomTextField(x:Number, y:Number, width:Number, height:Number):TextField {
            var result:TextField = new TextField();
            result.x = x;
            result.y = y;
            result.width = width;
            result.height = height;
            result.border = true;
            addChild(result);
            return result;
        }
    }
}
</codeblock></example></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.xml#TextField/htmlText" class="- topic/link "><linktext class="- topic/linktext ">flash.text.TextField.htmlText</linktext></link></related-links></apiValue><apiValue id="flash.text:TextField:defaultTextFormat:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">defaultTextFormat</apiName><shortdesc class="- topic/shortdesc ">
     Определяет формат, применяемый к новому вставленному тексту, такому как тексту, введенному пользователем, или тексту, вставленному с использованием метода replaceSelectedText().</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">TextField, TextField.defaultTextFormat, defaultTextFormat
      
      </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.text:TextFormat</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Этот метод невозможно использовать для текстового поля с таблицей стилей.
       
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">Error</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Error</apiOperationClassifier></apiException><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Задает формат для только что вставленного текста.
     
     </apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Определяет формат, применяемый к новому вставленному тексту, такому как тексту, введенному пользователем, или тексту, вставленному с использованием метода <codeph class="+ topic/ph pr-d/codeph ">replaceSelectedText()</codeph>.
     
     <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Примечание.</b> При выборе символов, которые будут заменены с помощью методов <codeph class="+ topic/ph pr-d/codeph ">setSelection()</codeph> и <codeph class="+ topic/ph pr-d/codeph ">replaceSelectedText()</codeph>, свойство <codeph class="+ topic/ph pr-d/codeph ">defaultTextFormat</codeph> будет применено, только если текст был выделен полностью, включая последний символ. Далее приводится пример:</p>
     <pre xml:space="preserve" class="- topic/pre ">
     var my_txt:TextField new TextField();
     my_txt.text = "Flash Macintosh version";
     var my_fmt:TextFormat = new TextFormat();
     my_fmt.color = 0xFF0000;
     my_txt.defaultTextFormat = my_fmt;
     my_txt.setSelection(6,15); // partial text selected - defaultTextFormat not applied
     my_txt.setSelection(6,23); // text selected to end - defaultTextFormat applied
     my_txt.replaceSelectedText("Windows version");
     </pre>
     
     <p class="- topic/p ">При обращении к свойству <codeph class="+ topic/ph pr-d/codeph ">defaultTextFormat</codeph> возвращается объект TextFormat, все свойства которого определены. Ни одно из свойств не имеет значения <codeph class="+ topic/ph pr-d/codeph ">null</codeph>.</p>
     <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Примечание.</b> Это свойство невозможно задать, если к текстовому полю применена таблица стилей.</p>
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.xml#TextField/replaceSelectedText()" class="- topic/link "><linktext class="- topic/linktext ">flash.text.TextField.replaceSelectedText()</linktext></link><link href="flash.text.xml#TextField/getTextFormat()" class="- topic/link "><linktext class="- topic/linktext ">flash.text.TextField.getTextFormat()</linktext></link><link href="flash.text.xml#TextField/setTextFormat()" class="- topic/link "><linktext class="- topic/linktext ">flash.text.TextField.setTextFormat()</linktext></link></related-links></apiValue><apiValue id="flash.text:TextField:displayAsPassword:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">displayAsPassword</apiName><shortdesc class="- topic/shortdesc ">
     Показывает, является ли текстовое поле полем пароля.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">TextField, TextField.password, password
     </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier><apiDefaultValue>false
     
     </apiDefaultValue><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Указывает, являются ли вводимые символы скрытыми.
     
     </apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Показывает, является ли текстовое поле полем пароля. Если это свойство имеет значение <codeph class="+ topic/ph pr-d/codeph ">true</codeph>, текстовое поле обрабатывается как поле ввода пароля и скрывает вводимые символы, показывая звездочки вместо действительных символов. При значении <codeph class="+ topic/ph pr-d/codeph ">false</codeph> текстовое поле не обрабатывается как поле пароля. В режиме пароля команды «Вырезать» и «Копировать», а также соответствующие им комбинации клавиш не работают. Этот механизм защиты не позволяет недобросовестным пользователям использовать комбинации клавиш с целью получения пароля на компьютере, оставленном без присмотра.
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.text:TextField:embedFonts:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">embedFonts</apiName><shortdesc class="- topic/shortdesc ">
     Определяет, должна ли выполняться визуализация с использованием структур встроенных шрифтов.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">TextField, TextField.embedFonts, embedFonts
      
      </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier><apiDefaultValue>false
     
     </apiDefaultValue><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Выполняет визуализацию текстового поля с использованием встроенных шрифтов или шрифтов устройства.
     
     </apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Определяет, должна ли выполняться визуализация с использованием структур встроенных шрифтов. При значении <codeph class="+ topic/ph pr-d/codeph ">false</codeph> проигрыватель Flash Player визуализирует текстовое поле с использованием шрифтов устройства.
     
     <p class="- topic/p ">Если свойству <codeph class="+ topic/ph pr-d/codeph ">embedFonts</codeph> текстового поля задано значение <codeph class="+ topic/ph pr-d/codeph ">true</codeph>, необходимо указать для текста шрифт с помощью свойства <codeph class="+ topic/ph pr-d/codeph ">font</codeph> объекта TextFormat, примененного к текстовому полю. Если указанный шрифт не встроен в SWF-файл, текст не отображается.</p>
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.xml#Font/enumerateFonts()" class="- topic/link "><linktext class="- topic/linktext ">Font.enumerateFonts()</linktext></link></related-links></apiValue><apiValue id="flash.text:TextField:gridFitType:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">gridFitType</apiName><shortdesc class="- topic/shortdesc ">
     Тип подгонки к сетке, применяемый для этого текстового поля.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><oldexample>This example shows three text fields that use the
     different <code>flash.text.GridFitType</code> settings.  It assumes that you have a font
     embedded in the Library with the linkage identifier set to <code>"Times-12"</code>.
     To embed the font, follow these steps:
     <ol class="- topic/ol "><li class="- topic/li ">Open your Library</li><li class="- topic/li ">Click the Library options menu in the upper right corner of the Library</li><li class="- topic/li ">Select "New Font" from the dropdown list</li><li class="- topic/li ">Name the font "Times-12"</li><li class="- topic/li ">Select "Times New Roman" from the font dropdown list</li><li class="- topic/li ">Press the "OK" button</li><li class="- topic/li ">Right-click on the newly created font and select "Linkage..."</li><li class="- topic/li ">Check the "Export for ActionScript" box</li><li class="- topic/li ">Accept the default identifier "Times-12" by pressing the "OK" button</li></ol>
     
     <listing version="2.0">
     var my_format:TextFormat = new TextFormat();
     my_format.font = "Times-12";
     
     var my_text1:TextField = this.createTextField("my_text1", this.getNextHighestDepth(), 9.5, 10, 400, 100);
     my_text1.text = "this.gridFitType = none";
     my_text1.embedFonts = true;
     my_text1.antiAliasType = "advanced";
     my_text1.gridFitType = "none";
     my_text1.setTextFormat(my_format);
     
     var my_text2:TextField = this.createTextField("my_text2", this.getNextHighestDepth(), 9.5, 40, 400, 100);
     my_text2.text = "this.gridFitType = advanced";
     my_text2.embedFonts = true;
     my_text2.antiAliasType = "advanced";
     my_text2.gridFitType = "pixel";
     my_text2.setTextFormat(my_format);
     
     var my_text3:TextField = this.createTextField("my_text3", this.getNextHighestDepth(), 9.5, 70, 400, 100);
     my_text3.text = "this.gridFitType = subpixel";
     my_text3.embedFonts = true;
     my_text3.antiAliasType = "advanced";
     my_text3.gridFitType = "subpixel";
     my_text3.setTextFormat(my_format);
     </listing>
     
     </oldexample></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiDefaultValue>pixel
     
     </apiDefaultValue><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Используемые тип подгонки к сетке.
     
     </apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Тип подгонки к сетке, применяемый для этого текстового поля. Это свойство применяется, только если свойство <codeph class="+ topic/ph pr-d/codeph ">flash.text.AntiAliasType</codeph> текстового поля имеет значение <codeph class="+ topic/ph pr-d/codeph ">flash.text.AntiAliasType.ADVANCED</codeph>.
     
     <p class="- topic/p ">Используемый тип подгонки к сетке определяет, подгоняет ли проигрыватель Flash Player жирные горизонтальные или вертикальные линии к пиксельной или субпиксельной сетке, или совсем не выполняет подгонку.</p>
     
     <p class="- topic/p ">Для свойства <codeph class="+ topic/ph pr-d/codeph ">flash.text.GridFitType</codeph> можно использовать следующие строковые значения.</p>
     
     <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Строковое значение</entry><entry class="- topic/entry ">Описание</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">flash.text.GridFitType.NONE</codeph></entry><entry class="- topic/entry ">Задает отсутствие подгонки к сетке. Горизонтальные и вертикальные линии в глифах не подгоняются к пиксельной сетке. Этот параметр рекомендуется для анимации или для шрифтов большого размера.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">flash.text.GridFitType.PIXEL</codeph></entry><entry class="- topic/entry ">Задает подгонку жирных горизонтальных и вертикальных линий к пиксельной сетке. Этот параметр применяется только к текстовым полям с выравниванием по левому краю. Для использования этого параметра свойство <codeph class="+ topic/ph pr-d/codeph ">flash.display.AntiAliasType</codeph> текстового поля должно иметь значение <codeph class="+ topic/ph pr-d/codeph ">flash.text.AntiAliasType.ADVANCED</codeph>. Этот параметр, как правило, дает максимальную четкость для текста с выравниванием по левому краю.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">flash.text.GridFitType.SUBPIXEL</codeph></entry><entry class="- topic/entry ">Задает подгонку горизонтальных и вертикальных линий к субпиксельной сетке на ЖК-мониторе. Для использования этого параметра свойство <codeph class="+ topic/ph pr-d/codeph ">flash.text.AntiAliasType</codeph> текстового поля должно иметь значение <codeph class="+ topic/ph pr-d/codeph ">flash.text.AntiAliasType.ADVANCED</codeph>. Параметр <codeph class="+ topic/ph pr-d/codeph ">flash.text.GridFitType.SUBPIXEL</codeph> обычно целесообразен для динамического текста с выравниванием по правому краю или по центру и в некоторых случаях позволяет найти оптимальный баланс качеством анимации и текста.</entry></row></tbody></tgroup></adobetable>
     
     </apiDesc><example conref="examples\TextField_gridFitType.as" class="- topic/example "> В следующем примере показано три текстовых поля с разными параметрами свойства <codeph class="+ topic/ph pr-d/codeph ">gridFitType</codeph>. При тестировании этого примера, оцените разницу в четкости первых двух строк. Также обратите внимание на оптимальное использование <codeph class="+ topic/ph pr-d/codeph ">GridFitType.PIXEL</codeph> для текста с выравниванием по левому краю и <codeph class="+ topic/ph pr-d/codeph ">GridFitType.SUBPIXEL</codeph> для текста с выравниванием по правому краю.
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">

package
{
    import flash.display.Sprite;
    import flash.text.TextField;
    import flash.text.TextFormat;
    import flash.text.TextFieldAutoSize;
    import flash.text.AntiAliasType;
    import flash.text.GridFitType;

    public class gridFitTypeExample extends Sprite
    {
        public function gridFitTypeExample()
        {
    var format1:TextFormat = new TextFormat();
    format1.font="Arial";
    format1.size=12;

    var tf1:TextField = createCustomTextField(0,0,format1,"NONE",TextFieldAutoSize.LEFT,GridFitType.NONE);
    
    var tf2:TextField = createCustomTextField(0,30,format1,"PIXEL",TextFieldAutoSize.LEFT,GridFitType.PIXEL);

    var tf3:TextField = createCustomTextField(300,60,format1,"SUBPIXEL",TextFieldAutoSize.RIGHT,GridFitType.SUBPIXEL);

        }
        private function createCustomTextField(x:Number,y:Number,fm:TextFormat,tl:String,tfs:String,gft:String):TextField 
        {
            var result:TextField = new TextField();
            result.x=x;
            result.y=y;
            result.embedFonts=true;
            result.antiAliasType=AntiAliasType.ADVANCED;
            result.text="This text uses a gridFitType of " + tl;
            result.autoSize=tfs;
        result.gridFitType=gft;
            result.setTextFormat(fm);
            addChild(result);
            return result;
        }
    }
}
</codeblock></example></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.xml#GridFitType" class="- topic/link "><linktext class="- topic/linktext ">flash.text.GridFitType</linktext></link><link href="flash.text.xml#TextField/antiAliasType" class="- topic/link "><linktext class="- topic/linktext ">flash.text.TextField.antiAliasType</linktext></link><link href="flash.text.xml#AntiAliasType" class="- topic/link "><linktext class="- topic/linktext ">flash.text.AntiAliasType</linktext></link></related-links></apiValue><apiValue id="flash.text:TextField:htmlText:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">htmlText</apiName><shortdesc class="- topic/shortdesc ">
     Содержит HTML-представление содержимого текстового поля.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">TextField, TextField.htmlText, htmlText
      
      </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">HTML-представление содержимого текстового поля.
     
     </apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Содержит HTML-представление содержимого текстового поля. 
     
     <p class="- topic/p ">Проигрыватель Flash Player поддерживает следующие теги HTML.</p>
     
     
     <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">
     Тег
     </entry><entry class="- topic/entry ">
     Описание
     </entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry ">
     Тег привязки
     </entry><entry class="- topic/entry ">
     Тег <codeph class="+ topic/ph pr-d/codeph ">&lt;a></codeph> создает гипертекстовую ссылку и поддерживает следующие атрибуты.
     <ul class="- topic/ul "><li class="- topic/li ">
     <codeph class="+ topic/ph pr-d/codeph ">target</codeph>: указывает имя целевого окна, где загружается страница. Возможные значения: <codeph class="+ topic/ph pr-d/codeph ">_self</codeph>, <codeph class="+ topic/ph pr-d/codeph ">_blank</codeph>, <codeph class="+ topic/ph pr-d/codeph ">_parent</codeph> и <codeph class="+ topic/ph pr-d/codeph ">_top</codeph>. Вариант <codeph class="+ topic/ph pr-d/codeph ">_self</codeph> задает текущий фрейм текущего окна, <codeph class="+ topic/ph pr-d/codeph ">_blank</codeph> задает новое окно, <codeph class="+ topic/ph pr-d/codeph ">_parent</codeph> задает родительский элемент текущего фрейма, а <codeph class="+ topic/ph pr-d/codeph ">_top</codeph> задает фрейм верхнего уровня текущего окна. 
     </li><li class="- topic/li ">
     <codeph class="+ topic/ph pr-d/codeph ">href</codeph>: задает URL-адрес или событие ActionScript <codeph class="+ topic/ph pr-d/codeph ">link</codeph>. URL-адрес может быть абсолютным или указанным относительно SWF-файла, загружающего страницу. Абсолютная ссылка на URL-адрес выглядит так: <codeph class="+ topic/ph pr-d/codeph ">http://www.adobe.com</codeph>. А вот пример относительной ссылки: <codeph class="+ topic/ph pr-d/codeph ">/index.html</codeph>. Абсолютные URL-адреса должны иметь префикс http://, иначе проигрыватель Flash Player или AIR воспримет их как относительные. Можно использовать событие <codeph class="+ topic/ph pr-d/codeph ">link</codeph>, чтобы ссылка выполняла функцию ActionScript в SWF-файле, а не открывала URL-адрес. Для определения события <codeph class="+ topic/ph pr-d/codeph ">link</codeph> используйте схему событий, а http в атрибуте <codeph class="+ topic/ph pr-d/codeph ">href</codeph>. То есть, <codeph class="+ topic/ph pr-d/codeph ">href="event:myText"</codeph> вместо <codeph class="+ topic/ph pr-d/codeph ">href="http://myURL"</codeph>. Когда пользователь щелкает гипертекстовую ссылку, содержащую схему события, текстовое поле отправляет объект TextEvent с именем <codeph class="+ topic/ph pr-d/codeph ">link</codeph>, свойство <codeph class="+ topic/ph pr-d/codeph ">text</codeph> которого имеет значение <codeph class="+ topic/ph pr-d/codeph ">myText</codeph>. После этого можно создать функцию ActionScript, которая будет выполняться при отправке события TextEvent с именем link. Также для тегов привязки можно определить стили <codeph class="+ topic/ph pr-d/codeph ">a:link</codeph>, <codeph class="+ topic/ph pr-d/codeph ">a:hover</codeph> и <codeph class="+ topic/ph pr-d/codeph ">a:active</codeph> с помощью таблиц стилей.
     </li></ul>
     
     </entry></row><row class="- topic/row "><entry class="- topic/entry ">
     Тег полужирного начертания
     </entry><entry class="- topic/entry ">
     Тег <codeph class="+ topic/ph pr-d/codeph ">&lt;b></codeph> изменяет начертание текста на полужирное. Для используемого шрифта должно быть доступно полужирное написание.
     </entry></row><row class="- topic/row "><entry class="- topic/entry ">
     Тег разрыва
     </entry><entry class="- topic/entry ">
     Тег <codeph class="+ topic/ph pr-d/codeph ">&lt;br></codeph> создает разрыв строки в текстовом поле. Чтобы использовать этот тег, определите текстовое поле как многострочное.
     </entry></row><row class="- topic/row "><entry class="- topic/entry ">
     Тег шрифта
     </entry><entry class="- topic/entry ">
     Тег <codeph class="+ topic/ph pr-d/codeph ">&lt;font></codeph> задает шрифт или список шрифтов для отображения текста. Тег шрифта поддерживает следующие атрибуты.
     <ul class="- topic/ul "><li class="- topic/li ">
     <codeph class="+ topic/ph pr-d/codeph ">color</codeph>: поддерживаются только шестнадцатеричные значения цветов (<codeph class="+ topic/ph pr-d/codeph ">#FFFFFF</codeph>). 
     </li><li class="- topic/li ">
     <codeph class="+ topic/ph pr-d/codeph ">face</codeph>: задает имя используемого шрифта. Как показано в следующем примере, можно задать список разделенных запятыми имен шрифтов, тогда проигрыватель Flash Player выбирает первый доступный шрифт. Если заданный шрифт не установлен в локальной компьютерной системе или не встроен в SWF-файл, проигрыватель выбирает подстановочный шрифт. 
     </li><li class="- topic/li ">
     <codeph class="+ topic/ph pr-d/codeph ">size</codeph>: задает размер шрифта. Можно использовать абсолютные размеры в пикселях, такие как 16 или 18, либо относительные кегли, такие как +2 или -4. 
     </li></ul>
     
     </entry></row><row class="- topic/row "><entry class="- topic/entry ">
     Тег изображения
     </entry><entry class="- topic/entry ">
     Тег <codeph class="+ topic/ph pr-d/codeph ">&lt;img></codeph> позволяет встраивать в текстовые поля внешние файлы изображений (JPEG, GIF, PNG), SWF-файлы и фрагменты роликов. Текст автоматически обтекает изображения, встроенные в текстовые поля. Необходимо определить текстовое поле как многострочное, чтобы текст обтекал изображение. 
     
      <p class="- topic/p ">Тег <codeph class="+ topic/ph pr-d/codeph ">&lt;img></codeph> поддерживает следующие атрибуты. </p>
     
     <ul class="- topic/ul "><li class="- topic/li ">
     <codeph class="+ topic/ph pr-d/codeph ">src</codeph>: задает URL-адрес на изображение или SWF-файл, либо идентификатор связи для символа фрагмента ролика в библиотеке. Это обязательный атрибут, все остальные атрибуты — необязательные. Внешние файлы (JPEG, GIF, PNG и SWF) отображаются только после завершения загрузки. 
     </li><li class="- topic/li ">
     <codeph class="+ topic/ph pr-d/codeph ">width</codeph>: ширина в пикселях вставляемого изображения, SWF-файла или фрагмента ролика. 
     </li><li class="- topic/li ">
     <codeph class="+ topic/ph pr-d/codeph ">height</codeph>: высота в пикселях вставляемого изображения, SWF-файла или фрагмента ролика. 
     </li><li class="- topic/li ">
     <codeph class="+ topic/ph pr-d/codeph ">align</codeph>: задает для встраиваемого изображения выравнивание по горизонтали в текстовом поле. Допускаются значения <codeph class="+ topic/ph pr-d/codeph ">left</codeph> (по левому краю) и <codeph class="+ topic/ph pr-d/codeph ">right</codeph> (по правому краю). Значение по умолчанию — <codeph class="+ topic/ph pr-d/codeph ">left</codeph>. 
     </li><li class="- topic/li ">
     <codeph class="+ topic/ph pr-d/codeph ">hspace</codeph>: задает величину пробела по горизонтали, окружающего изображение, где не отображается текст. Значением по умолчанию является 8. 
     </li><li class="- topic/li ">
     <codeph class="+ topic/ph pr-d/codeph ">vspace</codeph>: задает величину пробела по вертикали, окружающего изображение, где не отображается текст. Значением по умолчанию является 8.  
     </li><li class="- topic/li ">
     <codeph class="+ topic/ph pr-d/codeph ">id</codeph>: задает имя экземпляра фрагмента ролика (созданного проигрывателем Flash Player), который содержит встраиваемое изображение SWF-файл или фрагмент ролика. Этот подход используется для управления встроенным содержимым с помощью ActionScript. 
     </li><li class="- topic/li ">
     <codeph class="+ topic/ph pr-d/codeph ">checkPolicyFile</codeph>: предписывает проигрывателю Flash Player проверять файл политик для URL-адресов на сервере, связанном с доменом изображения. Если файл политики существует, SWF-файлы в указанном в нем домене могут обращаться к данным загруженного изображения, например путем вызова метода <codeph class="+ topic/ph pr-d/codeph ">BitmapData.draw()</codeph> в котором данное изображение указано в качестве параметра <codeph class="+ topic/ph pr-d/codeph ">source</codeph>. Дополнительные сведения о безопасности см. в разделе центра разработчиков Flash Player <xref href="http://www.adobe.com/go/devnet_security_ru" scope="external" class="- topic/xref ">Безопасность</xref>.
     
     </li></ul>
      <p class="- topic/p ">В текстовом поле проигрыватель Flash Player отображает встроенное мультимедийное содержимое в полном размере. Чтобы задать размеры встраиваемого мультимедийного содержимого, используйте атрибуты <codeph class="+ topic/ph pr-d/codeph ">height</codeph> и <codeph class="+ topic/ph pr-d/codeph ">width</codeph> тега <codeph class="+ topic/ph pr-d/codeph ">&lt;img></codeph>. </p>
     
      <p class="- topic/p ">Как правило, изображение, встроенное в текстовое поле отображается на следующей строке после тега <codeph class="+ topic/ph pr-d/codeph ">&lt;img></codeph>. Однако когда тег<codeph class="+ topic/ph pr-d/codeph ">&lt;img></codeph> является первым символом в текстовом поле, изображение показывается на его первой строке. </p>
     
     <p class="- topic/p ">В отношении содержимого AIR в изолированной программной среде безопасности приложения AIR игнорирует теги <codeph class="+ topic/ph pr-d/codeph ">img</codeph> в HTML-содержимом объектов TextField в ActionScript. Это позволяет избежать фишинг-атак.</p>
     
     </entry></row><row class="- topic/row "><entry class="- topic/entry ">
     Тег курсива
     </entry><entry class="- topic/entry ">
     Тег <codeph class="+ topic/ph pr-d/codeph ">&lt;i></codeph> отображает заключенный в него текст курсивом. Для используемого шрифта должно быть доступно курсивное начертание.
     </entry></row><row class="- topic/row "><entry class="- topic/entry ">
     Тег элемента списка
     </entry><entry class="- topic/entry ">
     Тег <codeph class="+ topic/ph pr-d/codeph ">&lt;li></codeph> помещает маркер перед заключенным в него текстом. <b class="+ topic/ph hi-d/b ">Примечание.</b> Так как приложение Flash Player и AIR не распознают теги упорядоченного и неупорядоченного списка (<codeph class="+ topic/ph pr-d/codeph ">&lt;ol></codeph> и <codeph class="+ topic/ph pr-d/codeph ">&lt;ul></codeph>), они не модифицируют визуализацию списка. Все списки являются неупорядоченными, и для всех элементов списка используются маркеры.
     </entry></row><row class="- topic/row "><entry class="- topic/entry ">
     Тег абзаца
     </entry><entry class="- topic/entry ">
     Тег <codeph class="+ topic/ph pr-d/codeph ">&lt;p></codeph> создает новый абзац. Чтобы использовать этот тег, необходимо определить текстовое поле как многострочное. Тег <codeph class="+ topic/ph pr-d/codeph ">&lt;p></codeph> поддерживает следующие атрибуты.
     <ul class="- topic/ul "><li class="- topic/li ">
     align: задает выравнивание текста в абзаце. Допускаются следующие значения: <codeph class="+ topic/ph pr-d/codeph ">left</codeph>, <codeph class="+ topic/ph pr-d/codeph ">right</codeph>, <codeph class="+ topic/ph pr-d/codeph ">justify</codeph> и <codeph class="+ topic/ph pr-d/codeph ">center</codeph>. 
     </li><li class="- topic/li ">
     class: задает класс стиля CSS, определенный объектом flash.text.StyleSheet. 
     </li></ul>
     
     </entry></row><row class="- topic/row "><entry class="- topic/entry ">
     Тег диапазона
     </entry><entry class="- topic/entry ">
     
     Тег <codeph class="+ topic/ph pr-d/codeph ">&lt;span></codeph> доступен только при использовании вместе со стилями текста CSS. Он поддерживает следующий атрибут.
     
     <ul class="- topic/ul "><li class="- topic/li ">
     class: задает класс стиля CSS, определенный объектом flash.text.StyleSheet. 
     </li></ul>
     
     </entry></row><row class="- topic/row "><entry class="- topic/entry ">
     Тег формата текста
     </entry><entry class="- topic/entry ">
      <p class="- topic/p ">Тег <codeph class="+ topic/ph pr-d/codeph ">&lt;textformat></codeph> позволяет использовать в текстовых полях подгруппу свойств форматирования абзаца класса TextFormat, включая межстрочный интервал, отступы, поля и точки табуляции. Теги <codeph class="+ topic/ph pr-d/codeph ">&lt;textformat></codeph> комбинировать с встроенными тегами HTML. </p>
     
      <p class="- topic/p ">Тег <codeph class="+ topic/ph pr-d/codeph ">&lt;textformat></codeph> имеет следующие атрибуты. </p>
     <ul class="- topic/ul "><li class="- topic/li ">
     <codeph class="+ topic/ph pr-d/codeph ">blockindent</codeph>: задает отступ блока текста в точках; соответствует свойству <codeph class="+ topic/ph pr-d/codeph ">TextFormat.blockIndent</codeph>. 
     </li><li class="- topic/li ">
     <codeph class="+ topic/ph pr-d/codeph ">indent</codeph>: задает отступ от левого поля для первого символа абзаца; соответствует свойству <codeph class="+ topic/ph pr-d/codeph ">TextFormat.indent</codeph>. Допускаются как положительные, так и отрицательные числа. 
     </li><li class="- topic/li ">
     <codeph class="+ topic/ph pr-d/codeph ">leading</codeph>: задает величину интервала (пробела по вертикали) между строками; соответствует свойству <codeph class="+ topic/ph pr-d/codeph ">TextFormat.leading</codeph>. Допускаются как положительные, так и отрицательные числа. 
     </li><li class="- topic/li ">
     <codeph class="+ topic/ph pr-d/codeph ">leftmargin</codeph>: задает левое поле абзаца в точках; соответствует свойству <codeph class="+ topic/ph pr-d/codeph ">TextFormat.leftMargin</codeph>. 
     </li><li class="- topic/li ">
     <codeph class="+ topic/ph pr-d/codeph ">rightmargin</codeph>: задает правое поле абзаца в точках; соответствует свойству <codeph class="+ topic/ph pr-d/codeph ">TextFormat.rightMargin</codeph>. 
     </li><li class="- topic/li ">
     <codeph class="+ topic/ph pr-d/codeph ">tabstops</codeph>: задает пользовательские точки табуляции в качестве массива неотрицательных целых чисел; соответствует свойству <codeph class="+ topic/ph pr-d/codeph ">TextFormat.tabStops</codeph>. 
     </li></ul>
     
     </entry></row><row class="- topic/row "><entry class="- topic/entry ">
     Тег подчеркивания
     </entry><entry class="- topic/entry ">
     Тег <codeph class="+ topic/ph pr-d/codeph ">&lt;u></codeph> подчеркивает заключенный в него текст.
     </entry></row></tbody></tgroup></adobetable>
     
     <p class="- topic/p ">Flash Player и AIR поддерживают следующие HTML-сущности:</p>
     
     <adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">
     Сущность
     </entry><entry class="- topic/entry ">
     Описание
     </entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry ">
     
     &amp;amp;lt; 
     
     </entry><entry class="- topic/entry ">
     
     &lt; (знак меньше)
     
     </entry></row><row class="- topic/row "><entry class="- topic/entry ">
     
     &amp;amp;gt; 
     
     </entry><entry class="- topic/entry ">
     
     > (знак больше)
     
     </entry></row><row class="- topic/row "><entry class="- topic/entry ">
     
     &amp;amp;amp;    
     
     </entry><entry class="- topic/entry ">
     
     &amp; (ampersand)
     
     </entry></row><row class="- topic/row "><entry class="- topic/entry ">
     &amp;amp;quot;   
     
     </entry><entry class="- topic/entry ">
     
     " (двойные кавычки)
     
     </entry></row><row class="- topic/row "><entry class="- topic/entry ">
     
     &amp;amp;apos;   
     
     </entry><entry class="- topic/entry ">
     
     ' (апостроф, одинарная кавычка)
     
     </entry></row></tbody></tgroup></adobetable>
      
      <p class="- topic/p ">Flash Player и AIR поддерживают явные коды символов, например, &amp;#38 (амперсанд ASCII) и &amp;#x20AC (символ € в Юникод). </p>
     
     </apiDesc><example conref="examples\TextField_text.as" class="- topic/example "> В следующем примере создается объект TextField с именем <codeph class="+ topic/ph pr-d/codeph ">tf1</codeph>, свойству <codeph class="+ topic/ph pr-d/codeph ">text</codeph> которого назначается строка в формате HTML. Когда отслеживается его свойство <codeph class="+ topic/ph pr-d/codeph ">htmlText</codeph>, выводится строка в формате HTML, к которой проигрыватель Flash Player автоматически добавляет дополнительные теги, например &lt;P> и &lt;FONT>. Когда отслеживается значение свойства <codeph class="+ topic/ph pr-d/codeph ">text</codeph>, отображается неотформатированная строка без тегов HTML.
 
 <p class="- topic/p ">По аналогии, эти же действия выполняются с другим объектом TextField с именем <codeph class="+ topic/ph pr-d/codeph ">tf2</codeph>, но свойству <codeph class="+ topic/ph pr-d/codeph ">styleSheet</codeph> поля <codeph class="+ topic/ph pr-d/codeph ">tf2</codeph> назначается объект StyleSheet, прежде чем задается свойство <codeph class="+ topic/ph pr-d/codeph ">htmlText</codeph>. В этом случае, когда отслеживается свойство <codeph class="+ topic/ph pr-d/codeph ">htmlText</codeph>, оно включает только тот текст HTML, который был изначально назначен свойству <codeph class="+ topic/ph pr-d/codeph ">htmlText</codeph>, демонстрируя, что проигрыватель Flash Player не добавлял других тегов.</p>
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">

package {
    import flash.display.Sprite;
    import flash.text.StyleSheet;
    import flash.text.TextField;

    public class TextField_text extends Sprite {
        public function TextField_text() {
            var tf1:TextField = createCustomTextField(10, 10, 400, 22);
            tf1.htmlText = "&lt;b>Lorem ipsum dolor sit amet.&lt;/b>";

            // htmlText: &lt;P ALIGN="LEFT">&lt;FONT FACE="Times New Roman" SIZE="12" COLOR="#000000" LETTERSPACING="0" KERNING="0">&amp;lt;b&amp;gt;Lorem ipsum dolor sit amet.&amp;lt;/b&amp;gt;&lt;/FONT>&lt;/P>
            trace("htmlText: " + tf1.htmlText);
            // text: Lorem ipsum dolor sit amet.
            trace("text: " + tf1.text);
            
            var tf2:TextField = createCustomTextField(10, 50, 400, 22);
            tf2.styleSheet = new StyleSheet();
            tf2.htmlText = "&lt;b>Lorem ipsum dolor sit amet.&lt;/b>";
            // htmlText: &lt;b>Lorem ipsum dolor sit amet.&lt;/b>
            trace("htmlText: " + tf2.htmlText);
            // text: Lorem ipsum dolor sit amet.
            trace("text: " + tf2.text);
        }

        private function createCustomTextField(x:Number, y:Number, width:Number, height:Number):TextField {
            var result:TextField = new TextField();
            result.x = x;
            result.y = y;
            result.width = width;
            result.height = height;
            addChild(result);
            return result;
        }
    }
}
</codeblock></example></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.xml#TextField/text" class="- topic/link "><linktext class="- topic/linktext ">flash.text.TextField.text</linktext></link><link href="flash.text.xml#StyleSheet" class="- topic/link "><linktext class="- topic/linktext ">flash.text.StyleSheet</linktext></link><link href="flash.events.xml#TextEvent" class="- topic/link "><linktext class="- topic/linktext ">flash.events.TextEvent</linktext></link></related-links></apiValue><apiValue id="flash.text:TextField:length:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">length</apiName><shortdesc class="- topic/shortdesc ">
     Число символов в текстовом поле.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">TextField, TextField.length, length
      
      </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">int</apiValueClassifier><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Число символов в текстовом поле.
     
     </apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Число символов в текстовом поле. Символы, такие как знаки табуляции (<codeph class="+ topic/ph pr-d/codeph ">\t</codeph>), учитываются как один символ.
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.text:TextField:maxChars:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">maxChars</apiName><shortdesc class="- topic/shortdesc ">
     Введенное пользователем максимальное число символов, которое может содержать текстовое поле.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">TextField, TextField.maxChars, maxChars
      
      </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">int</apiValueClassifier><apiDefaultValue>0
     
     </apiDefaultValue><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Максимальное количество символов, которое может содержать текстовое поле.
     
     </apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Введенное пользователем максимальное число символов, которое может содержать текстовое поле. Сценарий может вставить больше текста, чем допускает <codeph class="+ topic/ph pr-d/codeph ">maxChars</codeph>. Свойство <codeph class="+ topic/ph pr-d/codeph ">maxChars</codeph> указывает только количество символов, которые может ввести пользователь. Если это свойство имеет значение <codeph class="+ topic/ph pr-d/codeph ">0</codeph>, пользователь может ввести любое количество символов.
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.text:TextField:maxScrollH:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">maxScrollH</apiName><shortdesc class="- topic/shortdesc ">
     Максимальное значение scrollH.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">TextField, TextField.maxScrollH, maxScrollH
      
      </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">int</apiValueClassifier><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Максимальное значение scrollH.
     
     </apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Максимальное значение <codeph class="+ topic/ph pr-d/codeph ">scrollH</codeph>.
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.xml#TextField/scrollH" class="- topic/link "><linktext class="- topic/linktext ">flash.text.TextField.scrollH</linktext></link></related-links></apiValue><apiValue id="flash.text:TextField:maxScrollV:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">maxScrollV</apiName><shortdesc class="- topic/shortdesc ">
     Максимальное значение scrollV.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">TextField, TextField.maxScrollV, maxScrollV
      
      </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">int</apiValueClassifier><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Максимальное значение <codeph class="+ topic/ph pr-d/codeph ">scrollV</codeph>.
     
     </apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Максимальное значение <codeph class="+ topic/ph pr-d/codeph ">scrollV</codeph>.
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.xml#TextField/scrollV" class="- topic/link "><linktext class="- topic/linktext ">flash.text.TextField.scrollV</linktext></link></related-links></apiValue><apiValue id="flash.text:TextField:mouseWheelEnabled:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">mouseWheelEnabled</apiName><shortdesc class="- topic/shortdesc ">
     Логическое значение, определяющее, выполняет ли проигрыватель Flash Player автоматическую прокрутку многострочных текстовых полей, когда пользователь щелкает текстовое поле и вращает колесико мыши.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">TextField, TextField.mouseWheelEnabled, mouseWheelEnabled
     </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Показывает, выполняет ли проигрыватель Flash Player автоматическую прокрутку многострочных текстовых полей.
     
     </apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Логическое значение, определяющее, выполняет ли проигрыватель Flash Player автоматическую прокрутку многострочных текстовых полей, когда пользователь щелкает текстовое поле и вращает колесико мыши. Значение по умолчанию — <codeph class="+ topic/ph pr-d/codeph ">true</codeph>. Это свойство целесообразно, если требуется предотвратить прокрутку текстового поля с помощью колесика мыши или внедрить собственную функцию прокрутки текста.
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.text:TextField:multiline:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">multiline</apiName><shortdesc class="- topic/shortdesc ">
     Показывает, является ли текстовое поле многострочным.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">TextField, TextField.multiline, multiline
     </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier><apiDefaultValue>false
     
     </apiDefaultValue><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Показывает, является ли текстовое поле многострочным.
     
     </apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Показывает, является ли текстовое поле многострочным. Если значение — <codeph class="+ topic/ph pr-d/codeph ">true</codeph>, текстовое поле многострочное, а если значение — <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, то однострочное. В поле типа <codeph class="+ topic/ph pr-d/codeph ">TextFieldType.INPUT</codeph> значение <codeph class="+ topic/ph pr-d/codeph ">multiline</codeph> определяет, создает ли клавиша <codeph class="+ topic/ph pr-d/codeph ">Enter</codeph> новую строку (при значении <codeph class="+ topic/ph pr-d/codeph ">false</codeph> нажатие клавиши <codeph class="+ topic/ph pr-d/codeph ">Enter</codeph> игнорируется). Если вставить текст в поле <codeph class="+ topic/ph pr-d/codeph ">TextField</codeph> со свойством <codeph class="+ topic/ph pr-d/codeph ">multiline</codeph> в значении <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, новые строки опускаются.

     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.xml#TextField/numLines" class="- topic/link "><linktext class="- topic/linktext ">numLines</linktext></link></related-links></apiValue><apiValue id="flash.text:TextField:numLines:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">numLines</apiName><shortdesc class="- topic/shortdesc ">
     Определяет число строк текста в многострочном текстовом поле.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">TextField, TextField.numLines, numLines
     
     </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">int</apiValueClassifier><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Определяет число строк текста в многострочном текстовом поле.
     
     </apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Определяет число строк текста в многострочном текстовом поле. Если свойство <codeph class="+ topic/ph pr-d/codeph ">wordWrap</codeph> имеет значение <codeph class="+ topic/ph pr-d/codeph ">true</codeph>, то при переносе текста количество строк увеличивается.
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.xml#TextField/multiline" class="- topic/link "><linktext class="- topic/linktext ">multiline</linktext></link><link href="flash.text.xml#TextField/wordWrap" class="- topic/link "><linktext class="- topic/linktext ">wordWrap</linktext></link></related-links></apiValue><apiValue id="flash.text:TextField:restrict:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">restrict</apiName><shortdesc class="- topic/shortdesc ">
     Определяет набор символов, которые могут быть введены пользователем в текстовом поле.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">TextField, TextField.restrict, restrict
      
      </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiDefaultValue>null
     
     </apiDefaultValue><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Набор символов, которые пользователь может вводить в текстовом поле.
     

     
     </apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Определяет набор символов, которые могут быть введены пользователем в текстовом поле. Если свойству <codeph class="+ topic/ph pr-d/codeph ">restrict</codeph> присвоено значение <codeph class="+ topic/ph pr-d/codeph ">null</codeph>, можно ввести любой символ. Если в качестве значения свойства <codeph class="+ topic/ph pr-d/codeph ">restrict</codeph> установлена пустая строка, ввод символов невозможен. Если значение <codeph class="+ topic/ph pr-d/codeph ">restrict</codeph> — это строка, состоящая из символов, в текстовое поле можно вводить только символы из этой строки. Строка сканируется слева направо. Диапазон определяется с помощью символа (-). Ограничивается только взаимодействие пользователей; с помощью сценариев в текстовом поле можно ввести любой текст. <ph outputclass="flashonly" class="- topic/ph ">Это свойство не синхронизируется с параметрами встраивания шрифтов в инспекторе свойств.</ph>
     
     <p class="- topic/p ">Если строка начинается с символа вставки (^), все символы изначально поддерживаются, а последующие символы в строке исключаются из набора поддерживаемых символов. Если строка не начинается с символа вставки (^), символы изначально не поддерживаются, а последующие символы в строке включаются в набор поддерживаемых символов.</p>
     
     <p class="- topic/p ">В следующем примере в текстовое поле можно вводить только заглавные буквы, пробелы и цифры.</p>
     <pre xml:space="preserve" class="- topic/pre ">
     my_txt.restrict = "A-Z 0-9";
     </pre>
     <p class="- topic/p ">В следующем примере включены все символы, но исключены строчные буквы.</p>
     <pre xml:space="preserve" class="- topic/pre ">
     my_txt.restrict = "^a-z";
     </pre>
     <p class="- topic/p ">Можно использовать обратную косую черту для ввода символа ^ или -. Допускаются следующие последовательности с обратной косой чертой: \-, \^ или \\. Обратная косая черта должна быть фактическим символом в строке, потому, когда она задана в коде ActionScript, необходимо использовать двойную обратную косую черту. Например, следующий код включает только дефис (-) и символ вставки (^).</p>
     <pre xml:space="preserve" class="- topic/pre ">
     my_txt.restrict = "\\-\\^";
     </pre>
     <p class="- topic/p ">Символ ^ может использоваться в любом месте строки для переключения между включенными и исключенными символами. Следующий код включает только заглавные буквы, но исключает заглавную букву Q.</p>
     <pre xml:space="preserve" class="- topic/pre ">
     my_txt.restrict = "A-Z^Q";
     </pre>
     <p class="- topic/p ">Для создания строк <codeph class="+ topic/ph pr-d/codeph ">restrict</codeph> можно использовать управляющую последовательность <codeph class="+ topic/ph pr-d/codeph ">\u</codeph>. Следующий код включает только символы с ASCII 32 (пробел) до ASCII 126 (тильда).</p>
     <pre xml:space="preserve" class="- topic/pre ">
     my_txt.restrict = "\u0020-\u007E";
     </pre>
     
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.text:TextField:scrollH:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">scrollH</apiName><shortdesc class="- topic/shortdesc ">
     Текущее положение горизонтальной прокрутки.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">TextField, TextField.scrollH, scrollH
      
      </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">int</apiValueClassifier><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Текущее положение горизонтальной прокрутки.
     
     </apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Текущее положение горизонтальной прокрутки. Если свойство <codeph class="+ topic/ph pr-d/codeph ">scrollH</codeph> имеет значение 0, текст не прокручивается по горизонтали. Значением этого свойства является целое число, представляющее положение по горизонтали в пикселях.
     
     
     <p class="- topic/p ">Единицей измерения горизонтальной прокрутки являются пиксели, а вертикальной — строки. Горизонтальная прокрутка измеряется в пикселях, так как большинство распространенных шрифтов расставляются пропорционально, то есть символы могут иметь разную ширину. Проигрыватель Flash Player выполняет вертикальную прокрутку по строкам, так как пользователи обычно хотят видеть строку текста целиком, а не частично. Даже если в строке используются разные шрифты, ее высота регулируется в соответствии с самым большим используемым шрифтом.</p>
     
     <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Примечание. </b>Значение свойства <codeph class="+ topic/ph pr-d/codeph ">scrollH</codeph> отсчитывается от нуля, а значение свойства <codeph class="+ topic/ph pr-d/codeph ">scrollV</codeph> (для вертикальной прокрутки) — от единицы.</p>
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.xml#TextField/maxScrollH" class="- topic/link "><linktext class="- topic/linktext ">flash.text.TextField.maxScrollH</linktext></link><link href="flash.text.xml#TextField/scrollV" class="- topic/link "><linktext class="- topic/linktext ">flash.text.TextField.scrollV</linktext></link></related-links></apiValue><apiValue id="flash.text:TextField:scrollV:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">scrollV</apiName><shortdesc class="- topic/shortdesc ">
     Вертикальное положение текста в текстовом поле.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">TextField, TextField.scrollV, scroll
     </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">int</apiValueClassifier><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Вертикальное положение текста в текстовом поле.
     
     </apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Вертикальное положение текста в текстовом поле. Свойство <codeph class="+ topic/ph pr-d/codeph ">scrollV</codeph> целесообразно для направления пользователей к определенному абзацу в длинном тексте или для создания прокручиваемых текстовых полей.
     
     <p class="- topic/p ">Единицей измерения вертикальной прокрутки являются строки, а горизонтальной — пиксели. Если первая отображаемая строка является первой строкой в текстовом поле, то свойство scrollV имеет значение 1 (не 0). Горизонтальная прокрутка измеряется в пикселях, так как большинство шрифтов расставляются пропорционально, то есть символы могут иметь разную ширину. Flash выполняет вертикальную прокрутку по строкам, так как пользователи обычно хотят видеть строку текста целиком, а не частично. Даже если строка содержит разные шрифты, ее высота регулируется в соответствии с самым большим используемым шрифтом.</p>
     
     
     </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.xml#TextField/scrollH" class="- topic/link "><linktext class="- topic/linktext ">flash.text.TextField.scrollH</linktext></link><link href="flash.text.xml#TextField/maxScrollV" class="- topic/link "><linktext class="- topic/linktext ">flash.text.TextField.maxScrollV</linktext></link></related-links></apiValue><apiValue id="flash.text:TextField:selectable:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">selectable</apiName><shortdesc class="- topic/shortdesc ">
     Логическое значение, определяющее, можно ли выбрать текстовое поле.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">TextField, TextField.selectable, selectable
     
     </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier><apiDefaultValue>true
     
         </apiDefaultValue><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Указывает, можно ли выбирать текстовое поле.
     
     </apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Логическое значение, определяющее, можно ли выбрать текстовое поле. Значение <codeph class="+ topic/ph pr-d/codeph ">true</codeph> указывает на то, что текст можно выделить. Свойство <codeph class="+ topic/ph pr-d/codeph ">selectable</codeph> управляет возможностью выделения содержимого текстового поля, а не возможностью его редактирования. Динамическое текстовое поле может поддерживать выделение даже при отсутствии возможности редактирования. Если динамическое текстовое поле не поддерживает выделения, пользователь не может выделять его содержимое.
     
     <p class="- topic/p ">Если свойство <codeph class="+ topic/ph pr-d/codeph ">selectable</codeph> имеет значение <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, содержимое текстового поля не реагирует на команды выделения мыши и клавиатуры, и его нельзя копировать с использованием команды «Копировать». Если свойство <codeph class="+ topic/ph pr-d/codeph ">selectable</codeph> имеет значение <codeph class="+ topic/ph pr-d/codeph ">true</codeph>, содержимое текстового поля можно выделить с помощью мыши и клавиатуры, и его можно копировать с использованием команды «Копировать». Таким образом можно выделить текст, даже если текстовое поле является динамическим, а не полем ввода. </p>
     
     </apiDesc><example conref="examples\TextField_selectable.as" class="- topic/example "> В следующем примере создаются два динамических текстовых поля: одно со свойством <codeph class="+ topic/ph pr-d/codeph ">selectable</codeph> в значении <codeph class="+ topic/ph pr-d/codeph ">true</codeph>, а другое со свойством <codeph class="+ topic/ph pr-d/codeph ">selectable</codeph> в значении <codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Выполняя этот пример, попробуйте выделить текст в этих полях с помощью мыши или клавиатуры.
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">

package
{
    import flash.display.Sprite;
    import flash.text.TextField;
    import flash.text.TextFieldAutoSize;

    public class selectableExample extends Sprite
    {
        public function selectableExample()
        {
    var tf1:TextField = createCustomTextField(10, 10);
    tf1.text="This text can be selected";
    tf1.selectable=true;

    var tf2:TextField = createCustomTextField(10, 30);
    tf2.text="This text cannot be selected";
    tf2.selectable=false;
        }

        private function createCustomTextField(x:Number, y:Number):TextField 
       {
            var result:TextField = new TextField();
            result.x = x;
            result.y = y;
            result.autoSize=TextFieldAutoSize.LEFT;
            addChild(result);
            return result;
        }
    }
}
</codeblock></example></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.xml#TextField/setSelection()" class="- topic/link "><linktext class="- topic/linktext ">setSelection()</linktext></link><link href="flash.text.xml#TextField/selectionBeginIndex" class="- topic/link "><linktext class="- topic/linktext ">selectionBeginIndex</linktext></link><link href="flash.text.xml#TextField/selectionEndIndex" class="- topic/link "><linktext class="- topic/linktext ">selectionEndIndex</linktext></link><link href="flash.text.xml#TextField/setSelection()" class="- topic/link "><linktext class="- topic/linktext ">setSelection()</linktext></link><link href="flash.text.xml#TextField/caretIndex" class="- topic/link "><linktext class="- topic/linktext ">caretIndex</linktext></link></related-links></apiValue><apiValue id="flash.text:TextField:selectionBeginIndex:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">selectionBeginIndex</apiName><shortdesc class="- topic/shortdesc ">
     Отсчитываемое от нуля значение индекса для первого символа в текущем выделенном фрагменте.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">int</apiValueClassifier><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Отсчитываемое от нуля значение индекса для первого символа в выделенном фрагменте. 
     
     </apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Отсчитываемое от нуля значение индекса для первого символа в текущем выделенном фрагменте. Например, первый символ имеет индекс 0, второй — индекс 1 и т. д. Если текст не выделен, это свойство является значением <codeph class="+ topic/ph pr-d/codeph ">caretIndex</codeph>.
     
     </apiDesc><example conref="examples\TextField_caretIndex.as" class="- topic/example "> В данном примере создается и заполняется текстом экземпляр TextField. Назначается прослушиватель событий, чтобы при щелчке по объекту TextField вызывался метод <codeph class="+ topic/ph pr-d/codeph ">printCursorPosition</codeph>. В данном случае значения свойств <codeph class="+ topic/ph pr-d/codeph ">caretIndex</codeph>, <codeph class="+ topic/ph pr-d/codeph ">selectionBeginIndex</codeph> и <codeph class="+ topic/ph pr-d/codeph ">selectionEndIndex</codeph> выводятся на экран.
 
 <p class="- topic/p ">Запустите этот пример и попробуйте щелкнуть мышью в текстовом поле TextField, чтобы выделить текст. После этого щелкните поле, не выделяя текст. При щелчке по тексту без выделения, свойство <codeph class="+ topic/ph pr-d/codeph ">caretIndex</codeph> указывает местоположение точки вставки, а свойства <codeph class="+ topic/ph pr-d/codeph ">selectionBeginIndex</codeph> и <codeph class="+ topic/ph pr-d/codeph ">selectionEndIndex</codeph> имеют то же значение, что <codeph class="+ topic/ph pr-d/codeph ">caretIndex</codeph>.</p>
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">

package {
    import flash.display.Sprite;
    import flash.events.MouseEvent;
    import flash.text.TextField;
    import flash.text.TextFieldType;

    public class TextField_caretIndex extends Sprite {
        public function TextField_caretIndex() {
            var tf:TextField = createCustomTextField(10, 10, 100, 100);
            tf.wordWrap = true;
            tf.type = TextFieldType.INPUT;
            tf.text = "Click in this text field. Compare the difference between clicking without selecting versus clicking and selecting text.";
            tf.addEventListener(MouseEvent.CLICK, printCursorPosition);
        }

        private function printCursorPosition(event:MouseEvent):void {
            var tf:TextField = TextField(event.target);
            trace("caretIndex:", tf.caretIndex);
            trace("selectionBeginIndex:", tf.selectionBeginIndex);
            trace("selectionEndIndex:", tf.selectionEndIndex);
        }

        private function createCustomTextField(x:Number, y:Number, width:Number, height:Number):TextField {
            var result:TextField = new TextField();
            result.x = x;
            result.y = y;
            result.width = width;
            result.height = height;
            addChild(result);
            return result;
        }
    }
}
</codeblock></example></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.xml#TextField/selectable" class="- topic/link "><linktext class="- topic/linktext ">selectable</linktext></link><link href="flash.text.xml#TextField/selectionEndIndex" class="- topic/link "><linktext class="- topic/linktext ">selectionEndIndex</linktext></link><link href="flash.text.xml#TextField/setSelection()" class="- topic/link "><linktext class="- topic/linktext ">setSelection()</linktext></link><link href="flash.text.xml#TextField/caretIndex" class="- topic/link "><linktext class="- topic/linktext ">caretIndex</linktext></link></related-links></apiValue><apiValue id="flash.text:TextField:selectionEndIndex:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">selectionEndIndex</apiName><shortdesc class="- topic/shortdesc ">
     Отсчитываемое от нуля значение индекса для последнего символа в текущем выделенном фрагменте.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">int</apiValueClassifier><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Отсчитываемое от нуля значение индекса для последнего символа в выделенном фрагменте.
     
     </apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Отсчитываемое от нуля значение индекса для последнего символа в текущем выделенном фрагменте. Например, первый символ имеет индекс 0, второй — индекс 1 и т. д. Если текст не выделен, это свойство является значением <codeph class="+ topic/ph pr-d/codeph ">caretIndex</codeph>.
     
     </apiDesc><example conref="examples\TextField_caretIndex.as" class="- topic/example "> В данном примере создается и заполняется текстом экземпляр TextField. Назначается прослушиватель событий, чтобы при щелчке по объекту TextField вызывался метод <codeph class="+ topic/ph pr-d/codeph ">printCursorPosition</codeph>. В данном случае значения свойств <codeph class="+ topic/ph pr-d/codeph ">caretIndex</codeph>, <codeph class="+ topic/ph pr-d/codeph ">selectionBeginIndex</codeph> и <codeph class="+ topic/ph pr-d/codeph ">selectionEndIndex</codeph> выводятся на экран.
 
 <p class="- topic/p ">Запустите этот пример и попробуйте щелкнуть мышью в текстовом поле TextField, чтобы выделить текст. После этого щелкните поле, не выделяя текст. При щелчке по тексту без выделения, свойство <codeph class="+ topic/ph pr-d/codeph ">caretIndex</codeph> указывает местоположение точки вставки, а свойства <codeph class="+ topic/ph pr-d/codeph ">selectionBeginIndex</codeph> и <codeph class="+ topic/ph pr-d/codeph ">selectionEndIndex</codeph> имеют то же значение, что <codeph class="+ topic/ph pr-d/codeph ">caretIndex</codeph>.</p>
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">

package {
    import flash.display.Sprite;
    import flash.events.MouseEvent;
    import flash.text.TextField;
    import flash.text.TextFieldType;

    public class TextField_caretIndex extends Sprite {
        public function TextField_caretIndex() {
            var tf:TextField = createCustomTextField(10, 10, 100, 100);
            tf.wordWrap = true;
            tf.type = TextFieldType.INPUT;
            tf.text = "Click in this text field. Compare the difference between clicking without selecting versus clicking and selecting text.";
            tf.addEventListener(MouseEvent.CLICK, printCursorPosition);
        }

        private function printCursorPosition(event:MouseEvent):void {
            var tf:TextField = TextField(event.target);
            trace("caretIndex:", tf.caretIndex);
            trace("selectionBeginIndex:", tf.selectionBeginIndex);
            trace("selectionEndIndex:", tf.selectionEndIndex);
        }

        private function createCustomTextField(x:Number, y:Number, width:Number, height:Number):TextField {
            var result:TextField = new TextField();
            result.x = x;
            result.y = y;
            result.width = width;
            result.height = height;
            addChild(result);
            return result;
        }
    }
}
</codeblock></example></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.xml#TextField/selectable" class="- topic/link "><linktext class="- topic/linktext ">selectable</linktext></link><link href="flash.text.xml#TextField/selectionBeginIndex" class="- topic/link "><linktext class="- topic/linktext ">selectionBeginIndex</linktext></link><link href="flash.text.xml#TextField/setSelection()" class="- topic/link "><linktext class="- topic/linktext ">setSelection()</linktext></link><link href="flash.text.xml#TextField/caretIndex" class="- topic/link "><linktext class="- topic/linktext ">caretIndex</linktext></link></related-links></apiValue><apiValue id="flash.text:TextField:sharpness:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">sharpness</apiName><shortdesc class="- topic/shortdesc ">
     Четкость контуров символов в этом текстовом поле.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><oldexample>This example creates three text fields with
     <code>sharpness</code> set to <code>400</code>, <code>0</code>, and <code>-400</code>.
     It assumes that you have a font
     embedded in the Library with the linkage identifier set to <code>"Times-12"</code>.
     To embed the font, follow these steps:
     <ol class="- topic/ol "><li class="- topic/li ">Open your Library</li><li class="- topic/li ">Click the Library options menu in the upper right corner of the Library</li><li class="- topic/li ">Select "New Font" from the dropdown list</li><li class="- topic/li ">Name the font "Times-12"</li><li class="- topic/li ">Select "Times New Roman" from the font dropdown list</li><li class="- topic/li ">Press the "OK" button</li><li class="- topic/li ">Right-click on the newly created font and select "Linkage..."</li><li class="- topic/li ">Check the "Export for ActionScript" box</li><li class="- topic/li ">Accept the default identifier "Times-12" by pressing the "OK" button</li></ol>
     
     <listing version="2.0">
     var my_format:TextFormat = new TextFormat();
     my_format.font = "Times-12";
     
     var my_text1:TextField = this.createTextField("my_text1", this.getNextHighestDepth(), 10, 10, 400, 100);
     my_text1.text = "This text has sharpness set to 400."
     my_text1.embedFonts = true;
     my_text1.antiAliasType = "advanced";
     my_text1.gridFitType = "pixel";
     my_text1.sharpness = 400;
     my_text1.setTextFormat(my_format);
         
     var my_text2:TextField = this.createTextField("my_text2", this.getNextHighestDepth(), 10, 40, 400, 100);
     my_text2.text = "This text has sharpness set to 0."
     my_text2.embedFonts = true;
     my_text2.antiAliasType = "advanced";
     my_text2.gridFitType = "pixel";
     my_text2.sharpness = 0;
     my_text2.setTextFormat(my_format);
     
     var my_text3:TextField = this.createTextField("my_text3", this.getNextHighestDepth(), 10, 70, 400, 100);
     my_text3.text = "This text has sharpness set to -400."
     my_text3.embedFonts = true;
     my_text3.antiAliasType = "advanced";
     my_text3.gridFitType = "pixel";
     my_text3.sharpness = -400;
     my_text3.setTextFormat(my_format);
     </listing>
     
     </oldexample></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier><apiDefaultValue>0
     
         </apiDefaultValue><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Резкость границ глифа.
     
     </apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Четкость контуров символов в этом текстовом поле. Это свойство применяется, только если свойство <codeph class="+ topic/ph pr-d/codeph ">flash.text.AntiAliasType</codeph> текстового поля имеет значение <codeph class="+ topic/ph pr-d/codeph ">flash.text.AntiAliasType.ADVANCED</codeph>. Допустимый диапазон значений свойства <codeph class="+ topic/ph pr-d/codeph ">sharpness</codeph>: числа от -400 до 400. При попытке задать свойству <codeph class="+ topic/ph pr-d/codeph ">sharpness</codeph> значение, находящееся за пределами этого диапазона, проигрыватель Flash Player назначает ему ближайшее значение в диапазоне (-400 или 400).
     
     </apiDesc><example conref="examples\TextField_sharpness.as" class="- topic/example "> В следующем примере показан результат изменения свойства <codeph class="+ topic/ph pr-d/codeph ">sharpness</codeph> для объекта TextField. Необходимо встроить шрифт и задать свойству <codeph class="+ topic/ph pr-d/codeph ">antiAliasType</codeph> значение <codeph class="+ topic/ph pr-d/codeph ">ADVANCED</codeph>.
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">

package
{
    import flash.display.Sprite;
    import flash.text.TextField;
    import flash.text.TextFieldAutoSize;
    import flash.text.AntiAliasType;
    import flash.text.GridFitType;
    import flash.text.TextFormat;

    public class sharpnessExample extends Sprite
    {
        public function sharpnessExample()
        {
    var format1:TextFormat = new TextFormat();
    format1.font="Arial";
    format1.size=24;
    var lTxt:String = "The quick brown fox";

    var tf1:TextField=createCustomTextField(0,lTxt,format1,-400);
    var tf2:TextField=createCustomTextField(30,lTxt,format1,0);
    var tf3:TextField=createCustomTextField(60,lTxt,format1,400);
        }

        private function createCustomTextField(y:Number,fldTxt:String,format:TextFormat,fldSharpness:Number):TextField 
       {
            var result:TextField = new TextField();
            result.y=y;
            result.text=fldTxt;
            result.embedFonts=true;
            result.autoSize=TextFieldAutoSize.LEFT;
            result.antiAliasType=AntiAliasType.ADVANCED;
            result.gridFitType=GridFitType.PIXEL;
            result.sharpness=fldSharpness;
            result..setTextFormat(format);
            addChild(result);
            return result;
        }
    }
}
</codeblock></example></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.xml#TextField/antiAliasType" class="- topic/link "><linktext class="- topic/linktext ">flash.text.TextField.antiAliasType</linktext></link><link href="flash.text.xml#AntiAliasType" class="- topic/link "><linktext class="- topic/linktext ">flash.text.AntiAliasType</linktext></link></related-links></apiValue><apiValue id="flash.text:TextField:styleSheet:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">styleSheet</apiName><shortdesc class="- topic/shortdesc ">
     Присоединяет таблицу стилей к текстовому полю.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">TextField, StyleSheet, style sheet, stylesheet
      
      </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.text:StyleSheet</apiValueClassifier><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Присоединяет таблицу стилей к текстовому полю.
     
     </apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Присоединяет таблицу стилей к текстовому полю. Сведения о создании таблиц стилей см. в описании класса StyleSheet и <i class="+ topic/ph hi-d/i ">Руководстве разработчика по ActionScript 3.0</i>.
     
     <p class="- topic/p ">Таблицу стилей, связанную с текстовым полем, можно изменить в любое время. При изменении текущей таблицы стилей текстовое поле перерисовывается с использованием новой таблицы стилей. Чтобы удалить таблицу стилей, нужно задать значение <codeph class="+ topic/ph pr-d/codeph ">null</codeph> или <codeph class="+ topic/ph pr-d/codeph ">undefined</codeph>. Если текущая таблица стилей удаляется, текстовое поле перерисовывается без нее. </p>
     <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Примечание.</b> Если таблица стилей удаляется, содержимое<codeph class="+ topic/ph pr-d/codeph ">TextField.text</codeph> и <codeph class="+ topic/ph pr-d/codeph "> TextField.htmlText</codeph> изменяется для внедрения форматирования, которое раньше применялось с помощью таблицы стилей. Чтобы сохранить исходное содержимое <codeph class="+ topic/ph pr-d/codeph ">TextField.htmlText</codeph> без форматирования, нужно сохранить значение в переменной, прежде чем удалять таблицу стилей.</p>
     
     </apiDesc><example conref="examples\TextField_styleSheet.as" class="- topic/example "> В следующем примере определяется простой объект StyleSheet, который присваивается текстовому полю с содержимым в формате HTML. Перед определением содержимого задайте свойство <codeph class="+ topic/ph pr-d/codeph ">stylesheet</codeph>.
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">

package {
    import flash.display.Sprite;
    import flash.text.TextField;
    import flash.text.StyleSheet;

    public class TextStylesheetExample extends Sprite {
        var myLabel:TextField = new TextField();
        var labelText:String = "Hello world.";
        var newStyle:StyleSheet = new StyleSheet();

        public function TextStylesheetExample()
       {
            var styleObj:Object = new Object();
            styleObj.fontWeight = "bold";
            styleObj.color = "#660066";
            newStyle.setStyle(".defStyle", styleObj);

            myLabel.styleSheet=newStyle;
            myLabel.htmlText=labelText;
            addChild(myLabel);
        }
    }
}
</codeblock></example></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.xml#StyleSheet" class="- topic/link "><linktext class="- topic/linktext ">flash.text.StyleSheet</linktext></link></related-links></apiValue><apiValue id="flash.text:TextField:textColor:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">textColor</apiName><shortdesc class="- topic/shortdesc ">
     Цвет текста в текстовом поле (в шестнадцатеричном формате).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">TextField, TextField.textColor, textColor
      
      </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">uint</apiValueClassifier><apiDefaultValue>0 (0x000000)
     </apiDefaultValue><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Цвет текста в текстовом поле (в шестнадцатеричном формате).
     
     </apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Цвет текста в текстовом поле (в шестнадцатеричном формате). Шестнадцатеричная система цвета использует шесть знаков для представления цветовых значений. Каждый знак имеет 16 возможных значений или символов. Символы находятся в диапазоне 0 — 9 и затем A — F. Например, черный цвет — это <codeph class="+ topic/ph pr-d/codeph ">0x000000</codeph>, а белый — <codeph class="+ topic/ph pr-d/codeph ">0xFFFFFF</codeph>.
     
     </apiDesc><example conref="examples\TextField_textColor.as" class="- topic/example "> Следующий код ActionScript создает объект TextField и меняет его свойство <codeph class="+ topic/ph pr-d/codeph ">textColor</codeph> на красный (<codeph class="+ topic/ph pr-d/codeph ">0xFF0000</codeph>).
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">

package {
    import flash.display.Sprite;
    import flash.text.TextField;

    public class TextField_textColor extends Sprite {
        public function TextField_textColor() {
            var tf:TextField = createCustomTextField(10, 10, 100, 300);
            tf.text = "This will be red text";
            tf.textColor = 0xFF0000;            
        }

        private function createCustomTextField(x:Number, y:Number, width:Number, height:Number):TextField {
            var result:TextField = new TextField();
            result.x = x;
            result.y = y;
            result.width = width;
            result.height = height;
            addChild(result);
            return result;
        }
    }
}
</codeblock></example></apiValueDetail></apiValue><apiValue id="flash.text:TextField:textHeight:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">textHeight</apiName><shortdesc class="- topic/shortdesc ">
     Высота текста в пикселях.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">TextField, TextField.textHeight, textHeight
      
      </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Высота текста в пикселях.
     
     </apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Высота текста в пикселях.
     
     </apiDesc><example conref="examples\TextField_textHeight.as" class="- topic/example "> В следующем примере создается объект TextField, которому назначается текст. Инструкции <codeph class="+ topic/ph pr-d/codeph ">trace</codeph> отображают значения свойств <codeph class="+ topic/ph pr-d/codeph ">textWidth</codeph> и <codeph class="+ topic/ph pr-d/codeph ">textHeight</codeph>. Для сравнения также отображаются свойства <codeph class="+ topic/ph pr-d/codeph ">width</codeph> и <codeph class="+ topic/ph pr-d/codeph ">height</codeph>. (Обратите внимание, что значения, отображаемые для свойств <codeph class="+ topic/ph pr-d/codeph ">textHeight</codeph> и <codeph class="+ topic/ph pr-d/codeph ">textWidth</codeph>, могут варьироваться в зависимости от шрифта, используемого на компьютере).
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">

package {
    import flash.display.Sprite;
    import flash.text.TextField;

    public class TextField_textHeight extends Sprite {
        public function TextField_textHeight() {
            var tf:TextField = createCustomTextField(10, 10, 100, 150);
            tf.text = "Sample text";
            
            trace("textWidth: " + tf.textWidth); // textWidth: 55.75
            trace("textHeight: " + tf.textHeight); // textHeight: 13.450000000000001
            trace("width: " + tf.width); // width: 100
            trace("height: " + tf.height); // height: 150
        }

        private function createCustomTextField(x:Number, y:Number, width:Number, height:Number):TextField {
            var result:TextField = new TextField();
            result.x = x;
            result.y = y;
            result.width = width;
            result.height = height;
            result.border = true;
            result.background = true;
            addChild(result);
            return result;
        }
    }
}
</codeblock></example></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.xml#TextField/textWidth" class="- topic/link "><linktext class="- topic/linktext ">flash.text.TextField.textWidth</linktext></link></related-links></apiValue><apiValue id="flash.text:TextField:textInteractionMode:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">textInteractionMode</apiName><shortdesc class="- topic/shortdesc ">
     Свойства режима взаимодействия, Значение по умолчанию - TextInteractionMode. НОРМАЛЬНЫЙ.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="11" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Свойство режима взаимодействия, Значение по умолчанию — TextInteractionMode.NORMAL. На мобильных платформах нормальный режим подразумевает, что текст может быть прокручен, но не выбран. Можно переключиться на выбираемый режим через встроенное контекстное меню на текстовом поле. На компьютере нормальный режим подразумевает, что текст находится в прокручиваемом, а также режиме выделения.
     </apiDesc></apiValueDetail></apiValue><apiValue id="flash.text:TextField:textWidth:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">textWidth</apiName><shortdesc class="- topic/shortdesc ">
     Ширина текста в пикселях.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">TextField, TextField.textWidth, textWidth
      
      </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Ширина текста в пикселях.
     
     </apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Ширина текста в пикселях.
     
     </apiDesc><example conref="examples\TextField_textHeight.as" class="- topic/example "> В следующем примере создается объект TextField, которому назначается текст. Инструкции <codeph class="+ topic/ph pr-d/codeph ">trace</codeph> отображают значения свойств <codeph class="+ topic/ph pr-d/codeph ">textWidth</codeph> и <codeph class="+ topic/ph pr-d/codeph ">textHeight</codeph>. Для сравнения также отображаются свойства <codeph class="+ topic/ph pr-d/codeph ">width</codeph> и <codeph class="+ topic/ph pr-d/codeph ">height</codeph>. (Обратите внимание, что значения, отображаемые для свойств <codeph class="+ topic/ph pr-d/codeph ">textHeight</codeph> и <codeph class="+ topic/ph pr-d/codeph ">textWidth</codeph>, могут варьироваться в зависимости от шрифта, используемого на компьютере).
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">

package {
    import flash.display.Sprite;
    import flash.text.TextField;

    public class TextField_textHeight extends Sprite {
        public function TextField_textHeight() {
            var tf:TextField = createCustomTextField(10, 10, 100, 150);
            tf.text = "Sample text";
            
            trace("textWidth: " + tf.textWidth); // textWidth: 55.75
            trace("textHeight: " + tf.textHeight); // textHeight: 13.450000000000001
            trace("width: " + tf.width); // width: 100
            trace("height: " + tf.height); // height: 150
        }

        private function createCustomTextField(x:Number, y:Number, width:Number, height:Number):TextField {
            var result:TextField = new TextField();
            result.x = x;
            result.y = y;
            result.width = width;
            result.height = height;
            result.border = true;
            result.background = true;
            addChild(result);
            return result;
        }
    }
}
</codeblock></example></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.xml#TextField/textHeight" class="- topic/link "><linktext class="- topic/linktext ">flash.text.TextField.textHeight</linktext></link></related-links></apiValue><apiValue id="flash.text:TextField:text:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">text</apiName><shortdesc class="- topic/shortdesc ">
     Строка, представляющая текущий текст в текстовом поле.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">TextField, TextField.text, text
      
      </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Строка, представляющая текущий текст в текстовом поле.
     
     </apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Строка, представляющая текущий текст в текстовом поле. Строки разделяются символом возврата каретки (<codeph class="+ topic/ph pr-d/codeph ">\r</codeph>, ASCII 13). Это свойство содержит неформатированный текст в текстовом поле без тегов HTML.
     
     <p class="- topic/p ">Чтобы получить текст в виде HTML, используйте свойство <codeph class="+ topic/ph pr-d/codeph ">htmlText</codeph>.</p>
     
     </apiDesc><example conref="examples\TextField_text.as" class="- topic/example "> В следующем примере создается объект TextField с именем <codeph class="+ topic/ph pr-d/codeph ">tf1</codeph>, свойству <codeph class="+ topic/ph pr-d/codeph ">text</codeph> которого назначается строка в формате HTML. Когда отслеживается его свойство <codeph class="+ topic/ph pr-d/codeph ">htmlText</codeph>, выводится строка в формате HTML, к которой проигрыватель Flash Player автоматически добавляет дополнительные теги, например &lt;P> и &lt;FONT>. Когда отслеживается значение свойства <codeph class="+ topic/ph pr-d/codeph ">text</codeph>, отображается неотформатированная строка без тегов HTML.
 
 <p class="- topic/p ">По аналогии, эти же действия выполняются с другим объектом TextField с именем <codeph class="+ topic/ph pr-d/codeph ">tf2</codeph>, но свойству <codeph class="+ topic/ph pr-d/codeph ">styleSheet</codeph> поля <codeph class="+ topic/ph pr-d/codeph ">tf2</codeph> назначается объект StyleSheet, прежде чем задается свойство <codeph class="+ topic/ph pr-d/codeph ">htmlText</codeph>. В этом случае, когда отслеживается свойство <codeph class="+ topic/ph pr-d/codeph ">htmlText</codeph>, оно включает только тот текст HTML, который был изначально назначен свойству <codeph class="+ topic/ph pr-d/codeph ">htmlText</codeph>, демонстрируя, что проигрыватель Flash Player не добавлял других тегов.</p>
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">

package {
    import flash.display.Sprite;
    import flash.text.StyleSheet;
    import flash.text.TextField;

    public class TextField_text extends Sprite {
        public function TextField_text() {
            var tf1:TextField = createCustomTextField(10, 10, 400, 22);
            tf1.htmlText = "&lt;b>Lorem ipsum dolor sit amet.&lt;/b>";

            // htmlText: &lt;P ALIGN="LEFT">&lt;FONT FACE="Times New Roman" SIZE="12" COLOR="#000000" LETTERSPACING="0" KERNING="0">&amp;lt;b&amp;gt;Lorem ipsum dolor sit amet.&amp;lt;/b&amp;gt;&lt;/FONT>&lt;/P>
            trace("htmlText: " + tf1.htmlText);
            // text: Lorem ipsum dolor sit amet.
            trace("text: " + tf1.text);
            
            var tf2:TextField = createCustomTextField(10, 50, 400, 22);
            tf2.styleSheet = new StyleSheet();
            tf2.htmlText = "&lt;b>Lorem ipsum dolor sit amet.&lt;/b>";
            // htmlText: &lt;b>Lorem ipsum dolor sit amet.&lt;/b>
            trace("htmlText: " + tf2.htmlText);
            // text: Lorem ipsum dolor sit amet.
            trace("text: " + tf2.text);
        }

        private function createCustomTextField(x:Number, y:Number, width:Number, height:Number):TextField {
            var result:TextField = new TextField();
            result.x = x;
            result.y = y;
            result.width = width;
            result.height = height;
            addChild(result);
            return result;
        }
    }
}
</codeblock></example></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.xml#TextField/htmlText" class="- topic/link "><linktext class="- topic/linktext ">flash.text.TextField.htmlText</linktext></link></related-links></apiValue><apiValue id="flash.text:TextField:thickness:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">thickness</apiName><shortdesc class="- topic/shortdesc ">
     Толщина контуров символов в данном текстовом поле.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><oldexample>This example creates two text fields and applies a <code>thickness</code> of -200 to one
     and 200 to the other.  It assumes that you have a font
     embedded in the Library with the linkage identifier set to <code>"Times-12"</code>.
     To embed the font, follow these steps:
     <ol class="- topic/ol "><li class="- topic/li ">Open your Library</li><li class="- topic/li ">Click the Library options menu in the upper right corner of the Library</li><li class="- topic/li ">Select "New Font" from the dropdown list</li><li class="- topic/li ">Name the font "Times-12"</li><li class="- topic/li ">Select "Times New Roman" from the font dropdown list</li><li class="- topic/li ">Press the "OK" button</li><li class="- topic/li ">Right-click on the newly created font and select "Linkage..."</li><li class="- topic/li ">Check the "Export for ActionScript" box</li><li class="- topic/li ">Accept the default identifier "Times-12" by pressing the "OK" button</li></ol>
     
     <listing version="2.0">
     var my_format:TextFormat = new TextFormat();
     my_format.font = "Times-12";
     
     var my_text1:TextField = this.createTextField("my_text1", this.getNextHighestDepth(), 10, 10, 300, 30);
     my_text1.text = "thickness = 200";
     my_text1.antiAliasType = "advanced";
     my_text1.border = true;
     my_text1.thickness = 200;
     my_text1.embedFonts = true;
     my_text1.setTextFormat(my_format);
     
     var my_text2:TextField = this.createTextField("my_text2", this.getNextHighestDepth(), 10, 50, 300, 30);
     my_text2.text = "thickness = -200."
     my_text2.antiAliasType = "advanced";
     my_text2.thickness = -200;
     my_text2.border = true;
     my_text2.embedFonts = true;
     my_text2.setTextFormat(my_format);
     </listing>
     
         </oldexample></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier><apiDefaultValue>0
     
     </apiDefaultValue><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Толщина границ глифа.
     
     </apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Толщина контуров символов в данном текстовом поле. Это свойство применяется, только когда параметр <codeph class="+ topic/ph pr-d/codeph ">flash.text.AntiAliasType</codeph> имеет значение <codeph class="+ topic/ph pr-d/codeph ">flash.text.AntiAliasType.ADVANCED</codeph>.
     
     <p class="- topic/p ">Допустимый диапазон значений свойства <codeph class="+ topic/ph pr-d/codeph ">thickness</codeph>: числа от -200 до 200. При попытке задать свойству <codeph class="+ topic/ph pr-d/codeph ">thickness</codeph> значение, находящееся за пределами этого диапазона, проигрыватель Flash Player назначает ему ближайшее значение в диапазоне (-200 или 200).</p>
     
     </apiDesc><example conref="examples\TextField_thickness.as" class="- topic/example "> В следующем примере показан результат изменения свойства <codeph class="+ topic/ph pr-d/codeph ">thickness</codeph> для объекта TextField. Необходимо встроить шрифт и задать свойству <codeph class="+ topic/ph pr-d/codeph ">antiAliasType</codeph> значение <codeph class="+ topic/ph pr-d/codeph ">ADVANCED</codeph>.
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">

package
{
    import flash.display.Sprite;
    import flash.text.TextField;
    import flash.text.TextFieldAutoSize;
    import flash.text.AntiAliasType;
    import flash.text.GridFitType;
    import flash.text.TextFormat;

    public class thicknessExample extends Sprite
    {
        public function thicknessExample()
        {
    var format1:TextFormat = new TextFormat();
    format1.font="Arial";
    format1.size=24;
    var lTxt:String = "The quick brown fox";

    var tf1:TextField=createCustomTextField(0,lTxt,format1,-200);
    var tf2:TextField=createCustomTextField(30,lTxt,format1,0);
    var tf3:TextField=createCustomTextField(60,lTxt,format1,200);
        }

        private function createCustomTextField(y:Number,fldTxt:String,format:TextFormat,fldThickness:Number):TextField 
       {
            var result:TextField = new TextField();
            result.y=y;
            result.text=fldTxt;
            result.embedFonts=true;
            result.autoSize=TextFieldAutoSize.LEFT;
            result.antiAliasType=AntiAliasType.ADVANCED;
            result.gridFitType=GridFitType.PIXEL;
            result.thickness=fldThickness;
            result.setTextFormat(format);
            addChild(result);
            return result;
        }
    }
}
</codeblock></example></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.xml#TextField/antiAliasType" class="- topic/link "><linktext class="- topic/linktext ">flash.text.TextField.antiAliasType</linktext></link><link href="flash.text.xml#AntiAliasType" class="- topic/link "><linktext class="- topic/linktext ">flash.text.AntiAliasType</linktext></link></related-links></apiValue><apiValue id="flash.text:TextField:type:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">type</apiName><shortdesc class="- topic/shortdesc ">
     Тип текстового поля.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">TextField, TextField.type, type
      
      </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Заданный параметр <codeph class="+ topic/ph pr-d/codeph ">type</codeph> не является элементом flash.text.TextFieldType.
     
     </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiDefaultValue>dynamic
     
     </apiDefaultValue><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Тип текстового поля.
     
     </apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Тип текстового поля. Одна из следующих констант класса TextFieldType: <codeph class="+ topic/ph pr-d/codeph ">TextFieldType.DYNAMIC</codeph>, задающая динамическое текстовое поле, которое не может редактироваться пользователем, или <codeph class="+ topic/ph pr-d/codeph ">TextFieldType.INPUT</codeph>, задающая текстовое поле ввода, которое может редактироваться пользователем.
     
     </apiDesc><example conref="examples\TextField_type.as" class="- topic/example "> В следующем примере создаются два текстовых поля: <codeph class="+ topic/ph pr-d/codeph ">tfDynamic</codeph> и <codeph class="+ topic/ph pr-d/codeph ">tfInput</codeph>. Текст вводится в оба текстовых поля. Однако для <codeph class="+ topic/ph pr-d/codeph ">tfDynamic</codeph> свойство <codeph class="+ topic/ph pr-d/codeph ">type</codeph> имеет значение <codeph class="+ topic/ph pr-d/codeph ">TextFieldType.DYNAMIC</codeph>, а для <codeph class="+ topic/ph pr-d/codeph ">tfInput</codeph> свойство <codeph class="+ topic/ph pr-d/codeph ">type</codeph> имеет значение <codeph class="+ topic/ph pr-d/codeph ">TextFieldType.INPUT</codeph>, чтобы пользователь мог модифицировать текст в поле <codeph class="+ topic/ph pr-d/codeph ">tfInput</codeph>, а в поле <codeph class="+ topic/ph pr-d/codeph ">tfDynamic</codeph> — только просматривать.
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">

package {
    import flash.display.Sprite;
    import flash.text.TextField;
    import flash.text.TextFieldType;

    public class TextField_type extends Sprite {
        public function TextField_type() {
            var tfDynamic:TextField = createCustomTextField(10, 10, 100, 20);
            tfDynamic.type = TextFieldType.DYNAMIC;
            tfDynamic.text = "hello";

            var tfInput:TextField = createCustomTextField(10, 45, 100, 20);
            tfInput.type = TextFieldType.INPUT;
            tfInput.text = "world";
        }

        private function createCustomTextField(x:Number, y:Number, width:Number, height:Number):TextField {
            var result:TextField = new TextField();
            result.x = x;
            result.y = y;
            result.width = width;
            result.height = height;
            result.background = true;
            result.border = true;
            addChild(result);
            return result;
        }
    }
}
</codeblock></example></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.xml#TextFieldType" class="- topic/link "><linktext class="- topic/linktext ">flash.text.TextFieldType</linktext></link></related-links></apiValue><apiValue id="flash.text:TextField:useRichTextClipboard:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">useRichTextClipboard</apiName><shortdesc class="- topic/shortdesc ">
     Определяет, будет ли форматирование текста копироваться и вставляться вместе с самим текстом.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Определяет, будет ли форматирование текста копироваться и вставляться вместе с самим текстом. Если задано значение <codeph class="+ topic/ph pr-d/codeph ">true</codeph>, при копировании и вставке текста из одного текстового поля в другое проигрыватель Flash Player также копирует и вставляет форматирование (например, выравнивание, полужирное и курсивное начертание). Для обоих текстовых полей, участвующих в операции копирования и вставки свойство <codeph class="+ topic/ph pr-d/codeph ">useRichTextClipboard</codeph> должно иметь значение <codeph class="+ topic/ph pr-d/codeph ">true</codeph>. Значение по умолчанию <codeph class="+ topic/ph pr-d/codeph ">false</codeph>.
     
     </apiDesc><example conref="examples\TextField_useRichTextClipboard.as" class="- topic/example "> В данном примере создается текстовое поле ввода (<codeph class="+ topic/ph pr-d/codeph ">tf1</codeph>) и два динамических текстовых поля (<codeph class="+ topic/ph pr-d/codeph ">tf2</codeph> и <codeph class="+ topic/ph pr-d/codeph ">tf3</codeph>). Код назначает каждому динамическому текстовому полю объект TextFormat (полужирный шрифт Courier). Для текстового поля <codeph class="+ topic/ph pr-d/codeph ">tf2</codeph> свойство <codeph class="+ topic/ph pr-d/codeph ">useRichTextClipboard</codeph> имеет значение <codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Для текстового поля <codeph class="+ topic/ph pr-d/codeph ">tf3</codeph> свойство <codeph class="+ topic/ph pr-d/codeph ">useRichTextClipboard</codeph> имеет значение <codeph class="+ topic/ph pr-d/codeph ">true</codeph>. Когда текст копируется из поля <codeph class="+ topic/ph pr-d/codeph ">tf2</codeph> и вставляется в текстовое поле <codeph class="+ topic/ph pr-d/codeph ">tf1</codeph>, вставленный фрагмент не сохраняет форматирование. Когда текст копируется из поля <codeph class="+ topic/ph pr-d/codeph ">tf3</codeph> (у которого свойство <codeph class="+ topic/ph pr-d/codeph ">useRichTextClipboard</codeph> имеет значение <codeph class="+ topic/ph pr-d/codeph ">true</codeph>) и вставляется в текстовое поле <codeph class="+ topic/ph pr-d/codeph ">tf1</codeph>, вставленный фрагмент сохраняет форматирование.
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">

package
{
    import flash.display.Sprite;
    import flash.text.TextField;
    import flash.text.TextFieldType;
    import flash.text.TextFormat;

    public class useRichTextClipboard extends Sprite
    {
        public function useRichTextClipboard()
        {
    var format1:TextFormat = new TextFormat();
    format1.font="Courier";
    format1.bold=true;

    var tf1:TextField = createCustomTextField(10, 10, 200, 20);
    tf1.type=TextFieldType.INPUT;
    tf1.useRichTextClipboard=true;

    var tf2:TextField = createCustomTextField(220, 10, 200, 20);
    tf2.text="1.Text loses format";
    tf2.setTextFormat(format1);
    tf2.useRichTextClipboard=false;

    var tf3:TextField = createCustomTextField(220, 50, 200, 20);
    tf3.text="2.Text includes format";
    tf3.setTextFormat(format1);
    tf3.useRichTextClipboard=true;
        }

        private function createCustomTextField(x:Number, y:Number, width:Number, height:Number):TextField 
       {
            var result:TextField = new TextField();
            result.x = x;
            result.y = y;
            result.width = width;
            result.height = height;
            result.background = true;
            result.border = true;
            addChild(result);
            return result;
        }
    }
}
</codeblock></example></apiValueDetail></apiValue><apiValue id="flash.text:TextField:wordWrap:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">wordWrap</apiName><shortdesc class="- topic/shortdesc ">
     Логическое значение, определяющее применение переноса по словам к текстовому полю.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">TextField, TextField.wordWrap, wordWrap
      
      </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Указывает, действует ли в текстовом поле перенос по словам.
     
     </apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Логическое значение, определяющее применение переноса по словам к текстовому полю. Если свойство <codeph class="+ topic/ph pr-d/codeph ">wordWrap</codeph> имеет значение <codeph class="+ topic/ph pr-d/codeph ">true</codeph>, текстовое поле поддерживает перенос слов, а если оно имеет значение <codeph class="+ topic/ph pr-d/codeph ">false</codeph>, то перенос слов запрещен. Значение по умолчанию <codeph class="+ topic/ph pr-d/codeph ">false</codeph>.
     
     </apiDesc><example conref="examples\TextField_wordWrap.as" class="- topic/example "> В данном примере демонстрируется разница между параметрами <codeph class="+ topic/ph pr-d/codeph ">true</codeph> и <codeph class="+ topic/ph pr-d/codeph ">false</codeph> для свойства <codeph class="+ topic/ph pr-d/codeph ">wordWrap</codeph>. Создаются два экземпляра TextField, содержимое которых превышает ширину текстового поля. Для первого поля с именем <codeph class="+ topic/ph pr-d/codeph ">tfWrap</codeph> свойство <codeph class="+ topic/ph pr-d/codeph ">wordWrap</codeph> имеет значение <codeph class="+ topic/ph pr-d/codeph ">true</codeph>; а для второго (<codeph class="+ topic/ph pr-d/codeph ">tfNoWrap</codeph>) -<codeph class="+ topic/ph pr-d/codeph ">false</codeph>.
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">

package {
    import flash.display.Sprite;
    import flash.text.TextField;

    public class TextField_wordWrap extends Sprite {
        public function TextField_wordWrap() {
            var tfWrap:TextField = createCustomTextField(10, 10, 100, 100);
            tfWrap.wordWrap = true;
            tfWrap.text = "(wordWrap = true):\nThis is very long text that will certainly extend beyond the width of this text field";

            var tfNoWrap:TextField = createCustomTextField(10, 150, 100, 100);
            tfNoWrap.wordWrap = false;
            tfNoWrap.text = "(wordWrap = false):\nThis is very long text that will certainly extend beyond the width of this text field";
        }

        private function createCustomTextField(x:Number, y:Number, width:Number, height:Number):TextField {
            var result:TextField = new TextField();
            result.x = x;
            result.y = y;
            result.width = width;
            result.height = height;
            result.background = true;
            result.border = true;
            addChild(result);
            return result;
        }
    }
}
</codeblock></example></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.text:TextFormat" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">TextFormat</apiName><shortdesc class="- topic/shortdesc ">
 Класс TextFormat представляет данные форматирования символов.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><internal>Insure the above example is correct and meets example standards
  
  </internal></asCustoms></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Создает форматирование для текстовых полей.
 
 </apiTipText></apiTipTexts><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Класс TextFormat представляет данные форматирования символов. Используйте класс TextFormat для создания специфического форматирования текста для текстовых полей. Форматирование текста можно применять и к статическим и к динамическим текстовым полям. Свойства класса TextFormat применяются к шрифтам устройства и встроенным шрифтам. Однако при использовании встроенных шрифтов для полужирного и курсивного текста на самом деле могут потребоваться отдельные шрифты. Если требуется отобразить полужирный или курсивный текст с встроенным шрифтом, необходимо встроить варианты его полужирного и курсивного начертания.
 
 <p class="- topic/p "> Прежде чем задавать эти свойства, необходимо вызвать конструктор <codeph class="+ topic/ph pr-d/codeph ">new TextFormat()</codeph> для создания объекта TextFormat. Когда объект TextFormat применяется к текстовому полю с помощью свойства <codeph class="+ topic/ph pr-d/codeph ">TextField.defaultTextFormat</codeph> или метода <codeph class="+ topic/ph pr-d/codeph ">TextField.setTextFormat()</codeph>, применяются только определенные для него свойства. Используйте свойство <codeph class="+ topic/ph pr-d/codeph ">TextField.defaultTextFormat</codeph>, чтобы применить форматирование ПЕРЕД добавлением текста в <codeph class="+ topic/ph pr-d/codeph ">TextField</codeph>, а метод <codeph class="+ topic/ph pr-d/codeph ">setTextFormat()</codeph>, чтобы добавить форматирование ПОСЛЕ добавления текста в <codeph class="+ topic/ph pr-d/codeph ">TextField</codeph>. Свойства объекта TextFormat по умолчанию имеют значения <codeph class="+ topic/ph pr-d/codeph ">null</codeph>, так как если они не определены, проигрыватель Flash Player использует собственное форматирование по умолчанию. Проигрыватель Flash Player использует следующее форматирование для каждого свойства (если его значение — <codeph class="+ topic/ph pr-d/codeph ">null</codeph>).</p>
 
 <adobetable class="innertable"><tgroup cols="1" class="- topic/tgroup "><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry ">align = "left</entry></row><row class="- topic/row "><entry class="- topic/entry ">blockIndent = 0</entry></row><row class="- topic/row "><entry class="- topic/entry ">bold = false</entry></row><row class="- topic/row "><entry class="- topic/entry ">bullet = false</entry></row><row class="- topic/row "><entry class="- topic/entry ">color = 0x000000</entry></row><row class="- topic/row "><entry class="- topic/entry ">font = "Times New Roman" (в Mac OS X шрифт по умолчанию — Times)</entry></row><row class="- topic/row "><entry class="- topic/entry ">indent = 0</entry></row><row class="- topic/row "><entry class="- topic/entry ">italic = false</entry></row><row class="- topic/row "><entry class="- topic/entry ">kerning = false</entry></row><row class="- topic/row "><entry class="- topic/entry ">leading = 0</entry></row><row class="- topic/row "><entry class="- topic/entry ">leftMargin = 0</entry></row><row class="- topic/row "><entry class="- topic/entry ">letterSpacing = 0</entry></row><row class="- topic/row "><entry class="- topic/entry ">rightMargin = 0</entry></row><row class="- topic/row "><entry class="- topic/entry ">size = 12</entry></row><row class="- topic/row "><entry class="- topic/entry ">tabStops = [] (пустой массив)</entry></row><row class="- topic/row "><entry class="- topic/entry ">target = "" (пустая строка)</entry></row><row class="- topic/row "><entry class="- topic/entry ">underline = false</entry></row><row class="- topic/row "><entry class="- topic/entry ">url = "" (пустая строка)</entry></row></tbody></tgroup></adobetable>
 
 <p class="- topic/p ">Форматирование по умолчанию для каждого свойства также приводится в его подробном описании.</p>
 
 </apiDesc><example conref="examples\TextFormatExample.as" class="- topic/example "> В следующем примере создается класс TextFieldExample для отображения текстового сообщения в местоположении по умолчанию (x = 0, y = 0). Это можно сделать, выполнив следующие действия:
 <ol class="- topic/ol "><li class="- topic/li ">Создается свойство <codeph class="+ topic/ph pr-d/codeph ">label</codeph> типа TextField.</li><li class="- topic/li ">Конструктор класса вызывает функцию <codeph class="+ topic/ph pr-d/codeph ">configureLabel()</codeph>.</li><li class="- topic/li ">Метод <codeph class="+ topic/ph pr-d/codeph ">configureLabel()</codeph> сначала создает новый объект TextField и назначает его свойству <codeph class="+ topic/ph pr-d/codeph ">label</codeph>, а затем задает для него следующие параметры
  <ul class="- topic/ul "><li class="- topic/li ">Полная выключка текстового поля по левому краю</li><li class="- topic/li ">Включить заливку фона</li><li class="- topic/li ">Включить рамку</li></ul>
  </li><li class="- topic/li ">Затем метод <codeph class="+ topic/ph pr-d/codeph ">configureLabel()</codeph> создает локальную переменную, <codeph class="+ topic/ph pr-d/codeph ">format</codeph>, назначает ее новому экземпляру TextFormat и задает для нее следующие параметры:
  <ul class="- topic/ul "><li class="- topic/li ">Font type = Verdana</li><li class="- topic/li ">Font Color = solid red</li><li class="- topic/li ">Font size = 10</li><li class="- topic/li ">Font underline = true.</li></ul>
  </li><li class="- topic/li ">Свойству <codeph class="+ topic/ph pr-d/codeph ">defaultTextFormat</codeph> свойства label задается значение <codeph class="+ topic/ph pr-d/codeph ">format</codeph>, и экземпляр <codeph class="+ topic/ph pr-d/codeph ">label</codeph> добавляется в список отображения, который сначала показывает на монтажном столе текстовое поле без текста (крошечное поле с белым фоном).</li><li class="- topic/li ">В завершение, метод конструктора <codeph class="+ topic/ph pr-d/codeph ">setLabel()</codeph> передает для отображения текст объекта label — Hello World and welcome to the show (Здравствуйте все, и добро пожаловать на представление) — в точке с координатами x = 0, y = 0.</li></ol>
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
 package {
    import flash.display.Sprite;
    import flash.text.TextField;
    import flash.text.TextFieldAutoSize;
    import flash.text.TextFormat;


    public class TextFormatExample extends Sprite {
        private var label:TextField;

        public function TextFormatExample() {
            configureLabel();
            setLabel("Hello World and welcome to the show");
        }

        public function setLabel(str:String):void {
            label.text = str;
        }

        private function configureLabel():void {
            label = new TextField();
            label.autoSize = TextFieldAutoSize.LEFT;
            label.background = true;
            label.border = true;

            var format:TextFormat = new TextFormat();
            format.font = "Verdana";
            format.color = 0xFF0000;
            format.size = 10;
            format.underline = true;

            label.defaultTextFormat = format;
            addChild(label);
        }
    }
}
</codeblock></example></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.text.xml#TextField/setTextFormat()" class="- topic/link "><linktext class="- topic/linktext ">flash.text.TextField.setTextFormat()</linktext></link><link href="flash.text.xml#TextField/defaultTextFormat" class="- topic/link "><linktext class="- topic/linktext ">flash.text.TextField.defaultTextFormat</linktext></link><link href="flash.text.xml#TextField/getTextFormat()" class="- topic/link "><linktext class="- topic/linktext ">flash.text.TextField.getTextFormat()</linktext></link></related-links><apiConstructor id="flash.text:TextFormat:TextFormat" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">TextFormat</apiName><shortdesc class="- topic/shortdesc ">
 	 Создает объект TextFormat с заданными свойствами.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9." class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">TextFormat
 	 
 	 </keyword></asCustoms></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">font</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Имя шрифта для текста в виде строки.
 	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">size</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Object</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Целое число, которое обозначает размер в пикселях.
 	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">color</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Object</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Цвет текста, использующего данный формат. Число, содержащее три 8-разрядных компонента RGB; например, 0xFF0000 — красный, 0x00FF00 — зеленый.
 	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">bold</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Object</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Логическое значение, указывающее, является ли текст полужирным.
 	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">italic</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Object</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Логическое значение, указывающее, является ли текст курсивным.
 	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">underline</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Object</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Логическое значение, указывающее, является ли текст подчеркнутым.
 	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">url</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">URL-адрес, на который ссылается текст с этим форматом. Если <codeph class="+ topic/ph pr-d/codeph ">url</codeph> представлен пустой строкой, текст не имеет гиперссылки.
 	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">target</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Целевое окно, где отображается гиперссылка. Если целевое окно представлено пустой строкой, текст отображается в целевом окне по умолчанию, <codeph class="+ topic/ph pr-d/codeph ">_self</codeph>. Если параметр <codeph class="+ topic/ph pr-d/codeph ">url</codeph> представлен пустой строкой или значением <codeph class="+ topic/ph pr-d/codeph ">null</codeph>, это свойство можно получить или задать, но оно не будет иметь силы.
 	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">align</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Выравнивание абзаца в виде значения TextFormatAlign.
 	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">leftMargin</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Object</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Указывает левое поле абзаца (в пикселях).
 	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">rightMargin</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Object</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Указывает правое поле абзаца (в пикселях).
 	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">indent</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Object</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Целое число, указывающее отступ от левого поля до первого символа в абзаце.
 	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">leading</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Object</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">null</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Число, указывающее величину вертикального интервала между строками.
 	 
   	 </apiDesc></apiParam></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 	 Создает объект TextFormat с заданными свойствами. Затем можно изменить свойства объекта TextFormat, чтобы изменить форматирование текстовых полей.
	 
 	 <p class="- topic/p ">Любому параметру можно задать значение <codeph class="+ topic/ph pr-d/codeph ">null</codeph>, чтобы указать, что он не определен. Все параметры являются необязательными, опущенные параметры имеют значение <codeph class="+ topic/ph pr-d/codeph ">null</codeph>.</p>
  	 
 	 </apiDesc><example conref="examples\TextFormat_constructorExample.as" class="- topic/example "> В следующем примере пользователь может выбирать разные варианты форматирования текста из списка, примененного к содержимому другого текстового поля. Если пользователь щелкает по содержимому текстового поля, возвращается формат по умолчанию (исходный).
 
 <p class="- topic/p ">В текстовом поле <codeph class="+ topic/ph pr-d/codeph ">formatTextField</codeph> перечисляются все варианты свойств класса TextField (за исключением <codeph class="+ topic/ph pr-d/codeph ">kerning</codeph>), каждое в отдельной строке. Когда пользователь щелкает строку в текстовом поле <codeph class="+ topic/ph pr-d/codeph ">formatTextField</codeph>, запускается метод <codeph class="+ topic/ph pr-d/codeph ">formatTextFieldClickHandler()</codeph>.</p> 
 
 <p class="- topic/p ">Метод <codeph class="+ topic/ph pr-d/codeph ">formatTextFieldClickHandler()</codeph> сначала вызывает метод <codeph class="+ topic/ph pr-d/codeph ">TextField.getLineIndexAtPoint()</codeph> для получения индекса выбранной строки, а затем метод <codeph class="+ topic/ph pr-d/codeph ">TextField.getLineText()</codeph> для получения содержания строки. Инструкция switch проверяет содержимое строки и соответствующим образом задает свойство объекта TextFormat с именем <codeph class="+ topic/ph pr-d/codeph ">newformat</codeph>. После этого метод <codeph class="+ topic/ph pr-d/codeph ">setTextFormat()</codeph> задает текстовому полю <codeph class="+ topic/ph pr-d/codeph ">contentTextField</codeph> новый формат. Выбирая разные строки в поле <codeph class="+ topic/ph pr-d/codeph ">formatTextField</codeph> пользователь может применять разное форматирование к текстовому полю <codeph class="+ topic/ph pr-d/codeph ">contentTextField</codeph>. (Этот параметр табуляции представляет собой массив, определяющий отдельную точку табуляции для каждого табулятора в строке.) Если выбрана строка <codeph class="+ topic/ph pr-d/codeph ">url</codeph> или <codeph class="+ topic/ph pr-d/codeph ">target</codeph>, пользователь должен щелкнуть текстовое поле <codeph class="+ topic/ph pr-d/codeph ">contentTextField</codeph>, чтобы активировать ссылку и отобразить содержимое целевого URL-адрес (главная страница Flex). По умолчанию свойство <codeph class="+ topic/ph pr-d/codeph ">target</codeph> имеет значение _self, которое означает, что если пользователь выберет строку <codeph class="+ topic/ph pr-d/codeph ">url</codeph>, содержимое отображается в текущем окне. Чтобы свойство <codeph class="+ topic/ph pr-d/codeph ">target</codeph> работало, URL-адрес уже должен быть задан в свойстве <codeph class="+ topic/ph pr-d/codeph ">url</codeph>.</p>
 
 <p class="- topic/p ">Если пользователь щелкает по текстовому полю <codeph class="+ topic/ph pr-d/codeph ">contentTextField</codeph>, запускается метод <codeph class="+ topic/ph pr-d/codeph ">contentTextFieldClickHandler()</codeph>, который возвращает формат поля и объект TextFormat с именем <codeph class="+ topic/ph pr-d/codeph ">newFormat</codeph> к формату по умолчанию (исходному) для текстового поля. При этом отменяются все изменения форматирования, внесенные пользователем.</p>
 
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
package {
    import flash.display.Sprite;
    import flash.text.TextField;
    import flash.text.TextFormat;
    import flash.text.TextFieldAutoSize;
    import flash.events.MouseEvent;
    import flash.text.TextFormatAlign;
    
    public class TextFormat_constructorExample extends Sprite {
        private var contentTextField:TextField = new TextField();
        private var formatTextField:TextField = new TextField();
        private var newFormat:TextFormat = new TextFormat();
        
        public function TextFormat_constructorExample() {
            contentTextField.x = 10;
            contentTextField.y = 10;
            contentTextField.background = true;
            contentTextField.border = true;
            contentTextField.multiline = true;
            contentTextField.wordWrap = true;
            contentTextField.selectable = false;
            contentTextField.width = 250;
            contentTextField.height = 120; 
  
            contentTextField.htmlText = "&lt;p>The TextFormat class represents character formatting "
                + "information. Use the TextFormat class to create specific text formatting "
                + "for text fields." + 
                " &lt;/p>&lt;br>" + "\tTab One" + "\tTab Two&lt;br>";
              
            formatTextField.x = 10;
            formatTextField.y = 140;
            formatTextField.background = true;
            formatTextField.border = true;
            formatTextField.autoSize = TextFieldAutoSize.LEFT;
            
            formatTextField.text = "align: right\n" + "blockIndent: 10 pixels\n" + "bold:\n" + "bullet:\n" + "color: red\n"
                                + "font: Arial\n" + "indent: 20 pixels\n" + "italic:\n" + "leading: 5 spaces\n" 
                                + "leftMargin: 20 pixels\n" + "letterSpacing: 4 pixels\n" + "rightMargin: 20 pixels\n" 
                                + "size: 16 point\n" + "target: new window\n" + "tabStops: 50 and 150 pixel\n" 
                                + "underline:\n" + "url: Apache Flex page\n";

            formatTextField.addEventListener(MouseEvent.CLICK, formatTextFieldClickHandler);
            
            contentTextField.addEventListener(MouseEvent.CLICK, contentTextFieldClickHandler);
            
            this.addChild(contentTextField);
            this.addChild(formatTextField);
        }

        private function formatTextFieldClickHandler(e:MouseEvent):void {
                var value:String= "";
                var i:uint = 0;
                var index:int = formatTextField.getLineIndexAtPoint(e.localX, e.localY);
                var line:String = formatTextField.getLineText(index);;

                line = line.substr(0, (line.indexOf(":")));

                switch(line) {
                    case "align":
                        newFormat.align = TextFormatAlign.RIGHT;
                        break;
                    case "blockIndent":
                        newFormat.blockIndent = 10;
                        break;
                    case "bold":
                        newFormat.bold = true;
                        break;
                    case "bullet":
                        newFormat.bullet = true;
                        break;
                    case "color":
                        newFormat.color = 0xFF0000;        
                        break;
                    case "font":
                        newFormat.font = "Arial";
                        break;
                    case "indent":
                        newFormat.indent = 20;
                        break;
                    case "italic":
                        newFormat.italic = true;
                        break;
                    case "leading":
                        newFormat.leading = 5;
                        break;
                    case "leftMargin":
                        newFormat.leftMargin = 20;
                        break;
                    case "letterSpacing":
                        newFormat.letterSpacing = 4;
                        break;
                    case "rightMargin":
                        newFormat.rightMargin = 20;
                        break;
                    case "size":
                        newFormat.size = 16;
                        break;
                    case "tabStops":                
                        newFormat.tabStops = [50, 150];
                        break;
                    case "target":
                        newFormat.url = "http://www.adobe.com/products/flex/";    
                        newFormat.target = "_blank";
                        break;    
                    case "underline":
                        newFormat.underline = true;
                        break;
                    case "url":
                        newFormat.url = "http://www.adobe.com/products/flex/";    
                        break;
                }    

                contentTextField.setTextFormat(newFormat);
        }

        private function contentTextFieldClickHandler(e:MouseEvent):void {
            contentTextField.setTextFormat(contentTextField.defaultTextFormat);
            newFormat = contentTextField.defaultTextFormat;
        }
    }
}
</codeblock></example></apiConstructorDetail></apiConstructor><apiValue id="flash.text:TextFormat:align:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">align</apiName><shortdesc class="- topic/shortdesc ">
	 Обозначает выравнивание абзаца.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9." class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">TextFormat, TextFormat.align, align
     </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiException class="+ topic/ph reference/ph apiRef/apiDefItem apiOperation/apiEvent adobe-api-d/apiException "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Заданный параметр <codeph class="+ topic/ph pr-d/codeph ">align</codeph> не является элементом flash.text.TextFormatAlign.
	 
	 </apiDesc><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ArgumentError</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">ArgumentError</apiOperationClassifier></apiException><apiDefaultValue>TextFormatAlign.LEFT
	 
	 </apiDefaultValue></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Обозначает выравнивание абзаца. Допустимыми значениями являются константы TextFormatAlign.
	 </apiDesc><example class="- topic/example ">Пример использования этого свойства см. в примере для конструктора <xref href="TextFormat.html#TextFormat()" class="- topic/xref ">TextFormat()</xref>. 
	  
	  </example></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.xml#TextFormatAlign" class="- topic/link "><linktext class="- topic/linktext ">flash.text.TextFormatAlign</linktext></link></related-links></apiValue><apiValue id="flash.text:TextFormat:blockIndent:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">blockIndent</apiName><shortdesc class="- topic/shortdesc ">
	 Указывает отступ блока в пикселях.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9." class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">TextFormat, TextFormat.blockIndent, blockIndent
     </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Object</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Указывает отступ блока в пикселях. Отступ блока применяется ко всему блоку текста, то есть, ко всем его строкам текста. Обычный отступ (<codeph class="+ topic/ph pr-d/codeph ">TextFormat.indent</codeph>), напротив, применяется только к первой строке каждого абзаца. Если это свойство имеет значение <codeph class="+ topic/ph pr-d/codeph ">null</codeph>, объект TextFormat не задает отступ блока (он равен 0).
	 
	 </apiDesc><example class="- topic/example ">Пример использования этого свойства см. в примере для конструктора <xref href="TextFormat.html#TextFormat()" class="- topic/xref ">TextFormat()</xref>. 
 	  
 	  </example></apiValueDetail></apiValue><apiValue id="flash.text:TextFormat:bold:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">bold</apiName><shortdesc class="- topic/shortdesc ">
	 Определяет, является ли текст полужирным.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9." class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">TextFormat, TextFormat.bold, bold
     </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Object</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Определяет, является ли текст полужирным. Значение по умолчанию — <codeph class="+ topic/ph pr-d/codeph ">null</codeph>, т.е. полужирное начертание не используется. Если значение — <codeph class="+ topic/ph pr-d/codeph ">true</codeph>, тогда отображается полужирный текст.
	 
	 </apiDesc><example class="- topic/example ">Пример использования этого свойства см. в примере для конструктора <xref href="TextFormat.html#TextFormat()" class="- topic/xref ">TextFormat()</xref>. 
	  
	  </example></apiValueDetail></apiValue><apiValue id="flash.text:TextFormat:bullet:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">bullet</apiName><shortdesc class="- topic/shortdesc ">
	 Показывает, что текст является частью маркированного списка.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9." class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">TextFormat, TextFormat.bullet, bullet
     </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Object</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Показывает, что текст является частью маркированного списка. В маркированном списке отступ применяется к каждому абзацу. Слева от первой строки каждого абзаца отображается маркер списка. Значение по умолчанию — <codeph class="+ topic/ph pr-d/codeph ">null</codeph>, т.е. маркированный список не используется.
	 
	 </apiDesc><example class="- topic/example ">Пример использования этого свойства см. в примере для конструктора <xref href="TextFormat.html#TextFormat()" class="- topic/xref ">TextFormat()</xref>. 
	  
	  </example></apiValueDetail></apiValue><apiValue id="flash.text:TextFormat:color:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">color</apiName><shortdesc class="- topic/shortdesc ">
	 Указывает цвет текста.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9." class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">TextFormat, TextFormat.color, color
     </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Object</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Указывает цвет текста. Число, содержащее три 8-разрядных компонента RGB; например, 0xFF0000 — красный, 0x00FF00 — зеленый. Значение по умолчанию — <codeph class="+ topic/ph pr-d/codeph ">null</codeph>, т.е. проигрыватель Flash Player использует черный цвет (0x000000).
	 
	 </apiDesc><example class="- topic/example ">Пример использования этого свойства см. в примере для конструктора <xref href="TextFormat.html#TextFormat()" class="- topic/xref ">TextFormat()</xref>. 
	  
	  </example></apiValueDetail></apiValue><apiValue id="flash.text:TextFormat:font:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">font</apiName><shortdesc class="- topic/shortdesc ">
	 Имя шрифта для текста в данном текстовом формате (в виде строки).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9." class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">TextFormat, TextFormat.font, font
     </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Имя шрифта для текста в данном текстовом формате (в виде строки). Значение по умолчанию — <codeph class="+ topic/ph pr-d/codeph ">null</codeph>, т.е. проигрыватель Flash Player использует для текста шрифт Times New Roman.
	 
	 </apiDesc><example class="- topic/example ">Пример использования этого свойства см. в примере для конструктора <xref href="TextFormat.html#TextFormat()" class="- topic/xref ">TextFormat()</xref>. 
	  
	  </example></apiValueDetail></apiValue><apiValue id="flash.text:TextFormat:indent:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">indent</apiName><shortdesc class="- topic/shortdesc ">
	 Указывает отступ от левого поля до первого символа в абзаце.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9." class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">TextFormat, TextFormat.indent, indent
     </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Object</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Указывает отступ от левого поля до первого символа в абзаце. Значение по умолчанию — <codeph class="+ topic/ph pr-d/codeph ">null</codeph>, т.е. отступ не используется.
	 
	 </apiDesc><example class="- topic/example ">Пример использования этого свойства см. в примере для конструктора <xref href="TextFormat.html#TextFormat()" class="- topic/xref ">TextFormat()</xref>. 
	  
	  </example></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.xml#TextFormat/blockIndent" class="- topic/link "><linktext class="- topic/linktext ">flash.text.TextFormat.blockIndent</linktext></link></related-links></apiValue><apiValue id="flash.text:TextFormat:italic:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">italic</apiName><shortdesc class="- topic/shortdesc ">
	 Показывает, выделен ли текст в данном текстовом формате курсивом.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9." class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">TextFormat, TextFormat.italic, italic
     </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Object</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Показывает, выделен ли текст в данном текстовом формате курсивом. Значение по умолчанию — <codeph class="+ topic/ph pr-d/codeph ">null</codeph>, т.е. курсивное начертание не используется.
	 
	 </apiDesc><example class="- topic/example ">Пример использования этого свойства см. в примере для конструктора <xref href="TextFormat.html#TextFormat()" class="- topic/xref ">TextFormat()</xref>. 
	  
	  </example></apiValueDetail></apiValue><apiValue id="flash.text:TextFormat:kerning:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">kerning</apiName><shortdesc class="- topic/shortdesc ">
	 Логическое значение, указывающее использование кернинга (true — включено и false — отключено).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9." class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><internal>Add better description and example.
	  
	 </internal></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Object</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Логическое значение, указывающее использование кернинга (<codeph class="+ topic/ph pr-d/codeph ">true</codeph> — включено и <codeph class="+ topic/ph pr-d/codeph ">false</codeph> — отключено). Функция кернинга позволяет регулировать число пикселей между определенными символьными парами в целях упрощения восприятия. Эту функцию рекомендуется применять только в случае необходимости, например, в отношении заголовков при использовании крупных шрифтов. Кернинг поддерживается только для встроенных шрифтов.
	 
	 <p class="- topic/p ">Определенные шрифты, такие как Verdana, и моноширинные шрифты, такие как Courier New, не поддерживают кернинг.</p>
	 
	 <p class="- topic/p ">Значение по умолчанию — <codeph class="+ topic/ph pr-d/codeph ">null</codeph>, т.е. кернинг выключен.</p>
	 
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.text:TextFormat:leading:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">leading</apiName><shortdesc class="- topic/shortdesc ">
	 Целое число, представляющее величину промежутка между строками по вертикали (так называемый междустрочный интервал).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9." class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">TextFormat, TextFormat.leading, leading
     </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Object</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Целое число, представляющее величину промежутка между строками по вертикали (так называемый <i class="+ topic/ph hi-d/i ">междустрочный интервал</i>). Значение по умолчанию — <codeph class="+ topic/ph pr-d/codeph ">null</codeph>, т.е. величина междустрочного интервала равна 0.
	 
	 </apiDesc><example class="- topic/example ">Пример использования этого свойства см. в примере для конструктора <xref href="TextFormat.html#TextFormat()" class="- topic/xref ">TextFormat()</xref>. 
	  
	  </example></apiValueDetail></apiValue><apiValue id="flash.text:TextFormat:leftMargin:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">leftMargin</apiName><shortdesc class="- topic/shortdesc ">
	 Левое поле абзаца (в пикселях).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9." class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">TextFormat, TextFormat.leftMargin, leftMargin
     </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Object</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Левое поле абзаца (в пикселях). Значение по умолчанию — <codeph class="+ topic/ph pr-d/codeph ">null</codeph>, т.е. левое поле равно 0 пикселей.
	 
	 </apiDesc><example class="- topic/example ">Пример использования этого свойства см. в примере для конструктора <xref href="TextFormat.html#TextFormat()" class="- topic/xref ">TextFormat()</xref>. 
	  
	  </example></apiValueDetail></apiValue><apiValue id="flash.text:TextFormat:letterSpacing:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">letterSpacing</apiName><shortdesc class="- topic/shortdesc ">
     Число, представляющее величину пространства, равномерно распределяемого между всеми символами.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9." class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><internal>Add better description and example.
     </internal></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Object</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
     Число, представляющее величину пространства, равномерно распределяемого между всеми символами. Это значение задает количество пикселей, добавляемых после каждого символа. Значение по умолчанию — <codeph class="+ topic/ph pr-d/codeph ">null</codeph>, т.е. используется нулевой интервал между буквами. Можно использовать дробные значения, например <codeph class="+ topic/ph pr-d/codeph ">1,75</codeph>.
	 
	 </apiDesc><example class="- topic/example ">Пример использования этого свойства см. в примере для конструктора <xref href="TextFormat.html#TextFormat()" class="- topic/xref ">TextFormat()</xref>. 
	  
	 </example></apiValueDetail></apiValue><apiValue id="flash.text:TextFormat:rightMargin:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">rightMargin</apiName><shortdesc class="- topic/shortdesc ">
	 Правое поле абзаца (в пикселях).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9." class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">TextFormat, TextFormat.rightMargin, rightMargin
     </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Object</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Правое поле абзаца (в пикселях). Значение по умолчанию — <codeph class="+ topic/ph pr-d/codeph ">null</codeph>, т.е. правое поле равно 0 пикселей.
	 
	 </apiDesc><example class="- topic/example ">Пример использования этого свойства см. в примере для конструктора <xref href="TextFormat.html#TextFormat()" class="- topic/xref ">TextFormat()</xref>. 
	  
	  </example></apiValueDetail></apiValue><apiValue id="flash.text:TextFormat:size:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">size</apiName><shortdesc class="- topic/shortdesc ">
	 Размер текста в пикселях в данном текстовом формате.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9." class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">TextFormat, TextFormat.size, size
     </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Object</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Размер текста в пикселях в данном текстовом формате. Значением по умолчанию является <codeph class="+ topic/ph pr-d/codeph ">null</codeph>, которое обозначает использование кегля 12.
	 
	 </apiDesc><example class="- topic/example ">Пример использования этого свойства см. в примере для конструктора <xref href="TextFormat.html#TextFormat()" class="- topic/xref ">TextFormat()</xref>. 
	  
	  </example></apiValueDetail></apiValue><apiValue id="flash.text:TextFormat:tabStops:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">tabStops</apiName><shortdesc class="- topic/shortdesc ">
	 Задает пользовательские позиции табуляции в виде массива неотрицательных целых чисел.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9." class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">TextFormat, TextFormat.tabStops, tabStops
     </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Array</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Задает пользовательские позиции табуляции в виде массива неотрицательных целых чисел. Каждая точка табуляции задается в пикселях. Если не заданы пользовательские точки табуляции (<codeph class="+ topic/ph pr-d/codeph ">null</codeph>), по умолчанию используется значение 4 (средняя ширина символа).
	 
	 </apiDesc><example class="- topic/example ">Пример использования этого свойства см. в примере для конструктора <xref href="TextFormat.html#TextFormat()" class="- topic/xref ">TextFormat()</xref>. 
	  
	  </example></apiValueDetail></apiValue><apiValue id="flash.text:TextFormat:target:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">target</apiName><shortdesc class="- topic/shortdesc ">
	 Указывает целевое окно, где отображается гиперссылка.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9." class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">TextFormat, TextFormat.target, target
     </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Указывает целевое окно, где отображается гиперссылка. Если целевое окно представлено пустой строкой, текст отображается в целевом окне по умолчанию, <codeph class="+ topic/ph pr-d/codeph ">_self</codeph>. Можно выбрать пользовательское имя или один из следующих четырех вариантов: <codeph class="+ topic/ph pr-d/codeph ">_self</codeph> задает текущий фрейм в текущем окне, <codeph class="+ topic/ph pr-d/codeph ">_blank</codeph> задает новое окно, <codeph class="+ topic/ph pr-d/codeph ">_parent</codeph> задает родительский элемент текущего фрейма, и <codeph class="+ topic/ph pr-d/codeph ">_top</codeph> задает фрейм верхнего уровня в текущем окне. Если параметр <codeph class="+ topic/ph pr-d/codeph ">TextFormat.url</codeph> представлен пустой строкой или значением <codeph class="+ topic/ph pr-d/codeph ">null</codeph>, это свойство можно получить или задать, но оно не будет иметь силы.
	 
	 </apiDesc><example class="- topic/example ">Пример использования этого свойства см. в примере для конструктора <xref href="TextFormat.html#TextFormat()" class="- topic/xref ">TextFormat()</xref>. 
	  
	  </example></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.xml#TextFormat/url" class="- topic/link "><linktext class="- topic/linktext ">flash.text.TextFormat.url</linktext></link></related-links></apiValue><apiValue id="flash.text:TextFormat:underline:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">underline</apiName><shortdesc class="- topic/shortdesc ">
	 Показывает, является ли текст в этом текстовом формате подчеркнутым: да (true) или нет (false).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9." class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">TextFormat, TextFormat.underline, underline
     </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Object</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Показывает, является ли текст в этом текстовом формате подчеркнутым: да (<codeph class="+ topic/ph pr-d/codeph ">true</codeph>) или нет (<codeph class="+ topic/ph pr-d/codeph ">false</codeph>). Это подчеркивание похоже на подчеркивание с помощью тега <codeph class="+ topic/ph pr-d/codeph ">&lt;U></codeph>, но последнее не является истинным подчеркиванием, так как не пропускает буквы с нижним выносным элементом. Значение по умолчанию — <codeph class="+ topic/ph pr-d/codeph ">null</codeph>, т.е. подчеркивание не используется.
	 
	 </apiDesc><example class="- topic/example ">Пример использования этого свойства см. в примере для конструктора <xref href="TextFormat.html#TextFormat()" class="- topic/xref ">TextFormat()</xref>. 
	  
	  </example></apiValueDetail></apiValue><apiValue id="flash.text:TextFormat:url:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">url</apiName><shortdesc class="- topic/shortdesc ">
	 Указывает целевой URL-адрес для текста в данном текстовом формате.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9." class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">TextFormat, TextFormat.url, url
     </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Указывает целевой URL-адрес для текста в данном текстовом формате. Если свойство <codeph class="+ topic/ph pr-d/codeph ">url</codeph> представлено пустой строкой, текст не имеет гиперссылки. Значение по умолчанию — <codeph class="+ topic/ph pr-d/codeph ">null</codeph>, т.е. текст не имеет гиперссылки.
	 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Примечание.</b> Чтобы гиперссылка работала, для текста с назначенным форматом должно быть задано свойство <codeph class="+ topic/ph pr-d/codeph ">htmlText</codeph>.</p>
	 
	 </apiDesc><example class="- topic/example ">Пример использования этого свойства см. в примере для конструктора <xref href="TextFormat.html#TextFormat()" class="- topic/xref ">TextFormat()</xref>. 
	  
	  </example></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.xml#TextField/htmlText" class="- topic/link "><linktext class="- topic/linktext ">flash.text.TextField.htmlText</linktext></link></related-links></apiValue></apiClassifier><apiClassifier languages="" id="flash.text:TextDisplayMode" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">TextDisplayMode</apiName><shortdesc class="- topic/shortdesc ">
 Класс TextDisplayMode содержит значения, определяющие дополнительное субпиксельное сглаживание.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Класс TextDisplayMode содержит значения, определяющие дополнительное субпиксельное сглаживание. 
 
 </apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.text.xml#TextRenderer/displayMode" class="- topic/link "><linktext class="- topic/linktext ">flash.text.TextRenderer.displayMode</linktext></link></related-links><apiValue id="flash.text:TextDisplayMode:CRT" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">CRT</apiName><shortdesc class="- topic/shortdesc ">
	 Предписывает проигрывателю Flash Player отображать полутоновое сглаживание.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">crt</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Предписывает проигрывателю Flash Player отображать полутоновое сглаживание. Хотя этот параметр предотвращает окрашивание текста, некоторым пользователям он кажется размытым.
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.text:TextDisplayMode:DEFAULT" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">DEFAULT</apiName><shortdesc class="- topic/shortdesc ">
	 Позволяет проигрывателю Flash Player выбирать режим LCD или CRT.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">default</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Позволяет проигрывателю Flash Player выбирать режим LCD или CRT.	
	 </apiDesc></apiValueDetail></apiValue><apiValue id="flash.text:TextDisplayMode:LCD" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">LCD</apiName><shortdesc class="- topic/shortdesc "> 
	 Предписывает проигрывателю Flash Player применять субпиксельное сглаживание LCD.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">lcd</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	 Предписывает проигрывателю Flash Player применять субпиксельное сглаживание LCD. В зависимости от шрифта и аппаратных средств этот параметр может привести к повышению разрешения текста или к его окраске.
	 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.text:AntiAliasType" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">AntiAliasType</apiName><shortdesc class="- topic/shortdesc ">
Класс AntiAliasType передает значения для сглаживания в классе flash.text.TextField.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
Класс AntiAliasType передает значения для сглаживания в классе flash.text.TextField.
</apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.text.xml#TextField" class="- topic/link "><linktext class="- topic/linktext ">flash.text.TextField</linktext></link></related-links><apiValue id="flash.text:AntiAliasType:ADVANCED" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">ADVANCED</apiName><shortdesc class="- topic/shortdesc ">
	Задает использование расширенных возможностей сглаживания.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">advanced</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Задает использование расширенных возможностей сглаживания. Расширенное сглаживание позволяет высококачественно визуализировать шрифты небольшого размера. Оно оптимально для приложений, в которых используется много мелкого текста. Расширенное сглаживание не рекомендуется для шрифтов больше 48 размера. Эта константа используется для свойства <codeph class="+ topic/ph pr-d/codeph ">antiAliasType</codeph> в классе TextField. Используйте синтаксис <codeph class="+ topic/ph pr-d/codeph ">AntiAliasType.ADVANCED</codeph>.
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.xml#TextField/antiAliasType" class="- topic/link "><linktext class="- topic/linktext ">flash.text.TextField.antiAliasType</linktext></link></related-links></apiValue><apiValue id="flash.text:AntiAliasType:NORMAL" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">NORMAL</apiName><shortdesc class="- topic/shortdesc ">
	Задает использование сглаживания в Flash Player 7 и более ранних версий.</shortdesc><prolog class="- topic/prolog "><author class="- topic/author ">Bob Pappas
	</author><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">normal</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Задает использование сглаживания в Flash Player 7 и более ранних версий. Этот параметр рекомендуется для приложений с небольшим объемом текста. Эта константа используется для свойства <codeph class="+ topic/ph pr-d/codeph ">antiAliasType</codeph> в классе TextField. Используйте синтаксис <codeph class="+ topic/ph pr-d/codeph ">AntiAliasType.NORMAL</codeph>.
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.xml#TextField/antiAliasType" class="- topic/link "><linktext class="- topic/linktext ">flash.text.TextField.antiAliasType</linktext></link></related-links></apiValue></apiClassifier><apiClassifier languages="" id="flash.text:FontType" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">FontType</apiName><shortdesc class="- topic/shortdesc ">
	 Класс FontType содержит перечисляемые константы embedded и device для свойства fontType класса Font.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Класс FontType содержит перечисляемые константы <codeph class="+ topic/ph pr-d/codeph ">embedded</codeph> и <codeph class="+ topic/ph pr-d/codeph ">device</codeph> для свойства <codeph class="+ topic/ph pr-d/codeph ">fontType</codeph> класса Font. 
	 
	 </apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.text.xml#Font/fontType" class="- topic/link "><linktext class="- topic/linktext ">flash.text.Font.fontType</linktext></link></related-links><apiValue id="flash.text:FontType:DEVICE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">DEVICE</apiName><shortdesc class="- topic/shortdesc ">
		 Показывает, что данный шрифт является шрифтом устройства.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage name="ActionScript" version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">device</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 Показывает, что данный шрифт является шрифтом устройства. SWF-файл выполняет визуализацию с помощью шрифтов системы.
		 
		 <p class="- topic/p ">Использование шрифтов устройства сокращает размер ролика, так как в файл не включаются данные шрифтов. Шрифты устройства обычно оптимально подходят для отображения мелкого текста, так как при использовании малых кеглей сглаженный текст может выглядеть нечетко. Шрифты устройства так же хороши для больших блоков текста, например текста с прокруткой.</p>
		 
		 <p class="- topic/p ">Текстовые поля, использующие шрифты устройства, могут отображаться неодинаково в разных системах и на разных платформах, так как при их визуализации используются шрифты, установленные в системе. По этой же причине шрифты устройства не сглаживаются и при использовании больших кеглей могут выглядеть зазубренными.</p>
		 
		 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.xml#TextField/embedFonts" class="- topic/link "><linktext class="- topic/linktext ">TextField.embedFonts</linktext></link><link href="flash.text.engine.xml#FontDescription/fontLookup" class="- topic/link "><linktext class="- topic/linktext ">flash.text.engine.FontDescription.fontLookup</linktext></link></related-links></apiValue><apiValue id="flash.text:FontType:EMBEDDED_CFF" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">EMBEDDED_CFF</apiName><shortdesc class="- topic/shortdesc ">
		 Показывает, что данный шрифт является встроенным шрифтом CFF.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage name="ActionScript" version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="10" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">embeddedCFF</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 Показывает, что данный шрифт является встроенным шрифтом CFF. Контуры шрифтов и подгруппа таблиц OpenType встраиваются в публикуемый SWF-файл.
		 
		 <p class="- topic/p ">Текст, использующий встроенные шрифты CFF, всегда отображаются с выбранным шрифтом, независимо от того, установлен он в воспроизводящей системе или нет. Кроме того, текст, использующий встроенные шрифты CFF, всегда сглаживается (смягчается) проигрывателем Flash Player. Для встроенного шрифта CFF можно выбрать режим визуализации и хинтинга CFF с помощью свойств <codeph class="+ topic/ph pr-d/codeph ">flash.text.engine.FontDescription.renderingMode</codeph> и <codeph class="+ topic/ph pr-d/codeph ">flash.text.engine.FontDescription.cffHinting</codeph>.</p>
		 
		 <p class="- topic/p ">Недостатком встроенных шрифтов CFF является то, что они увеличивают размер SWF-файла. Однако они обычно на 20-30% меньше обычных встроенных шрифтов.</p>
		 
		 <p class="- topic/p ">Шрифты типа <codeph class="+ topic/ph pr-d/codeph ">EMBEDDED_CFF</codeph> могут использоваться только классами flash.text.engine. Объект TextField, получивший предписание использовать такой шрифт, не сможет визуализировать текст.</p>
		 
		 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.engine.xml#FontDescription/fontLookup" class="- topic/link "><linktext class="- topic/linktext ">flash.text.engine.FontDescription.fontLookup</linktext></link></related-links></apiValue><apiValue id="flash.text:FontType:EMBEDDED" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">EMBEDDED</apiName><shortdesc class="- topic/shortdesc ">
		 Показывает, что данный шрифт является встроенным.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage name="ActionScript" version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">embedded</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 Показывает, что данный шрифт является встроенным. Контуры шрифта встраиваются в публикуемый SWF-файл.
		 
		 <p class="- topic/p ">Текстовые поля, использующие встроенные шрифты, всегда отображаются с выбранным шрифтом, независимо от того, установлен он в воспроизводящей системе или нет. Кроме того, текстовые поля, использующие встроенные шрифты, всегда сглаживаются (смягчаются). Необходимый уровень сглаживания можно задать с помощью свойства <codeph class="+ topic/ph pr-d/codeph ">TextField.antiAliasType</codeph>.</p>
		 
		 <p class="- topic/p ">Недостатком встроенных шрифтов является то, что они увеличивают размер SWF-файла.</p>
		 
		 <p class="- topic/p ">Шрифты типа <codeph class="+ topic/ph pr-d/codeph ">EMBEDDED</codeph> могут использоваться только объектом TextField. Если классы flash.text.engine получают предписание использовать такой шрифт, они будут использовать шрифты устройства.</p>
		 
		 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.xml#TextField/embedFonts" class="- topic/link "><linktext class="- topic/linktext ">TextField.embedFonts</linktext></link></related-links></apiValue></apiClassifier><apiClassifier languages="" id="flash.text:TextFormatAlign" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">TextFormatAlign</apiName><shortdesc class="- topic/shortdesc ">
 Класс TextFormatAlign передает значения для выравнивания текста в классе TextFormat.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Класс TextFormatAlign передает значения для выравнивания текста в классе TextFormat.
 
 
 </apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.text.xml#TextFormat" class="- topic/link "><linktext class="- topic/linktext ">flash.text.TextFormat</linktext></link></related-links><apiValue id="flash.text:TextFormatAlign:CENTER" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">CENTER</apiName><shortdesc class="- topic/shortdesc ">
	 Константа, которая задает выравнивание текста по центру в текстовом поле.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">center</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Константа, которая задает выравнивание текста по центру в текстовом поле. Используйте синтаксис <codeph class="+ topic/ph pr-d/codeph ">TextFormatAlign.CENTER</codeph>.
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.xml#TextFormat/align" class="- topic/link "><linktext class="- topic/linktext ">flash.text.TextFormat.align</linktext></link></related-links></apiValue><apiValue id="flash.text:TextFormatAlign:JUSTIFY" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">JUSTIFY</apiName><shortdesc class="- topic/shortdesc ">
	 Константа, которая задает выравнивание текста по ширине в пределах текстового поля.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">justify</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Константа, которая задает выравнивание текста по ширине в пределах текстового поля. Используйте синтаксис <codeph class="+ topic/ph pr-d/codeph ">TextFormatAlign.JUSTIFY</codeph>.
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.xml#TextFormat/align" class="- topic/link "><linktext class="- topic/linktext ">flash.text.TextFormat.align</linktext></link></related-links></apiValue><apiValue id="flash.text:TextFormatAlign:LEFT" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">LEFT</apiName><shortdesc class="- topic/shortdesc ">
	 Константа, которая задает выравнивание текста по левому краю в пределах текстового поля.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">left</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Константа, которая задает выравнивание текста по левому краю в пределах текстового поля. Используйте синтаксис <codeph class="+ topic/ph pr-d/codeph ">TextFormatAlign.LEFT</codeph>.
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.xml#TextFormat/align" class="- topic/link "><linktext class="- topic/linktext ">flash.text.TextFormat.align</linktext></link></related-links></apiValue><apiValue id="flash.text:TextFormatAlign:RIGHT" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">RIGHT</apiName><shortdesc class="- topic/shortdesc ">
	 Константа, которая задает выравнивание текста по правому краю в пределах текстового поля.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">right</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Константа, которая задает выравнивание текста по правому краю в пределах текстового поля. Используйте синтаксис <codeph class="+ topic/ph pr-d/codeph ">TextFormatAlign.RIGHT</codeph>.
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.xml#TextFormat/align" class="- topic/link "><linktext class="- topic/linktext ">flash.text.TextFormat.align</linktext></link></related-links></apiValue></apiClassifier><apiClassifier languages="" id="flash.text:Font" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">Font</apiName><shortdesc class="- topic/shortdesc ">
 Класс Font используется для управления встроенными шрифтами в SWF-файлах.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Класс Font используется для управления встроенными шрифтами в SWF-файлах. Встроенные шрифты представлены в виде подкласса класса Font. В этом случае класс Font используется только для получения информации о встроенных шрифтах. С его помощью нельзя изменить шрифт. Класс Font нельзя использовать для загрузки внешних шрифтов или для создания своего экземпляра Font. Класс Font следует использовать как абстрактный базовый класс.
 
 </apiDesc></apiClassifierDetail><apiOperation id="flash.text:Font:enumerateFonts" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">enumerateFonts</apiName><shortdesc class="- topic/shortdesc "> 
    Определяет, должен ли предоставляться список текущих доступных встроенных шрифтов.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Список доступных шрифтов в виде массива объектов Font.
	</apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Array</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">enumerateDeviceFonts</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Указывает, требуется ли ограничить список только доступными на данный момент встроенными шрифтами. При значении <codeph class="+ topic/ph pr-d/codeph ">true</codeph> возвращается список всех шрифтов, включая шрифты устройства и встроенные шрифты. При значении <codeph class="+ topic/ph pr-d/codeph ">false</codeph> возвращается только список встроенных шрифтов.
        </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
    Определяет, должен ли предоставляться список текущих доступных встроенных шрифтов.
        </apiDesc><example conref="examples\Font.enumerateFonts.1.as" class="- topic/example "> В данном примере сначала вызывается статический метод <codeph class="+ topic/ph pr-d/codeph ">Font.enumerateFonts()</codeph> для получения списка всех шрифтов устройства и встроенных шрифтов. Затем полученный массив объектов Font сортируется по свойству <codeph class="+ topic/ph pr-d/codeph ">fontName</codeph>.
 
 <p class="- topic/p ">После этого показывается результат вызова метода <codeph class="+ topic/ph pr-d/codeph ">Font.enumerateFonts()</codeph> с параметром <codeph class="+ topic/ph pr-d/codeph ">enumerateDeviceFonts</codeph> в значении false. Полученный массив включает только встроенный объекты Font. (Если выполнить этот код в приложении, не содержащем встроенных шрифтов, то массив <codeph class="+ topic/ph pr-d/codeph ">embeddedFonts</codeph> будет пустым.)</p>
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
 
import flash.text.Font;

var allFonts:Array = Font.enumerateFonts(true);
allFonts.sortOn("fontName", Array.CASEINSENSITIVE);

var embeddedFonts:Array = Font.enumerateFonts(false);
embeddedFonts.sortOn("fontName", Array.CASEINSENSITIVE);
</codeblock></example></apiOperationDetail></apiOperation><apiOperation id="flash.text:Font:hasGlyphs" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">hasGlyphs</apiName><shortdesc class="- topic/shortdesc "> 
        Показывает, может ли заданная строка отображаться с использованием текущего назначенного шрифта.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Имеет значение <codeph class="+ topic/ph pr-d/codeph ">true</codeph>, если заданная строка может быть полностью отображена с использованием данного шрифта.
	</apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">str</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Строка, тестируемая с использованием текущего шрифта.
        </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
        Показывает, может ли заданная строка отображаться с использованием текущего назначенного шрифта.
        </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.text:Font:registerFont" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">registerFont</apiName><shortdesc class="- topic/shortdesc "> 
	Регистрирует класс шрифта в глобальном списке шрифтов.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">font</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Class</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Класс, который требуется добавить в глобальный список шрифтов.
	</apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	Регистрирует класс шрифта в глобальном списке шрифтов.
	</apiDesc></apiOperationDetail></apiOperation><apiValue id="flash.text:Font:fontName:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">fontName</apiName><shortdesc class="- topic/shortdesc "> 
	Имя встроенного шрифта.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	Имя встроенного шрифта. 
	
	</apiDesc><example conref="examples\Font_fontName.as" class="- topic/example "> Следующий пример демонстрирует использование встроенного шрифта вместе с элементом управления CheckBox в Flash Professional ActionScript 3.0 путем определения стилей textFormat и embedFonts. Пример предоставлен <xref href="http://actionscriptexamples.com/2008/11/27/using-embedded-fonts-with-the-checkbox-control-in-flash-with-actionscript-30/" scope="_mmexternal" class="- topic/xref ">ActionScriptExamples.com</xref>. 
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
// Requires:
// - A CheckBox control UI component in Flash library.
// - An embedded font in Flash library with linkage class "MyFont" and Export for ActionScript checked.
//
import fl.controls.CheckBox;
 
var embeddedFont:Font = new MyFont();
 
var textFormat:TextFormat = new TextFormat();
textFormat.font = embeddedFont.fontName;
textFormat.size = 24;
 
var checkBox:CheckBox = new CheckBox();
checkBox.setStyle("textFormat", textFormat);
checkBox.setStyle("embedFonts", true);
checkBox.label = "The quick brown fox jumps over the lazy dog.";
checkBox.textField.autoSize = TextFieldAutoSize.LEFT;
checkBox.move(10, 10);
checkBox.validateNow();
addChild(checkBox);
</codeblock></example></apiValueDetail></apiValue><apiValue id="flash.text:Font:fontStyle:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">fontStyle</apiName><shortdesc class="- topic/shortdesc "> 
	Стиль шрифта.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	Стиль шрифта. Это может быть одно из значений, определенных в классе FontStyle.
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.xml#FontStyle" class="- topic/link "><linktext class="- topic/linktext ">flash.text.FontStyle</linktext></link></related-links></apiValue><apiValue id="flash.text:Font:fontType:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">fontType</apiName><shortdesc class="- topic/shortdesc "> 
	Тип шрифта.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	Тип шрифта. Это может быть одна из констант, определенных в классе FontType.
	
	
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.xml#FontType" class="- topic/link "><linktext class="- topic/linktext ">flash.text.FontType</linktext></link></related-links></apiValue></apiClassifier><apiClassifier languages="" id="flash.text:TextRenderer" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">TextRenderer</apiName><shortdesc class="- topic/shortdesc ">
 Класс TextRenderer обеспечивает поддержку расширенных возможностей сглаживания встроенных шрифтов.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><internal>-- Class sample changed due to bug 193833
 </internal></asCustoms></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Управляет сглаживанием встроенных шрифтов.
 
 </apiTipText></apiTipTexts><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Класс TextRenderer обеспечивает поддержку расширенных возможностей сглаживания встроенных шрифтов. Расширенное сглаживание позволяет высококачественно визуализировать шрифты небольшого размера. Используйте расширенное сглаживание при работе с приложениями, в которых много мелкого текста. Adobe не рекомендует использовать расширенное сглаживание для очень больших шрифтов (больше 48). Расширенное сглаживание доступно только в Flash Player версии 8 и более поздних.
 
 <p class="- topic/p ">Чтобы задать расширенное сглаживание для текстового поля, определите свойство <codeph class="+ topic/ph pr-d/codeph ">antiAliasType</codeph> экземпляра TextField.</p>
 
 <p class="- topic/p ">Расширенное сглаживание обеспечивает непрерывную модуляцию линий (CSM), которая включает непрерывную модуляцию веса линии и четкости краев. В качестве расширенной функции можно использовать метод <codeph class="+ topic/ph pr-d/codeph ">setAdvancedAntiAliasingTable()</codeph> для определения параметров для конкретных гарнитур и размеров шрифта.</p>
 
 </apiDesc><example conref="examples\TextRendererExample2.as" class="- topic/example "> В следующем примере создается класс TextRendererExample для демонстрации наглядных примеров параметров расширенного сглаживания для мелкого и крупного шрифта. Перед тестированием этого примера потребуется встроить шрифт. Если используется Flex, шрифт встраивается следующим образом.
 <ol class="- topic/ol "><li class="- topic/li ">Поместите шрифт Georgia (файл с именем georgia.ttf) в тот же каталог, что и данный файл AS.</li><li class="- topic/li ">Добавьте следующие строки непосредственно под определение класса.</li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">[Embed(source="georgia.ttf", fontFamily="Georgia")]</codeph></li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">private var embeddedFont:String;</codeph></li></ol>
 Если используется Flash, шрифт встраивается следующим образом.
 <ol class="- topic/ol "><li class="- topic/li ">Поместите текстовое поле в рабочую область и выделите его.</li><li class="- topic/li ">В инспекторе свойств выберите для текстового поля шрифт Georgia.</li><li class="- topic/li ">В инспекторе свойств нажмите «Встроить...» и выберите «Все».</li></ol>
 <p class="- topic/p "> <b class="+ topic/ph hi-d/b ">Примечания.</b>
  <ul class="- topic/ul "><li class="- topic/li ">SWF-файл потребуется откомпилировать с установленным для параметра «Безопасность локального воспроизведения» режимом «Доступ только к локальным файлам».</li></ul>
 </p>
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
package {
    import flash.display.DisplayObject;
    import flash.display.Sprite;
    import flash.events.*;
    import flash.text.*;
    
    public class TextRendererExample2 extends Sprite {

        private var gutter:int = 10;

        public function TextRendererExample2() {
            createTextField(8,AntiAliasType.NORMAL);
            createTextField(8,AntiAliasType.ADVANCED);
            createTextField(24,AntiAliasType.NORMAL);
            createTextField(24,AntiAliasType.ADVANCED);
        }
            
        private function createTextField(fontSize:Number,antiAliasType:String):TextField {
            var tf:TextField = new TextField();
            tf.embedFonts = true;
            tf.autoSize = TextFieldAutoSize.LEFT;
            tf.antiAliasType = antiAliasType;
            tf.defaultTextFormat = getTextFormat(fontSize);
            tf.selectable = false;
            tf.mouseEnabled = true;
            tf.text = "The quick brown fox jumped over the lazy dog.";
            if(numChildren > 0) {
                var sibling:DisplayObject = getChildAt(numChildren - 1);
                tf.y = sibling.y + sibling.height + gutter;
            }
            addChild(tf);
            return tf;
        }
        
        private function getTextFormat(fontSize:Number):TextFormat {
            var format:TextFormat = new TextFormat();
            format.size = fontSize;
            format.font = "Georgia";
            return format;
        }
    }
}
</codeblock></example></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.text.xml#TextField/antiAliasType" class="- topic/link "><linktext class="- topic/linktext ">flash.text.TextField.antiAliasType</linktext></link></related-links><apiOperation id="flash.text:TextRenderer:setAdvancedAntiAliasingTable" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">setAdvancedAntiAliasingTable</apiName><shortdesc class="- topic/shortdesc ">
	 Задает пользовательскую справочную таблицу непрерывной модуляции линий (CSM) для шрифта.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><maelexample>The following example creates two anti-alias entries and two text fields to 
	 illustrate them. For this example to work, the SWF file must have a shared font embedded with a linkage identifier of <code>
	 "myArial"</code>. 
	 To embed the font, follow these steps:
	 <ol class="- topic/ol "><li class="- topic/li ">Open your Library.</li><li class="- topic/li ">Click the Library options menu in the upper-right corner of the Library.</li><li class="- topic/li ">Select New Font from the pop-up menu.</li><li class="- topic/li ">Name the font <b class="+ topic/ph hi-d/b ">myArial</b>.</li><li class="- topic/li ">Select Arial from the font pop-up menu.</li><li class="- topic/li ">Click OK.</li><li class="- topic/li ">Right-click the newly created font, and select Linkage.</li><li class="- topic/li ">Select the Export for ActionScript check box.</li><li class="- topic/li ">Click OK to accept the default identifier, myArial.</li></ol>
	 
	 <listing version="2.0">
	 import flash.text.TextRenderer;
	 
	 var antiAliasEntry_1 = {fontSize:24, insideCutoff:1.61, outsideCutoff:-3.43};
	 var antiAliasEntry_2 = {fontSize:48, insideCutoff:0.8, outsideCutoff:-0.8};
	 var arialTable:Array = new Array(antiAliasEntry_1, antiAliasEntry_2);
	 
	 var lbl_1:TextField = createLabel(0, 0, 300, 100, 24);
	 var lbl_2:TextField = createLabel(0, 100, 300, 100, 48);
	 
	 TextRenderer.setAdvancedAntiAliasingTable("Arial", "none", "dark", arialTable);
	 
	 function createLabel(x:Number, y:Number, width:Number, height:Number, fontSize:Number):TextField {
	 var depth:Number = this.getNextHighestDepth();
	 
	 var tmpTxt = this.createTextField("txt_" + depth, depth, x, y, width, height);
	 tmpTxt.antiAliasType = "advanced";
	 tmpTxt.gridFitType = "pixel";
	 tmpTxt.border = true;
	 tmpTxt.text = "Hello World";
	 tmpTxt.embedFonts = true;
	 tmpTxt.setTextFormat(getTextFormat(fontSize));
	 return tmpTxt;
	 }
	 
	 function getTextFormat(fontSize:Number):TextFormat {
	 	var tf:TextFormat = new TextFormat();
	 	tf.align = "center";
	 	tf.size = fontSize;
	 	tf.font = "myArial";
	 	return tf;
	 }
	 </listing>
	 
	 </maelexample></asCustoms></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">fontName</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Имя шрифта, для которого применяются параметры.
	 
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">fontStyle</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Стиль шрифта, указанный с помощью одного из значений класса flash.text.FontStyle.
	 
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">colorType</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Это значение определяет, будет линия темной или светлой. Используйте одно из значений класса flash.text.TextColorType. 
	 
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">advancedAntiAliasingTable</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Array</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Массив одного или нескольких объектов CSMSettings для заданного шрифта. Каждый объект содержит следующие свойства:
	 
	 <ul class="- topic/ul "><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">fontSize</codeph></li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">insideCutOff</codeph></li><li class="- topic/li "><codeph class="+ topic/ph pr-d/codeph ">outsideCutOff</codeph></li></ul>
	 
	 <p class="- topic/p ">Массив <codeph class="+ topic/ph pr-d/codeph ">advancedAntiAliasingTable</codeph> может содержать несколько записей, задающих параметры CSM для разных размеров шрифта.</p>
	 
	 <p class="- topic/p ">Свойство <codeph class="+ topic/ph pr-d/codeph ">fontSize</codeph> — это размер (в пикселях), для которого применяются параметры.</p>
	 
	 <p class="- topic/p ">Расширенное сглаживание использует адаптивно выбираемые поля расстояния (ADF) для представления контуров, определяющих глиф. Проигрыватель Flash Player использует значение внешнего среза (<codeph class="+ topic/ph pr-d/codeph ">outsideCutOff</codeph>), под которым все плотности поучают значение 0, и значение внутреннего среза (<codeph class="+ topic/ph pr-d/codeph ">insideCutOff</codeph>), над которым плотности получают максимальное значение (например, 255). С учетом этих двух значений среза функция наложения представляет собой линейную кривую в диапазоне от нуля по внешнему срезу до максимальной плотности по внутреннему.</p>
	 
	 <p class="- topic/p ">Регулировка значений внешнего и внутреннего срезов влияет на вес линии и четкость краев. Интервал между этими двумя параметрами сопоставим с удвоенным радиусом фильтра классических методов сглаживания. Небольшой интервал дает более резкие края, а более широкий делает края более плавными или сглаженными. Когда интервал равен нулю, изображение с полученной плотностью является двухуровневым растровым изображением. Когда интервал очень большой, изображение с полученной плотностью имеет размытые края, напоминающие акварель.</p>
	 
	 <p class="- topic/p ">Как правило, пользователи отдают предпочтение резким, контрастным краям при использовании малых кеглей и более мягкие края для анимированного текста и более крупных кеглей. </p>
	 
	 <p class="- topic/p ">Внешний срез обычно имеет отрицательное значение, а внутренний — положительное, а средняя точка, как правило, находится около нуля. Регулировка этих параметров для смещения средней точки к отрицательному множеству увеличивает вес линии. Смещение средней точки к положительному множеству уменьшает вес линии. Необходимо следить, чтобы значение внешнего среза всегда было меньше или равно значению внутреннего среза.</p>
	 
	 
	 </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Задает пользовательскую справочную таблицу непрерывной модуляции линий (CSM) для шрифта. Проигрыватель Flash Player пытается найти оптимальную модуляцию CSM для выбранного шрифта. Если Вас не устраивает модуляция CSM, предлагаемая проигрывателем, можно создавать собственную CSM с помощью метода <codeph class="+ topic/ph pr-d/codeph ">setAdvancedAntiAliasingTable()</codeph>.
	 
	 </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.text.xml#FontStyle" class="- topic/link "><linktext class="- topic/linktext ">flash.text.FontStyle</linktext></link><link href="flash.text.xml#TextColorType" class="- topic/link "><linktext class="- topic/linktext ">flash.text.TextColorType</linktext></link><link href="flash.text.xml#CSMSettings" class="- topic/link "><linktext class="- topic/linktext ">CSMSettings</linktext></link></related-links></apiOperation><apiValue id="flash.text:TextRenderer:displayMode:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">displayMode</apiName><shortdesc class="- topic/shortdesc "> 
	 Управляет визуализацией текста с дополнительным сглаживанием.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier><apiDefaultValue>"default"
	 </apiDefaultValue></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	 Управляет визуализацией текста с дополнительным сглаживанием. Визуальное качество текста в значительной мере субъективно, и хотя проигрыватель Flash Player пытается использовать оптимальные параметры для различных условий, дизайнеры могут выбрать другой вид для своего текста. Кроме того, метод <codeph class="+ topic/ph pr-d/codeph ">displayMode</codeph> позволяет дизайнерам переопределять субпиксельные значения проигрывателя Flash Player и создавать визуальную согласованность независимо от аппаратных средств пользователя. Для определения этого свойства используются значения класса TextDisplayMode.
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.xml#TextDisplayMode" class="- topic/link "><linktext class="- topic/linktext ">Класс TextDisplayMode</linktext></link></related-links></apiValue><apiValue id="flash.text:TextRenderer:maxLevel:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">maxLevel</apiName><shortdesc class="- topic/shortdesc ">
	 Уровень качества полей ADF для расширенных возможностей сглаживания.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><maelexample>The following example specifies the <code>maxLevel</code> value for the entire
	 SWF file, and then displays a text field with the value set. For the 
	 text in this example to display correctly, there must be a font symbol available with
	 a linkage identifier of <code>"CustomFont"</code>. 
	 <listing version="2.0">
	 import flash.text.TextRenderer;
	 TextRenderer.maxLevel = 3;
	 
	 var txtFormat:TextFormat = new TextFormat();
	 txtFormat.font = "CustomFont";
	 txtFormat.size = 64;
	 
	 var label:TextField = this.createTextField("label", this.getNextHighestDepth(), 10, 10, 500, 100);
	 label.setNewTextFormat(txtFormat);
	 label.text = "Hello World";
	 label.embedFonts = true;
	 trace("TextRenderer.maxLevel: " + TextRenderer.maxLevel);
	 </listing>
	 </maelexample></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">int</apiValueClassifier><apiDefaultValue>4
	 </apiDefaultValue></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Уровень качества полей ADF для расширенных возможностей сглаживания. Допускаются только значения 3, 4 и 7. 
	 
	 <p class="- topic/p ">Расширенное сглаживание использует поля (ADF) для представления контуров, определяющих глиф. Чем выше качество, тем больше кэша требуют структуры ADF. При значении <codeph class="+ topic/ph pr-d/codeph ">3</codeph> потребляется меньше всего памяти и обеспечивается самое низкое качество. Для более крупных шрифтов требуется больше кэша. Для шрифта размером 64 пикселя уровень качества увеличивается с <codeph class="+ topic/ph pr-d/codeph ">3</codeph> до <codeph class="+ topic/ph pr-d/codeph ">4</codeph> или с <codeph class="+ topic/ph pr-d/codeph ">4</codeph> до <codeph class="+ topic/ph pr-d/codeph ">7</codeph>, если еще не выбран уровень <codeph class="+ topic/ph pr-d/codeph ">7</codeph>.</p>
	 
	 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.text:TextLineMetrics" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">TextLineMetrics</apiName><shortdesc class="- topic/shortdesc ">
 Класс TextLineMetrics содержит данные о положении текста и размерах строки текста в пределах текстового поля.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Содержит данные о расположении текста и размерах строки текста в текстовом поле.
 
 </apiTipText></apiTipTexts><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Класс TextLineMetrics содержит данные о положении текста и размерах <i class="+ topic/ph hi-d/i ">строки текста</i> в пределах текстового поля. Все размеры измеряются в пикселях. Объекты этого класса возвращаются методом <codeph class="+ topic/ph pr-d/codeph ">flash.text.TextField.getLineMetrics()</codeph>.
 <p class="- topic/p ">Размеры, связанные с текстовым полем, содержащим строку текста (например, «Высота текстового поля» на рисунке) см. в описании flash.text.TextField. </p>
 
 <p class="- topic/p ">На следующем рисунке представлены точки и размеры текстового поля и содержащейся в нем строки текста.</p>
 <p class="- topic/p ">
 <adobeimage alt="Изображение, иллюстрирующее показатели текста" href="../../images/text-metrics.jpg" placement="inline" class="+ topic/image adobe-d/adobeimage "/></p>
 
 </apiDesc><example conref="examples\TextLineMetricsExample.as" class="- topic/example "> В следующем примере создаются классы TextLineMetricsExample и LineMetricsReader для вывода сообщения в проигрывателе Flash Player посредством объекта XML. Это можно сделать, выполнив следующие действия:
 <ol class="- topic/ol "><li class="- topic/li ">Создайте свойство типа TextField с именем <codeph class="+ topic/ph pr-d/codeph ">label</codeph>.</li><li class="- topic/li ">Конструктор вызывает метод <codeph class="+ topic/ph pr-d/codeph ">configureAssets()</codeph>, который выполняет следующие задачи:
  <ul class="- topic/ul "><li class="- topic/li ">задает выравнивание монтажного стола по верхнему и левому краям и запрещает масштабирование;</li><li class="- topic/li ">создает новый объект TextField с именем <codeph class="+ topic/ph pr-d/codeph ">label</codeph>;</li><li class="- topic/li ">включает фон для <codeph class="+ topic/ph pr-d/codeph ">label</codeph> и задает ему белый цвет;</li><li class="- topic/li ">разрешает тексту объекта <codeph class="+ topic/ph pr-d/codeph ">label</codeph> занимать несколько линий с автоматическим переносом слов;</li><li class="- topic/li ">назначает результат вызова метода <codeph class="+ topic/ph pr-d/codeph ">getLabelText()</codeph> свойству <codeph class="+ topic/ph pr-d/codeph ">text</codeph> объекта <codeph class="+ topic/ph pr-d/codeph ">label</codeph>; метод <codeph class="+ topic/ph pr-d/codeph ">getLabelText()</codeph> создает переменную типа XML и назначает ее узлу XML с именем<codeph class="+ topic/ph pr-d/codeph ">body</codeph>, который заполняется длинными предложением;</li><li class="- topic/li ">добавляет объект <codeph class="+ topic/ph pr-d/codeph ">label</codeph> в список отображения с помощью метода <codeph class="+ topic/ph pr-d/codeph ">addChild()</codeph>.</li></ul>
  </li><li class="- topic/li ">Затем добавляется метод, который прослушивает события <codeph class="+ topic/ph pr-d/codeph ">resize</codeph>, происходящие на монтажном столе, и называется <codeph class="+ topic/ph pr-d/codeph ">resizeHandler()</codeph>. Каждый раз, когда изменяется размер окна проигрывателя Flash Player, отправляется событие <codeph class="+ topic/ph pr-d/codeph ">RESIZE</codeph>, затем происходит следующее. 
  <ul class="- topic/ul "><li class="- topic/li ">Вызывается метод <codeph class="+ topic/ph pr-d/codeph ">draw()</codeph>, чтобы объект <codeph class="+ topic/ph pr-d/codeph ">label</codeph> находился в центре рабочей области и был окружен буфером с шириной, равной десяти пикселям.</li><li class="- topic/li ">Затем метод <codeph class="+ topic/ph pr-d/codeph ">setTimeout()</codeph> вызывает <codeph class="+ topic/ph pr-d/codeph ">showMetrics()</codeph> после короткой задержки. Задержка добавляется, так как показатели линии обновляются только после завершения события <codeph class="+ topic/ph pr-d/codeph ">RESIZE</codeph> и повторной отрисовки монтажного стола.</li><li class="- topic/li ">Метод <codeph class="+ topic/ph pr-d/codeph ">showMetrics()</codeph> назначает переменную TextLineMetrics с именем <codeph class="+ topic/ph pr-d/codeph ">metrics</codeph> результату вызова <codeph class="+ topic/ph pr-d/codeph ">getLineMetrics()</codeph>, после чего эта переменная передается новому экземпляру LineMetricsReader с именем <codeph class="+ topic/ph pr-d/codeph ">reader</codeph>. Затем эти две переменные используются в вызовах метода <codeph class="+ topic/ph pr-d/codeph ">trace()</codeph> для вывода первой (и единственной) строки объекта <codeph class="+ topic/ph pr-d/codeph ">label</codeph> и сведений, переданных экземпляром LineMetricsReader с помощью метода <codeph class="+ topic/ph pr-d/codeph ">toString()</codeph>.</li></ul>
  </li><li class="- topic/li ">Конструктор инициирует одну отправку события <codeph class="+ topic/ph pr-d/codeph ">resize</codeph> чтобы обеспечить правильную отрисовку объекта <codeph class="+ topic/ph pr-d/codeph ">label</codeph> при первой загрузке SWF-файла.</li></ol>
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
package {
    import flash.display.Sprite;
    import flash.display.StageAlign;
    import flash.display.StageScaleMode;
    import flash.events.*;
    import flash.text.TextField;
    import flash.text.TextLineMetrics;
    import flash.utils.setTimeout;

    public class TextLineMetricsExample extends Sprite {
        private var gutter:int = 10;
        private var label:TextField;

        public function TextLineMetricsExample() {
            configureAssets();
            configureListeners();
            resizeHandler(new Event(Event.RESIZE));
        }

        private function showMetrics():void {
            var metrics:TextLineMetrics = label.getLineMetrics(0);
            var reader:LineMetricsReader = new LineMetricsReader(metrics);
            trace("lineText: " + label.getLineText(0));
            trace("metrics: " + reader);
        }

        private function configureAssets():void {
            stage.align = StageAlign.TOP_LEFT;
            stage.scaleMode = StageScaleMode.NO_SCALE;

            label = new TextField();
            label.background = true;
            label.backgroundColor = 0xFFFFFF;
            label.multiline = true;
            label.wordWrap = true;
            label.text = getLabelText();
            addChild(label);
        }

        private function configureListeners():void {
            stage.addEventListener(Event.RESIZE, resizeHandler);
        }

        private function resizeHandler(event:Event):void {
            draw();
            setTimeout(showMetrics, 100);
        }

        private function draw():void {
            label.x = gutter;
            label.y = gutter;
            label.width = stage.stageWidth - (gutter * 2);
            label.height = stage.stageHeight - (gutter * 2);
        }

        private function getLabelText():String {
            var text:XML = &lt;body>The Flex product line enables developers to build rich Internet applications that blend the responsiveness of desktop software, the cross-platform reach of the web, and the expressiveness of the Flash Platform.&lt;/body>
            return text.toString();
        }
    }
}

import flash.text.TextLineMetrics;

class LineMetricsReader {
    private var metrics:TextLineMetrics;

    public function LineMetricsReader(metrics:TextLineMetrics) {
        this.metrics = metrics;
    }

    public function toString():String {
        return "[TextLineMetrics ascent:" + metrics.ascent
            + ", descent:" + metrics.descent
            + ", leading:" + metrics.leading
            + ", width:" + metrics.width
            + ", height:" + metrics.height
            + ", x:" + metrics.x
            + "]";
    }
}
</codeblock></example></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.text.xml#TextField" class="- topic/link "><linktext class="- topic/linktext ">flash.text.TextField</linktext></link></related-links><apiConstructor id="flash.text:TextLineMetrics:TextLineMetrics" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">TextLineMetrics</apiName><shortdesc class="- topic/shortdesc ">
	 Создает объект TextLineMetrics.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">x</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Положение первого символа с левого края (в пикселях).
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">width</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Ширина в пикселях для текста выбранных строк (необязательно всего текста).
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">height</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Высота в пикселях для текста выбранных строк (необязательно всего текста).
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">ascent</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Длина в пикселях от основной линии до верхней точки строки.
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">descent</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Длина в пикселях от основной линии до нижней точки строки.
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">leading</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Расстояние между строками текста по вертикали.
	 
	 </apiDesc></apiParam><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Содержит данные о расположении текста и размерах строки текста в текстовом поле.
  	 </apiTipText></apiTipTexts></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Создает объект TextLineMetrics. Объект TextLineMetrics содержит данные о размерах строки текста в пределах текстового поля. Объекты этого класса возвращаются методом <codeph class="+ topic/ph pr-d/codeph ">flash.text.TextField.getLineMetrics()</codeph>.
	 <p class="- topic/p ">См. рисунок в описании этого класса, где данные свойства представлены в контексте.</p>
	 
	 </apiDesc></apiConstructorDetail><related-links class="- topic/related-links "><link href="flash.text.xml#TextLineMetrics" class="- topic/link "><linktext class="- topic/linktext ">Описание класса TextLineMetrics</linktext></link><link href="flash.text.xml#TextField/getLineMetrics()" class="- topic/link "><linktext class="- topic/linktext ">flash.text.TextField.getLineMetrics()</linktext></link></related-links></apiConstructor><apiValue id="flash.text:TextLineMetrics:ascent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">ascent</apiName><shortdesc class="- topic/shortdesc ">
	 Значение ascent соответствует расстоянию в пикселях от базовой линии до верхнего края строки.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><internal>including accents? is it really the line or the font itself?
	 </internal></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Значение ascent соответствует расстоянию в пикселях от базовой линии до верхнего края строки. См. «Верхний выносной элемент» в обзорном рисунке для данного класса.
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.xml#TextLineMetrics" class="- topic/link "><linktext class="- topic/linktext ">Описание класса TextLineMetrics</linktext></link></related-links></apiValue><apiValue id="flash.text:TextLineMetrics:descent" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">descent</apiName><shortdesc class="- topic/shortdesc ">
	 Значение descent соответствует расстоянию в пикселях от базовой линии до нижнего края строки.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><internal>is it really the line? or the font itself?
	 </internal></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Значение descent соответствует расстоянию в пикселях от базовой линии до нижнего края строки. См. «Нижний выносной элемент» в обзорном рисунке для данного класса.
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.xml#TextLineMetrics" class="- topic/link "><linktext class="- topic/linktext ">Описание класса TextLineMetrics</linktext></link></related-links></apiValue><apiValue id="flash.text:TextLineMetrics:height" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">height</apiName><shortdesc class="- topic/shortdesc ">
	 Значение height соответствует высоте в пикселях для текста выбранных строк (необязательно всего текста).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Значение height соответствует высоте в пикселях для текста выбранных строк (необязательно всего текста). Высота строки текста не включает высоту промежуточного поля. См. «Высота строки» в обзорном рисунке для данного класса.
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.xml#TextLineMetrics" class="- topic/link "><linktext class="- topic/linktext ">Описание класса TextLineMetrics</linktext></link></related-links></apiValue><apiValue id="flash.text:TextLineMetrics:leading" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">leading</apiName><shortdesc class="- topic/shortdesc ">
	 Значение leading соответствует расстоянию между строками текста.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Значение leading соответствует расстоянию между строками текста. См. «Интервал» в обзорном рисунке для данного класса.
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.xml#TextLineMetrics" class="- topic/link "><linktext class="- topic/linktext ">Описание класса TextLineMetrics</linktext></link></related-links></apiValue><apiValue id="flash.text:TextLineMetrics:width" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">width</apiName><shortdesc class="- topic/shortdesc ">
	 Значение width соответствует ширине в пикселях для текста выбранных строк (необязательно всего текста).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Значение width соответствует ширине в пикселях для текста выбранных строк (необязательно всего текста). Ширина строки текста не равна ширине текстового поля. Ширина строки текста определяется относительно ширины текстового поля минус ширина промежуточного поля, равного 4 пикселям (по 2 пикселя с каждой стороны). См. «Ширина строки текста» в обзорном рисунке для данного класса.
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.xml#TextLineMetrics" class="- topic/link "><linktext class="- topic/linktext ">Описание класса TextLineMetrics</linktext></link></related-links></apiValue><apiValue id="flash.text:TextLineMetrics:x" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">x</apiName><shortdesc class="- topic/shortdesc ">
	 Значение x соответствует положению первого символа слева (в пикселях).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Значение x соответствует положению первого символа слева (в пикселях). Это значение включает значения ширины полей, отступов (если они есть) и промежуточного поля. См. «Положение строки текста по оси х» в обзорном рисунке для данного класса.
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.xml#TextLineMetrics" class="- topic/link "><linktext class="- topic/linktext ">Описание класса TextLineMetrics</linktext></link></related-links></apiValue></apiClassifier><apiClassifier languages="" id="flash.text:TextInteractionMode" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">TextInteractionMode</apiName><shortdesc class="- topic/shortdesc ">
	Класс, который определяет интерактивный режим объекта текстового поля.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="11" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	Класс, который определяет интерактивный режим объекта текстового поля.
	
	
	</apiDesc></apiClassifierDetail><apiValue id="flash.text:TextInteractionMode:NORMAL" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">NORMAL</apiName><shortdesc class="- topic/shortdesc ">
		Стандартный режим взаимодействия текстового поля НОРМАЛЕН, и он изменяется через платформу.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="11" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">normal</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		Стандартный режим взаимодействия текстового поля — NORMAL, и он зависит от платформы. На компьютере нормальный режим подразумевает, что текстовое поле находится в прокручиваемом + режим выделения. На Мобильных платформах как Андроид нормальный режим подразумевает, что текстовое поле может только быть прокручено, но текст не может быть выбран.
		
		</apiDesc></apiValueDetail></apiValue><apiValue id="flash.text:TextInteractionMode:SELECTION" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">SELECTION</apiName><shortdesc class="- topic/shortdesc ">
		На мобильных платформах как Андроид текстовое поле начинается в нормальном режиме (который подразумевает прокрутку и невыбираемый режим).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="11" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">selection</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		На мобильных платформах, таких как Android, текстовое поле запускается в нормальном режиме (который подразумевает режим с прокруткой и без возможности выбора). Пользователь может переключиться на режим выделения через встроенное контекстное меню объекта текстового поля.
		
		 
		</apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.text:StyleSheet" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">StyleSheet</apiName><shortdesc class="- topic/shortdesc ">
 Класс StyleSheet позволяет создать объект StyleSheet, содержащий правила форматирования текста для размера, цвета текста и других стилей.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">TextField, StyleSheet class, built-in class, style sheet, stylesheet
  
  </keyword></asCustoms></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Позволяет создавать объект StyleSheet.
 
 </apiTipText></apiTipTexts><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:EventDispatcher</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
 Класс StyleSheet позволяет создать объект StyleSheet, содержащий правила форматирования текста для размера, цвета текста и других стилей. После этого можно применять стили, определенные в таблице стилей, к объекту TextField, содержащему текст в формате HTML или XML. Текст в объекте TextField автоматически форматируется в соответствии со стилями тегов, определенными объектом StyleSheet. Стили текста можно использовать для определения новых тегов форматирования, переопределения встроенных тегов HTML или создания классов стилей, которые можно применять к определенным тегам HTML.
 
 <p class="- topic/p ">Чтобы применить стили к объекту TextField, назначьте объект StyleSheet его свойству <codeph class="+ topic/ph pr-d/codeph ">styleSheet</codeph>.</p>
 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Примечание.</b> Текстовое поле с таблицей стилей не подлежит редактированию. Другими словами, текстовое поле со свойством <codeph class="+ topic/ph pr-d/codeph ">type</codeph> в значении <codeph class="+ topic/ph pr-d/codeph ">TextFieldType.INPUT</codeph> применяет объект StyleSheet к тексту по умолчанию для поля, но его содержимое больше не будет доступно для редактирования. Для назначения стилей текстовым полям ввода можно использовать класс TextFormat.</p> 
 
 <p class="- topic/p ">Проигрыватель Flash Player поддерживает подгруппу свойств в исходной спецификации CSS1 (<xref href="http://www.w3.org/TR/REC-CSS1" scope="external" class="- topic/xref ">www.w3.org/TR/REC-CSS1</xref>). В следующей таблице перечислены поддерживаемые свойства и значения CSS, а также имена соответствующих им свойств ActionScript. (Каждое имя свойства ActionScript является производным от соответствующего имени свойства CSS. Если имя содержит дефис, он опускается, а следующая за ним буква становится заглавной.)</p>
 
 <adobetable class="innertable"><tgroup cols="3" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">Свойство CSS</entry><entry class="- topic/entry ">Свойство ActionScript</entry><entry class="- topic/entry ">Применение и поддерживаемые значения</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">color</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">color</codeph></entry><entry class="- topic/entry ">Поддерживаются только шестнадцатеричные значения цвета. Именованные цвета (например, <codeph class="+ topic/ph pr-d/codeph ">blue</codeph> — синий) не поддерживаются. Цвета записываются в следующем формате: <codeph class="+ topic/ph pr-d/codeph ">#FF0000</codeph>.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">display</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">display</codeph></entry><entry class="- topic/entry ">Поддерживаются следующие значения: <codeph class="+ topic/ph pr-d/codeph ">inline</codeph>, <codeph class="+ topic/ph pr-d/codeph ">block</codeph> и <codeph class="+ topic/ph pr-d/codeph ">none</codeph>.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">font-family</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">fontFamily</codeph></entry><entry class="- topic/entry ">Разделенный запятыми список шрифтов для использования, перечисленных в порядке убывания по предпочтению. Может использоваться любое имя гарнитуры шрифтов. При указании общего имени шрифта оно преобразовывается в соответствующий шрифт устройства. Поддерживаются следующие преобразования шрифтов: <codeph class="+ topic/ph pr-d/codeph ">mono</codeph> преобразуется в <codeph class="+ topic/ph pr-d/codeph ">_typewriter</codeph>, <codeph class="+ topic/ph pr-d/codeph ">sans-serif</codeph> — в <codeph class="+ topic/ph pr-d/codeph ">_sans</codeph>, а <codeph class="+ topic/ph pr-d/codeph ">serif</codeph> — в <codeph class="+ topic/ph pr-d/codeph ">_serif</codeph>.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">font-size</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">fontSize</codeph> </entry><entry class="- topic/entry ">Используется только числовая часть значения. Единицы (пиксели, точки) не анализируются. Пиксели эквивалентны точкам.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">font-style</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">fontStyle</codeph></entry><entry class="- topic/entry ">Распознаются значения <codeph class="+ topic/ph pr-d/codeph ">normal</codeph> (обычный) и <codeph class="+ topic/ph pr-d/codeph ">italic</codeph> (курсив).</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">font-weight</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">fontWeight</codeph></entry><entry class="- topic/entry ">Допустимыми значениями являются <codeph class="+ topic/ph pr-d/codeph ">normal</codeph> и <codeph class="+ topic/ph pr-d/codeph "> bold</codeph>.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">kerning</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">kerning</codeph></entry><entry class="- topic/entry ">Распознаются значения <codeph class="+ topic/ph pr-d/codeph ">true</codeph> и <codeph class="+ topic/ph pr-d/codeph ">false</codeph>. Кернинг поддерживается только для встроенных шрифтов. Некоторые шрифты, такие как Courier New, не поддерживают кернинг. Свойство kerning поддерживается только в SWF-файлах, созданных в ОС Windows, а в созданных в ОС Macintosh — нет. Однако эти SWF-файлы могут воспроизводиться с применением кернинга и в версиях проигрывателя Flash Player, не предназначенных не для Windows.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">leading</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">leading</codeph></entry><entry class="- topic/entry ">Пространство, равномерно распределяемое между строками. Это значение задает количество пикселей, добавляемых после каждой строки. Отрицательное значение уплотняет межстрочное пространство. Используется только числовая часть значения. Единицы (пиксели, точки) не анализируются. Пиксели эквивалентны точкам.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">letter-spacing</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">letterSpacing</codeph></entry><entry class="- topic/entry ">Пространство, равномерно распределяемое между символами. Это значение задает количество пикселей, добавляемых после каждого символа. Отрицательное значение уплотняет пространство между символами. Используется только числовая часть значения. Единицы (пиксели, точки) не анализируются. Пиксели эквивалентны точкам.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">margin-left</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">marginLeft</codeph></entry><entry class="- topic/entry ">Используется только числовая часть значения. Единицы (пиксели, точки) не анализируются. Пиксели эквивалентны точкам. </entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">margin-right</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">marginRight</codeph></entry><entry class="- topic/entry ">Используется только числовая часть значения. Единицы (пиксели, точки) не анализируются. Пиксели эквивалентны точкам.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">text-align</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">textAlign</codeph></entry><entry class="- topic/entry ">Распознаются значения <codeph class="+ topic/ph pr-d/codeph ">left</codeph>, <codeph class="+ topic/ph pr-d/codeph ">center</codeph>, <codeph class="+ topic/ph pr-d/codeph ">right</codeph> и <codeph class="+ topic/ph pr-d/codeph ">justify</codeph>.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">text-decoration</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">textDecoration</codeph></entry><entry class="- topic/entry ">Распознаются значения <codeph class="+ topic/ph pr-d/codeph ">none</codeph> и <codeph class="+ topic/ph pr-d/codeph ">underline</codeph>.</entry></row><row class="- topic/row "><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">text-indent</codeph></entry><entry class="- topic/entry "><codeph class="+ topic/ph pr-d/codeph ">textIndent</codeph></entry><entry class="- topic/entry ">Используется только числовая часть значения. Единицы (пиксели, точки) не анализируются. Пиксели эквивалентны точкам. </entry></row></tbody></tgroup></adobetable> 
 
 <p class="- topic/p "><ph outputclass="flexonly" class="- topic/ph "> Класс StyleSheet можно использовать для выполнения визуализации текста на низком уровне. Однако в Flex для обработки текста обычно используются элементы управления Label, Text, TextArea и TextInput.</ph></p>
 
 
 </apiDesc><example conref="examples\StyleSheetExample.as" class="- topic/example "> В следующем примере создается новая таблица стилей, стилю заголовка присваивается полужирный красный шрифт.
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
 
package {
    import flash.display.Sprite;
    import flash.text.StyleSheet;
    import flash.text.TextField;
    import flash.text.TextFieldAutoSize;

    public class StyleSheetExample extends Sprite {

        public function StyleSheetExample() {
            var style:StyleSheet = new StyleSheet();

            var heading:Object = new Object();
            heading.fontWeight = "bold";
            heading.color = "#FF0000";

            var body:Object = new Object();
            body.fontStyle = "italic";

            style.setStyle(".heading", heading);
            style.setStyle("body", body);

            var label:TextField = new TextField();
            label.styleSheet = style;
            label.htmlText = "&lt;body>&lt;span class='heading'>Hello &lt;/span>World...&lt;/body>";
            addChild(label);
        }
    }
}
</codeblock></example></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.text.xml#TextField" class="- topic/link "><linktext class="- topic/linktext ">flash.text.TextField</linktext></link></related-links><apiConstructor id="flash.text:StyleSheet:StyleSheet" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">StyleSheet</apiName><shortdesc class="- topic/shortdesc ">
	 Создает новый объект StyleSheet.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">StyleSheet, constructor
	  
	  </keyword></asCustoms></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Создает новый объект StyleSheet.
	 
	 </apiDesc></apiConstructorDetail><related-links class="- topic/related-links "><link href="flash.text.xml#StyleSheet/getStyle()" class="- topic/link "><linktext class="- topic/linktext ">flash.text.StyleSheet.getStyle()</linktext></link></related-links></apiConstructor><apiOperation id="flash.text:StyleSheet:clear" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">clear</apiName><shortdesc class="- topic/shortdesc ">
	 Удаляет все стили из объекта StyleSheet.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">StyleSheet.clear, clear
	  
	  </keyword></asCustoms></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Удаляет все стили из объекта StyleSheet.
	 
	 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.text:StyleSheet:getStyle" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">getStyle</apiName><shortdesc class="- topic/shortdesc "> 
	 Возвращает копию объекта стиля, связанного со стилем с именем styleName.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">StyleSheet.getStyle, getStyle
     </keyword></asCustoms></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Объект.
	 
	 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Object</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">styleName</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Строка, задающая имя стиля, который нужно получить.
	 
	 </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	 Возвращает копию объекта стиля, связанного со стилем с именем <codeph class="+ topic/ph pr-d/codeph ">styleName</codeph>. Если с <codeph class="+ topic/ph pr-d/codeph ">styleName</codeph> не связан объект стиля, возвращается значение <codeph class="+ topic/ph pr-d/codeph ">null</codeph>.
	 
	 </apiDesc><example class="- topic/example ">См. примеры метода <xref href="StyleSheet.html#parseCSS()" class="- topic/xref ">parseCSS()</xref> или <xref href="StyleSheet.html#transform()" class="- topic/xref ">transform()</xref>, иллюстрирующие использование <codeph class="+ topic/ph pr-d/codeph ">getStyle()</codeph>. 
	  
	  </example></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.text.xml#StyleSheet/setStyle()" class="- topic/link "><linktext class="- topic/linktext ">flash.text.StyleSheet.setStyle()</linktext></link></related-links></apiOperation><apiOperation id="flash.text:StyleSheet:parseCSS" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">parseCSS</apiName><shortdesc class="- topic/shortdesc ">
	 Выполняет синтаксический анализ CSS в параметре CSSText и заполняет таблицу стилей полученными данными.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">StyleSheet.parseCSS, parseCSS
	 
	 </keyword></asCustoms></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">CSSText</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Текст CSS для анализа (строка).
	 
	 </apiDesc></apiParam><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Выполняет лексический анализ CSS в параметре cssText и загружает StyleSheet.
	 
	 </apiTipText></apiTipTexts></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Выполняет синтаксический анализ CSS в параметре <codeph class="+ topic/ph pr-d/codeph ">CSSText</codeph> и заполняет таблицу стилей полученными данными. Если стиль из <codeph class="+ topic/ph pr-d/codeph ">CSSText</codeph> уже занесен в <codeph class="+ topic/ph pr-d/codeph ">styleSheet</codeph>, свойства в <codeph class="+ topic/ph pr-d/codeph ">styleSheet</codeph> сохраняются, и в <codeph class="+ topic/ph pr-d/codeph ">styleSheet</codeph> добавляются или изменяются только те свойства, которые перечислены в <codeph class="+ topic/ph pr-d/codeph ">CSSText</codeph>.
	 
	 <p class="- topic/p ">Чтобы расширить собственные возможности синтаксического анализа CSS, можно переопределить этот метод путем создания подкласса StyleSheet.</p>
	 
	 </apiDesc><example conref="examples\StyleSheet_parseCSSExample.as" class="- topic/example "> В следующем примере, когда пользователь щелкает по файлу текста, к содержимому применяются стили CSS, загруженные из файла.
 
 <p class="- topic/p ">В конструкторе создается многострочное текстовое поле, его содержимое форматируется в виде HTML-строки. (HTML-теги заголовка и диапазона не визуализируются до применения стиля CSS.) Для определения местоположения CSS-файла создается объект <codeph class="+ topic/ph pr-d/codeph ">URLRequest</codeph>. В данном примере он CSS-файл находится в том же каталоге, что и SWF-файл. Файл загружается с помощью объекта <codeph class="+ topic/ph pr-d/codeph ">URLLoader</codeph>. Для объекта URLLoader с именем <codeph class="+ topic/ph pr-d/codeph ">loader</codeph> добавляется два прослушивателя событий. При возникновении ошибки ввода-вывода вызывается метод <codeph class="+ topic/ph pr-d/codeph ">errorHandler()</codeph>, отображающий сообщение об ошибке в текстовом поле. Когда все данные будут получены и помещены в свойство data объекта URLLoader с именем <codeph class="+ topic/ph pr-d/codeph ">loader</codeph>, вызывается метод <codeph class="+ topic/ph pr-d/codeph ">loaderCompleteHandler()</codeph>. Этот метод выделяет стили CSS из данных, загруженных из файла, и заполняет объект StyleSheet с именем <codeph class="+ topic/ph pr-d/codeph ">sheet</codeph> определениями стилей.</p>
 
 <p class="- topic/p ">Когда пользователь щелкает текстовое поле, запускается метод <codeph class="+ topic/ph pr-d/codeph ">clickHandler()</codeph>. Инструкция if в методе <codeph class="+ topic/ph pr-d/codeph ">clickHandler()</codeph> проверяет, завершена ли загрузка файла, перед применением таблицы стилей к текстовому полю. Чтобы таблица стилей вступила в силу, необходимо повторно назначить содержимое свойству <codeph class="+ topic/ph pr-d/codeph ">htmlText</codeph> после того, как текстовому полю будет назначена таблица стилей. Значения свойств CSS <codeph class="+ topic/ph pr-d/codeph ">font-family</codeph> и <codeph class="+ topic/ph pr-d/codeph ">color</codeph> для тега заголовка также добавляются к содержимому текстового поля. (Эти свойства будут иметь значение undefined, если значения таблицы стилей не вступили в силу.)</p> 
 
 <p class="- topic/p ">В следующем примере демонстрируется содержимое CSS-файла, которое может использоваться в этом случае. Перед выполнением этого примера создайте текстовый файл, скопируйте в него следующее содержимое CSS, а затем сохраните его с именем <codeph class="+ topic/ph pr-d/codeph ">test.css</codeph> в том же каталоге, что и SWF-файл.</p>
 
 <pre xml:space="preserve" class="- topic/pre ">
   p {
      font-family: Times New Roman, Times, _serif;
      font-size: 14;
       font-Style: italic;
        margin-left: 10;  
   }
   h1 {
      font-family: Arial, Helvetica, _sans;
      font-size: 20;
      font-weight: bold;
   }
   .bluetext {
      color: #0000CC;
   }
 </pre>
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
package {
    import flash.display.Sprite;
    import flash.net.URLLoader;
    import flash.net.URLRequest;
    import flash.text.StyleSheet;
    import flash.text.TextField;
    import flash.text.TextFieldAutoSize;
    import flash.events.IOErrorEvent;
    import flash.events.Event;
    import flash.events.MouseEvent;

    public class StyleSheet_parseCSSExample extends Sprite {
        private var loader:URLLoader = new URLLoader();
        private var field:TextField = new TextField();
        private var exampleText:String = "&lt;h1>This is a headline&lt;/h1>"
                    + "&lt;p>This is a line of text. &lt;span class='bluetext'>" 
                    + "This line of text is colored blue.&lt;/span>&lt;/p>";
        private var sheet:StyleSheet = new StyleSheet();
        private var cssReady:Boolean = false;

        public function StyleSheet_parseCSSExample() {
            field.x = 10;
            field.y = 10;
            field.background = true;
            field.multiline = true;
            field.autoSize = TextFieldAutoSize.LEFT;
            field.htmlText = exampleText;

            field.addEventListener(MouseEvent.CLICK, clickHandler);
            
            addChild(field);
            
            var req:URLRequest = new URLRequest("test.css");
            loader.load(req);

            loader.addEventListener(IOErrorEvent.IO_ERROR, errorHandler);
            loader.addEventListener(Event.COMPLETE, loaderCompleteHandler);
        }

        public function errorHandler(e:IOErrorEvent):void {
            field.htmlText = "Couldn't load the style sheet file.";
        }

        public function loaderCompleteHandler(event:Event):void {
            sheet.parseCSS(loader.data);
            cssReady = true;
        }

        public function clickHandler(e:MouseEvent):void {

            if (cssReady) {
                field.styleSheet = sheet;
                field.htmlText = exampleText;
                
                var style:Object = sheet.getStyle("h1");
                field.htmlText += "&lt;p>Headline font-family is: " + style.fontFamily + "&lt;/p>";
                field.htmlText += "&lt;p>Headline color is: " + style.color + "&lt;/p>";  

            } else {
                field.htmlText = "Couldn't apply the CSS styles.";
            }
        }
    }
}
</codeblock></example></apiOperationDetail></apiOperation><apiOperation id="flash.text:StyleSheet:setStyle" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">setStyle</apiName><shortdesc class="- topic/shortdesc ">
	 Добавляет новый стиль с заданным именем в объект StyleSheet.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><oldexample>The following example adds a style named <code>emphasized</code> to the 
	 StyleSheet <code>myStyleSheet</code>. The style includes two style properties: <code>color</code> 
	 and <code>fontWeight</code>. The style object is defined with the <code>{}</code> operator.
	 <pre xml:space="preserve" class="- topic/pre "><code>
	 myStyleSheet.setStyle("emphasized", {color:'#000000',fontWeight:'bold'});
	 </code></pre>
	 
	 <p class="- topic/p ">You could also create a style object using an instance of the Object class, and 
	 then pass that object (<code>styleObj</code>) as 
	 the <code>style</code> parameter, as the next example shows:</p>
	 <listing version="2.0">
	 import TextField.StyleSheet;
	 var my_styleSheet:StyleSheet = new StyleSheet();
	 
	 var styleObj:Object = new Object();
	 styleObj.color = "#000000";
	 styleObj.fontWeight = "bold";
	 my_styleSheet.setStyle("emphasized", styleObj);
	 delete styleObj;
	 
	 var styleNames_array:Array = my_styleSheet.getStyleNames();
	 for (var i=0;i&lt;styleNames_array.length;i++) {
	 	var styleName:String = styleNames_array[i];
	 	var thisStyle:Object = my_styleSheet.getStyle(styleName);
	 	trace(styleName);
	 	for (var prop in thisStyle) {
	 		trace("\t"+prop+": "+thisStyle[prop]);
	 	}
	 	trace("");
	 }
	 </listing>
	 <p class="- topic/p "><span class="flashonly">The following information appears in the Output 
	 panel:</span><span class="flexonly">The following information writes to the 
	 log file:</span></p>
	 <pre xml:space="preserve" class="- topic/pre "><code>
	 emphasized
	   fontWeight: bold
	   color: #000000
	 </code></pre>
	 
	 <p class="- topic/p "><strong>Note: </strong>Because Flash Player creates a copy of the style object
	 you pass to <code>setStyle()</code>, the <code> delete styleObj</code> command in the 
	 code example reduces memory usage by deleting the original style object passed to 
	 <code>setStyle()</code>.</p>
	 
	 </oldexample></asCustoms></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">styleName</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Строка, задающая имя стиля для добавления в таблицу стилей.
	 
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">styleObject</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Object</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Объект, описывающий стиль, или <codeph class="+ topic/ph pr-d/codeph ">null</codeph>.
	 
	 </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Добавляет новый стиль с заданным именем в объект StyleSheet. Если названный стиль еще не существует в таблице стилей, он добавляется в нее. Если названный стиль уже существует в таблице стилей, он заменяется новым. Если параметр <codeph class="+ topic/ph pr-d/codeph ">styleObject</codeph> имеет значение <codeph class="+ topic/ph pr-d/codeph ">null</codeph>, названный стиль удаляется.
	 
	 <p class="- topic/p ">Проигрыватель Flash Player создает копию объекта стиля, передаваемого этому методу.</p>
	 
	 <p class="- topic/p ">Поддерживаемые стили перечислены в таблице в описании класса StyleSheet.</p>
	 
	 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="flash.text:StyleSheet:transform" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">transform</apiName><shortdesc class="- topic/shortdesc ">
	 Расширяет возможности лексического анализа CSS.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">StyleSheet.transform, transform
	 
	 </keyword></asCustoms></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Объект TextFormat, содержащий результат наложения правил CSS на свойства форматирования текста.
	 
	 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.text:TextFormat</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">formatObject</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Object</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Объект, описывающий стиль, содержащий правила стилей в виде свойств объекта, или <codeph class="+ topic/ph pr-d/codeph ">null</codeph>.
	 
	 </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Расширяет возможности лексического анализа CSS. Опытные разработчики могут переопределить этот метод путем расширения класса StyleSheet. 
	 
	 </apiDesc><example conref="examples\StyleSheet_transformExample.as" class="- topic/example "> В данном примере метод <codeph class="+ topic/ph pr-d/codeph ">transform()</codeph> используется для применения стиля из CSS-файла к объекту TextFormat для текстового поля.
 
 <p class="- topic/p ">Стили CSS обычно используются для форматирования HTML-содержимого. Однако с помощью метода <codeph class="+ topic/ph pr-d/codeph ">transform()</codeph> объекта StyleSheet конкретные стили CSS можно назначить объекту TextFormat, а затем применить к любому текстовому полю.</p> 
 
 <p class="- topic/p ">Для загрузки CSS-файла используются объекты <codeph class="+ topic/ph pr-d/codeph ">URLRequest</codeph> и <codeph class="+ topic/ph pr-d/codeph ">URLLoader</codeph>. Добавляется прослушиватель для события <codeph class="+ topic/ph pr-d/codeph ">Event.COMPLETE</codeph>, которое происходит после получения всех данных и их помещения в свойство data объекта URLLoader с именем <codeph class="+ topic/ph pr-d/codeph ">loader</codeph>. После этого метод <codeph class="+ topic/ph pr-d/codeph ">loaderCompleteHandler()</codeph> выполняет разбор данных, загруженных из CSS- файла и заполняет стилями объект StyleSheet с именем <codeph class="+ topic/ph pr-d/codeph ">sheet</codeph>. Метод <codeph class="+ topic/ph pr-d/codeph ">getStyle()</codeph> таблицы стилей получает стили абзацев HTML, которые назначаются объекту TextFormat с именем <codeph class="+ topic/ph pr-d/codeph ">cssFormat</codeph> с помощью метода <codeph class="+ topic/ph pr-d/codeph ">transform()</codeph> таблицы стилей. В завершение, для текстового поля <codeph class="+ topic/ph pr-d/codeph ">inputField</codeph> назначается новый формат текста по умолчанию — <codeph class="+ topic/ph pr-d/codeph ">cssFormat</codeph>.</p> 
 
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
package {
    import flash.display.Sprite;
    import flash.net.URLLoader;
    import flash.net.URLRequest;
    import flash.text.StyleSheet;
    import flash.text.TextField;
    import flash.text.TextFormat;
    import flash.text.TextFieldType;
    import flash.events.IOErrorEvent;
    import flash.events.Event;

    public class StyleSheet_transformExample extends Sprite {
        private var loader:URLLoader = new URLLoader();
        private var inputField:TextField = new TextField();
        private var sheet:StyleSheet = new StyleSheet();

        public function StyleSheet_transformExample() {
            inputField.x = 10;
            inputField.y = 10;
            inputField.background = true;
            inputField.width = 300;
            inputField.height = 200;
            inputField.wordWrap = true;
            inputField.multiline = true;    
            inputField.type = TextFieldType.INPUT;

            addChild(inputField);
            
            var req:URLRequest = new URLRequest("test.css");
            loader.load(req);

            loader.addEventListener(IOErrorEvent.IO_ERROR, errorHandler);
            loader.addEventListener(Event.COMPLETE, loaderCompleteHandler);
        }

        public function errorHandler(e:IOErrorEvent):void {
            inputField.htmlText = "Couldn't load the style sheet file.";
        }

        public function loaderCompleteHandler(event:Event):void {
            var cssFormat:TextFormat = new TextFormat();
            sheet.parseCSS(loader.data);
            var style:Object = sheet.getStyle("p");
            cssFormat = sheet.transform(style);
            inputField.defaultTextFormat = cssFormat;
        }
    }
}
</codeblock></example></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.text.xml#TextFormat" class="- topic/link "><linktext class="- topic/linktext ">flash.text.TextFormat</linktext></link></related-links></apiOperation><apiValue id="flash.text:StyleSheet:styleNames:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">styleNames</apiName><shortdesc class="- topic/shortdesc ">
	 Массив, содержащий имена (в виде строк) всех стилей, зарегистрированных в этой таблице стилей.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">StyleSheet.getStyleNames, getStyleNames
	  
	  </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Array</apiValueClassifier><apiTipTexts><apiTipText class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiTipText ">Возвращает имена всех стилей, зарегистрированных в этом объекте StyleSheet.
	 
	 </apiTipText></apiTipTexts></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Массив, содержащий имена (в виде строк) всех стилей, зарегистрированных в этой таблице стилей.
	 
	 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.text:TextSnapshot" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">TextSnapshot</apiName><shortdesc class="- topic/shortdesc "> 
 Объекты TextSnapshot позволяют работать со статическим текстом во фрагменте ролика.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">TextSnapshot
  
  </keyword></asCustoms></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
 Объекты TextSnapshot позволяют работать со статическим текстом во фрагменте ролика. Их можно использовать, например, для более точной раскладки текста, чем позволяет динамический текст, не отменяя доступа к нему «только для чтения».
 
 <p class="- topic/p ">Не создавайте объект TextSnapshot с помощью конструктора. Он возвращается свойством <codeph class="+ topic/ph pr-d/codeph ">flash.display.DisplayObjectContainer.textSnapshot</codeph>.</p>
 
 
 </apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.display.xml#DisplayObjectContainer/textSnapshot" class="- topic/link "><linktext class="- topic/linktext ">flash.display.DisplayObjectContainer.textSnapshot</linktext></link></related-links><apiOperation id="flash.text:TextSnapshot:findText" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">findText</apiName><shortdesc class="- topic/shortdesc ">
	 Выполняет поиск по объекту TextSnapshot и возвращает положение первого вхождения textToFind, обнаруженного в положении beginIndex или после него.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">TextSnapshot.findText, findText
	  
	  </keyword></asCustoms></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Отсчитываемая от нуля позиция индекса первого вхождения заданного текста или -1.
	 
	 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">beginIndex</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Задает начальную точку для поиска заданного текста.	 
	 
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">textToFind</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Задает искомый текст. Если вместо переменной типа String задается литерал строки, то строку необходимо заключить в кавычки.
	 
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">caseSensitive</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Указывает, должен ли при поиске учитываться регистр текста строки в <codeph class="+ topic/ph pr-d/codeph ">textToFind</codeph>. 
	 
	 </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Выполняет поиск по объекту TextSnapshot и возвращает положение первого вхождения <codeph class="+ topic/ph pr-d/codeph ">textToFind</codeph>, обнаруженного в положении <codeph class="+ topic/ph pr-d/codeph ">beginIndex</codeph> или после него. Если значение <codeph class="+ topic/ph pr-d/codeph ">textToFind</codeph> не найдено, метод возвращает <codeph class="+ topic/ph pr-d/codeph ">-1</codeph>.
	 
	 </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.text.xml#TextSnapshot/getText()" class="- topic/link "><linktext class="- topic/linktext ">flash.text.TextSnapshot.getText()</linktext></link></related-links></apiOperation><apiOperation id="flash.text:TextSnapshot:getSelectedText" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">getSelectedText</apiName><shortdesc class="- topic/shortdesc ">
	 Возвращает строку, содержащую все символы, заданные соответствующим методом setSelected().</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9." class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">TextSnapshot.getSelectedText, getSelectedText
	  
	  </keyword></asCustoms></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Строка, содержащая все символы, заданные соответствующим методом <codeph class="+ topic/ph pr-d/codeph ">setSelected()</codeph>.
	 
	 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">includeLineEndings</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Необязательное логическое значение, указывающее, вставляются ли символы новой строки в возвращенную строку, где это уместно. Значение по умолчанию <codeph class="+ topic/ph pr-d/codeph ">false</codeph>.
	 
	 </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Возвращает строку, содержащую все символы, заданные соответствующим методом <codeph class="+ topic/ph pr-d/codeph ">setSelected()</codeph>. Если символы не заданы (методом <codeph class="+ topic/ph pr-d/codeph ">setSelected()</codeph>), возвращается пустая строка.
	 
	 <p class="- topic/p ">Если параметр <codeph class="+ topic/ph pr-d/codeph ">includeLineEndings</codeph> имеет значение <codeph class="+ topic/ph pr-d/codeph ">true</codeph>, символы новой строки вставляются в возвращаемую строку, которая может оказаться длиннее, чем введенный диапазон. Если параметр <codeph class="+ topic/ph pr-d/codeph ">includeLineEndings</codeph> имеет значение <codeph class="+ topic/ph pr-d/codeph ">false</codeph> или опущен, метод возвращает выделенный текст, не добавляя никаких символов.</p>
	 
	 </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.text.xml#TextSnapshot/getSelected()" class="- topic/link "><linktext class="- topic/linktext ">flash.text.TextSnapshot.getSelected()</linktext></link><link href="flash.text.xml#TextSnapshot/setSelected()" class="- topic/link "><linktext class="- topic/linktext ">flash.text.TextSnapshot.setSelected()</linktext></link></related-links></apiOperation><apiOperation id="flash.text:TextSnapshot:getSelected" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">getSelected</apiName><shortdesc class="- topic/shortdesc ">
	 Возвращает логическое значение, показывающее, содержит ли объект TextSnapshot выделенный текст в заданном диапазоне.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">TextSnapshot.getSelected, getSelected
	  
	  </keyword></asCustoms></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Логическое значение, показывающее, выделен ли хотя бы один символ в данном диапазоне соответствующим методом <codeph class="+ topic/ph pr-d/codeph ">setSelected()</codeph> (<codeph class="+ topic/ph pr-d/codeph ">true</codeph>); если нет, значение - <codeph class="+ topic/ph pr-d/codeph ">false</codeph>.
	 
	 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">beginIndex</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Указывает позицию первого рассматриваемого символа. Допустимые значения <codeph class="+ topic/ph pr-d/codeph ">beginIndex</codeph> находятся в диапазоне от <codeph class="+ topic/ph pr-d/codeph ">0</codeph> до <codeph class="+ topic/ph pr-d/codeph ">TextSnapshot.charCount - 1</codeph>. Если в качестве <codeph class="+ topic/ph pr-d/codeph ">beginIndex</codeph> выбрано отрицательное значение, используется <codeph class="+ topic/ph pr-d/codeph ">0 </codeph>.
	 
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">endIndex</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Значение, которое на одну единицу больше индекса последнего рассматриваемого символа. Действительные значения параметра <codeph class="+ topic/ph pr-d/codeph ">endIndex</codeph> лежат в диапазоне от <codeph class="+ topic/ph pr-d/codeph ">0</codeph> до <codeph class="+ topic/ph pr-d/codeph ">charCount</codeph>. Символ, индексированный параметром <codeph class="+ topic/ph pr-d/codeph ">endIndex</codeph>, не включен в извлеченную строку. Если этот параметр пропустить, используется параметр <codeph class="+ topic/ph pr-d/codeph ">charCount</codeph>. Если это значение меньше или равно значению <codeph class="+ topic/ph pr-d/codeph ">beginIndex</codeph>, используется <codeph class="+ topic/ph pr-d/codeph ">beginIndex + 1</codeph>.
	 
	 </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Возвращает логическое значение, показывающее, содержит ли объект TextSnapshot выделенный текст в заданном диапазоне. 
	 
	 <p class="- topic/p ">Чтобы выполнить поиск по всем символам, передайте значение <codeph class="+ topic/ph pr-d/codeph ">0</codeph> для <codeph class="+ topic/ph pr-d/codeph ">start</codeph> и <codeph class="+ topic/ph pr-d/codeph ">charCount</codeph> (или любое очень большое число) для <codeph class="+ topic/ph pr-d/codeph ">end</codeph>. Чтобы выполнить поиск по одному символу, передайте параметру <codeph class="+ topic/ph pr-d/codeph ">end</codeph> значение, которое на одну единицу больше параметра <codeph class="+ topic/ph pr-d/codeph ">start</codeph>.</p>
	 
	 </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.text.xml#TextSnapshot/charCount" class="- topic/link "><linktext class="- topic/linktext ">flash.text.TextSnapshot.charCount</linktext></link><link href="flash.text.xml#TextSnapshot/getText()" class="- topic/link "><linktext class="- topic/linktext ">flash.text.TextSnapshot.getText()</linktext></link><link href="flash.text.xml#TextSnapshot/getSelectedText()" class="- topic/link "><linktext class="- topic/linktext ">flash.text.TextSnapshot.getSelectedText()</linktext></link><link href="flash.text.xml#TextSnapshot/setSelected()" class="- topic/link "><linktext class="- topic/linktext ">flash.text.TextSnapshot.setSelected()</linktext></link></related-links></apiOperation><apiOperation id="flash.text:TextSnapshot:getTextRunInfo" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">getTextRunInfo</apiName><shortdesc class="- topic/shortdesc ">
	 Возвращает массив объектов, содержащий сведения о непрерывной последовательности текста.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Массив объектов, каждый из которых содержит сведения о конкретном символе в диапазоне, заданном параметрами <codeph class="+ topic/ph pr-d/codeph ">beginIndex</codeph> и <codeph class="+ topic/ph pr-d/codeph ">endIndex</codeph>. Каждый объект содержит следующие одиннадцать свойств.
	 <ul class="- topic/ul "><li class="- topic/li ">Свойство <codeph class="+ topic/ph pr-d/codeph ">indexInRun</codeph> — отсчитываемый от нуля индекс символа, представленный целым числом (определяется относительно всей строки, а не выделенного фрагмента текста).</li><li class="- topic/li ">Свойство <codeph class="+ topic/ph pr-d/codeph ">selected</codeph> — логическое значение, указывающее на то, что символ выделен <codeph class="+ topic/ph pr-d/codeph ">true</codeph> или не выделен <codeph class="+ topic/ph pr-d/codeph ">false</codeph>.</li><li class="- topic/li ">Свойство <codeph class="+ topic/ph pr-d/codeph ">font</codeph> — имя шрифта символа.</li><li class="- topic/li ">Свойство <codeph class="+ topic/ph pr-d/codeph ">color</codeph> — комбинированное значение прозрачности и цвета для символа. Первые две шестнадцатеричные цифры представляют альфа-значение, а остальные - цвет.</li><li class="- topic/li ">Свойство <codeph class="+ topic/ph pr-d/codeph ">height</codeph> — высота символа (в пикселях).</li><li class="- topic/li ">Свойства <codeph class="+ topic/ph pr-d/codeph ">matrix_a</codeph>, <codeph class="+ topic/ph pr-d/codeph ">matrix_b</codeph>, <codeph class="+ topic/ph pr-d/codeph ">matrix_c</codeph>, <codeph class="+ topic/ph pr-d/codeph ">matrix_d</codeph>, <codeph class="+ topic/ph pr-d/codeph ">matrix_tx</codeph> и <codeph class="+ topic/ph pr-d/codeph ">matrix_ty</codeph> — значения матрицы, определяющие геометрическое преобразование символа. Обычный вертикальный текст всегда имеет матрицу вида <codeph class="+ topic/ph pr-d/codeph ">[1 0 0 1 x y]</codeph>, где <codeph class="+ topic/ph pr-d/codeph ">x</codeph> и <codeph class="+ topic/ph pr-d/codeph ">y</codeph> - это позиция символа в родительском фрагменте ролика независимо от высоты текста. Матрица находится в системе координат родительского фрагмента ролика и не включает преобразований, которые может иметь сам фрагмент ролика (или его родительский элемент). </li><li class="- topic/li ">Свойства <codeph class="+ topic/ph pr-d/codeph ">corner0x</codeph>, <codeph class="+ topic/ph pr-d/codeph ">corner0y</codeph>, <codeph class="+ topic/ph pr-d/codeph ">corner1x</codeph>, <codeph class="+ topic/ph pr-d/codeph ">corner1y</codeph>, <codeph class="+ topic/ph pr-d/codeph ">corner2x</codeph>, <codeph class="+ topic/ph pr-d/codeph ">corner2y</codeph>, <codeph class="+ topic/ph pr-d/codeph ">corner3x</codeph> и <codeph class="+ topic/ph pr-d/codeph ">corner3y</codeph> — углы ограничительного блока символа на основе системы координат родительского фрагмента ролика. Эти значения доступны, только если используемый символом шрифт встроен в SWF-файл.</li></ul>
	 
	 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Array</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">beginIndex</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Значение индекса первого символа в диапазоне в объекте TextSnapshot.
	 
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">endIndex</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Значение индекса последнего символа в диапазоне в объекте TextSnapshot.
	 
 	 </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Возвращает массив объектов, содержащий сведения о непрерывной последовательности текста. Каждый объект соответствует одному символу из диапазона, заданного двумя параметрами метода. 
	 
	 <p class="- topic/p "><b class="+ topic/ph hi-d/b ">Примечание. </b> При использовании метода <codeph class="+ topic/ph pr-d/codeph ">getTextRunInfo()</codeph> для большого диапазона текста может быть возвращен большой объект. Adobe рекомендует ограничивать диапазон текста параметрами <codeph class="+ topic/ph pr-d/codeph ">beginIndex</codeph> и <codeph class="+ topic/ph pr-d/codeph ">endIndex</codeph>. </p>
	 
	 </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.geom.xml#Matrix" class="- topic/link "><linktext class="- topic/linktext ">Класс Matrix</linktext></link></related-links></apiOperation><apiOperation id="flash.text:TextSnapshot:getText" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">getText</apiName><shortdesc class="- topic/shortdesc ">
	 Возвращает строку, содержащую все символы, заданные параметрами beginIndex и endIndex.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9." class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">TextSnapshot.getText, getText
	  
	  </keyword></asCustoms></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Строка, содержащая символы заданного диапазона, или пустая строка, если в этом диапазоне нет символов.
	 
	 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">beginIndex</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Указывает позицию первого символа, который должен быть включен в возвращаемую строку. Действительные значения параметра <codeph class="+ topic/ph pr-d/codeph ">beginIndex</codeph> лежат в диапазоне от <codeph class="+ topic/ph pr-d/codeph ">0</codeph> до <codeph class="+ topic/ph pr-d/codeph ">charCount - 1</codeph>. Если в качестве <codeph class="+ topic/ph pr-d/codeph ">beginIndex</codeph> выбрано отрицательное значение, используется <codeph class="+ topic/ph pr-d/codeph ">0 </codeph>.
	 
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">endIndex</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Значение, которое на одну единицу больше индекса последнего рассматриваемого символа. Действительные значения параметра <codeph class="+ topic/ph pr-d/codeph ">endIndex</codeph> лежат в диапазоне от <codeph class="+ topic/ph pr-d/codeph ">0</codeph> до <codeph class="+ topic/ph pr-d/codeph ">charCount</codeph>. Символ, индексированный параметром <codeph class="+ topic/ph pr-d/codeph ">endIndex</codeph>, не включен в извлеченную строку. Если этот параметр пропустить, используется параметр <codeph class="+ topic/ph pr-d/codeph ">charCount</codeph>. Если это значение меньше или равно значению <codeph class="+ topic/ph pr-d/codeph ">beginIndex</codeph>, используется <codeph class="+ topic/ph pr-d/codeph ">beginIndex + 1</codeph>.
	 
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">includeLineEndings</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">false</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Необязательное логическое значение, которое указывает, вставляются символы новой строки (<codeph class="+ topic/ph pr-d/codeph ">true</codeph>) или нет (<codeph class="+ topic/ph pr-d/codeph ">false</codeph>) в возвращаемую строку. Значение по умолчанию <codeph class="+ topic/ph pr-d/codeph ">false</codeph>.
	 
	 </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Возвращает строку, содержащую все символы, заданные параметрами <codeph class="+ topic/ph pr-d/codeph ">beginIndex</codeph> и <codeph class="+ topic/ph pr-d/codeph ">endIndex</codeph>. Если нет выделенных символов, возвращается пустая строка. 
	 
	 <p class="- topic/p ">Чтобы метод вернул все символы, передайте значение <codeph class="+ topic/ph pr-d/codeph ">0</codeph> для <codeph class="+ topic/ph pr-d/codeph ">beginIndex</codeph> и <codeph class="+ topic/ph pr-d/codeph ">charCount</codeph> (или любое очень большое число) для <codeph class="+ topic/ph pr-d/codeph ">endIndex</codeph>. Чтобы метод вернул один символ, передайте значение <codeph class="+ topic/ph pr-d/codeph ">beginIndex + 1</codeph> для параметра <codeph class="+ topic/ph pr-d/codeph ">endIndex</codeph>. </p>
	 
	 <p class="- topic/p ">Если передать значение <codeph class="+ topic/ph pr-d/codeph ">true</codeph> параметру <codeph class="+ topic/ph pr-d/codeph ">includeLineEndings</codeph>, в возвращаемую строку вставляются символы новой строки, где это требуется. В данном случае возвращенная строка может быть длиннее введенного диапазона. Если параметр <codeph class="+ topic/ph pr-d/codeph ">includeLineEndings</codeph> имеет значение <codeph class="+ topic/ph pr-d/codeph ">false</codeph> или опущен, выделенный текст возвращается без дополнительных символов.</p>
	 
	 </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.text.xml#TextSnapshot/charCount" class="- topic/link "><linktext class="- topic/linktext ">flash.text.TextSnapshot.charCount</linktext></link><link href="flash.text.xml#TextSnapshot/getSelectedText()" class="- topic/link "><linktext class="- topic/linktext ">flash.text.TextSnapshot.getSelectedText()</linktext></link></related-links></apiOperation><apiOperation id="flash.text:TextSnapshot:hitTestTextNearPos" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">hitTestTextNearPos</apiName><shortdesc class="- topic/shortdesc ">
	 Позволяет определить, какой символ в пределах объекта TextSnapshot находится в точке с заданными координатами x, y или рядом с ней во фрагменте ролика, содержащем текст в объекте TextSnapshot.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9." class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">TextSnapshot.hitTestTextNearPos, hitTestTextNearPos
	  
	  </keyword></asCustoms></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Число, представляющее значение индекса символа, который находится ближе остальных к заданной точке с координатами <codeph class="+ topic/ph pr-d/codeph ">x</codeph>, <codeph class="+ topic/ph pr-d/codeph ">y</codeph>. Возвращает <codeph class="+ topic/ph pr-d/codeph ">-1</codeph>, если такой символ не найден, либо если шрифт не содержит информации о метриках символа.
	 
	 </apiDesc><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">x</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Число, представляющее координату <codeph class="+ topic/ph pr-d/codeph ">x</codeph> фрагмента ролика, содержащего текст.
	 
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">y</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Число, представляющее координату <codeph class="+ topic/ph pr-d/codeph ">y</codeph> фрагмента ролика, содержащего текст.
	 
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">maxDistance</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Number</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">(Необязательно) число, представляющее максимальное расстояние от точки с координатами <codeph class="+ topic/ph pr-d/codeph ">x</codeph>, <codeph class="+ topic/ph pr-d/codeph ">y</codeph>, на котором может выполняться поиск текста. Расстояние отмеряется от центральной точки каждого символа. По умолчанию используется значение <codeph class="+ topic/ph pr-d/codeph ">0</codeph>.
	 
	 </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Позволяет определить, какой символ в пределах объекта TextSnapshot находится в точке с заданными координатами <codeph class="+ topic/ph pr-d/codeph ">x</codeph>, <codeph class="+ topic/ph pr-d/codeph ">y</codeph> или рядом с ней во фрагменте ролика, содержащем текст в объекте TextSnapshot.
	 
	 <p class="- topic/p ">Если опустить свойство <codeph class="+ topic/ph pr-d/codeph ">maxDistance</codeph> или передать ему значение <codeph class="+ topic/ph pr-d/codeph ">0</codeph>, место, заданное координатами <codeph class="+ topic/ph pr-d/codeph ">x</codeph>, <codeph class="+ topic/ph pr-d/codeph ">y</codeph>, может находится внутри ограничительного блока объекта TextSnapshot. 
	 </p>
	 
	 <p class="- topic/p ">Этот метод работает правильно только с шрифтами, включающими информацию о метриках символа. Однако по умолчанию инструмент разработки Flash не включает эту информацию для статически текстовых полей. <ph outputclass="flashonly" class="- topic/ph ">По этой причине метод может вернуть <codeph class="+ topic/ph pr-d/codeph ">-1</codeph> вместо значения индекса. Чтобы гарантировать возврат значения индекса, можно заставить инструмент разработки Flash включать для шрифта информацию о метриках символов. Для этого нужно добавить динамическое текстовое поле, использующее данный шрифт, выбрать параметры символа для этого поля и затем указать, что контуры шрифта, должны быть встроены хотя бы для одного символа. (Не имеет значения, какие заданы символы и используются ли они в статическом текстовом поле.)</ph></p>
	 
	 </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.display.xml#DisplayObject/x" class="- topic/link "><linktext class="- topic/linktext ">flash.display.DisplayObject.x</linktext></link><link href="flash.display.xml#DisplayObject/y" class="- topic/link "><linktext class="- topic/linktext ">flash.display.DisplayObject.y</linktext></link></related-links></apiOperation><apiOperation id="flash.text:TextSnapshot:setSelectColor" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">setSelectColor</apiName><shortdesc class="- topic/shortdesc ">
	 Задает цвет для выделения символов, выбранных с помощью метода setSelected().</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9." class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">TextSnapshot.setSelectColor, setSelectColor
	  
	  </keyword></asCustoms></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">hexColor</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">uint</apiOperationClassifier><apiData class="- topic/ph reference/ph apiRef/apiData ">0xFFFF00</apiData><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Шестнадцатеричное значение цвета, используемый для рамки вокруг символов, выбранных соответствующей командой <codeph class="+ topic/ph pr-d/codeph ">setSelected()</codeph> (0x<i class="+ topic/ph hi-d/i ">RRGGBB</i>).
	 
	 </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Задает цвет для выделения символов, выбранных с помощью метода <codeph class="+ topic/ph pr-d/codeph ">setSelected()</codeph>. Цвет всегда непрозрачный. Значение прозрачности задать нельзя.
	 
	 <p class="- topic/p ">Этот метод работает правильно только с шрифтами, включающими информацию о метриках символа. Однако по умолчанию инструмент разработки Flash не включает эту информацию для статически текстовых полей. По этой причине метод может вернуть <codeph class="+ topic/ph pr-d/codeph ">-1</codeph> вместо значения индекса. <ph outputclass="flashonly" class="- topic/ph ">Чтобы гарантировать возврат значения индекса, можно заставить инструмент разработки Flash включать для шрифта информацию о метриках символов. Для этого нужно добавить динамическое текстовое поле, использующее данный шрифт, выбрать параметры символа для этого поля и затем указать, что контуры шрифта, должны быть встроены хотя бы для одного символа. (Не имеет значения, какие заданы символы и используются ли они в статическом текстовом поле.)</ph></p>	 
	 </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.text.xml#TextSnapshot/setSelected()" class="- topic/link "><linktext class="- topic/linktext ">flash.text.TextSnapshot.setSelected()</linktext></link></related-links></apiOperation><apiOperation id="flash.text:TextSnapshot:setSelected" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">setSelected</apiName><shortdesc class="- topic/shortdesc ">
	 Задает диапазон символов в объекте TextSnapshot для выбора или отмены выбора.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9." class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">TextSnapshot.setSelected, setSelected
	  
	  </keyword></asCustoms></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">beginIndex</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Указывает позицию первого символа для выделения. Действительные значения параметра <codeph class="+ topic/ph pr-d/codeph ">beginIndex</codeph> лежат в диапазоне от <codeph class="+ topic/ph pr-d/codeph ">0</codeph> до <codeph class="+ topic/ph pr-d/codeph ">charCount - 1</codeph>. Если в качестве <codeph class="+ topic/ph pr-d/codeph ">beginIndex</codeph> выбрано отрицательное значение, используется <codeph class="+ topic/ph pr-d/codeph ">0 </codeph>.
	 
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">endIndex</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">int</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Целое число, которое на одну единицу больше индекса последнего рассматриваемого символа. Действительные значения параметра <codeph class="+ topic/ph pr-d/codeph ">end</codeph> лежат в диапазоне от <codeph class="+ topic/ph pr-d/codeph ">0</codeph> до <codeph class="+ topic/ph pr-d/codeph ">charCount</codeph>. Символ, индексированный параметром <codeph class="+ topic/ph pr-d/codeph ">end</codeph>, не включен в извлеченную строку. Если этот параметр пропущен, используется <codeph class="+ topic/ph pr-d/codeph ">TextSnapshot.charCount</codeph>. Если значение <codeph class="+ topic/ph pr-d/codeph ">endIndex</codeph> меньше или равно значению <codeph class="+ topic/ph pr-d/codeph ">beginIndex</codeph>, используется <codeph class="+ topic/ph pr-d/codeph ">beginIndex + 1</codeph>.
	 
	 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">select</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Boolean</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Логическое значение, указывающее, должен текст выделяться (<codeph class="+ topic/ph pr-d/codeph ">true</codeph>) или нет (<codeph class="+ topic/ph pr-d/codeph ">false</codeph>).
	 
	 </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Задает диапазон символов в объекте TextSnapshot для выбора или отмены выбора. Выделенные символы помечаются цветным фоном по размеру их ограничительного блока. Цвет ограничительного блока определяется методом <codeph class="+ topic/ph pr-d/codeph ">setSelectColor()</codeph>.
	 
	 <p class="- topic/p ">Чтобы метод выделил все символы или отменил выделение всех символом, передайте значение <codeph class="+ topic/ph pr-d/codeph ">0</codeph> для <codeph class="+ topic/ph pr-d/codeph ">beginIndex</codeph> и <codeph class="+ topic/ph pr-d/codeph ">charCount</codeph> (или любое очень большое число) для <codeph class="+ topic/ph pr-d/codeph ">endIndex</codeph>. Чтобы задать один символ, передайте значение <codeph class="+ topic/ph pr-d/codeph ">beginIndex + 1</codeph> для параметра <codeph class="+ topic/ph pr-d/codeph ">endIndex</codeph>. </p>
	 
	 <p class="- topic/p ">Так как символы помечаются или выделяются по отдельности, этот метод можно вызывать несколько раз для выделения нескольких символов. Другими словами, этот метод не отменяет выделение с других, уже обработанных им символов.</p>
	 
	 <p class="- topic/p ">Цветной прямоугольник, обозначающий выделение, отображается только для шрифтов, содержащих информацию о метриках символов. По умолчанию Flash не включает эту информацию для статических текстовых полей. В некоторых случаях такое поведение приводит к тому, что выбранный текст не имеет признаков выделения на экране. <ph outputclass="flashonly" class="- topic/ph ">Чтобы весь выбранный текст был соответствующим образом выделен, необходимо заставить инструмент разработки Flash включать для шрифта информацию о метриках символов. Для этого нужно добавить динамическое текстовое поле, использующее данный шрифт, выбрать параметры символа для этого поля и затем указать, что контуры шрифта, должны быть встроены хотя бы для одного символа. Не имеет значения, какие заданы символы и используются ли они в статическом текстовом поле.</ph></p>
	 
	 </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="flash.text.xml#TextSnapshot/charCount" class="- topic/link "><linktext class="- topic/linktext ">flash.text.TextSnapshot.charCount</linktext></link><link href="flash.text.xml#TextSnapshot/setSelectColor()" class="- topic/link "><linktext class="- topic/linktext ">flash.text.TextSnapshot.setSelectColor()</linktext></link></related-links></apiOperation><apiValue id="flash.text:TextSnapshot:charCount:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">charCount</apiName><shortdesc class="- topic/shortdesc ">
	 Число знаков в объекте TextSnapshot.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata><asCustoms class="+ topic/metadata adobe-api-d/asCustoms "><keyword class="- topic/keyword ">TextSnapshot.charCount, charCount, count
	  
	  </keyword></asCustoms></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">int</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	 Число знаков в объекте TextSnapshot.
	 
	 </apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.xml#TextSnapshot/getText()" class="- topic/link "><linktext class="- topic/linktext ">flash.text.TextSnapshot.getText()</linktext></link></related-links></apiValue></apiClassifier><apiClassifier languages="" id="flash.text:TextFieldAutoSize" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">TextFieldAutoSize</apiName><shortdesc class="- topic/shortdesc ">
Класс TextFieldAutoSize является перечислением значений констант, с помощью которых задается свойство autoSize класса TextField.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
Класс TextFieldAutoSize является перечислением значений констант, с помощью которых задается свойство <codeph class="+ topic/ph pr-d/codeph ">autoSize</codeph> класса TextField. 

</apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.text.xml#TextField/autoSize" class="- topic/link "><linktext class="- topic/linktext ">flash.text.TextField.autoSize</linktext></link></related-links><apiValue id="flash.text:TextFieldAutoSize:CENTER" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">CENTER</apiName><shortdesc class="- topic/shortdesc "> 
	Показывает, что текст должен обрабатываться как текст с выравниванием по центру.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">center</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	Показывает, что текст должен обрабатываться как текст с выравниванием по центру. Изменение размера единственной строки в текстовом поле равномерно распределяется влево и вправо. 
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.text:TextFieldAutoSize:LEFT" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">LEFT</apiName><shortdesc class="- topic/shortdesc "> 
	Показывает, что текст должен обрабатываться как текст с выравниванием по левому краю, т.е. с фиксацией левой стороны текстового поля и изменением размеров одинарной строки только по правой стороне.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">left</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	Показывает, что текст должен обрабатываться как текст с выравниванием по левому краю, т. е. с фиксацией левой стороны текстового поля и изменением размеров одинарной строки только по правой стороне. 
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.text:TextFieldAutoSize:NONE" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">NONE</apiName><shortdesc class="- topic/shortdesc "> 
	
	Показывает, что размеры не изменяются.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">none</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	
	Показывает, что размеры не изменяются.
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.text:TextFieldAutoSize:RIGHT" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">RIGHT</apiName><shortdesc class="- topic/shortdesc "> 
	Показывает, что текст должен обрабатываться как текст с выравниванием по правому краю, т.е. с фиксацией правой стороны текстового поля и изменением размеров одинарной строки только по правой стороне.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">right</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	Показывает, что текст должен обрабатываться как текст с выравниванием по правому краю, т. е. с фиксацией правой стороны текстового поля и изменением размеров одинарной строки только по правой стороне. 
	
	</apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.text:TextFieldType" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">TextFieldType</apiName><shortdesc class="- topic/shortdesc ">
Класс TextFieldType является перечислением значений констант, с помощью которых задается свойство type класса TextField.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
Класс TextFieldType является перечислением значений констант, с помощью которых задается свойство <codeph class="+ topic/ph pr-d/codeph ">type</codeph> класса TextField. 


</apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.text.xml#TextField/type" class="- topic/link "><linktext class="- topic/linktext ">flash.text.TextField.type</linktext></link></related-links><apiValue id="flash.text:TextFieldType:DYNAMIC" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">DYNAMIC</apiName><shortdesc class="- topic/shortdesc "> 
	Используется для задания объекта TextField dynamic.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">dynamic</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	Используется для задания объекта TextField <codeph class="+ topic/ph pr-d/codeph ">dynamic</codeph>. 
	
	</apiDesc></apiValueDetail></apiValue><apiValue id="flash.text:TextFieldType:INPUT" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">INPUT</apiName><shortdesc class="- topic/shortdesc "> 
	Используется для задания TextField input.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/><apiPlatform description="" name="Lite" version="4" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">input</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	Используется для задания TextField <codeph class="+ topic/ph pr-d/codeph ">input</codeph>. 
	
	</apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier languages="" id="flash.text:FontStyle" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">FontStyle</apiName><shortdesc class="- topic/shortdesc ">
Класс FontStyle передает значения для класса TextRenderer.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiFinal class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiFinal "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">Object</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
Класс FontStyle передает значения для класса TextRenderer.

</apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="flash.text.xml#TextRenderer" class="- topic/link "><linktext class="- topic/linktext ">flash.text.TextRenderer</linktext></link></related-links><apiValue id="flash.text:FontStyle:BOLD_ITALIC" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">BOLD_ITALIC</apiName><shortdesc class="- topic/shortdesc ">
    Задает комбинированный (полужирный и курсивный) стиль шрифта для параметра fontStyle метода setAdvancedAntiAliasingTable().</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">boldItalic</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Задает комбинированный (полужирный и курсивный) стиль шрифта для параметра <codeph class="+ topic/ph pr-d/codeph ">fontStyle</codeph> метода <codeph class="+ topic/ph pr-d/codeph ">setAdvancedAntiAliasingTable()</codeph>. Используйте синтаксис <codeph class="+ topic/ph pr-d/codeph ">FontStyle.BOLD_ITALIC</codeph>.
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.xml#TextRenderer/setAdvancedAntiAliasingTable()" class="- topic/link "><linktext class="- topic/linktext ">flash.text.TextRenderer.setAdvancedAntiAliasingTable()</linktext></link></related-links></apiValue><apiValue id="flash.text:FontStyle:BOLD" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">BOLD</apiName><shortdesc class="- topic/shortdesc ">
    Задает полужирный стиль шрифта для параметра fontStyle метода setAdvancedAntiAliasingTable().</shortdesc><prolog class="- topic/prolog "><author class="- topic/author ">Bob Pappas
	</author><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">bold</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Задает полужирный стиль шрифта для параметра <codeph class="+ topic/ph pr-d/codeph ">fontStyle</codeph> метода <codeph class="+ topic/ph pr-d/codeph ">setAdvancedAntiAliasingTable()</codeph>. Используйте синтаксис <codeph class="+ topic/ph pr-d/codeph ">FontStyle.BOLD</codeph>.
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.xml#TextRenderer/setAdvancedAntiAliasingTable()" class="- topic/link "><linktext class="- topic/linktext ">flash.text.TextRenderer.setAdvancedAntiAliasingTable()</linktext></link></related-links></apiValue><apiValue id="flash.text:FontStyle:ITALIC" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">ITALIC</apiName><shortdesc class="- topic/shortdesc ">
    Задает курсив для значения параметра fontStyle метода setAdvancedAntiAliasingTable().</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">italic</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Задает курсив для значения параметра <codeph class="+ topic/ph pr-d/codeph ">fontStyle</codeph> метода <codeph class="+ topic/ph pr-d/codeph ">setAdvancedAntiAliasingTable()</codeph>. Используйте синтаксис <codeph class="+ topic/ph pr-d/codeph ">FontStyle.ITALIC</codeph>.
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.xml#TextRenderer/setAdvancedAntiAliasingTable()" class="- topic/link "><linktext class="- topic/linktext ">flash.text.TextRenderer.setAdvancedAntiAliasingTable()</linktext></link></related-links></apiValue><apiValue id="flash.text:FontStyle:REGULAR" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">REGULAR</apiName><shortdesc class="- topic/shortdesc ">
    Задает простой стиль шрифта для параметра fontStyle метода setAdvancedAntiAliasingTable().</shortdesc><prolog class="- topic/prolog "><author class="- topic/author ">Bob Pappas
	</author><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="Flash" version="9" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiData class="- topic/ph reference/ph apiRef/apiData ">regular</apiData><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
    Задает простой стиль шрифта для параметра <codeph class="+ topic/ph pr-d/codeph ">fontStyle</codeph> метода <codeph class="+ topic/ph pr-d/codeph ">setAdvancedAntiAliasingTable()</codeph>. Используйте синтаксис <codeph class="+ topic/ph pr-d/codeph ">FontStyle.REGULAR</codeph>. 
	</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="flash.text.xml#TextRenderer/setAdvancedAntiAliasingTable()" class="- topic/link "><linktext class="- topic/linktext ">flash.text.TextRenderer.setAdvancedAntiAliasingTable()</linktext></link></related-links></apiValue></apiClassifier></apiPackage>